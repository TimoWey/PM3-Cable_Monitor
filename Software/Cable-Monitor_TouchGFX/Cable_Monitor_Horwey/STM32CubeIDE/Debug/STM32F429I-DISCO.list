
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002abcc  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017530  0802ad7c  0802ad7c  0003ad7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  080422ac  080422ac  000522ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  08044fec  08044fec  00054fec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000674  0804515c  0804515c  0005515c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  080457d0  080457d0  000557d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0815e800  0815e800  00170168  2**0
                  CONTENTS
  8 .ARM          00000008  0815e800  0815e800  0016e800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0815e808  0815e808  00170168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0815e808  0815e808  0016e808  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0815e81c  0815e81c  0016e81c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  0815e820  00170000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001394c  20000168  0815e988  00170168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013ab4  0815e988  00173ab4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00170168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00180000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00170198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009b98d  00000000  00000000  001702ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0020bc57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00292faf  00000000  00000000  0020bcea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000328ee  00000000  00000000  0049ec99  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004800  00000000  00000000  004d1588  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0012088f  00000000  00000000  004d5d88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000801a  00000000  00000000  005f6617  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 000327e0  00000000  00000000  005fe631  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003c7cc  00000000  00000000  00630e11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d378  00000000  00000000  0066d5e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  0067a958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0067dcd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802ad64 	.word	0x0802ad64

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802ad64 	.word	0x0802ad64

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fc53 	bl	8008f20 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f029 fdf7 	bl	802a26c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fe8f 	bl	80013a0 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	0815e820 	.word	0x0815e820
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	20013ab4 	.word	0x20013ab4

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006a0:	4770      	bx	lr
 80006a2:	bf00      	nop

080006a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80006a6:	f000 fbab 	bl	8000e00 <touchgfx_components_init>
  touchgfx_init();
}
 80006aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80006ae:	f000 bb33 	b.w	8000d18 <touchgfx_init>
 80006b2:	bf00      	nop

080006b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80006b4:	f000 bba6 	b.w	8000e04 <touchgfx_taskEntry>

080006b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006b8:	4770      	bx	lr

080006ba <_ZN20STM32TouchControllerD0Ev>:
 80006ba:	b510      	push	{r4, lr}
 80006bc:	2104      	movs	r1, #4
 80006be:	4604      	mov	r4, r0
 80006c0:	f028 fcbd 	bl	802903e <_ZdlPvj>
 80006c4:	4620      	mov	r0, r4
 80006c6:	bd10      	pop	{r4, pc}

080006c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006ca:	4b0c      	ldr	r3, [pc, #48]	; (80006fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006cc:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006d0:	4b0c      	ldr	r3, [pc, #48]	; (8000704 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80006d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d6:	6863      	ldr	r3, [r4, #4]
 80006d8:	4798      	blx	r3
 80006da:	f640 0311 	movw	r3, #2065	; 0x811
 80006de:	4298      	cmp	r0, r3
 80006e0:	d10a      	bne.n	80006f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006e2:	4d09      	ldr	r5, [pc, #36]	; (8000708 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e8:	2082      	movs	r0, #130	; 0x82
 80006ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006ec:	682b      	ldr	r3, [r5, #0]
 80006ee:	2082      	movs	r0, #130	; 0x82
 80006f0:	68db      	ldr	r3, [r3, #12]
 80006f2:	4798      	blx	r3
 80006f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80006f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80006f8:	2001      	movs	r0, #1
 80006fa:	e7fc      	b.n	80006f6 <_Z11BSP_TS_Inittt+0x2e>
 80006fc:	20000184 	.word	0x20000184
 8000700:	20000050 	.word	0x20000050
 8000704:	20000186 	.word	0x20000186
 8000708:	20000188 	.word	0x20000188

0800070c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800070c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000710:	20f0      	movs	r0, #240	; 0xf0
 8000712:	f7ff bfd9 	b.w	80006c8 <_Z11BSP_TS_Inittt>
	...

08000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800071a:	4d33      	ldr	r5, [pc, #204]	; (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800071c:	682b      	ldr	r3, [r5, #0]
{
 800071e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000720:	691b      	ldr	r3, [r3, #16]
 8000722:	2082      	movs	r0, #130	; 0x82
 8000724:	4798      	blx	r3
 8000726:	b280      	uxth	r0, r0
 8000728:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800072a:	2800      	cmp	r0, #0
 800072c:	d04a      	beq.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800072e:	682b      	ldr	r3, [r5, #0]
 8000730:	f10d 0206 	add.w	r2, sp, #6
 8000734:	695b      	ldr	r3, [r3, #20]
 8000736:	a901      	add	r1, sp, #4
 8000738:	2082      	movs	r0, #130	; 0x82
 800073a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800073c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000740:	f640 6274 	movw	r2, #3700	; 0xe74
 8000744:	4293      	cmp	r3, r2
 8000746:	d93f      	bls.n	80007c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000748:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800074c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000750:	1ad2      	subs	r2, r2, r3
 8000752:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000754:	2a0a      	cmp	r2, #10
 8000756:	d93d      	bls.n	80007d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000758:	230b      	movs	r3, #11
 800075a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075e:	4b23      	ldr	r3, [pc, #140]	; (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000760:	881b      	ldrh	r3, [r3, #0]
 8000762:	429a      	cmp	r2, r3
 8000764:	d901      	bls.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000766:	3b01      	subs	r3, #1
 8000768:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800076a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000772:	428b      	cmp	r3, r1
 8000774:	d830      	bhi.n	80007d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000776:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800077a:	330e      	adds	r3, #14
 800077c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800077e:	210f      	movs	r1, #15
 8000780:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000784:	491a      	ldr	r1, [pc, #104]	; (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000786:	8809      	ldrh	r1, [r1, #0]
 8000788:	428b      	cmp	r3, r1
 800078a:	d901      	bls.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800078c:	3901      	subs	r1, #1
 800078e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000790:	4e18      	ldr	r6, [pc, #96]	; (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000792:	4d19      	ldr	r5, [pc, #100]	; (80007f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000794:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000796:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000798:	4283      	cmp	r3, r0
 800079a:	b281      	uxth	r1, r0
 800079c:	bf8c      	ite	hi
 800079e:	1a59      	subhi	r1, r3, r1
 80007a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007a2:	b2b8      	uxth	r0, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1a10      	subhi	r0, r2, r0
 80007aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80007b0:	4401      	add	r1, r0
 80007b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b4:	bfc8      	it	gt
 80007b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80007ba:	bfc8      	it	gt
 80007bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80007be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c4:	b003      	add	sp, #12
 80007c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80007c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80007ca:	bf9c      	itt	ls
 80007cc:	23b4      	movls	r3, #180	; 0xb4
 80007ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80007d2:	e7bb      	b.n	800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80007d4:	2200      	movs	r2, #0
 80007d6:	e7c8      	b.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80007d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80007dc:	3308      	adds	r3, #8
 80007de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007e0:	2b0e      	cmp	r3, #14
 80007e2:	d8cc      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80007e4:	2300      	movs	r3, #0
 80007e6:	e7d3      	b.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80007e8:	20000188 	.word	0x20000188
 80007ec:	20000186 	.word	0x20000186
 80007f0:	20000184 	.word	0x20000184
 80007f4:	2000018c 	.word	0x2000018c
 80007f8:	20000190 	.word	0x20000190

080007fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fe:	4668      	mov	r0, sp
{
 8000800:	460d      	mov	r5, r1
 8000802:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000804:	f7ff ff88 	bl	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000808:	f8bd 0000 	ldrh.w	r0, [sp]
 800080c:	b148      	cbz	r0, 8000822 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800080e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000812:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000814:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000818:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800081a:	4b03      	ldr	r3, [pc, #12]	; (8000828 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800081c:	223c      	movs	r2, #60	; 0x3c
 800081e:	601a      	str	r2, [r3, #0]
        return true;
 8000820:	2001      	movs	r0, #1
}
 8000822:	b003      	add	sp, #12
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop
 8000828:	20000014 	.word	0x20000014

0800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800082c:	b110      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800082e:	2802      	cmp	r0, #2
 8000830:	d009      	beq.n	8000846 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000832:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000834:	4b07      	ldr	r3, [pc, #28]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000836:	681a      	ldr	r2, [r3, #0]
 8000838:	fab2 f282 	clz	r2, r2
 800083c:	0952      	lsrs	r2, r2, #5
 800083e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000840:	4805      	ldr	r0, [pc, #20]	; (8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000842:	f008 be09 	b.w	8009458 <HAL_GPIO_WritePin>
 8000846:	4b03      	ldr	r3, [pc, #12]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000848:	689a      	ldr	r2, [r3, #8]
 800084a:	fab2 f282 	clz	r2, r2
 800084e:	0952      	lsrs	r2, r2, #5
 8000850:	2110      	movs	r1, #16
 8000852:	e7f5      	b.n	8000840 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000854:	20000194 	.word	0x20000194
 8000858:	40021000 	.word	0x40021000

0800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800085c:	b110      	cbz	r0, 8000864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800085e:	2802      	cmp	r0, #2
 8000860:	d009      	beq.n	8000876 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000862:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000864:	4b07      	ldr	r3, [pc, #28]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	3a00      	subs	r2, #0
 800086a:	bf18      	it	ne
 800086c:	2201      	movne	r2, #1
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000870:	4805      	ldr	r0, [pc, #20]	; (8000888 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000872:	f008 bdf1 	b.w	8009458 <HAL_GPIO_WritePin>
 8000876:	4b03      	ldr	r3, [pc, #12]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000878:	689a      	ldr	r2, [r3, #8]
 800087a:	3a00      	subs	r2, #0
 800087c:	bf18      	it	ne
 800087e:	2201      	movne	r2, #1
 8000880:	2110      	movs	r1, #16
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000884:	20000194 	.word	0x20000194
 8000888:	40021000 	.word	0x40021000

0800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800088c:	b110      	cbz	r0, 8000894 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800088e:	2802      	cmp	r0, #2
 8000890:	d004      	beq.n	800089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000892:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000894:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000896:	4802      	ldr	r0, [pc, #8]	; (80008a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000898:	f008 bde2 	b.w	8009460 <HAL_GPIO_TogglePin>
 800089c:	2110      	movs	r1, #16
 800089e:	e7fa      	b.n	8000896 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80008a0:	40021000 	.word	0x40021000

080008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008a4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008a6:	b130      	cbz	r0, 80008b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80008a8:	2802      	cmp	r0, #2
 80008aa:	d009      	beq.n	80008c0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80008ac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80008ae:	1e43      	subs	r3, r0, #1
 80008b0:	4258      	negs	r0, r3
 80008b2:	4158      	adcs	r0, r3
 80008b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008b6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008b8:	4802      	ldr	r0, [pc, #8]	; (80008c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80008ba:	f008 fdc7 	bl	800944c <HAL_GPIO_ReadPin>
        break;
 80008be:	e7f6      	b.n	80008ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008c0:	2110      	movs	r1, #16
 80008c2:	e7f9      	b.n	80008b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO4initEv>:
{
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	4d08      	ldr	r5, [pc, #32]	; (80008ec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80008cc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80008ce:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80008d0:	b2e0      	uxtb	r0, r4
 80008d2:	f7ff ffe7 	bl	80008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80008d6:	b118      	cbz	r0, 80008e0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80008dc:	bf18      	it	ne
 80008de:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80008e0:	3401      	adds	r4, #1
 80008e2:	2c05      	cmp	r4, #5
 80008e4:	f105 0504 	add.w	r5, r5, #4
 80008e8:	d1f2      	bne.n	80008d0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80008ea:	bd70      	pop	{r4, r5, r6, pc}
 80008ec:	20000194 	.word	0x20000194

080008f0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80008f0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80008f2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80008f6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80008fa:	4770      	bx	lr

080008fc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008fc:	2000      	movs	r0, #0
 80008fe:	4770      	bx	lr

08000900 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000900:	4b03      	ldr	r3, [pc, #12]	; (8000910 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000902:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000904:	3900      	subs	r1, #0
 8000906:	bf18      	it	ne
 8000908:	2101      	movne	r1, #1
 800090a:	7019      	strb	r1, [r3, #0]
    }
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20012e7b 	.word	0x20012e7b

08000914 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000914:	2000      	movs	r0, #0
 8000916:	4770      	bx	lr

08000918 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000918:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800091a:	b10b      	cbz	r3, 8000920 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800091c:	4608      	mov	r0, r1
 800091e:	4718      	bx	r3
        }
    }
 8000920:	4770      	bx	lr

08000922 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000922:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000926:	4770      	bx	lr

08000928 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000928:	6840      	ldr	r0, [r0, #4]
 800092a:	6803      	ldr	r3, [r0, #0]
 800092c:	699b      	ldr	r3, [r3, #24]
 800092e:	4718      	bx	r3

08000930 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000930:	4770      	bx	lr

08000932 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000932:	4770      	bx	lr

08000934 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000934:	4770      	bx	lr
	...

08000938 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000938:	b510      	push	{r4, lr}
 800093a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800093c:	f000 fb4e 	bl	8000fdc <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	4903      	ldr	r1, [pc, #12]	; (8000950 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000944:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000948:	4620      	mov	r0, r4
}
 800094a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800094e:	4718      	bx	r3
 8000950:	d0000000 	.word	0xd0000000

08000954 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000954:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000956:	6803      	ldr	r3, [r0, #0]
{
 8000958:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800095a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800095e:	4798      	blx	r3
    enableInterrupts();
 8000960:	6823      	ldr	r3, [r4, #0]
 8000962:	4620      	mov	r0, r4
 8000964:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000966:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000968:	f000 f8ec 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	4620      	mov	r0, r4
 8000970:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000972:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000974:	2029      	movs	r0, #41	; 0x29
 8000976:	f001 f81b 	bl	80019b0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800097a:	f000 f8e3 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	4620      	mov	r0, r4
 8000982:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000984:	4798      	blx	r3
    for (;;)
 8000986:	e7f8      	b.n	800097a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000988 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800098c:	f010 f872 	bl	8010a74 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	4620      	mov	r0, r4
 8000994:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800099c:	4718      	bx	r3

0800099e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800099e:	f000 bb0f 	b.w	8000fc0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009a2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009a2:	f000 bb13 	b.w	8000fcc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080009a6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80009a6:	f000 bb37 	b.w	8001018 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080009aa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80009aa:	f000 badf 	b.w	8000f6c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080009ae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80009ae:	f000 bae5 	b.w	8000f7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080009b2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80009b2:	f000 bb3d 	b.w	8001030 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080009b6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80009b6:	f000 bae9 	b.w	8000f8c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080009ba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009ba:	f00f bac7 	b.w	800ff4c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009be <_ZN11TouchGFXHALD0Ev>:
 80009be:	b510      	push	{r4, lr}
 80009c0:	217c      	movs	r1, #124	; 0x7c
 80009c2:	4604      	mov	r4, r0
 80009c4:	f028 fb3b 	bl	802903e <_ZdlPvj>
 80009c8:	4620      	mov	r0, r4
 80009ca:	bd10      	pop	{r4, pc}

080009cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009cc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80009d0:	b11b      	cbz	r3, 80009da <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009d2:	6840      	ldr	r0, [r0, #4]
 80009d4:	6803      	ldr	r3, [r0, #0]
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4718      	bx	r3
    }
 80009da:	4618      	mov	r0, r3
 80009dc:	4770      	bx	lr
	...

080009e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009e0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009e2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009e6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80009ea:	4b0c      	ldr	r3, [pc, #48]	; (8000a1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009ec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009ee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009f0:	d009      	beq.n	8000a06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009f2:	b93a      	cbnz	r2, 8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f4:	4a0a      	ldr	r2, [pc, #40]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009f6:	490b      	ldr	r1, [pc, #44]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009fa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a02:	701a      	strb	r2, [r3, #0]
    }
 8000a04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a06:	2a00      	cmp	r2, #0
 8000a08:	d0fc      	beq.n	8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0a:	4a05      	ldr	r2, [pc, #20]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a0c:	4905      	ldr	r1, [pc, #20]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a16:	2200      	movs	r2, #0
 8000a18:	e7f3      	b.n	8000a02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a1a:	bf00      	nop
 8000a1c:	20012e74 	.word	0x20012e74
 8000a20:	20012e70 	.word	0x20012e70
 8000a24:	20012e72 	.word	0x20012e72

08000a28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a28:	b570      	push	{r4, r5, r6, lr}
 8000a2a:	460d      	mov	r5, r1
 8000a2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a2e:	b935      	cbnz	r5, 8000a3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a30:	4b09      	ldr	r3, [pc, #36]	; (8000a58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a32:	4a0a      	ldr	r2, [pc, #40]	; (8000a5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a34:	480a      	ldr	r0, [pc, #40]	; (8000a60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000a3a:	f029 f913 	bl	8029c64 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a42:	4b08      	ldr	r3, [pc, #32]	; (8000a64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a44:	3a00      	subs	r2, #0
 8000a46:	bf18      	it	ne
 8000a48:	2201      	movne	r2, #1
 8000a4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a4c:	6803      	ldr	r3, [r0, #0]
    }
 8000a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a56:	4718      	bx	r3
 8000a58:	0802add4 	.word	0x0802add4
 8000a5c:	0802ae0c 	.word	0x0802ae0c
 8000a60:	0802ae5a 	.word	0x0802ae5a
 8000a64:	20012e7a 	.word	0x20012e7a

08000a68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a6a:	4b09      	ldr	r3, [pc, #36]	; (8000a90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a6c:	881b      	ldrh	r3, [r3, #0]
 8000a6e:	428b      	cmp	r3, r1
 8000a70:	d803      	bhi.n	8000a7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a74:	881b      	ldrh	r3, [r3, #0]
 8000a76:	4293      	cmp	r3, r2
 8000a78:	d905      	bls.n	8000a86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a7a:	4b07      	ldr	r3, [pc, #28]	; (8000a98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a7c:	4a07      	ldr	r2, [pc, #28]	; (8000a9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a7e:	4808      	ldr	r0, [pc, #32]	; (8000aa0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a80:	219e      	movs	r1, #158	; 0x9e
 8000a82:	f029 f8ef 	bl	8029c64 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a86:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a8a:	4b07      	ldr	r3, [pc, #28]	; (8000aa8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a8c:	801a      	strh	r2, [r3, #0]
    }
 8000a8e:	bd08      	pop	{r3, pc}
 8000a90:	20012e70 	.word	0x20012e70
 8000a94:	20012e72 	.word	0x20012e72
 8000a98:	0802ae9f 	.word	0x0802ae9f
 8000a9c:	0802af02 	.word	0x0802af02
 8000aa0:	0802ae5a 	.word	0x0802ae5a
 8000aa4:	20012e76 	.word	0x20012e76
 8000aa8:	20012e78 	.word	0x20012e78

08000aac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000aac:	2101      	movs	r1, #1
{
 8000aae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	4608      	mov	r0, r1
 8000ab4:	f00c f854 	bl	800cb60 <osSemaphoreNew>
 8000ab8:	4b0a      	ldr	r3, [pc, #40]	; (8000ae4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000aba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000abc:	b928      	cbnz	r0, 8000aca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000abe:	4b0a      	ldr	r3, [pc, #40]	; (8000ae8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000ac0:	4a0a      	ldr	r2, [pc, #40]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ac2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ac4:	480a      	ldr	r0, [pc, #40]	; (8000af0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000ac6:	f029 f8cd 	bl	8029c64 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000aca:	2200      	movs	r2, #0
 8000acc:	2104      	movs	r1, #4
 8000ace:	2001      	movs	r0, #1
 8000ad0:	f00c f8fa 	bl	800ccc8 <osMessageQueueNew>
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000ad6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ad8:	b918      	cbnz	r0, 8000ae2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000ada:	4b07      	ldr	r3, [pc, #28]	; (8000af8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000adc:	4a03      	ldr	r2, [pc, #12]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ade:	212c      	movs	r1, #44	; 0x2c
 8000ae0:	e7f0      	b.n	8000ac4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ae2:	bd08      	pop	{r3, pc}
 8000ae4:	200001a8 	.word	0x200001a8
 8000ae8:	0802b020 	.word	0x0802b020
 8000aec:	0802b069 	.word	0x0802b069
 8000af0:	0802b098 	.word	0x0802b098
 8000af4:	200001a4 	.word	0x200001a4
 8000af8:	0802b112 	.word	0x0802b112

08000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000afc:	4b02      	ldr	r3, [pc, #8]	; (8000b08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000afe:	f04f 31ff 	mov.w	r1, #4294967295
 8000b02:	6818      	ldr	r0, [r3, #0]
 8000b04:	f00c b880 	b.w	800cc08 <osSemaphoreAcquire>
 8000b08:	200001a8 	.word	0x200001a8

08000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b0c:	4b01      	ldr	r3, [pc, #4]	; (8000b14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b0e:	6818      	ldr	r0, [r3, #0]
 8000b10:	f00c b8ae 	b.w	800cc70 <osSemaphoreRelease>
 8000b14:	200001a8 	.word	0x200001a8

08000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b18:	4b02      	ldr	r3, [pc, #8]	; (8000b24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b1a:	2100      	movs	r1, #0
 8000b1c:	6818      	ldr	r0, [r3, #0]
 8000b1e:	f00c b873 	b.w	800cc08 <osSemaphoreAcquire>
 8000b22:	bf00      	nop
 8000b24:	200001a8 	.word	0x200001a8

08000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000b28:	f7ff bff0 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b2e:	4904      	ldr	r1, [pc, #16]	; (8000b40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b30:	6800      	ldr	r0, [r0, #0]
 8000b32:	2300      	movs	r3, #0
 8000b34:	461a      	mov	r2, r3
 8000b36:	f00c b901 	b.w	800cd3c <osMessageQueuePut>
 8000b3a:	bf00      	nop
 8000b3c:	200001a4 	.word	0x200001a4
 8000b40:	20000004 	.word	0x20000004

08000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000b44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000b46:	4c08      	ldr	r4, [pc, #32]	; (8000b68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000b48:	2300      	movs	r3, #0
 8000b4a:	461a      	mov	r2, r3
 8000b4c:	a901      	add	r1, sp, #4
 8000b4e:	6820      	ldr	r0, [r4, #0]
 8000b50:	f00c f92a 	bl	800cda8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	f04f 33ff 	mov.w	r3, #4294967295
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	a901      	add	r1, sp, #4
 8000b5e:	f00c f923 	bl	800cda8 <osMessageQueueGet>
}
 8000b62:	b002      	add	sp, #8
 8000b64:	bd10      	pop	{r4, pc}
 8000b66:	bf00      	nop
 8000b68:	200001a4 	.word	0x200001a4

08000b6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000b6c:	4770      	bx	lr

08000b6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000b6e:	2000      	movs	r0, #0
 8000b70:	4770      	bx	lr

08000b72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000b72:	4770      	bx	lr

08000b74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000b74:	4770      	bx	lr

08000b76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000b76:	2000      	movs	r0, #0
 8000b78:	4770      	bx	lr

08000b7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b7a:	4770      	bx	lr

08000b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b7e:	4a03      	ldr	r2, [pc, #12]	; (8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b80:	4b03      	ldr	r3, [pc, #12]	; (8000b90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b82:	4804      	ldr	r0, [pc, #16]	; (8000b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b84:	2122      	movs	r1, #34	; 0x22
 8000b86:	f029 f86d 	bl	8029c64 <__assert_func>
 8000b8a:	bf00      	nop
 8000b8c:	0802b177 	.word	0x0802b177
 8000b90:	0802b154 	.word	0x0802b154
 8000b94:	0802b1b5 	.word	0x0802b1b5

08000b98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b9a:	4a03      	ldr	r2, [pc, #12]	; (8000ba8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b9c:	4b03      	ldr	r3, [pc, #12]	; (8000bac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b9e:	4804      	ldr	r0, [pc, #16]	; (8000bb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000ba0:	2127      	movs	r1, #39	; 0x27
 8000ba2:	f029 f85f 	bl	8029c64 <__assert_func>
 8000ba6:	bf00      	nop
 8000ba8:	0802b22d 	.word	0x0802b22d
 8000bac:	0802b154 	.word	0x0802b154
 8000bb0:	0802b1b5 	.word	0x0802b1b5

08000bb4 <_ZN8STM32DMAD0Ev>:
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	2144      	movs	r1, #68	; 0x44
 8000bb8:	4604      	mov	r4, r0
 8000bba:	f028 fa40 	bl	802903e <_ZdlPvj>
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	bd10      	pop	{r4, pc}
	...

08000bc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000bc4:	b538      	push	{r3, r4, r5, lr}
 8000bc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000bc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bca:	2500      	movs	r5, #0
 8000bcc:	4b06      	ldr	r3, [pc, #24]	; (8000be8 <_ZN8STM32DMAC1Ev+0x24>)
 8000bce:	7225      	strb	r5, [r4, #8]
 8000bd0:	300c      	adds	r0, #12
 8000bd2:	6060      	str	r0, [r4, #4]
 8000bd4:	7265      	strb	r5, [r4, #9]
 8000bd6:	2201      	movs	r2, #1
 8000bd8:	f841 3b20 	str.w	r3, [r1], #32
 8000bdc:	f010 f8a2 	bl	8010d24 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000be0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8000be2:	4620      	mov	r0, r4
 8000be4:	bd38      	pop	{r3, r4, r5, pc}
 8000be6:	bf00      	nop
 8000be8:	0802b274 	.word	0x0802b274

08000bec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000bec:	2001      	movs	r0, #1
 8000bee:	4770      	bx	lr

08000bf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000bf0:	2038      	movs	r0, #56	; 0x38
 8000bf2:	4770      	bx	lr

08000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000bf4:	2338      	movs	r3, #56	; 0x38
 8000bf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bfa:	3008      	adds	r0, #8
 8000bfc:	4770      	bx	lr

08000bfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000bfe:	2338      	movs	r3, #56	; 0x38
 8000c00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c04:	3008      	adds	r0, #8
 8000c06:	4770      	bx	lr

08000c08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c08:	2001      	movs	r0, #1
 8000c0a:	4770      	bx	lr

08000c0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c0c:	f241 30f4 	movw	r0, #5108	; 0x13f4
 8000c10:	4770      	bx	lr

08000c12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c12:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000c16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c1a:	3008      	adds	r0, #8
 8000c1c:	4770      	bx	lr

08000c1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c1e:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000c22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c26:	3008      	adds	r0, #8
 8000c28:	4770      	bx	lr

08000c2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c2a:	2001      	movs	r0, #1
 8000c2c:	4770      	bx	lr

08000c2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c2e:	2010      	movs	r0, #16
 8000c30:	4770      	bx	lr

08000c32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c36:	3008      	adds	r0, #8
 8000c38:	4770      	bx	lr

08000c3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c3e:	3008      	adds	r0, #8
 8000c40:	4770      	bx	lr

08000c42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000c42:	4608      	mov	r0, r1
 8000c44:	f002 be08 	b.w	8003858 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4b03      	ldr	r3, [pc, #12]	; (8000c58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000c4c:	6003      	str	r3, [r0, #0]
 8000c4e:	4604      	mov	r4, r0
 8000c50:	f00e fd05 	bl	800f65e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c54:	4620      	mov	r0, r4
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	0802b32c 	.word	0x0802b32c

08000c5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	4604      	mov	r4, r0
 8000c60:	f7ff fff2 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c64:	4620      	mov	r0, r4
 8000c66:	2140      	movs	r1, #64	; 0x40
 8000c68:	f028 f9e9 	bl	802903e <_ZdlPvj>
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	bd10      	pop	{r4, pc}

08000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c70:	b510      	push	{r4, lr}
 8000c72:	4b03      	ldr	r3, [pc, #12]	; (8000c80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c74:	6003      	str	r3, [r0, #0]
 8000c76:	4604      	mov	r4, r0
 8000c78:	f00e fcf1 	bl	800f65e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	bd10      	pop	{r4, pc}
 8000c80:	0802b2f8 	.word	0x0802b2f8

08000c84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c84:	b510      	push	{r4, lr}
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fff2 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f241 31fc 	movw	r1, #5116	; 0x13fc
 8000c92:	f028 f9d4 	bl	802903e <_ZdlPvj>
 8000c96:	4620      	mov	r0, r4
 8000c98:	bd10      	pop	{r4, pc}
	...

08000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c9c:	b510      	push	{r4, lr}
 8000c9e:	4b03      	ldr	r3, [pc, #12]	; (8000cac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ca0:	6003      	str	r3, [r0, #0]
 8000ca2:	4604      	mov	r4, r0
 8000ca4:	f00e fcdb 	bl	800f65e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	bd10      	pop	{r4, pc}
 8000cac:	0802b2c4 	.word	0x0802b2c4

08000cb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
 8000cb4:	f7ff fff2 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cb8:	4620      	mov	r0, r4
 8000cba:	2118      	movs	r1, #24
 8000cbc:	f028 f9bf 	bl	802903e <_ZdlPvj>
 8000cc0:	4620      	mov	r0, r4
 8000cc2:	bd10      	pop	{r4, pc}

08000cc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <_ZN12FrontendHeapD1Ev+0x28>)
 8000cc8:	6003      	str	r3, [r0, #0]
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8000cd0:	3008      	adds	r0, #8
 8000cd2:	f7ff ffb9 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000cd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000cda:	f7ff ffc9 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cde:	f104 0014 	add.w	r0, r4, #20
 8000ce2:	f7ff ffdb 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}
 8000cea:	bf00      	nop
 8000cec:	0802b360 	.word	0x0802b360

08000cf0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000cf0:	b508      	push	{r3, lr}
 8000cf2:	4802      	ldr	r0, [pc, #8]	; (8000cfc <__tcf_0+0xc>)
 8000cf4:	f7ff ffe6 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000cf8:	bd08      	pop	{r3, pc}
 8000cfa:	bf00      	nop
 8000cfc:	200001b0 	.word	0x200001b0

08000d00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000d00:	b510      	push	{r4, lr}
 8000d02:	4604      	mov	r4, r0
 8000d04:	f7ff ffde 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	f241 51cc 	movw	r1, #5580	; 0x15cc
 8000d0e:	f028 f996 	bl	802903e <_ZdlPvj>
 8000d12:	4620      	mov	r0, r4
 8000d14:	bd10      	pop	{r4, pc}
	...

08000d18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000d18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000d1c:	f001 fb8e 	bl	800243c <_ZN14BitmapDatabase11getInstanceEv>
 8000d20:	4605      	mov	r5, r0
 8000d22:	f001 fb8f 	bl	8002444 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000d26:	2400      	movs	r4, #0
 8000d28:	4601      	mov	r1, r0
 8000d2a:	4623      	mov	r3, r4
 8000d2c:	4628      	mov	r0, r5
 8000d2e:	4622      	mov	r2, r4
 8000d30:	9400      	str	r4, [sp, #0]
 8000d32:	f017 fd0b 	bl	801874c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000d36:	4b26      	ldr	r3, [pc, #152]	; (8000dd0 <touchgfx_init+0xb8>)
 8000d38:	4a26      	ldr	r2, [pc, #152]	; (8000dd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000d3a:	4d27      	ldr	r5, [pc, #156]	; (8000dd8 <touchgfx_init+0xc0>)
 8000d3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000d3e:	4620      	mov	r0, r4
 8000d40:	f007 f95a 	bl	8007ff8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000d44:	4825      	ldr	r0, [pc, #148]	; (8000ddc <touchgfx_init+0xc4>)
 8000d46:	f017 fc69 	bl	801861c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000d4a:	682b      	ldr	r3, [r5, #0]
 8000d4c:	f3bf 8f5b 	dmb	ish
 8000d50:	07db      	lsls	r3, r3, #31
 8000d52:	d436      	bmi.n	8000dc2 <touchgfx_init+0xaa>
 8000d54:	4628      	mov	r0, r5
 8000d56:	f028 f974 	bl	8029042 <__cxa_guard_acquire>
 8000d5a:	b390      	cbz	r0, 8000dc2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000d5c:	4c20      	ldr	r4, [pc, #128]	; (8000de0 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8000d5e:	4f21      	ldr	r7, [pc, #132]	; (8000de4 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000d60:	4b21      	ldr	r3, [pc, #132]	; (8000de8 <touchgfx_init+0xd0>)
 8000d62:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000d64:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 8000d68:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000d6c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000d70:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000d72:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000d76:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000d78:	6126      	str	r6, [r4, #16]
 8000d7a:	f00e fc71 	bl	800f660 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d7e:	4b1b      	ldr	r3, [pc, #108]	; (8000dec <touchgfx_init+0xd4>)
 8000d80:	6163      	str	r3, [r4, #20]
 8000d82:	4640      	mov	r0, r8
 8000d84:	f00e fc6c 	bl	800f660 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d88:	4b19      	ldr	r3, [pc, #100]	; (8000df0 <touchgfx_init+0xd8>)
 8000d8a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000d8c:	4638      	mov	r0, r7
 8000d8e:	f00e fc67 	bl	800f660 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d92:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000d96:	4a17      	ldr	r2, [pc, #92]	; (8000df4 <touchgfx_init+0xdc>)
 8000d98:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 8000d9c:	f503 608d 	add.w	r0, r3, #1128	; 0x468
 8000da0:	f007 fd7e 	bl	80088a0 <_ZN5ModelC1Ev>
 8000da4:	4622      	mov	r2, r4
 8000da6:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000daa:	4630      	mov	r0, r6
 8000dac:	f007 fa7e 	bl	80082ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000db0:	4630      	mov	r0, r6
 8000db2:	f002 fd51 	bl	8003858 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8000db6:	4810      	ldr	r0, [pc, #64]	; (8000df8 <touchgfx_init+0xe0>)
 8000db8:	f028 ff72 	bl	8029ca0 <atexit>
 8000dbc:	4628      	mov	r0, r5
 8000dbe:	f028 f94c 	bl	802905a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000dc2:	480e      	ldr	r0, [pc, #56]	; (8000dfc <touchgfx_init+0xe4>)
}
 8000dc4:	b002      	add	sp, #8
 8000dc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000dca:	f7ff bdb5 	b.w	8000938 <_ZN11TouchGFXHAL10initializeEv>
 8000dce:	bf00      	nop
 8000dd0:	20012ee0 	.word	0x20012ee0
 8000dd4:	20001840 	.word	0x20001840
 8000dd8:	200001ac 	.word	0x200001ac
 8000ddc:	20000008 	.word	0x20000008
 8000de0:	200001b0 	.word	0x200001b0
 8000de4:	200015d8 	.word	0x200015d8
 8000de8:	0802b360 	.word	0x0802b360
 8000dec:	0802b2c4 	.word	0x0802b2c4
 8000df0:	0802b2f8 	.word	0x0802b2f8
 8000df4:	0802b32c 	.word	0x0802b32c
 8000df8:	08000cf1 	.word	0x08000cf1
 8000dfc:	200017c4 	.word	0x200017c4

08000e00 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000e00:	4770      	bx	lr
	...

08000e04 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000e04:	4801      	ldr	r0, [pc, #4]	; (8000e0c <touchgfx_taskEntry+0x8>)
 8000e06:	f7ff bda5 	b.w	8000954 <_ZN11TouchGFXHAL9taskEntryEv>
 8000e0a:	bf00      	nop
 8000e0c:	200017c4 	.word	0x200017c4

08000e10 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000e10:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000e12:	4e22      	ldr	r6, [pc, #136]	; (8000e9c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000e14:	4c22      	ldr	r4, [pc, #136]	; (8000ea0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000e16:	4d23      	ldr	r5, [pc, #140]	; (8000ea4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000e18:	4b23      	ldr	r3, [pc, #140]	; (8000ea8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000e1a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000e1c:	4630      	mov	r0, r6
 8000e1e:	f7ff fed1 	bl	8000bc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000e22:	4628      	mov	r0, r5
 8000e24:	f01b ff5e 	bl	801cce4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000e28:	4b20      	ldr	r3, [pc, #128]	; (8000eac <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e2a:	4821      	ldr	r0, [pc, #132]	; (8000eb0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000e2c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000e2e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000e30:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8000e34:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000e38:	491e      	ldr	r1, [pc, #120]	; (8000eb4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000e3a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8000e3c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000e40:	491d      	ldr	r1, [pc, #116]	; (8000eb8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000e42:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000e44:	491d      	ldr	r1, [pc, #116]	; (8000ebc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000e46:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000e4a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e4c:	21f0      	movs	r1, #240	; 0xf0
 8000e4e:	8001      	strh	r1, [r0, #0]
 8000e50:	481b      	ldr	r0, [pc, #108]	; (8000ec0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000e52:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e54:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e56:	481b      	ldr	r0, [pc, #108]	; (8000ec4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000e58:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e5c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8000e60:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000e64:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000e68:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000e6c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000e70:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000e74:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000e78:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000e7c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8000e80:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8000e82:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e86:	8001      	strh	r1, [r0, #0]
 8000e88:	480f      	ldr	r0, [pc, #60]	; (8000ec8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e8a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e8c:	490f      	ldr	r1, [pc, #60]	; (8000ecc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e8e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e90:	2201      	movs	r2, #1
 8000e92:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e96:	4a0e      	ldr	r2, [pc, #56]	; (8000ed0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e98:	601a      	str	r2, [r3, #0]
}
 8000e9a:	bd70      	pop	{r4, r5, r6, pc}
 8000e9c:	20001780 	.word	0x20001780
 8000ea0:	2000177c 	.word	0x2000177c
 8000ea4:	20001844 	.word	0x20001844
 8000ea8:	0802adc4 	.word	0x0802adc4
 8000eac:	200017c4 	.word	0x200017c4
 8000eb0:	20012e70 	.word	0x20012e70
 8000eb4:	01000001 	.word	0x01000001
 8000eb8:	01010000 	.word	0x01010000
 8000ebc:	20012e7c 	.word	0x20012e7c
 8000ec0:	20012e76 	.word	0x20012e76
 8000ec4:	20012e72 	.word	0x20012e72
 8000ec8:	20012e78 	.word	0x20012e78
 8000ecc:	20012e74 	.word	0x20012e74
 8000ed0:	0802af50 	.word	0x0802af50

08000ed4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	4770      	bx	lr

08000ed8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ed8:	8081      	strh	r1, [r0, #4]
    }
 8000eda:	4770      	bx	lr

08000edc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000edc:	80c1      	strh	r1, [r0, #6]
    }
 8000ede:	4770      	bx	lr

08000ee0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000ee0:	8101      	strh	r1, [r0, #8]
    }
 8000ee2:	4770      	bx	lr

08000ee4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ee4:	8141      	strh	r1, [r0, #10]
    }
 8000ee6:	4770      	bx	lr

08000ee8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8000ee8:	4770      	bx	lr

08000eea <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eea:	4770      	bx	lr

08000eec <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eec:	4770      	bx	lr

08000eee <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eee:	4770      	bx	lr

08000ef0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8000ef0:	4770      	bx	lr

08000ef2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8000ef2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8000ef4:	88c4      	ldrh	r4, [r0, #6]
 8000ef6:	6803      	ldr	r3, [r0, #0]
 8000ef8:	1b12      	subs	r2, r2, r4
 8000efa:	8884      	ldrh	r4, [r0, #4]
 8000efc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8000efe:	1b09      	subs	r1, r1, r4
 8000f00:	b212      	sxth	r2, r2
    }
 8000f02:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8000f06:	b209      	sxth	r1, r1
 8000f08:	4718      	bx	r3

08000f0a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8000f0a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f0e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8000f10:	f04f 33ff 	mov.w	r3, #4294967295
 8000f14:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8000f16:	6813      	ldr	r3, [r2, #0]
 8000f18:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8000f1a:	6010      	str	r0, [r2, #0]
    }
 8000f1c:	4770      	bx	lr

08000f1e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8000f1e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8000f22:	b11a      	cbz	r2, 8000f2c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8000f24:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8000f28:	b102      	cbz	r2, 8000f2c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8000f2a:	6018      	str	r0, [r3, #0]
        }
    }
 8000f2c:	4770      	bx	lr

08000f2e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8000f2e:	2000      	movs	r0, #0
 8000f30:	4770      	bx	lr

08000f32 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8000f32:	888b      	ldrh	r3, [r1, #4]
 8000f34:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8000f36:	2001      	movs	r0, #1
 8000f38:	4770      	bx	lr

08000f3a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8000f3a:	4770      	bx	lr

08000f3c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8000f3c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8000f40:	4770      	bx	lr

08000f42 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8000f42:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8000f46:	4770      	bx	lr

08000f48 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8000f48:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8000f4a:	2200      	movs	r2, #0
        return rect.width;
 8000f4c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8000f50:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8000f54:	8002      	strh	r2, [r0, #0]
 8000f56:	8042      	strh	r2, [r0, #2]
 8000f58:	8084      	strh	r4, [r0, #4]
 8000f5a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8000f5c:	bd10      	pop	{r4, pc}

08000f5e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8000f5e:	2200      	movs	r2, #0
 8000f60:	8002      	strh	r2, [r0, #0]
 8000f62:	8042      	strh	r2, [r0, #2]
 8000f64:	8082      	strh	r2, [r0, #4]
 8000f66:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8000f68:	4770      	bx	lr
	...

08000f6c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f6c:	4b02      	ldr	r3, [pc, #8]	; (8000f78 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000f6e:	2290      	movs	r2, #144	; 0x90
 8000f70:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop
 8000f78:	e000e100 	.word	0xe000e100

08000f7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f7c:	4b02      	ldr	r3, [pc, #8]	; (8000f88 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000f7e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000f82:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8000f84:	4770      	bx	lr
 8000f86:	bf00      	nop
 8000f88:	e000e100 	.word	0xe000e100

08000f8c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f8c:	4a09      	ldr	r2, [pc, #36]	; (8000fb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000f8e:	490a      	ldr	r1, [pc, #40]	; (8000fb8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000f90:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f92:	480a      	ldr	r0, [pc, #40]	; (8000fbc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f94:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000f98:	3b01      	subs	r3, #1
 8000f9a:	b29b      	uxth	r3, r3
 8000f9c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f9e:	6911      	ldr	r1, [r2, #16]
 8000fa0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fa4:	3901      	subs	r1, #1
 8000fa6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000fa8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000faa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000fac:	f043 0301 	orr.w	r3, r3, #1
 8000fb0:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000fb2:	4770      	bx	lr
 8000fb4:	40016800 	.word	0x40016800
 8000fb8:	200018ca 	.word	0x200018ca
 8000fbc:	200018c8 	.word	0x200018c8

08000fc0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000fc0:	4b01      	ldr	r3, [pc, #4]	; (8000fc8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000fc2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8000fc6:	4770      	bx	lr
 8000fc8:	40016800 	.word	0x40016800

08000fcc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fcc:	4b02      	ldr	r3, [pc, #8]	; (8000fd8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fce:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fd0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fd4:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000fd6:	4770      	bx	lr
 8000fd8:	40016800 	.word	0x40016800

08000fdc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000fdc:	b570      	push	{r4, r5, r6, lr}
 8000fde:	4604      	mov	r4, r0
    HAL::initialize();
 8000fe0:	f00f f809 	bl	800fff6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000fe4:	6823      	ldr	r3, [r4, #0]
 8000fe6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8000fe8:	f013 ffb2 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
 8000fec:	4601      	mov	r1, r0
 8000fee:	4620      	mov	r0, r4
 8000ff0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8000ff2:	6823      	ldr	r3, [r4, #0]
 8000ff4:	4a05      	ldr	r2, [pc, #20]	; (800100c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8000ff6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8000ffa:	4620      	mov	r0, r4
 8000ffc:	46ac      	mov	ip, r5
 8000ffe:	2300      	movs	r3, #0
}
 8001000:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001004:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001008:	4760      	bx	ip
 800100a:	bf00      	nop
 800100c:	d004b000 	.word	0xd004b000

08001010 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001010:	f00e bfd8 	b.w	800ffc4 <_ZN8touchgfx3HAL10beginFrameEv>

08001014 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001014:	f00e bfe2 	b.w	800ffdc <_ZN8touchgfx3HAL8endFrameEv>

08001018 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001018:	f00e bf9e 	b.w	800ff58 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800101c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800101c:	f00f b8ff 	b.w	801021e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001020:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001024:	b112      	cbz	r2, 800102c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001026:	6803      	ldr	r3, [r0, #0]
 8001028:	695b      	ldr	r3, [r3, #20]
 800102a:	4718      	bx	r3
    }
 800102c:	4770      	bx	lr
	...

08001030 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001030:	4b04      	ldr	r3, [pc, #16]	; (8001044 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001032:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001036:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800103a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800103e:	f3bf 8f6f 	isb	sy
}
 8001042:	4770      	bx	lr
 8001044:	e000e100 	.word	0xe000e100

08001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001048:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800104a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800104c:	4e12      	ldr	r6, [pc, #72]	; (8001098 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800104e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001050:	4b12      	ldr	r3, [pc, #72]	; (800109c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001052:	6003      	str	r3, [r0, #0]
 8001054:	6833      	ldr	r3, [r6, #0]
 8001056:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800105a:	4605      	mov	r5, r0
 800105c:	b10a      	cbz	r2, 8001062 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800105e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001060:	b900      	cbnz	r0, 8001064 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001062:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001064:	6803      	ldr	r3, [r0, #0]
 8001066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001068:	4798      	blx	r3
        return auxiliaryLCD;
 800106a:	6833      	ldr	r3, [r6, #0]
 800106c:	fab0 f480 	clz	r4, r0
 8001070:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001072:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001074:	b130      	cbz	r0, 8001084 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001076:	6803      	ldr	r3, [r0, #0]
 8001078:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800107a:	4798      	blx	r3
 800107c:	2800      	cmp	r0, #0
 800107e:	bf08      	it	eq
 8001080:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001084:	b92c      	cbnz	r4, 8001092 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001086:	4b06      	ldr	r3, [pc, #24]	; (80010a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001088:	4a06      	ldr	r2, [pc, #24]	; (80010a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800108a:	4807      	ldr	r0, [pc, #28]	; (80010a8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800108c:	212c      	movs	r1, #44	; 0x2c
 800108e:	f028 fde9 	bl	8029c64 <__assert_func>
    }
 8001092:	4628      	mov	r0, r5
 8001094:	bd70      	pop	{r4, r5, r6, pc}
 8001096:	bf00      	nop
 8001098:	20012e7c 	.word	0x20012e7c
 800109c:	0802b470 	.word	0x0802b470
 80010a0:	0802b36c 	.word	0x0802b36c
 80010a4:	0802b3ca 	.word	0x0802b3ca
 80010a8:	0802b403 	.word	0x0802b403

080010ac <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80010ac:	4770      	bx	lr
	...

080010b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80010b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80010b4:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80010b6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80010ba:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80010be:	d105      	bne.n	80010cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80010c0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80010c4:	4281      	cmp	r1, r0
 80010c6:	d8fb      	bhi.n	80010c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80010c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80010cc:	4f17      	ldr	r7, [pc, #92]	; (800112c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ce:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010d2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010d6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010da:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010de:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010e0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80010e2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e4:	b2db      	uxtb	r3, r3
 80010e6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80010e8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010ec:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f0:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010f4:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f8:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010fc:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001100:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001104:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001108:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800110a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800110e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001112:	fb03 4e0e 	mla	lr, r3, lr, r4
 8001116:	fbbe fef5 	udiv	lr, lr, r5
 800111a:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800111e:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8001122:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8001126:	4281      	cmp	r1, r0
 8001128:	d8de      	bhi.n	80010e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800112a:	e7cd      	b.n	80010c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800112c:	fffff800 	.word	0xfffff800

08001130 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001130:	b510      	push	{r4, lr}
        return instance;
 8001132:	4c14      	ldr	r4, [pc, #80]	; (8001184 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001134:	6823      	ldr	r3, [r4, #0]
 8001136:	b323      	cbz	r3, 8001182 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001138:	4b13      	ldr	r3, [pc, #76]	; (8001188 <HAL_LTDC_LineEventCallback+0x58>)
 800113a:	4a14      	ldr	r2, [pc, #80]	; (800118c <HAL_LTDC_LineEventCallback+0x5c>)
 800113c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800113e:	8811      	ldrh	r1, [r2, #0]
 8001140:	428b      	cmp	r3, r1
 8001142:	d113      	bne.n	800116c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001144:	4b12      	ldr	r3, [pc, #72]	; (8001190 <HAL_LTDC_LineEventCallback+0x60>)
 8001146:	8819      	ldrh	r1, [r3, #0]
 8001148:	f009 ffa2 	bl	800b090 <HAL_LTDC_ProgramLineEvent>
 800114c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800114e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001152:	3301      	adds	r3, #1
 8001154:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001158:	f7ff fce8 	bl	8000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800115c:	6820      	ldr	r0, [r4, #0]
 800115e:	f00f fc89 	bl	8010a74 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001166:	2000      	movs	r0, #0
 8001168:	f7ff bb60 	b.w	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800116c:	f009 ff90 	bl	800b090 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001170:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001172:	6803      	ldr	r3, [r0, #0]
 8001174:	6a1b      	ldr	r3, [r3, #32]
 8001176:	4798      	blx	r3
    }
 8001178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800117c:	2000      	movs	r0, #0
 800117e:	f7ff bb6d 	b.w	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001182:	bd10      	pop	{r4, pc}
 8001184:	20012e7c 	.word	0x20012e7c
 8001188:	40016800 	.word	0x40016800
 800118c:	200018ca 	.word	0x200018ca
 8001190:	200018c8 	.word	0x200018c8

08001194 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8001194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001198:	ed2d 8b02 	vpush	{d8}
 800119c:	b091      	sub	sp, #68	; 0x44
 800119e:	af00      	add	r7, sp, #0
 80011a0:	4605      	mov	r5, r0
 80011a2:	4688      	mov	r8, r1
 80011a4:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011a6:	f000 fdcf 	bl	8001d48 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80011aa:	b203      	sxth	r3, r0
 80011ac:	60bb      	str	r3, [r7, #8]
 80011ae:	009b      	lsls	r3, r3, #2
 80011b0:	607b      	str	r3, [r7, #4]
 80011b2:	3307      	adds	r3, #7
 80011b4:	f023 0307 	bic.w	r3, r3, #7
 80011b8:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011bc:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80011be:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c0:	b1f0      	cbz	r0, 8001200 <calculate_freq_and_signalstrength+0x6c>
 80011c2:	3d01      	subs	r5, #1
 80011c4:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c6:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c8:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011ca:	f000 fdbb 	bl	8001d44 <MEAS_get_num_of_chan>
 80011ce:	fb06 5000 	mla	r0, r6, r0, r5
 80011d2:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80011d6:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80011da:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e0:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011e2:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e6:	d1f0      	bne.n	80011ca <calculate_freq_and_signalstrength+0x36>
 80011e8:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80011ea:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001298 <calculate_freq_and_signalstrength+0x104>
 80011ee:	4456      	add	r6, sl
 80011f0:	edd9 7a00 	vldr	s15, [r9]
 80011f4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80011f8:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011fc:	454e      	cmp	r6, r9
 80011fe:	d1f7      	bne.n	80011f0 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 8001200:	68bb      	ldr	r3, [r7, #8]
 8001202:	466a      	mov	r2, sp
 8001204:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8001208:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800120a:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800120e:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 8001210:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001212:	b2a1      	uxth	r1, r4
 8001214:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001218:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800121c:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001220:	f026 fe4c 	bl	8027ebc <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001224:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001226:	2300      	movs	r3, #0
 8001228:	4651      	mov	r1, sl
 800122a:	f107 0028 	add.w	r0, r7, #40	; 0x28
 800122e:	462a      	mov	r2, r5
 8001230:	f026 fec8 	bl	8027fc4 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001234:	4622      	mov	r2, r4
 8001236:	4629      	mov	r1, r5
 8001238:	4628      	mov	r0, r5
 800123a:	f027 fb31 	bl	80288a0 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800123e:	f000 fd85 	bl	8001d4c <MEAS_get_samp_freq>
 8001242:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001246:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800124a:	edd9 7a00 	vldr	s15, [r9]
 800124e:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001252:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001256:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800125a:	f107 021c 	add.w	r2, r7, #28
 800125e:	4621      	mov	r1, r4
 8001260:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001262:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001266:	f026 fdc1 	bl	8027dec <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800126a:	edd7 7a06 	vldr	s15, [r7, #24]
 800126e:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8001272:	f000 fd6b 	bl	8001d4c <MEAS_get_samp_freq>
 8001276:	ee07 0a90 	vmov	s15, r0
 800127a:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800127e:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001282:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 8001286:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001288:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 800128c:	46bd      	mov	sp, r7
 800128e:	ecbd 8b02 	vpop	{d8}
 8001292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001296:	bf00      	nop
 8001298:	44fff000 	.word	0x44fff000

0800129c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800129c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129e:	2064      	movs	r0, #100	; 0x64
 80012a0:	f00b fc50 	bl	800cb44 <osDelay>
  for(;;)
 80012a4:	e7fb      	b.n	800129e <StartDefaultTask+0x2>
 80012a6:	bf00      	nop

080012a8 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80012a8:	b580      	push	{r7, lr}
 80012aa:	4c10      	ldr	r4, [pc, #64]	; (80012ec <StartTimeoutTask+0x44>)
 80012ac:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80012f8 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012b0:	4f0f      	ldr	r7, [pc, #60]	; (80012f0 <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012b2:	4e10      	ldr	r6, [pc, #64]	; (80012f4 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80012b4:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012b6:	2300      	movs	r3, #0
 80012b8:	461a      	mov	r2, r3
 80012ba:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80012bc:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012be:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80012c2:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012c4:	f00b fd3a 	bl	800cd3c <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80012c8:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80012ca:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012cc:	4638      	mov	r0, r7
 80012ce:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80012d0:	b912      	cbnz	r2, 80012d8 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80012d2:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012d4:	f008 f8c0 	bl	8009458 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012d8:	4630      	mov	r0, r6
 80012da:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012de:	f008 f8bf 	bl	8009460 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80012e2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80012e6:	f00b fc2d 	bl	800cb44 <osDelay>
	  sleep_timeout_value--;
 80012ea:	e7e3      	b.n	80012b4 <StartTimeoutTask+0xc>
 80012ec:	20000014 	.word	0x20000014
 80012f0:	40021000 	.word	0x40021000
 80012f4:	40021800 	.word	0x40021800
 80012f8:	200018d4 	.word	0x200018d4

080012fc <updateGUI_test>:
	return sleep_timeout_value;
 80012fc:	4b01      	ldr	r3, [pc, #4]	; (8001304 <updateGUI_test+0x8>)
}
 80012fe:	6818      	ldr	r0, [r3, #0]
 8001300:	4770      	bx	lr
 8001302:	bf00      	nop
 8001304:	20000014 	.word	0x20000014

08001308 <SystemClock_Config>:
{
 8001308:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800130a:	2400      	movs	r4, #0
{
 800130c:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800130e:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8001312:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001316:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800131a:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800131e:	4a1e      	ldr	r2, [pc, #120]	; (8001398 <SystemClock_Config+0x90>)
 8001320:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001322:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001324:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001326:	4b1d      	ldr	r3, [pc, #116]	; (800139c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001328:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800132c:	6411      	str	r1, [r2, #64]	; 0x40
 800132e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001330:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001334:	9201      	str	r2, [sp, #4]
 8001336:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001338:	9402      	str	r4, [sp, #8]
 800133a:	681a      	ldr	r2, [r3, #0]
 800133c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001340:	601a      	str	r2, [r3, #0]
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001348:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800134a:	2201      	movs	r2, #1
 800134c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001350:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001354:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001356:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001358:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800135a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800135e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001362:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001366:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001368:	2202      	movs	r2, #2
 800136a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800136c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800136e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001372:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001374:	f009 feae 	bl	800b0d4 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001378:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800137a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800137e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001382:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001386:	a803      	add	r0, sp, #12
 8001388:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800138a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800138e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001390:	f00a f8b8 	bl	800b504 <HAL_RCC_ClockConfig>
}
 8001394:	b015      	add	sp, #84	; 0x54
 8001396:	bd30      	pop	{r4, r5, pc}
 8001398:	40023800 	.word	0x40023800
 800139c:	40007000 	.word	0x40007000

080013a0 <main>:
{
 80013a0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013a4:	2400      	movs	r4, #0
{
 80013a6:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 80013a8:	f007 fdc8 	bl	8008f3c <HAL_Init>
  SystemClock_Config();
 80013ac:	f7ff ffac 	bl	8001308 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013b0:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80013b4:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013b8:	4bc1      	ldr	r3, [pc, #772]	; (80016c0 <main+0x320>)
 80013ba:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013bc:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013be:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80013c0:	48c0      	ldr	r0, [pc, #768]	; (80016c4 <main+0x324>)
  hi2c3.Instance = I2C3;
 80013c2:	4dc1      	ldr	r5, [pc, #772]	; (80016c8 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013c4:	f041 0110 	orr.w	r1, r1, #16
 80013c8:	6319      	str	r1, [r3, #48]	; 0x30
 80013ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013cc:	f001 0110 	and.w	r1, r1, #16
 80013d0:	9100      	str	r1, [sp, #0]
 80013d2:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013d4:	9401      	str	r4, [sp, #4]
 80013d6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013d8:	f041 0120 	orr.w	r1, r1, #32
 80013dc:	6319      	str	r1, [r3, #48]	; 0x30
 80013de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013e0:	f001 0120 	and.w	r1, r1, #32
 80013e4:	9101      	str	r1, [sp, #4]
 80013e6:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013e8:	9402      	str	r4, [sp, #8]
 80013ea:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013ec:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80013f0:	6319      	str	r1, [r3, #48]	; 0x30
 80013f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013f4:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80013f8:	9102      	str	r1, [sp, #8]
 80013fa:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80013fc:	9403      	str	r4, [sp, #12]
 80013fe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001400:	f041 0104 	orr.w	r1, r1, #4
 8001404:	6319      	str	r1, [r3, #48]	; 0x30
 8001406:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001408:	f001 0104 	and.w	r1, r1, #4
 800140c:	9103      	str	r1, [sp, #12]
 800140e:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001410:	9404      	str	r4, [sp, #16]
 8001412:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001414:	f041 0101 	orr.w	r1, r1, #1
 8001418:	6319      	str	r1, [r3, #48]	; 0x30
 800141a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800141c:	f001 0101 	and.w	r1, r1, #1
 8001420:	9104      	str	r1, [sp, #16]
 8001422:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001424:	9405      	str	r4, [sp, #20]
 8001426:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001428:	f041 0102 	orr.w	r1, r1, #2
 800142c:	6319      	str	r1, [r3, #48]	; 0x30
 800142e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001430:	f001 0102 	and.w	r1, r1, #2
 8001434:	9105      	str	r1, [sp, #20]
 8001436:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001438:	9406      	str	r4, [sp, #24]
 800143a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800143c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001440:	6319      	str	r1, [r3, #48]	; 0x30
 8001442:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001444:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001448:	9106      	str	r1, [sp, #24]
 800144a:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800144c:	9407      	str	r4, [sp, #28]
 800144e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001450:	f041 0108 	orr.w	r1, r1, #8
 8001454:	6319      	str	r1, [r3, #48]	; 0x30
 8001456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001458:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800145c:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800145e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001460:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001462:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001464:	f007 fff8 	bl	8009458 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001468:	4896      	ldr	r0, [pc, #600]	; (80016c4 <main+0x324>)
 800146a:	2120      	movs	r1, #32
 800146c:	2201      	movs	r2, #1
 800146e:	f007 fff3 	bl	8009458 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001472:	4896      	ldr	r0, [pc, #600]	; (80016cc <main+0x32c>)
 8001474:	4622      	mov	r2, r4
 8001476:	2104      	movs	r1, #4
 8001478:	f007 ffee 	bl	8009458 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800147c:	4894      	ldr	r0, [pc, #592]	; (80016d0 <main+0x330>)
 800147e:	4622      	mov	r2, r4
 8001480:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001484:	f007 ffe8 	bl	8009458 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001488:	2201      	movs	r2, #1
 800148a:	4892      	ldr	r0, [pc, #584]	; (80016d4 <main+0x334>)
 800148c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001490:	f007 ffe2 	bl	8009458 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001494:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001496:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800149a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800149c:	4889      	ldr	r0, [pc, #548]	; (80016c4 <main+0x324>)
 800149e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80014a0:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014a4:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014a8:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80014ac:	f007 fe90 	bl	80091d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80014b0:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80014b4:	4883      	ldr	r0, [pc, #524]	; (80016c4 <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80014b6:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80014ba:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80014bc:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014be:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80014c0:	f007 fe86 	bl	80091d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80014c4:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80014c6:	487f      	ldr	r0, [pc, #508]	; (80016c4 <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80014c8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80014ca:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014cc:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80014ce:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014d2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014d6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80014d8:	f007 fe7a 	bl	80091d0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014dc:	487b      	ldr	r0, [pc, #492]	; (80016cc <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80014de:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014e2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014e4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014e8:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014ea:	f007 fe71 	bl	80091d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014ee:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014f2:	4877      	ldr	r0, [pc, #476]	; (80016d0 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014f4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014f6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014f8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014fc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014fe:	f007 fe67 	bl	80091d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001502:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001506:	4874      	ldr	r0, [pc, #464]	; (80016d8 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001508:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800150a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 800150c:	230f      	movs	r3, #15
 800150e:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001510:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001514:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001518:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800151a:	f007 fe59 	bl	80091d0 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800151e:	486d      	ldr	r0, [pc, #436]	; (80016d4 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001520:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001524:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001526:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800152a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800152c:	f007 fe50 	bl	80091d0 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001530:	4622      	mov	r2, r4
 8001532:	2105      	movs	r1, #5
 8001534:	2009      	movs	r0, #9
 8001536:	f007 fd51 	bl	8008fdc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 800153a:	2009      	movs	r0, #9
 800153c:	f007 fd8c 	bl	8009058 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001540:	4866      	ldr	r0, [pc, #408]	; (80016dc <main+0x33c>)
 8001542:	4b67      	ldr	r3, [pc, #412]	; (80016e0 <main+0x340>)
 8001544:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001546:	f007 fd95 	bl	8009074 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800154a:	4966      	ldr	r1, [pc, #408]	; (80016e4 <main+0x344>)
 800154c:	4b66      	ldr	r3, [pc, #408]	; (80016e8 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800154e:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001550:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001554:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001558:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800155a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800155e:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001562:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001566:	f008 f9dd 	bl	8009924 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800156a:	2110      	movs	r1, #16
 800156c:	4628      	mov	r0, r5
 800156e:	f009 fba5 	bl	800acbc <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001572:	4621      	mov	r1, r4
 8001574:	4628      	mov	r0, r5
 8001576:	f009 fbc1 	bl	800acfc <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800157a:	f8df c184 	ldr.w	ip, [pc, #388]	; 8001700 <main+0x360>
  hspi5.Instance = SPI5;
 800157e:	485b      	ldr	r0, [pc, #364]	; (80016ec <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001580:	4d5b      	ldr	r5, [pc, #364]	; (80016f0 <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001582:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001584:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001588:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800158c:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001590:	2318      	movs	r3, #24
 8001592:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001596:	230a      	movs	r3, #10
 8001598:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800159a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800159e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80015a2:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80015a6:	f00a fa9b 	bl	800bae0 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 80015aa:	2307      	movs	r3, #7
 80015ac:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 80015ae:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80015b0:	4b50      	ldr	r3, [pc, #320]	; (80016f4 <main+0x354>)
 80015b2:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80015b4:	2040      	movs	r0, #64	; 0x40
 80015b6:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80015ba:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80015be:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80015c2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80015c6:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015ca:	a90f      	add	r1, sp, #60	; 0x3c
 80015cc:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80015ce:	622b      	str	r3, [r5, #32]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80015d0:	f8c5 a00c 	str.w	sl, [r5, #12]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80015d4:	e9c5 6401 	strd	r6, r4, [r5, #4]
  SdramTiming.RPDelay = 2;
 80015d8:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80015dc:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80015de:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80015e0:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80015e4:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80015e8:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80015ea:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015ec:	f00a f986 	bl	800b8fc <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015f4:	a90b      	add	r1, sp, #44	; 0x2c
 80015f6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015f8:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80015fc:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8001600:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001602:	f00a f99d 	bl	800b940 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001606:	4630      	mov	r0, r6
 8001608:	f007 fcc4 	bl	8008f94 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800160c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001610:	a90b      	add	r1, sp, #44	; 0x2c
 8001612:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001614:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001618:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800161c:	f00a f990 	bl	800b940 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001620:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001624:	a90b      	add	r1, sp, #44	; 0x2c
 8001626:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001628:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800162c:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001630:	f00a f986 	bl	800b940 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001634:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001638:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800163a:	9b08      	ldr	r3, [sp, #32]
 800163c:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800163e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001642:	a90b      	add	r1, sp, #44	; 0x2c
 8001644:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001646:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 800164a:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800164c:	f00a f978 	bl	800b940 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001650:	4628      	mov	r0, r5
 8001652:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001656:	4d28      	ldr	r5, [pc, #160]	; (80016f8 <main+0x358>)
  htim3.Instance = TIM3;
 8001658:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8001704 <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800165c:	f00a f98e 	bl	800b97c <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001660:	2234      	movs	r2, #52	; 0x34
 8001662:	4621      	mov	r1, r4
 8001664:	a80f      	add	r0, sp, #60	; 0x3c
 8001666:	f028 fd02 	bl	802a06e <memset>
  hltdc.Instance = LTDC;
 800166a:	4b24      	ldr	r3, [pc, #144]	; (80016fc <main+0x35c>)
 800166c:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 800166e:	2309      	movs	r3, #9
 8001670:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001672:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001674:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8001678:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800167a:	f240 190d 	movw	r9, #269	; 0x10d
 800167e:	f240 1343 	movw	r3, #323	; 0x143
 8001682:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8001686:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001688:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800168c:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800168e:	f240 1a17 	movw	sl, #279	; 0x117
 8001692:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001696:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800169a:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.VerticalSync = 1;
 800169e:	61ae      	str	r6, [r5, #24]
  hltdc.Init.Backcolor.Red = 0;
 80016a0:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016a4:	f009 fb4e 	bl	800ad44 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 80016a8:	23f0      	movs	r3, #240	; 0xf0
 80016aa:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 80016ac:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 80016ae:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80016b2:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 80016b4:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 80016b6:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80016b8:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 80016bc:	e024      	b.n	8001708 <main+0x368>
 80016be:	bf00      	nop
 80016c0:	40023800 	.word	0x40023800
 80016c4:	40021000 	.word	0x40021000
 80016c8:	20001928 	.word	0x20001928
 80016cc:	40020800 	.word	0x40020800
 80016d0:	40020c00 	.word	0x40020c00
 80016d4:	40021800 	.word	0x40021800
 80016d8:	40020000 	.word	0x40020000
 80016dc:	200018e0 	.word	0x200018e0
 80016e0:	40023000 	.word	0x40023000
 80016e4:	40005c00 	.word	0x40005c00
 80016e8:	000186a0 	.word	0x000186a0
 80016ec:	20001a58 	.word	0x20001a58
 80016f0:	20001a24 	.word	0x20001a24
 80016f4:	a0000140 	.word	0xa0000140
 80016f8:	2000197c 	.word	0x2000197c
 80016fc:	40016800 	.word	0x40016800
 8001700:	40015000 	.word	0x40015000
 8001704:	20001af8 	.word	0x20001af8
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001708:	4622      	mov	r2, r4
 800170a:	a90f      	add	r1, sp, #60	; 0x3c
 800170c:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 800170e:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001710:	2305      	movs	r3, #5
 8001712:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001716:	4d4e      	ldr	r5, [pc, #312]	; (8001850 <main+0x4b0>)
  pLayerCfg.WindowX0 = 0;
 8001718:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 800171a:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800171c:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 800171e:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001720:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001722:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001726:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800172a:	f009 fbe1 	bl	800aef0 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800172e:	4b49      	ldr	r3, [pc, #292]	; (8001854 <main+0x4b4>)
 8001730:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001732:	681b      	ldr	r3, [r3, #0]
 8001734:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001736:	682b      	ldr	r3, [r5, #0]
  htim1.Instance = TIM1;
 8001738:	4d47      	ldr	r5, [pc, #284]	; (8001858 <main+0x4b8>)
  LcdDrv->DisplayOff();
 800173a:	68db      	ldr	r3, [r3, #12]
 800173c:	4798      	blx	r3
  htim1.Init.Period = 65535;
 800173e:	f64f 79ff 	movw	r9, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001742:	4b46      	ldr	r3, [pc, #280]	; (800185c <main+0x4bc>)
 8001744:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001746:	4628      	mov	r0, r5
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001748:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim1.Init.RepetitionCounter = 0;
 800174c:	e9c5 4404 	strd	r4, r4, [r5, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001750:	61ac      	str	r4, [r5, #24]
  htim1.Init.Period = 65535;
 8001752:	f8c5 900c 	str.w	r9, [r5, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001756:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 800175a:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800175e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001762:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001764:	f00a fdac 	bl	800c2c0 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001768:	a90f      	add	r1, sp, #60	; 0x3c
 800176a:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 800176c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001770:	f00a ff20 	bl	800c5b4 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001774:	a90b      	add	r1, sp, #44	; 0x2c
 8001776:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001778:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800177c:	f00b f858 	bl	800c830 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001780:	4b37      	ldr	r3, [pc, #220]	; (8001860 <main+0x4c0>)
 8001782:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001786:	4640      	mov	r0, r8
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001788:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800178c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001790:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001794:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001798:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.Period = 65535;
 800179c:	f8c8 900c 	str.w	r9, [r8, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80017a0:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017a2:	9409      	str	r4, [sp, #36]	; 0x24
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017a4:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017a8:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017ac:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80017ae:	f00a fd87 	bl	800c2c0 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017b2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80017b6:	a90b      	add	r1, sp, #44	; 0x2c
 80017b8:	4640      	mov	r0, r8
  hdma2d.Instance = DMA2D;
 80017ba:	4d2a      	ldr	r5, [pc, #168]	; (8001864 <main+0x4c4>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017bc:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80017be:	f00a fe49 	bl	800c454 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80017c2:	a90f      	add	r1, sp, #60	; 0x3c
 80017c4:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80017c6:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80017ca:	f00a fef3 	bl	800c5b4 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80017ce:	a909      	add	r1, sp, #36	; 0x24
 80017d0:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017d2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80017d6:	f00b f82b 	bl	800c830 <HAL_TIMEx_MasterConfigSynchronization>
  hdma2d.Instance = DMA2D;
 80017da:	4b23      	ldr	r3, [pc, #140]	; (8001868 <main+0x4c8>)
 80017dc:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 80017de:	e9c5 440a 	strd	r4, r4, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80017e2:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80017e6:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 80017e8:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 80017ec:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80017ee:	f007 fc6b 	bl	80090c8 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80017f2:	4631      	mov	r1, r6
 80017f4:	4628      	mov	r0, r5
 80017f6:	f007 fc95 	bl	8009124 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 80017fa:	f7fe ff53 	bl	80006a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80017fe:	f7fe ff4f 	bl	80006a0 <MX_TouchGFX_PreOSInit>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001802:	f000 f94b 	bl	8001a9c <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001806:	f000 f97d 	bl	8001b04 <MEAS_timer_init>
  osKernelInitialize();
 800180a:	f00b f923 	bl	800ca54 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800180e:	4a17      	ldr	r2, [pc, #92]	; (800186c <main+0x4cc>)
 8001810:	4639      	mov	r1, r7
 8001812:	4658      	mov	r0, fp
 8001814:	f00b fa58 	bl	800ccc8 <osMessageQueueNew>
 8001818:	4b15      	ldr	r3, [pc, #84]	; (8001870 <main+0x4d0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800181a:	4a16      	ldr	r2, [pc, #88]	; (8001874 <main+0x4d4>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800181c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800181e:	4621      	mov	r1, r4
 8001820:	4815      	ldr	r0, [pc, #84]	; (8001878 <main+0x4d8>)
 8001822:	f00b f943 	bl	800caac <osThreadNew>
 8001826:	4b15      	ldr	r3, [pc, #84]	; (800187c <main+0x4dc>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001828:	4a15      	ldr	r2, [pc, #84]	; (8001880 <main+0x4e0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800182a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800182c:	4621      	mov	r1, r4
 800182e:	4815      	ldr	r0, [pc, #84]	; (8001884 <main+0x4e4>)
 8001830:	f00b f93c 	bl	800caac <osThreadNew>
 8001834:	4b14      	ldr	r3, [pc, #80]	; (8001888 <main+0x4e8>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001836:	4a15      	ldr	r2, [pc, #84]	; (800188c <main+0x4ec>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001838:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800183a:	4621      	mov	r1, r4
 800183c:	4814      	ldr	r0, [pc, #80]	; (8001890 <main+0x4f0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800183e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001840:	f00b f934 	bl	800caac <osThreadNew>
 8001844:	4b13      	ldr	r3, [pc, #76]	; (8001894 <main+0x4f4>)
 8001846:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001848:	f00b f916 	bl	800ca78 <osKernelStart>
  while (1)
 800184c:	e7fe      	b.n	800184c <main+0x4ac>
 800184e:	bf00      	nop
 8001850:	200018d0 	.word	0x200018d0
 8001854:	20000018 	.word	0x20000018
 8001858:	20001ab0 	.word	0x20001ab0
 800185c:	40010000 	.word	0x40010000
 8001860:	40000400 	.word	0x40000400
 8001864:	200018e8 	.word	0x200018e8
 8001868:	4002b000 	.word	0x4002b000
 800186c:	0802b4e0 	.word	0x0802b4e0
 8001870:	200018d4 	.word	0x200018d4
 8001874:	0802b51c 	.word	0x0802b51c
 8001878:	0800129d 	.word	0x0800129d
 800187c:	200018dc 	.word	0x200018dc
 8001880:	0802b4bc 	.word	0x0802b4bc
 8001884:	080006b5 	.word	0x080006b5
 8001888:	200018cc 	.word	0x200018cc
 800188c:	0802b4f8 	.word	0x0802b4f8
 8001890:	080012a9 	.word	0x080012a9
 8001894:	200018d8 	.word	0x200018d8

08001898 <IOE_Init>:
 8001898:	4770      	bx	lr
 800189a:	bf00      	nop

0800189c <IOE_ITConfig>:
 800189c:	4770      	bx	lr
 800189e:	bf00      	nop

080018a0 <IOE_Write>:
{
 80018a0:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018a2:	4c09      	ldr	r4, [pc, #36]	; (80018c8 <IOE_Write+0x28>)
{
 80018a4:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018a6:	6824      	ldr	r4, [r4, #0]
 80018a8:	9402      	str	r4, [sp, #8]
{
 80018aa:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018ac:	2301      	movs	r3, #1
 80018ae:	f88d 4017 	strb.w	r4, [sp, #23]
 80018b2:	f10d 0417 	add.w	r4, sp, #23
 80018b6:	460a      	mov	r2, r1
 80018b8:	9301      	str	r3, [sp, #4]
 80018ba:	4601      	mov	r1, r0
 80018bc:	9400      	str	r4, [sp, #0]
 80018be:	4803      	ldr	r0, [pc, #12]	; (80018cc <IOE_Write+0x2c>)
 80018c0:	f008 f8f8 	bl	8009ab4 <HAL_I2C_Mem_Write>
}
 80018c4:	b006      	add	sp, #24
 80018c6:	bd10      	pop	{r4, pc}
 80018c8:	2000000c 	.word	0x2000000c
 80018cc:	20001928 	.word	0x20001928

080018d0 <IOE_Read>:
{
 80018d0:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018d2:	4b0b      	ldr	r3, [pc, #44]	; (8001900 <IOE_Read+0x30>)
{
 80018d4:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018d6:	681b      	ldr	r3, [r3, #0]
 80018d8:	9302      	str	r3, [sp, #8]
{
 80018da:	4684      	mov	ip, r0
 80018dc:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018de:	2301      	movs	r3, #1
 80018e0:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80018e4:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018e6:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80018ea:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018ee:	4661      	mov	r1, ip
 80018f0:	4804      	ldr	r0, [pc, #16]	; (8001904 <IOE_Read+0x34>)
 80018f2:	f008 f9d1 	bl	8009c98 <HAL_I2C_Mem_Read>
}
 80018f6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80018fa:	b007      	add	sp, #28
 80018fc:	f85d fb04 	ldr.w	pc, [sp], #4
 8001900:	2000000c 	.word	0x2000000c
 8001904:	20001928 	.word	0x20001928

08001908 <IOE_ReadMultiple>:
{
 8001908:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800190a:	4c09      	ldr	r4, [pc, #36]	; (8001930 <IOE_ReadMultiple+0x28>)
{
 800190c:	b084      	sub	sp, #16
 800190e:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001910:	6820      	ldr	r0, [r4, #0]
 8001912:	9002      	str	r0, [sp, #8]
 8001914:	e9cd 2300 	strd	r2, r3, [sp]
 8001918:	4806      	ldr	r0, [pc, #24]	; (8001934 <IOE_ReadMultiple+0x2c>)
 800191a:	460a      	mov	r2, r1
 800191c:	2301      	movs	r3, #1
 800191e:	4661      	mov	r1, ip
 8001920:	f008 f9ba 	bl	8009c98 <HAL_I2C_Mem_Read>
}
 8001924:	3800      	subs	r0, #0
 8001926:	bf18      	it	ne
 8001928:	2001      	movne	r0, #1
 800192a:	b004      	add	sp, #16
 800192c:	bd10      	pop	{r4, pc}
 800192e:	bf00      	nop
 8001930:	2000000c 	.word	0x2000000c
 8001934:	20001928 	.word	0x20001928

08001938 <IOE_Delay>:
 8001938:	f007 bb2c 	b.w	8008f94 <HAL_Delay>

0800193c <LCD_IO_Init>:
{
 800193c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800193e:	4806      	ldr	r0, [pc, #24]	; (8001958 <LCD_IO_Init+0x1c>)
 8001940:	2200      	movs	r2, #0
 8001942:	2104      	movs	r1, #4
 8001944:	f007 fd88 	bl	8009458 <HAL_GPIO_WritePin>
}
 8001948:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800194c:	4802      	ldr	r0, [pc, #8]	; (8001958 <LCD_IO_Init+0x1c>)
 800194e:	2201      	movs	r2, #1
 8001950:	2104      	movs	r1, #4
 8001952:	f007 bd81 	b.w	8009458 <HAL_GPIO_WritePin>
 8001956:	bf00      	nop
 8001958:	40020800 	.word	0x40020800

0800195c <LCD_IO_WriteData>:
{
 800195c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800195e:	4d10      	ldr	r5, [pc, #64]	; (80019a0 <LCD_IO_WriteData+0x44>)
{
 8001960:	b083      	sub	sp, #12
 8001962:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001964:	2201      	movs	r2, #1
 8001966:	480f      	ldr	r0, [pc, #60]	; (80019a4 <LCD_IO_WriteData+0x48>)
 8001968:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800196c:	f007 fd74 	bl	8009458 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001970:	4628      	mov	r0, r5
 8001972:	2200      	movs	r2, #0
 8001974:	2104      	movs	r1, #4
 8001976:	f007 fd6f 	bl	8009458 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800197a:	4b0b      	ldr	r3, [pc, #44]	; (80019a8 <LCD_IO_WriteData+0x4c>)
 800197c:	480b      	ldr	r0, [pc, #44]	; (80019ac <LCD_IO_WriteData+0x50>)
 800197e:	681b      	ldr	r3, [r3, #0]
 8001980:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001984:	f10d 0106 	add.w	r1, sp, #6
 8001988:	2201      	movs	r2, #1
 800198a:	f00a f90b 	bl	800bba4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800198e:	2201      	movs	r2, #1
 8001990:	2104      	movs	r1, #4
 8001992:	4628      	mov	r0, r5
}
 8001994:	b003      	add	sp, #12
 8001996:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800199a:	f007 bd5d 	b.w	8009458 <HAL_GPIO_WritePin>
 800199e:	bf00      	nop
 80019a0:	40020800 	.word	0x40020800
 80019a4:	40020c00 	.word	0x40020c00
 80019a8:	20000010 	.word	0x20000010
 80019ac:	20001a58 	.word	0x20001a58

080019b0 <LCD_IO_WriteReg>:
{
 80019b0:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b2:	4d10      	ldr	r5, [pc, #64]	; (80019f4 <LCD_IO_WriteReg+0x44>)
{
 80019b4:	b083      	sub	sp, #12
 80019b6:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019b8:	2200      	movs	r2, #0
 80019ba:	480f      	ldr	r0, [pc, #60]	; (80019f8 <LCD_IO_WriteReg+0x48>)
 80019bc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019c0:	f007 fd4a 	bl	8009458 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019c4:	4628      	mov	r0, r5
 80019c6:	2200      	movs	r2, #0
 80019c8:	2104      	movs	r1, #4
 80019ca:	f007 fd45 	bl	8009458 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019ce:	4b0b      	ldr	r3, [pc, #44]	; (80019fc <LCD_IO_WriteReg+0x4c>)
 80019d0:	480b      	ldr	r0, [pc, #44]	; (8001a00 <LCD_IO_WriteReg+0x50>)
 80019d2:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80019d4:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019d8:	f10d 0106 	add.w	r1, sp, #6
 80019dc:	2201      	movs	r2, #1
 80019de:	f00a f8e1 	bl	800bba4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019e2:	2201      	movs	r2, #1
 80019e4:	2104      	movs	r1, #4
 80019e6:	4628      	mov	r0, r5
}
 80019e8:	b003      	add	sp, #12
 80019ea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019ee:	f007 bd33 	b.w	8009458 <HAL_GPIO_WritePin>
 80019f2:	bf00      	nop
 80019f4:	40020800 	.word	0x40020800
 80019f8:	40020c00 	.word	0x40020c00
 80019fc:	20000010 	.word	0x20000010
 8001a00:	20001a58 	.word	0x20001a58

08001a04 <LCD_IO_ReadData>:
{
 8001a04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a08:	4e19      	ldr	r6, [pc, #100]	; (8001a70 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a0a:	4f1a      	ldr	r7, [pc, #104]	; (8001a74 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a0c:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001a78 <LCD_IO_ReadData+0x74>
 8001a10:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001a7c <LCD_IO_ReadData+0x78>
{
 8001a14:	b083      	sub	sp, #12
 8001a16:	460c      	mov	r4, r1
 8001a18:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1a:	2200      	movs	r2, #0
 8001a1c:	4630      	mov	r0, r6
 8001a1e:	2104      	movs	r1, #4
 8001a20:	f007 fd1a 	bl	8009458 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a24:	4638      	mov	r0, r7
 8001a26:	2200      	movs	r2, #0
 8001a28:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a2c:	f007 fd14 	bl	8009458 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a30:	f8d9 3000 	ldr.w	r3, [r9]
 8001a34:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001a38:	a901      	add	r1, sp, #4
 8001a3a:	2201      	movs	r2, #1
 8001a3c:	4640      	mov	r0, r8
 8001a3e:	f00a f8b1 	bl	800bba4 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a42:	f8d9 3000 	ldr.w	r3, [r9]
 8001a46:	4622      	mov	r2, r4
 8001a48:	a901      	add	r1, sp, #4
 8001a4a:	4640      	mov	r0, r8
 8001a4c:	f00a fb52 	bl	800c0f4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a50:	4638      	mov	r0, r7
 8001a52:	2201      	movs	r2, #1
 8001a54:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001a58:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a5a:	f007 fcfd 	bl	8009458 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a5e:	4630      	mov	r0, r6
 8001a60:	2201      	movs	r2, #1
 8001a62:	2104      	movs	r1, #4
 8001a64:	f007 fcf8 	bl	8009458 <HAL_GPIO_WritePin>
}
 8001a68:	4620      	mov	r0, r4
 8001a6a:	b003      	add	sp, #12
 8001a6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a70:	40020800 	.word	0x40020800
 8001a74:	40020c00 	.word	0x40020c00
 8001a78:	20000010 	.word	0x20000010
 8001a7c:	20001a58 	.word	0x20001a58

08001a80 <LCD_Delay>:
  HAL_Delay(Delay);
 8001a80:	f007 ba88 	b.w	8008f94 <HAL_Delay>

08001a84 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001a84:	4b03      	ldr	r3, [pc, #12]	; (8001a94 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001a86:	6802      	ldr	r2, [r0, #0]
 8001a88:	429a      	cmp	r2, r3
 8001a8a:	d000      	beq.n	8001a8e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001a8c:	4770      	bx	lr
    HAL_IncTick();
 8001a8e:	f007 ba6f 	b.w	8008f70 <HAL_IncTick>
 8001a92:	bf00      	nop
 8001a94:	40001000 	.word	0x40001000

08001a98 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001a98:	4770      	bx	lr
 8001a9a:	bf00      	nop

08001a9c <MEAS_GPIO_analog_init>:
 * - ADC3_IN4 = GPIO PF6 (Pad left)
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void) {
 8001a9c:	b410      	push	{r4}
 8001a9e:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001aa0:	4b15      	ldr	r3, [pc, #84]	; (8001af8 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001aa2:	4916      	ldr	r1, [pc, #88]	; (8001afc <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001aa4:	2400      	movs	r4, #0
 8001aa6:	9400      	str	r4, [sp, #0]
 8001aa8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001aaa:	f042 0220 	orr.w	r2, r2, #32
 8001aae:	631a      	str	r2, [r3, #48]	; 0x30
 8001ab0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ab2:	f002 0220 	and.w	r2, r2, #32
 8001ab6:	9200      	str	r2, [sp, #0]
 8001ab8:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001aba:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001abc:	4a10      	ldr	r2, [pc, #64]	; (8001b00 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001abe:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001ac2:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001ac4:	6808      	ldr	r0, [r1, #0]
 8001ac6:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001aca:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001acc:	9401      	str	r4, [sp, #4]
 8001ace:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001ad0:	f041 0104 	orr.w	r1, r1, #4
 8001ad4:	6319      	str	r1, [r3, #48]	; 0x30
 8001ad6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ad8:	f003 0304 	and.w	r3, r3, #4
 8001adc:	9301      	str	r3, [sp, #4]
 8001ade:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001ae0:	6813      	ldr	r3, [r2, #0]
 8001ae2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001ae6:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001ae8:	6813      	ldr	r3, [r2, #0]
 8001aea:	f043 030c 	orr.w	r3, r3, #12
 8001aee:	6013      	str	r3, [r2, #0]
}
 8001af0:	b003      	add	sp, #12
 8001af2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001af6:	4770      	bx	lr
 8001af8:	40023800 	.word	0x40023800
 8001afc:	40021400 	.word	0x40021400
 8001b00:	40020800 	.word	0x40020800

08001b04 <MEAS_timer_init>:
/** ***************************************************************************
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void) {
 8001b04:	b082      	sub	sp, #8
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b06:	4a0c      	ldr	r2, [pc, #48]	; (8001b38 <MEAS_timer_init+0x34>)
 8001b08:	2300      	movs	r3, #0
 8001b0a:	9301      	str	r3, [sp, #4]
 8001b0c:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001b0e:	f041 0101 	orr.w	r1, r1, #1
 8001b12:	6411      	str	r1, [r2, #64]	; 0x40
 8001b14:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b16:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b1a:	f002 0201 	and.w	r2, r2, #1
 8001b1e:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b20:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b24:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b26:	9801      	ldr	r0, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b28:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b2a:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001b2c:	685a      	ldr	r2, [r3, #4]
 8001b2e:	f042 0220 	orr.w	r2, r2, #32
 8001b32:	605a      	str	r2, [r3, #4]
}
 8001b34:	b002      	add	sp, #8
 8001b36:	4770      	bx	lr
 8001b38:	40023800 	.word	0x40023800

08001b3c <MEAS_ADC3_scan_init>:
 * @n As each conversion triggers the DMA, the number of transfers is doubled.
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void) {
 8001b3c:	b410      	push	{r4}
 8001b3e:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b40:	4934      	ldr	r1, [pc, #208]	; (8001c14 <MEAS_ADC3_scan_init+0xd8>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b42:	4a35      	ldr	r2, [pc, #212]	; (8001c18 <MEAS_ADC3_scan_init+0xdc>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b44:	2400      	movs	r4, #0
 8001b46:	9400      	str	r4, [sp, #0]
 8001b48:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001b4a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001b4e:	644b      	str	r3, [r1, #68]	; 0x44
 8001b50:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001b52:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001b56:	9300      	str	r3, [sp, #0]
 8001b58:	9b00      	ldr	r3, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b5a:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001b5c:	4b2f      	ldr	r3, [pc, #188]	; (8001c1c <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b5e:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001b62:	62d0      	str	r0, [r2, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001b64:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001b66:	f040 0004 	orr.w	r0, r0, #4
 8001b6a:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001b6c:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001b6e:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001b72:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001b74:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001b76:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001b7a:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001b7c:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001b7e:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001b82:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001b84:	6850      	ldr	r0, [r2, #4]
 8001b86:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001b8a:	6050      	str	r0, [r2, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001b8c:	6890      	ldr	r0, [r2, #8]
 8001b8e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001b92:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001b94:	6890      	ldr	r0, [r2, #8]
 8001b96:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001b9a:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001b9c:	6890      	ldr	r0, [r2, #8]
 8001b9e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001ba2:	6090      	str	r0, [r2, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001ba4:	9401      	str	r4, [sp, #4]
 8001ba6:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001ba8:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8001bac:	630a      	str	r2, [r1, #48]	; 0x30
 8001bae:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001bb0:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001bb4:	9201      	str	r2, [sp, #4]
 8001bb6:	9a01      	ldr	r2, [sp, #4]
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001bb8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bba:	f022 0201 	bic.w	r2, r2, #1
 8001bbe:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN) 	   // Wait for DMA to finish
 8001bc0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bc2:	07d2      	lsls	r2, r2, #31
 8001bc4:	d4fc      	bmi.n	8001bc0 <MEAS_ADC3_scan_init+0x84>
    {
        ;
    }
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001bc6:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    DMA2_Stream1->NDTR =
        INPUT_COUNT * ADC_NUMS;  // Number of data items to transfer
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001bc8:	4815      	ldr	r0, [pc, #84]	; (8001c20 <MEAS_ADC3_scan_init+0xe4>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001bca:	4916      	ldr	r1, [pc, #88]	; (8001c24 <MEAS_ADC3_scan_init+0xe8>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001bcc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001bd0:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001bd2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bd4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001bd8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_1;                // Priority high
 8001bda:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bdc:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001be0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001be2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001be4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001be8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001bea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bec:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bf0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001bf2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bf4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001bf8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001bfa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001bfc:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001c00:	f042 0210 	orr.w	r2, r2, #16
 8001c04:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001c06:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001c08:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001c0a:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001c0c:	b003      	add	sp, #12
 8001c0e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001c12:	4770      	bx	lr
 8001c14:	40023800 	.word	0x40023800
 8001c18:	40012200 	.word	0x40012200
 8001c1c:	40026400 	.word	0x40026400
 8001c20:	4001224c 	.word	0x4001224c
 8001c24:	20001b40 	.word	0x20001b40

08001c28 <DMA2_Stream1_IRQHandler>:
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
    static int debug = 0;
    debug++;
 8001c28:	4920      	ldr	r1, [pc, #128]	; (8001cac <DMA2_Stream1_IRQHandler+0x84>)

	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001c2a:	4b21      	ldr	r3, [pc, #132]	; (8001cb0 <DMA2_Stream1_IRQHandler+0x88>)
    debug++;
 8001c2c:	680a      	ldr	r2, [r1, #0]
 8001c2e:	3201      	adds	r2, #1
 8001c30:	600a      	str	r2, [r1, #0]
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001c32:	681a      	ldr	r2, [r3, #0]
 8001c34:	0511      	lsls	r1, r2, #20
 8001c36:	d400      	bmi.n	8001c3a <DMA2_Stream1_IRQHandler+0x12>

        // copy data from DMA buffer to ADC_samples
        MEAS_ADC_reset();
        MEAS_data_ready = true;
    }
}
 8001c38:	4770      	bx	lr
 8001c3a:	4a1e      	ldr	r2, [pc, #120]	; (8001cb4 <DMA2_Stream1_IRQHandler+0x8c>)
 8001c3c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001c40:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001c44:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001c48:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c4c:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001c50:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c52:	f022 0201 	bic.w	r2, r2, #1
 8001c56:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001c58:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c5a:	07d2      	lsls	r2, r2, #31
 8001c5c:	d4fc      	bmi.n	8001c58 <DMA2_Stream1_IRQHandler+0x30>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001c5e:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001c60:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001c64:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001c68:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001c6a:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001c6c:	4912      	ldr	r1, [pc, #72]	; (8001cb8 <DMA2_Stream1_IRQHandler+0x90>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001c6e:	f023 0301 	bic.w	r3, r3, #1
 8001c72:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001c74:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001c76:	4b11      	ldr	r3, [pc, #68]	; (8001cbc <DMA2_Stream1_IRQHandler+0x94>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001c78:	f020 0001 	bic.w	r0, r0, #1
 8001c7c:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001c7e:	6888      	ldr	r0, [r1, #8]
 8001c80:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001c84:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001c86:	6a59      	ldr	r1, [r3, #36]	; 0x24
        MEAS_data_ready = true;
 8001c88:	480d      	ldr	r0, [pc, #52]	; (8001cc0 <DMA2_Stream1_IRQHandler+0x98>)
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001c8a:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001c8e:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001c90:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001c92:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001c96:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001c98:	6813      	ldr	r3, [r2, #0]
        MEAS_data_ready = true;
 8001c9a:	f04f 0c01 	mov.w	ip, #1
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001c9e:	f023 0301 	bic.w	r3, r3, #1
 8001ca2:	6013      	str	r3, [r2, #0]
        MEAS_data_ready = true;
 8001ca4:	f880 c000 	strb.w	ip, [r0]
}
 8001ca8:	4770      	bx	lr
 8001caa:	bf00      	nop
 8001cac:	20001f44 	.word	0x20001f44
 8001cb0:	40026400 	.word	0x40026400
 8001cb4:	e000e100 	.word	0xe000e100
 8001cb8:	40012200 	.word	0x40012200
 8001cbc:	40023800 	.word	0x40023800
 8001cc0:	20001f40 	.word	0x20001f40

08001cc4 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001cc4:	b510      	push	{r4, lr}
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001cc6:	4c18      	ldr	r4, [pc, #96]	; (8001d28 <MEAS_start_measure+0x64>)
        buffer[i] = 0;
 8001cc8:	4818      	ldr	r0, [pc, #96]	; (8001d2c <MEAS_start_measure+0x68>)
 8001cca:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001cce:	2100      	movs	r1, #0
 8001cd0:	f028 f9cd 	bl	802a06e <memset>
    MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);

    MEAS_ADC3_scan_init();
 8001cd4:	f7ff ff32 	bl	8001b3c <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001cd8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001cda:	4915      	ldr	r1, [pc, #84]	; (8001d30 <MEAS_start_measure+0x6c>)
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001cdc:	4a15      	ldr	r2, [pc, #84]	; (8001d34 <MEAS_start_measure+0x70>)
 8001cde:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001ce2:	f043 0301 	orr.w	r3, r3, #1
 8001ce6:	62a3      	str	r3, [r4, #40]	; 0x28
 8001ce8:	f8c1 0184 	str.w	r0, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001cec:	6048      	str	r0, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001cee:	6893      	ldr	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001cf0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001cf4:	f043 0301 	orr.w	r3, r3, #1
 8001cf8:	6093      	str	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001cfa:	680b      	ldr	r3, [r1, #0]

    MEAS_ADC3_scan_start();

    static int timeout = 0;
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001cfc:	4a0e      	ldr	r2, [pc, #56]	; (8001d38 <MEAS_start_measure+0x74>)
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001cfe:	f043 0301 	orr.w	r3, r3, #1
 8001d02:	600b      	str	r3, [r1, #0]
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001d04:	6811      	ldr	r1, [r2, #0]
 8001d06:	4b0d      	ldr	r3, [pc, #52]	; (8001d3c <MEAS_start_measure+0x78>)
 8001d08:	4299      	cmp	r1, r3
 8001d0a:	490d      	ldr	r1, [pc, #52]	; (8001d40 <MEAS_start_measure+0x7c>)
 8001d0c:	dd03      	ble.n	8001d16 <MEAS_start_measure+0x52>
 8001d0e:	780b      	ldrb	r3, [r1, #0]
 8001d10:	2b01      	cmp	r3, #1
 8001d12:	d000      	beq.n	8001d16 <MEAS_start_measure+0x52>
 8001d14:	e7fe      	b.n	8001d14 <MEAS_start_measure+0x50>
    {
    	// Wait for data
    	timeout++;
    }
    MEAS_data_ready = false;
 8001d16:	2300      	movs	r3, #0
    timeout=0;

    HAL_Delay(100);
 8001d18:	2064      	movs	r0, #100	; 0x64
    MEAS_data_ready = false;
 8001d1a:	700b      	strb	r3, [r1, #0]
    timeout=0;
 8001d1c:	6013      	str	r3, [r2, #0]
    HAL_Delay(100);
 8001d1e:	f007 f939 	bl	8008f94 <HAL_Delay>

    return ADC_samples;
}
 8001d22:	4802      	ldr	r0, [pc, #8]	; (8001d2c <MEAS_start_measure+0x68>)
 8001d24:	bd10      	pop	{r4, pc}
 8001d26:	bf00      	nop
 8001d28:	40026400 	.word	0x40026400
 8001d2c:	20001b40 	.word	0x20001b40
 8001d30:	e000e100 	.word	0xe000e100
 8001d34:	40012200 	.word	0x40012200
 8001d38:	20001f48 	.word	0x20001f48
 8001d3c:	0001869f 	.word	0x0001869f
 8001d40:	20001f40 	.word	0x20001f40

08001d44 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001d44:	2004      	movs	r0, #4
 8001d46:	4770      	bx	lr

08001d48 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001d48:	2040      	movs	r0, #64	; 0x40
 8001d4a:	4770      	bx	lr

08001d4c <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001d4c:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001d50:	4770      	bx	lr
 8001d52:	bf00      	nop

08001d54 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001d54:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001d56:	4b0e      	ldr	r3, [pc, #56]	; (8001d90 <HAL_MspInit+0x3c>)
 8001d58:	2200      	movs	r2, #0
 8001d5a:	9200      	str	r2, [sp, #0]
 8001d5c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001d5e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001d62:	6459      	str	r1, [r3, #68]	; 0x44
 8001d64:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001d66:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001d6a:	9000      	str	r0, [sp, #0]
 8001d6c:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001d6e:	9201      	str	r2, [sp, #4]
 8001d70:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001d72:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001d76:	6418      	str	r0, [r3, #64]	; 0x40
 8001d78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d7a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d7e:	9301      	str	r3, [sp, #4]
 8001d80:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d82:	210f      	movs	r1, #15
 8001d84:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001d88:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d8a:	f007 b927 	b.w	8008fdc <HAL_NVIC_SetPriority>
 8001d8e:	bf00      	nop
 8001d90:	40023800 	.word	0x40023800

08001d94 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001d94:	4b0b      	ldr	r3, [pc, #44]	; (8001dc4 <HAL_CRC_MspInit+0x30>)
 8001d96:	6802      	ldr	r2, [r0, #0]
 8001d98:	429a      	cmp	r2, r3
 8001d9a:	d000      	beq.n	8001d9e <HAL_CRC_MspInit+0xa>
 8001d9c:	4770      	bx	lr
{
 8001d9e:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001da0:	2200      	movs	r2, #0
 8001da2:	9201      	str	r2, [sp, #4]
 8001da4:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001da8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001dac:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001db0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001db4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001db6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001dba:	9301      	str	r3, [sp, #4]
 8001dbc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001dbe:	b002      	add	sp, #8
 8001dc0:	4770      	bx	lr
 8001dc2:	bf00      	nop
 8001dc4:	40023000 	.word	0x40023000

08001dc8 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001dc8:	4b0a      	ldr	r3, [pc, #40]	; (8001df4 <HAL_DMA2D_MspInit+0x2c>)
 8001dca:	6802      	ldr	r2, [r0, #0]
 8001dcc:	429a      	cmp	r2, r3
 8001dce:	d000      	beq.n	8001dd2 <HAL_DMA2D_MspInit+0xa>
 8001dd0:	4770      	bx	lr
{
 8001dd2:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001dd4:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001dd8:	2200      	movs	r2, #0
 8001dda:	9201      	str	r2, [sp, #4]
 8001ddc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dde:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001de2:	631a      	str	r2, [r3, #48]	; 0x30
 8001de4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001de6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001dea:	9301      	str	r3, [sp, #4]
 8001dec:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001dee:	b002      	add	sp, #8
 8001df0:	4770      	bx	lr
 8001df2:	bf00      	nop
 8001df4:	4002b000 	.word	0x4002b000

08001df8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001df8:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001dfc:	4b2e      	ldr	r3, [pc, #184]	; (8001eb8 <HAL_I2C_MspInit+0xc0>)
 8001dfe:	6802      	ldr	r2, [r0, #0]
{
 8001e00:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e02:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001e04:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e06:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001e0a:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001e0e:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001e10:	d002      	beq.n	8001e18 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001e12:	b00a      	add	sp, #40	; 0x28
 8001e14:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e18:	4d28      	ldr	r5, [pc, #160]	; (8001ebc <HAL_I2C_MspInit+0xc4>)
 8001e1a:	9401      	str	r4, [sp, #4]
 8001e1c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e1e:	4828      	ldr	r0, [pc, #160]	; (8001ec0 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e20:	f043 0304 	orr.w	r3, r3, #4
 8001e24:	632b      	str	r3, [r5, #48]	; 0x30
 8001e26:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e28:	f003 0304 	and.w	r3, r3, #4
 8001e2c:	9301      	str	r3, [sp, #4]
 8001e2e:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e30:	9402      	str	r4, [sp, #8]
 8001e32:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e34:	f043 0301 	orr.w	r3, r3, #1
 8001e38:	632b      	str	r3, [r5, #48]	; 0x30
 8001e3a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e3c:	f003 0301 	and.w	r3, r3, #1
 8001e40:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001e42:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001e46:	f04f 0801 	mov.w	r8, #1
 8001e4a:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e4e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e50:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001e52:	2312      	movs	r3, #18
 8001e54:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001e58:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e5c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e5e:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e60:	f007 f9b6 	bl	80091d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e64:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001e66:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001e6a:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e6c:	4815      	ldr	r0, [pc, #84]	; (8001ec4 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e6e:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001e70:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001e74:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e78:	f007 f9aa 	bl	80091d0 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001e7c:	9403      	str	r4, [sp, #12]
 8001e7e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001e80:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001e84:	642b      	str	r3, [r5, #64]	; 0x40
 8001e86:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001e88:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001e8c:	4622      	mov	r2, r4
 8001e8e:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001e90:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001e92:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001e94:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001e96:	f007 f8a1 	bl	8008fdc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001e9a:	2048      	movs	r0, #72	; 0x48
 8001e9c:	f007 f8dc 	bl	8009058 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001ea0:	6a2b      	ldr	r3, [r5, #32]
 8001ea2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001ea6:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001ea8:	6a2b      	ldr	r3, [r5, #32]
 8001eaa:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001eae:	622b      	str	r3, [r5, #32]
}
 8001eb0:	b00a      	add	sp, #40	; 0x28
 8001eb2:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001eb6:	bf00      	nop
 8001eb8:	40005c00 	.word	0x40005c00
 8001ebc:	40023800 	.word	0x40023800
 8001ec0:	40020800 	.word	0x40020800
 8001ec4:	40020000 	.word	0x40020000

08001ec8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ecc:	4604      	mov	r4, r0
 8001ece:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ed0:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001ed2:	2230      	movs	r2, #48	; 0x30
 8001ed4:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ed6:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001eda:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001ede:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001ee0:	f028 f8c5 	bl	802a06e <memset>
  if(hltdc->Instance==LTDC)
 8001ee4:	4b67      	ldr	r3, [pc, #412]	; (8002084 <HAL_LTDC_MspInit+0x1bc>)
 8001ee6:	6822      	ldr	r2, [r4, #0]
 8001ee8:	429a      	cmp	r2, r3
 8001eea:	d002      	beq.n	8001ef2 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001eec:	b01a      	add	sp, #104	; 0x68
 8001eee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001ef2:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001ef4:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001ef6:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001ef8:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001efa:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001efc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f00:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001f02:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001f04:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f06:	f009 fbcd 	bl	800b6a4 <HAL_RCCEx_PeriphCLKConfig>
 8001f0a:	2800      	cmp	r0, #0
 8001f0c:	f040 80b7 	bne.w	800207e <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f10:	4b5d      	ldr	r3, [pc, #372]	; (8002088 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f12:	485e      	ldr	r0, [pc, #376]	; (800208c <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f14:	2400      	movs	r4, #0
 8001f16:	9401      	str	r4, [sp, #4]
 8001f18:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f1a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001f1e:	645a      	str	r2, [r3, #68]	; 0x44
 8001f20:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f22:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001f26:	9201      	str	r2, [sp, #4]
 8001f28:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f2a:	9402      	str	r4, [sp, #8]
 8001f2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f2e:	f042 0220 	orr.w	r2, r2, #32
 8001f32:	631a      	str	r2, [r3, #48]	; 0x30
 8001f34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f36:	f002 0220 	and.w	r2, r2, #32
 8001f3a:	9202      	str	r2, [sp, #8]
 8001f3c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f3e:	9403      	str	r4, [sp, #12]
 8001f40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f42:	f042 0201 	orr.w	r2, r2, #1
 8001f46:	631a      	str	r2, [r3, #48]	; 0x30
 8001f48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f4a:	f002 0201 	and.w	r2, r2, #1
 8001f4e:	9203      	str	r2, [sp, #12]
 8001f50:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001f52:	9404      	str	r4, [sp, #16]
 8001f54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f56:	f042 0202 	orr.w	r2, r2, #2
 8001f5a:	631a      	str	r2, [r3, #48]	; 0x30
 8001f5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f5e:	f002 0202 	and.w	r2, r2, #2
 8001f62:	9204      	str	r2, [sp, #16]
 8001f64:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001f66:	9405      	str	r4, [sp, #20]
 8001f68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f6a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001f6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001f70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f72:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001f76:	9205      	str	r2, [sp, #20]
 8001f78:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f7a:	9406      	str	r4, [sp, #24]
 8001f7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f7e:	f042 0204 	orr.w	r2, r2, #4
 8001f82:	631a      	str	r2, [r3, #48]	; 0x30
 8001f84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f86:	f002 0204 	and.w	r2, r2, #4
 8001f8a:	9206      	str	r2, [sp, #24]
 8001f8c:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f8e:	9407      	str	r4, [sp, #28]
 8001f90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f92:	f042 0208 	orr.w	r2, r2, #8
 8001f96:	631a      	str	r2, [r3, #48]	; 0x30
 8001f98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f9a:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001f9e:	2600      	movs	r6, #0
 8001fa0:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fa2:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fa4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fa6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001fa8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001fac:	2302      	movs	r3, #2
 8001fae:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001fb2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fb6:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fb8:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fba:	f007 f909 	bl	80091d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fbe:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001fc0:	f641 0258 	movw	r2, #6232	; 0x1858
 8001fc4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fc6:	4832      	ldr	r0, [pc, #200]	; (8002090 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fc8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001fca:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001fce:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001fd2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fd6:	f007 f8fb 	bl	80091d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fda:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001fdc:	2203      	movs	r2, #3
 8001fde:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fe0:	482c      	ldr	r0, [pc, #176]	; (8002094 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001fe2:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001fe6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001fea:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fee:	f007 f8ef 	bl	80091d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ff2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001ff4:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001ff8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ffa:	4826      	ldr	r0, [pc, #152]	; (8002094 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ffc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001ffe:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002002:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002006:	f007 f8e3 	bl	80091d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800200a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800200c:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002010:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002012:	4821      	ldr	r0, [pc, #132]	; (8002098 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002014:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002016:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800201a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800201e:	f007 f8d7 	bl	80091d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002022:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002024:	22c0      	movs	r2, #192	; 0xc0
 8002026:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002028:	481c      	ldr	r0, [pc, #112]	; (800209c <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800202a:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800202c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002030:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002034:	f007 f8cc 	bl	80091d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002038:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800203a:	2208      	movs	r2, #8
 800203c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800203e:	4818      	ldr	r0, [pc, #96]	; (80020a0 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002040:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002042:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002046:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800204a:	f007 f8c1 	bl	80091d0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800204e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002050:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002052:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002056:	4810      	ldr	r0, [pc, #64]	; (8002098 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002058:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800205c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002060:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002064:	f007 f8b4 	bl	80091d0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002068:	4622      	mov	r2, r4
 800206a:	2105      	movs	r1, #5
 800206c:	2058      	movs	r0, #88	; 0x58
 800206e:	f006 ffb5 	bl	8008fdc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002072:	2058      	movs	r0, #88	; 0x58
 8002074:	f006 fff0 	bl	8009058 <HAL_NVIC_EnableIRQ>
}
 8002078:	b01a      	add	sp, #104	; 0x68
 800207a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800207e:	f7ff fd0b 	bl	8001a98 <Error_Handler>
 8002082:	e745      	b.n	8001f10 <HAL_LTDC_MspInit+0x48>
 8002084:	40016800 	.word	0x40016800
 8002088:	40023800 	.word	0x40023800
 800208c:	40021400 	.word	0x40021400
 8002090:	40020000 	.word	0x40020000
 8002094:	40020400 	.word	0x40020400
 8002098:	40021800 	.word	0x40021800
 800209c:	40020800 	.word	0x40020800
 80020a0:	40020c00 	.word	0x40020c00
 80020a4:	00000000 	.word	0x00000000

080020a8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80020a8:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 80020aa:	4a1b      	ldr	r2, [pc, #108]	; (8002118 <HAL_SPI_MspInit+0x70>)
 80020ac:	6801      	ldr	r1, [r0, #0]
{
 80020ae:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80020b0:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 80020b2:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80020b4:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80020b8:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80020bc:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 80020be:	d001      	beq.n	80020c4 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80020c0:	b008      	add	sp, #32
 80020c2:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 80020c4:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 80020c8:	9300      	str	r3, [sp, #0]
 80020ca:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80020cc:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 80020d0:	6450      	str	r0, [r2, #68]	; 0x44
 80020d2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80020d4:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 80020d8:	9000      	str	r0, [sp, #0]
 80020da:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80020dc:	9301      	str	r3, [sp, #4]
 80020de:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020e0:	480e      	ldr	r0, [pc, #56]	; (800211c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80020e2:	f043 0320 	orr.w	r3, r3, #32
 80020e6:	6313      	str	r3, [r2, #48]	; 0x30
 80020e8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80020ea:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002110 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80020ee:	f003 0320 	and.w	r3, r3, #32
 80020f2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020f4:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80020f6:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020f8:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80020fa:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80020fe:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002102:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002104:	f007 f864 	bl	80091d0 <HAL_GPIO_Init>
}
 8002108:	b008      	add	sp, #32
 800210a:	bd10      	pop	{r4, pc}
 800210c:	f3af 8000 	nop.w
 8002110:	00000380 	.word	0x00000380
 8002114:	00000002 	.word	0x00000002
 8002118:	40015000 	.word	0x40015000
 800211c:	40021400 	.word	0x40021400

08002120 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8002120:	4a12      	ldr	r2, [pc, #72]	; (800216c <HAL_TIM_Base_MspInit+0x4c>)
 8002122:	6803      	ldr	r3, [r0, #0]
 8002124:	4293      	cmp	r3, r2
{
 8002126:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8002128:	d012      	beq.n	8002150 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 800212a:	4a11      	ldr	r2, [pc, #68]	; (8002170 <HAL_TIM_Base_MspInit+0x50>)
 800212c:	4293      	cmp	r3, r2
 800212e:	d001      	beq.n	8002134 <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002130:	b002      	add	sp, #8
 8002132:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002134:	4b0f      	ldr	r3, [pc, #60]	; (8002174 <HAL_TIM_Base_MspInit+0x54>)
 8002136:	2200      	movs	r2, #0
 8002138:	9201      	str	r2, [sp, #4]
 800213a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800213c:	f042 0202 	orr.w	r2, r2, #2
 8002140:	641a      	str	r2, [r3, #64]	; 0x40
 8002142:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002144:	f003 0302 	and.w	r3, r3, #2
 8002148:	9301      	str	r3, [sp, #4]
 800214a:	9b01      	ldr	r3, [sp, #4]
}
 800214c:	b002      	add	sp, #8
 800214e:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002150:	4b08      	ldr	r3, [pc, #32]	; (8002174 <HAL_TIM_Base_MspInit+0x54>)
 8002152:	2200      	movs	r2, #0
 8002154:	9200      	str	r2, [sp, #0]
 8002156:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002158:	f042 0201 	orr.w	r2, r2, #1
 800215c:	645a      	str	r2, [r3, #68]	; 0x44
 800215e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002160:	f003 0301 	and.w	r3, r3, #1
 8002164:	9300      	str	r3, [sp, #0]
 8002166:	9b00      	ldr	r3, [sp, #0]
}
 8002168:	b002      	add	sp, #8
 800216a:	4770      	bx	lr
 800216c:	40010000 	.word	0x40010000
 8002170:	40000400 	.word	0x40000400
 8002174:	40023800 	.word	0x40023800

08002178 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002178:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800217a:	4b2b      	ldr	r3, [pc, #172]	; (8002228 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800217c:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 800217e:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002180:	2200      	movs	r2, #0
 8002182:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002184:	2c00      	cmp	r4, #0
 8002186:	d14c      	bne.n	8002222 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002188:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800218a:	4a28      	ldr	r2, [pc, #160]	; (800222c <HAL_SDRAM_MspInit+0xb4>)
 800218c:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 800218e:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002190:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002192:	4827      	ldr	r0, [pc, #156]	; (8002230 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002194:	433b      	orrs	r3, r7
 8002196:	6393      	str	r3, [r2, #56]	; 0x38
 8002198:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800219a:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800219c:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800219e:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80021a0:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 80021a4:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021a6:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80021a8:	2302      	movs	r3, #2
 80021aa:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021ae:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80021b2:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021b4:	f007 f80c 	bl	80091d0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021b8:	481e      	ldr	r0, [pc, #120]	; (8002234 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80021ba:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021bc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021be:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021c0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021c4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021c8:	f007 f802 	bl	80091d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80021cc:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021d0:	4819      	ldr	r0, [pc, #100]	; (8002238 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80021d2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021d4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021d6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021da:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021de:	f006 fff7 	bl	80091d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80021e2:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80021e6:	4815      	ldr	r0, [pc, #84]	; (800223c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80021e8:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80021ea:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021ec:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021f0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80021f4:	f006 ffec 	bl	80091d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80021f8:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80021fc:	4810      	ldr	r0, [pc, #64]	; (8002240 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80021fe:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002200:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002202:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002206:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800220a:	f006 ffe1 	bl	80091d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800220e:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002210:	480c      	ldr	r0, [pc, #48]	; (8002244 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002212:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002214:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002216:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800221a:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800221c:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800221e:	f006 ffd7 	bl	80091d0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002222:	b009      	add	sp, #36	; 0x24
 8002224:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002226:	bf00      	nop
 8002228:	20001f4c 	.word	0x20001f4c
 800222c:	40023800 	.word	0x40023800
 8002230:	40021400 	.word	0x40021400
 8002234:	40020800 	.word	0x40020800
 8002238:	40021800 	.word	0x40021800
 800223c:	40021000 	.word	0x40021000
 8002240:	40020c00 	.word	0x40020c00
 8002244:	40020400 	.word	0x40020400

08002248 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002248:	b570      	push	{r4, r5, r6, lr}
 800224a:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800224c:	4b23      	ldr	r3, [pc, #140]	; (80022dc <HAL_InitTick+0x94>)
 800224e:	2200      	movs	r2, #0
 8002250:	9202      	str	r2, [sp, #8]
 8002252:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002254:	f042 0210 	orr.w	r2, r2, #16
 8002258:	641a      	str	r2, [r3, #64]	; 0x40
 800225a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800225c:	f003 0310 	and.w	r3, r3, #16
 8002260:	9302      	str	r3, [sp, #8]
{
 8002262:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002264:	a901      	add	r1, sp, #4
 8002266:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002268:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800226a:	f009 f9f9 	bl	800b660 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800226e:	9b06      	ldr	r3, [sp, #24]
 8002270:	b9d3      	cbnz	r3, 80022a8 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002272:	f009 f9e5 	bl	800b640 <HAL_RCC_GetPCLK1Freq>
 8002276:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002278:	4a19      	ldr	r2, [pc, #100]	; (80022e0 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800227a:	4c1a      	ldr	r4, [pc, #104]	; (80022e4 <HAL_InitTick+0x9c>)
 800227c:	491a      	ldr	r1, [pc, #104]	; (80022e8 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800227e:	fba2 2303 	umull	r2, r3, r2, r3
 8002282:	0c9b      	lsrs	r3, r3, #18
 8002284:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8002286:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002288:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 800228c:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800228e:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002292:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002294:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002296:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002298:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 800229a:	f00a f811 	bl	800c2c0 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800229e:	4606      	mov	r6, r0
 80022a0:	b130      	cbz	r0, 80022b0 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80022a2:	4630      	mov	r0, r6
 80022a4:	b008      	add	sp, #32
 80022a6:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80022a8:	f009 f9ca 	bl	800b640 <HAL_RCC_GetPCLK1Freq>
 80022ac:	0043      	lsls	r3, r0, #1
 80022ae:	e7e3      	b.n	8002278 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80022b0:	4620      	mov	r0, r4
 80022b2:	f00a f893 	bl	800c3dc <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80022b6:	4606      	mov	r6, r0
 80022b8:	2800      	cmp	r0, #0
 80022ba:	d1f2      	bne.n	80022a2 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80022bc:	2036      	movs	r0, #54	; 0x36
 80022be:	f006 fecb 	bl	8009058 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80022c2:	2d0f      	cmp	r5, #15
 80022c4:	d901      	bls.n	80022ca <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80022c6:	2601      	movs	r6, #1
 80022c8:	e7eb      	b.n	80022a2 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80022ca:	4632      	mov	r2, r6
 80022cc:	4629      	mov	r1, r5
 80022ce:	2036      	movs	r0, #54	; 0x36
 80022d0:	f006 fe84 	bl	8008fdc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80022d4:	4b05      	ldr	r3, [pc, #20]	; (80022ec <HAL_InitTick+0xa4>)
 80022d6:	601d      	str	r5, [r3, #0]
 80022d8:	e7e3      	b.n	80022a2 <HAL_InitTick+0x5a>
 80022da:	bf00      	nop
 80022dc:	40023800 	.word	0x40023800
 80022e0:	431bde83 	.word	0x431bde83
 80022e4:	20001f50 	.word	0x20001f50
 80022e8:	40001000 	.word	0x40001000
 80022ec:	20000080 	.word	0x20000080

080022f0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80022f0:	4770      	bx	lr
 80022f2:	bf00      	nop

080022f4 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80022f4:	e7fe      	b.n	80022f4 <HardFault_Handler>
 80022f6:	bf00      	nop

080022f8 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80022f8:	e7fe      	b.n	80022f8 <MemManage_Handler>
 80022fa:	bf00      	nop

080022fc <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80022fc:	e7fe      	b.n	80022fc <BusFault_Handler>
 80022fe:	bf00      	nop

08002300 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002300:	e7fe      	b.n	8002300 <UsageFault_Handler>
 8002302:	bf00      	nop

08002304 <DebugMon_Handler>:
 8002304:	4770      	bx	lr
 8002306:	bf00      	nop

08002308 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002308:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 800230a:	20c8      	movs	r0, #200	; 0xc8
 800230c:	f006 fe42 	bl	8008f94 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002310:	4804      	ldr	r0, [pc, #16]	; (8002324 <EXTI3_IRQHandler+0x1c>)
 8002312:	2200      	movs	r2, #0
 8002314:	2120      	movs	r1, #32
 8002316:	f007 f89f 	bl	8009458 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800231a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 800231e:	2008      	movs	r0, #8
 8002320:	f007 b8aa 	b.w	8009478 <HAL_GPIO_EXTI_IRQHandler>
 8002324:	40021000 	.word	0x40021000

08002328 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002328:	4801      	ldr	r0, [pc, #4]	; (8002330 <TIM6_DAC_IRQHandler+0x8>)
 800232a:	f00a b9d7 	b.w	800c6dc <HAL_TIM_IRQHandler>
 800232e:	bf00      	nop
 8002330:	20001f50 	.word	0x20001f50

08002334 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002334:	4801      	ldr	r0, [pc, #4]	; (800233c <I2C3_EV_IRQHandler+0x8>)
 8002336:	f007 bfff 	b.w	800a338 <HAL_I2C_EV_IRQHandler>
 800233a:	bf00      	nop
 800233c:	20001928 	.word	0x20001928

08002340 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002340:	4801      	ldr	r0, [pc, #4]	; (8002348 <LTDC_IRQHandler+0x8>)
 8002342:	f008 bd73 	b.w	800ae2c <HAL_LTDC_IRQHandler>
 8002346:	bf00      	nop
 8002348:	2000197c 	.word	0x2000197c

0800234c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800234c:	2001      	movs	r0, #1
 800234e:	4770      	bx	lr

08002350 <_kill>:

int _kill(int pid, int sig)
{
 8002350:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002352:	f027 ff85 	bl	802a260 <__errno>
 8002356:	2316      	movs	r3, #22
 8002358:	6003      	str	r3, [r0, #0]
	return -1;
}
 800235a:	f04f 30ff 	mov.w	r0, #4294967295
 800235e:	bd08      	pop	{r3, pc}

08002360 <_exit>:

void _exit (int status)
{
 8002360:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002362:	f027 ff7d 	bl	802a260 <__errno>
 8002366:	2316      	movs	r3, #22
 8002368:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800236a:	e7fe      	b.n	800236a <_exit+0xa>

0800236c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800236c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800236e:	1e16      	subs	r6, r2, #0
 8002370:	dd07      	ble.n	8002382 <_read+0x16>
 8002372:	460c      	mov	r4, r1
 8002374:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002376:	f3af 8000 	nop.w
 800237a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800237e:	42a5      	cmp	r5, r4
 8002380:	d1f9      	bne.n	8002376 <_read+0xa>
	}

return len;
}
 8002382:	4630      	mov	r0, r6
 8002384:	bd70      	pop	{r4, r5, r6, pc}
 8002386:	bf00      	nop

08002388 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002388:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800238a:	1e16      	subs	r6, r2, #0
 800238c:	dd07      	ble.n	800239e <_write+0x16>
 800238e:	460c      	mov	r4, r1
 8002390:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002392:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002396:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800239a:	42ac      	cmp	r4, r5
 800239c:	d1f9      	bne.n	8002392 <_write+0xa>
	}
	return len;
}
 800239e:	4630      	mov	r0, r6
 80023a0:	bd70      	pop	{r4, r5, r6, pc}
 80023a2:	bf00      	nop

080023a4 <_close>:

int _close(int file)
{
	return -1;
}
 80023a4:	f04f 30ff 	mov.w	r0, #4294967295
 80023a8:	4770      	bx	lr
 80023aa:	bf00      	nop

080023ac <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80023ac:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80023b0:	604b      	str	r3, [r1, #4]
	return 0;
}
 80023b2:	2000      	movs	r0, #0
 80023b4:	4770      	bx	lr
 80023b6:	bf00      	nop

080023b8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80023b8:	2001      	movs	r0, #1
 80023ba:	4770      	bx	lr

080023bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80023bc:	2000      	movs	r0, #0
 80023be:	4770      	bx	lr

080023c0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80023c0:	4a0b      	ldr	r2, [pc, #44]	; (80023f0 <_sbrk+0x30>)
{
 80023c2:	b508      	push	{r3, lr}
 80023c4:	4603      	mov	r3, r0
	if (heap_end == 0)
 80023c6:	6810      	ldr	r0, [r2, #0]
 80023c8:	b128      	cbz	r0, 80023d6 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80023ca:	4403      	add	r3, r0
 80023cc:	4669      	mov	r1, sp
 80023ce:	428b      	cmp	r3, r1
 80023d0:	d807      	bhi.n	80023e2 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80023d2:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80023d4:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80023d6:	4807      	ldr	r0, [pc, #28]	; (80023f4 <_sbrk+0x34>)
 80023d8:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80023da:	4403      	add	r3, r0
 80023dc:	4669      	mov	r1, sp
 80023de:	428b      	cmp	r3, r1
 80023e0:	d9f7      	bls.n	80023d2 <_sbrk+0x12>
		errno = ENOMEM;
 80023e2:	f027 ff3d 	bl	802a260 <__errno>
 80023e6:	230c      	movs	r3, #12
 80023e8:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80023ea:	f04f 30ff 	mov.w	r0, #4294967295
}
 80023ee:	bd08      	pop	{r3, pc}
 80023f0:	20001f98 	.word	0x20001f98
 80023f4:	20013ab8 	.word	0x20013ab8

080023f8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80023f8:	4770      	bx	lr

080023fa <_ZN23ApplicationFontProviderD0Ev>:
 80023fa:	b510      	push	{r4, lr}
 80023fc:	2104      	movs	r1, #4
 80023fe:	4604      	mov	r4, r0
 8002400:	f026 fe1d 	bl	802903e <_ZdlPvj>
 8002404:	4620      	mov	r0, r4
 8002406:	bd10      	pop	{r4, pc}

08002408 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002408:	b508      	push	{r3, lr}
    switch (typography)
 800240a:	2903      	cmp	r1, #3
 800240c:	d813      	bhi.n	8002436 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800240e:	e8df f001 	tbb	[pc, r1]
 8002412:	0602      	.short	0x0602
 8002414:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002416:	f005 fe3b 	bl	8008090 <_ZN17TypedTextDatabase8getFontsEv>
 800241a:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 800241c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800241e:	f005 fe37 	bl	8008090 <_ZN17TypedTextDatabase8getFontsEv>
 8002422:	6840      	ldr	r0, [r0, #4]
 8002424:	e7fa      	b.n	800241c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002426:	f005 fe33 	bl	8008090 <_ZN17TypedTextDatabase8getFontsEv>
 800242a:	6880      	ldr	r0, [r0, #8]
 800242c:	e7f6      	b.n	800241c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800242e:	f005 fe2f 	bl	8008090 <_ZN17TypedTextDatabase8getFontsEv>
 8002432:	68c0      	ldr	r0, [r0, #12]
 8002434:	e7f2      	b.n	800241c <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002436:	2000      	movs	r0, #0
 8002438:	e7f0      	b.n	800241c <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

0800243c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800243c:	4800      	ldr	r0, [pc, #0]	; (8002440 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800243e:	4770      	bx	lr
 8002440:	0802b554 	.word	0x0802b554

08002444 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002444:	200d      	movs	r0, #13
 8002446:	4770      	bx	lr

08002448 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002448:	b513      	push	{r0, r1, r4, lr}
 800244a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800244c:	b151      	cbz	r1, 8002464 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800244e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002450:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002452:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002456:	aa01      	add	r2, sp, #4
 8002458:	689c      	ldr	r4, [r3, #8]
 800245a:	f10d 0303 	add.w	r3, sp, #3
 800245e:	47a0      	blx	r4
        return glyph;
    }
 8002460:	b002      	add	sp, #8
 8002462:	bd10      	pop	{r4, pc}
            return 0;
 8002464:	4608      	mov	r0, r1
 8002466:	e7fb      	b.n	8002460 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002468 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002468:	89c0      	ldrh	r0, [r0, #14]
 800246a:	4770      	bx	lr

0800246c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800246c:	8a00      	ldrh	r0, [r0, #16]
 800246e:	4770      	bx	lr

08002470 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002470:	88c0      	ldrh	r0, [r0, #6]
 8002472:	4770      	bx	lr

08002474 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002474:	8880      	ldrh	r0, [r0, #4]
 8002476:	4770      	bx	lr

08002478 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002478:	7a80      	ldrb	r0, [r0, #10]
    }
 800247a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800247e:	4770      	bx	lr

08002480 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002480:	7a80      	ldrb	r0, [r0, #10]
    }
 8002482:	09c0      	lsrs	r0, r0, #7
 8002484:	4770      	bx	lr

08002486 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002486:	4770      	bx	lr

08002488 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002488:	4770      	bx	lr

0800248a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800248a:	4770      	bx	lr

0800248c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800248c:	4770      	bx	lr

0800248e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800248e:	4770      	bx	lr

08002490 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002490:	4770      	bx	lr

08002492 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002492:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002494:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002496:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002498:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800249a:	466d      	mov	r5, sp
 800249c:	4601      	mov	r1, r0
 800249e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80024a2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80024a4:	4628      	mov	r0, r5
 80024a6:	4798      	blx	r3
 80024a8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80024ac:	343c      	adds	r4, #60	; 0x3c
 80024ae:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80024b2:	b005      	add	sp, #20
 80024b4:	bd30      	pop	{r4, r5, pc}

080024b6 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80024b6:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80024b8:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80024ba:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80024bc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80024be:	466d      	mov	r5, sp
 80024c0:	4601      	mov	r1, r0
 80024c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80024c6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80024c8:	4628      	mov	r0, r5
 80024ca:	4798      	blx	r3
 80024cc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80024d0:	343c      	adds	r4, #60	; 0x3c
 80024d2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80024d6:	b005      	add	sp, #20
 80024d8:	bd30      	pop	{r4, r5, pc}

080024da <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80024da:	2200      	movs	r2, #0
 80024dc:	8002      	strh	r2, [r0, #0]
 80024de:	8042      	strh	r2, [r0, #2]
 80024e0:	8082      	strh	r2, [r0, #4]
 80024e2:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80024e4:	4770      	bx	lr

080024e6 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80024e6:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80024ea:	4770      	bx	lr

080024ec <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024ec:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80024ee:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024f0:	4604      	mov	r4, r0
        setX(x);
 80024f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80024f4:	4615      	mov	r5, r2
        setX(x);
 80024f6:	4798      	blx	r3
        setBaselineY(baselineY);
 80024f8:	6823      	ldr	r3, [r4, #0]
 80024fa:	4629      	mov	r1, r5
 80024fc:	4620      	mov	r0, r4
 80024fe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002504:	4718      	bx	r3

08002506 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002506:	2000      	movs	r0, #0
 8002508:	4770      	bx	lr

0800250a <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800250a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800250c:	4770      	bx	lr

0800250e <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 800250e:	4770      	bx	lr

08002510 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002510:	4770      	bx	lr

08002512 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002512:	4770      	bx	lr

08002514 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002514:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002516:	68c2      	ldr	r2, [r0, #12]
 8002518:	6844      	ldr	r4, [r0, #4]
 800251a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800251c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800251e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002522:	07d2      	lsls	r2, r2, #31
 8002524:	bf48      	it	mi
 8002526:	5962      	ldrmi	r2, [r4, r5]
 8002528:	689b      	ldr	r3, [r3, #8]
    }
 800252a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800252c:	bf48      	it	mi
 800252e:	58d3      	ldrmi	r3, [r2, r3]
 8002530:	4718      	bx	r3

08002532 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002532:	6843      	ldr	r3, [r0, #4]
 8002534:	b12b      	cbz	r3, 8002542 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002536:	6883      	ldr	r3, [r0, #8]
 8002538:	b92b      	cbnz	r3, 8002546 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800253a:	68c0      	ldr	r0, [r0, #12]
 800253c:	f000 0001 	and.w	r0, r0, #1
 8002540:	4770      	bx	lr
 8002542:	4618      	mov	r0, r3
 8002544:	4770      	bx	lr
 8002546:	2001      	movs	r0, #1
    }
 8002548:	4770      	bx	lr

0800254a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800254a:	b510      	push	{r4, lr}
    }
 800254c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800254e:	4604      	mov	r4, r0
    }
 8002550:	f026 fd75 	bl	802903e <_ZdlPvj>
 8002554:	4620      	mov	r0, r4
 8002556:	bd10      	pop	{r4, pc}

08002558 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002558:	b510      	push	{r4, lr}
 800255a:	214c      	movs	r1, #76	; 0x4c
 800255c:	4604      	mov	r4, r0
 800255e:	f026 fd6e 	bl	802903e <_ZdlPvj>
 8002562:	4620      	mov	r0, r4
 8002564:	bd10      	pop	{r4, pc}

08002566 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002566:	b510      	push	{r4, lr}
 8002568:	2110      	movs	r1, #16
 800256a:	4604      	mov	r4, r0
 800256c:	f026 fd67 	bl	802903e <_ZdlPvj>
 8002570:	4620      	mov	r0, r4
 8002572:	bd10      	pop	{r4, pc}

08002574 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002574:	b510      	push	{r4, lr}
 8002576:	4b03      	ldr	r3, [pc, #12]	; (8002584 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002578:	6003      	str	r3, [r0, #0]
 800257a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800257c:	f010 ffe6 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002580:	4620      	mov	r0, r4
 8002582:	bd10      	pop	{r4, pc}
 8002584:	0802b8c0 	.word	0x0802b8c0

08002588 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002588:	b507      	push	{r0, r1, r2, lr}
 800258a:	4b07      	ldr	r3, [pc, #28]	; (80025a8 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 800258c:	6003      	str	r3, [r0, #0]
 800258e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002590:	f010 ffdc 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002594:	9801      	ldr	r0, [sp, #4]
 8002596:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800259a:	f026 fd50 	bl	802903e <_ZdlPvj>
 800259e:	9801      	ldr	r0, [sp, #4]
 80025a0:	b003      	add	sp, #12
 80025a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80025a6:	bf00      	nop
 80025a8:	0802b8c0 	.word	0x0802b8c0

080025ac <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80025ac:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80025ae:	f7fe fd37 	bl	8001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80025b2:	bd08      	pop	{r3, pc}

080025b4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025b4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80025b6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025b8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80025ba:	4b12      	ldr	r3, [pc, #72]	; (8002604 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80025bc:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80025be:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80025c0:	b28d      	uxth	r5, r1
 80025c2:	b92b      	cbnz	r3, 80025d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80025c4:	4b10      	ldr	r3, [pc, #64]	; (8002608 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80025c6:	4a11      	ldr	r2, [pc, #68]	; (800260c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80025c8:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80025ca:	4811      	ldr	r0, [pc, #68]	; (8002610 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80025cc:	f027 fb4a 	bl	8029c64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80025d0:	4910      	ldr	r1, [pc, #64]	; (8002614 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80025d2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80025d4:	8809      	ldrh	r1, [r1, #0]
 80025d6:	4291      	cmp	r1, r2
 80025d8:	d803      	bhi.n	80025e2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80025da:	4b0f      	ldr	r3, [pc, #60]	; (8002618 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80025dc:	4a0b      	ldr	r2, [pc, #44]	; (800260c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80025de:	216d      	movs	r1, #109	; 0x6d
 80025e0:	e7f3      	b.n	80025ca <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80025e2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80025e6:	4b0d      	ldr	r3, [pc, #52]	; (800261c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80025ee:	6803      	ldr	r3, [r0, #0]
 80025f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025f2:	4798      	blx	r3
 80025f4:	1a28      	subs	r0, r5, r0
 80025f6:	b201      	sxth	r1, r0
 80025f8:	4633      	mov	r3, r6
 80025fa:	4620      	mov	r0, r4
    }
 80025fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002600:	4718      	bx	r3
 8002602:	bf00      	nop
 8002604:	20012ed4 	.word	0x20012ed4
 8002608:	0802b658 	.word	0x0802b658
 800260c:	0802b69a 	.word	0x0802b69a
 8002610:	0802b6d5 	.word	0x0802b6d5
 8002614:	20012ed8 	.word	0x20012ed8
 8002618:	0802b71c 	.word	0x0802b71c
 800261c:	20012edc 	.word	0x20012edc

08002620 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002620:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002622:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8002626:	4299      	cmp	r1, r3
{
 8002628:	4604      	mov	r4, r0
 800262a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800262c:	d103      	bne.n	8002636 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800262e:	f012 fc8f 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002632:	f001 f921 	bl	8003878 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8002636:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800263a:	429d      	cmp	r5, r3
 800263c:	d103      	bne.n	8002646 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800263e:	f012 fc87 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002642:	f001 f9d9 	bl	80039f8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8002646:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800264a:	42a5      	cmp	r5, r4
 800264c:	d105      	bne.n	800265a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800264e:	f012 fc7f 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002652:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 8002656:	f001 b9df 	b.w	8003a18 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800265a:	bd38      	pop	{r3, r4, r5, pc}

0800265c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800265c:	2200      	movs	r2, #0
 800265e:	f04f 31ff 	mov.w	r1, #4294967295
 8002662:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002666:	6082      	str	r2, [r0, #8]
    }
 8002668:	4770      	bx	lr

0800266a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800266a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800266c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800266e:	4604      	mov	r4, r0
        setX(x);
 8002670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002672:	4615      	mov	r5, r2
        setX(x);
 8002674:	4798      	blx	r3
        setY(y);
 8002676:	6823      	ldr	r3, [r4, #0]
 8002678:	4629      	mov	r1, r5
 800267a:	4620      	mov	r0, r4
 800267c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800267e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002682:	4718      	bx	r3

08002684 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002684:	b570      	push	{r4, r5, r6, lr}
 8002686:	4604      	mov	r4, r0
 8002688:	461d      	mov	r5, r3
 800268a:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800268e:	f7ff ffec 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002692:	6823      	ldr	r3, [r4, #0]
 8002694:	4629      	mov	r1, r5
 8002696:	4620      	mov	r0, r4
 8002698:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800269a:	4798      	blx	r3
        setHeight(height);
 800269c:	6823      	ldr	r3, [r4, #0]
 800269e:	4631      	mov	r1, r6
 80026a0:	4620      	mov	r0, r4
 80026a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80026a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80026a8:	4718      	bx	r3
	...

080026ac <_ZN8touchgfx6WidgetC1Ev>:
 80026ac:	2200      	movs	r2, #0
 80026ae:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80026b2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80026b6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80026ba:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80026be:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026c2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80026c4:	4a01      	ldr	r2, [pc, #4]	; (80026cc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80026c6:	6002      	str	r2, [r0, #0]
 80026c8:	4770      	bx	lr
 80026ca:	bf00      	nop
 80026cc:	0802b7a0 	.word	0x0802b7a0

080026d0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80026d0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026d2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80026d4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026d6:	2100      	movs	r1, #0
 80026d8:	f027 fcc9 	bl	802a06e <memset>
 80026dc:	4620      	mov	r0, r4
 80026de:	f7ff ffe5 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 80026e2:	4b0a      	ldr	r3, [pc, #40]	; (800270c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80026e4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80026e6:	4b0a      	ldr	r3, [pc, #40]	; (8002710 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80026e8:	62a3      	str	r3, [r4, #40]	; 0x28
 80026ea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80026ee:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80026f0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80026f4:	2300      	movs	r3, #0
 80026f6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80026fa:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80026fe:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002702:	8723      	strh	r3, [r4, #56]	; 0x38
 8002704:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002706:	4620      	mov	r0, r4
 8002708:	bd10      	pop	{r4, pc}
 800270a:	bf00      	nop
 800270c:	0802e0c8 	.word	0x0802e0c8
 8002710:	0802b808 	.word	0x0802b808

08002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002714:	4b1a      	ldr	r3, [pc, #104]	; (8002780 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002716:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002718:	881b      	ldrh	r3, [r3, #0]
 800271a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800271c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800271e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002720:	d92b      	bls.n	800277a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002722:	4b18      	ldr	r3, [pc, #96]	; (8002784 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	b92b      	cbnz	r3, 8002734 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002728:	4b17      	ldr	r3, [pc, #92]	; (8002788 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800272a:	4a18      	ldr	r2, [pc, #96]	; (800278c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800272c:	4818      	ldr	r0, [pc, #96]	; (8002790 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800272e:	216c      	movs	r1, #108	; 0x6c
 8002730:	f027 fa98 	bl	8029c64 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002734:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002738:	4b16      	ldr	r3, [pc, #88]	; (8002794 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002740:	4b15      	ldr	r3, [pc, #84]	; (8002798 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002742:	6818      	ldr	r0, [r3, #0]
 8002744:	f005 fc94 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002748:	682b      	ldr	r3, [r5, #0]
 800274a:	9001      	str	r0, [sp, #4]
 800274c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800274e:	4628      	mov	r0, r5
 8002750:	4798      	blx	r3
 8002752:	682b      	ldr	r3, [r5, #0]
 8002754:	9901      	ldr	r1, [sp, #4]
 8002756:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002758:	4604      	mov	r4, r0
 800275a:	4628      	mov	r0, r5
 800275c:	4798      	blx	r3
 800275e:	682b      	ldr	r3, [r5, #0]
 8002760:	9901      	ldr	r1, [sp, #4]
 8002762:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002764:	fb14 f400 	smulbb	r4, r4, r0
 8002768:	4628      	mov	r0, r5
 800276a:	4798      	blx	r3
 800276c:	b2a4      	uxth	r4, r4
 800276e:	1823      	adds	r3, r4, r0
 8002770:	b21b      	sxth	r3, r3
 8002772:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002776:	b002      	add	sp, #8
 8002778:	bd70      	pop	{r4, r5, r6, pc}
 800277a:	2300      	movs	r3, #0
 800277c:	e7f9      	b.n	8002772 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800277e:	bf00      	nop
 8002780:	20012ed8 	.word	0x20012ed8
 8002784:	20012ed4 	.word	0x20012ed4
 8002788:	0802b658 	.word	0x0802b658
 800278c:	0802b69a 	.word	0x0802b69a
 8002790:	0802b6d5 	.word	0x0802b6d5
 8002794:	20012edc 	.word	0x20012edc
 8002798:	20012ee0 	.word	0x20012ee0

0800279c <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 800279c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027a0:	ed2d 8b06 	vpush	{d8-d10}
 80027a4:	4604      	mov	r4, r0
 80027a6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80027a8:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80027aa:	2500      	movs	r5, #0
 80027ac:	f014 f850 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 80027b0:	4b66      	ldr	r3, [pc, #408]	; (800294c <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80027b2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80027b4:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80027b8:	2226      	movs	r2, #38	; 0x26
 80027ba:	4629      	mov	r1, r5
 80027bc:	4658      	mov	r0, fp
 80027be:	f027 fc56 	bl	802a06e <memset>
 80027c2:	4658      	mov	r0, fp
 80027c4:	f7ff ff72 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 80027c8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80027cc:	26ff      	movs	r6, #255	; 0xff
 80027ce:	4b60      	ldr	r3, [pc, #384]	; (8002950 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80027d0:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80027d2:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80027d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027d8:	4629      	mov	r1, r5
 80027da:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80027de:	4650      	mov	r0, sl
        : color(col)
 80027e0:	66a5      	str	r5, [r4, #104]	; 0x68
 80027e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80027e6:	f027 fc42 	bl	802a06e <memset>
 80027ea:	4650      	mov	r0, sl
 80027ec:	f7ff ff5e 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 80027f0:	4b58      	ldr	r3, [pc, #352]	; (8002954 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80027f2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80027f4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80027f8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80027fc:	a90a      	add	r1, sp, #40	; 0x28
 80027fe:	4650      	mov	r0, sl
 8002800:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002804:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002808:	f00f fe99 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800280c:	4648      	mov	r0, r9
 800280e:	f7ff ff5f 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002812:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8002816:	4b50      	ldr	r3, [pc, #320]	; (8002958 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 8002818:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800281c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002820:	4638      	mov	r0, r7
 8002822:	f00e fd55 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 8002826:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800282a:	4618      	mov	r0, r3
 800282c:	9303      	str	r3, [sp, #12]
 800282e:	f7fe fc0b 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002832:	4b4a      	ldr	r3, [pc, #296]	; (800295c <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002834:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002838:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 800283c:	3324      	adds	r3, #36	; 0x24
 800283e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002842:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002846:	4640      	mov	r0, r8
 8002848:	f7ff ff42 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800284c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002850:	4618      	mov	r0, r3
 8002852:	ee08 3a10 	vmov	s16, r3
 8002856:	f7ff ff3b 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800285a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800285e:	4618      	mov	r0, r3
 8002860:	ee08 3a90 	vmov	s17, r3
 8002864:	f7ff ff34 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002868:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800286c:	4618      	mov	r0, r3
 800286e:	ee09 3a10 	vmov	s18, r3
 8002872:	f00f ffa5 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002876:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800287a:	4618      	mov	r0, r3
 800287c:	ee09 3a90 	vmov	s19, r3
 8002880:	f00f ff9e 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002884:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002888:	4618      	mov	r0, r3
 800288a:	ee0a 3a10 	vmov	s20, r3
 800288e:	f00f ff97 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002892:	4a33      	ldr	r2, [pc, #204]	; (8002960 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002894:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002898:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800289c:	4a31      	ldr	r2, [pc, #196]	; (8002964 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800289e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80028a2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80028a6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80028aa:	f010 fe45 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80028ae:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80028b2:	462a      	mov	r2, r5
 80028b4:	4658      	mov	r0, fp
 80028b6:	9300      	str	r3, [sp, #0]
 80028b8:	4629      	mov	r1, r5
 80028ba:	23f0      	movs	r3, #240	; 0xf0
 80028bc:	f7ff fee2 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80028c0:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80028c2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80028c6:	66a3      	str	r3, [r4, #104]	; 0x68
 80028c8:	4659      	mov	r1, fp
 80028ca:	4630      	mov	r0, r6
 80028cc:	f00d f8a8 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80028d0:	462a      	mov	r2, r5
 80028d2:	4650      	mov	r0, sl
 80028d4:	4629      	mov	r1, r5
 80028d6:	f7ff fec8 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80028da:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80028dc:	4650      	mov	r0, sl
 80028de:	a90a      	add	r1, sp, #40	; 0x28
 80028e0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80028e4:	f00f fe2b 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80028e8:	4651      	mov	r1, sl
 80028ea:	4630      	mov	r0, r6
 80028ec:	f00d f898 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 80028f0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80028f4:	2159      	movs	r1, #89	; 0x59
 80028f6:	4648      	mov	r0, r9
 80028f8:	f7ff feb7 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80028fc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002900:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002904:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8002908:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800290c:	4650      	mov	r0, sl
 800290e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002912:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002916:	4649      	mov	r1, r9
 8002918:	4798      	blx	r3
 800291a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800291e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002922:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002926:	4b10      	ldr	r3, [pc, #64]	; (8002968 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8002928:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800292a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800292e:	b92b      	cbnz	r3, 800293c <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002930:	4b0e      	ldr	r3, [pc, #56]	; (800296c <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002932:	4a0f      	ldr	r2, [pc, #60]	; (8002970 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002934:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002936:	480f      	ldr	r0, [pc, #60]	; (8002974 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8002938:	f027 f994 	bl	8029c64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800293c:	4b0e      	ldr	r3, [pc, #56]	; (8002978 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800293e:	881b      	ldrh	r3, [r3, #0]
 8002940:	2b14      	cmp	r3, #20
 8002942:	d81d      	bhi.n	8002980 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002944:	4b0d      	ldr	r3, [pc, #52]	; (800297c <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8002946:	4a0a      	ldr	r2, [pc, #40]	; (8002970 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002948:	2161      	movs	r1, #97	; 0x61
 800294a:	e7f4      	b.n	8002936 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 800294c:	0802b8c0 	.word	0x0802b8c0
 8002950:	0802e158 	.word	0x0802e158
 8002954:	0802e320 	.word	0x0802e320
 8002958:	0802b818 	.word	0x0802b818
 800295c:	0802de8c 	.word	0x0802de8c
 8002960:	0802b8a8 	.word	0x0802b8a8
 8002964:	08002621 	.word	0x08002621
 8002968:	20012ed4 	.word	0x20012ed4
 800296c:	0802b658 	.word	0x0802b658
 8002970:	0802b75a 	.word	0x0802b75a
 8002974:	0802b6d5 	.word	0x0802b6d5
 8002978:	20012ed8 	.word	0x20012ed8
 800297c:	0802b71c 	.word	0x0802b71c
        return texts->getText(typedTextId);
 8002980:	4b93      	ldr	r3, [pc, #588]	; (8002bd0 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002982:	2114      	movs	r1, #20
 8002984:	6818      	ldr	r0, [r3, #0]
 8002986:	f005 fb73 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 800298a:	4a92      	ldr	r2, [pc, #584]	; (8002bd4 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 800298c:	4603      	mov	r3, r0
 800298e:	2104      	movs	r1, #4
 8002990:	4650      	mov	r0, sl
 8002992:	f015 fc4d 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002996:	4648      	mov	r0, r9
        wc1 = value;
 8002998:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800299c:	f00f f9d4 	bl	8011d48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80029a0:	4b8d      	ldr	r3, [pc, #564]	; (8002bd8 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 80029a2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 80029a4:	a90a      	add	r1, sp, #40	; 0x28
 80029a6:	2315      	movs	r3, #21
 80029a8:	4648      	mov	r0, r9
 80029aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80029ae:	f00f f9eb 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80029b2:	4649      	mov	r1, r9
 80029b4:	4630      	mov	r0, r6
 80029b6:	f00d f833 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80029ba:	230a      	movs	r3, #10
 80029bc:	9300      	str	r3, [sp, #0]
 80029be:	2232      	movs	r2, #50	; 0x32
 80029c0:	23f0      	movs	r3, #240	; 0xf0
 80029c2:	4629      	mov	r1, r5
 80029c4:	4638      	mov	r0, r7
 80029c6:	f7ff fe5d 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 80029ca:	9b03      	ldr	r3, [sp, #12]
 80029cc:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80029d0:	22a0      	movs	r2, #160	; 0xa0
 80029d2:	4611      	mov	r1, r2
 80029d4:	4638      	mov	r0, r7
 80029d6:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80029da:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80029de:	f00e fd8d 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80029e2:	22a0      	movs	r2, #160	; 0xa0
 80029e4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80029e8:	4638      	mov	r0, r7
 80029ea:	f00e fd92 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80029ee:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80029f2:	2b20      	cmp	r3, #32
 80029f4:	d005      	beq.n	8002a02 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80029f6:	2320      	movs	r3, #32
 80029f8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 80029fc:	4638      	mov	r0, r7
 80029fe:	f00e fc87 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002a02:	4638      	mov	r0, r7
 8002a04:	2101      	movs	r1, #1
 8002a06:	f00e fd8f 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002a0a:	4639      	mov	r1, r7
 8002a0c:	4630      	mov	r0, r6
 8002a0e:	ad04      	add	r5, sp, #16
        color = newColor;
 8002a10:	f04f 37ff 	mov.w	r7, #4294967295
 8002a14:	f00d f804 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002a18:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002a1c:	223c      	movs	r2, #60	; 0x3c
 8002a1e:	4640      	mov	r0, r8
 8002a20:	2146      	movs	r1, #70	; 0x46
 8002a22:	f7ff fe22 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002a26:	4641      	mov	r1, r8
 8002a28:	4628      	mov	r0, r5
        color = newColor;
 8002a2a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002a2e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002a32:	f00e ff0f 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a36:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a3a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002a3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002a42:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002bd8 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002a46:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002a4a:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002a4c:	a90a      	add	r1, sp, #40	; 0x28
 8002a4e:	4640      	mov	r0, r8
 8002a50:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002a54:	f00f f998 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002a58:	4641      	mov	r1, r8
 8002a5a:	4630      	mov	r0, r6
 8002a5c:	f00c ffe0 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002a60:	ee18 0a10 	vmov	r0, s16
 8002a64:	2223      	movs	r2, #35	; 0x23
 8002a66:	2145      	movs	r1, #69	; 0x45
 8002a68:	f7ff fdff 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8002a6c:	ee18 1a10 	vmov	r1, s16
 8002a70:	4628      	mov	r0, r5
        color = newColor;
 8002a72:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002a76:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002a7a:	f00e feeb 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a7e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a82:	ee18 3a10 	vmov	r3, s16
 8002a86:	333c      	adds	r3, #60	; 0x3c
 8002a88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002a8c:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002a8e:	ee18 0a10 	vmov	r0, s16
 8002a92:	a90a      	add	r1, sp, #40	; 0x28
 8002a94:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002a98:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002a9c:	f00f f974 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002aa0:	ee18 1a10 	vmov	r1, s16
 8002aa4:	4630      	mov	r0, r6
 8002aa6:	f00c ffbb 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002aaa:	ee18 0a90 	vmov	r0, s17
 8002aae:	220c      	movs	r2, #12
 8002ab0:	2136      	movs	r1, #54	; 0x36
 8002ab2:	f7ff fdda 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8002ab6:	ee18 1a90 	vmov	r1, s17
 8002aba:	4628      	mov	r0, r5
        color = newColor;
 8002abc:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002ac0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002ac4:	f00e fec6 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002ac8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002acc:	ee18 3a90 	vmov	r3, s17
 8002ad0:	333c      	adds	r3, #60	; 0x3c
 8002ad2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002ad6:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002ad8:	ee18 0a90 	vmov	r0, s17
 8002adc:	a90a      	add	r1, sp, #40	; 0x28
 8002ade:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ae2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002ae6:	f00f f94f 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002aea:	ee18 1a90 	vmov	r1, s17
 8002aee:	4630      	mov	r0, r6
 8002af0:	f00c ff96 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002af4:	ee19 0a10 	vmov	r0, s18
 8002af8:	22f0      	movs	r2, #240	; 0xf0
 8002afa:	2121      	movs	r1, #33	; 0x21
 8002afc:	f7ff fdb5 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8002b00:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b04:	aa0a      	add	r2, sp, #40	; 0x28
 8002b06:	f04f 0802 	mov.w	r8, #2
 8002b0a:	a909      	add	r1, sp, #36	; 0x24
 8002b0c:	ee19 0a10 	vmov	r0, s18
 8002b10:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002b14:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002b18:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b1c:	f00f fb19 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002b20:	2348      	movs	r3, #72	; 0x48
 8002b22:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002b26:	3510      	adds	r5, #16
        updateTextPosition();
 8002b28:	ee19 0a10 	vmov	r0, s18
 8002b2c:	f7ff fdf2 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002b30:	ee19 1a10 	vmov	r1, s18
 8002b34:	4630      	mov	r0, r6
        colorPressed = col;
 8002b36:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002b3a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002b3e:	f00c ff6f 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002b42:	ee19 0a90 	vmov	r0, s19
 8002b46:	22aa      	movs	r2, #170	; 0xaa
 8002b48:	2121      	movs	r1, #33	; 0x21
 8002b4a:	f7ff fd8e 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b4e:	aa0a      	add	r2, sp, #40	; 0x28
 8002b50:	a909      	add	r1, sp, #36	; 0x24
 8002b52:	ee19 0a90 	vmov	r0, s19
 8002b56:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002b5a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002b5e:	f00f faf8 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002b62:	2347      	movs	r3, #71	; 0x47
 8002b64:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002b68:	ee19 0a90 	vmov	r0, s19
 8002b6c:	f7ff fdd2 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002b70:	ee19 1a90 	vmov	r1, s19
 8002b74:	4630      	mov	r0, r6
        colorPressed = col;
 8002b76:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002b7a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002b7e:	f00c ff4f 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002b82:	ee1a 0a10 	vmov	r0, s20
 8002b86:	2264      	movs	r2, #100	; 0x64
 8002b88:	2121      	movs	r1, #33	; 0x21
 8002b8a:	f7ff fd6e 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002b8e:	aa0a      	add	r2, sp, #40	; 0x28
 8002b90:	a909      	add	r1, sp, #36	; 0x24
 8002b92:	ee1a 0a10 	vmov	r0, s20
 8002b96:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002b9a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002b9e:	f00f fad8 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002ba2:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8002ba4:	ee1a 0a10 	vmov	r0, s20
 8002ba8:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002bac:	f7ff fdb2 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002bb0:	4630      	mov	r0, r6
        colorPressed = col;
 8002bb2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002bb6:	ee1a 1a10 	vmov	r1, s20
 8002bba:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002bbe:	f00c ff2f 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002bc2:	4620      	mov	r0, r4
 8002bc4:	b00d      	add	sp, #52	; 0x34
 8002bc6:	ecbd 8b06 	vpop	{d8-d10}
 8002bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002bce:	bf00      	nop
 8002bd0:	20012ee0 	.word	0x20012ee0
 8002bd4:	0802b792 	.word	0x0802b792
 8002bd8:	0802b808 	.word	0x0802b808

08002bdc <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002bdc:	4770      	bx	lr

08002bde <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002bde:	4770      	bx	lr

08002be0 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002be0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002be2:	68c2      	ldr	r2, [r0, #12]
 8002be4:	6844      	ldr	r4, [r0, #4]
 8002be6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002be8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002bea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002bee:	07d2      	lsls	r2, r2, #31
 8002bf0:	bf48      	it	mi
 8002bf2:	5962      	ldrmi	r2, [r4, r5]
 8002bf4:	689b      	ldr	r3, [r3, #8]
    }
 8002bf6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002bf8:	bf48      	it	mi
 8002bfa:	58d3      	ldrmi	r3, [r2, r3]
 8002bfc:	4718      	bx	r3

08002bfe <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002bfe:	6843      	ldr	r3, [r0, #4]
 8002c00:	b12b      	cbz	r3, 8002c0e <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002c02:	6883      	ldr	r3, [r0, #8]
 8002c04:	b92b      	cbnz	r3, 8002c12 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002c06:	68c0      	ldr	r0, [r0, #12]
 8002c08:	f000 0001 	and.w	r0, r0, #1
 8002c0c:	4770      	bx	lr
 8002c0e:	4618      	mov	r0, r3
 8002c10:	4770      	bx	lr
 8002c12:	2001      	movs	r0, #1
    }
 8002c14:	4770      	bx	lr

08002c16 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002c16:	b510      	push	{r4, lr}
 8002c18:	2110      	movs	r1, #16
 8002c1a:	4604      	mov	r4, r0
 8002c1c:	f026 fa0f 	bl	802903e <_ZdlPvj>
 8002c20:	4620      	mov	r0, r4
 8002c22:	bd10      	pop	{r4, pc}

08002c24 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002c24:	b510      	push	{r4, lr}
 8002c26:	4b03      	ldr	r3, [pc, #12]	; (8002c34 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002c28:	6003      	str	r3, [r0, #0]
 8002c2a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c2c:	f010 fc8e 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c30:	4620      	mov	r0, r4
 8002c32:	bd10      	pop	{r4, pc}
 8002c34:	0802b90c 	.word	0x0802b90c

08002c38 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002c38:	b507      	push	{r0, r1, r2, lr}
 8002c3a:	4b07      	ldr	r3, [pc, #28]	; (8002c58 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002c3c:	6003      	str	r3, [r0, #0]
 8002c3e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c40:	f010 fc84 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c44:	9801      	ldr	r0, [sp, #4]
 8002c46:	f241 015c 	movw	r1, #4188	; 0x105c
 8002c4a:	f026 f9f8 	bl	802903e <_ZdlPvj>
 8002c4e:	9801      	ldr	r0, [sp, #4]
 8002c50:	b003      	add	sp, #12
 8002c52:	f85d fb04 	ldr.w	pc, [sp], #4
 8002c56:	bf00      	nop
 8002c58:	0802b90c 	.word	0x0802b90c

08002c5c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002c5c:	3098      	adds	r0, #152	; 0x98
 8002c5e:	4288      	cmp	r0, r1
{
 8002c60:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002c62:	d105      	bne.n	8002c70 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002c64:	f012 f974 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002c68:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002c6c:	f000 beb4 	b.w	80039d8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002c70:	bd08      	pop	{r3, pc}
	...

08002c74 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002c74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c78:	ed2d 8b02 	vpush	{d8}
 8002c7c:	4604      	mov	r4, r0
 8002c7e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002c80:	46a1      	mov	r9, r4
 8002c82:	2500      	movs	r5, #0
 8002c84:	f013 fde4 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 8002c88:	4ba5      	ldr	r3, [pc, #660]	; (8002f20 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002c8a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002c8c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002c90:	2226      	movs	r2, #38	; 0x26
 8002c92:	4629      	mov	r1, r5
 8002c94:	4648      	mov	r0, r9
 8002c96:	f027 f9ea 	bl	802a06e <memset>
 8002c9a:	4648      	mov	r0, r9
 8002c9c:	f7ff fd06 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8002ca0:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002ca4:	26ff      	movs	r6, #255	; 0xff
 8002ca6:	4b9f      	ldr	r3, [pc, #636]	; (8002f24 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002ca8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002caa:	2226      	movs	r2, #38	; 0x26
 8002cac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002cb0:	4629      	mov	r1, r5
 8002cb2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002cb6:	4640      	mov	r0, r8
 8002cb8:	66a5      	str	r5, [r4, #104]	; 0x68
 8002cba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002cbe:	f027 f9d6 	bl	802a06e <memset>
 8002cc2:	4640      	mov	r0, r8
 8002cc4:	f7ff fcf2 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8002cc8:	4b97      	ldr	r3, [pc, #604]	; (8002f28 <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002cca:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002ccc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002cd0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002cd4:	a90a      	add	r1, sp, #40	; 0x28
 8002cd6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002cda:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002cdc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002ce0:	f00f fc2d 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ce4:	4658      	mov	r0, fp
 8002ce6:	f00f fd6b 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002cea:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002cee:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002cf2:	4618      	mov	r0, r3
 8002cf4:	ee08 3a90 	vmov	s17, r3
 8002cf8:	f7ff fcea 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002cfc:	4638      	mov	r0, r7
 8002cfe:	f00e fae7 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 8002d02:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002d06:	4618      	mov	r0, r3
 8002d08:	9303      	str	r3, [sp, #12]
 8002d0a:	f7fe f99d 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002d0e:	4b87      	ldr	r3, [pc, #540]	; (8002f2c <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002d10:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002d14:	3324      	adds	r3, #36	; 0x24
 8002d16:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002d1a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002d1e:	4618      	mov	r0, r3
 8002d20:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002d24:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002d28:	ee08 3a10 	vmov	s16, r3
 8002d2c:	f7ff fcd0 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002d30:	4650      	mov	r0, sl
 8002d32:	f7ff fccd 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002d36:	4a7e      	ldr	r2, [pc, #504]	; (8002f30 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002d38:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002d3c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002d40:	4a7c      	ldr	r2, [pc, #496]	; (8002f34 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002d42:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002d46:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002d4a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002d4e:	f010 fbf3 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002d52:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002d56:	462a      	mov	r2, r5
 8002d58:	4648      	mov	r0, r9
 8002d5a:	9300      	str	r3, [sp, #0]
 8002d5c:	4629      	mov	r1, r5
 8002d5e:	23f0      	movs	r3, #240	; 0xf0
 8002d60:	f7ff fc90 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d64:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002d66:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002d6a:	66a3      	str	r3, [r4, #104]	; 0x68
 8002d6c:	4649      	mov	r1, r9
 8002d6e:	4630      	mov	r0, r6
 8002d70:	f00c fe56 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002d74:	462a      	mov	r2, r5
 8002d76:	4640      	mov	r0, r8
 8002d78:	4629      	mov	r1, r5
 8002d7a:	f7ff fc76 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8002d7e:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002d82:	4640      	mov	r0, r8
 8002d84:	a90a      	add	r1, sp, #40	; 0x28
 8002d86:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8002d8a:	f00f fbd8 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002d8e:	4641      	mov	r1, r8
 8002d90:	4630      	mov	r0, r6
 8002d92:	f00c fe45 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002d96:	4658      	mov	r0, fp
 8002d98:	f240 1201 	movw	r2, #257	; 0x101
 8002d9c:	2121      	movs	r1, #33	; 0x21
 8002d9e:	f7ff fc64 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8002da2:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002da4:	aa0a      	add	r2, sp, #40	; 0x28
 8002da6:	a909      	add	r1, sp, #36	; 0x24
 8002da8:	4658      	mov	r0, fp
 8002daa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002dae:	2302      	movs	r3, #2
 8002db0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002db4:	f00f f9cd 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002db8:	4658      	mov	r0, fp
 8002dba:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 8002dbe:	f7ff fca9 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002dc2:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002dc6:	330c      	adds	r3, #12
        color = col;
 8002dc8:	f04f 39ff 	mov.w	r9, #4294967295
 8002dcc:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002dd0:	4659      	mov	r1, fp
 8002dd2:	4630      	mov	r0, r6
        colorPressed = col;
 8002dd4:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002dd8:	f00c fe22 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002ddc:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002de0:	223c      	movs	r2, #60	; 0x3c
 8002de2:	ee18 0a90 	vmov	r0, s17
 8002de6:	2120      	movs	r1, #32
 8002de8:	f7ff fc3f 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8002dec:	ee18 1a90 	vmov	r1, s17
 8002df0:	4640      	mov	r0, r8
        color = newColor;
 8002df2:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002df6:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002dfa:	f00e fd2b 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002dfe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002e02:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002e06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002e0a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8002f38 <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002e0e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002e12:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002e14:	ee18 0a90 	vmov	r0, s17
 8002e18:	a90a      	add	r1, sp, #40	; 0x28
 8002e1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002e1e:	f00e ffb3 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e22:	ee18 1a90 	vmov	r1, s17
 8002e26:	4630      	mov	r0, r6
 8002e28:	f00c fdfa 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002e2c:	230a      	movs	r3, #10
 8002e2e:	9300      	str	r3, [sp, #0]
 8002e30:	2232      	movs	r2, #50	; 0x32
 8002e32:	23f0      	movs	r3, #240	; 0xf0
 8002e34:	4629      	mov	r1, r5
 8002e36:	4638      	mov	r0, r7
 8002e38:	f7ff fc24 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e3c:	9b03      	ldr	r3, [sp, #12]
 8002e3e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002e42:	22a0      	movs	r2, #160	; 0xa0
 8002e44:	4611      	mov	r1, r2
 8002e46:	4638      	mov	r0, r7
 8002e48:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002e4c:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002e50:	f00e fb54 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002e54:	22a0      	movs	r2, #160	; 0xa0
 8002e56:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002e5a:	4638      	mov	r0, r7
 8002e5c:	f00e fb59 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002e60:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002e64:	2b20      	cmp	r3, #32
 8002e66:	d005      	beq.n	8002e74 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002e68:	2320      	movs	r3, #32
 8002e6a:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002e6e:	4638      	mov	r0, r7
 8002e70:	f00e fa4e 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002e74:	4638      	mov	r0, r7
 8002e76:	2101      	movs	r1, #1
 8002e78:	f00e fb56 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002e7c:	4639      	mov	r1, r7
 8002e7e:	4630      	mov	r0, r6
 8002e80:	f00c fdce 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002e84:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002e88:	ee18 0a10 	vmov	r0, s16
 8002e8c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002e8e:	2500      	movs	r5, #0
 8002e90:	2145      	movs	r1, #69	; 0x45
 8002e92:	f7ff fbea 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002e96:	ee18 1a10 	vmov	r1, s16
 8002e9a:	4640      	mov	r0, r8
        color = newColor;
 8002e9c:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002ea0:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002ea4:	f00e fcd6 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002ea8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002eac:	ee18 3a10 	vmov	r3, s16
 8002eb0:	333c      	adds	r3, #60	; 0x3c
 8002eb2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002eb6:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002eb8:	ee18 0a10 	vmov	r0, s16
 8002ebc:	a90a      	add	r1, sp, #40	; 0x28
 8002ebe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ec2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002ec6:	f00e ff5f 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002eca:	ee18 1a10 	vmov	r1, s16
 8002ece:	4630      	mov	r0, r6
 8002ed0:	f00c fda6 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002ed4:	220c      	movs	r2, #12
 8002ed6:	4650      	mov	r0, sl
 8002ed8:	2136      	movs	r1, #54	; 0x36
 8002eda:	f7ff fbc6 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8002ede:	4651      	mov	r1, sl
 8002ee0:	4640      	mov	r0, r8
        color = newColor;
 8002ee2:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002ee6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002eea:	f00e fcb3 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002eee:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002ef2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002ef6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002efa:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8002efc:	a90a      	add	r1, sp, #40	; 0x28
 8002efe:	4650      	mov	r0, sl
 8002f00:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002f04:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002f08:	f00e ff3e 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f0c:	4630      	mov	r0, r6
 8002f0e:	4651      	mov	r1, sl
 8002f10:	f00c fd86 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002f14:	4620      	mov	r0, r4
 8002f16:	b00d      	add	sp, #52	; 0x34
 8002f18:	ecbd 8b02 	vpop	{d8}
 8002f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f20:	0802b90c 	.word	0x0802b90c
 8002f24:	0802e158 	.word	0x0802e158
 8002f28:	0802e320 	.word	0x0802e320
 8002f2c:	0802de8c 	.word	0x0802de8c
 8002f30:	0802b8f4 	.word	0x0802b8f4
 8002f34:	08002c5d 	.word	0x08002c5d
 8002f38:	0802b808 	.word	0x0802b808

08002f3c <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8002f3c:	4770      	bx	lr

08002f3e <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f3e:	4770      	bx	lr

08002f40 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002f40:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f42:	68c2      	ldr	r2, [r0, #12]
 8002f44:	6844      	ldr	r4, [r0, #4]
 8002f46:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002f48:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002f4a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002f4e:	07d2      	lsls	r2, r2, #31
 8002f50:	bf48      	it	mi
 8002f52:	5962      	ldrmi	r2, [r4, r5]
 8002f54:	689b      	ldr	r3, [r3, #8]
    }
 8002f56:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f58:	bf48      	it	mi
 8002f5a:	58d3      	ldrmi	r3, [r2, r3]
 8002f5c:	4718      	bx	r3

08002f5e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002f5e:	6843      	ldr	r3, [r0, #4]
 8002f60:	b12b      	cbz	r3, 8002f6e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002f62:	6883      	ldr	r3, [r0, #8]
 8002f64:	b92b      	cbnz	r3, 8002f72 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002f66:	68c0      	ldr	r0, [r0, #12]
 8002f68:	f000 0001 	and.w	r0, r0, #1
 8002f6c:	4770      	bx	lr
 8002f6e:	4618      	mov	r0, r3
 8002f70:	4770      	bx	lr
 8002f72:	2001      	movs	r0, #1
    }
 8002f74:	4770      	bx	lr

08002f76 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f76:	b510      	push	{r4, lr}
 8002f78:	2110      	movs	r1, #16
 8002f7a:	4604      	mov	r4, r0
 8002f7c:	f026 f85f 	bl	802903e <_ZdlPvj>
 8002f80:	4620      	mov	r0, r4
 8002f82:	bd10      	pop	{r4, pc}

08002f84 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002f84:	b510      	push	{r4, lr}
 8002f86:	4b03      	ldr	r3, [pc, #12]	; (8002f94 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8002f88:	6003      	str	r3, [r0, #0]
 8002f8a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f8c:	f010 fade 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f90:	4620      	mov	r0, r4
 8002f92:	bd10      	pop	{r4, pc}
 8002f94:	0802b958 	.word	0x0802b958

08002f98 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002f98:	b507      	push	{r0, r1, r2, lr}
 8002f9a:	4b07      	ldr	r3, [pc, #28]	; (8002fb8 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8002f9c:	6003      	str	r3, [r0, #0]
 8002f9e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002fa0:	f010 fad4 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002fa4:	9801      	ldr	r0, [sp, #4]
 8002fa6:	f241 015c 	movw	r1, #4188	; 0x105c
 8002faa:	f026 f848 	bl	802903e <_ZdlPvj>
 8002fae:	9801      	ldr	r0, [sp, #4]
 8002fb0:	b003      	add	sp, #12
 8002fb2:	f85d fb04 	ldr.w	pc, [sp], #4
 8002fb6:	bf00      	nop
 8002fb8:	0802b958 	.word	0x0802b958

08002fbc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002fbc:	3098      	adds	r0, #152	; 0x98
 8002fbe:	4288      	cmp	r0, r1
{
 8002fc0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002fc2:	d105      	bne.n	8002fd0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002fc4:	f011 ffc4 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002fc8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002fcc:	f000 bd04 	b.w	80039d8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002fd0:	bd08      	pop	{r3, pc}
	...

08002fd4 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fd8:	ed2d 8b02 	vpush	{d8}
 8002fdc:	4604      	mov	r4, r0
 8002fde:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002fe0:	46a1      	mov	r9, r4
 8002fe2:	2500      	movs	r5, #0
 8002fe4:	f013 fc34 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 8002fe8:	4ba5      	ldr	r3, [pc, #660]	; (8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8002fea:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002fec:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002ff0:	2226      	movs	r2, #38	; 0x26
 8002ff2:	4629      	mov	r1, r5
 8002ff4:	4648      	mov	r0, r9
 8002ff6:	f027 f83a 	bl	802a06e <memset>
 8002ffa:	4648      	mov	r0, r9
 8002ffc:	f7ff fb56 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8003000:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003004:	26ff      	movs	r6, #255	; 0xff
 8003006:	4b9f      	ldr	r3, [pc, #636]	; (8003284 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8003008:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800300a:	2226      	movs	r2, #38	; 0x26
 800300c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003010:	4629      	mov	r1, r5
 8003012:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003016:	4640      	mov	r0, r8
 8003018:	66a5      	str	r5, [r4, #104]	; 0x68
 800301a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800301e:	f027 f826 	bl	802a06e <memset>
 8003022:	4640      	mov	r0, r8
 8003024:	f7ff fb42 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8003028:	4b97      	ldr	r3, [pc, #604]	; (8003288 <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 800302a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800302c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003030:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003034:	a90a      	add	r1, sp, #40	; 0x28
 8003036:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800303a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 800303c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003040:	f00f fa7d 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003044:	4658      	mov	r0, fp
 8003046:	f00f fbbb 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800304a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800304e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8003052:	4618      	mov	r0, r3
 8003054:	ee08 3a90 	vmov	s17, r3
 8003058:	f7ff fb3a 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800305c:	4638      	mov	r0, r7
 800305e:	f00e f937 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 8003062:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003066:	4618      	mov	r0, r3
 8003068:	9303      	str	r3, [sp, #12]
 800306a:	f7fd ffed 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800306e:	4b87      	ldr	r3, [pc, #540]	; (800328c <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 8003070:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8003074:	3324      	adds	r3, #36	; 0x24
 8003076:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800307a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800307e:	4618      	mov	r0, r3
 8003080:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8003084:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8003088:	ee08 3a10 	vmov	s16, r3
 800308c:	f7ff fb20 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8003090:	4650      	mov	r0, sl
 8003092:	f7ff fb1d 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003096:	4a7e      	ldr	r2, [pc, #504]	; (8003290 <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8003098:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800309c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80030a0:	4a7c      	ldr	r2, [pc, #496]	; (8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80030a2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80030a6:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80030aa:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80030ae:	f010 fa43 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80030b2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80030b6:	462a      	mov	r2, r5
 80030b8:	4648      	mov	r0, r9
 80030ba:	9300      	str	r3, [sp, #0]
 80030bc:	4629      	mov	r1, r5
 80030be:	23f0      	movs	r3, #240	; 0xf0
 80030c0:	f7ff fae0 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 80030c4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80030c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80030ca:	66a3      	str	r3, [r4, #104]	; 0x68
 80030cc:	4649      	mov	r1, r9
 80030ce:	4630      	mov	r0, r6
 80030d0:	f00c fca6 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80030d4:	462a      	mov	r2, r5
 80030d6:	4640      	mov	r0, r8
 80030d8:	4629      	mov	r1, r5
 80030da:	f7ff fac6 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80030de:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80030e0:	4640      	mov	r0, r8
 80030e2:	a90a      	add	r1, sp, #40	; 0x28
 80030e4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80030e8:	f00f fa29 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80030ec:	4641      	mov	r1, r8
 80030ee:	4630      	mov	r0, r6
 80030f0:	f00c fc96 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80030f4:	4658      	mov	r0, fp
 80030f6:	f240 1201 	movw	r2, #257	; 0x101
 80030fa:	2121      	movs	r1, #33	; 0x21
 80030fc:	f7ff fab5 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8003100:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003102:	aa0a      	add	r2, sp, #40	; 0x28
 8003104:	a909      	add	r1, sp, #36	; 0x24
 8003106:	4658      	mov	r0, fp
 8003108:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800310c:	2302      	movs	r3, #2
 800310e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003112:	f00f f81e 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003116:	230f      	movs	r3, #15
        updateTextPosition();
 8003118:	4658      	mov	r0, fp
 800311a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800311e:	f7ff faf9 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003122:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8003126:	330c      	adds	r3, #12
        color = col;
 8003128:	f04f 39ff 	mov.w	r9, #4294967295
 800312c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003130:	4659      	mov	r1, fp
 8003132:	4630      	mov	r0, r6
        colorPressed = col;
 8003134:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8003138:	f00c fc72 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800313c:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 8003140:	223c      	movs	r2, #60	; 0x3c
 8003142:	ee18 0a90 	vmov	r0, s17
 8003146:	213a      	movs	r1, #58	; 0x3a
 8003148:	f7ff fa8f 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 800314c:	ee18 1a90 	vmov	r1, s17
 8003150:	4640      	mov	r0, r8
        color = newColor;
 8003152:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8003156:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800315a:	f00e fb7b 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800315e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003162:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003166:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800316a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003298 <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 800316e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003172:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003174:	ee18 0a90 	vmov	r0, s17
 8003178:	a90a      	add	r1, sp, #40	; 0x28
 800317a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800317e:	f00e fe03 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003182:	ee18 1a90 	vmov	r1, s17
 8003186:	4630      	mov	r0, r6
 8003188:	f00c fc4a 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800318c:	230a      	movs	r3, #10
 800318e:	9300      	str	r3, [sp, #0]
 8003190:	2232      	movs	r2, #50	; 0x32
 8003192:	23f0      	movs	r3, #240	; 0xf0
 8003194:	4629      	mov	r1, r5
 8003196:	4638      	mov	r0, r7
 8003198:	f7ff fa74 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 800319c:	9b03      	ldr	r3, [sp, #12]
 800319e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80031a2:	22a0      	movs	r2, #160	; 0xa0
 80031a4:	4611      	mov	r1, r2
 80031a6:	4638      	mov	r0, r7
 80031a8:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80031ac:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80031b0:	f00e f9a4 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80031b4:	22a0      	movs	r2, #160	; 0xa0
 80031b6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80031ba:	4638      	mov	r0, r7
 80031bc:	f00e f9a9 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80031c0:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80031c4:	2b20      	cmp	r3, #32
 80031c6:	d005      	beq.n	80031d4 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 80031c8:	2320      	movs	r3, #32
 80031ca:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80031ce:	4638      	mov	r0, r7
 80031d0:	f00e f89e 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80031d4:	4638      	mov	r0, r7
 80031d6:	2101      	movs	r1, #1
 80031d8:	f00e f9a6 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80031dc:	4639      	mov	r1, r7
 80031de:	4630      	mov	r0, r6
 80031e0:	f00c fc1e 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80031e4:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 80031e8:	ee18 0a10 	vmov	r0, s16
 80031ec:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80031ee:	2500      	movs	r5, #0
 80031f0:	2145      	movs	r1, #69	; 0x45
 80031f2:	f7ff fa3a 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80031f6:	ee18 1a10 	vmov	r1, s16
 80031fa:	4640      	mov	r0, r8
        color = newColor;
 80031fc:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8003200:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003204:	f00e fb26 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003208:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800320c:	ee18 3a10 	vmov	r3, s16
 8003210:	333c      	adds	r3, #60	; 0x3c
 8003212:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003216:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8003218:	ee18 0a10 	vmov	r0, s16
 800321c:	a90a      	add	r1, sp, #40	; 0x28
 800321e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003222:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003226:	f00e fdaf 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800322a:	ee18 1a10 	vmov	r1, s16
 800322e:	4630      	mov	r0, r6
 8003230:	f00c fbf6 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003234:	220c      	movs	r2, #12
 8003236:	4650      	mov	r0, sl
 8003238:	2136      	movs	r1, #54	; 0x36
 800323a:	f7ff fa16 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 800323e:	4651      	mov	r1, sl
 8003240:	4640      	mov	r0, r8
        color = newColor;
 8003242:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8003246:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800324a:	f00e fb03 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800324e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003252:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8003256:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800325a:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 800325c:	a90a      	add	r1, sp, #40	; 0x28
 800325e:	4650      	mov	r0, sl
 8003260:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003264:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003268:	f00e fd8e 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800326c:	4630      	mov	r0, r6
 800326e:	4651      	mov	r1, sl
 8003270:	f00c fbd6 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003274:	4620      	mov	r0, r4
 8003276:	b00d      	add	sp, #52	; 0x34
 8003278:	ecbd 8b02 	vpop	{d8}
 800327c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003280:	0802b958 	.word	0x0802b958
 8003284:	0802e158 	.word	0x0802e158
 8003288:	0802e320 	.word	0x0802e320
 800328c:	0802de8c 	.word	0x0802de8c
 8003290:	0802b940 	.word	0x0802b940
 8003294:	08002fbd 	.word	0x08002fbd
 8003298:	0802b808 	.word	0x0802b808

0800329c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800329c:	4770      	bx	lr

0800329e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800329e:	4770      	bx	lr

080032a0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80032a0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80032a4:	6808      	ldr	r0, [r1, #0]
 80032a6:	6849      	ldr	r1, [r1, #4]
 80032a8:	c303      	stmia	r3!, {r0, r1}
    }
 80032aa:	4770      	bx	lr

080032ac <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80032ac:	4770      	bx	lr

080032ae <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80032ae:	4770      	bx	lr

080032b0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80032b0:	6041      	str	r1, [r0, #4]
    }
 80032b2:	4770      	bx	lr

080032b4 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80032b4:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80032b6:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80032b8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80032bc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80032c0:	8002      	strh	r2, [r0, #0]
 80032c2:	8042      	strh	r2, [r0, #2]
 80032c4:	8084      	strh	r4, [r0, #4]
 80032c6:	80c1      	strh	r1, [r0, #6]
        }
 80032c8:	bd10      	pop	{r4, pc}

080032ca <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80032ca:	4770      	bx	lr

080032cc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80032cc:	4770      	bx	lr
	...

080032d0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80032d0:	4b06      	ldr	r3, [pc, #24]	; (80032ec <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80032d2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80032d6:	2300      	movs	r3, #0
 80032d8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80032dc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80032e0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80032e4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80032e8:	4770      	bx	lr
 80032ea:	bf00      	nop
 80032ec:	0800368d 	.word	0x0800368d

080032f0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80032f0:	2301      	movs	r3, #1
 80032f2:	7203      	strb	r3, [r0, #8]
    }
 80032f4:	4770      	bx	lr

080032f6 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80032f6:	4770      	bx	lr

080032f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80032f8:	4770      	bx	lr

080032fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 80032fa:	4770      	bx	lr

080032fc <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80032fc:	4770      	bx	lr

080032fe <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80032fe:	4770      	bx	lr

08003300 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003300:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003302:	6840      	ldr	r0, [r0, #4]
 8003304:	6803      	ldr	r3, [r0, #0]
 8003306:	3110      	adds	r1, #16
 8003308:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800330a:	4718      	bx	r3

0800330c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 800330c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800330e:	6840      	ldr	r0, [r0, #4]
 8003310:	6803      	ldr	r3, [r0, #0]
 8003312:	3110      	adds	r1, #16
 8003314:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003316:	4718      	bx	r3

08003318 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003318:	4770      	bx	lr

0800331a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800331a:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800331c:	6840      	ldr	r0, [r0, #4]
 800331e:	6803      	ldr	r3, [r0, #0]
 8003320:	3110      	adds	r1, #16
 8003322:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003324:	4718      	bx	r3

08003326 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8003326:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003328:	6840      	ldr	r0, [r0, #4]
 800332a:	6803      	ldr	r3, [r0, #0]
 800332c:	3110      	adds	r1, #16
 800332e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003330:	4718      	bx	r3

08003332 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003332:	4770      	bx	lr

08003334 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003334:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003336:	68c2      	ldr	r2, [r0, #12]
 8003338:	6841      	ldr	r1, [r0, #4]
 800333a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800333c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800333e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003342:	07d2      	lsls	r2, r2, #31
 8003344:	bf48      	it	mi
 8003346:	590a      	ldrmi	r2, [r1, r4]
 8003348:	689b      	ldr	r3, [r3, #8]
    }
 800334a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800334e:	bf48      	it	mi
 8003350:	58d3      	ldrmi	r3, [r2, r3]
 8003352:	4718      	bx	r3

08003354 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003354:	6843      	ldr	r3, [r0, #4]
 8003356:	b12b      	cbz	r3, 8003364 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003358:	6883      	ldr	r3, [r0, #8]
 800335a:	b92b      	cbnz	r3, 8003368 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800335c:	68c0      	ldr	r0, [r0, #12]
 800335e:	f000 0001 	and.w	r0, r0, #1
 8003362:	4770      	bx	lr
 8003364:	4618      	mov	r0, r3
 8003366:	4770      	bx	lr
 8003368:	2001      	movs	r0, #1
    }
 800336a:	4770      	bx	lr

0800336c <_ZN8touchgfx12NoTransitionD0Ev>:
 800336c:	b510      	push	{r4, lr}
 800336e:	210c      	movs	r1, #12
 8003370:	4604      	mov	r4, r0
 8003372:	f025 fe64 	bl	802903e <_ZdlPvj>
 8003376:	4620      	mov	r0, r4
 8003378:	bd10      	pop	{r4, pc}

0800337a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800337a:	b510      	push	{r4, lr}
 800337c:	2110      	movs	r1, #16
 800337e:	4604      	mov	r4, r0
 8003380:	f025 fe5d 	bl	802903e <_ZdlPvj>
 8003384:	4620      	mov	r0, r4
 8003386:	bd10      	pop	{r4, pc}

08003388 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003388:	b510      	push	{r4, lr}
 800338a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800338e:	4604      	mov	r4, r0
 8003390:	f025 fe55 	bl	802903e <_ZdlPvj>
 8003394:	4620      	mov	r0, r4
 8003396:	bd10      	pop	{r4, pc}

08003398 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8003398:	b510      	push	{r4, lr}
 800339a:	2138      	movs	r1, #56	; 0x38
 800339c:	4604      	mov	r4, r0
 800339e:	f025 fe4e 	bl	802903e <_ZdlPvj>
 80033a2:	4620      	mov	r0, r4
 80033a4:	bd10      	pop	{r4, pc}

080033a6 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80033a6:	b510      	push	{r4, lr}
 80033a8:	2128      	movs	r1, #40	; 0x28
 80033aa:	4604      	mov	r4, r0
 80033ac:	f025 fe47 	bl	802903e <_ZdlPvj>
 80033b0:	4620      	mov	r0, r4
 80033b2:	bd10      	pop	{r4, pc}

080033b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80033b4:	b510      	push	{r4, lr}
 80033b6:	2138      	movs	r1, #56	; 0x38
 80033b8:	4604      	mov	r4, r0
 80033ba:	f025 fe40 	bl	802903e <_ZdlPvj>
 80033be:	4620      	mov	r0, r4
 80033c0:	bd10      	pop	{r4, pc}

080033c2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80033c2:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80033c4:	f011 fdc4 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
 80033c8:	6803      	ldr	r3, [r0, #0]
    }
 80033ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80033ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80033d0:	4718      	bx	r3
	...

080033d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80033d4:	b513      	push	{r0, r1, r4, lr}
 80033d6:	4604      	mov	r4, r0
        animationCounter++;
 80033d8:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80033da:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80033dc:	3001      	adds	r0, #1
 80033de:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80033e0:	4298      	cmp	r0, r3
        animationCounter++;
 80033e2:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80033e4:	d905      	bls.n	80033f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80033e6:	2301      	movs	r3, #1
 80033e8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80033ea:	2300      	movs	r3, #0
 80033ec:	72a3      	strb	r3, [r4, #10]
    }
 80033ee:	b002      	add	sp, #8
 80033f0:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80033f2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80033f6:	2100      	movs	r1, #0
 80033f8:	f013 fbdc 	bl	8016bb4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80033fc:	f010 0201 	ands.w	r2, r0, #1
 8003400:	b283      	uxth	r3, r0
 8003402:	d12a      	bne.n	800345a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003404:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003406:	4a19      	ldr	r2, [pc, #100]	; (800346c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003408:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800340c:	89e3      	ldrh	r3, [r4, #14]
 800340e:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003410:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003414:	82a0      	strh	r0, [r4, #20]
 8003416:	2000      	movs	r0, #0
 8003418:	1ad2      	subs	r2, r2, r3
 800341a:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800341e:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003420:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003422:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003424:	4a12      	ldr	r2, [pc, #72]	; (8003470 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8003426:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800342a:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 800342c:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003430:	691b      	ldr	r3, [r3, #16]
 8003432:	f8ad 1000 	strh.w	r1, [sp]
 8003436:	f8ad 2006 	strh.w	r2, [sp, #6]
 800343a:	4669      	mov	r1, sp
 800343c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800343e:	7aa3      	ldrb	r3, [r4, #10]
 8003440:	2b01      	cmp	r3, #1
 8003442:	d1d4      	bne.n	80033ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003444:	4b0b      	ldr	r3, [pc, #44]	; (8003474 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8003446:	781b      	ldrb	r3, [r3, #0]
 8003448:	2b00      	cmp	r3, #0
 800344a:	d0d0      	beq.n	80033ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800344c:	f011 fd80 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003450:	b002      	add	sp, #8
 8003452:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003456:	f011 bd81 	b.w	8014f5c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800345a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800345e:	2800      	cmp	r0, #0
 8003460:	bfd8      	it	le
 8003462:	460a      	movle	r2, r1
 8003464:	4413      	add	r3, r2
 8003466:	81e3      	strh	r3, [r4, #14]
 8003468:	e7cd      	b.n	8003406 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800346a:	bf00      	nop
 800346c:	20012e70 	.word	0x20012e70
 8003470:	20012e72 	.word	0x20012e72
 8003474:	20012e7a 	.word	0x20012e7a

08003478 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003478:	b510      	push	{r4, lr}
 800347a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800347c:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003480:	b158      	cbz	r0, 800349a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003482:	6803      	ldr	r3, [r0, #0]
 8003484:	68db      	ldr	r3, [r3, #12]
 8003486:	4798      	blx	r3
 8003488:	b138      	cbz	r0, 800349a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800348a:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800348e:	6803      	ldr	r3, [r0, #0]
 8003490:	689b      	ldr	r3, [r3, #8]
 8003492:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003494:	2300      	movs	r3, #0
 8003496:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800349a:	bd10      	pop	{r4, pc}

0800349c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 800349c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80034a0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80034a4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80034a6:	68a8      	ldr	r0, [r5, #8]
 80034a8:	6803      	ldr	r3, [r0, #0]
 80034aa:	6a1b      	ldr	r3, [r3, #32]
 80034ac:	4798      	blx	r3
 80034ae:	2897      	cmp	r0, #151	; 0x97
 80034b0:	d805      	bhi.n	80034be <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80034b2:	4b46      	ldr	r3, [pc, #280]	; (80035cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80034b4:	4a46      	ldr	r2, [pc, #280]	; (80035d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80034b6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80034b8:	4846      	ldr	r0, [pc, #280]	; (80035d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80034ba:	f026 fbd3 	bl	8029c64 <__assert_func>
 80034be:	6868      	ldr	r0, [r5, #4]
 80034c0:	6803      	ldr	r3, [r0, #0]
 80034c2:	6a1b      	ldr	r3, [r3, #32]
 80034c4:	4798      	blx	r3
 80034c6:	280f      	cmp	r0, #15
 80034c8:	d803      	bhi.n	80034d2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80034ca:	4b43      	ldr	r3, [pc, #268]	; (80035d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80034cc:	4a40      	ldr	r2, [pc, #256]	; (80035d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80034ce:	21a4      	movs	r1, #164	; 0xa4
 80034d0:	e7f2      	b.n	80034b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80034d2:	68e8      	ldr	r0, [r5, #12]
 80034d4:	6803      	ldr	r3, [r0, #0]
 80034d6:	6a1b      	ldr	r3, [r3, #32]
 80034d8:	4798      	blx	r3
 80034da:	280b      	cmp	r0, #11
 80034dc:	d803      	bhi.n	80034e6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80034de:	4b3f      	ldr	r3, [pc, #252]	; (80035dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80034e0:	4a3b      	ldr	r2, [pc, #236]	; (80035d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80034e2:	21a5      	movs	r1, #165	; 0xa5
 80034e4:	e7e8      	b.n	80034b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80034e6:	f011 fd33 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80034ea:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80035e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80034ee:	3004      	adds	r0, #4
 80034f0:	f011 fd94 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80034f4:	f8d9 0000 	ldr.w	r0, [r9]
 80034f8:	b110      	cbz	r0, 8003500 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80034fa:	6803      	ldr	r3, [r0, #0]
 80034fc:	68db      	ldr	r3, [r3, #12]
 80034fe:	4798      	blx	r3
    if (*currentTrans)
 8003500:	f8d9 0000 	ldr.w	r0, [r9]
 8003504:	b110      	cbz	r0, 800350c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003506:	6803      	ldr	r3, [r0, #0]
 8003508:	681b      	ldr	r3, [r3, #0]
 800350a:	4798      	blx	r3
    if (*currentScreen)
 800350c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80035e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003510:	f8d8 0000 	ldr.w	r0, [r8]
 8003514:	b110      	cbz	r0, 800351c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003516:	6803      	ldr	r3, [r0, #0]
 8003518:	695b      	ldr	r3, [r3, #20]
 800351a:	4798      	blx	r3
    if (*currentPresenter)
 800351c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003520:	b110      	cbz	r0, 8003528 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003522:	6803      	ldr	r3, [r0, #0]
 8003524:	685b      	ldr	r3, [r3, #4]
 8003526:	4798      	blx	r3
    if (*currentScreen)
 8003528:	f8d8 0000 	ldr.w	r0, [r8]
 800352c:	b110      	cbz	r0, 8003534 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800352e:	6803      	ldr	r3, [r0, #0]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	4798      	blx	r3
    if (*currentPresenter)
 8003534:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003538:	b110      	cbz	r0, 8003540 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800353a:	6803      	ldr	r3, [r0, #0]
 800353c:	689b      	ldr	r3, [r3, #8]
 800353e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003540:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003542:	6803      	ldr	r3, [r0, #0]
 8003544:	2100      	movs	r1, #0
 8003546:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003548:	4798      	blx	r3
        : screenContainer(0), done(false)
 800354a:	f04f 0b00 	mov.w	fp, #0
 800354e:	4b24      	ldr	r3, [pc, #144]	; (80035e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003550:	6003      	str	r3, [r0, #0]
 8003552:	4604      	mov	r4, r0
 8003554:	f8c0 b004 	str.w	fp, [r0, #4]
 8003558:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800355c:	68a8      	ldr	r0, [r5, #8]
 800355e:	6803      	ldr	r3, [r0, #0]
 8003560:	4659      	mov	r1, fp
 8003562:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003564:	4798      	blx	r3
 8003566:	4606      	mov	r6, r0
 8003568:	f005 fa4c 	bl	8008a04 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800356c:	6868      	ldr	r0, [r5, #4]
 800356e:	6803      	ldr	r3, [r0, #0]
 8003570:	4659      	mov	r1, fp
 8003572:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003574:	4798      	blx	r3
 8003576:	4631      	mov	r1, r6
 8003578:	4605      	mov	r5, r0
 800357a:	f005 fa1f 	bl	80089bc <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800357e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003582:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003586:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800358a:	b1e5      	cbz	r5, 80035c6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 800358c:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800358e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003592:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003594:	f8c5 a008 	str.w	sl, [r5, #8]
 8003598:	4630      	mov	r0, r6
 800359a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800359c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800359e:	4798      	blx	r3
    newPresenter->activate();
 80035a0:	682b      	ldr	r3, [r5, #0]
 80035a2:	4628      	mov	r0, r5
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80035a8:	4621      	mov	r1, r4
 80035aa:	4630      	mov	r0, r6
 80035ac:	f013 fafc 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80035b0:	6823      	ldr	r3, [r4, #0]
 80035b2:	4620      	mov	r0, r4
 80035b4:	691b      	ldr	r3, [r3, #16]
 80035b6:	4798      	blx	r3
    newTransition->invalidate();
 80035b8:	6823      	ldr	r3, [r4, #0]
 80035ba:	695b      	ldr	r3, [r3, #20]
 80035bc:	4620      	mov	r0, r4
}
 80035be:	b001      	add	sp, #4
 80035c0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035c4:	4718      	bx	r3
    model->bind(newPresenter);
 80035c6:	462b      	mov	r3, r5
 80035c8:	e7e1      	b.n	800358e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80035ca:	bf00      	nop
 80035cc:	0802b984 	.word	0x0802b984
 80035d0:	0802ba12 	.word	0x0802ba12
 80035d4:	0802bb20 	.word	0x0802bb20
 80035d8:	0802bb67 	.word	0x0802bb67
 80035dc:	0802bc0a 	.word	0x0802bc0a
 80035e0:	0802d028 	.word	0x0802d028
 80035e4:	20012ec4 	.word	0x20012ec4
 80035e8:	20012ec0 	.word	0x20012ec0

080035ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80035ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80035ee:	4604      	mov	r4, r0
        animationCounter++;
 80035f0:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80035f2:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80035f4:	3001      	adds	r0, #1
 80035f6:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80035f8:	4298      	cmp	r0, r3
        animationCounter++;
 80035fa:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80035fc:	d905      	bls.n	800360a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80035fe:	2301      	movs	r3, #1
 8003600:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003602:	2300      	movs	r3, #0
 8003604:	72a3      	strb	r3, [r4, #10]
    }
 8003606:	b003      	add	sp, #12
 8003608:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800360a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800360e:	2100      	movs	r1, #0
 8003610:	f013 fad0 	bl	8016bb4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003614:	f010 0201 	ands.w	r2, r0, #1
 8003618:	b283      	uxth	r3, r0
 800361a:	d128      	bne.n	800366e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800361c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800361e:	4b18      	ldr	r3, [pc, #96]	; (8003680 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003620:	4818      	ldr	r0, [pc, #96]	; (8003684 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003622:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003624:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003626:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003628:	f9b0 0000 	ldrsh.w	r0, [r0]
 800362c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003630:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003632:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003634:	442b      	add	r3, r5
 8003636:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003638:	b212      	sxth	r2, r2
 800363a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800363e:	6803      	ldr	r3, [r0, #0]
 8003640:	8322      	strh	r2, [r4, #24]
 8003642:	f8ad 2000 	strh.w	r2, [sp]
 8003646:	2200      	movs	r2, #0
 8003648:	691b      	ldr	r3, [r3, #16]
 800364a:	f8ad 2002 	strh.w	r2, [sp, #2]
 800364e:	4669      	mov	r1, sp
 8003650:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003652:	7aa3      	ldrb	r3, [r4, #10]
 8003654:	2b01      	cmp	r3, #1
 8003656:	d1d6      	bne.n	8003606 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003658:	4b0b      	ldr	r3, [pc, #44]	; (8003688 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800365a:	781b      	ldrb	r3, [r3, #0]
 800365c:	2b00      	cmp	r3, #0
 800365e:	d0d2      	beq.n	8003606 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003660:	f011 fc76 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003664:	b003      	add	sp, #12
 8003666:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800366a:	f011 bc77 	b.w	8014f5c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800366e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003672:	2800      	cmp	r0, #0
 8003674:	bfd8      	it	le
 8003676:	460a      	movle	r2, r1
 8003678:	4413      	add	r3, r2
 800367a:	81e3      	strh	r3, [r4, #14]
 800367c:	e7cf      	b.n	800361e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800367e:	bf00      	nop
 8003680:	20012e70 	.word	0x20012e70
 8003684:	20012e72 	.word	0x20012e72
 8003688:	20012e7a 	.word	0x20012e7a

0800368c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 800368c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003690:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003694:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003696:	68a8      	ldr	r0, [r5, #8]
 8003698:	6803      	ldr	r3, [r0, #0]
 800369a:	6a1b      	ldr	r3, [r3, #32]
 800369c:	4798      	blx	r3
 800369e:	f241 137b 	movw	r3, #4475	; 0x117b
 80036a2:	4298      	cmp	r0, r3
 80036a4:	d805      	bhi.n	80036b2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80036a6:	4b46      	ldr	r3, [pc, #280]	; (80037c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80036a8:	4a46      	ldr	r2, [pc, #280]	; (80037c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80036aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80036ac:	4846      	ldr	r0, [pc, #280]	; (80037c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80036ae:	f026 fad9 	bl	8029c64 <__assert_func>
 80036b2:	6868      	ldr	r0, [r5, #4]
 80036b4:	6803      	ldr	r3, [r0, #0]
 80036b6:	6a1b      	ldr	r3, [r3, #32]
 80036b8:	4798      	blx	r3
 80036ba:	280f      	cmp	r0, #15
 80036bc:	d803      	bhi.n	80036c6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80036be:	4b43      	ldr	r3, [pc, #268]	; (80037cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80036c0:	4a40      	ldr	r2, [pc, #256]	; (80037c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80036c2:	21a4      	movs	r1, #164	; 0xa4
 80036c4:	e7f2      	b.n	80036ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80036c6:	68e8      	ldr	r0, [r5, #12]
 80036c8:	6803      	ldr	r3, [r0, #0]
 80036ca:	6a1b      	ldr	r3, [r3, #32]
 80036cc:	4798      	blx	r3
 80036ce:	280b      	cmp	r0, #11
 80036d0:	d803      	bhi.n	80036da <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80036d2:	4b3f      	ldr	r3, [pc, #252]	; (80037d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80036d4:	4a3b      	ldr	r2, [pc, #236]	; (80037c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80036d6:	21a5      	movs	r1, #165	; 0xa5
 80036d8:	e7e8      	b.n	80036ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80036da:	f011 fc39 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80036de:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80037d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80036e2:	3004      	adds	r0, #4
 80036e4:	f011 fc9a 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80036e8:	f8d9 0000 	ldr.w	r0, [r9]
 80036ec:	b110      	cbz	r0, 80036f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80036ee:	6803      	ldr	r3, [r0, #0]
 80036f0:	68db      	ldr	r3, [r3, #12]
 80036f2:	4798      	blx	r3
    if (*currentTrans)
 80036f4:	f8d9 0000 	ldr.w	r0, [r9]
 80036f8:	b110      	cbz	r0, 8003700 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80036fa:	6803      	ldr	r3, [r0, #0]
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	4798      	blx	r3
    if (*currentScreen)
 8003700:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80037dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003704:	f8d8 0000 	ldr.w	r0, [r8]
 8003708:	b110      	cbz	r0, 8003710 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800370a:	6803      	ldr	r3, [r0, #0]
 800370c:	695b      	ldr	r3, [r3, #20]
 800370e:	4798      	blx	r3
    if (*currentPresenter)
 8003710:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003714:	b110      	cbz	r0, 800371c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003716:	6803      	ldr	r3, [r0, #0]
 8003718:	685b      	ldr	r3, [r3, #4]
 800371a:	4798      	blx	r3
    if (*currentScreen)
 800371c:	f8d8 0000 	ldr.w	r0, [r8]
 8003720:	b110      	cbz	r0, 8003728 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003722:	6803      	ldr	r3, [r0, #0]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	4798      	blx	r3
    if (*currentPresenter)
 8003728:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800372c:	b110      	cbz	r0, 8003734 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800372e:	6803      	ldr	r3, [r0, #0]
 8003730:	689b      	ldr	r3, [r3, #8]
 8003732:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003734:	68e8      	ldr	r0, [r5, #12]
 8003736:	6803      	ldr	r3, [r0, #0]
 8003738:	2100      	movs	r1, #0
 800373a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800373c:	4798      	blx	r3
 800373e:	f04f 0b00 	mov.w	fp, #0
 8003742:	4b24      	ldr	r3, [pc, #144]	; (80037d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003744:	6003      	str	r3, [r0, #0]
 8003746:	4604      	mov	r4, r0
 8003748:	f8c0 b004 	str.w	fp, [r0, #4]
 800374c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003750:	68a8      	ldr	r0, [r5, #8]
 8003752:	6803      	ldr	r3, [r0, #0]
 8003754:	4659      	mov	r1, fp
 8003756:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003758:	4798      	blx	r3
 800375a:	4606      	mov	r6, r0
 800375c:	f004 fe0e 	bl	800837c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003760:	6868      	ldr	r0, [r5, #4]
 8003762:	6803      	ldr	r3, [r0, #0]
 8003764:	4659      	mov	r1, fp
 8003766:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003768:	4798      	blx	r3
 800376a:	4631      	mov	r1, r6
 800376c:	4605      	mov	r5, r0
 800376e:	f004 fddf 	bl	8008330 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003772:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003776:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800377a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800377e:	b1e5      	cbz	r5, 80037ba <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8003780:	1d2b      	adds	r3, r5, #4
 8003782:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003786:	6833      	ldr	r3, [r6, #0]
 8003788:	f8c5 a008 	str.w	sl, [r5, #8]
 800378c:	4630      	mov	r0, r6
 800378e:	68db      	ldr	r3, [r3, #12]
 8003790:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003792:	4798      	blx	r3
    newPresenter->activate();
 8003794:	682b      	ldr	r3, [r5, #0]
 8003796:	4628      	mov	r0, r5
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800379c:	4621      	mov	r1, r4
 800379e:	4630      	mov	r0, r6
 80037a0:	f013 fa02 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80037a4:	6823      	ldr	r3, [r4, #0]
 80037a6:	4620      	mov	r0, r4
 80037a8:	691b      	ldr	r3, [r3, #16]
 80037aa:	4798      	blx	r3
    newTransition->invalidate();
 80037ac:	6823      	ldr	r3, [r4, #0]
 80037ae:	695b      	ldr	r3, [r3, #20]
 80037b0:	4620      	mov	r0, r4
}
 80037b2:	b001      	add	sp, #4
 80037b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037b8:	4718      	bx	r3
    model->bind(newPresenter);
 80037ba:	462b      	mov	r3, r5
 80037bc:	e7e1      	b.n	8003782 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80037be:	bf00      	nop
 80037c0:	0802b984 	.word	0x0802b984
 80037c4:	0802bcad 	.word	0x0802bcad
 80037c8:	0802bb20 	.word	0x0802bb20
 80037cc:	0802bb67 	.word	0x0802bb67
 80037d0:	0802bc0a 	.word	0x0802bc0a
 80037d4:	0802d028 	.word	0x0802d028
 80037d8:	20012ec4 	.word	0x20012ec4
 80037dc:	20012ec0 	.word	0x20012ec0

080037e0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80037e0:	4b04      	ldr	r3, [pc, #16]	; (80037f4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80037e8:	b10a      	cbz	r2, 80037ee <_ZN8touchgfx3HAL3lcdEv+0xe>
 80037ea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80037ec:	b900      	cbnz	r0, 80037f0 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80037ee:	6898      	ldr	r0, [r3, #8]
    }
 80037f0:	4770      	bx	lr
 80037f2:	bf00      	nop
 80037f4:	20012e7c 	.word	0x20012e7c

080037f8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80037f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037fa:	4604      	mov	r4, r0
 80037fc:	4617      	mov	r7, r2
 80037fe:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003800:	f011 fcda 	bl	80151b8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003804:	4b10      	ldr	r3, [pc, #64]	; (8003848 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8003806:	601c      	str	r4, [r3, #0]
      model(m)
 8003808:	4b10      	ldr	r3, [pc, #64]	; (800384c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800380a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800380c:	4b10      	ldr	r3, [pc, #64]	; (8003850 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800380e:	2500      	movs	r5, #0
 8003810:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003814:	4b0f      	ldr	r3, [pc, #60]	; (8003854 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003816:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800381a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800381c:	6803      	ldr	r3, [r0, #0]
 800381e:	2101      	movs	r1, #1
 8003820:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003822:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8003826:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800382a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800382c:	4628      	mov	r0, r5
 800382e:	f004 fbe3 	bl	8007ff8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003832:	f7ff ffd5 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 8003836:	f01b f884 	bl	801e942 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800383a:	f7ff ffd1 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 800383e:	f01b f8fb 	bl	801ea38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003842:	4620      	mov	r0, r4
 8003844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003846:	bf00      	nop
 8003848:	20012ed0 	.word	0x20012ed0
 800384c:	0802cfd4 	.word	0x0802cfd4
 8003850:	0802cfbc 	.word	0x0802cfbc
 8003854:	20012e7c 	.word	0x20012e7c

08003858 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003858:	4b06      	ldr	r3, [pc, #24]	; (8003874 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800385a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800385e:	2300      	movs	r3, #0
 8003860:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003864:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003868:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800386c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003870:	4770      	bx	lr
 8003872:	bf00      	nop
 8003874:	0800368d 	.word	0x0800368d

08003878 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8003878:	4b06      	ldr	r3, [pc, #24]	; (8003894 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 800387a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800387e:	2300      	movs	r3, #0
 8003880:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003884:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003888:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800388c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003890:	4770      	bx	lr
 8003892:	bf00      	nop
 8003894:	08003e9d 	.word	0x08003e9d

08003898 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003898:	4b06      	ldr	r3, [pc, #24]	; (80038b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 800389a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800389e:	2300      	movs	r3, #0
 80038a0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038a4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038a8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038ac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038b0:	4770      	bx	lr
 80038b2:	bf00      	nop
 80038b4:	08004cc1 	.word	0x08004cc1

080038b8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80038b8:	4b06      	ldr	r3, [pc, #24]	; (80038d4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80038ba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038be:	2300      	movs	r3, #0
 80038c0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038c4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038c8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038cc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038d0:	4770      	bx	lr
 80038d2:	bf00      	nop
 80038d4:	08003d5d 	.word	0x08003d5d

080038d8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80038d8:	4b06      	ldr	r3, [pc, #24]	; (80038f4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80038da:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038de:	2300      	movs	r3, #0
 80038e0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038e4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038e8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038ec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038f0:	4770      	bx	lr
 80038f2:	bf00      	nop
 80038f4:	08004b81 	.word	0x08004b81

080038f8 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80038f8:	4b06      	ldr	r3, [pc, #24]	; (8003914 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80038fa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038fe:	2300      	movs	r3, #0
 8003900:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003904:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003908:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800390c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003910:	4770      	bx	lr
 8003912:	bf00      	nop
 8003914:	08004a41 	.word	0x08004a41

08003918 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003918:	4b06      	ldr	r3, [pc, #24]	; (8003934 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800391a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800391e:	2300      	movs	r3, #0
 8003920:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003924:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003928:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800392c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003930:	4770      	bx	lr
 8003932:	bf00      	nop
 8003934:	08004901 	.word	0x08004901

08003938 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003938:	4b06      	ldr	r3, [pc, #24]	; (8003954 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800393a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800393e:	2300      	movs	r3, #0
 8003940:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003944:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003948:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800394c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003950:	4770      	bx	lr
 8003952:	bf00      	nop
 8003954:	080047c1 	.word	0x080047c1

08003958 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003958:	4b06      	ldr	r3, [pc, #24]	; (8003974 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 800395a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800395e:	2300      	movs	r3, #0
 8003960:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003964:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003968:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800396c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003970:	4770      	bx	lr
 8003972:	bf00      	nop
 8003974:	08003c1d 	.word	0x08003c1d

08003978 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003978:	4b06      	ldr	r3, [pc, #24]	; (8003994 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 800397a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800397e:	2300      	movs	r3, #0
 8003980:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003984:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003988:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800398c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003990:	4770      	bx	lr
 8003992:	bf00      	nop
 8003994:	08004681 	.word	0x08004681

08003998 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003998:	4b06      	ldr	r3, [pc, #24]	; (80039b4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 800399a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800399e:	2300      	movs	r3, #0
 80039a0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039a4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039a8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039ac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039b0:	4770      	bx	lr
 80039b2:	bf00      	nop
 80039b4:	08004541 	.word	0x08004541

080039b8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80039b8:	4b06      	ldr	r3, [pc, #24]	; (80039d4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80039ba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039be:	2300      	movs	r3, #0
 80039c0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039c4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039c8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039cc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039d0:	4770      	bx	lr
 80039d2:	bf00      	nop
 80039d4:	08004401 	.word	0x08004401

080039d8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 80039d8:	4b06      	ldr	r3, [pc, #24]	; (80039f4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 80039da:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039de:	2300      	movs	r3, #0
 80039e0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039e4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039e8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039ec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039f0:	4770      	bx	lr
 80039f2:	bf00      	nop
 80039f4:	08003add 	.word	0x08003add

080039f8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80039f8:	4b06      	ldr	r3, [pc, #24]	; (8003a14 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80039fa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039fe:	2300      	movs	r3, #0
 8003a00:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a04:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a08:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a0c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a10:	4770      	bx	lr
 8003a12:	bf00      	nop
 8003a14:	080042c1 	.word	0x080042c1

08003a18 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8003a18:	4b06      	ldr	r3, [pc, #24]	; (8003a34 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8003a1a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a1e:	2300      	movs	r3, #0
 8003a20:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a24:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a28:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a2c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a30:	4770      	bx	lr
 8003a32:	bf00      	nop
 8003a34:	08004181 	.word	0x08004181

08003a38 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003a38:	4b06      	ldr	r3, [pc, #24]	; (8003a54 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003a3a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a3e:	2300      	movs	r3, #0
 8003a40:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a44:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a48:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a4c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a50:	4770      	bx	lr
 8003a52:	bf00      	nop
 8003a54:	08004041 	.word	0x08004041

08003a58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003a58:	4b06      	ldr	r3, [pc, #24]	; (8003a74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003a5a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a5e:	2300      	movs	r3, #0
 8003a60:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a64:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a68:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a6c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a70:	4770      	bx	lr
 8003a72:	bf00      	nop
 8003a74:	0800349d 	.word	0x0800349d

08003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003a78:	6803      	ldr	r3, [r0, #0]
 8003a7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a7c:	4718      	bx	r3
	...

08003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003a80:	4b12      	ldr	r3, [pc, #72]	; (8003acc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003a82:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003a84:	6003      	str	r3, [r0, #0]
 8003a86:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003a8a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003a8c:	4b10      	ldr	r3, [pc, #64]	; (8003ad0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003a8e:	7241      	strb	r1, [r0, #9]
 8003a90:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003a92:	4910      	ldr	r1, [pc, #64]	; (8003ad4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003a94:	4b10      	ldr	r3, [pc, #64]	; (8003ad8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003a96:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003a9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003a9e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003aa0:	2200      	movs	r2, #0
 8003aa2:	6042      	str	r2, [r0, #4]
 8003aa4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003aa6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003aa8:	81c2      	strh	r2, [r0, #14]
          solid()
 8003aaa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003aae:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003ab2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003ab6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003aba:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003abc:	9100      	str	r1, [sp, #0]
 8003abe:	3010      	adds	r0, #16
 8003ac0:	4611      	mov	r1, r2
 8003ac2:	f7fe fddf 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003ac6:	4620      	mov	r0, r4
 8003ac8:	b002      	add	sp, #8
 8003aca:	bd10      	pop	{r4, pc}
 8003acc:	0802d070 	.word	0x0802d070
 8003ad0:	0802cf54 	.word	0x0802cf54
 8003ad4:	20012e72 	.word	0x20012e72
 8003ad8:	20012e70 	.word	0x20012e70

08003adc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003adc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ae0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ae4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003ae6:	68a0      	ldr	r0, [r4, #8]
 8003ae8:	6803      	ldr	r3, [r0, #0]
 8003aea:	6a1b      	ldr	r3, [r3, #32]
 8003aec:	4798      	blx	r3
 8003aee:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003af2:	d205      	bcs.n	8003b00 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003af4:	4b42      	ldr	r3, [pc, #264]	; (8003c00 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8003af6:	4a43      	ldr	r2, [pc, #268]	; (8003c04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003af8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003afa:	4843      	ldr	r0, [pc, #268]	; (8003c08 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003afc:	f026 f8b2 	bl	8029c64 <__assert_func>
 8003b00:	6860      	ldr	r0, [r4, #4]
 8003b02:	6803      	ldr	r3, [r0, #0]
 8003b04:	6a1b      	ldr	r3, [r3, #32]
 8003b06:	4798      	blx	r3
 8003b08:	280f      	cmp	r0, #15
 8003b0a:	d803      	bhi.n	8003b14 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003b0c:	4b3f      	ldr	r3, [pc, #252]	; (8003c0c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003b0e:	4a3d      	ldr	r2, [pc, #244]	; (8003c04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003b10:	21a4      	movs	r1, #164	; 0xa4
 8003b12:	e7f2      	b.n	8003afa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003b14:	68e0      	ldr	r0, [r4, #12]
 8003b16:	6803      	ldr	r3, [r0, #0]
 8003b18:	6a1b      	ldr	r3, [r3, #32]
 8003b1a:	4798      	blx	r3
 8003b1c:	2837      	cmp	r0, #55	; 0x37
 8003b1e:	d803      	bhi.n	8003b28 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003b20:	4b3b      	ldr	r3, [pc, #236]	; (8003c10 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003b22:	4a38      	ldr	r2, [pc, #224]	; (8003c04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003b24:	21a5      	movs	r1, #165	; 0xa5
 8003b26:	e7e8      	b.n	8003afa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003b28:	f011 fa12 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003b2c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003c14 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003b30:	3004      	adds	r0, #4
 8003b32:	f011 fa73 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003b36:	f8d9 0000 	ldr.w	r0, [r9]
 8003b3a:	b110      	cbz	r0, 8003b42 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003b3c:	6803      	ldr	r3, [r0, #0]
 8003b3e:	68db      	ldr	r3, [r3, #12]
 8003b40:	4798      	blx	r3
    if (*currentTrans)
 8003b42:	f8d9 0000 	ldr.w	r0, [r9]
 8003b46:	b110      	cbz	r0, 8003b4e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003b48:	6803      	ldr	r3, [r0, #0]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	4798      	blx	r3
    if (*currentScreen)
 8003b4e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003c18 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003b52:	f8d8 0000 	ldr.w	r0, [r8]
 8003b56:	b110      	cbz	r0, 8003b5e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003b58:	6803      	ldr	r3, [r0, #0]
 8003b5a:	695b      	ldr	r3, [r3, #20]
 8003b5c:	4798      	blx	r3
    if (*currentPresenter)
 8003b5e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b62:	b110      	cbz	r0, 8003b6a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003b64:	6803      	ldr	r3, [r0, #0]
 8003b66:	685b      	ldr	r3, [r3, #4]
 8003b68:	4798      	blx	r3
    if (*currentScreen)
 8003b6a:	f8d8 0000 	ldr.w	r0, [r8]
 8003b6e:	b110      	cbz	r0, 8003b76 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003b70:	6803      	ldr	r3, [r0, #0]
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	4798      	blx	r3
    if (*currentPresenter)
 8003b76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b7a:	b110      	cbz	r0, 8003b82 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003b7c:	6803      	ldr	r3, [r0, #0]
 8003b7e:	689b      	ldr	r3, [r3, #8]
 8003b80:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b82:	68e0      	ldr	r0, [r4, #12]
 8003b84:	2100      	movs	r1, #0
 8003b86:	f7ff ff77 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003b8a:	2114      	movs	r1, #20
 8003b8c:	4605      	mov	r5, r0
 8003b8e:	f7ff ff77 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b92:	68a0      	ldr	r0, [r4, #8]
 8003b94:	6803      	ldr	r3, [r0, #0]
 8003b96:	2100      	movs	r1, #0
 8003b98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b9a:	4798      	blx	r3
 8003b9c:	4606      	mov	r6, r0
 8003b9e:	f004 fac9 	bl	8008134 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ba2:	6860      	ldr	r0, [r4, #4]
 8003ba4:	6803      	ldr	r3, [r0, #0]
 8003ba6:	2100      	movs	r1, #0
 8003ba8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003baa:	4798      	blx	r3
 8003bac:	4631      	mov	r1, r6
 8003bae:	4604      	mov	r4, r0
 8003bb0:	f004 fa9a 	bl	80080e8 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003bb4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003bb8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003bbc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003bc0:	b1dc      	cbz	r4, 8003bfa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003bc2:	1d23      	adds	r3, r4, #4
 8003bc4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003bc8:	6833      	ldr	r3, [r6, #0]
 8003bca:	f8c4 a008 	str.w	sl, [r4, #8]
 8003bce:	4630      	mov	r0, r6
 8003bd0:	68db      	ldr	r3, [r3, #12]
 8003bd2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003bd4:	4798      	blx	r3
    newPresenter->activate();
 8003bd6:	6823      	ldr	r3, [r4, #0]
 8003bd8:	4620      	mov	r0, r4
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003bde:	4629      	mov	r1, r5
 8003be0:	4630      	mov	r0, r6
 8003be2:	f012 ffe1 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003be6:	682b      	ldr	r3, [r5, #0]
 8003be8:	4628      	mov	r0, r5
 8003bea:	691b      	ldr	r3, [r3, #16]
 8003bec:	4798      	blx	r3
    newTransition->invalidate();
 8003bee:	682b      	ldr	r3, [r5, #0]
 8003bf0:	4628      	mov	r0, r5
 8003bf2:	695b      	ldr	r3, [r3, #20]
}
 8003bf4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bf8:	4718      	bx	r3
    model->bind(newPresenter);
 8003bfa:	4623      	mov	r3, r4
 8003bfc:	e7e2      	b.n	8003bc4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003bfe:	bf00      	nop
 8003c00:	0802b984 	.word	0x0802b984
 8003c04:	0802bdb5 	.word	0x0802bdb5
 8003c08:	0802bb20 	.word	0x0802bb20
 8003c0c:	0802bb67 	.word	0x0802bb67
 8003c10:	0802bc0a 	.word	0x0802bc0a
 8003c14:	20012ec4 	.word	0x20012ec4
 8003c18:	20012ec0 	.word	0x20012ec0

08003c1c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003c1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c20:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003c24:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c26:	68a0      	ldr	r0, [r4, #8]
 8003c28:	6803      	ldr	r3, [r0, #0]
 8003c2a:	6a1b      	ldr	r3, [r3, #32]
 8003c2c:	4798      	blx	r3
 8003c2e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003c32:	d205      	bcs.n	8003c40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003c34:	4b42      	ldr	r3, [pc, #264]	; (8003d40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003c36:	4a43      	ldr	r2, [pc, #268]	; (8003d44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003c38:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c3a:	4843      	ldr	r0, [pc, #268]	; (8003d48 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003c3c:	f026 f812 	bl	8029c64 <__assert_func>
 8003c40:	6860      	ldr	r0, [r4, #4]
 8003c42:	6803      	ldr	r3, [r0, #0]
 8003c44:	6a1b      	ldr	r3, [r3, #32]
 8003c46:	4798      	blx	r3
 8003c48:	280f      	cmp	r0, #15
 8003c4a:	d803      	bhi.n	8003c54 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003c4c:	4b3f      	ldr	r3, [pc, #252]	; (8003d4c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003c4e:	4a3d      	ldr	r2, [pc, #244]	; (8003d44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003c50:	21a4      	movs	r1, #164	; 0xa4
 8003c52:	e7f2      	b.n	8003c3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c54:	68e0      	ldr	r0, [r4, #12]
 8003c56:	6803      	ldr	r3, [r0, #0]
 8003c58:	6a1b      	ldr	r3, [r3, #32]
 8003c5a:	4798      	blx	r3
 8003c5c:	2837      	cmp	r0, #55	; 0x37
 8003c5e:	d803      	bhi.n	8003c68 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003c60:	4b3b      	ldr	r3, [pc, #236]	; (8003d50 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003c62:	4a38      	ldr	r2, [pc, #224]	; (8003d44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003c64:	21a5      	movs	r1, #165	; 0xa5
 8003c66:	e7e8      	b.n	8003c3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003c68:	f011 f972 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c6c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003d54 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003c70:	3004      	adds	r0, #4
 8003c72:	f011 f9d3 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c76:	f8d9 0000 	ldr.w	r0, [r9]
 8003c7a:	b110      	cbz	r0, 8003c82 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003c7c:	6803      	ldr	r3, [r0, #0]
 8003c7e:	68db      	ldr	r3, [r3, #12]
 8003c80:	4798      	blx	r3
    if (*currentTrans)
 8003c82:	f8d9 0000 	ldr.w	r0, [r9]
 8003c86:	b110      	cbz	r0, 8003c8e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003c88:	6803      	ldr	r3, [r0, #0]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	4798      	blx	r3
    if (*currentScreen)
 8003c8e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003d58 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003c92:	f8d8 0000 	ldr.w	r0, [r8]
 8003c96:	b110      	cbz	r0, 8003c9e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003c98:	6803      	ldr	r3, [r0, #0]
 8003c9a:	695b      	ldr	r3, [r3, #20]
 8003c9c:	4798      	blx	r3
    if (*currentPresenter)
 8003c9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ca2:	b110      	cbz	r0, 8003caa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ca4:	6803      	ldr	r3, [r0, #0]
 8003ca6:	685b      	ldr	r3, [r3, #4]
 8003ca8:	4798      	blx	r3
    if (*currentScreen)
 8003caa:	f8d8 0000 	ldr.w	r0, [r8]
 8003cae:	b110      	cbz	r0, 8003cb6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003cb0:	6803      	ldr	r3, [r0, #0]
 8003cb2:	681b      	ldr	r3, [r3, #0]
 8003cb4:	4798      	blx	r3
    if (*currentPresenter)
 8003cb6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003cba:	b110      	cbz	r0, 8003cc2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003cbc:	6803      	ldr	r3, [r0, #0]
 8003cbe:	689b      	ldr	r3, [r3, #8]
 8003cc0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003cc2:	68e0      	ldr	r0, [r4, #12]
 8003cc4:	2100      	movs	r1, #0
 8003cc6:	f7ff fed7 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003cca:	2114      	movs	r1, #20
 8003ccc:	4605      	mov	r5, r0
 8003cce:	f7ff fed7 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003cd2:	68a0      	ldr	r0, [r4, #8]
 8003cd4:	6803      	ldr	r3, [r0, #0]
 8003cd6:	2100      	movs	r1, #0
 8003cd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cda:	4798      	blx	r3
 8003cdc:	4606      	mov	r6, r0
 8003cde:	f004 fc0d 	bl	80084fc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ce2:	6860      	ldr	r0, [r4, #4]
 8003ce4:	6803      	ldr	r3, [r0, #0]
 8003ce6:	2100      	movs	r1, #0
 8003ce8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cea:	4798      	blx	r3
 8003cec:	4631      	mov	r1, r6
 8003cee:	4604      	mov	r4, r0
 8003cf0:	f004 fbde 	bl	80084b0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003cf4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003cf8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003cfc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003d00:	b1dc      	cbz	r4, 8003d3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003d02:	1d23      	adds	r3, r4, #4
 8003d04:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003d08:	6833      	ldr	r3, [r6, #0]
 8003d0a:	f8c4 a008 	str.w	sl, [r4, #8]
 8003d0e:	4630      	mov	r0, r6
 8003d10:	68db      	ldr	r3, [r3, #12]
 8003d12:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003d14:	4798      	blx	r3
    newPresenter->activate();
 8003d16:	6823      	ldr	r3, [r4, #0]
 8003d18:	4620      	mov	r0, r4
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d1e:	4629      	mov	r1, r5
 8003d20:	4630      	mov	r0, r6
 8003d22:	f012 ff41 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d26:	682b      	ldr	r3, [r5, #0]
 8003d28:	4628      	mov	r0, r5
 8003d2a:	691b      	ldr	r3, [r3, #16]
 8003d2c:	4798      	blx	r3
    newTransition->invalidate();
 8003d2e:	682b      	ldr	r3, [r5, #0]
 8003d30:	4628      	mov	r0, r5
 8003d32:	695b      	ldr	r3, [r3, #20]
}
 8003d34:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d38:	4718      	bx	r3
    model->bind(newPresenter);
 8003d3a:	4623      	mov	r3, r4
 8003d3c:	e7e2      	b.n	8003d04 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003d3e:	bf00      	nop
 8003d40:	0802b984 	.word	0x0802b984
 8003d44:	0802bed3 	.word	0x0802bed3
 8003d48:	0802bb20 	.word	0x0802bb20
 8003d4c:	0802bb67 	.word	0x0802bb67
 8003d50:	0802bc0a 	.word	0x0802bc0a
 8003d54:	20012ec4 	.word	0x20012ec4
 8003d58:	20012ec0 	.word	0x20012ec0

08003d5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003d5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003d60:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003d64:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003d66:	68a0      	ldr	r0, [r4, #8]
 8003d68:	6803      	ldr	r3, [r0, #0]
 8003d6a:	6a1b      	ldr	r3, [r3, #32]
 8003d6c:	4798      	blx	r3
 8003d6e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003d72:	d205      	bcs.n	8003d80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003d74:	4b42      	ldr	r3, [pc, #264]	; (8003e80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003d76:	4a43      	ldr	r2, [pc, #268]	; (8003e84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003d78:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d7a:	4843      	ldr	r0, [pc, #268]	; (8003e88 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003d7c:	f025 ff72 	bl	8029c64 <__assert_func>
 8003d80:	6860      	ldr	r0, [r4, #4]
 8003d82:	6803      	ldr	r3, [r0, #0]
 8003d84:	6a1b      	ldr	r3, [r3, #32]
 8003d86:	4798      	blx	r3
 8003d88:	280f      	cmp	r0, #15
 8003d8a:	d803      	bhi.n	8003d94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003d8c:	4b3f      	ldr	r3, [pc, #252]	; (8003e8c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003d8e:	4a3d      	ldr	r2, [pc, #244]	; (8003e84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003d90:	21a4      	movs	r1, #164	; 0xa4
 8003d92:	e7f2      	b.n	8003d7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d94:	68e0      	ldr	r0, [r4, #12]
 8003d96:	6803      	ldr	r3, [r0, #0]
 8003d98:	6a1b      	ldr	r3, [r3, #32]
 8003d9a:	4798      	blx	r3
 8003d9c:	2837      	cmp	r0, #55	; 0x37
 8003d9e:	d803      	bhi.n	8003da8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003da0:	4b3b      	ldr	r3, [pc, #236]	; (8003e90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003da2:	4a38      	ldr	r2, [pc, #224]	; (8003e84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003da4:	21a5      	movs	r1, #165	; 0xa5
 8003da6:	e7e8      	b.n	8003d7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003da8:	f011 f8d2 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003dac:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003db0:	3004      	adds	r0, #4
 8003db2:	f011 f933 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003db6:	f8d9 0000 	ldr.w	r0, [r9]
 8003dba:	b110      	cbz	r0, 8003dc2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003dbc:	6803      	ldr	r3, [r0, #0]
 8003dbe:	68db      	ldr	r3, [r3, #12]
 8003dc0:	4798      	blx	r3
    if (*currentTrans)
 8003dc2:	f8d9 0000 	ldr.w	r0, [r9]
 8003dc6:	b110      	cbz	r0, 8003dce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003dc8:	6803      	ldr	r3, [r0, #0]
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	4798      	blx	r3
    if (*currentScreen)
 8003dce:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003e98 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003dd2:	f8d8 0000 	ldr.w	r0, [r8]
 8003dd6:	b110      	cbz	r0, 8003dde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003dd8:	6803      	ldr	r3, [r0, #0]
 8003dda:	695b      	ldr	r3, [r3, #20]
 8003ddc:	4798      	blx	r3
    if (*currentPresenter)
 8003dde:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003de2:	b110      	cbz	r0, 8003dea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003de4:	6803      	ldr	r3, [r0, #0]
 8003de6:	685b      	ldr	r3, [r3, #4]
 8003de8:	4798      	blx	r3
    if (*currentScreen)
 8003dea:	f8d8 0000 	ldr.w	r0, [r8]
 8003dee:	b110      	cbz	r0, 8003df6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003df0:	6803      	ldr	r3, [r0, #0]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	4798      	blx	r3
    if (*currentPresenter)
 8003df6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003dfa:	b110      	cbz	r0, 8003e02 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003dfc:	6803      	ldr	r3, [r0, #0]
 8003dfe:	689b      	ldr	r3, [r3, #8]
 8003e00:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003e02:	68e0      	ldr	r0, [r4, #12]
 8003e04:	2100      	movs	r1, #0
 8003e06:	f7ff fe37 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003e0a:	2114      	movs	r1, #20
 8003e0c:	4605      	mov	r5, r0
 8003e0e:	f7ff fe37 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003e12:	68a0      	ldr	r0, [r4, #8]
 8003e14:	6803      	ldr	r3, [r0, #0]
 8003e16:	2100      	movs	r1, #0
 8003e18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e1a:	4798      	blx	r3
 8003e1c:	4606      	mov	r6, r0
 8003e1e:	f004 fb0d 	bl	800843c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003e22:	6860      	ldr	r0, [r4, #4]
 8003e24:	6803      	ldr	r3, [r0, #0]
 8003e26:	2100      	movs	r1, #0
 8003e28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e2a:	4798      	blx	r3
 8003e2c:	4631      	mov	r1, r6
 8003e2e:	4604      	mov	r4, r0
 8003e30:	f004 fade 	bl	80083f0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003e34:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003e38:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003e3c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003e40:	b1dc      	cbz	r4, 8003e7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003e42:	1d23      	adds	r3, r4, #4
 8003e44:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003e48:	6833      	ldr	r3, [r6, #0]
 8003e4a:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e4e:	4630      	mov	r0, r6
 8003e50:	68db      	ldr	r3, [r3, #12]
 8003e52:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003e54:	4798      	blx	r3
    newPresenter->activate();
 8003e56:	6823      	ldr	r3, [r4, #0]
 8003e58:	4620      	mov	r0, r4
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003e5e:	4629      	mov	r1, r5
 8003e60:	4630      	mov	r0, r6
 8003e62:	f012 fea1 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003e66:	682b      	ldr	r3, [r5, #0]
 8003e68:	4628      	mov	r0, r5
 8003e6a:	691b      	ldr	r3, [r3, #16]
 8003e6c:	4798      	blx	r3
    newTransition->invalidate();
 8003e6e:	682b      	ldr	r3, [r5, #0]
 8003e70:	4628      	mov	r0, r5
 8003e72:	695b      	ldr	r3, [r3, #20]
}
 8003e74:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e78:	4718      	bx	r3
    model->bind(newPresenter);
 8003e7a:	4623      	mov	r3, r4
 8003e7c:	e7e2      	b.n	8003e44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8003e7e:	bf00      	nop
 8003e80:	0802b984 	.word	0x0802b984
 8003e84:	0802c003 	.word	0x0802c003
 8003e88:	0802bb20 	.word	0x0802bb20
 8003e8c:	0802bb67 	.word	0x0802bb67
 8003e90:	0802bc0a 	.word	0x0802bc0a
 8003e94:	20012ec4 	.word	0x20012ec4
 8003e98:	20012ec0 	.word	0x20012ec0

08003e9c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003e9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ea0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ea4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003ea6:	68a0      	ldr	r0, [r4, #8]
 8003ea8:	6803      	ldr	r3, [r0, #0]
 8003eaa:	6a1b      	ldr	r3, [r3, #32]
 8003eac:	4798      	blx	r3
 8003eae:	f241 137b 	movw	r3, #4475	; 0x117b
 8003eb2:	4298      	cmp	r0, r3
 8003eb4:	d805      	bhi.n	8003ec2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003eb6:	4b42      	ldr	r3, [pc, #264]	; (8003fc0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003eb8:	4a42      	ldr	r2, [pc, #264]	; (8003fc4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003eba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003ebc:	4842      	ldr	r0, [pc, #264]	; (8003fc8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003ebe:	f025 fed1 	bl	8029c64 <__assert_func>
 8003ec2:	6860      	ldr	r0, [r4, #4]
 8003ec4:	6803      	ldr	r3, [r0, #0]
 8003ec6:	6a1b      	ldr	r3, [r3, #32]
 8003ec8:	4798      	blx	r3
 8003eca:	280f      	cmp	r0, #15
 8003ecc:	d803      	bhi.n	8003ed6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003ece:	4b3f      	ldr	r3, [pc, #252]	; (8003fcc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003ed0:	4a3c      	ldr	r2, [pc, #240]	; (8003fc4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003ed2:	21a4      	movs	r1, #164	; 0xa4
 8003ed4:	e7f2      	b.n	8003ebc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ed6:	68e0      	ldr	r0, [r4, #12]
 8003ed8:	6803      	ldr	r3, [r0, #0]
 8003eda:	6a1b      	ldr	r3, [r3, #32]
 8003edc:	4798      	blx	r3
 8003ede:	2837      	cmp	r0, #55	; 0x37
 8003ee0:	d803      	bhi.n	8003eea <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003ee2:	4b3b      	ldr	r3, [pc, #236]	; (8003fd0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003ee4:	4a37      	ldr	r2, [pc, #220]	; (8003fc4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003ee6:	21a5      	movs	r1, #165	; 0xa5
 8003ee8:	e7e8      	b.n	8003ebc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003eea:	f011 f831 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003eee:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003fd4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8003ef2:	3004      	adds	r0, #4
 8003ef4:	f011 f892 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ef8:	f8d9 0000 	ldr.w	r0, [r9]
 8003efc:	b110      	cbz	r0, 8003f04 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003efe:	6803      	ldr	r3, [r0, #0]
 8003f00:	68db      	ldr	r3, [r3, #12]
 8003f02:	4798      	blx	r3
    if (*currentTrans)
 8003f04:	f8d9 0000 	ldr.w	r0, [r9]
 8003f08:	b110      	cbz	r0, 8003f10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003f0a:	6803      	ldr	r3, [r0, #0]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	4798      	blx	r3
    if (*currentScreen)
 8003f10:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003fd8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003f14:	f8d8 0000 	ldr.w	r0, [r8]
 8003f18:	b110      	cbz	r0, 8003f20 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003f1a:	6803      	ldr	r3, [r0, #0]
 8003f1c:	695b      	ldr	r3, [r3, #20]
 8003f1e:	4798      	blx	r3
    if (*currentPresenter)
 8003f20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f24:	b110      	cbz	r0, 8003f2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003f26:	6803      	ldr	r3, [r0, #0]
 8003f28:	685b      	ldr	r3, [r3, #4]
 8003f2a:	4798      	blx	r3
    if (*currentScreen)
 8003f2c:	f8d8 0000 	ldr.w	r0, [r8]
 8003f30:	b110      	cbz	r0, 8003f38 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003f32:	6803      	ldr	r3, [r0, #0]
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	4798      	blx	r3
    if (*currentPresenter)
 8003f38:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f3c:	b110      	cbz	r0, 8003f44 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003f3e:	6803      	ldr	r3, [r0, #0]
 8003f40:	689b      	ldr	r3, [r3, #8]
 8003f42:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003f44:	68e0      	ldr	r0, [r4, #12]
 8003f46:	2100      	movs	r1, #0
 8003f48:	f7ff fd96 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003f4c:	2114      	movs	r1, #20
 8003f4e:	4605      	mov	r5, r0
 8003f50:	f7ff fd96 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f54:	68a0      	ldr	r0, [r4, #8]
 8003f56:	6803      	ldr	r3, [r0, #0]
 8003f58:	2100      	movs	r1, #0
 8003f5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f5c:	4798      	blx	r3
 8003f5e:	4606      	mov	r6, r0
 8003f60:	f004 fa0c 	bl	800837c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f64:	6860      	ldr	r0, [r4, #4]
 8003f66:	6803      	ldr	r3, [r0, #0]
 8003f68:	2100      	movs	r1, #0
 8003f6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f6c:	4798      	blx	r3
 8003f6e:	4631      	mov	r1, r6
 8003f70:	4604      	mov	r4, r0
 8003f72:	f004 f9dd 	bl	8008330 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003f76:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f7a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f7e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f82:	b1dc      	cbz	r4, 8003fbc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8003f84:	1d23      	adds	r3, r4, #4
 8003f86:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f8a:	6833      	ldr	r3, [r6, #0]
 8003f8c:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f90:	4630      	mov	r0, r6
 8003f92:	68db      	ldr	r3, [r3, #12]
 8003f94:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f96:	4798      	blx	r3
    newPresenter->activate();
 8003f98:	6823      	ldr	r3, [r4, #0]
 8003f9a:	4620      	mov	r0, r4
 8003f9c:	681b      	ldr	r3, [r3, #0]
 8003f9e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003fa0:	4629      	mov	r1, r5
 8003fa2:	4630      	mov	r0, r6
 8003fa4:	f012 fe00 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003fa8:	682b      	ldr	r3, [r5, #0]
 8003faa:	4628      	mov	r0, r5
 8003fac:	691b      	ldr	r3, [r3, #16]
 8003fae:	4798      	blx	r3
    newTransition->invalidate();
 8003fb0:	682b      	ldr	r3, [r5, #0]
 8003fb2:	4628      	mov	r0, r5
 8003fb4:	695b      	ldr	r3, [r3, #20]
}
 8003fb6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fba:	4718      	bx	r3
    model->bind(newPresenter);
 8003fbc:	4623      	mov	r3, r4
 8003fbe:	e7e2      	b.n	8003f86 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8003fc0:	0802b984 	.word	0x0802b984
 8003fc4:	0802c121 	.word	0x0802c121
 8003fc8:	0802bb20 	.word	0x0802bb20
 8003fcc:	0802bb67 	.word	0x0802bb67
 8003fd0:	0802bc0a 	.word	0x0802bc0a
 8003fd4:	20012ec4 	.word	0x20012ec4
 8003fd8:	20012ec0 	.word	0x20012ec0

08003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003fdc:	6803      	ldr	r3, [r0, #0]
 8003fde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fe0:	4718      	bx	r3
	...

08003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003fe4:	4b12      	ldr	r3, [pc, #72]	; (8004030 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003fe6:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003fe8:	6003      	str	r3, [r0, #0]
 8003fea:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003fee:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003ff0:	4b10      	ldr	r3, [pc, #64]	; (8004034 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003ff2:	7241      	strb	r1, [r0, #9]
 8003ff4:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003ff6:	4910      	ldr	r1, [pc, #64]	; (8004038 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003ff8:	4b10      	ldr	r3, [pc, #64]	; (800403c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003ffa:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003ffe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004002:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004004:	2200      	movs	r2, #0
 8004006:	6042      	str	r2, [r0, #4]
 8004008:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800400a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 800400c:	81c2      	strh	r2, [r0, #14]
          solid()
 800400e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004012:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004016:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800401a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800401e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004020:	9100      	str	r1, [sp, #0]
 8004022:	3010      	adds	r0, #16
 8004024:	4611      	mov	r1, r2
 8004026:	f7fe fb2d 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800402a:	4620      	mov	r0, r4
 800402c:	b002      	add	sp, #8
 800402e:	bd10      	pop	{r4, pc}
 8004030:	0802d04c 	.word	0x0802d04c
 8004034:	0802cf54 	.word	0x0802cf54
 8004038:	20012e72 	.word	0x20012e72
 800403c:	20012e70 	.word	0x20012e70

08004040 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004040:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004044:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004048:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800404a:	68a0      	ldr	r0, [r4, #8]
 800404c:	6803      	ldr	r3, [r0, #0]
 800404e:	6a1b      	ldr	r3, [r3, #32]
 8004050:	4798      	blx	r3
 8004052:	f241 03af 	movw	r3, #4271	; 0x10af
 8004056:	4298      	cmp	r0, r3
 8004058:	d805      	bhi.n	8004066 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 800405a:	4b42      	ldr	r3, [pc, #264]	; (8004164 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 800405c:	4a42      	ldr	r2, [pc, #264]	; (8004168 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800405e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004060:	4842      	ldr	r0, [pc, #264]	; (800416c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004062:	f025 fdff 	bl	8029c64 <__assert_func>
 8004066:	6860      	ldr	r0, [r4, #4]
 8004068:	6803      	ldr	r3, [r0, #0]
 800406a:	6a1b      	ldr	r3, [r3, #32]
 800406c:	4798      	blx	r3
 800406e:	280f      	cmp	r0, #15
 8004070:	d803      	bhi.n	800407a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004072:	4b3f      	ldr	r3, [pc, #252]	; (8004170 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004074:	4a3c      	ldr	r2, [pc, #240]	; (8004168 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004076:	21a4      	movs	r1, #164	; 0xa4
 8004078:	e7f2      	b.n	8004060 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800407a:	68e0      	ldr	r0, [r4, #12]
 800407c:	6803      	ldr	r3, [r0, #0]
 800407e:	6a1b      	ldr	r3, [r3, #32]
 8004080:	4798      	blx	r3
 8004082:	2837      	cmp	r0, #55	; 0x37
 8004084:	d803      	bhi.n	800408e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004086:	4b3b      	ldr	r3, [pc, #236]	; (8004174 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004088:	4a37      	ldr	r2, [pc, #220]	; (8004168 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800408a:	21a5      	movs	r1, #165	; 0xa5
 800408c:	e7e8      	b.n	8004060 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800408e:	f010 ff5f 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004092:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004178 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004096:	3004      	adds	r0, #4
 8004098:	f010 ffc0 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800409c:	f8d9 0000 	ldr.w	r0, [r9]
 80040a0:	b110      	cbz	r0, 80040a8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80040a2:	6803      	ldr	r3, [r0, #0]
 80040a4:	68db      	ldr	r3, [r3, #12]
 80040a6:	4798      	blx	r3
    if (*currentTrans)
 80040a8:	f8d9 0000 	ldr.w	r0, [r9]
 80040ac:	b110      	cbz	r0, 80040b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80040ae:	6803      	ldr	r3, [r0, #0]
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	4798      	blx	r3
    if (*currentScreen)
 80040b4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800417c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 80040b8:	f8d8 0000 	ldr.w	r0, [r8]
 80040bc:	b110      	cbz	r0, 80040c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80040be:	6803      	ldr	r3, [r0, #0]
 80040c0:	695b      	ldr	r3, [r3, #20]
 80040c2:	4798      	blx	r3
    if (*currentPresenter)
 80040c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80040c8:	b110      	cbz	r0, 80040d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80040ca:	6803      	ldr	r3, [r0, #0]
 80040cc:	685b      	ldr	r3, [r3, #4]
 80040ce:	4798      	blx	r3
    if (*currentScreen)
 80040d0:	f8d8 0000 	ldr.w	r0, [r8]
 80040d4:	b110      	cbz	r0, 80040dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80040d6:	6803      	ldr	r3, [r0, #0]
 80040d8:	681b      	ldr	r3, [r3, #0]
 80040da:	4798      	blx	r3
    if (*currentPresenter)
 80040dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80040e0:	b110      	cbz	r0, 80040e8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80040e2:	6803      	ldr	r3, [r0, #0]
 80040e4:	689b      	ldr	r3, [r3, #8]
 80040e6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80040e8:	68e0      	ldr	r0, [r4, #12]
 80040ea:	2100      	movs	r1, #0
 80040ec:	f7ff ff76 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80040f0:	2114      	movs	r1, #20
 80040f2:	4605      	mov	r5, r0
 80040f4:	f7ff ff76 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80040f8:	68a0      	ldr	r0, [r4, #8]
 80040fa:	6803      	ldr	r3, [r0, #0]
 80040fc:	2100      	movs	r1, #0
 80040fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004100:	4798      	blx	r3
 8004102:	4606      	mov	r6, r0
 8004104:	f004 fc26 	bl	8008954 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004108:	6860      	ldr	r0, [r4, #4]
 800410a:	6803      	ldr	r3, [r0, #0]
 800410c:	2100      	movs	r1, #0
 800410e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004110:	4798      	blx	r3
 8004112:	4631      	mov	r1, r6
 8004114:	4604      	mov	r4, r0
 8004116:	f004 fbf7 	bl	8008908 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800411a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800411e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004122:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004126:	b1dc      	cbz	r4, 8004160 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004128:	1d23      	adds	r3, r4, #4
 800412a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800412e:	6833      	ldr	r3, [r6, #0]
 8004130:	f8c4 a008 	str.w	sl, [r4, #8]
 8004134:	4630      	mov	r0, r6
 8004136:	68db      	ldr	r3, [r3, #12]
 8004138:	63f4      	str	r4, [r6, #60]	; 0x3c
 800413a:	4798      	blx	r3
    newPresenter->activate();
 800413c:	6823      	ldr	r3, [r4, #0]
 800413e:	4620      	mov	r0, r4
 8004140:	681b      	ldr	r3, [r3, #0]
 8004142:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004144:	4629      	mov	r1, r5
 8004146:	4630      	mov	r0, r6
 8004148:	f012 fd2e 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800414c:	682b      	ldr	r3, [r5, #0]
 800414e:	4628      	mov	r0, r5
 8004150:	691b      	ldr	r3, [r3, #16]
 8004152:	4798      	blx	r3
    newTransition->invalidate();
 8004154:	682b      	ldr	r3, [r5, #0]
 8004156:	4628      	mov	r0, r5
 8004158:	695b      	ldr	r3, [r3, #20]
}
 800415a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800415e:	4718      	bx	r3
    model->bind(newPresenter);
 8004160:	4623      	mov	r3, r4
 8004162:	e7e2      	b.n	800412a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004164:	0802b984 	.word	0x0802b984
 8004168:	0802c23b 	.word	0x0802c23b
 800416c:	0802bb20 	.word	0x0802bb20
 8004170:	0802bb67 	.word	0x0802bb67
 8004174:	0802bc0a 	.word	0x0802bc0a
 8004178:	20012ec4 	.word	0x20012ec4
 800417c:	20012ec0 	.word	0x20012ec0

08004180 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8004180:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004184:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004188:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800418a:	68a0      	ldr	r0, [r4, #8]
 800418c:	6803      	ldr	r3, [r0, #0]
 800418e:	6a1b      	ldr	r3, [r3, #32]
 8004190:	4798      	blx	r3
 8004192:	f241 035b 	movw	r3, #4187	; 0x105b
 8004196:	4298      	cmp	r0, r3
 8004198:	d805      	bhi.n	80041a6 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 800419a:	4b42      	ldr	r3, [pc, #264]	; (80042a4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 800419c:	4a42      	ldr	r2, [pc, #264]	; (80042a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800419e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80041a0:	4842      	ldr	r0, [pc, #264]	; (80042ac <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 80041a2:	f025 fd5f 	bl	8029c64 <__assert_func>
 80041a6:	6860      	ldr	r0, [r4, #4]
 80041a8:	6803      	ldr	r3, [r0, #0]
 80041aa:	6a1b      	ldr	r3, [r3, #32]
 80041ac:	4798      	blx	r3
 80041ae:	280f      	cmp	r0, #15
 80041b0:	d803      	bhi.n	80041ba <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 80041b2:	4b3f      	ldr	r3, [pc, #252]	; (80042b0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 80041b4:	4a3c      	ldr	r2, [pc, #240]	; (80042a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80041b6:	21a4      	movs	r1, #164	; 0xa4
 80041b8:	e7f2      	b.n	80041a0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80041ba:	68e0      	ldr	r0, [r4, #12]
 80041bc:	6803      	ldr	r3, [r0, #0]
 80041be:	6a1b      	ldr	r3, [r3, #32]
 80041c0:	4798      	blx	r3
 80041c2:	2837      	cmp	r0, #55	; 0x37
 80041c4:	d803      	bhi.n	80041ce <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 80041c6:	4b3b      	ldr	r3, [pc, #236]	; (80042b4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 80041c8:	4a37      	ldr	r2, [pc, #220]	; (80042a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80041ca:	21a5      	movs	r1, #165	; 0xa5
 80041cc:	e7e8      	b.n	80041a0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80041ce:	f010 febf 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80041d2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80042b8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 80041d6:	3004      	adds	r0, #4
 80041d8:	f010 ff20 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80041dc:	f8d9 0000 	ldr.w	r0, [r9]
 80041e0:	b110      	cbz	r0, 80041e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80041e2:	6803      	ldr	r3, [r0, #0]
 80041e4:	68db      	ldr	r3, [r3, #12]
 80041e6:	4798      	blx	r3
    if (*currentTrans)
 80041e8:	f8d9 0000 	ldr.w	r0, [r9]
 80041ec:	b110      	cbz	r0, 80041f4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80041ee:	6803      	ldr	r3, [r0, #0]
 80041f0:	681b      	ldr	r3, [r3, #0]
 80041f2:	4798      	blx	r3
    if (*currentScreen)
 80041f4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80042bc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 80041f8:	f8d8 0000 	ldr.w	r0, [r8]
 80041fc:	b110      	cbz	r0, 8004204 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80041fe:	6803      	ldr	r3, [r0, #0]
 8004200:	695b      	ldr	r3, [r3, #20]
 8004202:	4798      	blx	r3
    if (*currentPresenter)
 8004204:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004208:	b110      	cbz	r0, 8004210 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800420a:	6803      	ldr	r3, [r0, #0]
 800420c:	685b      	ldr	r3, [r3, #4]
 800420e:	4798      	blx	r3
    if (*currentScreen)
 8004210:	f8d8 0000 	ldr.w	r0, [r8]
 8004214:	b110      	cbz	r0, 800421c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004216:	6803      	ldr	r3, [r0, #0]
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	4798      	blx	r3
    if (*currentPresenter)
 800421c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004220:	b110      	cbz	r0, 8004228 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004222:	6803      	ldr	r3, [r0, #0]
 8004224:	689b      	ldr	r3, [r3, #8]
 8004226:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004228:	68e0      	ldr	r0, [r4, #12]
 800422a:	2100      	movs	r1, #0
 800422c:	f7ff fed6 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004230:	2114      	movs	r1, #20
 8004232:	4605      	mov	r5, r0
 8004234:	f7ff fed6 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004238:	68a0      	ldr	r0, [r4, #8]
 800423a:	6803      	ldr	r3, [r0, #0]
 800423c:	2100      	movs	r1, #0
 800423e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004240:	4798      	blx	r3
 8004242:	4606      	mov	r6, r0
 8004244:	f003 ffd0 	bl	80081e8 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004248:	6860      	ldr	r0, [r4, #4]
 800424a:	6803      	ldr	r3, [r0, #0]
 800424c:	2100      	movs	r1, #0
 800424e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004250:	4798      	blx	r3
 8004252:	4631      	mov	r1, r6
 8004254:	4604      	mov	r4, r0
 8004256:	f003 ffa1 	bl	800819c <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 800425a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800425e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004262:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004266:	b1dc      	cbz	r4, 80042a0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 8004268:	1d23      	adds	r3, r4, #4
 800426a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800426e:	6833      	ldr	r3, [r6, #0]
 8004270:	f8c4 a008 	str.w	sl, [r4, #8]
 8004274:	4630      	mov	r0, r6
 8004276:	68db      	ldr	r3, [r3, #12]
 8004278:	63f4      	str	r4, [r6, #60]	; 0x3c
 800427a:	4798      	blx	r3
    newPresenter->activate();
 800427c:	6823      	ldr	r3, [r4, #0]
 800427e:	4620      	mov	r0, r4
 8004280:	681b      	ldr	r3, [r3, #0]
 8004282:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004284:	4629      	mov	r1, r5
 8004286:	4630      	mov	r0, r6
 8004288:	f012 fc8e 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800428c:	682b      	ldr	r3, [r5, #0]
 800428e:	4628      	mov	r0, r5
 8004290:	691b      	ldr	r3, [r3, #16]
 8004292:	4798      	blx	r3
    newTransition->invalidate();
 8004294:	682b      	ldr	r3, [r5, #0]
 8004296:	4628      	mov	r0, r5
 8004298:	695b      	ldr	r3, [r3, #20]
}
 800429a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800429e:	4718      	bx	r3
    model->bind(newPresenter);
 80042a0:	4623      	mov	r3, r4
 80042a2:	e7e2      	b.n	800426a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 80042a4:	0802b984 	.word	0x0802b984
 80042a8:	0802c35b 	.word	0x0802c35b
 80042ac:	0802bb20 	.word	0x0802bb20
 80042b0:	0802bb67 	.word	0x0802bb67
 80042b4:	0802bc0a 	.word	0x0802bc0a
 80042b8:	20012ec4 	.word	0x20012ec4
 80042bc:	20012ec0 	.word	0x20012ec0

080042c0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80042c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80042c4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80042c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80042ca:	68a0      	ldr	r0, [r4, #8]
 80042cc:	6803      	ldr	r3, [r0, #0]
 80042ce:	6a1b      	ldr	r3, [r3, #32]
 80042d0:	4798      	blx	r3
 80042d2:	f241 035b 	movw	r3, #4187	; 0x105b
 80042d6:	4298      	cmp	r0, r3
 80042d8:	d805      	bhi.n	80042e6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 80042da:	4b42      	ldr	r3, [pc, #264]	; (80043e4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 80042dc:	4a42      	ldr	r2, [pc, #264]	; (80043e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80042de:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80042e0:	4842      	ldr	r0, [pc, #264]	; (80043ec <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 80042e2:	f025 fcbf 	bl	8029c64 <__assert_func>
 80042e6:	6860      	ldr	r0, [r4, #4]
 80042e8:	6803      	ldr	r3, [r0, #0]
 80042ea:	6a1b      	ldr	r3, [r3, #32]
 80042ec:	4798      	blx	r3
 80042ee:	280f      	cmp	r0, #15
 80042f0:	d803      	bhi.n	80042fa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 80042f2:	4b3f      	ldr	r3, [pc, #252]	; (80043f0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 80042f4:	4a3c      	ldr	r2, [pc, #240]	; (80043e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80042f6:	21a4      	movs	r1, #164	; 0xa4
 80042f8:	e7f2      	b.n	80042e0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80042fa:	68e0      	ldr	r0, [r4, #12]
 80042fc:	6803      	ldr	r3, [r0, #0]
 80042fe:	6a1b      	ldr	r3, [r3, #32]
 8004300:	4798      	blx	r3
 8004302:	2837      	cmp	r0, #55	; 0x37
 8004304:	d803      	bhi.n	800430e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004306:	4b3b      	ldr	r3, [pc, #236]	; (80043f4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004308:	4a37      	ldr	r2, [pc, #220]	; (80043e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800430a:	21a5      	movs	r1, #165	; 0xa5
 800430c:	e7e8      	b.n	80042e0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800430e:	f010 fe1f 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004312:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80043f8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004316:	3004      	adds	r0, #4
 8004318:	f010 fe80 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800431c:	f8d9 0000 	ldr.w	r0, [r9]
 8004320:	b110      	cbz	r0, 8004328 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004322:	6803      	ldr	r3, [r0, #0]
 8004324:	68db      	ldr	r3, [r3, #12]
 8004326:	4798      	blx	r3
    if (*currentTrans)
 8004328:	f8d9 0000 	ldr.w	r0, [r9]
 800432c:	b110      	cbz	r0, 8004334 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800432e:	6803      	ldr	r3, [r0, #0]
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	4798      	blx	r3
    if (*currentScreen)
 8004334:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80043fc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004338:	f8d8 0000 	ldr.w	r0, [r8]
 800433c:	b110      	cbz	r0, 8004344 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800433e:	6803      	ldr	r3, [r0, #0]
 8004340:	695b      	ldr	r3, [r3, #20]
 8004342:	4798      	blx	r3
    if (*currentPresenter)
 8004344:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004348:	b110      	cbz	r0, 8004350 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800434a:	6803      	ldr	r3, [r0, #0]
 800434c:	685b      	ldr	r3, [r3, #4]
 800434e:	4798      	blx	r3
    if (*currentScreen)
 8004350:	f8d8 0000 	ldr.w	r0, [r8]
 8004354:	b110      	cbz	r0, 800435c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004356:	6803      	ldr	r3, [r0, #0]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	4798      	blx	r3
    if (*currentPresenter)
 800435c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004360:	b110      	cbz	r0, 8004368 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004362:	6803      	ldr	r3, [r0, #0]
 8004364:	689b      	ldr	r3, [r3, #8]
 8004366:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004368:	68e0      	ldr	r0, [r4, #12]
 800436a:	2100      	movs	r1, #0
 800436c:	f7ff fe36 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004370:	2114      	movs	r1, #20
 8004372:	4605      	mov	r5, r0
 8004374:	f7ff fe36 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004378:	68a0      	ldr	r0, [r4, #8]
 800437a:	6803      	ldr	r3, [r0, #0]
 800437c:	2100      	movs	r1, #0
 800437e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004380:	4798      	blx	r3
 8004382:	4606      	mov	r6, r0
 8004384:	f003 ff72 	bl	800826c <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004388:	6860      	ldr	r0, [r4, #4]
 800438a:	6803      	ldr	r3, [r0, #0]
 800438c:	2100      	movs	r1, #0
 800438e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004390:	4798      	blx	r3
 8004392:	4631      	mov	r1, r6
 8004394:	4604      	mov	r4, r0
 8004396:	f003 ff43 	bl	8008220 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 800439a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800439e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80043a2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80043a6:	b1dc      	cbz	r4, 80043e0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80043a8:	1d23      	adds	r3, r4, #4
 80043aa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80043ae:	6833      	ldr	r3, [r6, #0]
 80043b0:	f8c4 a008 	str.w	sl, [r4, #8]
 80043b4:	4630      	mov	r0, r6
 80043b6:	68db      	ldr	r3, [r3, #12]
 80043b8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80043ba:	4798      	blx	r3
    newPresenter->activate();
 80043bc:	6823      	ldr	r3, [r4, #0]
 80043be:	4620      	mov	r0, r4
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80043c4:	4629      	mov	r1, r5
 80043c6:	4630      	mov	r0, r6
 80043c8:	f012 fbee 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80043cc:	682b      	ldr	r3, [r5, #0]
 80043ce:	4628      	mov	r0, r5
 80043d0:	691b      	ldr	r3, [r3, #16]
 80043d2:	4798      	blx	r3
    newTransition->invalidate();
 80043d4:	682b      	ldr	r3, [r5, #0]
 80043d6:	4628      	mov	r0, r5
 80043d8:	695b      	ldr	r3, [r3, #20]
}
 80043da:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80043de:	4718      	bx	r3
    model->bind(newPresenter);
 80043e0:	4623      	mov	r3, r4
 80043e2:	e7e2      	b.n	80043aa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 80043e4:	0802b984 	.word	0x0802b984
 80043e8:	0802c483 	.word	0x0802c483
 80043ec:	0802bb20 	.word	0x0802bb20
 80043f0:	0802bb67 	.word	0x0802bb67
 80043f4:	0802bc0a 	.word	0x0802bc0a
 80043f8:	20012ec4 	.word	0x20012ec4
 80043fc:	20012ec0 	.word	0x20012ec0

08004400 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8004400:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004404:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004408:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800440a:	68a0      	ldr	r0, [r4, #8]
 800440c:	6803      	ldr	r3, [r0, #0]
 800440e:	6a1b      	ldr	r3, [r3, #32]
 8004410:	4798      	blx	r3
 8004412:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004416:	d205      	bcs.n	8004424 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8004418:	4b42      	ldr	r3, [pc, #264]	; (8004524 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800441a:	4a43      	ldr	r2, [pc, #268]	; (8004528 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800441c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800441e:	4843      	ldr	r0, [pc, #268]	; (800452c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8004420:	f025 fc20 	bl	8029c64 <__assert_func>
 8004424:	6860      	ldr	r0, [r4, #4]
 8004426:	6803      	ldr	r3, [r0, #0]
 8004428:	6a1b      	ldr	r3, [r3, #32]
 800442a:	4798      	blx	r3
 800442c:	280f      	cmp	r0, #15
 800442e:	d803      	bhi.n	8004438 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004430:	4b3f      	ldr	r3, [pc, #252]	; (8004530 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004432:	4a3d      	ldr	r2, [pc, #244]	; (8004528 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004434:	21a4      	movs	r1, #164	; 0xa4
 8004436:	e7f2      	b.n	800441e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004438:	68e0      	ldr	r0, [r4, #12]
 800443a:	6803      	ldr	r3, [r0, #0]
 800443c:	6a1b      	ldr	r3, [r3, #32]
 800443e:	4798      	blx	r3
 8004440:	2837      	cmp	r0, #55	; 0x37
 8004442:	d803      	bhi.n	800444c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004444:	4b3b      	ldr	r3, [pc, #236]	; (8004534 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8004446:	4a38      	ldr	r2, [pc, #224]	; (8004528 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004448:	21a5      	movs	r1, #165	; 0xa5
 800444a:	e7e8      	b.n	800441e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800444c:	f010 fd80 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004450:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004538 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004454:	3004      	adds	r0, #4
 8004456:	f010 fde1 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800445a:	f8d9 0000 	ldr.w	r0, [r9]
 800445e:	b110      	cbz	r0, 8004466 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004460:	6803      	ldr	r3, [r0, #0]
 8004462:	68db      	ldr	r3, [r3, #12]
 8004464:	4798      	blx	r3
    if (*currentTrans)
 8004466:	f8d9 0000 	ldr.w	r0, [r9]
 800446a:	b110      	cbz	r0, 8004472 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800446c:	6803      	ldr	r3, [r0, #0]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	4798      	blx	r3
    if (*currentScreen)
 8004472:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800453c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8004476:	f8d8 0000 	ldr.w	r0, [r8]
 800447a:	b110      	cbz	r0, 8004482 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800447c:	6803      	ldr	r3, [r0, #0]
 800447e:	695b      	ldr	r3, [r3, #20]
 8004480:	4798      	blx	r3
    if (*currentPresenter)
 8004482:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004486:	b110      	cbz	r0, 800448e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004488:	6803      	ldr	r3, [r0, #0]
 800448a:	685b      	ldr	r3, [r3, #4]
 800448c:	4798      	blx	r3
    if (*currentScreen)
 800448e:	f8d8 0000 	ldr.w	r0, [r8]
 8004492:	b110      	cbz	r0, 800449a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004494:	6803      	ldr	r3, [r0, #0]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	4798      	blx	r3
    if (*currentPresenter)
 800449a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800449e:	b110      	cbz	r0, 80044a6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80044a0:	6803      	ldr	r3, [r0, #0]
 80044a2:	689b      	ldr	r3, [r3, #8]
 80044a4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80044a6:	68e0      	ldr	r0, [r4, #12]
 80044a8:	2100      	movs	r1, #0
 80044aa:	f7ff fd97 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80044ae:	2114      	movs	r1, #20
 80044b0:	4605      	mov	r5, r0
 80044b2:	f7ff fd97 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80044b6:	68a0      	ldr	r0, [r4, #8]
 80044b8:	6803      	ldr	r3, [r0, #0]
 80044ba:	2100      	movs	r1, #0
 80044bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044be:	4798      	blx	r3
 80044c0:	4606      	mov	r6, r0
 80044c2:	f003 fe37 	bl	8008134 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80044c6:	6860      	ldr	r0, [r4, #4]
 80044c8:	6803      	ldr	r3, [r0, #0]
 80044ca:	2100      	movs	r1, #0
 80044cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044ce:	4798      	blx	r3
 80044d0:	4631      	mov	r1, r6
 80044d2:	4604      	mov	r4, r0
 80044d4:	f003 fe08 	bl	80080e8 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80044d8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80044dc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80044e0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80044e4:	b1dc      	cbz	r4, 800451e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 80044e6:	1d23      	adds	r3, r4, #4
 80044e8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80044ec:	6833      	ldr	r3, [r6, #0]
 80044ee:	f8c4 a008 	str.w	sl, [r4, #8]
 80044f2:	4630      	mov	r0, r6
 80044f4:	68db      	ldr	r3, [r3, #12]
 80044f6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80044f8:	4798      	blx	r3
    newPresenter->activate();
 80044fa:	6823      	ldr	r3, [r4, #0]
 80044fc:	4620      	mov	r0, r4
 80044fe:	681b      	ldr	r3, [r3, #0]
 8004500:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004502:	4629      	mov	r1, r5
 8004504:	4630      	mov	r0, r6
 8004506:	f012 fb4f 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800450a:	682b      	ldr	r3, [r5, #0]
 800450c:	4628      	mov	r0, r5
 800450e:	691b      	ldr	r3, [r3, #16]
 8004510:	4798      	blx	r3
    newTransition->invalidate();
 8004512:	682b      	ldr	r3, [r5, #0]
 8004514:	4628      	mov	r0, r5
 8004516:	695b      	ldr	r3, [r3, #20]
}
 8004518:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800451c:	4718      	bx	r3
    model->bind(newPresenter);
 800451e:	4623      	mov	r3, r4
 8004520:	e7e2      	b.n	80044e8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8004522:	bf00      	nop
 8004524:	0802b984 	.word	0x0802b984
 8004528:	0802c5a9 	.word	0x0802c5a9
 800452c:	0802bb20 	.word	0x0802bb20
 8004530:	0802bb67 	.word	0x0802bb67
 8004534:	0802bc0a 	.word	0x0802bc0a
 8004538:	20012ec4 	.word	0x20012ec4
 800453c:	20012ec0 	.word	0x20012ec0

08004540 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004540:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004544:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004548:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800454a:	68a0      	ldr	r0, [r4, #8]
 800454c:	6803      	ldr	r3, [r0, #0]
 800454e:	6a1b      	ldr	r3, [r3, #32]
 8004550:	4798      	blx	r3
 8004552:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004556:	4298      	cmp	r0, r3
 8004558:	d805      	bhi.n	8004566 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800455a:	4b42      	ldr	r3, [pc, #264]	; (8004664 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 800455c:	4a42      	ldr	r2, [pc, #264]	; (8004668 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800455e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004560:	4842      	ldr	r0, [pc, #264]	; (800466c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8004562:	f025 fb7f 	bl	8029c64 <__assert_func>
 8004566:	6860      	ldr	r0, [r4, #4]
 8004568:	6803      	ldr	r3, [r0, #0]
 800456a:	6a1b      	ldr	r3, [r3, #32]
 800456c:	4798      	blx	r3
 800456e:	280f      	cmp	r0, #15
 8004570:	d803      	bhi.n	800457a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8004572:	4b3f      	ldr	r3, [pc, #252]	; (8004670 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004574:	4a3c      	ldr	r2, [pc, #240]	; (8004668 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004576:	21a4      	movs	r1, #164	; 0xa4
 8004578:	e7f2      	b.n	8004560 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800457a:	68e0      	ldr	r0, [r4, #12]
 800457c:	6803      	ldr	r3, [r0, #0]
 800457e:	6a1b      	ldr	r3, [r3, #32]
 8004580:	4798      	blx	r3
 8004582:	2837      	cmp	r0, #55	; 0x37
 8004584:	d803      	bhi.n	800458e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8004586:	4b3b      	ldr	r3, [pc, #236]	; (8004674 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004588:	4a37      	ldr	r2, [pc, #220]	; (8004668 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800458a:	21a5      	movs	r1, #165	; 0xa5
 800458c:	e7e8      	b.n	8004560 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800458e:	f010 fcdf 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004592:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004678 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8004596:	3004      	adds	r0, #4
 8004598:	f010 fd40 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800459c:	f8d9 0000 	ldr.w	r0, [r9]
 80045a0:	b110      	cbz	r0, 80045a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80045a2:	6803      	ldr	r3, [r0, #0]
 80045a4:	68db      	ldr	r3, [r3, #12]
 80045a6:	4798      	blx	r3
    if (*currentTrans)
 80045a8:	f8d9 0000 	ldr.w	r0, [r9]
 80045ac:	b110      	cbz	r0, 80045b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80045ae:	6803      	ldr	r3, [r0, #0]
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	4798      	blx	r3
    if (*currentScreen)
 80045b4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800467c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80045b8:	f8d8 0000 	ldr.w	r0, [r8]
 80045bc:	b110      	cbz	r0, 80045c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80045be:	6803      	ldr	r3, [r0, #0]
 80045c0:	695b      	ldr	r3, [r3, #20]
 80045c2:	4798      	blx	r3
    if (*currentPresenter)
 80045c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045c8:	b110      	cbz	r0, 80045d0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80045ca:	6803      	ldr	r3, [r0, #0]
 80045cc:	685b      	ldr	r3, [r3, #4]
 80045ce:	4798      	blx	r3
    if (*currentScreen)
 80045d0:	f8d8 0000 	ldr.w	r0, [r8]
 80045d4:	b110      	cbz	r0, 80045dc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80045d6:	6803      	ldr	r3, [r0, #0]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	4798      	blx	r3
    if (*currentPresenter)
 80045dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045e0:	b110      	cbz	r0, 80045e8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80045e2:	6803      	ldr	r3, [r0, #0]
 80045e4:	689b      	ldr	r3, [r3, #8]
 80045e6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045e8:	68e0      	ldr	r0, [r4, #12]
 80045ea:	2100      	movs	r1, #0
 80045ec:	f7ff fcf6 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80045f0:	2114      	movs	r1, #20
 80045f2:	4605      	mov	r5, r0
 80045f4:	f7ff fcf6 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80045f8:	68a0      	ldr	r0, [r4, #8]
 80045fa:	6803      	ldr	r3, [r0, #0]
 80045fc:	2100      	movs	r1, #0
 80045fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004600:	4798      	blx	r3
 8004602:	4606      	mov	r6, r0
 8004604:	f004 f816 	bl	8008634 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004608:	6860      	ldr	r0, [r4, #4]
 800460a:	6803      	ldr	r3, [r0, #0]
 800460c:	2100      	movs	r1, #0
 800460e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004610:	4798      	blx	r3
 8004612:	4631      	mov	r1, r6
 8004614:	4604      	mov	r4, r0
 8004616:	f003 ffe7 	bl	80085e8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800461a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800461e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004622:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004626:	b1dc      	cbz	r4, 8004660 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004628:	1d23      	adds	r3, r4, #4
 800462a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800462e:	6833      	ldr	r3, [r6, #0]
 8004630:	f8c4 a008 	str.w	sl, [r4, #8]
 8004634:	4630      	mov	r0, r6
 8004636:	68db      	ldr	r3, [r3, #12]
 8004638:	63f4      	str	r4, [r6, #60]	; 0x3c
 800463a:	4798      	blx	r3
    newPresenter->activate();
 800463c:	6823      	ldr	r3, [r4, #0]
 800463e:	4620      	mov	r0, r4
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004644:	4629      	mov	r1, r5
 8004646:	4630      	mov	r0, r6
 8004648:	f012 faae 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800464c:	682b      	ldr	r3, [r5, #0]
 800464e:	4628      	mov	r0, r5
 8004650:	691b      	ldr	r3, [r3, #16]
 8004652:	4798      	blx	r3
    newTransition->invalidate();
 8004654:	682b      	ldr	r3, [r5, #0]
 8004656:	4628      	mov	r0, r5
 8004658:	695b      	ldr	r3, [r3, #20]
}
 800465a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800465e:	4718      	bx	r3
    model->bind(newPresenter);
 8004660:	4623      	mov	r3, r4
 8004662:	e7e2      	b.n	800462a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004664:	0802b984 	.word	0x0802b984
 8004668:	0802c6c7 	.word	0x0802c6c7
 800466c:	0802bb20 	.word	0x0802bb20
 8004670:	0802bb67 	.word	0x0802bb67
 8004674:	0802bc0a 	.word	0x0802bc0a
 8004678:	20012ec4 	.word	0x20012ec4
 800467c:	20012ec0 	.word	0x20012ec0

08004680 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8004680:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004684:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004688:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800468a:	68a0      	ldr	r0, [r4, #8]
 800468c:	6803      	ldr	r3, [r0, #0]
 800468e:	6a1b      	ldr	r3, [r3, #32]
 8004690:	4798      	blx	r3
 8004692:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004696:	4298      	cmp	r0, r3
 8004698:	d805      	bhi.n	80046a6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800469a:	4b42      	ldr	r3, [pc, #264]	; (80047a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 800469c:	4a42      	ldr	r2, [pc, #264]	; (80047a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800469e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80046a0:	4842      	ldr	r0, [pc, #264]	; (80047ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80046a2:	f025 fadf 	bl	8029c64 <__assert_func>
 80046a6:	6860      	ldr	r0, [r4, #4]
 80046a8:	6803      	ldr	r3, [r0, #0]
 80046aa:	6a1b      	ldr	r3, [r3, #32]
 80046ac:	4798      	blx	r3
 80046ae:	280f      	cmp	r0, #15
 80046b0:	d803      	bhi.n	80046ba <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80046b2:	4b3f      	ldr	r3, [pc, #252]	; (80047b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80046b4:	4a3c      	ldr	r2, [pc, #240]	; (80047a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80046b6:	21a4      	movs	r1, #164	; 0xa4
 80046b8:	e7f2      	b.n	80046a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80046ba:	68e0      	ldr	r0, [r4, #12]
 80046bc:	6803      	ldr	r3, [r0, #0]
 80046be:	6a1b      	ldr	r3, [r3, #32]
 80046c0:	4798      	blx	r3
 80046c2:	2837      	cmp	r0, #55	; 0x37
 80046c4:	d803      	bhi.n	80046ce <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80046c6:	4b3b      	ldr	r3, [pc, #236]	; (80047b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80046c8:	4a37      	ldr	r2, [pc, #220]	; (80047a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80046ca:	21a5      	movs	r1, #165	; 0xa5
 80046cc:	e7e8      	b.n	80046a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80046ce:	f010 fc3f 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80046d2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80047b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80046d6:	3004      	adds	r0, #4
 80046d8:	f010 fca0 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80046dc:	f8d9 0000 	ldr.w	r0, [r9]
 80046e0:	b110      	cbz	r0, 80046e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80046e2:	6803      	ldr	r3, [r0, #0]
 80046e4:	68db      	ldr	r3, [r3, #12]
 80046e6:	4798      	blx	r3
    if (*currentTrans)
 80046e8:	f8d9 0000 	ldr.w	r0, [r9]
 80046ec:	b110      	cbz	r0, 80046f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80046ee:	6803      	ldr	r3, [r0, #0]
 80046f0:	681b      	ldr	r3, [r3, #0]
 80046f2:	4798      	blx	r3
    if (*currentScreen)
 80046f4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80047bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80046f8:	f8d8 0000 	ldr.w	r0, [r8]
 80046fc:	b110      	cbz	r0, 8004704 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80046fe:	6803      	ldr	r3, [r0, #0]
 8004700:	695b      	ldr	r3, [r3, #20]
 8004702:	4798      	blx	r3
    if (*currentPresenter)
 8004704:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004708:	b110      	cbz	r0, 8004710 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800470a:	6803      	ldr	r3, [r0, #0]
 800470c:	685b      	ldr	r3, [r3, #4]
 800470e:	4798      	blx	r3
    if (*currentScreen)
 8004710:	f8d8 0000 	ldr.w	r0, [r8]
 8004714:	b110      	cbz	r0, 800471c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004716:	6803      	ldr	r3, [r0, #0]
 8004718:	681b      	ldr	r3, [r3, #0]
 800471a:	4798      	blx	r3
    if (*currentPresenter)
 800471c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004720:	b110      	cbz	r0, 8004728 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004722:	6803      	ldr	r3, [r0, #0]
 8004724:	689b      	ldr	r3, [r3, #8]
 8004726:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004728:	68e0      	ldr	r0, [r4, #12]
 800472a:	2100      	movs	r1, #0
 800472c:	f7ff fc56 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004730:	2114      	movs	r1, #20
 8004732:	4605      	mov	r5, r0
 8004734:	f7ff fc56 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004738:	68a0      	ldr	r0, [r4, #8]
 800473a:	6803      	ldr	r3, [r0, #0]
 800473c:	2100      	movs	r1, #0
 800473e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004740:	4798      	blx	r3
 8004742:	4606      	mov	r6, r0
 8004744:	f003 ff34 	bl	80085b0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004748:	6860      	ldr	r0, [r4, #4]
 800474a:	6803      	ldr	r3, [r0, #0]
 800474c:	2100      	movs	r1, #0
 800474e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004750:	4798      	blx	r3
 8004752:	4631      	mov	r1, r6
 8004754:	4604      	mov	r4, r0
 8004756:	f003 ff05 	bl	8008564 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800475a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800475e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004762:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004766:	b1dc      	cbz	r4, 80047a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8004768:	1d23      	adds	r3, r4, #4
 800476a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800476e:	6833      	ldr	r3, [r6, #0]
 8004770:	f8c4 a008 	str.w	sl, [r4, #8]
 8004774:	4630      	mov	r0, r6
 8004776:	68db      	ldr	r3, [r3, #12]
 8004778:	63f4      	str	r4, [r6, #60]	; 0x3c
 800477a:	4798      	blx	r3
    newPresenter->activate();
 800477c:	6823      	ldr	r3, [r4, #0]
 800477e:	4620      	mov	r0, r4
 8004780:	681b      	ldr	r3, [r3, #0]
 8004782:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004784:	4629      	mov	r1, r5
 8004786:	4630      	mov	r0, r6
 8004788:	f012 fa0e 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800478c:	682b      	ldr	r3, [r5, #0]
 800478e:	4628      	mov	r0, r5
 8004790:	691b      	ldr	r3, [r3, #16]
 8004792:	4798      	blx	r3
    newTransition->invalidate();
 8004794:	682b      	ldr	r3, [r5, #0]
 8004796:	4628      	mov	r0, r5
 8004798:	695b      	ldr	r3, [r3, #20]
}
 800479a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800479e:	4718      	bx	r3
    model->bind(newPresenter);
 80047a0:	4623      	mov	r3, r4
 80047a2:	e7e2      	b.n	800476a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80047a4:	0802b984 	.word	0x0802b984
 80047a8:	0802c80b 	.word	0x0802c80b
 80047ac:	0802bb20 	.word	0x0802bb20
 80047b0:	0802bb67 	.word	0x0802bb67
 80047b4:	0802bc0a 	.word	0x0802bc0a
 80047b8:	20012ec4 	.word	0x20012ec4
 80047bc:	20012ec0 	.word	0x20012ec0

080047c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80047c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047c4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80047c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047ca:	68a0      	ldr	r0, [r4, #8]
 80047cc:	6803      	ldr	r3, [r0, #0]
 80047ce:	6a1b      	ldr	r3, [r3, #32]
 80047d0:	4798      	blx	r3
 80047d2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80047d6:	d205      	bcs.n	80047e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80047d8:	4b42      	ldr	r3, [pc, #264]	; (80048e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80047da:	4a43      	ldr	r2, [pc, #268]	; (80048e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80047dc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047de:	4843      	ldr	r0, [pc, #268]	; (80048ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80047e0:	f025 fa40 	bl	8029c64 <__assert_func>
 80047e4:	6860      	ldr	r0, [r4, #4]
 80047e6:	6803      	ldr	r3, [r0, #0]
 80047e8:	6a1b      	ldr	r3, [r3, #32]
 80047ea:	4798      	blx	r3
 80047ec:	280f      	cmp	r0, #15
 80047ee:	d803      	bhi.n	80047f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80047f0:	4b3f      	ldr	r3, [pc, #252]	; (80048f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80047f2:	4a3d      	ldr	r2, [pc, #244]	; (80048e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80047f4:	21a4      	movs	r1, #164	; 0xa4
 80047f6:	e7f2      	b.n	80047de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047f8:	68e0      	ldr	r0, [r4, #12]
 80047fa:	6803      	ldr	r3, [r0, #0]
 80047fc:	6a1b      	ldr	r3, [r3, #32]
 80047fe:	4798      	blx	r3
 8004800:	2837      	cmp	r0, #55	; 0x37
 8004802:	d803      	bhi.n	800480c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004804:	4b3b      	ldr	r3, [pc, #236]	; (80048f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8004806:	4a38      	ldr	r2, [pc, #224]	; (80048e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004808:	21a5      	movs	r1, #165	; 0xa5
 800480a:	e7e8      	b.n	80047de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800480c:	f010 fba0 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004810:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80048f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004814:	3004      	adds	r0, #4
 8004816:	f010 fc01 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800481a:	f8d9 0000 	ldr.w	r0, [r9]
 800481e:	b110      	cbz	r0, 8004826 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004820:	6803      	ldr	r3, [r0, #0]
 8004822:	68db      	ldr	r3, [r3, #12]
 8004824:	4798      	blx	r3
    if (*currentTrans)
 8004826:	f8d9 0000 	ldr.w	r0, [r9]
 800482a:	b110      	cbz	r0, 8004832 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800482c:	6803      	ldr	r3, [r0, #0]
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	4798      	blx	r3
    if (*currentScreen)
 8004832:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80048fc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8004836:	f8d8 0000 	ldr.w	r0, [r8]
 800483a:	b110      	cbz	r0, 8004842 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800483c:	6803      	ldr	r3, [r0, #0]
 800483e:	695b      	ldr	r3, [r3, #20]
 8004840:	4798      	blx	r3
    if (*currentPresenter)
 8004842:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004846:	b110      	cbz	r0, 800484e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004848:	6803      	ldr	r3, [r0, #0]
 800484a:	685b      	ldr	r3, [r3, #4]
 800484c:	4798      	blx	r3
    if (*currentScreen)
 800484e:	f8d8 0000 	ldr.w	r0, [r8]
 8004852:	b110      	cbz	r0, 800485a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004854:	6803      	ldr	r3, [r0, #0]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	4798      	blx	r3
    if (*currentPresenter)
 800485a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800485e:	b110      	cbz	r0, 8004866 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004860:	6803      	ldr	r3, [r0, #0]
 8004862:	689b      	ldr	r3, [r3, #8]
 8004864:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004866:	68e0      	ldr	r0, [r4, #12]
 8004868:	2100      	movs	r1, #0
 800486a:	f7ff fbb7 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800486e:	2114      	movs	r1, #20
 8004870:	4605      	mov	r5, r0
 8004872:	f7ff fbb7 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004876:	68a0      	ldr	r0, [r4, #8]
 8004878:	6803      	ldr	r3, [r0, #0]
 800487a:	2100      	movs	r1, #0
 800487c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800487e:	4798      	blx	r3
 8004880:	4606      	mov	r6, r0
 8004882:	f003 fe3b 	bl	80084fc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004886:	6860      	ldr	r0, [r4, #4]
 8004888:	6803      	ldr	r3, [r0, #0]
 800488a:	2100      	movs	r1, #0
 800488c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800488e:	4798      	blx	r3
 8004890:	4631      	mov	r1, r6
 8004892:	4604      	mov	r4, r0
 8004894:	f003 fe0c 	bl	80084b0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004898:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800489c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048a0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048a4:	b1dc      	cbz	r4, 80048de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80048a6:	1d23      	adds	r3, r4, #4
 80048a8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048ac:	6833      	ldr	r3, [r6, #0]
 80048ae:	f8c4 a008 	str.w	sl, [r4, #8]
 80048b2:	4630      	mov	r0, r6
 80048b4:	68db      	ldr	r3, [r3, #12]
 80048b6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80048b8:	4798      	blx	r3
    newPresenter->activate();
 80048ba:	6823      	ldr	r3, [r4, #0]
 80048bc:	4620      	mov	r0, r4
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048c2:	4629      	mov	r1, r5
 80048c4:	4630      	mov	r0, r6
 80048c6:	f012 f96f 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048ca:	682b      	ldr	r3, [r5, #0]
 80048cc:	4628      	mov	r0, r5
 80048ce:	691b      	ldr	r3, [r3, #16]
 80048d0:	4798      	blx	r3
    newTransition->invalidate();
 80048d2:	682b      	ldr	r3, [r5, #0]
 80048d4:	4628      	mov	r0, r5
 80048d6:	695b      	ldr	r3, [r3, #20]
}
 80048d8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80048dc:	4718      	bx	r3
    model->bind(newPresenter);
 80048de:	4623      	mov	r3, r4
 80048e0:	e7e2      	b.n	80048a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80048e2:	bf00      	nop
 80048e4:	0802b984 	.word	0x0802b984
 80048e8:	0802c94b 	.word	0x0802c94b
 80048ec:	0802bb20 	.word	0x0802bb20
 80048f0:	0802bb67 	.word	0x0802bb67
 80048f4:	0802bc0a 	.word	0x0802bc0a
 80048f8:	20012ec4 	.word	0x20012ec4
 80048fc:	20012ec0 	.word	0x20012ec0

08004900 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004900:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004904:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004908:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800490a:	68a0      	ldr	r0, [r4, #8]
 800490c:	6803      	ldr	r3, [r0, #0]
 800490e:	6a1b      	ldr	r3, [r3, #32]
 8004910:	4798      	blx	r3
 8004912:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004916:	4298      	cmp	r0, r3
 8004918:	d805      	bhi.n	8004926 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800491a:	4b42      	ldr	r3, [pc, #264]	; (8004a24 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 800491c:	4a42      	ldr	r2, [pc, #264]	; (8004a28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800491e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004920:	4842      	ldr	r0, [pc, #264]	; (8004a2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004922:	f025 f99f 	bl	8029c64 <__assert_func>
 8004926:	6860      	ldr	r0, [r4, #4]
 8004928:	6803      	ldr	r3, [r0, #0]
 800492a:	6a1b      	ldr	r3, [r3, #32]
 800492c:	4798      	blx	r3
 800492e:	280f      	cmp	r0, #15
 8004930:	d803      	bhi.n	800493a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004932:	4b3f      	ldr	r3, [pc, #252]	; (8004a30 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004934:	4a3c      	ldr	r2, [pc, #240]	; (8004a28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004936:	21a4      	movs	r1, #164	; 0xa4
 8004938:	e7f2      	b.n	8004920 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800493a:	68e0      	ldr	r0, [r4, #12]
 800493c:	6803      	ldr	r3, [r0, #0]
 800493e:	6a1b      	ldr	r3, [r3, #32]
 8004940:	4798      	blx	r3
 8004942:	2837      	cmp	r0, #55	; 0x37
 8004944:	d803      	bhi.n	800494e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8004946:	4b3b      	ldr	r3, [pc, #236]	; (8004a34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8004948:	4a37      	ldr	r2, [pc, #220]	; (8004a28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800494a:	21a5      	movs	r1, #165	; 0xa5
 800494c:	e7e8      	b.n	8004920 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800494e:	f010 faff 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004952:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a38 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8004956:	3004      	adds	r0, #4
 8004958:	f010 fb60 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800495c:	f8d9 0000 	ldr.w	r0, [r9]
 8004960:	b110      	cbz	r0, 8004968 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004962:	6803      	ldr	r3, [r0, #0]
 8004964:	68db      	ldr	r3, [r3, #12]
 8004966:	4798      	blx	r3
    if (*currentTrans)
 8004968:	f8d9 0000 	ldr.w	r0, [r9]
 800496c:	b110      	cbz	r0, 8004974 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800496e:	6803      	ldr	r3, [r0, #0]
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	4798      	blx	r3
    if (*currentScreen)
 8004974:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004a3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004978:	f8d8 0000 	ldr.w	r0, [r8]
 800497c:	b110      	cbz	r0, 8004984 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800497e:	6803      	ldr	r3, [r0, #0]
 8004980:	695b      	ldr	r3, [r3, #20]
 8004982:	4798      	blx	r3
    if (*currentPresenter)
 8004984:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004988:	b110      	cbz	r0, 8004990 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800498a:	6803      	ldr	r3, [r0, #0]
 800498c:	685b      	ldr	r3, [r3, #4]
 800498e:	4798      	blx	r3
    if (*currentScreen)
 8004990:	f8d8 0000 	ldr.w	r0, [r8]
 8004994:	b110      	cbz	r0, 800499c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004996:	6803      	ldr	r3, [r0, #0]
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	4798      	blx	r3
    if (*currentPresenter)
 800499c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049a0:	b110      	cbz	r0, 80049a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80049a2:	6803      	ldr	r3, [r0, #0]
 80049a4:	689b      	ldr	r3, [r3, #8]
 80049a6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80049a8:	68e0      	ldr	r0, [r4, #12]
 80049aa:	2100      	movs	r1, #0
 80049ac:	f7ff fb16 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80049b0:	2114      	movs	r1, #20
 80049b2:	4605      	mov	r5, r0
 80049b4:	f7ff fb16 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80049b8:	68a0      	ldr	r0, [r4, #8]
 80049ba:	6803      	ldr	r3, [r0, #0]
 80049bc:	2100      	movs	r1, #0
 80049be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049c0:	4798      	blx	r3
 80049c2:	4606      	mov	r6, r0
 80049c4:	f003 ff60 	bl	8008888 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049c8:	6860      	ldr	r0, [r4, #4]
 80049ca:	6803      	ldr	r3, [r0, #0]
 80049cc:	2100      	movs	r1, #0
 80049ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049d0:	4798      	blx	r3
 80049d2:	4631      	mov	r1, r6
 80049d4:	4604      	mov	r4, r0
 80049d6:	f003 ff31 	bl	800883c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80049da:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80049de:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80049e2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80049e6:	b1dc      	cbz	r4, 8004a20 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80049e8:	1d23      	adds	r3, r4, #4
 80049ea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80049ee:	6833      	ldr	r3, [r6, #0]
 80049f0:	f8c4 a008 	str.w	sl, [r4, #8]
 80049f4:	4630      	mov	r0, r6
 80049f6:	68db      	ldr	r3, [r3, #12]
 80049f8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80049fa:	4798      	blx	r3
    newPresenter->activate();
 80049fc:	6823      	ldr	r3, [r4, #0]
 80049fe:	4620      	mov	r0, r4
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a04:	4629      	mov	r1, r5
 8004a06:	4630      	mov	r0, r6
 8004a08:	f012 f8ce 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a0c:	682b      	ldr	r3, [r5, #0]
 8004a0e:	4628      	mov	r0, r5
 8004a10:	691b      	ldr	r3, [r3, #16]
 8004a12:	4798      	blx	r3
    newTransition->invalidate();
 8004a14:	682b      	ldr	r3, [r5, #0]
 8004a16:	4628      	mov	r0, r5
 8004a18:	695b      	ldr	r3, [r3, #20]
}
 8004a1a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a1e:	4718      	bx	r3
    model->bind(newPresenter);
 8004a20:	4623      	mov	r3, r4
 8004a22:	e7e2      	b.n	80049ea <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004a24:	0802b984 	.word	0x0802b984
 8004a28:	0802ca7b 	.word	0x0802ca7b
 8004a2c:	0802bb20 	.word	0x0802bb20
 8004a30:	0802bb67 	.word	0x0802bb67
 8004a34:	0802bc0a 	.word	0x0802bc0a
 8004a38:	20012ec4 	.word	0x20012ec4
 8004a3c:	20012ec0 	.word	0x20012ec0

08004a40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004a40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a44:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a48:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a4a:	68a0      	ldr	r0, [r4, #8]
 8004a4c:	6803      	ldr	r3, [r0, #0]
 8004a4e:	6a1b      	ldr	r3, [r3, #32]
 8004a50:	4798      	blx	r3
 8004a52:	f241 33f3 	movw	r3, #5107	; 0x13f3
 8004a56:	4298      	cmp	r0, r3
 8004a58:	d805      	bhi.n	8004a66 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004a5a:	4b42      	ldr	r3, [pc, #264]	; (8004b64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004a5c:	4a42      	ldr	r2, [pc, #264]	; (8004b68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004a5e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a60:	4842      	ldr	r0, [pc, #264]	; (8004b6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004a62:	f025 f8ff 	bl	8029c64 <__assert_func>
 8004a66:	6860      	ldr	r0, [r4, #4]
 8004a68:	6803      	ldr	r3, [r0, #0]
 8004a6a:	6a1b      	ldr	r3, [r3, #32]
 8004a6c:	4798      	blx	r3
 8004a6e:	280f      	cmp	r0, #15
 8004a70:	d803      	bhi.n	8004a7a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004a72:	4b3f      	ldr	r3, [pc, #252]	; (8004b70 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004a74:	4a3c      	ldr	r2, [pc, #240]	; (8004b68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004a76:	21a4      	movs	r1, #164	; 0xa4
 8004a78:	e7f2      	b.n	8004a60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a7a:	68e0      	ldr	r0, [r4, #12]
 8004a7c:	6803      	ldr	r3, [r0, #0]
 8004a7e:	6a1b      	ldr	r3, [r3, #32]
 8004a80:	4798      	blx	r3
 8004a82:	2837      	cmp	r0, #55	; 0x37
 8004a84:	d803      	bhi.n	8004a8e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004a86:	4b3b      	ldr	r3, [pc, #236]	; (8004b74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004a88:	4a37      	ldr	r2, [pc, #220]	; (8004b68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004a8a:	21a5      	movs	r1, #165	; 0xa5
 8004a8c:	e7e8      	b.n	8004a60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004a8e:	f010 fa5f 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a92:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004b78 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004a96:	3004      	adds	r0, #4
 8004a98:	f010 fac0 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a9c:	f8d9 0000 	ldr.w	r0, [r9]
 8004aa0:	b110      	cbz	r0, 8004aa8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004aa2:	6803      	ldr	r3, [r0, #0]
 8004aa4:	68db      	ldr	r3, [r3, #12]
 8004aa6:	4798      	blx	r3
    if (*currentTrans)
 8004aa8:	f8d9 0000 	ldr.w	r0, [r9]
 8004aac:	b110      	cbz	r0, 8004ab4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004aae:	6803      	ldr	r3, [r0, #0]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	4798      	blx	r3
    if (*currentScreen)
 8004ab4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004b7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004ab8:	f8d8 0000 	ldr.w	r0, [r8]
 8004abc:	b110      	cbz	r0, 8004ac4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004abe:	6803      	ldr	r3, [r0, #0]
 8004ac0:	695b      	ldr	r3, [r3, #20]
 8004ac2:	4798      	blx	r3
    if (*currentPresenter)
 8004ac4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ac8:	b110      	cbz	r0, 8004ad0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004aca:	6803      	ldr	r3, [r0, #0]
 8004acc:	685b      	ldr	r3, [r3, #4]
 8004ace:	4798      	blx	r3
    if (*currentScreen)
 8004ad0:	f8d8 0000 	ldr.w	r0, [r8]
 8004ad4:	b110      	cbz	r0, 8004adc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004ad6:	6803      	ldr	r3, [r0, #0]
 8004ad8:	681b      	ldr	r3, [r3, #0]
 8004ada:	4798      	blx	r3
    if (*currentPresenter)
 8004adc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ae0:	b110      	cbz	r0, 8004ae8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ae2:	6803      	ldr	r3, [r0, #0]
 8004ae4:	689b      	ldr	r3, [r3, #8]
 8004ae6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ae8:	68e0      	ldr	r0, [r4, #12]
 8004aea:	2100      	movs	r1, #0
 8004aec:	f7ff fa76 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004af0:	2114      	movs	r1, #20
 8004af2:	4605      	mov	r5, r0
 8004af4:	f7ff fa76 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004af8:	68a0      	ldr	r0, [r4, #8]
 8004afa:	6803      	ldr	r3, [r0, #0]
 8004afc:	2100      	movs	r1, #0
 8004afe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b00:	4798      	blx	r3
 8004b02:	4606      	mov	r6, r0
 8004b04:	f003 fe38 	bl	8008778 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b08:	6860      	ldr	r0, [r4, #4]
 8004b0a:	6803      	ldr	r3, [r0, #0]
 8004b0c:	2100      	movs	r1, #0
 8004b0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b10:	4798      	blx	r3
 8004b12:	4631      	mov	r1, r6
 8004b14:	4604      	mov	r4, r0
 8004b16:	f003 fe09 	bl	800872c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004b1a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b1e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b22:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b26:	b1dc      	cbz	r4, 8004b60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004b28:	1d23      	adds	r3, r4, #4
 8004b2a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b2e:	6833      	ldr	r3, [r6, #0]
 8004b30:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b34:	4630      	mov	r0, r6
 8004b36:	68db      	ldr	r3, [r3, #12]
 8004b38:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b3a:	4798      	blx	r3
    newPresenter->activate();
 8004b3c:	6823      	ldr	r3, [r4, #0]
 8004b3e:	4620      	mov	r0, r4
 8004b40:	681b      	ldr	r3, [r3, #0]
 8004b42:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b44:	4629      	mov	r1, r5
 8004b46:	4630      	mov	r0, r6
 8004b48:	f012 f82e 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b4c:	682b      	ldr	r3, [r5, #0]
 8004b4e:	4628      	mov	r0, r5
 8004b50:	691b      	ldr	r3, [r3, #16]
 8004b52:	4798      	blx	r3
    newTransition->invalidate();
 8004b54:	682b      	ldr	r3, [r5, #0]
 8004b56:	4628      	mov	r0, r5
 8004b58:	695b      	ldr	r3, [r3, #20]
}
 8004b5a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b5e:	4718      	bx	r3
    model->bind(newPresenter);
 8004b60:	4623      	mov	r3, r4
 8004b62:	e7e2      	b.n	8004b2a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004b64:	0802b984 	.word	0x0802b984
 8004b68:	0802cbbd 	.word	0x0802cbbd
 8004b6c:	0802bb20 	.word	0x0802bb20
 8004b70:	0802bb67 	.word	0x0802bb67
 8004b74:	0802bc0a 	.word	0x0802bc0a
 8004b78:	20012ec4 	.word	0x20012ec4
 8004b7c:	20012ec0 	.word	0x20012ec0

08004b80 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004b80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b84:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b88:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b8a:	68a0      	ldr	r0, [r4, #8]
 8004b8c:	6803      	ldr	r3, [r0, #0]
 8004b8e:	6a1b      	ldr	r3, [r3, #32]
 8004b90:	4798      	blx	r3
 8004b92:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004b96:	d205      	bcs.n	8004ba4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004b98:	4b42      	ldr	r3, [pc, #264]	; (8004ca4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004b9a:	4a43      	ldr	r2, [pc, #268]	; (8004ca8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004b9c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b9e:	4843      	ldr	r0, [pc, #268]	; (8004cac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004ba0:	f025 f860 	bl	8029c64 <__assert_func>
 8004ba4:	6860      	ldr	r0, [r4, #4]
 8004ba6:	6803      	ldr	r3, [r0, #0]
 8004ba8:	6a1b      	ldr	r3, [r3, #32]
 8004baa:	4798      	blx	r3
 8004bac:	280f      	cmp	r0, #15
 8004bae:	d803      	bhi.n	8004bb8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004bb0:	4b3f      	ldr	r3, [pc, #252]	; (8004cb0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004bb2:	4a3d      	ldr	r2, [pc, #244]	; (8004ca8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004bb4:	21a4      	movs	r1, #164	; 0xa4
 8004bb6:	e7f2      	b.n	8004b9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bb8:	68e0      	ldr	r0, [r4, #12]
 8004bba:	6803      	ldr	r3, [r0, #0]
 8004bbc:	6a1b      	ldr	r3, [r3, #32]
 8004bbe:	4798      	blx	r3
 8004bc0:	2837      	cmp	r0, #55	; 0x37
 8004bc2:	d803      	bhi.n	8004bcc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004bc4:	4b3b      	ldr	r3, [pc, #236]	; (8004cb4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004bc6:	4a38      	ldr	r2, [pc, #224]	; (8004ca8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004bc8:	21a5      	movs	r1, #165	; 0xa5
 8004bca:	e7e8      	b.n	8004b9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004bcc:	f010 f9c0 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bd0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004cb8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004bd4:	3004      	adds	r0, #4
 8004bd6:	f010 fa21 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004bda:	f8d9 0000 	ldr.w	r0, [r9]
 8004bde:	b110      	cbz	r0, 8004be6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004be0:	6803      	ldr	r3, [r0, #0]
 8004be2:	68db      	ldr	r3, [r3, #12]
 8004be4:	4798      	blx	r3
    if (*currentTrans)
 8004be6:	f8d9 0000 	ldr.w	r0, [r9]
 8004bea:	b110      	cbz	r0, 8004bf2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004bec:	6803      	ldr	r3, [r0, #0]
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	4798      	blx	r3
    if (*currentScreen)
 8004bf2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004cbc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004bf6:	f8d8 0000 	ldr.w	r0, [r8]
 8004bfa:	b110      	cbz	r0, 8004c02 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004bfc:	6803      	ldr	r3, [r0, #0]
 8004bfe:	695b      	ldr	r3, [r3, #20]
 8004c00:	4798      	blx	r3
    if (*currentPresenter)
 8004c02:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c06:	b110      	cbz	r0, 8004c0e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004c08:	6803      	ldr	r3, [r0, #0]
 8004c0a:	685b      	ldr	r3, [r3, #4]
 8004c0c:	4798      	blx	r3
    if (*currentScreen)
 8004c0e:	f8d8 0000 	ldr.w	r0, [r8]
 8004c12:	b110      	cbz	r0, 8004c1a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c14:	6803      	ldr	r3, [r0, #0]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	4798      	blx	r3
    if (*currentPresenter)
 8004c1a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c1e:	b110      	cbz	r0, 8004c26 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004c20:	6803      	ldr	r3, [r0, #0]
 8004c22:	689b      	ldr	r3, [r3, #8]
 8004c24:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c26:	68e0      	ldr	r0, [r4, #12]
 8004c28:	2100      	movs	r1, #0
 8004c2a:	f7ff f9d7 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004c2e:	2114      	movs	r1, #20
 8004c30:	4605      	mov	r5, r0
 8004c32:	f7ff f9d7 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c36:	68a0      	ldr	r0, [r4, #8]
 8004c38:	6803      	ldr	r3, [r0, #0]
 8004c3a:	2100      	movs	r1, #0
 8004c3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c3e:	4798      	blx	r3
 8004c40:	4606      	mov	r6, r0
 8004c42:	f003 fd3f 	bl	80086c4 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c46:	6860      	ldr	r0, [r4, #4]
 8004c48:	6803      	ldr	r3, [r0, #0]
 8004c4a:	2100      	movs	r1, #0
 8004c4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c4e:	4798      	blx	r3
 8004c50:	4631      	mov	r1, r6
 8004c52:	4604      	mov	r4, r0
 8004c54:	f003 fd10 	bl	8008678 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004c58:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c5c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c60:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c64:	b1dc      	cbz	r4, 8004c9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004c66:	1d23      	adds	r3, r4, #4
 8004c68:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c6c:	6833      	ldr	r3, [r6, #0]
 8004c6e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c72:	4630      	mov	r0, r6
 8004c74:	68db      	ldr	r3, [r3, #12]
 8004c76:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c78:	4798      	blx	r3
    newPresenter->activate();
 8004c7a:	6823      	ldr	r3, [r4, #0]
 8004c7c:	4620      	mov	r0, r4
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c82:	4629      	mov	r1, r5
 8004c84:	4630      	mov	r0, r6
 8004c86:	f011 ff8f 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c8a:	682b      	ldr	r3, [r5, #0]
 8004c8c:	4628      	mov	r0, r5
 8004c8e:	691b      	ldr	r3, [r3, #16]
 8004c90:	4798      	blx	r3
    newTransition->invalidate();
 8004c92:	682b      	ldr	r3, [r5, #0]
 8004c94:	4628      	mov	r0, r5
 8004c96:	695b      	ldr	r3, [r3, #20]
}
 8004c98:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c9c:	4718      	bx	r3
    model->bind(newPresenter);
 8004c9e:	4623      	mov	r3, r4
 8004ca0:	e7e2      	b.n	8004c68 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004ca2:	bf00      	nop
 8004ca4:	0802b984 	.word	0x0802b984
 8004ca8:	0802ccff 	.word	0x0802ccff
 8004cac:	0802bb20 	.word	0x0802bb20
 8004cb0:	0802bb67 	.word	0x0802bb67
 8004cb4:	0802bc0a 	.word	0x0802bc0a
 8004cb8:	20012ec4 	.word	0x20012ec4
 8004cbc:	20012ec0 	.word	0x20012ec0

08004cc0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004cc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cc4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004cc8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cca:	68a0      	ldr	r0, [r4, #8]
 8004ccc:	6803      	ldr	r3, [r0, #0]
 8004cce:	6a1b      	ldr	r3, [r3, #32]
 8004cd0:	4798      	blx	r3
 8004cd2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004cd6:	d205      	bcs.n	8004ce4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004cd8:	4b42      	ldr	r3, [pc, #264]	; (8004de4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004cda:	4a43      	ldr	r2, [pc, #268]	; (8004de8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004cdc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cde:	4843      	ldr	r0, [pc, #268]	; (8004dec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004ce0:	f024 ffc0 	bl	8029c64 <__assert_func>
 8004ce4:	6860      	ldr	r0, [r4, #4]
 8004ce6:	6803      	ldr	r3, [r0, #0]
 8004ce8:	6a1b      	ldr	r3, [r3, #32]
 8004cea:	4798      	blx	r3
 8004cec:	280f      	cmp	r0, #15
 8004cee:	d803      	bhi.n	8004cf8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004cf0:	4b3f      	ldr	r3, [pc, #252]	; (8004df0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004cf2:	4a3d      	ldr	r2, [pc, #244]	; (8004de8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004cf4:	21a4      	movs	r1, #164	; 0xa4
 8004cf6:	e7f2      	b.n	8004cde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004cf8:	68e0      	ldr	r0, [r4, #12]
 8004cfa:	6803      	ldr	r3, [r0, #0]
 8004cfc:	6a1b      	ldr	r3, [r3, #32]
 8004cfe:	4798      	blx	r3
 8004d00:	2837      	cmp	r0, #55	; 0x37
 8004d02:	d803      	bhi.n	8004d0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004d04:	4b3b      	ldr	r3, [pc, #236]	; (8004df4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004d06:	4a38      	ldr	r2, [pc, #224]	; (8004de8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004d08:	21a5      	movs	r1, #165	; 0xa5
 8004d0a:	e7e8      	b.n	8004cde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d0c:	f010 f920 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d10:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004df8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004d14:	3004      	adds	r0, #4
 8004d16:	f010 f981 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d1a:	f8d9 0000 	ldr.w	r0, [r9]
 8004d1e:	b110      	cbz	r0, 8004d26 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004d20:	6803      	ldr	r3, [r0, #0]
 8004d22:	68db      	ldr	r3, [r3, #12]
 8004d24:	4798      	blx	r3
    if (*currentTrans)
 8004d26:	f8d9 0000 	ldr.w	r0, [r9]
 8004d2a:	b110      	cbz	r0, 8004d32 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d2c:	6803      	ldr	r3, [r0, #0]
 8004d2e:	681b      	ldr	r3, [r3, #0]
 8004d30:	4798      	blx	r3
    if (*currentScreen)
 8004d32:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004dfc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004d36:	f8d8 0000 	ldr.w	r0, [r8]
 8004d3a:	b110      	cbz	r0, 8004d42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d3c:	6803      	ldr	r3, [r0, #0]
 8004d3e:	695b      	ldr	r3, [r3, #20]
 8004d40:	4798      	blx	r3
    if (*currentPresenter)
 8004d42:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d46:	b110      	cbz	r0, 8004d4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d48:	6803      	ldr	r3, [r0, #0]
 8004d4a:	685b      	ldr	r3, [r3, #4]
 8004d4c:	4798      	blx	r3
    if (*currentScreen)
 8004d4e:	f8d8 0000 	ldr.w	r0, [r8]
 8004d52:	b110      	cbz	r0, 8004d5a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d54:	6803      	ldr	r3, [r0, #0]
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	4798      	blx	r3
    if (*currentPresenter)
 8004d5a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d5e:	b110      	cbz	r0, 8004d66 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d60:	6803      	ldr	r3, [r0, #0]
 8004d62:	689b      	ldr	r3, [r3, #8]
 8004d64:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d66:	68e0      	ldr	r0, [r4, #12]
 8004d68:	2100      	movs	r1, #0
 8004d6a:	f7ff f937 	bl	8003fdc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004d6e:	2114      	movs	r1, #20
 8004d70:	4605      	mov	r5, r0
 8004d72:	f7ff f937 	bl	8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d76:	68a0      	ldr	r0, [r4, #8]
 8004d78:	6803      	ldr	r3, [r0, #0]
 8004d7a:	2100      	movs	r1, #0
 8004d7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d7e:	4798      	blx	r3
 8004d80:	4606      	mov	r6, r0
 8004d82:	f003 fb5b 	bl	800843c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d86:	6860      	ldr	r0, [r4, #4]
 8004d88:	6803      	ldr	r3, [r0, #0]
 8004d8a:	2100      	movs	r1, #0
 8004d8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d8e:	4798      	blx	r3
 8004d90:	4631      	mov	r1, r6
 8004d92:	4604      	mov	r4, r0
 8004d94:	f003 fb2c 	bl	80083f0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004d98:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d9c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004da0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004da4:	b1dc      	cbz	r4, 8004dde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004da6:	1d23      	adds	r3, r4, #4
 8004da8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dac:	6833      	ldr	r3, [r6, #0]
 8004dae:	f8c4 a008 	str.w	sl, [r4, #8]
 8004db2:	4630      	mov	r0, r6
 8004db4:	68db      	ldr	r3, [r3, #12]
 8004db6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004db8:	4798      	blx	r3
    newPresenter->activate();
 8004dba:	6823      	ldr	r3, [r4, #0]
 8004dbc:	4620      	mov	r0, r4
 8004dbe:	681b      	ldr	r3, [r3, #0]
 8004dc0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dc2:	4629      	mov	r1, r5
 8004dc4:	4630      	mov	r0, r6
 8004dc6:	f011 feef 	bl	8016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004dca:	682b      	ldr	r3, [r5, #0]
 8004dcc:	4628      	mov	r0, r5
 8004dce:	691b      	ldr	r3, [r3, #16]
 8004dd0:	4798      	blx	r3
    newTransition->invalidate();
 8004dd2:	682b      	ldr	r3, [r5, #0]
 8004dd4:	4628      	mov	r0, r5
 8004dd6:	695b      	ldr	r3, [r3, #20]
}
 8004dd8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ddc:	4718      	bx	r3
    model->bind(newPresenter);
 8004dde:	4623      	mov	r3, r4
 8004de0:	e7e2      	b.n	8004da8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004de2:	bf00      	nop
 8004de4:	0802b984 	.word	0x0802b984
 8004de8:	0802ce2b 	.word	0x0802ce2b
 8004dec:	0802bb20 	.word	0x0802bb20
 8004df0:	0802bb67 	.word	0x0802bb67
 8004df4:	0802bc0a 	.word	0x0802bc0a
 8004df8:	20012ec4 	.word	0x20012ec4
 8004dfc:	20012ec0 	.word	0x20012ec0

08004e00 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004e00:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004e02:	4770      	bx	lr

08004e04 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004e04:	4770      	bx	lr

08004e06 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004e06:	4770      	bx	lr

08004e08 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004e08:	b510      	push	{r4, lr}
}
 8004e0a:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004e0e:	4604      	mov	r4, r0
}
 8004e10:	f024 f915 	bl	802903e <_ZdlPvj>
 8004e14:	4620      	mov	r0, r4
 8004e16:	bd10      	pop	{r4, pc}

08004e18 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004e1c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004e20:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004e22:	2600      	movs	r6, #0
 8004e24:	ed2d 8b02 	vpush	{d8}
 8004e28:	8483      	strh	r3, [r0, #36]	; 0x24
 8004e2a:	4bb2      	ldr	r3, [pc, #712]	; (80050f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004e2c:	6286      	str	r6, [r0, #40]	; 0x28
 8004e2e:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004e32:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004e36:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004e3a:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004e3e:	f848 3b2c 	str.w	r3, [r8], #44
 8004e42:	b08b      	sub	sp, #44	; 0x2c
 8004e44:	4604      	mov	r4, r0
 8004e46:	4640      	mov	r0, r8
 8004e48:	f7fd fc42 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004e4c:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004e50:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004e54:	4618      	mov	r0, r3
 8004e56:	9303      	str	r3, [sp, #12]
 8004e58:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004e5c:	f7fd fc38 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004e60:	4658      	mov	r0, fp
 8004e62:	f7fd fc35 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004e66:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004e6a:	4da3      	ldr	r5, [pc, #652]	; (80050f8 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004e6c:	4650      	mov	r0, sl
 8004e6e:	f7fd fc2f 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004e72:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004e76:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004e7a:	4648      	mov	r0, r9
 8004e7c:	f7fd fc28 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004e80:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004e84:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004e88:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004e8a:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004e8e:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004e92:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004e96:	f7fd fc1b 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004e9a:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004e9e:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004ea2:	4638      	mov	r0, r7
 8004ea4:	f00d f80e 	bl	8011ec4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004ea8:	4a94      	ldr	r2, [pc, #592]	; (80050fc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8004eaa:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004eac:	4640      	mov	r0, r8
 8004eae:	226d      	movs	r2, #109	; 0x6d
 8004eb0:	21d9      	movs	r1, #217	; 0xd9
 8004eb2:	ad04      	add	r5, sp, #16
 8004eb4:	f7fd fbd9 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004eb8:	f04f 33ff 	mov.w	r3, #4294967295
 8004ebc:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8004ebe:	4641      	mov	r1, r8
 8004ec0:	4628      	mov	r0, r5
        linespace = space;
 8004ec2:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004ec6:	f00c fcc5 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004eca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ece:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8004ed2:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004ed6:	4b8a      	ldr	r3, [pc, #552]	; (8005100 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004ed8:	9308      	str	r3, [sp, #32]
 8004eda:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004edc:	a908      	add	r1, sp, #32
 8004ede:	4640      	mov	r0, r8
 8004ee0:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004ee4:	f00c ff50 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8004ee8:	4641      	mov	r1, r8
 8004eea:	4620      	mov	r0, r4
 8004eec:	f00a fd98 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8004ef0:	9b03      	ldr	r3, [sp, #12]
 8004ef2:	4631      	mov	r1, r6
 8004ef4:	4618      	mov	r0, r3
 8004ef6:	226d      	movs	r2, #109	; 0x6d
 8004ef8:	f7fd fbb7 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8004efc:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8004efe:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8004f02:	f04f 32ff 	mov.w	r2, #4294967295
 8004f06:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8004f0a:	4619      	mov	r1, r3
 8004f0c:	4628      	mov	r0, r5
 8004f0e:	f00c fca1 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f12:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f16:	4b7a      	ldr	r3, [pc, #488]	; (8005100 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004f18:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8004f1a:	9b03      	ldr	r3, [sp, #12]
 8004f1c:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8004f20:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004f24:	2230      	movs	r2, #48	; 0x30
 8004f26:	a908      	add	r1, sp, #32
 8004f28:	4618      	mov	r0, r3
 8004f2a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004f2e:	f00c ff2b 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8004f32:	9b03      	ldr	r3, [sp, #12]
 8004f34:	4620      	mov	r0, r4
 8004f36:	4619      	mov	r1, r3
 8004f38:	f00a fd72 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004f3c:	4632      	mov	r2, r6
 8004f3e:	4658      	mov	r0, fp
 8004f40:	2171      	movs	r1, #113	; 0x71
 8004f42:	f7fd fb92 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004f46:	f04f 32ff 	mov.w	r2, #4294967295
 8004f4a:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8004f4e:	4659      	mov	r1, fp
 8004f50:	4628      	mov	r0, r5
        linespace = space;
 8004f52:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8004f56:	f00c fc7d 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f5a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f5e:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8004f62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f66:	4b66      	ldr	r3, [pc, #408]	; (8005100 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004f68:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8004f6a:	a908      	add	r1, sp, #32
 8004f6c:	2331      	movs	r3, #49	; 0x31
 8004f6e:	4658      	mov	r0, fp
 8004f70:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004f74:	f00c ff08 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8004f78:	4659      	mov	r1, fp
 8004f7a:	4620      	mov	r0, r4
 8004f7c:	f00a fd50 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8004f80:	4650      	mov	r0, sl
 8004f82:	227c      	movs	r2, #124	; 0x7c
 8004f84:	214c      	movs	r1, #76	; 0x4c
 8004f86:	f7fd fb70 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8004f8a:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8004f8e:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8004f92:	f04f 32ff 	mov.w	r2, #4294967295
 8004f96:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8004f9a:	4651      	mov	r1, sl
 8004f9c:	4628      	mov	r0, r5
 8004f9e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004fa2:	4798      	blx	r3
 8004fa4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004fa8:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004fac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004fb0:	4b53      	ldr	r3, [pc, #332]	; (8005100 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004fb2:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8004fb4:	a908      	add	r1, sp, #32
 8004fb6:	232e      	movs	r3, #46	; 0x2e
 8004fb8:	4650      	mov	r0, sl
 8004fba:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004fbe:	f00c fee3 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8004fc2:	4651      	mov	r1, sl
 8004fc4:	4620      	mov	r0, r4
 8004fc6:	f00a fd2b 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8004fca:	4648      	mov	r0, r9
 8004fcc:	228b      	movs	r2, #139	; 0x8b
 8004fce:	2156      	movs	r1, #86	; 0x56
 8004fd0:	f7fd fb4b 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8004fd4:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8004fd8:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8004fdc:	f04f 32ff 	mov.w	r2, #4294967295
 8004fe0:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8004fe4:	4649      	mov	r1, r9
 8004fe6:	4628      	mov	r0, r5
 8004fe8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004fec:	4798      	blx	r3
 8004fee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ff2:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8004ff6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004ffa:	4b41      	ldr	r3, [pc, #260]	; (8005100 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004ffc:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8004ffe:	a908      	add	r1, sp, #32
 8005000:	232d      	movs	r3, #45	; 0x2d
 8005002:	4648      	mov	r0, r9
 8005004:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005008:	f00c febe 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 800500c:	4649      	mov	r1, r9
 800500e:	4620      	mov	r0, r4
 8005010:	f00a fd06 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8005014:	ee18 0a10 	vmov	r0, s16
 8005018:	229a      	movs	r2, #154	; 0x9a
 800501a:	2156      	movs	r1, #86	; 0x56
 800501c:	f7fd fb25 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8005020:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8005024:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8005028:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 800502c:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8005030:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8005034:	4628      	mov	r0, r5
 8005036:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800503a:	4798      	blx	r3
 800503c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005040:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8005044:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005048:	4b2d      	ldr	r3, [pc, #180]	; (8005100 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800504a:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 800504c:	ee18 0a10 	vmov	r0, s16
 8005050:	232c      	movs	r3, #44	; 0x2c
 8005052:	a908      	add	r1, sp, #32
 8005054:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005058:	f00c fe96 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 800505c:	ee18 1a10 	vmov	r1, s16
 8005060:	4620      	mov	r0, r4
 8005062:	f00a fcdd 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005066:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8005068:	a908      	add	r1, sp, #32
 800506a:	4638      	mov	r0, r7
 800506c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8005070:	f00a fc68 	bl	800f944 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005074:	2212      	movs	r2, #18
 8005076:	4638      	mov	r0, r7
 8005078:	211c      	movs	r1, #28
 800507a:	f7fd faf6 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800507e:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8005082:	4638      	mov	r0, r7
 8005084:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005086:	21b8      	movs	r1, #184	; 0xb8
 8005088:	4798      	blx	r3
        setHeight(height);
 800508a:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800508e:	4638      	mov	r0, r7
 8005090:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005092:	216a      	movs	r1, #106	; 0x6a
 8005094:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8005096:	225c      	movs	r2, #92	; 0x5c
 8005098:	4611      	mov	r1, r2
 800509a:	4638      	mov	r0, r7
 800509c:	f00c ffbd 	bl	801201a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 80050a0:	4638      	mov	r0, r7
 80050a2:	225a      	movs	r2, #90	; 0x5a
 80050a4:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80050a8:	f00d f83c 	bl	8012124 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 80050ac:	4633      	mov	r3, r6
 80050ae:	225a      	movs	r2, #90	; 0x5a
 80050b0:	4638      	mov	r0, r7
 80050b2:	9600      	str	r6, [sp, #0]
 80050b4:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80050b8:	f00a faf1 	bl	800f69e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80050bc:	4631      	mov	r1, r6
 80050be:	4638      	mov	r0, r7
 80050c0:	f00c ffda 	bl	8012078 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80050c4:	2335      	movs	r3, #53	; 0x35
 80050c6:	2208      	movs	r2, #8
 80050c8:	4638      	mov	r0, r7
 80050ca:	2105      	movs	r1, #5
 80050cc:	f00c ff90 	bl	8011ff0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80050d0:	4638      	mov	r0, r7
 80050d2:	2101      	movs	r1, #1
 80050d4:	f00c ff2e 	bl	8011f34 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80050d8:	4638      	mov	r0, r7
 80050da:	2101      	movs	r1, #1
 80050dc:	f00c ff2d 	bl	8011f3a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 80050e0:	4620      	mov	r0, r4
 80050e2:	4639      	mov	r1, r7
 80050e4:	f00a fc9c 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80050e8:	4620      	mov	r0, r4
 80050ea:	b00b      	add	sp, #44	; 0x2c
 80050ec:	ecbd 8b02 	vpop	{d8}
 80050f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80050f4:	0802d094 	.word	0x0802d094
 80050f8:	0802b818 	.word	0x0802b818
 80050fc:	00a900f0 	.word	0x00a900f0
 8005100:	0802b808 	.word	0x0802b808

08005104 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005104:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005106:	4770      	bx	lr

08005108 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005108:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800510a:	4770      	bx	lr

0800510c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800510c:	4770      	bx	lr

0800510e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800510e:	888b      	ldrh	r3, [r1, #4]
 8005110:	69c0      	ldr	r0, [r0, #28]
 8005112:	680a      	ldr	r2, [r1, #0]
 8005114:	0adb      	lsrs	r3, r3, #11
 8005116:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800511a:	4410      	add	r0, r2
 800511c:	4770      	bx	lr

0800511e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800511e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005120:	b1c2      	cbz	r2, 8005154 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005122:	7b13      	ldrb	r3, [r2, #12]
 8005124:	b1b3      	cbz	r3, 8005154 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005126:	7b54      	ldrb	r4, [r2, #13]
 8005128:	7ad2      	ldrb	r2, [r2, #11]
 800512a:	0224      	lsls	r4, r4, #8
 800512c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005130:	4314      	orrs	r4, r2
 8005132:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005134:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005136:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800513a:	8813      	ldrh	r3, [r2, #0]
 800513c:	428b      	cmp	r3, r1
 800513e:	d102      	bne.n	8005146 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005140:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005144:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005146:	d805      	bhi.n	8005154 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005148:	3801      	subs	r0, #1
 800514a:	b280      	uxth	r0, r0
 800514c:	3204      	adds	r2, #4
 800514e:	2800      	cmp	r0, #0
 8005150:	d1f3      	bne.n	800513a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005152:	e7f7      	b.n	8005144 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005154:	2000      	movs	r0, #0
 8005156:	e7f5      	b.n	8005144 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005158 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005158:	b510      	push	{r4, lr}
 800515a:	212c      	movs	r1, #44	; 0x2c
 800515c:	4604      	mov	r4, r0
 800515e:	f023 ff6e 	bl	802903e <_ZdlPvj>
 8005162:	4620      	mov	r0, r4
 8005164:	bd10      	pop	{r4, pc}
	...

08005168 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005168:	b530      	push	{r4, r5, lr}
 800516a:	b08b      	sub	sp, #44	; 0x2c
 800516c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800516e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005172:	9508      	str	r5, [sp, #32]
 8005174:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005178:	9507      	str	r5, [sp, #28]
 800517a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800517e:	9506      	str	r5, [sp, #24]
 8005180:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005184:	9505      	str	r5, [sp, #20]
 8005186:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800518a:	9504      	str	r5, [sp, #16]
 800518c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005190:	9503      	str	r5, [sp, #12]
 8005192:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005196:	9502      	str	r5, [sp, #8]
 8005198:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800519c:	9501      	str	r5, [sp, #4]
 800519e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80051a2:	9500      	str	r5, [sp, #0]
 80051a4:	f011 f86a 	bl	801627c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80051a8:	4b06      	ldr	r3, [pc, #24]	; (80051c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80051aa:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80051ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80051ae:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80051b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80051b2:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80051b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80051b6:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80051b8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80051ba:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80051bc:	4620      	mov	r0, r4
 80051be:	b00b      	add	sp, #44	; 0x2c
 80051c0:	bd30      	pop	{r4, r5, pc}
 80051c2:	bf00      	nop
 80051c4:	0802d128 	.word	0x0802d128

080051c8 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80051c8:	4770      	bx	lr

080051ca <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80051ca:	4770      	bx	lr

080051cc <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80051cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80051ce:	68c2      	ldr	r2, [r0, #12]
 80051d0:	6844      	ldr	r4, [r0, #4]
 80051d2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80051d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80051d6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80051da:	07d2      	lsls	r2, r2, #31
 80051dc:	bf48      	it	mi
 80051de:	5962      	ldrmi	r2, [r4, r5]
 80051e0:	689b      	ldr	r3, [r3, #8]
    }
 80051e2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80051e4:	bf48      	it	mi
 80051e6:	58d3      	ldrmi	r3, [r2, r3]
 80051e8:	4718      	bx	r3

080051ea <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80051ea:	6843      	ldr	r3, [r0, #4]
 80051ec:	b12b      	cbz	r3, 80051fa <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80051ee:	6883      	ldr	r3, [r0, #8]
 80051f0:	b92b      	cbnz	r3, 80051fe <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80051f2:	68c0      	ldr	r0, [r0, #12]
 80051f4:	f000 0001 	and.w	r0, r0, #1
 80051f8:	4770      	bx	lr
 80051fa:	4618      	mov	r0, r3
 80051fc:	4770      	bx	lr
 80051fe:	2001      	movs	r0, #1
    }
 8005200:	4770      	bx	lr

08005202 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005202:	b510      	push	{r4, lr}
 8005204:	2110      	movs	r1, #16
 8005206:	4604      	mov	r4, r0
 8005208:	f023 ff19 	bl	802903e <_ZdlPvj>
 800520c:	4620      	mov	r0, r4
 800520e:	bd10      	pop	{r4, pc}

08005210 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005210:	b510      	push	{r4, lr}
 8005212:	4b03      	ldr	r3, [pc, #12]	; (8005220 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005214:	6003      	str	r3, [r0, #0]
 8005216:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005218:	f00e f998 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800521c:	4620      	mov	r0, r4
 800521e:	bd10      	pop	{r4, pc}
 8005220:	0802d1a0 	.word	0x0802d1a0

08005224 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005224:	b507      	push	{r0, r1, r2, lr}
 8005226:	4b07      	ldr	r3, [pc, #28]	; (8005244 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005228:	6003      	str	r3, [r0, #0]
 800522a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800522c:	f00e f98e 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005230:	9801      	ldr	r0, [sp, #4]
 8005232:	f241 117c 	movw	r1, #4476	; 0x117c
 8005236:	f023 ff02 	bl	802903e <_ZdlPvj>
 800523a:	9801      	ldr	r0, [sp, #4]
 800523c:	b003      	add	sp, #12
 800523e:	f85d fb04 	ldr.w	pc, [sp], #4
 8005242:	bf00      	nop
 8005244:	0802d1a0 	.word	0x0802d1a0

08005248 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005248:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800524a:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800524e:	4299      	cmp	r1, r3
{
 8005250:	4604      	mov	r4, r0
 8005252:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005254:	d103      	bne.n	800525e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005256:	f00f fe7b 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800525a:	f7fe fb1d 	bl	8003898 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800525e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005262:	429d      	cmp	r5, r3
 8005264:	d103      	bne.n	800526e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005266:	f00f fe73 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 800526a:	f7fe fba5 	bl	80039b8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800526e:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005272:	429d      	cmp	r5, r3
 8005274:	d103      	bne.n	800527e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005276:	f00f fe6b 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800527a:	f7fe fbdd 	bl	8003a38 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800527e:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005282:	42a5      	cmp	r5, r4
 8005284:	d10a      	bne.n	800529c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005286:	4806      	ldr	r0, [pc, #24]	; (80052a0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005288:	2200      	movs	r2, #0
 800528a:	2120      	movs	r1, #32
 800528c:	f004 f8e4 	bl	8009458 <HAL_GPIO_WritePin>
 8005290:	f00f fe5e 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005294:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005298:	f7fe bbde 	b.w	8003a58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800529c:	bd38      	pop	{r3, r4, r5, pc}
 800529e:	bf00      	nop
 80052a0:	40021000 	.word	0x40021000

080052a4 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80052a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052a8:	ed2d 8b06 	vpush	{d8-d10}
 80052ac:	4604      	mov	r4, r0
 80052ae:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80052b0:	46a3      	mov	fp, r4
        : presenter(0)
 80052b2:	2500      	movs	r5, #0
 80052b4:	f011 facc 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 80052b8:	4b6a      	ldr	r3, [pc, #424]	; (8005464 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80052ba:	63e5      	str	r5, [r4, #60]	; 0x3c
 80052bc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80052c0:	2226      	movs	r2, #38	; 0x26
 80052c2:	4629      	mov	r1, r5
 80052c4:	4658      	mov	r0, fp
 80052c6:	f024 fed2 	bl	802a06e <memset>
 80052ca:	4658      	mov	r0, fp
 80052cc:	f7fd f9ee 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 80052d0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80052d4:	26ff      	movs	r6, #255	; 0xff
 80052d6:	4b64      	ldr	r3, [pc, #400]	; (8005468 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80052d8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80052da:	2226      	movs	r2, #38	; 0x26
 80052dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80052e0:	4629      	mov	r1, r5
 80052e2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80052e6:	4650      	mov	r0, sl
        : color(col)
 80052e8:	66a5      	str	r5, [r4, #104]	; 0x68
 80052ea:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80052ee:	f024 febe 	bl	802a06e <memset>
 80052f2:	4650      	mov	r0, sl
 80052f4:	f7fd f9da 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 80052f8:	4b5c      	ldr	r3, [pc, #368]	; (800546c <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80052fa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80052fc:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005300:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005304:	a90c      	add	r1, sp, #48	; 0x30
 8005306:	4650      	mov	r0, sl
 8005308:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800530c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005310:	f00d f915 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005314:	4648      	mov	r0, r9
 8005316:	f7fd f9db 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800531a:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800531e:	4b54      	ldr	r3, [pc, #336]	; (8005470 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005320:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005324:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005328:	4638      	mov	r0, r7
 800532a:	f00b ffd1 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 800532e:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005332:	4618      	mov	r0, r3
 8005334:	9303      	str	r3, [sp, #12]
 8005336:	f7fb fe87 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800533a:	4b4e      	ldr	r3, [pc, #312]	; (8005474 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 800533c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005340:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005344:	3324      	adds	r3, #36	; 0x24
 8005346:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800534a:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800534e:	4640      	mov	r0, r8
 8005350:	f7fd f9be 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005354:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005358:	4618      	mov	r0, r3
 800535a:	ee08 3a10 	vmov	s16, r3
 800535e:	f7fd f9b7 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005362:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005366:	4618      	mov	r0, r3
 8005368:	ee08 3a90 	vmov	s17, r3
 800536c:	f7fd f9b0 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005370:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005374:	4618      	mov	r0, r3
 8005376:	ee09 3a10 	vmov	s18, r3
 800537a:	f00d fa21 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800537e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005382:	4618      	mov	r0, r3
 8005384:	ee09 3a90 	vmov	s19, r3
 8005388:	f00d fa1a 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800538c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005390:	4618      	mov	r0, r3
 8005392:	ee0a 3a10 	vmov	s20, r3
 8005396:	f00d fa13 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800539a:	f504 7346 	add.w	r3, r4, #792	; 0x318
 800539e:	4618      	mov	r0, r3
 80053a0:	ee0a 3a90 	vmov	s21, r3
 80053a4:	f00d f8a4 	bl	80124f0 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80053a8:	4a33      	ldr	r2, [pc, #204]	; (8005478 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80053aa:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80053ae:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80053b2:	4a32      	ldr	r2, [pc, #200]	; (800547c <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80053b4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80053b8:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80053bc:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80053c0:	f00e f8ba 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80053c4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80053c8:	462a      	mov	r2, r5
 80053ca:	4658      	mov	r0, fp
 80053cc:	9300      	str	r3, [sp, #0]
 80053ce:	4629      	mov	r1, r5
 80053d0:	23f0      	movs	r3, #240	; 0xf0
 80053d2:	f7fd f957 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 80053d6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80053d8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80053dc:	66a3      	str	r3, [r4, #104]	; 0x68
 80053de:	4659      	mov	r1, fp
 80053e0:	4630      	mov	r0, r6
 80053e2:	f00a fb1d 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80053e6:	462a      	mov	r2, r5
 80053e8:	4650      	mov	r0, sl
 80053ea:	4629      	mov	r1, r5
 80053ec:	f7fd f93d 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80053f0:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80053f2:	4650      	mov	r0, sl
 80053f4:	a90c      	add	r1, sp, #48	; 0x30
 80053f6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80053fa:	f00d f8a0 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80053fe:	4651      	mov	r1, sl
 8005400:	4630      	mov	r0, r6
 8005402:	f00a fb0d 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005406:	f44f 729a 	mov.w	r2, #308	; 0x134
 800540a:	2156      	movs	r1, #86	; 0x56
 800540c:	4648      	mov	r0, r9
 800540e:	f7fd f92c 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8005412:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005416:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800541a:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800541e:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005422:	4650      	mov	r0, sl
 8005424:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005428:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800542c:	4649      	mov	r1, r9
 800542e:	4798      	blx	r3
 8005430:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005434:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005438:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800543c:	4b10      	ldr	r3, [pc, #64]	; (8005480 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800543e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005440:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005444:	b92b      	cbnz	r3, 8005452 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005446:	4b0f      	ldr	r3, [pc, #60]	; (8005484 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005448:	4a0f      	ldr	r2, [pc, #60]	; (8005488 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800544a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800544c:	480f      	ldr	r0, [pc, #60]	; (800548c <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800544e:	f024 fc09 	bl	8029c64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005452:	4b0f      	ldr	r3, [pc, #60]	; (8005490 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005454:	881b      	ldrh	r3, [r3, #0]
 8005456:	2b2a      	cmp	r3, #42	; 0x2a
 8005458:	d81e      	bhi.n	8005498 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800545a:	4b0e      	ldr	r3, [pc, #56]	; (8005494 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 800545c:	4a0a      	ldr	r2, [pc, #40]	; (8005488 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800545e:	2161      	movs	r1, #97	; 0x61
 8005460:	e7f4      	b.n	800544c <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005462:	bf00      	nop
 8005464:	0802d1a0 	.word	0x0802d1a0
 8005468:	0802e158 	.word	0x0802e158
 800546c:	0802e320 	.word	0x0802e320
 8005470:	0802b818 	.word	0x0802b818
 8005474:	0802de8c 	.word	0x0802de8c
 8005478:	0802d188 	.word	0x0802d188
 800547c:	08005249 	.word	0x08005249
 8005480:	20012ed4 	.word	0x20012ed4
 8005484:	0802b658 	.word	0x0802b658
 8005488:	0802b75a 	.word	0x0802b75a
 800548c:	0802b6d5 	.word	0x0802b6d5
 8005490:	20012ed8 	.word	0x20012ed8
 8005494:	0802b71c 	.word	0x0802b71c
        return texts->getText(typedTextId);
 8005498:	4ba5      	ldr	r3, [pc, #660]	; (8005730 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800549a:	212a      	movs	r1, #42	; 0x2a
 800549c:	6818      	ldr	r0, [r3, #0]
 800549e:	f002 fde7 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 80054a2:	4aa4      	ldr	r2, [pc, #656]	; (8005734 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80054a4:	4603      	mov	r3, r0
 80054a6:	2104      	movs	r1, #4
 80054a8:	4650      	mov	r0, sl
 80054aa:	f012 fec1 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80054ae:	4648      	mov	r0, r9
        wc1 = value;
 80054b0:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80054b4:	f00c fc48 	bl	8011d48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80054b8:	4b9f      	ldr	r3, [pc, #636]	; (8005738 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80054ba:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80054bc:	a90c      	add	r1, sp, #48	; 0x30
 80054be:	232b      	movs	r3, #43	; 0x2b
 80054c0:	4648      	mov	r0, r9
 80054c2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80054c6:	f00c fc5f 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054ca:	4649      	mov	r1, r9
 80054cc:	4630      	mov	r0, r6
 80054ce:	f00a faa7 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80054d2:	230a      	movs	r3, #10
 80054d4:	9300      	str	r3, [sp, #0]
 80054d6:	2232      	movs	r2, #50	; 0x32
 80054d8:	23f0      	movs	r3, #240	; 0xf0
 80054da:	4629      	mov	r1, r5
 80054dc:	4638      	mov	r0, r7
 80054de:	f7fd f8d1 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 80054e2:	9b03      	ldr	r3, [sp, #12]
 80054e4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80054e8:	22a0      	movs	r2, #160	; 0xa0
 80054ea:	4611      	mov	r1, r2
 80054ec:	4638      	mov	r0, r7
 80054ee:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80054f2:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80054f6:	f00c f801 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80054fa:	22a0      	movs	r2, #160	; 0xa0
 80054fc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005500:	4638      	mov	r0, r7
 8005502:	f00c f806 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005506:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800550a:	2b20      	cmp	r3, #32
 800550c:	d005      	beq.n	800551a <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 800550e:	2320      	movs	r3, #32
 8005510:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005514:	4638      	mov	r0, r7
 8005516:	f00b fefb 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800551a:	4638      	mov	r0, r7
 800551c:	2101      	movs	r1, #1
 800551e:	f00c f803 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005522:	4639      	mov	r1, r7
 8005524:	4630      	mov	r0, r6
 8005526:	ad04      	add	r5, sp, #16
        color = newColor;
 8005528:	f04f 37ff 	mov.w	r7, #4294967295
 800552c:	f00a fa78 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005530:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005534:	2223      	movs	r2, #35	; 0x23
 8005536:	4640      	mov	r0, r8
 8005538:	2145      	movs	r1, #69	; 0x45
 800553a:	f7fd f896 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800553e:	4641      	mov	r1, r8
 8005540:	4628      	mov	r0, r5
        color = newColor;
 8005542:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005546:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800554a:	f00c f983 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800554e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005552:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005556:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800555a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800555e:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005738 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005562:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005566:	2350      	movs	r3, #80	; 0x50
 8005568:	4649      	mov	r1, r9
 800556a:	4640      	mov	r0, r8
 800556c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005570:	f00c fc0a 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005574:	4641      	mov	r1, r8
 8005576:	4630      	mov	r0, r6
 8005578:	f00a fa52 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800557c:	ee18 0a10 	vmov	r0, s16
 8005580:	220c      	movs	r2, #12
 8005582:	2136      	movs	r1, #54	; 0x36
 8005584:	f7fd f871 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8005588:	ee18 1a10 	vmov	r1, s16
 800558c:	4628      	mov	r0, r5
        color = newColor;
 800558e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005592:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005596:	f00c f95d 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800559a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800559e:	ee18 3a10 	vmov	r3, s16
 80055a2:	333c      	adds	r3, #60	; 0x3c
 80055a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80055a8:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80055aa:	ee18 0a10 	vmov	r0, s16
 80055ae:	4649      	mov	r1, r9
 80055b0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80055b4:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80055b8:	f00c fbe6 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80055bc:	ee18 1a10 	vmov	r1, s16
 80055c0:	4630      	mov	r0, r6
 80055c2:	f00a fa2d 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80055c6:	ee18 0a90 	vmov	r0, s17
 80055ca:	223c      	movs	r2, #60	; 0x3c
 80055cc:	2158      	movs	r1, #88	; 0x58
 80055ce:	f7fd f84c 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80055d2:	ee18 1a90 	vmov	r1, s17
 80055d6:	4628      	mov	r0, r5
        color = newColor;
 80055d8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80055dc:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80055e0:	f00c f938 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80055e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80055e8:	ee18 3a90 	vmov	r3, s17
 80055ec:	333c      	adds	r3, #60	; 0x3c
 80055ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80055f2:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80055f4:	ee18 0a90 	vmov	r0, s17
 80055f8:	4649      	mov	r1, r9
 80055fa:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80055fe:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005602:	f00c fbc1 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005606:	ee18 1a90 	vmov	r1, s17
 800560a:	4630      	mov	r0, r6
 800560c:	f00a fa08 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005610:	ee19 0a10 	vmov	r0, s18
 8005614:	22f0      	movs	r2, #240	; 0xf0
 8005616:	2121      	movs	r1, #33	; 0x21
 8005618:	f7fd f827 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 800561c:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005620:	464a      	mov	r2, r9
 8005622:	f04f 0802 	mov.w	r8, #2
 8005626:	a90b      	add	r1, sp, #44	; 0x2c
 8005628:	ee19 0a10 	vmov	r0, s18
 800562c:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005630:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005634:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005638:	f00c fd8b 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800563c:	2352      	movs	r3, #82	; 0x52
 800563e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005642:	350c      	adds	r5, #12
        updateTextPosition();
 8005644:	ee19 0a10 	vmov	r0, s18
 8005648:	f7fd f864 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800564c:	ee19 1a10 	vmov	r1, s18
 8005650:	4630      	mov	r0, r6
        colorPressed = col;
 8005652:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005656:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800565a:	f00a f9e1 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800565e:	ee19 0a90 	vmov	r0, s19
 8005662:	22aa      	movs	r2, #170	; 0xaa
 8005664:	2121      	movs	r1, #33	; 0x21
 8005666:	f7fd f800 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800566a:	464a      	mov	r2, r9
 800566c:	a90b      	add	r1, sp, #44	; 0x2c
 800566e:	ee19 0a90 	vmov	r0, s19
 8005672:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005676:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800567a:	f00c fd6a 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800567e:	2353      	movs	r3, #83	; 0x53
 8005680:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005684:	ee19 0a90 	vmov	r0, s19
 8005688:	f7fd f844 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800568c:	ee19 1a90 	vmov	r1, s19
 8005690:	4630      	mov	r0, r6
        colorPressed = col;
 8005692:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005696:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800569a:	f00a f9c1 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800569e:	ee1a 0a10 	vmov	r0, s20
 80056a2:	2264      	movs	r2, #100	; 0x64
 80056a4:	2121      	movs	r1, #33	; 0x21
 80056a6:	f7fc ffe0 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80056aa:	464a      	mov	r2, r9
 80056ac:	a90b      	add	r1, sp, #44	; 0x2c
 80056ae:	ee1a 0a10 	vmov	r0, s20
 80056b2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80056b6:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80056ba:	f00c fd4a 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80056be:	2354      	movs	r3, #84	; 0x54
 80056c0:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80056c4:	ee1a 0a10 	vmov	r0, s20
 80056c8:	f7fd f824 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80056cc:	ee1a 1a10 	vmov	r1, s20
 80056d0:	4630      	mov	r0, r6
        colorPressed = col;
 80056d2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80056d6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80056da:	f00a f9a1 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80056de:	ee1a 0a90 	vmov	r0, s21
 80056e2:	2205      	movs	r2, #5
 80056e4:	21c6      	movs	r1, #198	; 0xc6
 80056e6:	f7fc ffc0 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80056ea:	2301      	movs	r3, #1
 80056ec:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80056f0:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80056f2:	ee1a 0a90 	vmov	r0, s21
 80056f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80056fa:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80056fe:	aa0a      	add	r2, sp, #40	; 0x28
 8005700:	ab0b      	add	r3, sp, #44	; 0x2c
 8005702:	a909      	add	r1, sp, #36	; 0x24
 8005704:	f8cd 9000 	str.w	r9, [sp]
 8005708:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 800570c:	f00c fe5b 	bl	80123c6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005710:	4630      	mov	r0, r6
 8005712:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8005716:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800571a:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800571e:	f00a f97f 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005722:	4620      	mov	r0, r4
 8005724:	b00f      	add	sp, #60	; 0x3c
 8005726:	ecbd 8b06 	vpop	{d8-d10}
 800572a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800572e:	bf00      	nop
 8005730:	20012ee0 	.word	0x20012ee0
 8005734:	0802b792 	.word	0x0802b792
 8005738:	0802b808 	.word	0x0802b808

0800573c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 800573c:	4770      	bx	lr

0800573e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800573e:	4770      	bx	lr

08005740 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005740:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005742:	68c2      	ldr	r2, [r0, #12]
 8005744:	6844      	ldr	r4, [r0, #4]
 8005746:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005748:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800574a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800574e:	07d2      	lsls	r2, r2, #31
 8005750:	bf48      	it	mi
 8005752:	5962      	ldrmi	r2, [r4, r5]
 8005754:	689b      	ldr	r3, [r3, #8]
    }
 8005756:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005758:	bf48      	it	mi
 800575a:	58d3      	ldrmi	r3, [r2, r3]
 800575c:	4718      	bx	r3

0800575e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800575e:	6843      	ldr	r3, [r0, #4]
 8005760:	b12b      	cbz	r3, 800576e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005762:	6883      	ldr	r3, [r0, #8]
 8005764:	b92b      	cbnz	r3, 8005772 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005766:	68c0      	ldr	r0, [r0, #12]
 8005768:	f000 0001 	and.w	r0, r0, #1
 800576c:	4770      	bx	lr
 800576e:	4618      	mov	r0, r3
 8005770:	4770      	bx	lr
 8005772:	2001      	movs	r0, #1
    }
 8005774:	4770      	bx	lr

08005776 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005776:	b510      	push	{r4, lr}
 8005778:	2110      	movs	r1, #16
 800577a:	4604      	mov	r4, r0
 800577c:	f023 fc5f 	bl	802903e <_ZdlPvj>
 8005780:	4620      	mov	r0, r4
 8005782:	bd10      	pop	{r4, pc}

08005784 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005784:	b510      	push	{r4, lr}
 8005786:	4b03      	ldr	r3, [pc, #12]	; (8005794 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8005788:	6003      	str	r3, [r0, #0]
 800578a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800578c:	f00d fede 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005790:	4620      	mov	r0, r4
 8005792:	bd10      	pop	{r4, pc}
 8005794:	0802d1ec 	.word	0x0802d1ec

08005798 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005798:	b507      	push	{r0, r1, r2, lr}
 800579a:	4b07      	ldr	r3, [pc, #28]	; (80057b8 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 800579c:	6003      	str	r3, [r0, #0]
 800579e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80057a0:	f00d fed4 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80057a4:	9801      	ldr	r0, [sp, #4]
 80057a6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80057aa:	f023 fc48 	bl	802903e <_ZdlPvj>
 80057ae:	9801      	ldr	r0, [sp, #4]
 80057b0:	b003      	add	sp, #12
 80057b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80057b6:	bf00      	nop
 80057b8:	0802d1ec 	.word	0x0802d1ec

080057bc <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80057bc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80057be:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80057c2:	4299      	cmp	r1, r3
{
 80057c4:	4604      	mov	r4, r0
 80057c6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80057c8:	d103      	bne.n	80057d2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80057ca:	f00f fbc1 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80057ce:	f7fe f853 	bl	8003878 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80057d2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80057d6:	429d      	cmp	r5, r3
 80057d8:	d103      	bne.n	80057e2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80057da:	f00f fbb9 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80057de:	f7fe f87b 	bl	80038d8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80057e2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80057e6:	42a5      	cmp	r5, r4
 80057e8:	d105      	bne.n	80057f6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80057ea:	f00f fbb1 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80057ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80057f2:	f7fe b8a1 	b.w	8003938 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80057f6:	bd38      	pop	{r3, r4, r5, pc}

080057f8 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80057f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057fc:	ed2d 8b06 	vpush	{d8-d10}
 8005800:	4604      	mov	r4, r0
 8005802:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005804:	46a3      	mov	fp, r4
 8005806:	2500      	movs	r5, #0
 8005808:	f011 f822 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 800580c:	4b66      	ldr	r3, [pc, #408]	; (80059a8 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 800580e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005810:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005814:	2226      	movs	r2, #38	; 0x26
 8005816:	4629      	mov	r1, r5
 8005818:	4658      	mov	r0, fp
 800581a:	f024 fc28 	bl	802a06e <memset>
 800581e:	4658      	mov	r0, fp
 8005820:	f7fc ff44 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8005824:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005828:	26ff      	movs	r6, #255	; 0xff
 800582a:	4b60      	ldr	r3, [pc, #384]	; (80059ac <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 800582c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800582e:	2226      	movs	r2, #38	; 0x26
 8005830:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005834:	4629      	mov	r1, r5
 8005836:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800583a:	4650      	mov	r0, sl
 800583c:	66a5      	str	r5, [r4, #104]	; 0x68
 800583e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005842:	f024 fc14 	bl	802a06e <memset>
 8005846:	4650      	mov	r0, sl
 8005848:	f7fc ff30 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 800584c:	4b58      	ldr	r3, [pc, #352]	; (80059b0 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 800584e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005850:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005854:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005858:	a90a      	add	r1, sp, #40	; 0x28
 800585a:	4650      	mov	r0, sl
 800585c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005860:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005864:	f00c fe6b 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005868:	4648      	mov	r0, r9
 800586a:	f7fc ff31 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800586e:	4b51      	ldr	r3, [pc, #324]	; (80059b4 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005870:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005874:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005878:	4618      	mov	r0, r3
 800587a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800587e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005882:	ee08 3a90 	vmov	s17, r3
 8005886:	f7fc ff23 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800588a:	4638      	mov	r0, r7
 800588c:	f00b fd20 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 8005890:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005894:	4618      	mov	r0, r3
 8005896:	9303      	str	r3, [sp, #12]
 8005898:	f7fb fbd6 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800589c:	4b46      	ldr	r3, [pc, #280]	; (80059b8 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 800589e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80058a2:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80058a6:	3324      	adds	r3, #36	; 0x24
 80058a8:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80058ac:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80058b0:	4640      	mov	r0, r8
 80058b2:	f7fc ff0d 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 80058b6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80058ba:	4618      	mov	r0, r3
 80058bc:	ee08 3a10 	vmov	s16, r3
 80058c0:	f7fc ff06 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 80058c4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80058c8:	4618      	mov	r0, r3
 80058ca:	ee09 3a10 	vmov	s18, r3
 80058ce:	f00c ff77 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80058d2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80058d6:	4618      	mov	r0, r3
 80058d8:	ee09 3a90 	vmov	s19, r3
 80058dc:	f00c ff70 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80058e0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80058e4:	4618      	mov	r0, r3
 80058e6:	ee0a 3a10 	vmov	s20, r3
 80058ea:	f00c ff69 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80058ee:	4a33      	ldr	r2, [pc, #204]	; (80059bc <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80058f0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80058f4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80058f8:	4a31      	ldr	r2, [pc, #196]	; (80059c0 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80058fa:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80058fe:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005902:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005906:	f00d fe17 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800590a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800590e:	462a      	mov	r2, r5
 8005910:	4658      	mov	r0, fp
 8005912:	9300      	str	r3, [sp, #0]
 8005914:	4629      	mov	r1, r5
 8005916:	23f0      	movs	r3, #240	; 0xf0
 8005918:	f7fc feb4 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 800591c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800591e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005922:	66a3      	str	r3, [r4, #104]	; 0x68
 8005924:	4659      	mov	r1, fp
 8005926:	4630      	mov	r0, r6
 8005928:	f00a f87a 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800592c:	462a      	mov	r2, r5
 800592e:	4650      	mov	r0, sl
 8005930:	4629      	mov	r1, r5
 8005932:	f7fc fe9a 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8005936:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005938:	4650      	mov	r0, sl
 800593a:	a90a      	add	r1, sp, #40	; 0x28
 800593c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005940:	f00c fdfd 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005944:	4651      	mov	r1, sl
 8005946:	4630      	mov	r0, r6
 8005948:	f00a f86a 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800594c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005950:	2156      	movs	r1, #86	; 0x56
 8005952:	4648      	mov	r0, r9
 8005954:	f7fc fe89 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005958:	f04f 33ff 	mov.w	r3, #4294967295
 800595c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005960:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005964:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005968:	f10d 0b10 	add.w	fp, sp, #16
 800596c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005970:	4649      	mov	r1, r9
 8005972:	4658      	mov	r0, fp
 8005974:	4798      	blx	r3
 8005976:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800597a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800597e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005982:	4b10      	ldr	r3, [pc, #64]	; (80059c4 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005984:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005986:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800598a:	b92b      	cbnz	r3, 8005998 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 800598c:	4b0e      	ldr	r3, [pc, #56]	; (80059c8 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 800598e:	4a0f      	ldr	r2, [pc, #60]	; (80059cc <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005990:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005992:	480f      	ldr	r0, [pc, #60]	; (80059d0 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005994:	f024 f966 	bl	8029c64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005998:	4b0e      	ldr	r3, [pc, #56]	; (80059d4 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800599a:	881b      	ldrh	r3, [r3, #0]
 800599c:	2b1b      	cmp	r3, #27
 800599e:	d81d      	bhi.n	80059dc <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80059a0:	4b0d      	ldr	r3, [pc, #52]	; (80059d8 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80059a2:	4a0a      	ldr	r2, [pc, #40]	; (80059cc <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80059a4:	2161      	movs	r1, #97	; 0x61
 80059a6:	e7f4      	b.n	8005992 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80059a8:	0802d1ec 	.word	0x0802d1ec
 80059ac:	0802e158 	.word	0x0802e158
 80059b0:	0802e320 	.word	0x0802e320
 80059b4:	0802b818 	.word	0x0802b818
 80059b8:	0802de8c 	.word	0x0802de8c
 80059bc:	0802d1d4 	.word	0x0802d1d4
 80059c0:	080057bd 	.word	0x080057bd
 80059c4:	20012ed4 	.word	0x20012ed4
 80059c8:	0802b658 	.word	0x0802b658
 80059cc:	0802b75a 	.word	0x0802b75a
 80059d0:	0802b6d5 	.word	0x0802b6d5
 80059d4:	20012ed8 	.word	0x20012ed8
 80059d8:	0802b71c 	.word	0x0802b71c
        return texts->getText(typedTextId);
 80059dc:	4b95      	ldr	r3, [pc, #596]	; (8005c34 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80059de:	211b      	movs	r1, #27
 80059e0:	6818      	ldr	r0, [r3, #0]
 80059e2:	f002 fb45 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 80059e6:	4a94      	ldr	r2, [pc, #592]	; (8005c38 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80059e8:	4603      	mov	r3, r0
 80059ea:	2104      	movs	r1, #4
 80059ec:	4650      	mov	r0, sl
 80059ee:	f012 fc1f 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80059f2:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80059f6:	4648      	mov	r0, r9
 80059f8:	f00c f9a6 	bl	8011d48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80059fc:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005c3c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005a00:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005a04:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005a06:	a90a      	add	r1, sp, #40	; 0x28
 8005a08:	4648      	mov	r0, r9
 8005a0a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005a0e:	f00c f9bb 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a12:	4649      	mov	r1, r9
 8005a14:	4630      	mov	r0, r6
 8005a16:	f00a f803 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005a1a:	223c      	movs	r2, #60	; 0x3c
 8005a1c:	ee18 0a90 	vmov	r0, s17
 8005a20:	213d      	movs	r1, #61	; 0x3d
 8005a22:	f7fc fe22 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005a26:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005a2a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005a2e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005a32:	4658      	mov	r0, fp
        linespace = space;
 8005a34:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005a38:	f00b ff0c 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a3c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005a40:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005a44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005a48:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005a4a:	ee18 0a90 	vmov	r0, s17
 8005a4e:	a90a      	add	r1, sp, #40	; 0x28
 8005a50:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005a54:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005a58:	f00c f996 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a5c:	ee18 1a90 	vmov	r1, s17
 8005a60:	4630      	mov	r0, r6
 8005a62:	f009 ffdd 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005a66:	230a      	movs	r3, #10
 8005a68:	9300      	str	r3, [sp, #0]
 8005a6a:	2232      	movs	r2, #50	; 0x32
 8005a6c:	23f0      	movs	r3, #240	; 0xf0
 8005a6e:	4629      	mov	r1, r5
 8005a70:	4638      	mov	r0, r7
 8005a72:	f7fc fe07 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a76:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005a7a:	22a0      	movs	r2, #160	; 0xa0
 8005a7c:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005a80:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005a84:	9b03      	ldr	r3, [sp, #12]
 8005a86:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005a8a:	4611      	mov	r1, r2
 8005a8c:	4638      	mov	r0, r7
 8005a8e:	f00b fd35 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005a92:	22a0      	movs	r2, #160	; 0xa0
 8005a94:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005a98:	4638      	mov	r0, r7
 8005a9a:	f00b fd3a 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005a9e:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005aa2:	2b20      	cmp	r3, #32
 8005aa4:	d005      	beq.n	8005ab2 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005aa6:	2320      	movs	r3, #32
 8005aa8:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005aac:	4638      	mov	r0, r7
 8005aae:	f00b fc2f 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005ab2:	4638      	mov	r0, r7
 8005ab4:	2101      	movs	r1, #1
 8005ab6:	f00b fd37 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005aba:	4639      	mov	r1, r7
 8005abc:	4630      	mov	r0, r6
 8005abe:	f009 ffaf 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005ac2:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005ac6:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005ac8:	2223      	movs	r2, #35	; 0x23
 8005aca:	4640      	mov	r0, r8
        linespace = space;
 8005acc:	f04f 0a00 	mov.w	sl, #0
 8005ad0:	2145      	movs	r1, #69	; 0x45
 8005ad2:	f7fc fdca 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005ad6:	4641      	mov	r1, r8
 8005ad8:	4638      	mov	r0, r7
        color = newColor;
 8005ada:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005ade:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005ae2:	f00b feb7 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ae6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005aea:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005aee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005af2:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005c3c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005af6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005afa:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005afc:	a90a      	add	r1, sp, #40	; 0x28
 8005afe:	4640      	mov	r0, r8
 8005b00:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005b04:	f00c f940 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b08:	4641      	mov	r1, r8
 8005b0a:	4630      	mov	r0, r6
 8005b0c:	f009 ff88 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005b10:	ee18 0a10 	vmov	r0, s16
 8005b14:	220c      	movs	r2, #12
 8005b16:	2136      	movs	r1, #54	; 0x36
 8005b18:	f7fc fda7 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8005b1c:	ee18 1a10 	vmov	r1, s16
 8005b20:	4638      	mov	r0, r7
        color = newColor;
 8005b22:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005b26:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005b2a:	f00b fe93 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005b2e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005b32:	ee18 3a10 	vmov	r3, s16
 8005b36:	333c      	adds	r3, #60	; 0x3c
 8005b38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005b3c:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005b3e:	ee18 0a10 	vmov	r0, s16
 8005b42:	a90a      	add	r1, sp, #40	; 0x28
 8005b44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005b48:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005b4c:	f00c f91c 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b50:	ee18 1a10 	vmov	r1, s16
 8005b54:	4630      	mov	r0, r6
 8005b56:	f009 ff63 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005b5a:	ee19 0a10 	vmov	r0, s18
 8005b5e:	22f0      	movs	r2, #240	; 0xf0
 8005b60:	2121      	movs	r1, #33	; 0x21
 8005b62:	f7fc fd82 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8005b66:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005b6a:	aa0a      	add	r2, sp, #40	; 0x28
 8005b6c:	f04f 0802 	mov.w	r8, #2
 8005b70:	a909      	add	r1, sp, #36	; 0x24
 8005b72:	ee19 0a10 	vmov	r0, s18
 8005b76:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005b7a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005b7e:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005b82:	f00c fae6 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005b86:	234d      	movs	r3, #77	; 0x4d
 8005b88:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005b8c:	3710      	adds	r7, #16
        updateTextPosition();
 8005b8e:	ee19 0a10 	vmov	r0, s18
 8005b92:	f7fc fdbf 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005b96:	ee19 1a10 	vmov	r1, s18
 8005b9a:	4630      	mov	r0, r6
        colorPressed = col;
 8005b9c:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005ba0:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005ba4:	f009 ff3c 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005ba8:	ee19 0a90 	vmov	r0, s19
 8005bac:	22aa      	movs	r2, #170	; 0xaa
 8005bae:	2121      	movs	r1, #33	; 0x21
 8005bb0:	f7fc fd5b 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005bb4:	aa0a      	add	r2, sp, #40	; 0x28
 8005bb6:	a909      	add	r1, sp, #36	; 0x24
 8005bb8:	ee19 0a90 	vmov	r0, s19
 8005bbc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005bc0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005bc4:	f00c fac5 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005bc8:	234c      	movs	r3, #76	; 0x4c
 8005bca:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005bce:	ee19 0a90 	vmov	r0, s19
 8005bd2:	f7fc fd9f 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005bd6:	ee19 1a90 	vmov	r1, s19
 8005bda:	4630      	mov	r0, r6
        colorPressed = col;
 8005bdc:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005be0:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005be4:	f009 ff1c 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005be8:	ee1a 0a10 	vmov	r0, s20
 8005bec:	2264      	movs	r2, #100	; 0x64
 8005bee:	2121      	movs	r1, #33	; 0x21
 8005bf0:	f7fc fd3b 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005bf4:	aa0a      	add	r2, sp, #40	; 0x28
 8005bf6:	a909      	add	r1, sp, #36	; 0x24
 8005bf8:	ee1a 0a10 	vmov	r0, s20
 8005bfc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005c00:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005c04:	f00c faa5 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005c08:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005c0a:	ee1a 0a10 	vmov	r0, s20
 8005c0e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005c12:	f7fc fd7f 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005c16:	4630      	mov	r0, r6
        colorPressed = col;
 8005c18:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005c1c:	ee1a 1a10 	vmov	r1, s20
 8005c20:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005c24:	f009 fefc 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005c28:	4620      	mov	r0, r4
 8005c2a:	b00d      	add	sp, #52	; 0x34
 8005c2c:	ecbd 8b06 	vpop	{d8-d10}
 8005c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c34:	20012ee0 	.word	0x20012ee0
 8005c38:	0802b792 	.word	0x0802b792
 8005c3c:	0802b808 	.word	0x0802b808

08005c40 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005c40:	4770      	bx	lr

08005c42 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005c42:	4770      	bx	lr

08005c44 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005c44:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005c46:	68c2      	ldr	r2, [r0, #12]
 8005c48:	6844      	ldr	r4, [r0, #4]
 8005c4a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005c4c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005c4e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005c52:	07d2      	lsls	r2, r2, #31
 8005c54:	bf48      	it	mi
 8005c56:	5962      	ldrmi	r2, [r4, r5]
 8005c58:	689b      	ldr	r3, [r3, #8]
    }
 8005c5a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005c5c:	bf48      	it	mi
 8005c5e:	58d3      	ldrmi	r3, [r2, r3]
 8005c60:	4718      	bx	r3

08005c62 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005c62:	6843      	ldr	r3, [r0, #4]
 8005c64:	b12b      	cbz	r3, 8005c72 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005c66:	6883      	ldr	r3, [r0, #8]
 8005c68:	b92b      	cbnz	r3, 8005c76 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005c6a:	68c0      	ldr	r0, [r0, #12]
 8005c6c:	f000 0001 	and.w	r0, r0, #1
 8005c70:	4770      	bx	lr
 8005c72:	4618      	mov	r0, r3
 8005c74:	4770      	bx	lr
 8005c76:	2001      	movs	r0, #1
    }
 8005c78:	4770      	bx	lr

08005c7a <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005c7a:	b510      	push	{r4, lr}
 8005c7c:	2110      	movs	r1, #16
 8005c7e:	4604      	mov	r4, r0
 8005c80:	f023 f9dd 	bl	802903e <_ZdlPvj>
 8005c84:	4620      	mov	r0, r4
 8005c86:	bd10      	pop	{r4, pc}

08005c88 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005c88:	b510      	push	{r4, lr}
 8005c8a:	4b03      	ldr	r3, [pc, #12]	; (8005c98 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005c8c:	6003      	str	r3, [r0, #0]
 8005c8e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c90:	f00d fc5c 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c94:	4620      	mov	r0, r4
 8005c96:	bd10      	pop	{r4, pc}
 8005c98:	0802d238 	.word	0x0802d238

08005c9c <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005c9c:	b507      	push	{r0, r1, r2, lr}
 8005c9e:	4b07      	ldr	r3, [pc, #28]	; (8005cbc <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005ca0:	6003      	str	r3, [r0, #0]
 8005ca2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ca4:	f00d fc52 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ca8:	9801      	ldr	r0, [sp, #4]
 8005caa:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005cae:	f023 f9c6 	bl	802903e <_ZdlPvj>
 8005cb2:	9801      	ldr	r0, [sp, #4]
 8005cb4:	b003      	add	sp, #12
 8005cb6:	f85d fb04 	ldr.w	pc, [sp], #4
 8005cba:	bf00      	nop
 8005cbc:	0802d238 	.word	0x0802d238

08005cc0 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005cc0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005cc2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005cc6:	4299      	cmp	r1, r3
{
 8005cc8:	4604      	mov	r4, r0
 8005cca:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005ccc:	d103      	bne.n	8005cd6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005cce:	f00f f93f 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005cd2:	f7fd fdf1 	bl	80038b8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005cd6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005cda:	429d      	cmp	r5, r3
 8005cdc:	d103      	bne.n	8005ce6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005cde:	f00f f937 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005ce2:	f7fd fe59 	bl	8003998 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005ce6:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005cea:	42a5      	cmp	r5, r4
 8005cec:	d105      	bne.n	8005cfa <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005cee:	f00f f92f 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005cf2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005cf6:	f7fd be3f 	b.w	8003978 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005cfa:	bd38      	pop	{r3, r4, r5, pc}

08005cfc <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d00:	ed2d 8b06 	vpush	{d8-d10}
 8005d04:	4604      	mov	r4, r0
 8005d06:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005d08:	46a3      	mov	fp, r4
 8005d0a:	2500      	movs	r5, #0
 8005d0c:	f010 fda0 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 8005d10:	4b66      	ldr	r3, [pc, #408]	; (8005eac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005d12:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005d14:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005d18:	2226      	movs	r2, #38	; 0x26
 8005d1a:	4629      	mov	r1, r5
 8005d1c:	4658      	mov	r0, fp
 8005d1e:	f024 f9a6 	bl	802a06e <memset>
 8005d22:	4658      	mov	r0, fp
 8005d24:	f7fc fcc2 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8005d28:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005d2c:	26ff      	movs	r6, #255	; 0xff
 8005d2e:	4b60      	ldr	r3, [pc, #384]	; (8005eb0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005d30:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005d32:	2226      	movs	r2, #38	; 0x26
 8005d34:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005d38:	4629      	mov	r1, r5
 8005d3a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005d3e:	4650      	mov	r0, sl
 8005d40:	66a5      	str	r5, [r4, #104]	; 0x68
 8005d42:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005d46:	f024 f992 	bl	802a06e <memset>
 8005d4a:	4650      	mov	r0, sl
 8005d4c:	f7fc fcae 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8005d50:	4b58      	ldr	r3, [pc, #352]	; (8005eb4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005d52:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005d54:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005d58:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005d5c:	a90a      	add	r1, sp, #40	; 0x28
 8005d5e:	4650      	mov	r0, sl
 8005d60:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005d64:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005d68:	f00c fbe9 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005d6c:	4648      	mov	r0, r9
 8005d6e:	f7fc fcaf 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005d72:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005d76:	4b50      	ldr	r3, [pc, #320]	; (8005eb8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005d78:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005d7c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005d80:	4638      	mov	r0, r7
 8005d82:	f00b faa5 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 8005d86:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005d8a:	4618      	mov	r0, r3
 8005d8c:	9303      	str	r3, [sp, #12]
 8005d8e:	f7fb f95b 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005d92:	4b4a      	ldr	r3, [pc, #296]	; (8005ebc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005d94:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005d98:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005d9c:	3324      	adds	r3, #36	; 0x24
 8005d9e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005da2:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005da6:	4640      	mov	r0, r8
 8005da8:	f7fc fc92 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005dac:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005db0:	4618      	mov	r0, r3
 8005db2:	ee08 3a10 	vmov	s16, r3
 8005db6:	f7fc fc8b 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005dba:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005dbe:	4618      	mov	r0, r3
 8005dc0:	ee08 3a90 	vmov	s17, r3
 8005dc4:	f7fc fc84 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005dc8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005dcc:	4618      	mov	r0, r3
 8005dce:	ee09 3a10 	vmov	s18, r3
 8005dd2:	f00c fcf5 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005dd6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005dda:	4618      	mov	r0, r3
 8005ddc:	ee09 3a90 	vmov	s19, r3
 8005de0:	f00c fcee 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005de4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005de8:	4618      	mov	r0, r3
 8005dea:	ee0a 3a10 	vmov	s20, r3
 8005dee:	f00c fce7 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005df2:	4a33      	ldr	r2, [pc, #204]	; (8005ec0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005df4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005df8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005dfc:	4a31      	ldr	r2, [pc, #196]	; (8005ec4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005dfe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005e02:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005e06:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005e0a:	f00d fb95 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005e0e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005e12:	462a      	mov	r2, r5
 8005e14:	4658      	mov	r0, fp
 8005e16:	9300      	str	r3, [sp, #0]
 8005e18:	4629      	mov	r1, r5
 8005e1a:	23f0      	movs	r3, #240	; 0xf0
 8005e1c:	f7fc fc32 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e20:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005e22:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005e26:	66a3      	str	r3, [r4, #104]	; 0x68
 8005e28:	4659      	mov	r1, fp
 8005e2a:	4630      	mov	r0, r6
 8005e2c:	f009 fdf8 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005e30:	462a      	mov	r2, r5
 8005e32:	4650      	mov	r0, sl
 8005e34:	4629      	mov	r1, r5
 8005e36:	f7fc fc18 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8005e3a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005e3c:	4650      	mov	r0, sl
 8005e3e:	a90a      	add	r1, sp, #40	; 0x28
 8005e40:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005e44:	f00c fb7b 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005e48:	4651      	mov	r1, sl
 8005e4a:	4630      	mov	r0, r6
 8005e4c:	f009 fde8 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005e50:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005e54:	2156      	movs	r1, #86	; 0x56
 8005e56:	4648      	mov	r0, r9
 8005e58:	f7fc fc07 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8005e5c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005e60:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005e64:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005e68:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005e6c:	4650      	mov	r0, sl
 8005e6e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005e72:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005e76:	4649      	mov	r1, r9
 8005e78:	4798      	blx	r3
 8005e7a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005e7e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005e82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e86:	4b10      	ldr	r3, [pc, #64]	; (8005ec8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005e88:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005e8a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005e8e:	b92b      	cbnz	r3, 8005e9c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005e90:	4b0e      	ldr	r3, [pc, #56]	; (8005ecc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005e92:	4a0f      	ldr	r2, [pc, #60]	; (8005ed0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005e94:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e96:	480f      	ldr	r0, [pc, #60]	; (8005ed4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005e98:	f023 fee4 	bl	8029c64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005e9c:	4b0e      	ldr	r3, [pc, #56]	; (8005ed8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e9e:	881b      	ldrh	r3, [r3, #0]
 8005ea0:	2b16      	cmp	r3, #22
 8005ea2:	d81d      	bhi.n	8005ee0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005ea4:	4b0d      	ldr	r3, [pc, #52]	; (8005edc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005ea6:	4a0a      	ldr	r2, [pc, #40]	; (8005ed0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005ea8:	2161      	movs	r1, #97	; 0x61
 8005eaa:	e7f4      	b.n	8005e96 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005eac:	0802d238 	.word	0x0802d238
 8005eb0:	0802e158 	.word	0x0802e158
 8005eb4:	0802e320 	.word	0x0802e320
 8005eb8:	0802b818 	.word	0x0802b818
 8005ebc:	0802de8c 	.word	0x0802de8c
 8005ec0:	0802d220 	.word	0x0802d220
 8005ec4:	08005cc1 	.word	0x08005cc1
 8005ec8:	20012ed4 	.word	0x20012ed4
 8005ecc:	0802b658 	.word	0x0802b658
 8005ed0:	0802b75a 	.word	0x0802b75a
 8005ed4:	0802b6d5 	.word	0x0802b6d5
 8005ed8:	20012ed8 	.word	0x20012ed8
 8005edc:	0802b71c 	.word	0x0802b71c
        return texts->getText(typedTextId);
 8005ee0:	4b93      	ldr	r3, [pc, #588]	; (8006130 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005ee2:	2116      	movs	r1, #22
 8005ee4:	6818      	ldr	r0, [r3, #0]
 8005ee6:	f002 f8c3 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8005eea:	4a92      	ldr	r2, [pc, #584]	; (8006134 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005eec:	4603      	mov	r3, r0
 8005eee:	2104      	movs	r1, #4
 8005ef0:	4650      	mov	r0, sl
 8005ef2:	f012 f99d 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005ef6:	4648      	mov	r0, r9
        wc1 = value;
 8005ef8:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005efc:	f00b ff24 	bl	8011d48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005f00:	4b8d      	ldr	r3, [pc, #564]	; (8006138 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005f02:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8005f04:	a90a      	add	r1, sp, #40	; 0x28
 8005f06:	2317      	movs	r3, #23
 8005f08:	4648      	mov	r0, r9
 8005f0a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005f0e:	f00b ff3b 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f12:	4649      	mov	r1, r9
 8005f14:	4630      	mov	r0, r6
 8005f16:	f009 fd83 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005f1a:	230a      	movs	r3, #10
 8005f1c:	9300      	str	r3, [sp, #0]
 8005f1e:	2232      	movs	r2, #50	; 0x32
 8005f20:	23f0      	movs	r3, #240	; 0xf0
 8005f22:	4629      	mov	r1, r5
 8005f24:	4638      	mov	r0, r7
 8005f26:	f7fc fbad 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f2a:	9b03      	ldr	r3, [sp, #12]
 8005f2c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005f30:	22a0      	movs	r2, #160	; 0xa0
 8005f32:	4611      	mov	r1, r2
 8005f34:	4638      	mov	r0, r7
 8005f36:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005f3a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005f3e:	f00b fadd 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005f42:	22a0      	movs	r2, #160	; 0xa0
 8005f44:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005f48:	4638      	mov	r0, r7
 8005f4a:	f00b fae2 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005f4e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005f52:	2b20      	cmp	r3, #32
 8005f54:	d005      	beq.n	8005f62 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8005f56:	2320      	movs	r3, #32
 8005f58:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005f5c:	4638      	mov	r0, r7
 8005f5e:	f00b f9d7 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005f62:	4638      	mov	r0, r7
 8005f64:	2101      	movs	r1, #1
 8005f66:	f00b fadf 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005f6a:	4639      	mov	r1, r7
 8005f6c:	4630      	mov	r0, r6
 8005f6e:	ad04      	add	r5, sp, #16
        color = newColor;
 8005f70:	f04f 37ff 	mov.w	r7, #4294967295
 8005f74:	f009 fd54 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005f78:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005f7c:	2223      	movs	r2, #35	; 0x23
 8005f7e:	4640      	mov	r0, r8
 8005f80:	2145      	movs	r1, #69	; 0x45
 8005f82:	f7fc fb72 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005f86:	4641      	mov	r1, r8
 8005f88:	4628      	mov	r0, r5
        color = newColor;
 8005f8a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005f8e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005f92:	f00b fc5f 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f96:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f9a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005f9e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005fa2:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 8005fa6:	f8df 9190 	ldr.w	r9, [pc, #400]	; 8006138 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8005faa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005fae:	a90a      	add	r1, sp, #40	; 0x28
 8005fb0:	4640      	mov	r0, r8
 8005fb2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005fb6:	f00b fee7 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fba:	4641      	mov	r1, r8
 8005fbc:	4630      	mov	r0, r6
 8005fbe:	f009 fd2f 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005fc2:	ee18 0a10 	vmov	r0, s16
 8005fc6:	220c      	movs	r2, #12
 8005fc8:	2136      	movs	r1, #54	; 0x36
 8005fca:	f7fc fb4e 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8005fce:	ee18 1a10 	vmov	r1, s16
 8005fd2:	4628      	mov	r0, r5
        color = newColor;
 8005fd4:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005fd8:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005fdc:	f00b fc3a 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fe0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fe4:	ee18 3a10 	vmov	r3, s16
 8005fe8:	445b      	add	r3, fp
 8005fea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005fee:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8005ff0:	ee18 0a10 	vmov	r0, s16
 8005ff4:	a90a      	add	r1, sp, #40	; 0x28
 8005ff6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ffa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005ffe:	f00b fec3 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006002:	ee18 1a10 	vmov	r1, s16
 8006006:	4630      	mov	r0, r6
 8006008:	f009 fd0a 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 800600c:	465a      	mov	r2, fp
 800600e:	ee18 0a90 	vmov	r0, s17
 8006012:	2121      	movs	r1, #33	; 0x21
 8006014:	f7fc fb29 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006018:	ee18 1a90 	vmov	r1, s17
 800601c:	4628      	mov	r0, r5
        color = newColor;
 800601e:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006022:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006026:	f00b fc15 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800602a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800602e:	ee18 3a90 	vmov	r3, s17
 8006032:	445b      	add	r3, fp
 8006034:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006038:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 800603a:	ee18 0a90 	vmov	r0, s17
 800603e:	a90a      	add	r1, sp, #40	; 0x28
 8006040:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006044:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006048:	f00b fe9e 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800604c:	ee18 1a90 	vmov	r1, s17
 8006050:	4630      	mov	r0, r6
 8006052:	f009 fce5 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006056:	ee19 0a10 	vmov	r0, s18
 800605a:	22f0      	movs	r2, #240	; 0xf0
 800605c:	2121      	movs	r1, #33	; 0x21
 800605e:	f7fc fb04 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006062:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006066:	aa0a      	add	r2, sp, #40	; 0x28
 8006068:	f04f 0802 	mov.w	r8, #2
 800606c:	a909      	add	r1, sp, #36	; 0x24
 800606e:	ee19 0a10 	vmov	r0, s18
 8006072:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006076:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800607a:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800607e:	f00c f868 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006082:	233a      	movs	r3, #58	; 0x3a
 8006084:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006088:	3510      	adds	r5, #16
        updateTextPosition();
 800608a:	ee19 0a10 	vmov	r0, s18
 800608e:	f7fc fb41 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006092:	ee19 1a10 	vmov	r1, s18
 8006096:	4630      	mov	r0, r6
        colorPressed = col;
 8006098:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800609c:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80060a0:	f009 fcbe 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80060a4:	ee19 0a90 	vmov	r0, s19
 80060a8:	22aa      	movs	r2, #170	; 0xaa
 80060aa:	2121      	movs	r1, #33	; 0x21
 80060ac:	f7fc fadd 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80060b0:	aa0a      	add	r2, sp, #40	; 0x28
 80060b2:	a909      	add	r1, sp, #36	; 0x24
 80060b4:	ee19 0a90 	vmov	r0, s19
 80060b8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80060bc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80060c0:	f00c f847 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80060c4:	2339      	movs	r3, #57	; 0x39
 80060c6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80060ca:	ee19 0a90 	vmov	r0, s19
 80060ce:	f7fc fb21 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80060d2:	ee19 1a90 	vmov	r1, s19
 80060d6:	4630      	mov	r0, r6
        colorPressed = col;
 80060d8:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80060dc:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80060e0:	f009 fc9e 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80060e4:	ee1a 0a10 	vmov	r0, s20
 80060e8:	2264      	movs	r2, #100	; 0x64
 80060ea:	2121      	movs	r1, #33	; 0x21
 80060ec:	f7fc fabd 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80060f0:	aa0a      	add	r2, sp, #40	; 0x28
 80060f2:	a909      	add	r1, sp, #36	; 0x24
 80060f4:	ee1a 0a10 	vmov	r0, s20
 80060f8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80060fc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006100:	f00c f827 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006104:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8006106:	ee1a 0a10 	vmov	r0, s20
 800610a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800610e:	f7fc fb01 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006112:	4630      	mov	r0, r6
        colorPressed = col;
 8006114:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006118:	ee1a 1a10 	vmov	r1, s20
 800611c:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006120:	f009 fc7e 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006124:	4620      	mov	r0, r4
 8006126:	b00d      	add	sp, #52	; 0x34
 8006128:	ecbd 8b06 	vpop	{d8-d10}
 800612c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006130:	20012ee0 	.word	0x20012ee0
 8006134:	0802b792 	.word	0x0802b792
 8006138:	0802b808 	.word	0x0802b808

0800613c <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800613c:	4770      	bx	lr

0800613e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800613e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006140:	68c2      	ldr	r2, [r0, #12]
 8006142:	6844      	ldr	r4, [r0, #4]
 8006144:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006146:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006148:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800614c:	07d2      	lsls	r2, r2, #31
 800614e:	bf48      	it	mi
 8006150:	5962      	ldrmi	r2, [r4, r5]
 8006152:	689b      	ldr	r3, [r3, #8]
    }
 8006154:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006156:	bf48      	it	mi
 8006158:	58d3      	ldrmi	r3, [r2, r3]
 800615a:	4718      	bx	r3

0800615c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800615c:	6843      	ldr	r3, [r0, #4]
 800615e:	b12b      	cbz	r3, 800616c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006160:	6883      	ldr	r3, [r0, #8]
 8006162:	b92b      	cbnz	r3, 8006170 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006164:	68c0      	ldr	r0, [r0, #12]
 8006166:	f000 0001 	and.w	r0, r0, #1
 800616a:	4770      	bx	lr
 800616c:	4618      	mov	r0, r3
 800616e:	4770      	bx	lr
 8006170:	2001      	movs	r0, #1
    }
 8006172:	4770      	bx	lr

08006174 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006174:	b510      	push	{r4, lr}
 8006176:	2110      	movs	r1, #16
 8006178:	4604      	mov	r4, r0
 800617a:	f022 ff60 	bl	802903e <_ZdlPvj>
 800617e:	4620      	mov	r0, r4
 8006180:	bd10      	pop	{r4, pc}

08006182 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006182:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006186:	f002 b8bb 	b.w	8008300 <_ZN17Gauge_with_Values10initializeEv>

0800618a <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800618a:	3098      	adds	r0, #152	; 0x98
 800618c:	4288      	cmp	r0, r1
{
 800618e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006190:	d105      	bne.n	800619e <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006192:	f00e fedd 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006196:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800619a:	f7fd bbdd 	b.w	8003958 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800619e:	bd08      	pop	{r3, pc}

080061a0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80061a0:	b510      	push	{r4, lr}
 80061a2:	4b07      	ldr	r3, [pc, #28]	; (80061c0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 80061a4:	6003      	str	r3, [r0, #0]
 80061a6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80061a8:	f00d f9d0 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 80061ac:	4b05      	ldr	r3, [pc, #20]	; (80061c4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 80061ae:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80061b2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80061b6:	f7fe fe25 	bl	8004e04 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80061ba:	4620      	mov	r0, r4
 80061bc:	bd10      	pop	{r4, pc}
 80061be:	bf00      	nop
 80061c0:	0802d284 	.word	0x0802d284
 80061c4:	0802d7dc 	.word	0x0802d7dc

080061c8 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80061c8:	b510      	push	{r4, lr}
 80061ca:	4604      	mov	r4, r0
}
 80061cc:	f7ff ffe8 	bl	80061a0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80061d0:	4620      	mov	r0, r4
 80061d2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80061d6:	f022 ff32 	bl	802903e <_ZdlPvj>
 80061da:	4620      	mov	r0, r4
 80061dc:	bd10      	pop	{r4, pc}
	...

080061e0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80061e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061e4:	ed2d 8b04 	vpush	{d8-d9}
 80061e8:	4604      	mov	r4, r0
 80061ea:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80061ec:	46a1      	mov	r9, r4
 80061ee:	2500      	movs	r5, #0
 80061f0:	f010 fb2e 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 80061f4:	4bac      	ldr	r3, [pc, #688]	; (80064a8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 80061f6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80061f8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80061fc:	2226      	movs	r2, #38	; 0x26
 80061fe:	4629      	mov	r1, r5
 8006200:	4648      	mov	r0, r9
 8006202:	f023 ff34 	bl	802a06e <memset>
 8006206:	4648      	mov	r0, r9
 8006208:	f7fc fa50 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 800620c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006210:	26ff      	movs	r6, #255	; 0xff
 8006212:	4ba6      	ldr	r3, [pc, #664]	; (80064ac <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8006214:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006216:	2226      	movs	r2, #38	; 0x26
 8006218:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800621c:	4629      	mov	r1, r5
 800621e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006222:	4640      	mov	r0, r8
 8006224:	66a5      	str	r5, [r4, #104]	; 0x68
 8006226:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800622a:	f023 ff20 	bl	802a06e <memset>
 800622e:	4640      	mov	r0, r8
 8006230:	f7fc fa3c 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8006234:	4b9e      	ldr	r3, [pc, #632]	; (80064b0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8006236:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006238:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800623c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006240:	a90a      	add	r1, sp, #40	; 0x28
 8006242:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006244:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006248:	f00c f979 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800624c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006250:	4618      	mov	r0, r3
 8006252:	ee08 3a10 	vmov	s16, r3
 8006256:	f00c fab3 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800625a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800625e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006262:	4618      	mov	r0, r3
 8006264:	ee08 3a90 	vmov	s17, r3
 8006268:	f7fc fa32 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800626c:	4638      	mov	r0, r7
 800626e:	f00b f82f 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 8006272:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006276:	4618      	mov	r0, r3
 8006278:	9303      	str	r3, [sp, #12]
 800627a:	f7fa fee5 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800627e:	4b8d      	ldr	r3, [pc, #564]	; (80064b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8006280:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006284:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006288:	3324      	adds	r3, #36	; 0x24
 800628a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800628e:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006292:	4658      	mov	r0, fp
 8006294:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006298:	f7fc fa1a 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800629c:	4650      	mov	r0, sl
 800629e:	f7fc fa17 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 80062a2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80062a6:	4618      	mov	r0, r3
 80062a8:	ee09 3a10 	vmov	s18, r3
 80062ac:	f002 f81e 	bl	80082ec <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80062b0:	4a81      	ldr	r2, [pc, #516]	; (80064b8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80062b2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80062b6:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80062ba:	4a80      	ldr	r2, [pc, #512]	; (80064bc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80062bc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80062c0:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80062c4:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80062c8:	f00d f936 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80062cc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80062d0:	462a      	mov	r2, r5
 80062d2:	4648      	mov	r0, r9
 80062d4:	9300      	str	r3, [sp, #0]
 80062d6:	4629      	mov	r1, r5
 80062d8:	23f0      	movs	r3, #240	; 0xf0
 80062da:	f7fc f9d3 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 80062de:	1d26      	adds	r6, r4, #4
        color = newColor;
 80062e0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80062e4:	66a3      	str	r3, [r4, #104]	; 0x68
 80062e6:	4649      	mov	r1, r9
 80062e8:	4630      	mov	r0, r6
 80062ea:	f009 fb99 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80062ee:	462a      	mov	r2, r5
 80062f0:	4640      	mov	r0, r8
 80062f2:	4629      	mov	r1, r5
 80062f4:	f7fc f9b9 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80062f8:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80062fa:	4640      	mov	r0, r8
 80062fc:	a90a      	add	r1, sp, #40	; 0x28
 80062fe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006302:	f00c f91c 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006306:	4641      	mov	r1, r8
 8006308:	4630      	mov	r0, r6
 800630a:	f009 fb89 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800630e:	ee18 0a10 	vmov	r0, s16
 8006312:	f240 1201 	movw	r2, #257	; 0x101
 8006316:	2121      	movs	r1, #33	; 0x21
 8006318:	f7fc f9a7 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 800631c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800631e:	aa0a      	add	r2, sp, #40	; 0x28
 8006320:	a909      	add	r1, sp, #36	; 0x24
 8006322:	ee18 0a10 	vmov	r0, s16
 8006326:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800632a:	2302      	movs	r3, #2
 800632c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006330:	f00b ff0f 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006334:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 8006336:	ee18 0a10 	vmov	r0, s16
 800633a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800633e:	f7fc f9e9 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006342:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006346:	3314      	adds	r3, #20
        color = col;
 8006348:	f04f 39ff 	mov.w	r9, #4294967295
 800634c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006350:	ee18 1a10 	vmov	r1, s16
 8006354:	4630      	mov	r0, r6
        colorPressed = col;
 8006356:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800635a:	f009 fb61 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800635e:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006362:	223c      	movs	r2, #60	; 0x3c
 8006364:	ee18 0a90 	vmov	r0, s17
 8006368:	2117      	movs	r1, #23
 800636a:	f7fc f97e 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 800636e:	ee18 1a90 	vmov	r1, s17
 8006372:	4640      	mov	r0, r8
        color = newColor;
 8006374:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006378:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800637c:	f00b fa6a 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006380:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006384:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006388:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800638c:	4b4c      	ldr	r3, [pc, #304]	; (80064c0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 800638e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006390:	ee18 0a90 	vmov	r0, s17
 8006394:	2322      	movs	r3, #34	; 0x22
 8006396:	a90a      	add	r1, sp, #40	; 0x28
 8006398:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800639c:	f00b fcf4 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80063a0:	ee18 1a90 	vmov	r1, s17
 80063a4:	4630      	mov	r0, r6
 80063a6:	f009 fb3b 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80063aa:	230a      	movs	r3, #10
 80063ac:	9300      	str	r3, [sp, #0]
 80063ae:	2232      	movs	r2, #50	; 0x32
 80063b0:	23f0      	movs	r3, #240	; 0xf0
 80063b2:	4629      	mov	r1, r5
 80063b4:	4638      	mov	r0, r7
 80063b6:	f7fc f965 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063ba:	9b03      	ldr	r3, [sp, #12]
 80063bc:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80063c0:	22a0      	movs	r2, #160	; 0xa0
 80063c2:	4611      	mov	r1, r2
 80063c4:	4638      	mov	r0, r7
 80063c6:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80063ca:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80063ce:	f00b f895 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80063d2:	22a0      	movs	r2, #160	; 0xa0
 80063d4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80063d8:	4638      	mov	r0, r7
 80063da:	f00b f89a 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80063de:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80063e2:	2b20      	cmp	r3, #32
 80063e4:	d005      	beq.n	80063f2 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80063e6:	2320      	movs	r3, #32
 80063e8:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80063ec:	4638      	mov	r0, r7
 80063ee:	f00a ff8f 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80063f2:	4638      	mov	r0, r7
 80063f4:	2101      	movs	r1, #1
 80063f6:	f00b f897 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80063fa:	4639      	mov	r1, r7
 80063fc:	4630      	mov	r0, r6
 80063fe:	f009 fb0f 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006402:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006404:	2223      	movs	r2, #35	; 0x23
 8006406:	4658      	mov	r0, fp
        color = newColor;
 8006408:	f04f 39ff 	mov.w	r9, #4294967295
 800640c:	2145      	movs	r1, #69	; 0x45
 800640e:	f7fc f92c 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006412:	4659      	mov	r1, fp
 8006414:	4640      	mov	r0, r8
        color = newColor;
 8006416:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800641a:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800641e:	f00b fa19 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006422:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006426:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800642a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800642e:	4f24      	ldr	r7, [pc, #144]	; (80064c0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006430:	970a      	str	r7, [sp, #40]	; 0x28
 8006432:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006434:	a90a      	add	r1, sp, #40	; 0x28
 8006436:	4658      	mov	r0, fp
 8006438:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800643c:	f00b fca4 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006440:	4659      	mov	r1, fp
 8006442:	4630      	mov	r0, r6
 8006444:	f009 faec 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006448:	220c      	movs	r2, #12
 800644a:	4650      	mov	r0, sl
 800644c:	2136      	movs	r1, #54	; 0x36
 800644e:	f7fc f90c 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006452:	4651      	mov	r1, sl
 8006454:	4640      	mov	r0, r8
        color = newColor;
 8006456:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800645a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800645e:	f00b f9f9 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006462:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006466:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800646a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800646e:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006470:	a90a      	add	r1, sp, #40	; 0x28
 8006472:	4650      	mov	r0, sl
 8006474:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006478:	970a      	str	r7, [sp, #40]	; 0x28
 800647a:	f00b fc85 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800647e:	4651      	mov	r1, sl
 8006480:	4630      	mov	r0, r6
 8006482:	f009 facd 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006486:	ee19 0a10 	vmov	r0, s18
 800648a:	224e      	movs	r2, #78	; 0x4e
 800648c:	4629      	mov	r1, r5
 800648e:	f7fc f8ec 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006492:	4630      	mov	r0, r6
 8006494:	ee19 1a10 	vmov	r1, s18
 8006498:	f009 fac2 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800649c:	4620      	mov	r0, r4
 800649e:	b00d      	add	sp, #52	; 0x34
 80064a0:	ecbd 8b04 	vpop	{d8-d9}
 80064a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064a8:	0802d284 	.word	0x0802d284
 80064ac:	0802e158 	.word	0x0802e158
 80064b0:	0802e320 	.word	0x0802e320
 80064b4:	0802de8c 	.word	0x0802de8c
 80064b8:	0802d26c 	.word	0x0802d26c
 80064bc:	0800618b 	.word	0x0800618b
 80064c0:	0802b808 	.word	0x0802b808

080064c4 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80064c4:	4770      	bx	lr

080064c6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80064c6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80064c8:	68c2      	ldr	r2, [r0, #12]
 80064ca:	6844      	ldr	r4, [r0, #4]
 80064cc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80064ce:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80064d0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80064d4:	07d2      	lsls	r2, r2, #31
 80064d6:	bf48      	it	mi
 80064d8:	5962      	ldrmi	r2, [r4, r5]
 80064da:	689b      	ldr	r3, [r3, #8]
    }
 80064dc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80064de:	bf48      	it	mi
 80064e0:	58d3      	ldrmi	r3, [r2, r3]
 80064e2:	4718      	bx	r3

080064e4 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80064e4:	6843      	ldr	r3, [r0, #4]
 80064e6:	b12b      	cbz	r3, 80064f4 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80064e8:	6883      	ldr	r3, [r0, #8]
 80064ea:	b92b      	cbnz	r3, 80064f8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80064ec:	68c0      	ldr	r0, [r0, #12]
 80064ee:	f000 0001 	and.w	r0, r0, #1
 80064f2:	4770      	bx	lr
 80064f4:	4618      	mov	r0, r3
 80064f6:	4770      	bx	lr
 80064f8:	2001      	movs	r0, #1
    }
 80064fa:	4770      	bx	lr

080064fc <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80064fc:	b510      	push	{r4, lr}
 80064fe:	2110      	movs	r1, #16
 8006500:	4604      	mov	r4, r0
 8006502:	f022 fd9c 	bl	802903e <_ZdlPvj>
 8006506:	4620      	mov	r0, r4
 8006508:	bd10      	pop	{r4, pc}

0800650a <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800650a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800650e:	f001 bef7 	b.w	8008300 <_ZN17Gauge_with_Values10initializeEv>

08006512 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006512:	3098      	adds	r0, #152	; 0x98
 8006514:	4288      	cmp	r0, r1
{
 8006516:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006518:	d105      	bne.n	8006526 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800651a:	f00e fd19 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800651e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006522:	f7fd ba19 	b.w	8003958 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006526:	bd08      	pop	{r3, pc}

08006528 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006528:	b510      	push	{r4, lr}
 800652a:	4b07      	ldr	r3, [pc, #28]	; (8006548 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 800652c:	6003      	str	r3, [r0, #0]
 800652e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006530:	f00d f80c 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006534:	4b05      	ldr	r3, [pc, #20]	; (800654c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 8006536:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800653a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800653e:	f7fe fc61 	bl	8004e04 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006542:	4620      	mov	r0, r4
 8006544:	bd10      	pop	{r4, pc}
 8006546:	bf00      	nop
 8006548:	0802d2d0 	.word	0x0802d2d0
 800654c:	0802d7dc 	.word	0x0802d7dc

08006550 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006550:	b510      	push	{r4, lr}
 8006552:	4604      	mov	r4, r0
}
 8006554:	f7ff ffe8 	bl	8006528 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8006558:	4620      	mov	r0, r4
 800655a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800655e:	f022 fd6e 	bl	802903e <_ZdlPvj>
 8006562:	4620      	mov	r0, r4
 8006564:	bd10      	pop	{r4, pc}
	...

08006568 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800656c:	ed2d 8b04 	vpush	{d8-d9}
 8006570:	4604      	mov	r4, r0
 8006572:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006574:	46a1      	mov	r9, r4
 8006576:	2500      	movs	r5, #0
 8006578:	f010 f96a 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 800657c:	4bac      	ldr	r3, [pc, #688]	; (8006830 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 800657e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006580:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006584:	2226      	movs	r2, #38	; 0x26
 8006586:	4629      	mov	r1, r5
 8006588:	4648      	mov	r0, r9
 800658a:	f023 fd70 	bl	802a06e <memset>
 800658e:	4648      	mov	r0, r9
 8006590:	f7fc f88c 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8006594:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006598:	26ff      	movs	r6, #255	; 0xff
 800659a:	4ba6      	ldr	r3, [pc, #664]	; (8006834 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 800659c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800659e:	2226      	movs	r2, #38	; 0x26
 80065a0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80065a4:	4629      	mov	r1, r5
 80065a6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80065aa:	4640      	mov	r0, r8
 80065ac:	66a5      	str	r5, [r4, #104]	; 0x68
 80065ae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80065b2:	f023 fd5c 	bl	802a06e <memset>
 80065b6:	4640      	mov	r0, r8
 80065b8:	f7fc f878 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 80065bc:	4b9e      	ldr	r3, [pc, #632]	; (8006838 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80065be:	66e3      	str	r3, [r4, #108]	; 0x6c
 80065c0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80065c4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80065c8:	a90a      	add	r1, sp, #40	; 0x28
 80065ca:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80065cc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80065d0:	f00b ffb5 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80065d4:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80065d8:	4618      	mov	r0, r3
 80065da:	ee08 3a10 	vmov	s16, r3
 80065de:	f00c f8ef 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80065e2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80065e6:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80065ea:	4618      	mov	r0, r3
 80065ec:	ee08 3a90 	vmov	s17, r3
 80065f0:	f7fc f86e 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 80065f4:	4638      	mov	r0, r7
 80065f6:	f00a fe6b 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 80065fa:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80065fe:	4618      	mov	r0, r3
 8006600:	9303      	str	r3, [sp, #12]
 8006602:	f7fa fd21 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006606:	4b8d      	ldr	r3, [pc, #564]	; (800683c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8006608:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 800660c:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006610:	3324      	adds	r3, #36	; 0x24
 8006612:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006616:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800661a:	4658      	mov	r0, fp
 800661c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006620:	f7fc f856 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006624:	4650      	mov	r0, sl
 8006626:	f7fc f853 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800662a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800662e:	4618      	mov	r0, r3
 8006630:	ee09 3a10 	vmov	s18, r3
 8006634:	f001 fe5a 	bl	80082ec <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006638:	4a81      	ldr	r2, [pc, #516]	; (8006840 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800663a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800663e:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006642:	4a80      	ldr	r2, [pc, #512]	; (8006844 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006644:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006648:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 800664c:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006650:	f00c ff72 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006654:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006658:	462a      	mov	r2, r5
 800665a:	4648      	mov	r0, r9
 800665c:	9300      	str	r3, [sp, #0]
 800665e:	4629      	mov	r1, r5
 8006660:	23f0      	movs	r3, #240	; 0xf0
 8006662:	f7fc f80f 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006666:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006668:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800666c:	66a3      	str	r3, [r4, #104]	; 0x68
 800666e:	4649      	mov	r1, r9
 8006670:	4630      	mov	r0, r6
 8006672:	f009 f9d5 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006676:	462a      	mov	r2, r5
 8006678:	4640      	mov	r0, r8
 800667a:	4629      	mov	r1, r5
 800667c:	f7fb fff5 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006680:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006682:	4640      	mov	r0, r8
 8006684:	a90a      	add	r1, sp, #40	; 0x28
 8006686:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800668a:	f00b ff58 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800668e:	4641      	mov	r1, r8
 8006690:	4630      	mov	r0, r6
 8006692:	f009 f9c5 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006696:	ee18 0a10 	vmov	r0, s16
 800669a:	f240 1201 	movw	r2, #257	; 0x101
 800669e:	2121      	movs	r1, #33	; 0x21
 80066a0:	f7fb ffe3 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80066a4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066a6:	aa0a      	add	r2, sp, #40	; 0x28
 80066a8:	a909      	add	r1, sp, #36	; 0x24
 80066aa:	ee18 0a10 	vmov	r0, s16
 80066ae:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80066b2:	2302      	movs	r3, #2
 80066b4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80066b8:	f00b fd4b 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80066bc:	231d      	movs	r3, #29
        updateTextPosition();
 80066be:	ee18 0a10 	vmov	r0, s16
 80066c2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80066c6:	f7fc f825 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80066ca:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80066ce:	3314      	adds	r3, #20
        color = col;
 80066d0:	f04f 39ff 	mov.w	r9, #4294967295
 80066d4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80066d8:	ee18 1a10 	vmov	r1, s16
 80066dc:	4630      	mov	r0, r6
        colorPressed = col;
 80066de:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80066e2:	f009 f99d 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80066e6:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80066ea:	223c      	movs	r2, #60	; 0x3c
 80066ec:	ee18 0a90 	vmov	r0, s17
 80066f0:	2117      	movs	r1, #23
 80066f2:	f7fb ffba 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80066f6:	ee18 1a90 	vmov	r1, s17
 80066fa:	4640      	mov	r0, r8
        color = newColor;
 80066fc:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006700:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006704:	f00b f8a6 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006708:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800670c:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006710:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006714:	4b4c      	ldr	r3, [pc, #304]	; (8006848 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8006716:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006718:	ee18 0a90 	vmov	r0, s17
 800671c:	231e      	movs	r3, #30
 800671e:	a90a      	add	r1, sp, #40	; 0x28
 8006720:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006724:	f00b fb30 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006728:	ee18 1a90 	vmov	r1, s17
 800672c:	4630      	mov	r0, r6
 800672e:	f009 f977 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006732:	230a      	movs	r3, #10
 8006734:	9300      	str	r3, [sp, #0]
 8006736:	2232      	movs	r2, #50	; 0x32
 8006738:	23f0      	movs	r3, #240	; 0xf0
 800673a:	4629      	mov	r1, r5
 800673c:	4638      	mov	r0, r7
 800673e:	f7fb ffa1 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006742:	9b03      	ldr	r3, [sp, #12]
 8006744:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006748:	22a0      	movs	r2, #160	; 0xa0
 800674a:	4611      	mov	r1, r2
 800674c:	4638      	mov	r0, r7
 800674e:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006752:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006756:	f00a fed1 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800675a:	22a0      	movs	r2, #160	; 0xa0
 800675c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006760:	4638      	mov	r0, r7
 8006762:	f00a fed6 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006766:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800676a:	2b20      	cmp	r3, #32
 800676c:	d005      	beq.n	800677a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800676e:	2320      	movs	r3, #32
 8006770:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006774:	4638      	mov	r0, r7
 8006776:	f00a fdcb 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800677a:	4638      	mov	r0, r7
 800677c:	2101      	movs	r1, #1
 800677e:	f00a fed3 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006782:	4639      	mov	r1, r7
 8006784:	4630      	mov	r0, r6
 8006786:	f009 f94b 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800678a:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 800678c:	2223      	movs	r2, #35	; 0x23
 800678e:	4658      	mov	r0, fp
        color = newColor;
 8006790:	f04f 39ff 	mov.w	r9, #4294967295
 8006794:	2145      	movs	r1, #69	; 0x45
 8006796:	f7fb ff68 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800679a:	4659      	mov	r1, fp
 800679c:	4640      	mov	r0, r8
        color = newColor;
 800679e:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80067a2:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80067a6:	f00b f855 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80067aa:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80067ae:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80067b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067b6:	4f24      	ldr	r7, [pc, #144]	; (8006848 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80067b8:	970a      	str	r7, [sp, #40]	; 0x28
 80067ba:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80067bc:	a90a      	add	r1, sp, #40	; 0x28
 80067be:	4658      	mov	r0, fp
 80067c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80067c4:	f00b fae0 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067c8:	4659      	mov	r1, fp
 80067ca:	4630      	mov	r0, r6
 80067cc:	f009 f928 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80067d0:	220c      	movs	r2, #12
 80067d2:	4650      	mov	r0, sl
 80067d4:	2136      	movs	r1, #54	; 0x36
 80067d6:	f7fb ff48 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80067da:	4651      	mov	r1, sl
 80067dc:	4640      	mov	r0, r8
        color = newColor;
 80067de:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80067e2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80067e6:	f00b f835 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80067ea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80067ee:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80067f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067f6:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80067f8:	a90a      	add	r1, sp, #40	; 0x28
 80067fa:	4650      	mov	r0, sl
 80067fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006800:	970a      	str	r7, [sp, #40]	; 0x28
 8006802:	f00b fac1 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006806:	4651      	mov	r1, sl
 8006808:	4630      	mov	r0, r6
 800680a:	f009 f909 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800680e:	ee19 0a10 	vmov	r0, s18
 8006812:	224e      	movs	r2, #78	; 0x4e
 8006814:	4629      	mov	r1, r5
 8006816:	f7fb ff28 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 800681a:	4630      	mov	r0, r6
 800681c:	ee19 1a10 	vmov	r1, s18
 8006820:	f009 f8fe 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006824:	4620      	mov	r0, r4
 8006826:	b00d      	add	sp, #52	; 0x34
 8006828:	ecbd 8b04 	vpop	{d8-d9}
 800682c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006830:	0802d2d0 	.word	0x0802d2d0
 8006834:	0802e158 	.word	0x0802e158
 8006838:	0802e320 	.word	0x0802e320
 800683c:	0802de8c 	.word	0x0802de8c
 8006840:	0802d2b8 	.word	0x0802d2b8
 8006844:	08006513 	.word	0x08006513
 8006848:	0802b808 	.word	0x0802b808

0800684c <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 800684c:	4770      	bx	lr

0800684e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800684e:	4770      	bx	lr

08006850 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006850:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006852:	68c2      	ldr	r2, [r0, #12]
 8006854:	6844      	ldr	r4, [r0, #4]
 8006856:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006858:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800685a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800685e:	07d2      	lsls	r2, r2, #31
 8006860:	bf48      	it	mi
 8006862:	5962      	ldrmi	r2, [r4, r5]
 8006864:	689b      	ldr	r3, [r3, #8]
    }
 8006866:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006868:	bf48      	it	mi
 800686a:	58d3      	ldrmi	r3, [r2, r3]
 800686c:	4718      	bx	r3

0800686e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800686e:	6843      	ldr	r3, [r0, #4]
 8006870:	b12b      	cbz	r3, 800687e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006872:	6883      	ldr	r3, [r0, #8]
 8006874:	b92b      	cbnz	r3, 8006882 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006876:	68c0      	ldr	r0, [r0, #12]
 8006878:	f000 0001 	and.w	r0, r0, #1
 800687c:	4770      	bx	lr
 800687e:	4618      	mov	r0, r3
 8006880:	4770      	bx	lr
 8006882:	2001      	movs	r0, #1
    }
 8006884:	4770      	bx	lr

08006886 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006886:	b510      	push	{r4, lr}
 8006888:	2110      	movs	r1, #16
 800688a:	4604      	mov	r4, r0
 800688c:	f022 fbd7 	bl	802903e <_ZdlPvj>
 8006890:	4620      	mov	r0, r4
 8006892:	bd10      	pop	{r4, pc}

08006894 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006894:	b510      	push	{r4, lr}
 8006896:	4b03      	ldr	r3, [pc, #12]	; (80068a4 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006898:	6003      	str	r3, [r0, #0]
 800689a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800689c:	f00c fe56 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80068a0:	4620      	mov	r0, r4
 80068a2:	bd10      	pop	{r4, pc}
 80068a4:	0802d31c 	.word	0x0802d31c

080068a8 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80068a8:	b507      	push	{r0, r1, r2, lr}
 80068aa:	4b07      	ldr	r3, [pc, #28]	; (80068c8 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80068ac:	6003      	str	r3, [r0, #0]
 80068ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80068b0:	f00c fe4c 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80068b4:	9801      	ldr	r0, [sp, #4]
 80068b6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80068ba:	f022 fbc0 	bl	802903e <_ZdlPvj>
 80068be:	9801      	ldr	r0, [sp, #4]
 80068c0:	b003      	add	sp, #12
 80068c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80068c6:	bf00      	nop
 80068c8:	0802d31c 	.word	0x0802d31c

080068cc <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80068cc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80068ce:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80068d2:	4299      	cmp	r1, r3
{
 80068d4:	4604      	mov	r4, r0
 80068d6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80068d8:	d103      	bne.n	80068e2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80068da:	f00e fb39 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80068de:	f7fc ffeb 	bl	80038b8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80068e2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80068e6:	429d      	cmp	r5, r3
 80068e8:	d103      	bne.n	80068f2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80068ea:	f00e fb31 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80068ee:	f7fd f803 	bl	80038f8 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80068f2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80068f6:	42a5      	cmp	r5, r4
 80068f8:	d105      	bne.n	8006906 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80068fa:	f00e fb29 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80068fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006902:	f7fd b809 	b.w	8003918 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006906:	bd38      	pop	{r3, r4, r5, pc}

08006908 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800690c:	ed2d 8b06 	vpush	{d8-d10}
 8006910:	4604      	mov	r4, r0
 8006912:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006914:	46a3      	mov	fp, r4
 8006916:	2500      	movs	r5, #0
 8006918:	f00f ff9a 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 800691c:	4b66      	ldr	r3, [pc, #408]	; (8006ab8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 800691e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006920:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006924:	2226      	movs	r2, #38	; 0x26
 8006926:	4629      	mov	r1, r5
 8006928:	4658      	mov	r0, fp
 800692a:	f023 fba0 	bl	802a06e <memset>
 800692e:	4658      	mov	r0, fp
 8006930:	f7fb febc 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8006934:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006938:	26ff      	movs	r6, #255	; 0xff
 800693a:	4b60      	ldr	r3, [pc, #384]	; (8006abc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 800693c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800693e:	2226      	movs	r2, #38	; 0x26
 8006940:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006944:	4629      	mov	r1, r5
 8006946:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800694a:	4650      	mov	r0, sl
 800694c:	66a5      	str	r5, [r4, #104]	; 0x68
 800694e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006952:	f023 fb8c 	bl	802a06e <memset>
 8006956:	4650      	mov	r0, sl
 8006958:	f7fb fea8 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 800695c:	4b58      	ldr	r3, [pc, #352]	; (8006ac0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 800695e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006960:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006964:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006968:	a90a      	add	r1, sp, #40	; 0x28
 800696a:	4650      	mov	r0, sl
 800696c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006970:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006974:	f00b fde3 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006978:	4648      	mov	r0, r9
 800697a:	f7fb fea9 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800697e:	4b51      	ldr	r3, [pc, #324]	; (8006ac4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006980:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006984:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006988:	4618      	mov	r0, r3
 800698a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800698e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006992:	ee08 3a90 	vmov	s17, r3
 8006996:	f7fb fe9b 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800699a:	4638      	mov	r0, r7
 800699c:	f00a fc98 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 80069a0:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80069a4:	4618      	mov	r0, r3
 80069a6:	9303      	str	r3, [sp, #12]
 80069a8:	f7fa fb4e 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80069ac:	4b46      	ldr	r3, [pc, #280]	; (8006ac8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 80069ae:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80069b2:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80069b6:	3324      	adds	r3, #36	; 0x24
 80069b8:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80069bc:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80069c0:	4640      	mov	r0, r8
 80069c2:	f7fb fe85 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 80069c6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80069ca:	4618      	mov	r0, r3
 80069cc:	ee08 3a10 	vmov	s16, r3
 80069d0:	f7fb fe7e 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 80069d4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80069d8:	4618      	mov	r0, r3
 80069da:	ee09 3a10 	vmov	s18, r3
 80069de:	f00b feef 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80069e2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80069e6:	4618      	mov	r0, r3
 80069e8:	ee09 3a90 	vmov	s19, r3
 80069ec:	f00b fee8 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80069f0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80069f4:	4618      	mov	r0, r3
 80069f6:	ee0a 3a10 	vmov	s20, r3
 80069fa:	f00b fee1 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80069fe:	4a33      	ldr	r2, [pc, #204]	; (8006acc <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006a00:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006a04:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006a08:	4a31      	ldr	r2, [pc, #196]	; (8006ad0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006a0a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006a0e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006a12:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006a16:	f00c fd8f 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006a1a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006a1e:	462a      	mov	r2, r5
 8006a20:	4658      	mov	r0, fp
 8006a22:	9300      	str	r3, [sp, #0]
 8006a24:	4629      	mov	r1, r5
 8006a26:	23f0      	movs	r3, #240	; 0xf0
 8006a28:	f7fb fe2c 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a2c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006a2e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006a32:	66a3      	str	r3, [r4, #104]	; 0x68
 8006a34:	4659      	mov	r1, fp
 8006a36:	4630      	mov	r0, r6
 8006a38:	f008 fff2 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006a3c:	462a      	mov	r2, r5
 8006a3e:	4650      	mov	r0, sl
 8006a40:	4629      	mov	r1, r5
 8006a42:	f7fb fe12 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006a46:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006a48:	4650      	mov	r0, sl
 8006a4a:	a90a      	add	r1, sp, #40	; 0x28
 8006a4c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a50:	f00b fd75 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006a54:	4651      	mov	r1, sl
 8006a56:	4630      	mov	r0, r6
 8006a58:	f008 ffe2 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006a5c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006a60:	2156      	movs	r1, #86	; 0x56
 8006a62:	4648      	mov	r0, r9
 8006a64:	f7fb fe01 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a68:	f04f 33ff 	mov.w	r3, #4294967295
 8006a6c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006a70:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006a74:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006a78:	f10d 0b10 	add.w	fp, sp, #16
 8006a7c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006a80:	4649      	mov	r1, r9
 8006a82:	4658      	mov	r0, fp
 8006a84:	4798      	blx	r3
 8006a86:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006a8a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006a8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a92:	4b10      	ldr	r3, [pc, #64]	; (8006ad4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006a94:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006a96:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006a9a:	b92b      	cbnz	r3, 8006aa8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006a9c:	4b0e      	ldr	r3, [pc, #56]	; (8006ad8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006a9e:	4a0f      	ldr	r2, [pc, #60]	; (8006adc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006aa0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006aa2:	480f      	ldr	r0, [pc, #60]	; (8006ae0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006aa4:	f023 f8de 	bl	8029c64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006aa8:	4b0e      	ldr	r3, [pc, #56]	; (8006ae4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006aaa:	881b      	ldrh	r3, [r3, #0]
 8006aac:	2b18      	cmp	r3, #24
 8006aae:	d81d      	bhi.n	8006aec <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006ab0:	4b0d      	ldr	r3, [pc, #52]	; (8006ae8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006ab2:	4a0a      	ldr	r2, [pc, #40]	; (8006adc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006ab4:	2161      	movs	r1, #97	; 0x61
 8006ab6:	e7f4      	b.n	8006aa2 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006ab8:	0802d31c 	.word	0x0802d31c
 8006abc:	0802e158 	.word	0x0802e158
 8006ac0:	0802e320 	.word	0x0802e320
 8006ac4:	0802b818 	.word	0x0802b818
 8006ac8:	0802de8c 	.word	0x0802de8c
 8006acc:	0802d304 	.word	0x0802d304
 8006ad0:	080068cd 	.word	0x080068cd
 8006ad4:	20012ed4 	.word	0x20012ed4
 8006ad8:	0802b658 	.word	0x0802b658
 8006adc:	0802b75a 	.word	0x0802b75a
 8006ae0:	0802b6d5 	.word	0x0802b6d5
 8006ae4:	20012ed8 	.word	0x20012ed8
 8006ae8:	0802b71c 	.word	0x0802b71c
        return texts->getText(typedTextId);
 8006aec:	4b96      	ldr	r3, [pc, #600]	; (8006d48 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006aee:	2118      	movs	r1, #24
 8006af0:	6818      	ldr	r0, [r3, #0]
 8006af2:	f001 fabd 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8006af6:	4a95      	ldr	r2, [pc, #596]	; (8006d4c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8006af8:	4603      	mov	r3, r0
 8006afa:	2104      	movs	r1, #4
 8006afc:	4650      	mov	r0, sl
 8006afe:	f011 fb97 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006b02:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006b06:	4648      	mov	r0, r9
 8006b08:	f00b f91e 	bl	8011d48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006b0c:	f8df a240 	ldr.w	sl, [pc, #576]	; 8006d50 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006b10:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006b14:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006b16:	a90a      	add	r1, sp, #40	; 0x28
 8006b18:	4648      	mov	r0, r9
 8006b1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b1e:	f00b f933 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b22:	4649      	mov	r1, r9
 8006b24:	4630      	mov	r0, r6
 8006b26:	f008 ff7b 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006b2a:	223c      	movs	r2, #60	; 0x3c
 8006b2c:	ee18 0a90 	vmov	r0, s17
 8006b30:	2129      	movs	r1, #41	; 0x29
 8006b32:	f7fb fd9a 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006b36:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006b3a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006b3e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006b42:	4658      	mov	r0, fp
        linespace = space;
 8006b44:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006b48:	f00a fe84 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b4c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006b50:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006b54:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b58:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006b5a:	eb0d 0103 	add.w	r1, sp, r3
 8006b5e:	ee18 0a90 	vmov	r0, s17
 8006b62:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b66:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006b6a:	f00b f90d 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b6e:	ee18 1a90 	vmov	r1, s17
 8006b72:	4630      	mov	r0, r6
 8006b74:	f008 ff54 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006b78:	230a      	movs	r3, #10
 8006b7a:	9300      	str	r3, [sp, #0]
 8006b7c:	2232      	movs	r2, #50	; 0x32
 8006b7e:	23f0      	movs	r3, #240	; 0xf0
 8006b80:	4629      	mov	r1, r5
 8006b82:	4638      	mov	r0, r7
 8006b84:	f7fb fd7e 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b88:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006b8c:	22a0      	movs	r2, #160	; 0xa0
 8006b8e:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006b92:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006b96:	9b03      	ldr	r3, [sp, #12]
 8006b98:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006b9c:	4611      	mov	r1, r2
 8006b9e:	4638      	mov	r0, r7
 8006ba0:	f00a fcac 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ba4:	22a0      	movs	r2, #160	; 0xa0
 8006ba6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006baa:	4638      	mov	r0, r7
 8006bac:	f00a fcb1 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006bb0:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006bb4:	2b20      	cmp	r3, #32
 8006bb6:	d005      	beq.n	8006bc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8006bb8:	2320      	movs	r3, #32
 8006bba:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006bbe:	4638      	mov	r0, r7
 8006bc0:	f00a fba6 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006bc4:	4638      	mov	r0, r7
 8006bc6:	2101      	movs	r1, #1
 8006bc8:	f00a fcae 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006bcc:	4639      	mov	r1, r7
 8006bce:	4630      	mov	r0, r6
 8006bd0:	f008 ff26 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006bd4:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006bd8:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006bda:	2223      	movs	r2, #35	; 0x23
 8006bdc:	4640      	mov	r0, r8
        linespace = space;
 8006bde:	f04f 0a00 	mov.w	sl, #0
 8006be2:	2145      	movs	r1, #69	; 0x45
 8006be4:	f7fb fd41 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006be8:	4641      	mov	r1, r8
 8006bea:	4638      	mov	r0, r7
        color = newColor;
 8006bec:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006bf0:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006bf4:	f00a fe2e 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006bf8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006bfc:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006c00:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006c04:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006d50 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006c08:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006c0c:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006c0e:	a90a      	add	r1, sp, #40	; 0x28
 8006c10:	4640      	mov	r0, r8
 8006c12:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c16:	f00b f8b7 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c1a:	4641      	mov	r1, r8
 8006c1c:	4630      	mov	r0, r6
 8006c1e:	f008 feff 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006c22:	ee18 0a10 	vmov	r0, s16
 8006c26:	220c      	movs	r2, #12
 8006c28:	2136      	movs	r1, #54	; 0x36
 8006c2a:	f7fb fd1e 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006c2e:	ee18 1a10 	vmov	r1, s16
 8006c32:	4638      	mov	r0, r7
        color = newColor;
 8006c34:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006c38:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006c3c:	f00a fe0a 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c40:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006c44:	ee18 3a10 	vmov	r3, s16
 8006c48:	333c      	adds	r3, #60	; 0x3c
 8006c4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006c4e:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006c50:	ee18 0a10 	vmov	r0, s16
 8006c54:	a90a      	add	r1, sp, #40	; 0x28
 8006c56:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c5a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006c5e:	f00b f893 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c62:	ee18 1a10 	vmov	r1, s16
 8006c66:	4630      	mov	r0, r6
 8006c68:	f008 feda 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006c6c:	ee19 0a10 	vmov	r0, s18
 8006c70:	22f0      	movs	r2, #240	; 0xf0
 8006c72:	2121      	movs	r1, #33	; 0x21
 8006c74:	f7fb fcf9 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006c78:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c7c:	aa0a      	add	r2, sp, #40	; 0x28
 8006c7e:	f04f 0802 	mov.w	r8, #2
 8006c82:	a909      	add	r1, sp, #36	; 0x24
 8006c84:	ee19 0a10 	vmov	r0, s18
 8006c88:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006c8c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006c90:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c94:	f00b fa5d 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006c98:	233f      	movs	r3, #63	; 0x3f
 8006c9a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006c9e:	3710      	adds	r7, #16
        updateTextPosition();
 8006ca0:	ee19 0a10 	vmov	r0, s18
 8006ca4:	f7fb fd36 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ca8:	ee19 1a10 	vmov	r1, s18
 8006cac:	4630      	mov	r0, r6
        colorPressed = col;
 8006cae:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006cb2:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006cb6:	f008 feb3 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006cba:	ee19 0a90 	vmov	r0, s19
 8006cbe:	22aa      	movs	r2, #170	; 0xaa
 8006cc0:	2121      	movs	r1, #33	; 0x21
 8006cc2:	f7fb fcd2 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006cc6:	aa0a      	add	r2, sp, #40	; 0x28
 8006cc8:	a909      	add	r1, sp, #36	; 0x24
 8006cca:	ee19 0a90 	vmov	r0, s19
 8006cce:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006cd2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006cd6:	f00b fa3c 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006cda:	233e      	movs	r3, #62	; 0x3e
 8006cdc:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006ce0:	ee19 0a90 	vmov	r0, s19
 8006ce4:	f7fb fd16 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ce8:	ee19 1a90 	vmov	r1, s19
 8006cec:	4630      	mov	r0, r6
        colorPressed = col;
 8006cee:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006cf2:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006cf6:	f008 fe93 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006cfa:	ee1a 0a10 	vmov	r0, s20
 8006cfe:	2264      	movs	r2, #100	; 0x64
 8006d00:	2121      	movs	r1, #33	; 0x21
 8006d02:	f7fb fcb2 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d06:	aa0a      	add	r2, sp, #40	; 0x28
 8006d08:	a909      	add	r1, sp, #36	; 0x24
 8006d0a:	ee1a 0a10 	vmov	r0, s20
 8006d0e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006d12:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006d16:	f00b fa1c 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006d1a:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006d1c:	ee1a 0a10 	vmov	r0, s20
 8006d20:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006d24:	f7fb fcf6 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006d28:	4630      	mov	r0, r6
        colorPressed = col;
 8006d2a:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006d2e:	ee1a 1a10 	vmov	r1, s20
 8006d32:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006d36:	f008 fe73 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006d3a:	4620      	mov	r0, r4
 8006d3c:	b00d      	add	sp, #52	; 0x34
 8006d3e:	ecbd 8b06 	vpop	{d8-d10}
 8006d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d46:	bf00      	nop
 8006d48:	20012ee0 	.word	0x20012ee0
 8006d4c:	0802b792 	.word	0x0802b792
 8006d50:	0802b808 	.word	0x0802b808

08006d54 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006d54:	4770      	bx	lr

08006d56 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006d56:	4770      	bx	lr

08006d58 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call testGui
    testGui();
 8006d58:	6803      	ldr	r3, [r0, #0]
 8006d5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006d5c:	4718      	bx	r3

08006d5e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d5e:	4770      	bx	lr

08006d60 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006d60:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d62:	68c2      	ldr	r2, [r0, #12]
 8006d64:	6844      	ldr	r4, [r0, #4]
 8006d66:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006d68:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006d6a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006d6e:	07d2      	lsls	r2, r2, #31
 8006d70:	bf48      	it	mi
 8006d72:	5962      	ldrmi	r2, [r4, r5]
 8006d74:	689b      	ldr	r3, [r3, #8]
    }
 8006d76:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d78:	bf48      	it	mi
 8006d7a:	58d3      	ldrmi	r3, [r2, r3]
 8006d7c:	4718      	bx	r3

08006d7e <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006d7e:	6843      	ldr	r3, [r0, #4]
 8006d80:	b12b      	cbz	r3, 8006d8e <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006d82:	6883      	ldr	r3, [r0, #8]
 8006d84:	b92b      	cbnz	r3, 8006d92 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006d86:	68c0      	ldr	r0, [r0, #12]
 8006d88:	f000 0001 	and.w	r0, r0, #1
 8006d8c:	4770      	bx	lr
 8006d8e:	4618      	mov	r0, r3
 8006d90:	4770      	bx	lr
 8006d92:	2001      	movs	r0, #1
    }
 8006d94:	4770      	bx	lr

08006d96 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d96:	b510      	push	{r4, lr}
 8006d98:	2110      	movs	r1, #16
 8006d9a:	4604      	mov	r4, r0
 8006d9c:	f022 f94f 	bl	802903e <_ZdlPvj>
 8006da0:	4620      	mov	r0, r4
 8006da2:	bd10      	pop	{r4, pc}

08006da4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006da4:	b510      	push	{r4, lr}
 8006da6:	4b03      	ldr	r3, [pc, #12]	; (8006db4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006da8:	6003      	str	r3, [r0, #0]
 8006daa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006dac:	f00c fbce 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006db0:	4620      	mov	r0, r4
 8006db2:	bd10      	pop	{r4, pc}
 8006db4:	0802d368 	.word	0x0802d368

08006db8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006db8:	b507      	push	{r0, r1, r2, lr}
 8006dba:	4b07      	ldr	r3, [pc, #28]	; (8006dd8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006dbc:	6003      	str	r3, [r0, #0]
 8006dbe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006dc0:	f00c fbc4 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006dc4:	9801      	ldr	r0, [sp, #4]
 8006dc6:	f241 31f4 	movw	r1, #5108	; 0x13f4
 8006dca:	f022 f938 	bl	802903e <_ZdlPvj>
 8006dce:	9801      	ldr	r0, [sp, #4]
 8006dd0:	b003      	add	sp, #12
 8006dd2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006dd6:	bf00      	nop
 8006dd8:	0802d368 	.word	0x0802d368

08006ddc <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006ddc:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006de0:	4288      	cmp	r0, r1
{
 8006de2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006de4:	d105      	bne.n	8006df2 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006de6:	f00e f8b3 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006dea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006dee:	f7fc bd73 	b.w	80038d8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006df2:	bd08      	pop	{r3, pc}

08006df4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006df8:	ed2d 8b0a 	vpush	{d8-d12}
 8006dfc:	4604      	mov	r4, r0
 8006dfe:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8006e00:	46a1      	mov	r9, r4
 8006e02:	2500      	movs	r5, #0
 8006e04:	f00f fd24 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 8006e08:	4ba8      	ldr	r3, [pc, #672]	; (80070ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>)
 8006e0a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e0c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006e10:	2226      	movs	r2, #38	; 0x26
 8006e12:	4629      	mov	r1, r5
 8006e14:	4648      	mov	r0, r9
 8006e16:	f023 f92a 	bl	802a06e <memset>
 8006e1a:	4648      	mov	r0, r9
 8006e1c:	f7fb fc46 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8006e20:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006e24:	26ff      	movs	r6, #255	; 0xff
 8006e26:	4ba2      	ldr	r3, [pc, #648]	; (80070b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8006e28:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006e2a:	2226      	movs	r2, #38	; 0x26
 8006e2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006e30:	4629      	mov	r1, r5
 8006e32:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006e36:	4640      	mov	r0, r8
 8006e38:	66a5      	str	r5, [r4, #104]	; 0x68
 8006e3a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e3e:	f023 f916 	bl	802a06e <memset>
 8006e42:	4640      	mov	r0, r8
 8006e44:	f7fb fc32 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8006e48:	4b9a      	ldr	r3, [pc, #616]	; (80070b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006e4a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006e4c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006e50:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006e54:	a90a      	add	r1, sp, #40	; 0x28
 8006e56:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006e5a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006e5c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006e60:	f00b fb6d 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e64:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006e68:	4658      	mov	r0, fp
 8006e6a:	f7fb fc31 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006e6e:	4638      	mov	r0, r7
 8006e70:	f00b f828 	bl	8011ec4 <_ZN8touchgfx5GaugeC1Ev>
 8006e74:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8006e78:	4618      	mov	r0, r3
 8006e7a:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006e7e:	4e8e      	ldr	r6, [pc, #568]	; (80070b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
        : TextArea()
 8006e80:	f7fb fc26 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006e84:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8006e88:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8006e8c:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006e8e:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8006e92:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8006e96:	f7fb fc1b 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006e9a:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8006e9e:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8006ea2:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006ea4:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8006ea8:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8006eac:	f7fb fc10 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006eb0:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8006eb4:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8006eb8:	4618      	mov	r0, r3
 8006eba:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8006ebe:	ee0a 3a90 	vmov	s21, r3
 8006ec2:	f7fb fc05 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006ec6:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8006eca:	4618      	mov	r0, r3
 8006ecc:	ee0b 3a10 	vmov	s22, r3
 8006ed0:	f7fb fbfe 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006ed4:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8006ed8:	4618      	mov	r0, r3
 8006eda:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8006ede:	ee0b 3a90 	vmov	s23, r3
 8006ee2:	f7fb fbf5 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006ee6:	4650      	mov	r0, sl
 8006ee8:	f00a f9f2 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 8006eec:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006ef0:	4618      	mov	r0, r3
 8006ef2:	9303      	str	r3, [sp, #12]
 8006ef4:	f7fa f8a8 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006ef8:	4b70      	ldr	r3, [pc, #448]	; (80070bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8006efa:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8006efe:	3324      	adds	r3, #36	; 0x24
 8006f00:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8006f04:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8006f08:	4618      	mov	r0, r3
 8006f0a:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8006f0e:	ee08 3a10 	vmov	s16, r3
 8006f12:	f7fb fbdd 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006f16:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8006f1a:	4618      	mov	r0, r3
 8006f1c:	ee08 3a90 	vmov	s17, r3
 8006f20:	f7fb fbd6 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006f24:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8006f28:	4618      	mov	r0, r3
 8006f2a:	ee0c 3a10 	vmov	s24, r3
 8006f2e:	f00b fc47 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f32:	4a63      	ldr	r2, [pc, #396]	; (80070c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8006f34:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006f38:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8006f3c:	4a61      	ldr	r2, [pc, #388]	; (80070c4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006f3e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006f42:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
 8006f46:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8006f4a:	f00c faf5 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006f4e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006f52:	462a      	mov	r2, r5
 8006f54:	4648      	mov	r0, r9
 8006f56:	9300      	str	r3, [sp, #0]
 8006f58:	4629      	mov	r1, r5
 8006f5a:	23f0      	movs	r3, #240	; 0xf0
 8006f5c:	f7fb fb92 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f60:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006f62:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006f66:	66a3      	str	r3, [r4, #104]	; 0x68
 8006f68:	4649      	mov	r1, r9
 8006f6a:	4630      	mov	r0, r6
 8006f6c:	f008 fd58 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006f70:	462a      	mov	r2, r5
 8006f72:	4640      	mov	r0, r8
 8006f74:	4629      	mov	r1, r5
 8006f76:	f7fb fb78 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006f7a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006f7c:	4640      	mov	r0, r8
 8006f7e:	a90a      	add	r1, sp, #40	; 0x28
 8006f80:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f84:	f00b fadb 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006f88:	4641      	mov	r1, r8
 8006f8a:	4630      	mov	r0, r6
 8006f8c:	f008 fd48 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8006f90:	223c      	movs	r2, #60	; 0x3c
 8006f92:	211f      	movs	r1, #31
 8006f94:	4658      	mov	r0, fp
 8006f96:	f7fb fb68 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8006f9a:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8006f9e:	f04f 33ff 	mov.w	r3, #4294967295
 8006fa2:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006fa6:	4659      	mov	r1, fp
 8006fa8:	4640      	mov	r0, r8
        linespace = space;
 8006faa:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006fae:	f00a fc51 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006fb2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006fb6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006fba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006fbe:	4b42      	ldr	r3, [pc, #264]	; (80070c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006fc0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006fc2:	a90a      	add	r1, sp, #40	; 0x28
 8006fc4:	2327      	movs	r3, #39	; 0x27
 8006fc6:	4658      	mov	r0, fp
 8006fc8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006fcc:	f00a fedc 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fd0:	4659      	mov	r1, fp
 8006fd2:	4630      	mov	r0, r6
 8006fd4:	f008 fd24 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006fd8:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8006fdc:	4638      	mov	r0, r7
 8006fde:	a90a      	add	r1, sp, #40	; 0x28
 8006fe0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006fe4:	f008 fcae 	bl	800f944 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8006fe8:	236a      	movs	r3, #106	; 0x6a
 8006fea:	4638      	mov	r0, r7
 8006fec:	9300      	str	r3, [sp, #0]
 8006fee:	225e      	movs	r2, #94	; 0x5e
 8006ff0:	23b8      	movs	r3, #184	; 0xb8
 8006ff2:	211c      	movs	r1, #28
 8006ff4:	f7fb fb46 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8006ff8:	225c      	movs	r2, #92	; 0x5c
 8006ffa:	4611      	mov	r1, r2
 8006ffc:	4638      	mov	r0, r7
 8006ffe:	f00b f80c 	bl	801201a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007002:	4638      	mov	r0, r7
 8007004:	225a      	movs	r2, #90	; 0x5a
 8007006:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800700a:	f00b f88b 	bl	8012124 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 800700e:	462b      	mov	r3, r5
 8007010:	225a      	movs	r2, #90	; 0x5a
 8007012:	4638      	mov	r0, r7
 8007014:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007018:	9500      	str	r5, [sp, #0]
 800701a:	f008 fb40 	bl	800f69e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 800701e:	4638      	mov	r0, r7
 8007020:	4629      	mov	r1, r5
 8007022:	f00b f829 	bl	8012078 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007026:	2335      	movs	r3, #53	; 0x35
 8007028:	2208      	movs	r2, #8
 800702a:	4638      	mov	r0, r7
 800702c:	2105      	movs	r1, #5
 800702e:	f00a ffdf 	bl	8011ff0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007032:	4638      	mov	r0, r7
 8007034:	2101      	movs	r1, #1
 8007036:	f00a ff7d 	bl	8011f34 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800703a:	4638      	mov	r0, r7
 800703c:	2101      	movs	r1, #1
 800703e:	f00a ff7c 	bl	8011f3a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007042:	4639      	mov	r1, r7
 8007044:	4630      	mov	r0, r6
 8007046:	f008 fceb 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 800704a:	230f      	movs	r3, #15
 800704c:	22e6      	movs	r2, #230	; 0xe6
 800704e:	ee19 0a10 	vmov	r0, s18
 8007052:	9300      	str	r3, [sp, #0]
 8007054:	4629      	mov	r1, r5
 8007056:	23f0      	movs	r3, #240	; 0xf0
 8007058:	f7fb fb14 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800705c:	f04f 33ff 	mov.w	r3, #4294967295
 8007060:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007064:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8007068:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 800706c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007070:	4f16      	ldr	r7, [pc, #88]	; (80070cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007072:	ee19 1a10 	vmov	r1, s18
 8007076:	4640      	mov	r0, r8
 8007078:	4798      	blx	r3
 800707a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800707e:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8007082:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007086:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007088:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 800708c:	b92b      	cbnz	r3, 800709a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a6>
 800708e:	4b10      	ldr	r3, [pc, #64]	; (80070d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007090:	4a10      	ldr	r2, [pc, #64]	; (80070d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007092:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007094:	4810      	ldr	r0, [pc, #64]	; (80070d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007096:	f022 fde5 	bl	8029c64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800709a:	f8df b044 	ldr.w	fp, [pc, #68]	; 80070e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800709e:	f8bb 3000 	ldrh.w	r3, [fp]
 80070a2:	b9fb      	cbnz	r3, 80070e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
 80070a4:	4b0d      	ldr	r3, [pc, #52]	; (80070dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80070a6:	4a0b      	ldr	r2, [pc, #44]	; (80070d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80070a8:	2161      	movs	r1, #97	; 0x61
 80070aa:	e7f3      	b.n	8007094 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a0>
 80070ac:	0802d368 	.word	0x0802d368
 80070b0:	0802e158 	.word	0x0802e158
 80070b4:	0802e320 	.word	0x0802e320
 80070b8:	0802b818 	.word	0x0802b818
 80070bc:	0802de8c 	.word	0x0802de8c
 80070c0:	0802d350 	.word	0x0802d350
 80070c4:	08006ddd 	.word	0x08006ddd
 80070c8:	0802b808 	.word	0x0802b808
 80070cc:	20012ed4 	.word	0x20012ed4
 80070d0:	0802b658 	.word	0x0802b658
 80070d4:	0802b75a 	.word	0x0802b75a
 80070d8:	0802b6d5 	.word	0x0802b6d5
 80070dc:	0802b71c 	.word	0x0802b71c
 80070e0:	20012ed8 	.word	0x20012ed8
        return texts->getText(typedTextId);
 80070e4:	4bdf      	ldr	r3, [pc, #892]	; (8007464 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80070e6:	4629      	mov	r1, r5
 80070e8:	6818      	ldr	r0, [r3, #0]
 80070ea:	f000 ffc1 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 80070ee:	4ade      	ldr	r2, [pc, #888]	; (8007468 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80070f0:	4603      	mov	r3, r0
 80070f2:	210a      	movs	r1, #10
 80070f4:	4648      	mov	r0, r9
 80070f6:	f011 f89b 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80070fa:	4bdc      	ldr	r3, [pc, #880]	; (800746c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        wc1 = value;
 80070fc:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007100:	ee19 0a10 	vmov	r0, s18
 8007104:	930a      	str	r3, [sp, #40]	; 0x28
 8007106:	a90a      	add	r1, sp, #40	; 0x28
 8007108:	2303      	movs	r3, #3
 800710a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800710e:	f00a fe3b 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007112:	ee19 1a10 	vmov	r1, s18
 8007116:	4630      	mov	r0, r6
 8007118:	f008 fc82 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 800711c:	210f      	movs	r1, #15
 800711e:	22d7      	movs	r2, #215	; 0xd7
 8007120:	ee19 0a90 	vmov	r0, s19
 8007124:	9100      	str	r1, [sp, #0]
 8007126:	23f0      	movs	r3, #240	; 0xf0
 8007128:	4629      	mov	r1, r5
 800712a:	f7fb faab 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 800712e:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8007132:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8007136:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800713a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800713e:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007142:	4640      	mov	r0, r8
 8007144:	ee19 1a90 	vmov	r1, s19
 8007148:	4798      	blx	r3
 800714a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800714e:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007152:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007156:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007158:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 800715c:	2b00      	cmp	r3, #0
 800715e:	d096      	beq.n	800708e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007160:	f8bb 3000 	ldrh.w	r3, [fp]
 8007164:	2b01      	cmp	r3, #1
 8007166:	d99d      	bls.n	80070a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
        return texts->getText(typedTextId);
 8007168:	4abe      	ldr	r2, [pc, #760]	; (8007464 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 800716a:	2101      	movs	r1, #1
 800716c:	6810      	ldr	r0, [r2, #0]
 800716e:	f000 ff7f 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8007172:	4abd      	ldr	r2, [pc, #756]	; (8007468 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007174:	4603      	mov	r3, r0
 8007176:	210a      	movs	r1, #10
 8007178:	4648      	mov	r0, r9
 800717a:	f011 f859 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800717e:	f04f 0104 	mov.w	r1, #4
 8007182:	4bba      	ldr	r3, [pc, #744]	; (800746c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007184:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007188:	ee19 0a90 	vmov	r0, s19
 800718c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007190:	a90a      	add	r1, sp, #40	; 0x28
 8007192:	930a      	str	r3, [sp, #40]	; 0x28
 8007194:	f00a fdf8 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007198:	ee19 1a90 	vmov	r1, s19
 800719c:	4630      	mov	r0, r6
 800719e:	f008 fc3f 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80071a2:	210f      	movs	r1, #15
 80071a4:	22c8      	movs	r2, #200	; 0xc8
 80071a6:	ee1a 0a10 	vmov	r0, s20
 80071aa:	9100      	str	r1, [sp, #0]
 80071ac:	23f0      	movs	r3, #240	; 0xf0
 80071ae:	4629      	mov	r1, r5
 80071b0:	f7fb fa68 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 80071b4:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 80071b8:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 80071bc:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80071c0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80071c4:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 80071c8:	4640      	mov	r0, r8
 80071ca:	ee1a 1a10 	vmov	r1, s20
 80071ce:	4798      	blx	r3
 80071d0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071d4:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80071d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80071dc:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 80071de:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 80071e2:	2b00      	cmp	r3, #0
 80071e4:	f43f af53 	beq.w	800708e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80071e8:	f8bb 3000 	ldrh.w	r3, [fp]
 80071ec:	2b02      	cmp	r3, #2
 80071ee:	f67f af59 	bls.w	80070a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
        return texts->getText(typedTextId);
 80071f2:	4a9c      	ldr	r2, [pc, #624]	; (8007464 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
        : typedTextId(id)
 80071f4:	4f9d      	ldr	r7, [pc, #628]	; (800746c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        return texts->getText(typedTextId);
 80071f6:	6810      	ldr	r0, [r2, #0]
 80071f8:	2102      	movs	r1, #2
 80071fa:	f000 ff39 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 80071fe:	4a9a      	ldr	r2, [pc, #616]	; (8007468 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007200:	4603      	mov	r3, r0
 8007202:	210a      	movs	r1, #10
 8007204:	4648      	mov	r0, r9
 8007206:	f011 f813 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800720a:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 800720c:	ee1a 0a10 	vmov	r0, s20
 8007210:	a90a      	add	r1, sp, #40	; 0x28
 8007212:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007216:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800721a:	970a      	str	r7, [sp, #40]	; 0x28
 800721c:	f00a fdb4 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007220:	ee1a 1a10 	vmov	r1, s20
 8007224:	4630      	mov	r0, r6
 8007226:	f008 fbfb 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 800722a:	224c      	movs	r2, #76	; 0x4c
 800722c:	ee1a 0a90 	vmov	r0, s21
 8007230:	2171      	movs	r1, #113	; 0x71
 8007232:	f7fb fa1a 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007236:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800723a:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 800723e:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8007242:	4640      	mov	r0, r8
        linespace = space;
 8007244:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007248:	f00a fb04 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800724c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007250:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007254:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007258:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800725a:	ee1a 0a90 	vmov	r0, s21
 800725e:	a90a      	add	r1, sp, #40	; 0x28
 8007260:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007264:	970a      	str	r7, [sp, #40]	; 0x28
 8007266:	f00a fd8f 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800726a:	ee1a 1a90 	vmov	r1, s21
 800726e:	4630      	mov	r0, r6
 8007270:	f008 fbd6 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007274:	22b9      	movs	r2, #185	; 0xb9
 8007276:	ee1b 0a10 	vmov	r0, s22
 800727a:	4629      	mov	r1, r5
 800727c:	f7fb f9f5 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007280:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007284:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8007288:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 800728c:	4640      	mov	r0, r8
        linespace = space;
 800728e:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007292:	f00a fadf 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007296:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800729a:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 800729e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072a2:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80072a4:	ee1b 0a10 	vmov	r0, s22
 80072a8:	a90a      	add	r1, sp, #40	; 0x28
 80072aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072ae:	970a      	str	r7, [sp, #40]	; 0x28
 80072b0:	f00a fd6a 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072b4:	ee1b 1a10 	vmov	r1, s22
 80072b8:	4630      	mov	r0, r6
 80072ba:	f008 fbb1 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80072be:	22b9      	movs	r2, #185	; 0xb9
 80072c0:	ee1b 0a90 	vmov	r0, s23
 80072c4:	21d9      	movs	r1, #217	; 0xd9
 80072c6:	f7fb f9d0 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80072ca:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80072ce:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 80072d2:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 80072d6:	4640      	mov	r0, r8
        linespace = space;
 80072d8:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 80072dc:	f00a faba 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072e0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80072e4:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 80072e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072ec:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 80072ee:	ee1b 0a90 	vmov	r0, s23
 80072f2:	a90a      	add	r1, sp, #40	; 0x28
 80072f4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072f8:	970a      	str	r7, [sp, #40]	; 0x28
 80072fa:	f00a fd45 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072fe:	ee1b 1a90 	vmov	r1, s23
 8007302:	4630      	mov	r0, r6
 8007304:	f008 fb8c 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007308:	230a      	movs	r3, #10
 800730a:	9300      	str	r3, [sp, #0]
 800730c:	2232      	movs	r2, #50	; 0x32
 800730e:	23f0      	movs	r3, #240	; 0xf0
 8007310:	4629      	mov	r1, r5
 8007312:	4650      	mov	r0, sl
 8007314:	f7fb f9b6 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007318:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800731c:	22a0      	movs	r2, #160	; 0xa0
 800731e:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007322:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 8007326:	9b03      	ldr	r3, [sp, #12]
 8007328:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 800732c:	4611      	mov	r1, r2
 800732e:	4650      	mov	r0, sl
 8007330:	f00a f8e4 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007334:	22a0      	movs	r2, #160	; 0xa0
 8007336:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800733a:	4650      	mov	r0, sl
 800733c:	f00a f8e9 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007340:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007344:	2b20      	cmp	r3, #32
 8007346:	d005      	beq.n	8007354 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x560>
        lineWidthQ5 = widthQ5;
 8007348:	2320      	movs	r3, #32
 800734a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800734e:	4650      	mov	r0, sl
 8007350:	f009 ffde 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007354:	4650      	mov	r0, sl
 8007356:	2101      	movs	r1, #1
 8007358:	f00a f8e6 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800735c:	4651      	mov	r1, sl
 800735e:	4630      	mov	r0, r6
 8007360:	f008 fb5e 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007364:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8007368:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 800736a:	ee18 0a10 	vmov	r0, s16
 800736e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007370:	f04f 0900 	mov.w	r9, #0
 8007374:	2145      	movs	r1, #69	; 0x45
 8007376:	f7fb f978 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800737a:	ee18 1a10 	vmov	r1, s16
 800737e:	4628      	mov	r0, r5
        color = newColor;
 8007380:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 8007384:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007388:	f00a fa64 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800738c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007390:	ee18 3a10 	vmov	r3, s16
 8007394:	333c      	adds	r3, #60	; 0x3c
 8007396:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800739a:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800746c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>
 800739e:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80073a2:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80073a4:	ee18 0a10 	vmov	r0, s16
 80073a8:	a90a      	add	r1, sp, #40	; 0x28
 80073aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073ae:	f00a fceb 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073b2:	ee18 1a10 	vmov	r1, s16
 80073b6:	4630      	mov	r0, r6
 80073b8:	f008 fb32 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80073bc:	ee18 0a90 	vmov	r0, s17
 80073c0:	220c      	movs	r2, #12
 80073c2:	2136      	movs	r1, #54	; 0x36
 80073c4:	f7fb f951 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80073c8:	ee18 1a90 	vmov	r1, s17
 80073cc:	4628      	mov	r0, r5
        color = newColor;
 80073ce:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 80073d2:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 80073d6:	f00a fa3d 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80073de:	ee18 3a90 	vmov	r3, s17
 80073e2:	333c      	adds	r3, #60	; 0x3c
 80073e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80073e8:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80073ea:	ee18 0a90 	vmov	r0, s17
 80073ee:	a90a      	add	r1, sp, #40	; 0x28
 80073f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073f4:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80073f8:	f00a fcc6 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073fc:	ee18 1a90 	vmov	r1, s17
 8007400:	4630      	mov	r0, r6
 8007402:	f008 fb0d 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007406:	ee1c 0a10 	vmov	r0, s24
 800740a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800740e:	2121      	movs	r1, #33	; 0x21
 8007410:	f7fb f92b 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8007414:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007416:	aa0a      	add	r2, sp, #40	; 0x28
 8007418:	a909      	add	r1, sp, #36	; 0x24
 800741a:	ee1c 0a10 	vmov	r0, s24
 800741e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007422:	2302      	movs	r3, #2
 8007424:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007428:	f00a fe93 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800742c:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 800742e:	ee1c 0a10 	vmov	r0, s24
 8007432:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007436:	f7fb f96d 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800743a:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 800743e:	3304      	adds	r3, #4
 8007440:	4630      	mov	r0, r6
 8007442:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007446:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 800744a:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 800744e:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007452:	f008 fae5 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007456:	4620      	mov	r0, r4
 8007458:	b00d      	add	sp, #52	; 0x34
 800745a:	ecbd 8b0a 	vpop	{d8-d12}
 800745e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007462:	bf00      	nop
 8007464:	20012ee0 	.word	0x20012ee0
 8007468:	0802b792 	.word	0x0802b792
 800746c:	0802b808 	.word	0x0802b808

08007470 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007470:	4770      	bx	lr

08007472 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007472:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007474:	68c2      	ldr	r2, [r0, #12]
 8007476:	6844      	ldr	r4, [r0, #4]
 8007478:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800747a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800747c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007480:	07d2      	lsls	r2, r2, #31
 8007482:	bf48      	it	mi
 8007484:	5962      	ldrmi	r2, [r4, r5]
 8007486:	689b      	ldr	r3, [r3, #8]
    }
 8007488:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800748a:	bf48      	it	mi
 800748c:	58d3      	ldrmi	r3, [r2, r3]
 800748e:	4718      	bx	r3

08007490 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007490:	6843      	ldr	r3, [r0, #4]
 8007492:	b12b      	cbz	r3, 80074a0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007494:	6883      	ldr	r3, [r0, #8]
 8007496:	b92b      	cbnz	r3, 80074a4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007498:	68c0      	ldr	r0, [r0, #12]
 800749a:	f000 0001 	and.w	r0, r0, #1
 800749e:	4770      	bx	lr
 80074a0:	4618      	mov	r0, r3
 80074a2:	4770      	bx	lr
 80074a4:	2001      	movs	r0, #1
    }
 80074a6:	4770      	bx	lr

080074a8 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80074a8:	b510      	push	{r4, lr}
 80074aa:	2110      	movs	r1, #16
 80074ac:	4604      	mov	r4, r0
 80074ae:	f021 fdc6 	bl	802903e <_ZdlPvj>
 80074b2:	4620      	mov	r0, r4
 80074b4:	bd10      	pop	{r4, pc}

080074b6 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80074b6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80074ba:	f000 bf21 	b.w	8008300 <_ZN17Gauge_with_Values10initializeEv>

080074be <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80074be:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80074c2:	4288      	cmp	r0, r1
{
 80074c4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80074c6:	d105      	bne.n	80074d4 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80074c8:	f00d fd42 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 80074cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80074d0:	f7fc ba02 	b.w	80038d8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80074d4:	bd08      	pop	{r3, pc}
	...

080074d8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80074d8:	b510      	push	{r4, lr}
 80074da:	4b07      	ldr	r3, [pc, #28]	; (80074f8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 80074dc:	6003      	str	r3, [r0, #0]
 80074de:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80074e0:	f00c f834 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80074e4:	4b05      	ldr	r3, [pc, #20]	; (80074fc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 80074e6:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80074ea:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80074ee:	f7fd fc89 	bl	8004e04 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80074f2:	4620      	mov	r0, r4
 80074f4:	bd10      	pop	{r4, pc}
 80074f6:	bf00      	nop
 80074f8:	0802d3b8 	.word	0x0802d3b8
 80074fc:	0802d7dc 	.word	0x0802d7dc

08007500 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007500:	b510      	push	{r4, lr}
 8007502:	4604      	mov	r4, r0
}
 8007504:	f7ff ffe8 	bl	80074d8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8007508:	4620      	mov	r0, r4
 800750a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800750e:	f021 fd96 	bl	802903e <_ZdlPvj>
 8007512:	4620      	mov	r0, r4
 8007514:	bd10      	pop	{r4, pc}
	...

08007518 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800751c:	ed2d 8b04 	vpush	{d8-d9}
 8007520:	4604      	mov	r4, r0
 8007522:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007524:	46a3      	mov	fp, r4
 8007526:	2500      	movs	r5, #0
 8007528:	f00f f992 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 800752c:	4bae      	ldr	r3, [pc, #696]	; (80077e8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 800752e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007530:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007534:	2226      	movs	r2, #38	; 0x26
 8007536:	4629      	mov	r1, r5
 8007538:	4658      	mov	r0, fp
 800753a:	f022 fd98 	bl	802a06e <memset>
 800753e:	4658      	mov	r0, fp
 8007540:	f7fb f8b4 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 8007544:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007548:	26ff      	movs	r6, #255	; 0xff
 800754a:	4ba8      	ldr	r3, [pc, #672]	; (80077ec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 800754c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800754e:	2226      	movs	r2, #38	; 0x26
 8007550:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007554:	4629      	mov	r1, r5
 8007556:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800755a:	66a5      	str	r5, [r4, #104]	; 0x68
 800755c:	4650      	mov	r0, sl
 800755e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007562:	f022 fd84 	bl	802a06e <memset>
 8007566:	4650      	mov	r0, sl
 8007568:	f7fb f8a0 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 800756c:	4ba0      	ldr	r3, [pc, #640]	; (80077f0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 800756e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007570:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007574:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007578:	a90a      	add	r1, sp, #40	; 0x28
 800757a:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800757e:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007582:	4650      	mov	r0, sl
 8007584:	f00a ffdb 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007588:	4638      	mov	r0, r7
 800758a:	f009 fea1 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 800758e:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007592:	4618      	mov	r0, r3
 8007594:	9303      	str	r3, [sp, #12]
 8007596:	f7f9 fd57 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800759a:	4b96      	ldr	r3, [pc, #600]	; (80077f4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 800759c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80075a0:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80075a4:	3324      	adds	r3, #36	; 0x24
 80075a6:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80075aa:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80075ae:	4648      	mov	r0, r9
 80075b0:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80075b4:	f7fb f88c 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 80075b8:	4640      	mov	r0, r8
 80075ba:	f7fb f889 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 80075be:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80075c2:	4618      	mov	r0, r3
 80075c4:	ee08 3a10 	vmov	s16, r3
 80075c8:	f7fb f882 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 80075cc:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80075d0:	4618      	mov	r0, r3
 80075d2:	ee08 3a90 	vmov	s17, r3
 80075d6:	f00b f8f3 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075da:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80075de:	4618      	mov	r0, r3
 80075e0:	ee09 3a10 	vmov	s18, r3
 80075e4:	f000 fe82 	bl	80082ec <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80075e8:	4a83      	ldr	r2, [pc, #524]	; (80077f8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 80075ea:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80075ee:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80075f2:	4a82      	ldr	r2, [pc, #520]	; (80077fc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80075f4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80075f8:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80075fc:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8007600:	f00b ff9a 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007604:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007608:	462a      	mov	r2, r5
 800760a:	9300      	str	r3, [sp, #0]
 800760c:	4629      	mov	r1, r5
 800760e:	23f0      	movs	r3, #240	; 0xf0
 8007610:	4658      	mov	r0, fp
 8007612:	f7fb f837 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007616:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007618:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800761c:	66a3      	str	r3, [r4, #104]	; 0x68
 800761e:	4659      	mov	r1, fp
 8007620:	4630      	mov	r0, r6
 8007622:	f008 f9fd 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007626:	462a      	mov	r2, r5
 8007628:	4629      	mov	r1, r5
 800762a:	4650      	mov	r0, sl
 800762c:	f7fb f81d 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8007630:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007632:	a90a      	add	r1, sp, #40	; 0x28
 8007634:	4650      	mov	r0, sl
 8007636:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800763a:	f00a ff80 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800763e:	4651      	mov	r1, sl
 8007640:	4630      	mov	r0, r6
 8007642:	f008 f9ed 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007646:	230a      	movs	r3, #10
 8007648:	9300      	str	r3, [sp, #0]
 800764a:	2232      	movs	r2, #50	; 0x32
 800764c:	23f0      	movs	r3, #240	; 0xf0
 800764e:	4629      	mov	r1, r5
 8007650:	4638      	mov	r0, r7
 8007652:	f7fb f817 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007656:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800765a:	22a0      	movs	r2, #160	; 0xa0
 800765c:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007660:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007664:	9b03      	ldr	r3, [sp, #12]
 8007666:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800766a:	4611      	mov	r1, r2
 800766c:	4638      	mov	r0, r7
 800766e:	f009 ff45 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007672:	22a0      	movs	r2, #160	; 0xa0
 8007674:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007678:	4638      	mov	r0, r7
 800767a:	f009 ff4a 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800767e:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007682:	2b20      	cmp	r3, #32
 8007684:	d005      	beq.n	8007692 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 8007686:	2320      	movs	r3, #32
 8007688:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800768c:	4638      	mov	r0, r7
 800768e:	f009 fe3f 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007692:	4638      	mov	r0, r7
 8007694:	2101      	movs	r1, #1
 8007696:	f009 ff47 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800769a:	4639      	mov	r1, r7
 800769c:	4630      	mov	r0, r6
 800769e:	ad04      	add	r5, sp, #16
 80076a0:	f008 f9be 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80076a4:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80076a8:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80076ac:	2223      	movs	r2, #35	; 0x23
 80076ae:	4648      	mov	r0, r9
 80076b0:	2145      	movs	r1, #69	; 0x45
 80076b2:	f7fa ffda 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80076b6:	4649      	mov	r1, r9
 80076b8:	4628      	mov	r0, r5
        color = newColor;
 80076ba:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80076be:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80076c2:	f00a f8c7 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80076c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80076ca:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 80076ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80076d2:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007800 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 80076d6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80076da:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80076dc:	a90a      	add	r1, sp, #40	; 0x28
 80076de:	4648      	mov	r0, r9
 80076e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076e4:	f00a fb50 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076e8:	4649      	mov	r1, r9
 80076ea:	4630      	mov	r0, r6
 80076ec:	f008 f998 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80076f0:	223c      	movs	r2, #60	; 0x3c
 80076f2:	4640      	mov	r0, r8
 80076f4:	211f      	movs	r1, #31
 80076f6:	f7fa ffb8 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80076fa:	4641      	mov	r1, r8
 80076fc:	4628      	mov	r0, r5
        color = newColor;
 80076fe:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007702:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007706:	f00a f8a5 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800770a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800770e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007712:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007716:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007718:	a90a      	add	r1, sp, #40	; 0x28
 800771a:	4640      	mov	r0, r8
 800771c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007720:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007724:	f00a fb30 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007728:	4641      	mov	r1, r8
 800772a:	4630      	mov	r0, r6
 800772c:	f008 f978 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007730:	ee18 0a10 	vmov	r0, s16
 8007734:	220c      	movs	r2, #12
 8007736:	2136      	movs	r1, #54	; 0x36
 8007738:	f7fa ff97 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 800773c:	ee18 1a10 	vmov	r1, s16
 8007740:	4628      	mov	r0, r5
        color = newColor;
 8007742:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007746:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800774a:	f00a f883 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800774e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007752:	ee18 3a10 	vmov	r3, s16
 8007756:	333c      	adds	r3, #60	; 0x3c
 8007758:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800775c:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 800775e:	ee18 0a10 	vmov	r0, s16
 8007762:	a90a      	add	r1, sp, #40	; 0x28
 8007764:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007768:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800776c:	f00a fb0c 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007770:	ee18 1a10 	vmov	r1, s16
 8007774:	4630      	mov	r0, r6
 8007776:	f008 f953 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800777a:	ee18 0a90 	vmov	r0, s17
 800777e:	f240 1201 	movw	r2, #257	; 0x101
 8007782:	2121      	movs	r1, #33	; 0x21
 8007784:	f7fa ff71 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8007788:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800778a:	aa0a      	add	r2, sp, #40	; 0x28
 800778c:	a909      	add	r1, sp, #36	; 0x24
 800778e:	ee18 0a90 	vmov	r0, s17
 8007792:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007796:	2302      	movs	r3, #2
 8007798:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800779c:	f00a fcd9 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80077a0:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 80077a2:	ee18 0a90 	vmov	r0, s17
 80077a6:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80077aa:	f7fa ffb3 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80077ae:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80077b2:	3314      	adds	r3, #20
 80077b4:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80077b8:	ee18 1a90 	vmov	r1, s17
 80077bc:	4630      	mov	r0, r6
        colorPressed = col;
 80077be:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 80077c2:	f008 f92d 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80077c6:	ee19 0a10 	vmov	r0, s18
 80077ca:	224e      	movs	r2, #78	; 0x4e
 80077cc:	4651      	mov	r1, sl
 80077ce:	f7fa ff4c 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80077d2:	4630      	mov	r0, r6
 80077d4:	ee19 1a10 	vmov	r1, s18
 80077d8:	f008 f922 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80077dc:	4620      	mov	r0, r4
 80077de:	b00d      	add	sp, #52	; 0x34
 80077e0:	ecbd 8b04 	vpop	{d8-d9}
 80077e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80077e8:	0802d3b8 	.word	0x0802d3b8
 80077ec:	0802e158 	.word	0x0802e158
 80077f0:	0802e320 	.word	0x0802e320
 80077f4:	0802de8c 	.word	0x0802de8c
 80077f8:	0802d3a0 	.word	0x0802d3a0
 80077fc:	080074bf 	.word	0x080074bf
 8007800:	0802b808 	.word	0x0802b808

08007804 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007804:	4770      	bx	lr

08007806 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007806:	4770      	bx	lr

08007808 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007808:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800780a:	68c2      	ldr	r2, [r0, #12]
 800780c:	6844      	ldr	r4, [r0, #4]
 800780e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007810:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007812:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007816:	07d2      	lsls	r2, r2, #31
 8007818:	bf48      	it	mi
 800781a:	5962      	ldrmi	r2, [r4, r5]
 800781c:	689b      	ldr	r3, [r3, #8]
    }
 800781e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007820:	bf48      	it	mi
 8007822:	58d3      	ldrmi	r3, [r2, r3]
 8007824:	4718      	bx	r3

08007826 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007826:	6843      	ldr	r3, [r0, #4]
 8007828:	b12b      	cbz	r3, 8007836 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800782a:	6883      	ldr	r3, [r0, #8]
 800782c:	b92b      	cbnz	r3, 800783a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800782e:	68c0      	ldr	r0, [r0, #12]
 8007830:	f000 0001 	and.w	r0, r0, #1
 8007834:	4770      	bx	lr
 8007836:	4618      	mov	r0, r3
 8007838:	4770      	bx	lr
 800783a:	2001      	movs	r0, #1
    }
 800783c:	4770      	bx	lr

0800783e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800783e:	b510      	push	{r4, lr}
 8007840:	2110      	movs	r1, #16
 8007842:	4604      	mov	r4, r0
 8007844:	f021 fbfb 	bl	802903e <_ZdlPvj>
 8007848:	4620      	mov	r0, r4
 800784a:	bd10      	pop	{r4, pc}

0800784c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800784c:	b510      	push	{r4, lr}
 800784e:	4b03      	ldr	r3, [pc, #12]	; (800785c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007850:	6003      	str	r3, [r0, #0]
 8007852:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007854:	f00b fe7a 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007858:	4620      	mov	r0, r4
 800785a:	bd10      	pop	{r4, pc}
 800785c:	0802d404 	.word	0x0802d404

08007860 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007860:	b507      	push	{r0, r1, r2, lr}
 8007862:	4b07      	ldr	r3, [pc, #28]	; (8007880 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007864:	6003      	str	r3, [r0, #0]
 8007866:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007868:	f00b fe70 	bl	801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800786c:	9801      	ldr	r0, [sp, #4]
 800786e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007872:	f021 fbe4 	bl	802903e <_ZdlPvj>
 8007876:	9801      	ldr	r0, [sp, #4]
 8007878:	b003      	add	sp, #12
 800787a:	f85d fb04 	ldr.w	pc, [sp], #4
 800787e:	bf00      	nop
 8007880:	0802d404 	.word	0x0802d404

08007884 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007884:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007888:	4288      	cmp	r0, r1
{
 800788a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800788c:	d105      	bne.n	800789a <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800788e:	f00d fb5f 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007892:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007896:	f7fb bfef 	b.w	8003878 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800789a:	bd08      	pop	{r3, pc}

0800789c <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 800789c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078a0:	ed2d 8b04 	vpush	{d8-d9}
 80078a4:	4604      	mov	r4, r0
 80078a6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80078a8:	46a3      	mov	fp, r4
 80078aa:	2500      	movs	r5, #0
 80078ac:	f00e ffd0 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 80078b0:	4bd1      	ldr	r3, [pc, #836]	; (8007bf8 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80078b2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80078b4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80078b8:	2226      	movs	r2, #38	; 0x26
 80078ba:	4629      	mov	r1, r5
 80078bc:	4658      	mov	r0, fp
 80078be:	f022 fbd6 	bl	802a06e <memset>
 80078c2:	4658      	mov	r0, fp
 80078c4:	f7fa fef2 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 80078c8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80078cc:	26ff      	movs	r6, #255	; 0xff
 80078ce:	4bcb      	ldr	r3, [pc, #812]	; (8007bfc <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 80078d0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80078d2:	2226      	movs	r2, #38	; 0x26
 80078d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80078d8:	4629      	mov	r1, r5
 80078da:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80078de:	4650      	mov	r0, sl
 80078e0:	66a5      	str	r5, [r4, #104]	; 0x68
 80078e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80078e6:	f022 fbc2 	bl	802a06e <memset>
 80078ea:	4650      	mov	r0, sl
 80078ec:	f7fa fede 	bl	80026ac <_ZN8touchgfx6WidgetC1Ev>
 80078f0:	4bc3      	ldr	r3, [pc, #780]	; (8007c00 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 80078f2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80078f4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80078f8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80078fc:	a90a      	add	r1, sp, #40	; 0x28
 80078fe:	4650      	mov	r0, sl
 8007900:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007904:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007908:	f00a fe19 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800790c:	4648      	mov	r0, r9
 800790e:	f7fa fedf 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8007912:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007916:	4bbb      	ldr	r3, [pc, #748]	; (8007c04 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007918:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800791c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007920:	4638      	mov	r0, r7
 8007922:	f009 fcd5 	bl	80112d0 <_ZN8touchgfx4LineC1Ev>
 8007926:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800792a:	4618      	mov	r0, r3
 800792c:	9303      	str	r3, [sp, #12]
 800792e:	f7f9 fb8b 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007932:	4bb5      	ldr	r3, [pc, #724]	; (8007c08 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007934:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007938:	3324      	adds	r3, #36	; 0x24
 800793a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800793e:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007942:	4618      	mov	r0, r3
 8007944:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007948:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800794c:	ee09 3a10 	vmov	s18, r3
 8007950:	f00a ff36 	bl	80127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007954:	4640      	mov	r0, r8
 8007956:	f7fa febb 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 800795a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800795e:	4618      	mov	r0, r3
 8007960:	ee08 3a10 	vmov	s16, r3
 8007964:	f7fa feb4 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
 8007968:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800796c:	4618      	mov	r0, r3
 800796e:	ee08 3a90 	vmov	s17, r3
 8007972:	f7fa fead 	bl	80026d0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007976:	4aa5      	ldr	r2, [pc, #660]	; (8007c0c <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007978:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800797c:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007980:	4aa3      	ldr	r2, [pc, #652]	; (8007c10 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007982:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007986:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 800798a:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800798e:	f00b fdd3 	bl	8013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007992:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007996:	462a      	mov	r2, r5
 8007998:	4658      	mov	r0, fp
 800799a:	9300      	str	r3, [sp, #0]
 800799c:	4629      	mov	r1, r5
 800799e:	23f0      	movs	r3, #240	; 0xf0
 80079a0:	f7fa fe70 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 80079a4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80079a6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80079aa:	66a3      	str	r3, [r4, #104]	; 0x68
 80079ac:	4659      	mov	r1, fp
 80079ae:	4630      	mov	r0, r6
 80079b0:	f008 f836 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80079b4:	462a      	mov	r2, r5
 80079b6:	4650      	mov	r0, sl
 80079b8:	4629      	mov	r1, r5
 80079ba:	f7fa fe56 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80079be:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80079c0:	4650      	mov	r0, sl
 80079c2:	a90a      	add	r1, sp, #40	; 0x28
 80079c4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079c8:	f00a fdb9 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80079cc:	4651      	mov	r1, sl
 80079ce:	4630      	mov	r0, r6
 80079d0:	f008 f826 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80079d4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80079d8:	2156      	movs	r1, #86	; 0x56
 80079da:	4648      	mov	r0, r9
 80079dc:	f7fa fe45 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80079e0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80079e4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80079e8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80079ec:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80079f0:	4650      	mov	r0, sl
 80079f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80079f6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80079fa:	4649      	mov	r1, r9
 80079fc:	4798      	blx	r3
 80079fe:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007a02:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007a06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a0a:	4b82      	ldr	r3, [pc, #520]	; (8007c14 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007a0c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007a0e:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007a12:	b92b      	cbnz	r3, 8007a20 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007a14:	4b80      	ldr	r3, [pc, #512]	; (8007c18 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007a16:	4a81      	ldr	r2, [pc, #516]	; (8007c1c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007a18:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a1a:	4881      	ldr	r0, [pc, #516]	; (8007c20 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007a1c:	f022 f922 	bl	8029c64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007a20:	4b80      	ldr	r3, [pc, #512]	; (8007c24 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a22:	881b      	ldrh	r3, [r3, #0]
 8007a24:	2b12      	cmp	r3, #18
 8007a26:	d803      	bhi.n	8007a30 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007a28:	4b7f      	ldr	r3, [pc, #508]	; (8007c28 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007a2a:	4a7c      	ldr	r2, [pc, #496]	; (8007c1c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007a2c:	2161      	movs	r1, #97	; 0x61
 8007a2e:	e7f4      	b.n	8007a1a <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007a30:	4b7e      	ldr	r3, [pc, #504]	; (8007c2c <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007a32:	2112      	movs	r1, #18
 8007a34:	6818      	ldr	r0, [r3, #0]
 8007a36:	f000 fb1b 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8007a3a:	4a7d      	ldr	r2, [pc, #500]	; (8007c30 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007a3c:	4603      	mov	r3, r0
 8007a3e:	2104      	movs	r1, #4
 8007a40:	4650      	mov	r0, sl
 8007a42:	f010 fbf5 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007a46:	4648      	mov	r0, r9
        wc1 = value;
 8007a48:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007a4c:	f00a f97c 	bl	8011d48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007a50:	4b78      	ldr	r3, [pc, #480]	; (8007c34 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007a52:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007a54:	a90a      	add	r1, sp, #40	; 0x28
 8007a56:	2313      	movs	r3, #19
 8007a58:	4648      	mov	r0, r9
 8007a5a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a5e:	f00a f993 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a62:	4649      	mov	r1, r9
 8007a64:	4630      	mov	r0, r6
 8007a66:	f007 ffdb 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007a6a:	230a      	movs	r3, #10
 8007a6c:	9300      	str	r3, [sp, #0]
 8007a6e:	2232      	movs	r2, #50	; 0x32
 8007a70:	23f0      	movs	r3, #240	; 0xf0
 8007a72:	4629      	mov	r1, r5
 8007a74:	4638      	mov	r0, r7
 8007a76:	f7fa fe05 	bl	8002684 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a7a:	9b03      	ldr	r3, [sp, #12]
 8007a7c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007a80:	22a0      	movs	r2, #160	; 0xa0
 8007a82:	4611      	mov	r1, r2
 8007a84:	4638      	mov	r0, r7
 8007a86:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007a8a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007a8e:	f009 fd35 	bl	80114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007a92:	22a0      	movs	r2, #160	; 0xa0
 8007a94:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007a98:	4638      	mov	r0, r7
 8007a9a:	f009 fd3a 	bl	8011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007a9e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007aa2:	2b20      	cmp	r3, #32
 8007aa4:	d005      	beq.n	8007ab2 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007aa6:	2320      	movs	r3, #32
 8007aa8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007aac:	4638      	mov	r0, r7
 8007aae:	f009 fc2f 	bl	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007ab2:	4638      	mov	r0, r7
 8007ab4:	2101      	movs	r1, #1
 8007ab6:	f009 fd37 	bl	8011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007aba:	4639      	mov	r1, r7
 8007abc:	4630      	mov	r0, r6
 8007abe:	f007 ffaf 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007ac2:	ee19 0a10 	vmov	r0, s18
 8007ac6:	22f0      	movs	r2, #240	; 0xf0
 8007ac8:	2121      	movs	r1, #33	; 0x21
 8007aca:	f7fa fdce 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8007ace:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007ad0:	aa0a      	add	r2, sp, #40	; 0x28
 8007ad2:	a909      	add	r1, sp, #36	; 0x24
 8007ad4:	ee19 0a10 	vmov	r0, s18
 8007ad8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007adc:	2302      	movs	r3, #2
 8007ade:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ae2:	f00a fb36 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007ae6:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8007ae8:	ee19 0a10 	vmov	r0, s18
 8007aec:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007af0:	f7fa fe10 	bl	8002714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007af4:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007af8:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007afc:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007b00:	ee19 1a10 	vmov	r1, s18
 8007b04:	4630      	mov	r0, r6
        colorPressed = col;
 8007b06:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007b0a:	ad04      	add	r5, sp, #16
 8007b0c:	f007 ff88 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007b10:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007b14:	225b      	movs	r2, #91	; 0x5b
 8007b16:	4640      	mov	r0, r8
 8007b18:	2105      	movs	r1, #5
 8007b1a:	f7fa fda6 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007b1e:	4641      	mov	r1, r8
 8007b20:	4628      	mov	r0, r5
        color = newColor;
 8007b22:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007b26:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007b2a:	f009 fe93 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b2e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007b32:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007b36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007b3a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007c34 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007b3e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007b42:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007b44:	a90a      	add	r1, sp, #40	; 0x28
 8007b46:	4640      	mov	r0, r8
 8007b48:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b4c:	f00a f91c 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b50:	4641      	mov	r1, r8
 8007b52:	4630      	mov	r0, r6
 8007b54:	f007 ff64 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007b58:	ee18 0a10 	vmov	r0, s16
 8007b5c:	2223      	movs	r2, #35	; 0x23
 8007b5e:	2145      	movs	r1, #69	; 0x45
 8007b60:	f7fa fd83 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8007b64:	ee18 1a10 	vmov	r1, s16
 8007b68:	4628      	mov	r0, r5
        color = newColor;
 8007b6a:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007b6e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007b72:	f009 fe6f 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b76:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007b7a:	ee18 3a10 	vmov	r3, s16
 8007b7e:	333c      	adds	r3, #60	; 0x3c
 8007b80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b84:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007b86:	ee18 0a10 	vmov	r0, s16
 8007b8a:	a90a      	add	r1, sp, #40	; 0x28
 8007b8c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b90:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007b94:	f00a f8f8 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b98:	ee18 1a10 	vmov	r1, s16
 8007b9c:	4630      	mov	r0, r6
 8007b9e:	f007 ff3f 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007ba2:	ee18 0a90 	vmov	r0, s17
 8007ba6:	220c      	movs	r2, #12
 8007ba8:	2136      	movs	r1, #54	; 0x36
 8007baa:	f7fa fd5e 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8007bae:	ee18 1a90 	vmov	r1, s17
 8007bb2:	4628      	mov	r0, r5
        color = newColor;
 8007bb4:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007bb8:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007bbc:	f009 fe4a 	bl	8011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bc0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007bc4:	ee18 3a90 	vmov	r3, s17
 8007bc8:	333c      	adds	r3, #60	; 0x3c
 8007bca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007bce:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007bd0:	ee18 0a90 	vmov	r0, s17
 8007bd4:	a90a      	add	r1, sp, #40	; 0x28
 8007bd6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bda:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007bde:	f00a f8d3 	bl	8011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007be2:	4630      	mov	r0, r6
 8007be4:	ee18 1a90 	vmov	r1, s17
 8007be8:	f007 ff1a 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007bec:	4620      	mov	r0, r4
 8007bee:	b00d      	add	sp, #52	; 0x34
 8007bf0:	ecbd 8b04 	vpop	{d8-d9}
 8007bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007bf8:	0802d404 	.word	0x0802d404
 8007bfc:	0802e158 	.word	0x0802e158
 8007c00:	0802e320 	.word	0x0802e320
 8007c04:	0802b818 	.word	0x0802b818
 8007c08:	0802de8c 	.word	0x0802de8c
 8007c0c:	0802d3ec 	.word	0x0802d3ec
 8007c10:	08007885 	.word	0x08007885
 8007c14:	20012ed4 	.word	0x20012ed4
 8007c18:	0802b658 	.word	0x0802b658
 8007c1c:	0802b75a 	.word	0x0802b75a
 8007c20:	0802b6d5 	.word	0x0802b6d5
 8007c24:	20012ed8 	.word	0x20012ed8
 8007c28:	0802b71c 	.word	0x0802b71c
 8007c2c:	20012ee0 	.word	0x20012ee0
 8007c30:	0802b792 	.word	0x0802b792
 8007c34:	0802b808 	.word	0x0802b808

08007c38 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007c38:	4770      	bx	lr

08007c3a <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007c3a:	4770      	bx	lr

08007c3c <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007c3c:	b510      	push	{r4, lr}
}
 8007c3e:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007c40:	4604      	mov	r4, r0
}
 8007c42:	f021 f9fc 	bl	802903e <_ZdlPvj>
 8007c46:	4620      	mov	r0, r4
 8007c48:	bd10      	pop	{r4, pc}
	...

08007c4c <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007c4c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007c50:	4604      	mov	r4, r0
 8007c52:	4626      	mov	r6, r4
 8007c54:	f00e fdfc 	bl	8016850 <_ZN8touchgfx6ScreenC1Ev>
 8007c58:	2500      	movs	r5, #0
 8007c5a:	4b2e      	ldr	r3, [pc, #184]	; (8007d14 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007c5c:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007c5e:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007c62:	4b2d      	ldr	r3, [pc, #180]	; (8007d18 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007c64:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007c66:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007c6a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007c6e:	23ff      	movs	r3, #255	; 0xff
 8007c70:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007c74:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007c78:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007c7c:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007c80:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007c84:	4a25      	ldr	r2, [pc, #148]	; (8007d1c <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007c86:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007c8a:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007c8e:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007c90:	a901      	add	r1, sp, #4
 8007c92:	4638      	mov	r0, r7
 8007c94:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007c98:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007c9c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007ca0:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007ca4:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007ca8:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007cac:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007cb0:	66a5      	str	r5, [r4, #104]	; 0x68
 8007cb2:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007cb6:	f00a fc42 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007cba:	462a      	mov	r2, r5
 8007cbc:	4629      	mov	r1, r5
 8007cbe:	4630      	mov	r0, r6
 8007cc0:	f7fa fcd3 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007cc4:	4630      	mov	r0, r6
 8007cc6:	21f0      	movs	r1, #240	; 0xf0
 8007cc8:	f7f9 f90a 	bl	8000ee0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007ccc:	4630      	mov	r0, r6
 8007cce:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007cd2:	f7f9 f907 	bl	8000ee4 <_ZN8touchgfx8Drawable9setHeightEs>
 8007cd6:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007cda:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007cde:	66a3      	str	r3, [r4, #104]	; 0x68
 8007ce0:	4631      	mov	r1, r6
 8007ce2:	4640      	mov	r0, r8
 8007ce4:	f007 fe9c 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007ce8:	462a      	mov	r2, r5
 8007cea:	4638      	mov	r0, r7
 8007cec:	f06f 0102 	mvn.w	r1, #2
 8007cf0:	f7fa fcbb 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8007cf4:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007cf6:	a901      	add	r1, sp, #4
 8007cf8:	4638      	mov	r0, r7
 8007cfa:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007cfe:	f00a fc1e 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007d02:	4640      	mov	r0, r8
 8007d04:	4639      	mov	r1, r7
 8007d06:	f007 fe8b 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007d0a:	4620      	mov	r0, r4
 8007d0c:	b002      	add	sp, #8
 8007d0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007d12:	bf00      	nop
 8007d14:	0802d438 	.word	0x0802d438
 8007d18:	0802e158 	.word	0x0802e158
 8007d1c:	0802e320 	.word	0x0802e320

08007d20 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007d20:	4770      	bx	lr
	...

08007d24 <_Z23getFont_verdana_10_4bppv>:
{
 8007d24:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007d26:	4d17      	ldr	r5, [pc, #92]	; (8007d84 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007d28:	682c      	ldr	r4, [r5, #0]
 8007d2a:	f3bf 8f5b 	dmb	ish
 8007d2e:	f014 0401 	ands.w	r4, r4, #1
{
 8007d32:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007d34:	d122      	bne.n	8007d7c <_Z23getFont_verdana_10_4bppv+0x58>
 8007d36:	4628      	mov	r0, r5
 8007d38:	f021 f983 	bl	8029042 <__cxa_guard_acquire>
 8007d3c:	b1f0      	cbz	r0, 8007d7c <_Z23getFont_verdana_10_4bppv+0x58>
 8007d3e:	233f      	movs	r3, #63	; 0x3f
 8007d40:	9309      	str	r3, [sp, #36]	; 0x24
 8007d42:	4b11      	ldr	r3, [pc, #68]	; (8007d88 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007d44:	9308      	str	r3, [sp, #32]
 8007d46:	4b11      	ldr	r3, [pc, #68]	; (8007d8c <_Z23getFont_verdana_10_4bppv+0x68>)
 8007d48:	9307      	str	r3, [sp, #28]
 8007d4a:	2301      	movs	r3, #1
 8007d4c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007d50:	9304      	str	r3, [sp, #16]
 8007d52:	2304      	movs	r3, #4
 8007d54:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007d58:	230a      	movs	r3, #10
 8007d5a:	490d      	ldr	r1, [pc, #52]	; (8007d90 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007d5c:	9300      	str	r3, [sp, #0]
 8007d5e:	225f      	movs	r2, #95	; 0x5f
 8007d60:	230c      	movs	r3, #12
 8007d62:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007d66:	480b      	ldr	r0, [pc, #44]	; (8007d94 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007d68:	940a      	str	r4, [sp, #40]	; 0x28
 8007d6a:	9401      	str	r4, [sp, #4]
 8007d6c:	f7fd f9fc 	bl	8005168 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007d70:	4809      	ldr	r0, [pc, #36]	; (8007d98 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007d72:	f021 ff95 	bl	8029ca0 <atexit>
 8007d76:	4628      	mov	r0, r5
 8007d78:	f021 f96f 	bl	802905a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007d7c:	4805      	ldr	r0, [pc, #20]	; (8007d94 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007d7e:	b00f      	add	sp, #60	; 0x3c
 8007d80:	bd30      	pop	{r4, r5, pc}
 8007d82:	bf00      	nop
 8007d84:	20001f9c 	.word	0x20001f9c
 8007d88:	08044fec 	.word	0x08044fec
 8007d8c:	0804514c 	.word	0x0804514c
 8007d90:	080442d4 	.word	0x080442d4
 8007d94:	20001fa0 	.word	0x20001fa0
 8007d98:	08007d21 	.word	0x08007d21

08007d9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007d9c:	4770      	bx	lr
	...

08007da0 <_Z23getFont_verdana_12_4bppv>:
{
 8007da0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007da2:	4d17      	ldr	r5, [pc, #92]	; (8007e00 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007da4:	682c      	ldr	r4, [r5, #0]
 8007da6:	f3bf 8f5b 	dmb	ish
 8007daa:	f014 0401 	ands.w	r4, r4, #1
{
 8007dae:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007db0:	d122      	bne.n	8007df8 <_Z23getFont_verdana_12_4bppv+0x58>
 8007db2:	4628      	mov	r0, r5
 8007db4:	f021 f945 	bl	8029042 <__cxa_guard_acquire>
 8007db8:	b1f0      	cbz	r0, 8007df8 <_Z23getFont_verdana_12_4bppv+0x58>
 8007dba:	233f      	movs	r3, #63	; 0x3f
 8007dbc:	9309      	str	r3, [sp, #36]	; 0x24
 8007dbe:	4b11      	ldr	r3, [pc, #68]	; (8007e04 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007dc0:	9308      	str	r3, [sp, #32]
 8007dc2:	4b11      	ldr	r3, [pc, #68]	; (8007e08 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007dc4:	9307      	str	r3, [sp, #28]
 8007dc6:	2301      	movs	r3, #1
 8007dc8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007dcc:	9304      	str	r3, [sp, #16]
 8007dce:	2304      	movs	r3, #4
 8007dd0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007dd4:	230c      	movs	r3, #12
 8007dd6:	490d      	ldr	r1, [pc, #52]	; (8007e0c <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007dd8:	9300      	str	r3, [sp, #0]
 8007dda:	2260      	movs	r2, #96	; 0x60
 8007ddc:	230f      	movs	r3, #15
 8007dde:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007de2:	480b      	ldr	r0, [pc, #44]	; (8007e10 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007de4:	940a      	str	r4, [sp, #40]	; 0x28
 8007de6:	9401      	str	r4, [sp, #4]
 8007de8:	f7fd f9be 	bl	8005168 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007dec:	4809      	ldr	r0, [pc, #36]	; (8007e14 <_Z23getFont_verdana_12_4bppv+0x74>)
 8007dee:	f021 ff57 	bl	8029ca0 <atexit>
 8007df2:	4628      	mov	r0, r5
 8007df4:	f021 f931 	bl	802905a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007df8:	4805      	ldr	r0, [pc, #20]	; (8007e10 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007dfa:	b00f      	add	sp, #60	; 0x3c
 8007dfc:	bd30      	pop	{r4, r5, pc}
 8007dfe:	bf00      	nop
 8007e00:	20001fcc 	.word	0x20001fcc
 8007e04:	08045020 	.word	0x08045020
 8007e08:	08045150 	.word	0x08045150
 8007e0c:	08044808 	.word	0x08044808
 8007e10:	20001fd0 	.word	0x20001fd0
 8007e14:	08007d9d 	.word	0x08007d9d

08007e18 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007e18:	4770      	bx	lr
	...

08007e1c <_Z23getFont_verdana_19_4bppv>:
{
 8007e1c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007e1e:	4d17      	ldr	r5, [pc, #92]	; (8007e7c <_Z23getFont_verdana_19_4bppv+0x60>)
 8007e20:	682c      	ldr	r4, [r5, #0]
 8007e22:	f3bf 8f5b 	dmb	ish
 8007e26:	f014 0401 	ands.w	r4, r4, #1
{
 8007e2a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007e2c:	d122      	bne.n	8007e74 <_Z23getFont_verdana_19_4bppv+0x58>
 8007e2e:	4628      	mov	r0, r5
 8007e30:	f021 f907 	bl	8029042 <__cxa_guard_acquire>
 8007e34:	b1f0      	cbz	r0, 8007e74 <_Z23getFont_verdana_19_4bppv+0x58>
 8007e36:	233f      	movs	r3, #63	; 0x3f
 8007e38:	9309      	str	r3, [sp, #36]	; 0x24
 8007e3a:	4b11      	ldr	r3, [pc, #68]	; (8007e80 <_Z23getFont_verdana_19_4bppv+0x64>)
 8007e3c:	9308      	str	r3, [sp, #32]
 8007e3e:	4b11      	ldr	r3, [pc, #68]	; (8007e84 <_Z23getFont_verdana_19_4bppv+0x68>)
 8007e40:	9307      	str	r3, [sp, #28]
 8007e42:	2301      	movs	r3, #1
 8007e44:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007e48:	9304      	str	r3, [sp, #16]
 8007e4a:	2304      	movs	r3, #4
 8007e4c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007e50:	2313      	movs	r3, #19
 8007e52:	490d      	ldr	r1, [pc, #52]	; (8007e88 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007e54:	9300      	str	r3, [sp, #0]
 8007e56:	222f      	movs	r2, #47	; 0x2f
 8007e58:	2317      	movs	r3, #23
 8007e5a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007e5e:	480b      	ldr	r0, [pc, #44]	; (8007e8c <_Z23getFont_verdana_19_4bppv+0x70>)
 8007e60:	940a      	str	r4, [sp, #40]	; 0x28
 8007e62:	9401      	str	r4, [sp, #4]
 8007e64:	f7fd f980 	bl	8005168 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007e68:	4809      	ldr	r0, [pc, #36]	; (8007e90 <_Z23getFont_verdana_19_4bppv+0x74>)
 8007e6a:	f021 ff19 	bl	8029ca0 <atexit>
 8007e6e:	4628      	mov	r0, r5
 8007e70:	f021 f8f3 	bl	802905a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007e74:	4805      	ldr	r0, [pc, #20]	; (8007e8c <_Z23getFont_verdana_19_4bppv+0x70>)
 8007e76:	b00f      	add	sp, #60	; 0x3c
 8007e78:	bd30      	pop	{r4, r5, pc}
 8007e7a:	bf00      	nop
 8007e7c:	20001ffc 	.word	0x20001ffc
 8007e80:	080450a4 	.word	0x080450a4
 8007e84:	08045154 	.word	0x08045154
 8007e88:	08044d48 	.word	0x08044d48
 8007e8c:	20002000 	.word	0x20002000
 8007e90:	08007e19 	.word	0x08007e19

08007e94 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007e94:	4770      	bx	lr
	...

08007e98 <_Z23getFont_verdana_40_4bppv>:
{
 8007e98:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007e9a:	4d16      	ldr	r5, [pc, #88]	; (8007ef4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007e9c:	682c      	ldr	r4, [r5, #0]
 8007e9e:	f3bf 8f5b 	dmb	ish
 8007ea2:	f014 0401 	ands.w	r4, r4, #1
{
 8007ea6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007ea8:	d120      	bne.n	8007eec <_Z23getFont_verdana_40_4bppv+0x54>
 8007eaa:	4628      	mov	r0, r5
 8007eac:	f021 f8c9 	bl	8029042 <__cxa_guard_acquire>
 8007eb0:	b1e0      	cbz	r0, 8007eec <_Z23getFont_verdana_40_4bppv+0x54>
 8007eb2:	233f      	movs	r3, #63	; 0x3f
 8007eb4:	9309      	str	r3, [sp, #36]	; 0x24
 8007eb6:	4b10      	ldr	r3, [pc, #64]	; (8007ef8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007eb8:	9308      	str	r3, [sp, #32]
 8007eba:	4b10      	ldr	r3, [pc, #64]	; (8007efc <_Z23getFont_verdana_40_4bppv+0x64>)
 8007ebc:	4910      	ldr	r1, [pc, #64]	; (8007f00 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007ebe:	4811      	ldr	r0, [pc, #68]	; (8007f04 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007ec0:	940a      	str	r4, [sp, #40]	; 0x28
 8007ec2:	2201      	movs	r2, #1
 8007ec4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007ec8:	2304      	movs	r3, #4
 8007eca:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007ece:	2328      	movs	r3, #40	; 0x28
 8007ed0:	9300      	str	r3, [sp, #0]
 8007ed2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007ed6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007eda:	9405      	str	r4, [sp, #20]
 8007edc:	f7fd f944 	bl	8005168 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007ee0:	4809      	ldr	r0, [pc, #36]	; (8007f08 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007ee2:	f021 fedd 	bl	8029ca0 <atexit>
 8007ee6:	4628      	mov	r0, r5
 8007ee8:	f021 f8b7 	bl	802905a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007eec:	4805      	ldr	r0, [pc, #20]	; (8007f04 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007eee:	b00f      	add	sp, #60	; 0x3c
 8007ef0:	bd30      	pop	{r4, r5, pc}
 8007ef2:	bf00      	nop
 8007ef4:	2000202c 	.word	0x2000202c
 8007ef8:	08045148 	.word	0x08045148
 8007efc:	08045158 	.word	0x08045158
 8007f00:	08044fdc 	.word	0x08044fdc
 8007f04:	20002030 	.word	0x20002030
 8007f08:	08007e95 	.word	0x08007e95

08007f0c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007f0c:	2000      	movs	r0, #0
 8007f0e:	4770      	bx	lr

08007f10 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8007f10:	2000      	movs	r0, #0
 8007f12:	4770      	bx	lr

08007f14 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007f14:	b40e      	push	{r1, r2, r3}
 8007f16:	b503      	push	{r0, r1, lr}
 8007f18:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007f1a:	2100      	movs	r1, #0
{
 8007f1c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007f20:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007f22:	f00d ffd3 	bl	8015ecc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007f26:	b002      	add	sp, #8
 8007f28:	f85d eb04 	ldr.w	lr, [sp], #4
 8007f2c:	b003      	add	sp, #12
 8007f2e:	4770      	bx	lr

08007f30 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007f30:	b40c      	push	{r2, r3}
 8007f32:	b507      	push	{r0, r1, r2, lr}
 8007f34:	ab04      	add	r3, sp, #16
 8007f36:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007f3a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007f3c:	f00d ffc6 	bl	8015ecc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007f40:	b003      	add	sp, #12
 8007f42:	f85d eb04 	ldr.w	lr, [sp], #4
 8007f46:	b002      	add	sp, #8
 8007f48:	4770      	bx	lr
	...

08007f4c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8007f4c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8007f4e:	b510      	push	{r4, lr}
 8007f50:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007f52:	b373      	cbz	r3, 8007fb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007f54:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007f56:	b92b      	cbnz	r3, 8007f64 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007f58:	4b18      	ldr	r3, [pc, #96]	; (8007fbc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007f5a:	4a19      	ldr	r2, [pc, #100]	; (8007fc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007f5c:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8007f5e:	4819      	ldr	r0, [pc, #100]	; (8007fc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007f60:	f021 fe80 	bl	8029c64 <__assert_func>
            return buffer[pos];
 8007f64:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007f66:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007f6a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8007f6c:	b30b      	cbz	r3, 8007fb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8007f6e:	f00f fbaa 	bl	80176c6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007f72:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007f74:	2b01      	cmp	r3, #1
 8007f76:	d803      	bhi.n	8007f80 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007f78:	4b13      	ldr	r3, [pc, #76]	; (8007fc8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8007f7a:	4a14      	ldr	r2, [pc, #80]	; (8007fcc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8007f7c:	21cb      	movs	r1, #203	; 0xcb
 8007f7e:	e7ee      	b.n	8007f5e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007f80:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007f82:	1c53      	adds	r3, r2, #1
 8007f84:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007f86:	2b09      	cmp	r3, #9
 8007f88:	4619      	mov	r1, r3
 8007f8a:	bf88      	it	hi
 8007f8c:	f1a3 010a 	subhi.w	r1, r3, #10
 8007f90:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007f94:	f640 103f 	movw	r0, #2367	; 0x93f
 8007f98:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8007f9a:	4281      	cmp	r1, r0
 8007f9c:	d109      	bne.n	8007fb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007f9e:	2b0a      	cmp	r3, #10
 8007fa0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007fa4:	bf28      	it	cs
 8007fa6:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007fa8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007fac:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007fae:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007fb0:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007fb2:	4620      	mov	r0, r4
}
 8007fb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007fb8:	f00f ba88 	b.w	80174cc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007fbc:	0802d464 	.word	0x0802d464
 8007fc0:	0802d46d 	.word	0x0802d46d
 8007fc4:	0802d518 	.word	0x0802d518
 8007fc8:	0802d562 	.word	0x0802d562
 8007fcc:	0802d570 	.word	0x0802d570

08007fd0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007fd0:	f00f ba43 	b.w	801745a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007fd4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007fd4:	b510      	push	{r4, lr}
 8007fd6:	b086      	sub	sp, #24
 8007fd8:	ac02      	add	r4, sp, #8
 8007fda:	e884 0006 	stmia.w	r4, {r1, r2}
 8007fde:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007fe0:	ab0a      	add	r3, sp, #40	; 0x28
 8007fe2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007fe4:	9301      	str	r3, [sp, #4]
 8007fe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007fe8:	9300      	str	r3, [sp, #0]
 8007fea:	4621      	mov	r1, r4
 8007fec:	9b08      	ldr	r3, [sp, #32]
 8007fee:	f00c fb31 	bl	8014654 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8007ff2:	b006      	add	sp, #24
 8007ff4:	bd10      	pop	{r4, pc}
	...

08007ff8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007ff8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007ffa:	bb18      	cbnz	r0, 8008044 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007ffc:	4b12      	ldr	r3, [pc, #72]	; (8008048 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8007ffe:	4813      	ldr	r0, [pc, #76]	; (800804c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008000:	681c      	ldr	r4, [r3, #0]
 8008002:	4913      	ldr	r1, [pc, #76]	; (8008050 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008004:	b1b4      	cbz	r4, 8008034 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008006:	6822      	ldr	r2, [r4, #0]
 8008008:	4422      	add	r2, r4
 800800a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800800c:	6862      	ldr	r2, [r4, #4]
 800800e:	4422      	add	r2, r4
 8008010:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008012:	68a2      	ldr	r2, [r4, #8]
 8008014:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008016:	4b0f      	ldr	r3, [pc, #60]	; (8008054 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008018:	2200      	movs	r2, #0
 800801a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800801c:	f000 f838 	bl	8008090 <_ZN17TypedTextDatabase8getFontsEv>
 8008020:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008022:	f000 f833 	bl	800808c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008026:	4b0c      	ldr	r3, [pc, #48]	; (8008058 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008028:	601c      	str	r4, [r3, #0]
        fonts = f;
 800802a:	4b0c      	ldr	r3, [pc, #48]	; (800805c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800802c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800802e:	4b0c      	ldr	r3, [pc, #48]	; (8008060 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008030:	8018      	strh	r0, [r3, #0]
    }
}
 8008032:	e007      	b.n	8008044 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008034:	4b0b      	ldr	r3, [pc, #44]	; (8008064 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008036:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008038:	4b0b      	ldr	r3, [pc, #44]	; (8008068 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800803a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800803c:	4b0b      	ldr	r3, [pc, #44]	; (800806c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800803e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008040:	2c00      	cmp	r4, #0
 8008042:	d1e8      	bne.n	8008016 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008044:	bd38      	pop	{r3, r4, r5, pc}
 8008046:	bf00      	nop
 8008048:	2000205c 	.word	0x2000205c
 800804c:	20002060 	.word	0x20002060
 8008050:	20002064 	.word	0x20002064
 8008054:	20002068 	.word	0x20002068
 8008058:	20012ed4 	.word	0x20012ed4
 800805c:	20012edc 	.word	0x20012edc
 8008060:	20012ed8 	.word	0x20012ed8
 8008064:	080452b0 	.word	0x080452b0
 8008068:	0804515c 	.word	0x0804515c
 800806c:	080457cc 	.word	0x080457cc

08008070 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008070:	4b04      	ldr	r3, [pc, #16]	; (8008084 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008072:	681b      	ldr	r3, [r3, #0]
 8008074:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008078:	4b03      	ldr	r3, [pc, #12]	; (8008088 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800807a:	681b      	ldr	r3, [r3, #0]
}
 800807c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008080:	4770      	bx	lr
 8008082:	bf00      	nop
 8008084:	20002064 	.word	0x20002064
 8008088:	20002060 	.word	0x20002060

0800808c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800808c:	2055      	movs	r0, #85	; 0x55
 800808e:	4770      	bx	lr

08008090 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008090:	4800      	ldr	r0, [pc, #0]	; (8008094 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008092:	4770      	bx	lr
 8008094:	2000206c 	.word	0x2000206c

08008098 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008098:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800809a:	f7ff febf 	bl	8007e1c <_Z23getFont_verdana_19_4bppv>
};
 800809e:	4c06      	ldr	r4, [pc, #24]	; (80080b8 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80080a0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80080a2:	f7ff fef9 	bl	8007e98 <_Z23getFont_verdana_40_4bppv>
};
 80080a6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80080a8:	f7ff fe3c 	bl	8007d24 <_Z23getFont_verdana_10_4bppv>
};
 80080ac:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 80080ae:	f7ff fe77 	bl	8007da0 <_Z23getFont_verdana_12_4bppv>
};
 80080b2:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 80080b4:	bd10      	pop	{r4, pc}
 80080b6:	bf00      	nop
 80080b8:	2000206c 	.word	0x2000206c

080080bc <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 80080bc:	4770      	bx	lr

080080be <_ZThn4_N20CalibrationPresenterD1Ev>:
 80080be:	3804      	subs	r0, #4
 80080c0:	4770      	bx	lr

080080c2 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 80080c2:	4770      	bx	lr

080080c4 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80080c4:	68c0      	ldr	r0, [r0, #12]
 80080c6:	6803      	ldr	r3, [r0, #0]
 80080c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80080ca:	4718      	bx	r3

080080cc <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80080cc:	f1a0 0004 	sub.w	r0, r0, #4
 80080d0:	f7ff bff8 	b.w	80080c4 <_ZN20CalibrationPresenter15setTimeoutValueEi>

080080d4 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 80080d4:	b510      	push	{r4, lr}
 80080d6:	2110      	movs	r1, #16
 80080d8:	4604      	mov	r4, r0
 80080da:	f020 ffb0 	bl	802903e <_ZdlPvj>
 80080de:	4620      	mov	r0, r4
 80080e0:	bd10      	pop	{r4, pc}

080080e2 <_ZThn4_N20CalibrationPresenterD0Ev>:
 80080e2:	f1a0 0004 	sub.w	r0, r0, #4
 80080e6:	e7f5      	b.n	80080d4 <_ZN20CalibrationPresenterD0Ev>

080080e8 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 80080e8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80080ea:	2200      	movs	r2, #0
 80080ec:	6082      	str	r2, [r0, #8]
    : view(v)
 80080ee:	4a04      	ldr	r2, [pc, #16]	; (8008100 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 80080f0:	60c1      	str	r1, [r0, #12]
 80080f2:	f102 0408 	add.w	r4, r2, #8
 80080f6:	3224      	adds	r2, #36	; 0x24
 80080f8:	6004      	str	r4, [r0, #0]
 80080fa:	6042      	str	r2, [r0, #4]
}
 80080fc:	bd10      	pop	{r4, pc}
 80080fe:	bf00      	nop
 8008100:	0802d644 	.word	0x0802d644

08008104 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8008104:	4770      	bx	lr
	...

08008108 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8008108:	b510      	push	{r4, lr}
 800810a:	4b03      	ldr	r3, [pc, #12]	; (8008118 <_ZN15CalibrationViewD1Ev+0x10>)
 800810c:	6003      	str	r3, [r0, #0]
 800810e:	4604      	mov	r4, r0
 8008110:	f7fa fa30 	bl	8002574 <_ZN19CalibrationViewBaseD1Ev>
 8008114:	4620      	mov	r0, r4
 8008116:	bd10      	pop	{r4, pc}
 8008118:	0802d680 	.word	0x0802d680

0800811c <_ZN15CalibrationViewD0Ev>:
 800811c:	b510      	push	{r4, lr}
 800811e:	4604      	mov	r4, r0
 8008120:	f7ff fff2 	bl	8008108 <_ZN15CalibrationViewD1Ev>
 8008124:	4620      	mov	r0, r4
 8008126:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800812a:	f020 ff88 	bl	802903e <_ZdlPvj>
 800812e:	4620      	mov	r0, r4
 8008130:	bd10      	pop	{r4, pc}
	...

08008134 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8008134:	b510      	push	{r4, lr}
 8008136:	4604      	mov	r4, r0
 8008138:	f7fa fb30 	bl	800279c <_ZN19CalibrationViewBaseC1Ev>
 800813c:	4b01      	ldr	r3, [pc, #4]	; (8008144 <_ZN15CalibrationViewC1Ev+0x10>)
 800813e:	6023      	str	r3, [r4, #0]
}
 8008140:	4620      	mov	r0, r4
 8008142:	bd10      	pop	{r4, pc}
 8008144:	0802d680 	.word	0x0802d680

08008148 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008148:	f7fa b9e1 	b.w	800250e <_ZN19CalibrationViewBase11setupScreenEv>

0800814c <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 800814c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800814e:	4a0a      	ldr	r2, [pc, #40]	; (8008178 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008150:	4605      	mov	r5, r0
 8008152:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008154:	460b      	mov	r3, r1
 8008156:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800815a:	2104      	movs	r1, #4
 800815c:	f010 f868 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008160:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008164:	f00d ffdc 	bl	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008168:	b92c      	cbnz	r4, 8008176 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 800816a:	f00c fef1 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800816e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008172:	f7fb bc71 	b.w	8003a58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008176:	bd38      	pop	{r3, r4, r5, pc}
 8008178:	0802d674 	.word	0x0802d674

0800817c <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 800817c:	4770      	bx	lr

0800817e <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 800817e:	3804      	subs	r0, #4
 8008180:	4770      	bx	lr

08008182 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8008182:	4770      	bx	lr

08008184 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8008184:	4770      	bx	lr

08008186 <_ZN25Calibration_HallPresenterD0Ev>:
 8008186:	b510      	push	{r4, lr}
 8008188:	2110      	movs	r1, #16
 800818a:	4604      	mov	r4, r0
 800818c:	f020 ff57 	bl	802903e <_ZdlPvj>
 8008190:	4620      	mov	r0, r4
 8008192:	bd10      	pop	{r4, pc}

08008194 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8008194:	f1a0 0004 	sub.w	r0, r0, #4
 8008198:	e7f5      	b.n	8008186 <_ZN25Calibration_HallPresenterD0Ev>

0800819a <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 800819a:	4770      	bx	lr

0800819c <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 800819c:	b510      	push	{r4, lr}
 800819e:	2200      	movs	r2, #0
 80081a0:	6082      	str	r2, [r0, #8]
    : view(v)
 80081a2:	4a04      	ldr	r2, [pc, #16]	; (80081b4 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80081a4:	60c1      	str	r1, [r0, #12]
 80081a6:	f102 0408 	add.w	r4, r2, #8
 80081aa:	3224      	adds	r2, #36	; 0x24
 80081ac:	6004      	str	r4, [r0, #0]
 80081ae:	6042      	str	r2, [r0, #4]
}
 80081b0:	bd10      	pop	{r4, pc}
 80081b2:	bf00      	nop
 80081b4:	0802d6b0 	.word	0x0802d6b0

080081b8 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80081b8:	4770      	bx	lr

080081ba <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80081ba:	4770      	bx	lr

080081bc <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 80081bc:	b510      	push	{r4, lr}
 80081be:	4b03      	ldr	r3, [pc, #12]	; (80081cc <_ZN20Calibration_HallViewD1Ev+0x10>)
 80081c0:	6003      	str	r3, [r0, #0]
 80081c2:	4604      	mov	r4, r0
 80081c4:	f7fa fd2e 	bl	8002c24 <_ZN24Calibration_HallViewBaseD1Ev>
 80081c8:	4620      	mov	r0, r4
 80081ca:	bd10      	pop	{r4, pc}
 80081cc:	0802d6e8 	.word	0x0802d6e8

080081d0 <_ZN20Calibration_HallViewD0Ev>:
 80081d0:	b510      	push	{r4, lr}
 80081d2:	4604      	mov	r4, r0
 80081d4:	f7ff fff2 	bl	80081bc <_ZN20Calibration_HallViewD1Ev>
 80081d8:	4620      	mov	r0, r4
 80081da:	f241 015c 	movw	r1, #4188	; 0x105c
 80081de:	f020 ff2e 	bl	802903e <_ZdlPvj>
 80081e2:	4620      	mov	r0, r4
 80081e4:	bd10      	pop	{r4, pc}
	...

080081e8 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 80081e8:	b510      	push	{r4, lr}
 80081ea:	4604      	mov	r4, r0
 80081ec:	f7fa fd42 	bl	8002c74 <_ZN24Calibration_HallViewBaseC1Ev>
 80081f0:	4b01      	ldr	r3, [pc, #4]	; (80081f8 <_ZN20Calibration_HallViewC1Ev+0x10>)
 80081f2:	6023      	str	r3, [r4, #0]
}
 80081f4:	4620      	mov	r0, r4
 80081f6:	bd10      	pop	{r4, pc}
 80081f8:	0802d6e8 	.word	0x0802d6e8

080081fc <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 80081fc:	f7fa bcee 	b.w	8002bdc <_ZN24Calibration_HallViewBase11setupScreenEv>

08008200 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008200:	4770      	bx	lr

08008202 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008202:	3804      	subs	r0, #4
 8008204:	4770      	bx	lr

08008206 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008206:	4770      	bx	lr

08008208 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008208:	4770      	bx	lr

0800820a <_ZN24Calibration_PadPresenterD0Ev>:
 800820a:	b510      	push	{r4, lr}
 800820c:	2110      	movs	r1, #16
 800820e:	4604      	mov	r4, r0
 8008210:	f020 ff15 	bl	802903e <_ZdlPvj>
 8008214:	4620      	mov	r0, r4
 8008216:	bd10      	pop	{r4, pc}

08008218 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008218:	f1a0 0004 	sub.w	r0, r0, #4
 800821c:	e7f5      	b.n	800820a <_ZN24Calibration_PadPresenterD0Ev>

0800821e <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800821e:	4770      	bx	lr

08008220 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008220:	b510      	push	{r4, lr}
 8008222:	2200      	movs	r2, #0
 8008224:	6082      	str	r2, [r0, #8]
    : view(v)
 8008226:	4a04      	ldr	r2, [pc, #16]	; (8008238 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008228:	60c1      	str	r1, [r0, #12]
 800822a:	f102 0408 	add.w	r4, r2, #8
 800822e:	3224      	adds	r2, #36	; 0x24
 8008230:	6004      	str	r4, [r0, #0]
 8008232:	6042      	str	r2, [r0, #4]
}
 8008234:	bd10      	pop	{r4, pc}
 8008236:	bf00      	nop
 8008238:	0802d718 	.word	0x0802d718

0800823c <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800823c:	4770      	bx	lr

0800823e <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800823e:	4770      	bx	lr

08008240 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008240:	b510      	push	{r4, lr}
 8008242:	4b03      	ldr	r3, [pc, #12]	; (8008250 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008244:	6003      	str	r3, [r0, #0]
 8008246:	4604      	mov	r4, r0
 8008248:	f7fa fe9c 	bl	8002f84 <_ZN23Calibration_PadViewBaseD1Ev>
 800824c:	4620      	mov	r0, r4
 800824e:	bd10      	pop	{r4, pc}
 8008250:	0802d750 	.word	0x0802d750

08008254 <_ZN19Calibration_PadViewD0Ev>:
 8008254:	b510      	push	{r4, lr}
 8008256:	4604      	mov	r4, r0
 8008258:	f7ff fff2 	bl	8008240 <_ZN19Calibration_PadViewD1Ev>
 800825c:	4620      	mov	r0, r4
 800825e:	f241 015c 	movw	r1, #4188	; 0x105c
 8008262:	f020 feec 	bl	802903e <_ZdlPvj>
 8008266:	4620      	mov	r0, r4
 8008268:	bd10      	pop	{r4, pc}
	...

0800826c <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800826c:	b510      	push	{r4, lr}
 800826e:	4604      	mov	r4, r0
 8008270:	f7fa feb0 	bl	8002fd4 <_ZN23Calibration_PadViewBaseC1Ev>
 8008274:	4b01      	ldr	r3, [pc, #4]	; (800827c <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008276:	6023      	str	r3, [r4, #0]
}
 8008278:	4620      	mov	r0, r4
 800827a:	bd10      	pop	{r4, pc}
 800827c:	0802d750 	.word	0x0802d750

08008280 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008280:	f7fa be5c 	b.w	8002f3c <_ZN23Calibration_PadViewBase11setupScreenEv>

08008284 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008284:	4770      	bx	lr

08008286 <_ZN19FrontendApplicationD0Ev>:
 8008286:	b510      	push	{r4, lr}
 8008288:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800828c:	4604      	mov	r4, r0
 800828e:	f020 fed6 	bl	802903e <_ZdlPvj>
 8008292:	4620      	mov	r0, r4
 8008294:	bd10      	pop	{r4, pc}

08008296 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008296:	b510      	push	{r4, lr}
 8008298:	4604      	mov	r4, r0
    {
        model.tick();
 800829a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800829e:	f000 fb05 	bl	80088ac <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80082a2:	4620      	mov	r0, r4
    }
 80082a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80082a8:	f00c bf16 	b.w	80150d8 <_ZN8touchgfx11Application15handleTickEventEv>

080082ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80082ac:	b510      	push	{r4, lr}
 80082ae:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80082b0:	f7fb faa2 	bl	80037f8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80082b4:	4b01      	ldr	r3, [pc, #4]	; (80082bc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80082b6:	6023      	str	r3, [r4, #0]
{

}
 80082b8:	4620      	mov	r0, r4
 80082ba:	bd10      	pop	{r4, pc}
 80082bc:	0802d788 	.word	0x0802d788

080082c0 <_ZN17Gauge_with_ValuesD1Ev>:
 80082c0:	b510      	push	{r4, lr}
 80082c2:	4b03      	ldr	r3, [pc, #12]	; (80082d0 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80082c4:	6003      	str	r3, [r0, #0]
 80082c6:	4604      	mov	r4, r0
 80082c8:	f7fc fd9c 	bl	8004e04 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80082cc:	4620      	mov	r0, r4
 80082ce:	bd10      	pop	{r4, pc}
 80082d0:	0802d7dc 	.word	0x0802d7dc

080082d4 <_ZN17Gauge_with_ValuesD0Ev>:
 80082d4:	b510      	push	{r4, lr}
 80082d6:	4604      	mov	r4, r0
 80082d8:	f7ff fff2 	bl	80082c0 <_ZN17Gauge_with_ValuesD1Ev>
 80082dc:	4620      	mov	r0, r4
 80082de:	f44f 7162 	mov.w	r1, #904	; 0x388
 80082e2:	f020 feac 	bl	802903e <_ZdlPvj>
 80082e6:	4620      	mov	r0, r4
 80082e8:	bd10      	pop	{r4, pc}
	...

080082ec <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 80082ec:	b510      	push	{r4, lr}
 80082ee:	4604      	mov	r4, r0
 80082f0:	f7fc fd92 	bl	8004e18 <_ZN21Gauge_with_ValuesBaseC1Ev>
 80082f4:	4b01      	ldr	r3, [pc, #4]	; (80082fc <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 80082f6:	6023      	str	r3, [r4, #0]
{

}
 80082f8:	4620      	mov	r0, r4
 80082fa:	bd10      	pop	{r4, pc}
 80082fc:	0802d7dc 	.word	0x0802d7dc

08008300 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8008300:	f7fc bd81 	b.w	8004e06 <_ZN21Gauge_with_ValuesBase10initializeEv>

08008304 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008304:	4770      	bx	lr

08008306 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008306:	3804      	subs	r0, #4
 8008308:	4770      	bx	lr

0800830a <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800830a:	4770      	bx	lr

0800830c <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800830c:	68c0      	ldr	r0, [r0, #12]
 800830e:	6803      	ldr	r3, [r0, #0]
 8008310:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008312:	4718      	bx	r3

08008314 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008314:	f1a0 0004 	sub.w	r0, r0, #4
 8008318:	f7ff bff8 	b.w	800830c <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800831c <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800831c:	b510      	push	{r4, lr}
 800831e:	2110      	movs	r1, #16
 8008320:	4604      	mov	r4, r0
 8008322:	f020 fe8c 	bl	802903e <_ZdlPvj>
 8008326:	4620      	mov	r0, r4
 8008328:	bd10      	pop	{r4, pc}

0800832a <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800832a:	f1a0 0004 	sub.w	r0, r0, #4
 800832e:	e7f5      	b.n	800831c <_ZN18Main_MenuPresenterD0Ev>

08008330 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008330:	b510      	push	{r4, lr}
 8008332:	2200      	movs	r2, #0
 8008334:	6082      	str	r2, [r0, #8]
    : view(v)
 8008336:	4a04      	ldr	r2, [pc, #16]	; (8008348 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008338:	60c1      	str	r1, [r0, #12]
 800833a:	f102 0408 	add.w	r4, r2, #8
 800833e:	3224      	adds	r2, #36	; 0x24
 8008340:	6004      	str	r4, [r0, #0]
 8008342:	6042      	str	r2, [r0, #4]
}
 8008344:	bd10      	pop	{r4, pc}
 8008346:	bf00      	nop
 8008348:	0802d868 	.word	0x0802d868

0800834c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800834c:	4770      	bx	lr
	...

08008350 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008350:	b510      	push	{r4, lr}
 8008352:	4b03      	ldr	r3, [pc, #12]	; (8008360 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008354:	6003      	str	r3, [r0, #0]
 8008356:	4604      	mov	r4, r0
 8008358:	f7fc ff5a 	bl	8005210 <_ZN17Main_MenuViewBaseD1Ev>
 800835c:	4620      	mov	r0, r4
 800835e:	bd10      	pop	{r4, pc}
 8008360:	0802d8a0 	.word	0x0802d8a0

08008364 <_ZN13Main_MenuViewD0Ev>:
 8008364:	b510      	push	{r4, lr}
 8008366:	4604      	mov	r4, r0
 8008368:	f7ff fff2 	bl	8008350 <_ZN13Main_MenuViewD1Ev>
 800836c:	4620      	mov	r0, r4
 800836e:	f241 117c 	movw	r1, #4476	; 0x117c
 8008372:	f020 fe64 	bl	802903e <_ZdlPvj>
 8008376:	4620      	mov	r0, r4
 8008378:	bd10      	pop	{r4, pc}
	...

0800837c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800837c:	b510      	push	{r4, lr}
 800837e:	4604      	mov	r4, r0
 8008380:	f7fc ff90 	bl	80052a4 <_ZN17Main_MenuViewBaseC1Ev>
 8008384:	4b01      	ldr	r3, [pc, #4]	; (800838c <_ZN13Main_MenuViewC1Ev+0x10>)
 8008386:	6023      	str	r3, [r4, #0]
}
 8008388:	4620      	mov	r0, r4
 800838a:	bd10      	pop	{r4, pc}
 800838c:	0802d8a0 	.word	0x0802d8a0

08008390 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008390:	f7fc bf1a 	b.w	80051c8 <_ZN17Main_MenuViewBase11setupScreenEv>

08008394 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008394:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008396:	4a0a      	ldr	r2, [pc, #40]	; (80083c0 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008398:	4605      	mov	r5, r0
 800839a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800839c:	460b      	mov	r3, r1
 800839e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80083a2:	2104      	movs	r1, #4
 80083a4:	f00f ff44 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80083a8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80083ac:	f00d feb8 	bl	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80083b0:	b92c      	cbnz	r4, 80083be <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80083b2:	f00c fdcd 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80083b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80083ba:	f7fb bb4d 	b.w	8003a58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80083be:	bd38      	pop	{r3, r4, r5, pc}
 80083c0:	0802d674 	.word	0x0802d674

080083c4 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80083c4:	4770      	bx	lr

080083c6 <_ZThn4_N20MeasurementPresenterD1Ev>:
 80083c6:	3804      	subs	r0, #4
 80083c8:	4770      	bx	lr

080083ca <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80083ca:	4770      	bx	lr

080083cc <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80083cc:	68c0      	ldr	r0, [r0, #12]
 80083ce:	6803      	ldr	r3, [r0, #0]
 80083d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80083d2:	4718      	bx	r3

080083d4 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80083d4:	f1a0 0004 	sub.w	r0, r0, #4
 80083d8:	f7ff bff8 	b.w	80083cc <_ZN20MeasurementPresenter15setTimeoutValueEi>

080083dc <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80083dc:	b510      	push	{r4, lr}
 80083de:	2110      	movs	r1, #16
 80083e0:	4604      	mov	r4, r0
 80083e2:	f020 fe2c 	bl	802903e <_ZdlPvj>
 80083e6:	4620      	mov	r0, r4
 80083e8:	bd10      	pop	{r4, pc}

080083ea <_ZThn4_N20MeasurementPresenterD0Ev>:
 80083ea:	f1a0 0004 	sub.w	r0, r0, #4
 80083ee:	e7f5      	b.n	80083dc <_ZN20MeasurementPresenterD0Ev>

080083f0 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 80083f0:	b510      	push	{r4, lr}
 80083f2:	2200      	movs	r2, #0
 80083f4:	6082      	str	r2, [r0, #8]
    : view(v)
 80083f6:	4a04      	ldr	r2, [pc, #16]	; (8008408 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 80083f8:	60c1      	str	r1, [r0, #12]
 80083fa:	f102 0408 	add.w	r4, r2, #8
 80083fe:	3224      	adds	r2, #36	; 0x24
 8008400:	6004      	str	r4, [r0, #0]
 8008402:	6042      	str	r2, [r0, #4]
}
 8008404:	bd10      	pop	{r4, pc}
 8008406:	bf00      	nop
 8008408:	0802d8d0 	.word	0x0802d8d0

0800840c <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800840c:	4770      	bx	lr
	...

08008410 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008410:	b510      	push	{r4, lr}
 8008412:	4b03      	ldr	r3, [pc, #12]	; (8008420 <_ZN15MeasurementViewD1Ev+0x10>)
 8008414:	6003      	str	r3, [r0, #0]
 8008416:	4604      	mov	r4, r0
 8008418:	f7fd f9b4 	bl	8005784 <_ZN19MeasurementViewBaseD1Ev>
 800841c:	4620      	mov	r0, r4
 800841e:	bd10      	pop	{r4, pc}
 8008420:	0802d908 	.word	0x0802d908

08008424 <_ZN15MeasurementViewD0Ev>:
 8008424:	b510      	push	{r4, lr}
 8008426:	4604      	mov	r4, r0
 8008428:	f7ff fff2 	bl	8008410 <_ZN15MeasurementViewD1Ev>
 800842c:	4620      	mov	r0, r4
 800842e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008432:	f020 fe04 	bl	802903e <_ZdlPvj>
 8008436:	4620      	mov	r0, r4
 8008438:	bd10      	pop	{r4, pc}
	...

0800843c <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800843c:	b510      	push	{r4, lr}
 800843e:	4604      	mov	r4, r0
 8008440:	f7fd f9da 	bl	80057f8 <_ZN19MeasurementViewBaseC1Ev>
 8008444:	4b01      	ldr	r3, [pc, #4]	; (800844c <_ZN15MeasurementViewC1Ev+0x10>)
 8008446:	6023      	str	r3, [r4, #0]
}
 8008448:	4620      	mov	r0, r4
 800844a:	bd10      	pop	{r4, pc}
 800844c:	0802d908 	.word	0x0802d908

08008450 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008450:	f7fd b974 	b.w	800573c <_ZN19MeasurementViewBase11setupScreenEv>

08008454 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008454:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008456:	4a0a      	ldr	r2, [pc, #40]	; (8008480 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008458:	4605      	mov	r5, r0
 800845a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800845c:	460b      	mov	r3, r1
 800845e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008462:	2104      	movs	r1, #4
 8008464:	f00f fee4 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008468:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800846c:	f00d fe58 	bl	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008470:	b92c      	cbnz	r4, 800847e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008472:	f00c fd6d 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008476:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800847a:	f7fb baed 	b.w	8003a58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800847e:	bd38      	pop	{r3, r4, r5, pc}
 8008480:	0802d674 	.word	0x0802d674

08008484 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008484:	4770      	bx	lr

08008486 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008486:	3804      	subs	r0, #4
 8008488:	4770      	bx	lr

0800848a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800848a:	4770      	bx	lr

0800848c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800848c:	68c0      	ldr	r0, [r0, #12]
 800848e:	6803      	ldr	r3, [r0, #0]
 8008490:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008492:	4718      	bx	r3

08008494 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008494:	f1a0 0004 	sub.w	r0, r0, #4
 8008498:	f7ff bff8 	b.w	800848c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800849c <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800849c:	b510      	push	{r4, lr}
 800849e:	2110      	movs	r1, #16
 80084a0:	4604      	mov	r4, r0
 80084a2:	f020 fdcc 	bl	802903e <_ZdlPvj>
 80084a6:	4620      	mov	r0, r4
 80084a8:	bd10      	pop	{r4, pc}

080084aa <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80084aa:	f1a0 0004 	sub.w	r0, r0, #4
 80084ae:	e7f5      	b.n	800849c <_ZN29Measurement_AccuratePresenterD0Ev>

080084b0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80084b0:	b510      	push	{r4, lr}
 80084b2:	2200      	movs	r2, #0
 80084b4:	6082      	str	r2, [r0, #8]
    : view(v)
 80084b6:	4a04      	ldr	r2, [pc, #16]	; (80084c8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80084b8:	60c1      	str	r1, [r0, #12]
 80084ba:	f102 0408 	add.w	r4, r2, #8
 80084be:	3224      	adds	r2, #36	; 0x24
 80084c0:	6004      	str	r4, [r0, #0]
 80084c2:	6042      	str	r2, [r0, #4]
}
 80084c4:	bd10      	pop	{r4, pc}
 80084c6:	bf00      	nop
 80084c8:	0802d938 	.word	0x0802d938

080084cc <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80084cc:	4770      	bx	lr
	...

080084d0 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 80084d0:	b510      	push	{r4, lr}
 80084d2:	4b03      	ldr	r3, [pc, #12]	; (80084e0 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 80084d4:	6003      	str	r3, [r0, #0]
 80084d6:	4604      	mov	r4, r0
 80084d8:	f7fd fbd6 	bl	8005c88 <_ZN28Measurement_AccurateViewBaseD1Ev>
 80084dc:	4620      	mov	r0, r4
 80084de:	bd10      	pop	{r4, pc}
 80084e0:	0802d970 	.word	0x0802d970

080084e4 <_ZN24Measurement_AccurateViewD0Ev>:
 80084e4:	b510      	push	{r4, lr}
 80084e6:	4604      	mov	r4, r0
 80084e8:	f7ff fff2 	bl	80084d0 <_ZN24Measurement_AccurateViewD1Ev>
 80084ec:	4620      	mov	r0, r4
 80084ee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80084f2:	f020 fda4 	bl	802903e <_ZdlPvj>
 80084f6:	4620      	mov	r0, r4
 80084f8:	bd10      	pop	{r4, pc}
	...

080084fc <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 80084fc:	b510      	push	{r4, lr}
 80084fe:	4604      	mov	r4, r0
 8008500:	f7fd fbfc 	bl	8005cfc <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008504:	4b01      	ldr	r3, [pc, #4]	; (800850c <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008506:	6023      	str	r3, [r4, #0]
}
 8008508:	4620      	mov	r0, r4
 800850a:	bd10      	pop	{r4, pc}
 800850c:	0802d970 	.word	0x0802d970

08008510 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008510:	f7fd bb96 	b.w	8005c40 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008514 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008514:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008516:	4a0a      	ldr	r2, [pc, #40]	; (8008540 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008518:	4605      	mov	r5, r0
 800851a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800851c:	460b      	mov	r3, r1
 800851e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008522:	2104      	movs	r1, #4
 8008524:	f00f fe84 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008528:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800852c:	f00d fdf8 	bl	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008530:	b92c      	cbnz	r4, 800853e <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008532:	f00c fd0d 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008536:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800853a:	f7fb ba8d 	b.w	8003a58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800853e:	bd38      	pop	{r3, r4, r5, pc}
 8008540:	0802d674 	.word	0x0802d674

08008544 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008544:	4770      	bx	lr

08008546 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008546:	3804      	subs	r0, #4
 8008548:	4770      	bx	lr

0800854a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800854a:	4770      	bx	lr

0800854c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800854c:	4770      	bx	lr

0800854e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800854e:	b510      	push	{r4, lr}
 8008550:	2110      	movs	r1, #16
 8008552:	4604      	mov	r4, r0
 8008554:	f020 fd73 	bl	802903e <_ZdlPvj>
 8008558:	4620      	mov	r0, r4
 800855a:	bd10      	pop	{r4, pc}

0800855c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800855c:	f1a0 0004 	sub.w	r0, r0, #4
 8008560:	e7f5      	b.n	800854e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008562 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008562:	4770      	bx	lr

08008564 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008564:	b510      	push	{r4, lr}
 8008566:	2200      	movs	r2, #0
 8008568:	6082      	str	r2, [r0, #8]
    : view(v)
 800856a:	4a04      	ldr	r2, [pc, #16]	; (800857c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800856c:	60c1      	str	r1, [r0, #12]
 800856e:	f102 0408 	add.w	r4, r2, #8
 8008572:	3224      	adds	r2, #36	; 0x24
 8008574:	6004      	str	r4, [r0, #0]
 8008576:	6042      	str	r2, [r0, #4]
}
 8008578:	bd10      	pop	{r4, pc}
 800857a:	bf00      	nop
 800857c:	0802d9a0 	.word	0x0802d9a0

08008580 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008580:	4770      	bx	lr
	...

08008584 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008584:	b510      	push	{r4, lr}
 8008586:	4b03      	ldr	r3, [pc, #12]	; (8008594 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008588:	6003      	str	r3, [r0, #0]
 800858a:	4604      	mov	r4, r0
 800858c:	f7fd fe08 	bl	80061a0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008590:	4620      	mov	r0, r4
 8008592:	bd10      	pop	{r4, pc}
 8008594:	0802d9d8 	.word	0x0802d9d8

08008598 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008598:	b510      	push	{r4, lr}
 800859a:	4604      	mov	r4, r0
 800859c:	f7ff fff2 	bl	8008584 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80085a0:	4620      	mov	r0, r4
 80085a2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80085a6:	f020 fd4a 	bl	802903e <_ZdlPvj>
 80085aa:	4620      	mov	r0, r4
 80085ac:	bd10      	pop	{r4, pc}
	...

080085b0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80085b0:	b510      	push	{r4, lr}
 80085b2:	4604      	mov	r4, r0
 80085b4:	f7fd fe14 	bl	80061e0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80085b8:	4b01      	ldr	r3, [pc, #4]	; (80085c0 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80085ba:	6023      	str	r3, [r4, #0]
}
 80085bc:	4620      	mov	r0, r4
 80085be:	bd10      	pop	{r4, pc}
 80085c0:	0802d9d8 	.word	0x0802d9d8

080085c4 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80085c4:	f7fd bddd 	b.w	8006182 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080085c8 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80085c8:	4770      	bx	lr

080085ca <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80085ca:	3804      	subs	r0, #4
 80085cc:	4770      	bx	lr

080085ce <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 80085ce:	4770      	bx	lr

080085d0 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 80085d0:	4770      	bx	lr

080085d2 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 80085d2:	b510      	push	{r4, lr}
 80085d4:	2110      	movs	r1, #16
 80085d6:	4604      	mov	r4, r0
 80085d8:	f020 fd31 	bl	802903e <_ZdlPvj>
 80085dc:	4620      	mov	r0, r4
 80085de:	bd10      	pop	{r4, pc}

080085e0 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80085e0:	f1a0 0004 	sub.w	r0, r0, #4
 80085e4:	e7f5      	b.n	80085d2 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080085e6 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80085e6:	4770      	bx	lr

080085e8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80085e8:	b510      	push	{r4, lr}
 80085ea:	2200      	movs	r2, #0
 80085ec:	6082      	str	r2, [r0, #8]
    : view(v)
 80085ee:	4a04      	ldr	r2, [pc, #16]	; (8008600 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80085f0:	60c1      	str	r1, [r0, #12]
 80085f2:	f102 0408 	add.w	r4, r2, #8
 80085f6:	3224      	adds	r2, #36	; 0x24
 80085f8:	6004      	str	r4, [r0, #0]
 80085fa:	6042      	str	r2, [r0, #4]
}
 80085fc:	bd10      	pop	{r4, pc}
 80085fe:	bf00      	nop
 8008600:	0802da04 	.word	0x0802da04

08008604 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008604:	4770      	bx	lr
	...

08008608 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008608:	b510      	push	{r4, lr}
 800860a:	4b03      	ldr	r3, [pc, #12]	; (8008618 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800860c:	6003      	str	r3, [r0, #0]
 800860e:	4604      	mov	r4, r0
 8008610:	f7fd ff8a 	bl	8006528 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008614:	4620      	mov	r0, r4
 8008616:	bd10      	pop	{r4, pc}
 8008618:	0802da3c 	.word	0x0802da3c

0800861c <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800861c:	b510      	push	{r4, lr}
 800861e:	4604      	mov	r4, r0
 8008620:	f7ff fff2 	bl	8008608 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008624:	4620      	mov	r0, r4
 8008626:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800862a:	f020 fd08 	bl	802903e <_ZdlPvj>
 800862e:	4620      	mov	r0, r4
 8008630:	bd10      	pop	{r4, pc}
	...

08008634 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008634:	b510      	push	{r4, lr}
 8008636:	4604      	mov	r4, r0
 8008638:	f7fd ff96 	bl	8006568 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800863c:	4b01      	ldr	r3, [pc, #4]	; (8008644 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800863e:	6023      	str	r3, [r4, #0]
}
 8008640:	4620      	mov	r0, r4
 8008642:	bd10      	pop	{r4, pc}
 8008644:	0802da3c 	.word	0x0802da3c

08008648 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008648:	f7fd bf5f 	b.w	800650a <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800864c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800864c:	4770      	bx	lr

0800864e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800864e:	3804      	subs	r0, #4
 8008650:	4770      	bx	lr

08008652 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008652:	4770      	bx	lr

08008654 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008654:	68c0      	ldr	r0, [r0, #12]
 8008656:	6803      	ldr	r3, [r0, #0]
 8008658:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800865a:	4718      	bx	r3

0800865c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800865c:	f1a0 0004 	sub.w	r0, r0, #4
 8008660:	f7ff bff8 	b.w	8008654 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008664 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008664:	b510      	push	{r4, lr}
 8008666:	2110      	movs	r1, #16
 8008668:	4604      	mov	r4, r0
 800866a:	f020 fce8 	bl	802903e <_ZdlPvj>
 800866e:	4620      	mov	r0, r4
 8008670:	bd10      	pop	{r4, pc}

08008672 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8008672:	f1a0 0004 	sub.w	r0, r0, #4
 8008676:	e7f5      	b.n	8008664 <_ZN27Measurement_SinglePresenterD0Ev>

08008678 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008678:	b510      	push	{r4, lr}
 800867a:	2200      	movs	r2, #0
 800867c:	6082      	str	r2, [r0, #8]
    : view(v)
 800867e:	4a04      	ldr	r2, [pc, #16]	; (8008690 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008680:	60c1      	str	r1, [r0, #12]
 8008682:	f102 0408 	add.w	r4, r2, #8
 8008686:	3224      	adds	r2, #36	; 0x24
 8008688:	6004      	str	r4, [r0, #0]
 800868a:	6042      	str	r2, [r0, #4]
}
 800868c:	bd10      	pop	{r4, pc}
 800868e:	bf00      	nop
 8008690:	0802da68 	.word	0x0802da68

08008694 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008694:	4770      	bx	lr
	...

08008698 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008698:	b510      	push	{r4, lr}
 800869a:	4b03      	ldr	r3, [pc, #12]	; (80086a8 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800869c:	6003      	str	r3, [r0, #0]
 800869e:	4604      	mov	r4, r0
 80086a0:	f7fe f8f8 	bl	8006894 <_ZN26Measurement_SingleViewBaseD1Ev>
 80086a4:	4620      	mov	r0, r4
 80086a6:	bd10      	pop	{r4, pc}
 80086a8:	0802daa0 	.word	0x0802daa0

080086ac <_ZN22Measurement_SingleViewD0Ev>:
 80086ac:	b510      	push	{r4, lr}
 80086ae:	4604      	mov	r4, r0
 80086b0:	f7ff fff2 	bl	8008698 <_ZN22Measurement_SingleViewD1Ev>
 80086b4:	4620      	mov	r0, r4
 80086b6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80086ba:	f020 fcc0 	bl	802903e <_ZdlPvj>
 80086be:	4620      	mov	r0, r4
 80086c0:	bd10      	pop	{r4, pc}
	...

080086c4 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80086c4:	b510      	push	{r4, lr}
 80086c6:	4604      	mov	r4, r0
 80086c8:	f7fe f91e 	bl	8006908 <_ZN26Measurement_SingleViewBaseC1Ev>
 80086cc:	4b01      	ldr	r3, [pc, #4]	; (80086d4 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 80086ce:	6023      	str	r3, [r4, #0]
}
 80086d0:	4620      	mov	r0, r4
 80086d2:	bd10      	pop	{r4, pc}
 80086d4:	0802daa0 	.word	0x0802daa0

080086d8 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80086d8:	f7fe b8b8 	b.w	800684c <_ZN26Measurement_SingleViewBase11setupScreenEv>

080086dc <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80086dc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80086de:	4a0a      	ldr	r2, [pc, #40]	; (8008708 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80086e0:	4605      	mov	r5, r0
 80086e2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80086e4:	460b      	mov	r3, r1
 80086e6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80086ea:	2104      	movs	r1, #4
 80086ec:	f00f fda0 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80086f0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80086f4:	f00d fd14 	bl	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80086f8:	b92c      	cbnz	r4, 8008706 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80086fa:	f00c fc29 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80086fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008702:	f7fb b9a9 	b.w	8003a58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008706:	bd38      	pop	{r3, r4, r5, pc}
 8008708:	0802d674 	.word	0x0802d674

0800870c <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800870c:	4770      	bx	lr

0800870e <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800870e:	3804      	subs	r0, #4
 8008710:	4770      	bx	lr

08008712 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008712:	4770      	bx	lr

08008714 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008714:	4770      	bx	lr

08008716 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8008716:	b510      	push	{r4, lr}
 8008718:	2110      	movs	r1, #16
 800871a:	4604      	mov	r4, r0
 800871c:	f020 fc8f 	bl	802903e <_ZdlPvj>
 8008720:	4620      	mov	r0, r4
 8008722:	bd10      	pop	{r4, pc}

08008724 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008724:	f1a0 0004 	sub.w	r0, r0, #4
 8008728:	e7f5      	b.n	8008716 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800872a <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800872a:	4770      	bx	lr

0800872c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800872c:	b510      	push	{r4, lr}
 800872e:	2200      	movs	r2, #0
 8008730:	6082      	str	r2, [r0, #8]
    : view(v)
 8008732:	4a04      	ldr	r2, [pc, #16]	; (8008744 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008734:	60c1      	str	r1, [r0, #12]
 8008736:	f102 0408 	add.w	r4, r2, #8
 800873a:	3224      	adds	r2, #36	; 0x24
 800873c:	6004      	str	r4, [r0, #0]
 800873e:	6042      	str	r2, [r0, #4]
}
 8008740:	bd10      	pop	{r4, pc}
 8008742:	bf00      	nop
 8008744:	0802dad0 	.word	0x0802dad0

08008748 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008748:	4770      	bx	lr
	...

0800874c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800874c:	b510      	push	{r4, lr}
 800874e:	4b03      	ldr	r3, [pc, #12]	; (800875c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008750:	6003      	str	r3, [r0, #0]
 8008752:	4604      	mov	r4, r0
 8008754:	f7fe fb26 	bl	8006da4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008758:	4620      	mov	r0, r4
 800875a:	bd10      	pop	{r4, pc}
 800875c:	0802db10 	.word	0x0802db10

08008760 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008760:	b510      	push	{r4, lr}
 8008762:	4604      	mov	r4, r0
 8008764:	f7ff fff2 	bl	800874c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008768:	4620      	mov	r0, r4
 800876a:	f241 31f4 	movw	r1, #5108	; 0x13f4
 800876e:	f020 fc66 	bl	802903e <_ZdlPvj>
 8008772:	4620      	mov	r0, r4
 8008774:	bd10      	pop	{r4, pc}
	...

08008778 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008778:	b510      	push	{r4, lr}
 800877a:	4604      	mov	r4, r0
 800877c:	f7fe fb3a 	bl	8006df4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008780:	4b01      	ldr	r3, [pc, #4]	; (8008788 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8008782:	6023      	str	r3, [r4, #0]
}
 8008784:	4620      	mov	r0, r4
 8008786:	bd10      	pop	{r4, pc}
 8008788:	0802db10 	.word	0x0802db10

0800878c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800878c:	f7fe bae3 	b.w	8006d56 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008790 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8008790:	b530      	push	{r4, r5, lr}
 8008792:	b087      	sub	sp, #28
 8008794:	4604      	mov	r4, r0
#ifndef SIMULATOR
	int test = 	0;

	test = updateGUI_test();
 8008796:	f7f8 fdb1 	bl	80012fc <updateGUI_test>
 800879a:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 800879c:	f7f9 fa92 	bl	8001cc4 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80087a0:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 80087a2:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80087a4:	2001      	movs	r0, #1
 80087a6:	f7f8 fcf5 	bl	8001194 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 80087aa:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80087ae:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80087b0:	ed8d 0a04 	vstr	s0, [sp, #16]
 80087b4:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 80087b8:	9001      	str	r0, [sp, #4]
 80087ba:	f009 fc5d 	bl	8012078 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 80087be:	9801      	ldr	r0, [sp, #4]
 80087c0:	f00d fcae 	bl	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 80087c4:	462b      	mov	r3, r5
 80087c6:	4a13      	ldr	r2, [pc, #76]	; (8008814 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
 80087c8:	210a      	movs	r1, #10
 80087ca:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80087ce:	f00f fd2f 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80087d2:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80087d6:	f00d fca3 	bl	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 80087da:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80087dc:	4a0e      	ldr	r2, [pc, #56]	; (8008818 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 80087de:	9303      	str	r3, [sp, #12]
 80087e0:	210a      	movs	r1, #10
 80087e2:	ab03      	add	r3, sp, #12
 80087e4:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80087e8:	f00f ff0e 	bl	8018608 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80087ec:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80087f0:	f00d fc96 	bl	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80087f4:	9b05      	ldr	r3, [sp, #20]
 80087f6:	9303      	str	r3, [sp, #12]
 80087f8:	4a07      	ldr	r2, [pc, #28]	; (8008818 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 80087fa:	ab03      	add	r3, sp, #12
 80087fc:	210a      	movs	r1, #10
 80087fe:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8008802:	f00f ff01 	bl	8018608 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008806:	f504 7046 	add.w	r0, r4, #792	; 0x318
#endif
}
 800880a:	b007      	add	sp, #28
 800880c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	SMD1_Distance.invalidate();
 8008810:	f00d bc86 	b.w	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008814:	0802d674 	.word	0x0802d674
 8008818:	0802db00 	.word	0x0802db00

0800881c <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800881c:	4770      	bx	lr

0800881e <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800881e:	3804      	subs	r0, #4
 8008820:	4770      	bx	lr

08008822 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008822:	4770      	bx	lr

08008824 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008824:	4770      	bx	lr

08008826 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008826:	b510      	push	{r4, lr}
 8008828:	2110      	movs	r1, #16
 800882a:	4604      	mov	r4, r0
 800882c:	f020 fc07 	bl	802903e <_ZdlPvj>
 8008830:	4620      	mov	r0, r4
 8008832:	bd10      	pop	{r4, pc}

08008834 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008834:	f1a0 0004 	sub.w	r0, r0, #4
 8008838:	e7f5      	b.n	8008826 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800883a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800883a:	4770      	bx	lr

0800883c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800883c:	b510      	push	{r4, lr}
 800883e:	2200      	movs	r2, #0
 8008840:	6082      	str	r2, [r0, #8]
    : view(v)
 8008842:	4a04      	ldr	r2, [pc, #16]	; (8008854 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008844:	60c1      	str	r1, [r0, #12]
 8008846:	f102 0408 	add.w	r4, r2, #8
 800884a:	3224      	adds	r2, #36	; 0x24
 800884c:	6004      	str	r4, [r0, #0]
 800884e:	6042      	str	r2, [r0, #4]
}
 8008850:	bd10      	pop	{r4, pc}
 8008852:	bf00      	nop
 8008854:	0802db40 	.word	0x0802db40

08008858 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008858:	4770      	bx	lr
	...

0800885c <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800885c:	b510      	push	{r4, lr}
 800885e:	4b03      	ldr	r3, [pc, #12]	; (800886c <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008860:	6003      	str	r3, [r0, #0]
 8008862:	4604      	mov	r4, r0
 8008864:	f7fe fe38 	bl	80074d8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008868:	4620      	mov	r0, r4
 800886a:	bd10      	pop	{r4, pc}
 800886c:	0802db78 	.word	0x0802db78

08008870 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008870:	b510      	push	{r4, lr}
 8008872:	4604      	mov	r4, r0
 8008874:	f7ff fff2 	bl	800885c <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008878:	4620      	mov	r0, r4
 800887a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800887e:	f020 fbde 	bl	802903e <_ZdlPvj>
 8008882:	4620      	mov	r0, r4
 8008884:	bd10      	pop	{r4, pc}
	...

08008888 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008888:	b510      	push	{r4, lr}
 800888a:	4604      	mov	r4, r0
 800888c:	f7fe fe44 	bl	8007518 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008890:	4b01      	ldr	r3, [pc, #4]	; (8008898 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008892:	6023      	str	r3, [r4, #0]
}
 8008894:	4620      	mov	r0, r4
 8008896:	bd10      	pop	{r4, pc}
 8008898:	0802db78 	.word	0x0802db78

0800889c <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800889c:	f7fe be0b 	b.w	80074b6 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080088a0 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80088a0:	2100      	movs	r1, #0
 80088a2:	223c      	movs	r2, #60	; 0x3c
 80088a4:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80088a8:	4770      	bx	lr
	...

080088ac <_ZN5Model4tickEv>:

void Model::tick()
{
 80088ac:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80088ae:	4d0a      	ldr	r5, [pc, #40]	; (80088d8 <_ZN5Model4tickEv+0x2c>)
{
 80088b0:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80088b2:	6828      	ldr	r0, [r5, #0]
 80088b4:	f004 faac 	bl	800ce10 <osMessageQueueGetCount>
 80088b8:	b168      	cbz	r0, 80088d6 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80088ba:	2300      	movs	r3, #0
 80088bc:	6828      	ldr	r0, [r5, #0]
 80088be:	461a      	mov	r2, r3
 80088c0:	1d21      	adds	r1, r4, #4
 80088c2:	f004 fa71 	bl	800cda8 <osMessageQueueGet>
 80088c6:	b930      	cbnz	r0, 80088d6 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80088c8:	6820      	ldr	r0, [r4, #0]
 80088ca:	6861      	ldr	r1, [r4, #4]
 80088cc:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80088ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80088d2:	689b      	ldr	r3, [r3, #8]
 80088d4:	4718      	bx	r3
}
 80088d6:	bd70      	pop	{r4, r5, r6, pc}
 80088d8:	200018d4 	.word	0x200018d4

080088dc <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80088dc:	4770      	bx	lr

080088de <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80088de:	3804      	subs	r0, #4
 80088e0:	4770      	bx	lr

080088e2 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80088e2:	4770      	bx	lr

080088e4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80088e4:	68c0      	ldr	r0, [r0, #12]
 80088e6:	6803      	ldr	r3, [r0, #0]
 80088e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80088ea:	4718      	bx	r3

080088ec <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80088ec:	f1a0 0004 	sub.w	r0, r0, #4
 80088f0:	f7ff bff8 	b.w	80088e4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080088f4 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80088f4:	b510      	push	{r4, lr}
 80088f6:	2110      	movs	r1, #16
 80088f8:	4604      	mov	r4, r0
 80088fa:	f020 fba0 	bl	802903e <_ZdlPvj>
 80088fe:	4620      	mov	r0, r4
 8008900:	bd10      	pop	{r4, pc}

08008902 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008902:	f1a0 0004 	sub.w	r0, r0, #4
 8008906:	e7f5      	b.n	80088f4 <_ZN21Project_InfoPresenterD0Ev>

08008908 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008908:	b510      	push	{r4, lr}
 800890a:	2200      	movs	r2, #0
 800890c:	6082      	str	r2, [r0, #8]
    : view(v)
 800890e:	4a04      	ldr	r2, [pc, #16]	; (8008920 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008910:	60c1      	str	r1, [r0, #12]
 8008912:	f102 0408 	add.w	r4, r2, #8
 8008916:	3224      	adds	r2, #36	; 0x24
 8008918:	6004      	str	r4, [r0, #0]
 800891a:	6042      	str	r2, [r0, #4]
}
 800891c:	bd10      	pop	{r4, pc}
 800891e:	bf00      	nop
 8008920:	0802dba4 	.word	0x0802dba4

08008924 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008924:	4770      	bx	lr
	...

08008928 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008928:	b510      	push	{r4, lr}
 800892a:	4b03      	ldr	r3, [pc, #12]	; (8008938 <_ZN16Project_InfoViewD1Ev+0x10>)
 800892c:	6003      	str	r3, [r0, #0]
 800892e:	4604      	mov	r4, r0
 8008930:	f7fe ff8c 	bl	800784c <_ZN20Project_InfoViewBaseD1Ev>
 8008934:	4620      	mov	r0, r4
 8008936:	bd10      	pop	{r4, pc}
 8008938:	0802dbdc 	.word	0x0802dbdc

0800893c <_ZN16Project_InfoViewD0Ev>:
 800893c:	b510      	push	{r4, lr}
 800893e:	4604      	mov	r4, r0
 8008940:	f7ff fff2 	bl	8008928 <_ZN16Project_InfoViewD1Ev>
 8008944:	4620      	mov	r0, r4
 8008946:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800894a:	f020 fb78 	bl	802903e <_ZdlPvj>
 800894e:	4620      	mov	r0, r4
 8008950:	bd10      	pop	{r4, pc}
	...

08008954 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008954:	b510      	push	{r4, lr}
 8008956:	4604      	mov	r4, r0
 8008958:	f7fe ffa0 	bl	800789c <_ZN20Project_InfoViewBaseC1Ev>
 800895c:	4b01      	ldr	r3, [pc, #4]	; (8008964 <_ZN16Project_InfoViewC1Ev+0x10>)
 800895e:	6023      	str	r3, [r4, #0]
}
 8008960:	4620      	mov	r0, r4
 8008962:	bd10      	pop	{r4, pc}
 8008964:	0802dbdc 	.word	0x0802dbdc

08008968 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008968:	f7fe bf4c 	b.w	8007804 <_ZN20Project_InfoViewBase11setupScreenEv>

0800896c <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800896c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800896e:	4a0a      	ldr	r2, [pc, #40]	; (8008998 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008970:	4605      	mov	r5, r0
 8008972:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008974:	460b      	mov	r3, r1
 8008976:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800897a:	2104      	movs	r1, #4
 800897c:	f00f fc58 	bl	8018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008980:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008984:	f00d fbcc 	bl	8016120 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008988:	b92c      	cbnz	r4, 8008996 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800898a:	f00c fae1 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800898e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008992:	f7fb b861 	b.w	8003a58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008996:	bd38      	pop	{r3, r4, r5, pc}
 8008998:	0802d674 	.word	0x0802d674

0800899c <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800899c:	4770      	bx	lr

0800899e <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800899e:	3804      	subs	r0, #4
 80089a0:	4770      	bx	lr

080089a2 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80089a2:	4770      	bx	lr

080089a4 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80089a4:	4770      	bx	lr

080089a6 <_ZN21Shutting_OffPresenterD0Ev>:
 80089a6:	b510      	push	{r4, lr}
 80089a8:	2110      	movs	r1, #16
 80089aa:	4604      	mov	r4, r0
 80089ac:	f020 fb47 	bl	802903e <_ZdlPvj>
 80089b0:	4620      	mov	r0, r4
 80089b2:	bd10      	pop	{r4, pc}

080089b4 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80089b4:	f1a0 0004 	sub.w	r0, r0, #4
 80089b8:	e7f5      	b.n	80089a6 <_ZN21Shutting_OffPresenterD0Ev>

080089ba <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80089ba:	4770      	bx	lr

080089bc <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80089bc:	b510      	push	{r4, lr}
 80089be:	2200      	movs	r2, #0
 80089c0:	6082      	str	r2, [r0, #8]
    : view(v)
 80089c2:	4a04      	ldr	r2, [pc, #16]	; (80089d4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80089c4:	60c1      	str	r1, [r0, #12]
 80089c6:	f102 0408 	add.w	r4, r2, #8
 80089ca:	3224      	adds	r2, #36	; 0x24
 80089cc:	6004      	str	r4, [r0, #0]
 80089ce:	6042      	str	r2, [r0, #4]
}
 80089d0:	bd10      	pop	{r4, pc}
 80089d2:	bf00      	nop
 80089d4:	0802dc0c 	.word	0x0802dc0c

080089d8 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80089d8:	4770      	bx	lr
	...

080089dc <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80089dc:	b510      	push	{r4, lr}
 80089de:	4b03      	ldr	r3, [pc, #12]	; (80089ec <_ZN16Shutting_OffViewD1Ev+0x10>)
 80089e0:	6003      	str	r3, [r0, #0]
 80089e2:	4604      	mov	r4, r0
 80089e4:	f7ff f928 	bl	8007c38 <_ZN20Shutting_OffViewBaseD1Ev>
 80089e8:	4620      	mov	r0, r4
 80089ea:	bd10      	pop	{r4, pc}
 80089ec:	0802dc44 	.word	0x0802dc44

080089f0 <_ZN16Shutting_OffViewD0Ev>:
 80089f0:	b510      	push	{r4, lr}
 80089f2:	4604      	mov	r4, r0
 80089f4:	f7ff fff2 	bl	80089dc <_ZN16Shutting_OffViewD1Ev>
 80089f8:	4620      	mov	r0, r4
 80089fa:	2198      	movs	r1, #152	; 0x98
 80089fc:	f020 fb1f 	bl	802903e <_ZdlPvj>
 8008a00:	4620      	mov	r0, r4
 8008a02:	bd10      	pop	{r4, pc}

08008a04 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008a04:	b510      	push	{r4, lr}
 8008a06:	4604      	mov	r4, r0
 8008a08:	f7ff f920 	bl	8007c4c <_ZN20Shutting_OffViewBaseC1Ev>
 8008a0c:	4b01      	ldr	r3, [pc, #4]	; (8008a14 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008a0e:	6023      	str	r3, [r4, #0]
}
 8008a10:	4620      	mov	r0, r4
 8008a12:	bd10      	pop	{r4, pc}
 8008a14:	0802dc44 	.word	0x0802dc44

08008a18 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008a18:	f7ff b90f 	b.w	8007c3a <_ZN20Shutting_OffViewBase11setupScreenEv>

08008a1c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008a1c:	20f0      	movs	r0, #240	; 0xf0
 8008a1e:	4770      	bx	lr

08008a20 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008a20:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008a24:	4770      	bx	lr
 8008a26:	bf00      	nop

08008a28 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008a28:	2029      	movs	r0, #41	; 0x29
 8008a2a:	f7f8 bfc1 	b.w	80019b0 <LCD_IO_WriteReg>
 8008a2e:	bf00      	nop

08008a30 <ili9341_DisplayOff>:
 8008a30:	2028      	movs	r0, #40	; 0x28
 8008a32:	f7f8 bfbd 	b.w	80019b0 <LCD_IO_WriteReg>
 8008a36:	bf00      	nop

08008a38 <ili9341_Init>:
{
 8008a38:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008a3a:	f7f8 ff7f 	bl	800193c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008a3e:	20ca      	movs	r0, #202	; 0xca
 8008a40:	f7f8 ffb6 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a44:	20c3      	movs	r0, #195	; 0xc3
 8008a46:	f7f8 ff89 	bl	800195c <LCD_IO_WriteData>
 8008a4a:	2008      	movs	r0, #8
 8008a4c:	f7f8 ff86 	bl	800195c <LCD_IO_WriteData>
 8008a50:	2050      	movs	r0, #80	; 0x50
 8008a52:	f7f8 ff83 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a56:	20cf      	movs	r0, #207	; 0xcf
 8008a58:	f7f8 ffaa 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a5c:	2000      	movs	r0, #0
 8008a5e:	f7f8 ff7d 	bl	800195c <LCD_IO_WriteData>
 8008a62:	20c1      	movs	r0, #193	; 0xc1
 8008a64:	f7f8 ff7a 	bl	800195c <LCD_IO_WriteData>
 8008a68:	2030      	movs	r0, #48	; 0x30
 8008a6a:	f7f8 ff77 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a6e:	20ed      	movs	r0, #237	; 0xed
 8008a70:	f7f8 ff9e 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a74:	2064      	movs	r0, #100	; 0x64
 8008a76:	f7f8 ff71 	bl	800195c <LCD_IO_WriteData>
 8008a7a:	2003      	movs	r0, #3
 8008a7c:	f7f8 ff6e 	bl	800195c <LCD_IO_WriteData>
 8008a80:	2012      	movs	r0, #18
 8008a82:	f7f8 ff6b 	bl	800195c <LCD_IO_WriteData>
 8008a86:	2081      	movs	r0, #129	; 0x81
 8008a88:	f7f8 ff68 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a8c:	20e8      	movs	r0, #232	; 0xe8
 8008a8e:	f7f8 ff8f 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a92:	2085      	movs	r0, #133	; 0x85
 8008a94:	f7f8 ff62 	bl	800195c <LCD_IO_WriteData>
 8008a98:	2000      	movs	r0, #0
 8008a9a:	f7f8 ff5f 	bl	800195c <LCD_IO_WriteData>
 8008a9e:	2078      	movs	r0, #120	; 0x78
 8008aa0:	f7f8 ff5c 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008aa4:	20cb      	movs	r0, #203	; 0xcb
 8008aa6:	f7f8 ff83 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008aaa:	2039      	movs	r0, #57	; 0x39
 8008aac:	f7f8 ff56 	bl	800195c <LCD_IO_WriteData>
 8008ab0:	202c      	movs	r0, #44	; 0x2c
 8008ab2:	f7f8 ff53 	bl	800195c <LCD_IO_WriteData>
 8008ab6:	2000      	movs	r0, #0
 8008ab8:	f7f8 ff50 	bl	800195c <LCD_IO_WriteData>
 8008abc:	2034      	movs	r0, #52	; 0x34
 8008abe:	f7f8 ff4d 	bl	800195c <LCD_IO_WriteData>
 8008ac2:	2002      	movs	r0, #2
 8008ac4:	f7f8 ff4a 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ac8:	20f7      	movs	r0, #247	; 0xf7
 8008aca:	f7f8 ff71 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ace:	2020      	movs	r0, #32
 8008ad0:	f7f8 ff44 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ad4:	20ea      	movs	r0, #234	; 0xea
 8008ad6:	f7f8 ff6b 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ada:	2000      	movs	r0, #0
 8008adc:	f7f8 ff3e 	bl	800195c <LCD_IO_WriteData>
 8008ae0:	2000      	movs	r0, #0
 8008ae2:	f7f8 ff3b 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ae6:	20b1      	movs	r0, #177	; 0xb1
 8008ae8:	f7f8 ff62 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008aec:	2000      	movs	r0, #0
 8008aee:	f7f8 ff35 	bl	800195c <LCD_IO_WriteData>
 8008af2:	201b      	movs	r0, #27
 8008af4:	f7f8 ff32 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008af8:	20b6      	movs	r0, #182	; 0xb6
 8008afa:	f7f8 ff59 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008afe:	200a      	movs	r0, #10
 8008b00:	f7f8 ff2c 	bl	800195c <LCD_IO_WriteData>
 8008b04:	20a2      	movs	r0, #162	; 0xa2
 8008b06:	f7f8 ff29 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b0a:	20c0      	movs	r0, #192	; 0xc0
 8008b0c:	f7f8 ff50 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b10:	2010      	movs	r0, #16
 8008b12:	f7f8 ff23 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b16:	20c1      	movs	r0, #193	; 0xc1
 8008b18:	f7f8 ff4a 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b1c:	2010      	movs	r0, #16
 8008b1e:	f7f8 ff1d 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b22:	20c5      	movs	r0, #197	; 0xc5
 8008b24:	f7f8 ff44 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b28:	2045      	movs	r0, #69	; 0x45
 8008b2a:	f7f8 ff17 	bl	800195c <LCD_IO_WriteData>
 8008b2e:	2015      	movs	r0, #21
 8008b30:	f7f8 ff14 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b34:	20c7      	movs	r0, #199	; 0xc7
 8008b36:	f7f8 ff3b 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b3a:	2090      	movs	r0, #144	; 0x90
 8008b3c:	f7f8 ff0e 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b40:	2036      	movs	r0, #54	; 0x36
 8008b42:	f7f8 ff35 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b46:	20c8      	movs	r0, #200	; 0xc8
 8008b48:	f7f8 ff08 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b4c:	20f2      	movs	r0, #242	; 0xf2
 8008b4e:	f7f8 ff2f 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b52:	2000      	movs	r0, #0
 8008b54:	f7f8 ff02 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b58:	20b0      	movs	r0, #176	; 0xb0
 8008b5a:	f7f8 ff29 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b5e:	20c2      	movs	r0, #194	; 0xc2
 8008b60:	f7f8 fefc 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b64:	20b6      	movs	r0, #182	; 0xb6
 8008b66:	f7f8 ff23 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b6a:	200a      	movs	r0, #10
 8008b6c:	f7f8 fef6 	bl	800195c <LCD_IO_WriteData>
 8008b70:	20a7      	movs	r0, #167	; 0xa7
 8008b72:	f7f8 fef3 	bl	800195c <LCD_IO_WriteData>
 8008b76:	2027      	movs	r0, #39	; 0x27
 8008b78:	f7f8 fef0 	bl	800195c <LCD_IO_WriteData>
 8008b7c:	2004      	movs	r0, #4
 8008b7e:	f7f8 feed 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b82:	202a      	movs	r0, #42	; 0x2a
 8008b84:	f7f8 ff14 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b88:	2000      	movs	r0, #0
 8008b8a:	f7f8 fee7 	bl	800195c <LCD_IO_WriteData>
 8008b8e:	2000      	movs	r0, #0
 8008b90:	f7f8 fee4 	bl	800195c <LCD_IO_WriteData>
 8008b94:	2000      	movs	r0, #0
 8008b96:	f7f8 fee1 	bl	800195c <LCD_IO_WriteData>
 8008b9a:	20ef      	movs	r0, #239	; 0xef
 8008b9c:	f7f8 fede 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ba0:	202b      	movs	r0, #43	; 0x2b
 8008ba2:	f7f8 ff05 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ba6:	2000      	movs	r0, #0
 8008ba8:	f7f8 fed8 	bl	800195c <LCD_IO_WriteData>
 8008bac:	2000      	movs	r0, #0
 8008bae:	f7f8 fed5 	bl	800195c <LCD_IO_WriteData>
 8008bb2:	2001      	movs	r0, #1
 8008bb4:	f7f8 fed2 	bl	800195c <LCD_IO_WriteData>
 8008bb8:	203f      	movs	r0, #63	; 0x3f
 8008bba:	f7f8 fecf 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bbe:	20f6      	movs	r0, #246	; 0xf6
 8008bc0:	f7f8 fef6 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bc4:	2001      	movs	r0, #1
 8008bc6:	f7f8 fec9 	bl	800195c <LCD_IO_WriteData>
 8008bca:	2000      	movs	r0, #0
 8008bcc:	f7f8 fec6 	bl	800195c <LCD_IO_WriteData>
 8008bd0:	2006      	movs	r0, #6
 8008bd2:	f7f8 fec3 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bd6:	202c      	movs	r0, #44	; 0x2c
 8008bd8:	f7f8 feea 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008bdc:	20c8      	movs	r0, #200	; 0xc8
 8008bde:	f7f8 ff4f 	bl	8001a80 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008be2:	2026      	movs	r0, #38	; 0x26
 8008be4:	f7f8 fee4 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008be8:	2001      	movs	r0, #1
 8008bea:	f7f8 feb7 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bee:	20e0      	movs	r0, #224	; 0xe0
 8008bf0:	f7f8 fede 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bf4:	200f      	movs	r0, #15
 8008bf6:	f7f8 feb1 	bl	800195c <LCD_IO_WriteData>
 8008bfa:	2029      	movs	r0, #41	; 0x29
 8008bfc:	f7f8 feae 	bl	800195c <LCD_IO_WriteData>
 8008c00:	2024      	movs	r0, #36	; 0x24
 8008c02:	f7f8 feab 	bl	800195c <LCD_IO_WriteData>
 8008c06:	200c      	movs	r0, #12
 8008c08:	f7f8 fea8 	bl	800195c <LCD_IO_WriteData>
 8008c0c:	200e      	movs	r0, #14
 8008c0e:	f7f8 fea5 	bl	800195c <LCD_IO_WriteData>
 8008c12:	2009      	movs	r0, #9
 8008c14:	f7f8 fea2 	bl	800195c <LCD_IO_WriteData>
 8008c18:	204e      	movs	r0, #78	; 0x4e
 8008c1a:	f7f8 fe9f 	bl	800195c <LCD_IO_WriteData>
 8008c1e:	2078      	movs	r0, #120	; 0x78
 8008c20:	f7f8 fe9c 	bl	800195c <LCD_IO_WriteData>
 8008c24:	203c      	movs	r0, #60	; 0x3c
 8008c26:	f7f8 fe99 	bl	800195c <LCD_IO_WriteData>
 8008c2a:	2009      	movs	r0, #9
 8008c2c:	f7f8 fe96 	bl	800195c <LCD_IO_WriteData>
 8008c30:	2013      	movs	r0, #19
 8008c32:	f7f8 fe93 	bl	800195c <LCD_IO_WriteData>
 8008c36:	2005      	movs	r0, #5
 8008c38:	f7f8 fe90 	bl	800195c <LCD_IO_WriteData>
 8008c3c:	2017      	movs	r0, #23
 8008c3e:	f7f8 fe8d 	bl	800195c <LCD_IO_WriteData>
 8008c42:	2011      	movs	r0, #17
 8008c44:	f7f8 fe8a 	bl	800195c <LCD_IO_WriteData>
 8008c48:	2000      	movs	r0, #0
 8008c4a:	f7f8 fe87 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c4e:	20e1      	movs	r0, #225	; 0xe1
 8008c50:	f7f8 feae 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c54:	2000      	movs	r0, #0
 8008c56:	f7f8 fe81 	bl	800195c <LCD_IO_WriteData>
 8008c5a:	2016      	movs	r0, #22
 8008c5c:	f7f8 fe7e 	bl	800195c <LCD_IO_WriteData>
 8008c60:	201b      	movs	r0, #27
 8008c62:	f7f8 fe7b 	bl	800195c <LCD_IO_WriteData>
 8008c66:	2004      	movs	r0, #4
 8008c68:	f7f8 fe78 	bl	800195c <LCD_IO_WriteData>
 8008c6c:	2011      	movs	r0, #17
 8008c6e:	f7f8 fe75 	bl	800195c <LCD_IO_WriteData>
 8008c72:	2007      	movs	r0, #7
 8008c74:	f7f8 fe72 	bl	800195c <LCD_IO_WriteData>
 8008c78:	2031      	movs	r0, #49	; 0x31
 8008c7a:	f7f8 fe6f 	bl	800195c <LCD_IO_WriteData>
 8008c7e:	2033      	movs	r0, #51	; 0x33
 8008c80:	f7f8 fe6c 	bl	800195c <LCD_IO_WriteData>
 8008c84:	2042      	movs	r0, #66	; 0x42
 8008c86:	f7f8 fe69 	bl	800195c <LCD_IO_WriteData>
 8008c8a:	2005      	movs	r0, #5
 8008c8c:	f7f8 fe66 	bl	800195c <LCD_IO_WriteData>
 8008c90:	200c      	movs	r0, #12
 8008c92:	f7f8 fe63 	bl	800195c <LCD_IO_WriteData>
 8008c96:	200a      	movs	r0, #10
 8008c98:	f7f8 fe60 	bl	800195c <LCD_IO_WriteData>
 8008c9c:	2028      	movs	r0, #40	; 0x28
 8008c9e:	f7f8 fe5d 	bl	800195c <LCD_IO_WriteData>
 8008ca2:	202f      	movs	r0, #47	; 0x2f
 8008ca4:	f7f8 fe5a 	bl	800195c <LCD_IO_WriteData>
 8008ca8:	200f      	movs	r0, #15
 8008caa:	f7f8 fe57 	bl	800195c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cae:	2011      	movs	r0, #17
 8008cb0:	f7f8 fe7e 	bl	80019b0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008cb4:	20c8      	movs	r0, #200	; 0xc8
 8008cb6:	f7f8 fee3 	bl	8001a80 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008cba:	2029      	movs	r0, #41	; 0x29
 8008cbc:	f7f8 fe78 	bl	80019b0 <LCD_IO_WriteReg>
}
 8008cc0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008cc4:	202c      	movs	r0, #44	; 0x2c
 8008cc6:	f7f8 be73 	b.w	80019b0 <LCD_IO_WriteReg>
 8008cca:	bf00      	nop

08008ccc <ili9341_ReadID>:
{
 8008ccc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008cce:	f7f8 fe35 	bl	800193c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008cd2:	2103      	movs	r1, #3
 8008cd4:	20d3      	movs	r0, #211	; 0xd3
 8008cd6:	f7f8 fe95 	bl	8001a04 <LCD_IO_ReadData>
}
 8008cda:	b280      	uxth	r0, r0
 8008cdc:	bd08      	pop	{r3, pc}
 8008cde:	bf00      	nop

08008ce0 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008ce0:	221f      	movs	r2, #31
 8008ce2:	210b      	movs	r1, #11
 8008ce4:	b2c0      	uxtb	r0, r0
 8008ce6:	f7f8 bddb 	b.w	80018a0 <IOE_Write>
 8008cea:	bf00      	nop

08008cec <stmpe811_Reset>:
{
 8008cec:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008cee:	b2c4      	uxtb	r4, r0
 8008cf0:	2202      	movs	r2, #2
 8008cf2:	2103      	movs	r1, #3
 8008cf4:	4620      	mov	r0, r4
 8008cf6:	f7f8 fdd3 	bl	80018a0 <IOE_Write>
  IOE_Delay(10); 
 8008cfa:	200a      	movs	r0, #10
 8008cfc:	f7f8 fe1c 	bl	8001938 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008d00:	4620      	mov	r0, r4
 8008d02:	2200      	movs	r2, #0
 8008d04:	2103      	movs	r1, #3
 8008d06:	f7f8 fdcb 	bl	80018a0 <IOE_Write>
}
 8008d0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008d0e:	2002      	movs	r0, #2
 8008d10:	f7f8 be12 	b.w	8001938 <IOE_Delay>

08008d14 <stmpe811_ReadID>:
{
 8008d14:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d16:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008d18:	f7f8 fdbe 	bl	8001898 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d1c:	2100      	movs	r1, #0
 8008d1e:	4620      	mov	r0, r4
 8008d20:	f7f8 fdd6 	bl	80018d0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008d24:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d26:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008d28:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d2a:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008d2c:	f7f8 fdd0 	bl	80018d0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008d30:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008d34:	b280      	uxth	r0, r0
 8008d36:	bd10      	pop	{r4, pc}

08008d38 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008d38:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008d3a:	b2c4      	uxtb	r4, r0
 8008d3c:	2140      	movs	r1, #64	; 0x40
 8008d3e:	4620      	mov	r0, r4
 8008d40:	f7f8 fdc6 	bl	80018d0 <IOE_Read>
  
  if(state > 0)
 8008d44:	0603      	lsls	r3, r0, #24
 8008d46:	d40b      	bmi.n	8008d60 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008d48:	4620      	mov	r0, r4
 8008d4a:	2201      	movs	r2, #1
 8008d4c:	214b      	movs	r1, #75	; 0x4b
 8008d4e:	f7f8 fda7 	bl	80018a0 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008d52:	4620      	mov	r0, r4
 8008d54:	2200      	movs	r2, #0
 8008d56:	214b      	movs	r1, #75	; 0x4b
 8008d58:	f7f8 fda2 	bl	80018a0 <IOE_Write>
  uint8_t ret = 0;
 8008d5c:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008d5e:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008d60:	214c      	movs	r1, #76	; 0x4c
 8008d62:	4620      	mov	r0, r4
 8008d64:	f7f8 fdb4 	bl	80018d0 <IOE_Read>
      ret = 1;
 8008d68:	3800      	subs	r0, #0
 8008d6a:	bf18      	it	ne
 8008d6c:	2001      	movne	r0, #1
}
 8008d6e:	bd10      	pop	{r4, pc}

08008d70 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008d70:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008d72:	210b      	movs	r1, #11
 8008d74:	b2c0      	uxtb	r0, r0
 8008d76:	f7f8 fdab 	bl	80018d0 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008d7a:	f000 001f 	and.w	r0, r0, #31
 8008d7e:	bd08      	pop	{r3, pc}

08008d80 <stmpe811_TS_GetXY>:
{
 8008d80:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008d82:	2304      	movs	r3, #4
{
 8008d84:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008d86:	b2c4      	uxtb	r4, r0
{
 8008d88:	4615      	mov	r5, r2
 8008d8a:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008d8c:	eb0d 0203 	add.w	r2, sp, r3
 8008d90:	21d7      	movs	r1, #215	; 0xd7
 8008d92:	4620      	mov	r0, r4
 8008d94:	f7f8 fdb8 	bl	8001908 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008d98:	9b01      	ldr	r3, [sp, #4]
 8008d9a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008d9c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008d9e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008da2:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008da4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008da6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008da8:	2201      	movs	r2, #1
 8008daa:	214b      	movs	r1, #75	; 0x4b
 8008dac:	f7f8 fd78 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008db0:	2200      	movs	r2, #0
 8008db2:	214b      	movs	r1, #75	; 0x4b
 8008db4:	4620      	mov	r0, r4
 8008db6:	f7f8 fd73 	bl	80018a0 <IOE_Write>
}
 8008dba:	b002      	add	sp, #8
 8008dbc:	bd70      	pop	{r4, r5, r6, pc}
 8008dbe:	bf00      	nop

08008dc0 <stmpe811_TS_Start>:
{
 8008dc0:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008dc2:	b2c4      	uxtb	r4, r0
 8008dc4:	2104      	movs	r1, #4
 8008dc6:	4620      	mov	r0, r4
 8008dc8:	f7f8 fd82 	bl	80018d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008dcc:	2104      	movs	r1, #4
 8008dce:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008dd2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008dd4:	4620      	mov	r0, r4
 8008dd6:	f7f8 fd63 	bl	80018a0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008dda:	2117      	movs	r1, #23
 8008ddc:	4620      	mov	r0, r4
 8008dde:	f7f8 fd77 	bl	80018d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008de2:	2117      	movs	r1, #23
 8008de4:	f000 020f 	and.w	r2, r0, #15
 8008de8:	4620      	mov	r0, r4
 8008dea:	f7f8 fd59 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008dee:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008df2:	4620      	mov	r0, r4
 8008df4:	2104      	movs	r1, #4
 8008df6:	f7f8 fd53 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008dfa:	2249      	movs	r2, #73	; 0x49
 8008dfc:	2120      	movs	r1, #32
 8008dfe:	4620      	mov	r0, r4
 8008e00:	f7f8 fd4e 	bl	80018a0 <IOE_Write>
  IOE_Delay(2); 
 8008e04:	2002      	movs	r0, #2
 8008e06:	f7f8 fd97 	bl	8001938 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008e0a:	4620      	mov	r0, r4
 8008e0c:	2201      	movs	r2, #1
 8008e0e:	2121      	movs	r1, #33	; 0x21
 8008e10:	f7f8 fd46 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008e14:	4620      	mov	r0, r4
 8008e16:	229a      	movs	r2, #154	; 0x9a
 8008e18:	2141      	movs	r1, #65	; 0x41
 8008e1a:	f7f8 fd41 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008e1e:	4620      	mov	r0, r4
 8008e20:	2201      	movs	r2, #1
 8008e22:	214a      	movs	r1, #74	; 0x4a
 8008e24:	f7f8 fd3c 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008e28:	4620      	mov	r0, r4
 8008e2a:	2201      	movs	r2, #1
 8008e2c:	214b      	movs	r1, #75	; 0x4b
 8008e2e:	f7f8 fd37 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008e32:	4620      	mov	r0, r4
 8008e34:	2200      	movs	r2, #0
 8008e36:	214b      	movs	r1, #75	; 0x4b
 8008e38:	f7f8 fd32 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008e3c:	4620      	mov	r0, r4
 8008e3e:	2201      	movs	r2, #1
 8008e40:	2156      	movs	r1, #86	; 0x56
 8008e42:	f7f8 fd2d 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008e46:	4620      	mov	r0, r4
 8008e48:	2201      	movs	r2, #1
 8008e4a:	2158      	movs	r1, #88	; 0x58
 8008e4c:	f7f8 fd28 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008e50:	4620      	mov	r0, r4
 8008e52:	2201      	movs	r2, #1
 8008e54:	2140      	movs	r1, #64	; 0x40
 8008e56:	f7f8 fd23 	bl	80018a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008e5a:	4620      	mov	r0, r4
 8008e5c:	22ff      	movs	r2, #255	; 0xff
 8008e5e:	210b      	movs	r1, #11
 8008e60:	f7f8 fd1e 	bl	80018a0 <IOE_Write>
}
 8008e64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008e68:	2002      	movs	r0, #2
 8008e6a:	f7f8 bd65 	b.w	8001938 <IOE_Delay>
 8008e6e:	bf00      	nop

08008e70 <stmpe811_TS_DisableIT>:
{
 8008e70:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008e72:	b2c4      	uxtb	r4, r0
 8008e74:	2109      	movs	r1, #9
 8008e76:	4620      	mov	r0, r4
 8008e78:	f7f8 fd2a 	bl	80018d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008e7c:	2109      	movs	r1, #9
 8008e7e:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008e82:	4620      	mov	r0, r4
 8008e84:	f7f8 fd0c 	bl	80018a0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008e88:	210a      	movs	r1, #10
 8008e8a:	4620      	mov	r0, r4
 8008e8c:	f7f8 fd20 	bl	80018d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008e90:	210a      	movs	r1, #10
 8008e92:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008e96:	4620      	mov	r0, r4
}
 8008e98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008e9c:	f7f8 bd00 	b.w	80018a0 <IOE_Write>

08008ea0 <stmpe811_TS_EnableIT>:
{
 8008ea0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008ea2:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8008ea4:	f7f8 fcfa 	bl	800189c <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008ea8:	210a      	movs	r1, #10
 8008eaa:	4620      	mov	r0, r4
 8008eac:	f7f8 fd10 	bl	80018d0 <IOE_Read>
  tmp |= Source; 
 8008eb0:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008eb4:	b2c2      	uxtb	r2, r0
 8008eb6:	210a      	movs	r1, #10
 8008eb8:	4620      	mov	r0, r4
 8008eba:	f7f8 fcf1 	bl	80018a0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008ebe:	2109      	movs	r1, #9
 8008ec0:	4620      	mov	r0, r4
 8008ec2:	f7f8 fd05 	bl	80018d0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008ec6:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008eca:	b2c2      	uxtb	r2, r0
 8008ecc:	2109      	movs	r1, #9
 8008ece:	4620      	mov	r0, r4
}
 8008ed0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008ed4:	f7f8 bce4 	b.w	80018a0 <IOE_Write>

08008ed8 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008ed8:	4a10      	ldr	r2, [pc, #64]	; (8008f1c <stmpe811_Init+0x44>)
 8008eda:	7813      	ldrb	r3, [r2, #0]
 8008edc:	4298      	cmp	r0, r3
 8008ede:	d004      	beq.n	8008eea <stmpe811_Init+0x12>
 8008ee0:	7851      	ldrb	r1, [r2, #1]
 8008ee2:	4288      	cmp	r0, r1
 8008ee4:	d001      	beq.n	8008eea <stmpe811_Init+0x12>
 8008ee6:	b113      	cbz	r3, 8008eee <stmpe811_Init+0x16>
 8008ee8:	b101      	cbz	r1, 8008eec <stmpe811_Init+0x14>
 8008eea:	4770      	bx	lr
 8008eec:	2301      	movs	r3, #1
{
 8008eee:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008ef0:	b2c4      	uxtb	r4, r0
 8008ef2:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008ef4:	f7f8 fcd0 	bl	8001898 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008ef8:	2202      	movs	r2, #2
 8008efa:	2103      	movs	r1, #3
 8008efc:	4620      	mov	r0, r4
 8008efe:	f7f8 fccf 	bl	80018a0 <IOE_Write>
  IOE_Delay(10); 
 8008f02:	200a      	movs	r0, #10
 8008f04:	f7f8 fd18 	bl	8001938 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008f08:	4620      	mov	r0, r4
 8008f0a:	2200      	movs	r2, #0
 8008f0c:	2103      	movs	r1, #3
 8008f0e:	f7f8 fcc7 	bl	80018a0 <IOE_Write>
}
 8008f12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008f16:	2002      	movs	r0, #2
 8008f18:	f7f8 bd0e 	b.w	8001938 <IOE_Delay>
 8008f1c:	2000207c 	.word	0x2000207c

08008f20 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008f20:	4b05      	ldr	r3, [pc, #20]	; (8008f38 <SystemInit+0x18>)
 8008f22:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008f26:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008f2a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8008f2e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008f32:	6099      	str	r1, [r3, #8]
#endif
}
 8008f34:	4770      	bx	lr
 8008f36:	bf00      	nop
 8008f38:	e000ed00 	.word	0xe000ed00

08008f3c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008f3c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008f3e:	4b0b      	ldr	r3, [pc, #44]	; (8008f6c <HAL_Init+0x30>)
 8008f40:	681a      	ldr	r2, [r3, #0]
 8008f42:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008f46:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008f48:	681a      	ldr	r2, [r3, #0]
 8008f4a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008f4e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008f50:	681a      	ldr	r2, [r3, #0]
 8008f52:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008f56:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008f58:	2003      	movs	r0, #3
 8008f5a:	f000 f82d 	bl	8008fb8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008f5e:	2000      	movs	r0, #0
 8008f60:	f7f9 f972 	bl	8002248 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008f64:	f7f8 fef6 	bl	8001d54 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008f68:	2000      	movs	r0, #0
 8008f6a:	bd08      	pop	{r3, pc}
 8008f6c:	40023c00 	.word	0x40023c00

08008f70 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008f70:	4a03      	ldr	r2, [pc, #12]	; (8008f80 <HAL_IncTick+0x10>)
 8008f72:	4b04      	ldr	r3, [pc, #16]	; (8008f84 <HAL_IncTick+0x14>)
 8008f74:	6811      	ldr	r1, [r2, #0]
 8008f76:	781b      	ldrb	r3, [r3, #0]
 8008f78:	440b      	add	r3, r1
 8008f7a:	6013      	str	r3, [r2, #0]
}
 8008f7c:	4770      	bx	lr
 8008f7e:	bf00      	nop
 8008f80:	20002080 	.word	0x20002080
 8008f84:	2000007c 	.word	0x2000007c

08008f88 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008f88:	4b01      	ldr	r3, [pc, #4]	; (8008f90 <HAL_GetTick+0x8>)
 8008f8a:	6818      	ldr	r0, [r3, #0]
}
 8008f8c:	4770      	bx	lr
 8008f8e:	bf00      	nop
 8008f90:	20002080 	.word	0x20002080

08008f94 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008f94:	b538      	push	{r3, r4, r5, lr}
 8008f96:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008f98:	f7ff fff6 	bl	8008f88 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008f9c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8008f9e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8008fa0:	d002      	beq.n	8008fa8 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8008fa2:	4b04      	ldr	r3, [pc, #16]	; (8008fb4 <HAL_Delay+0x20>)
 8008fa4:	781b      	ldrb	r3, [r3, #0]
 8008fa6:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008fa8:	f7ff ffee 	bl	8008f88 <HAL_GetTick>
 8008fac:	1b43      	subs	r3, r0, r5
 8008fae:	42a3      	cmp	r3, r4
 8008fb0:	d3fa      	bcc.n	8008fa8 <HAL_Delay+0x14>
  {
  }
}
 8008fb2:	bd38      	pop	{r3, r4, r5, pc}
 8008fb4:	2000007c 	.word	0x2000007c

08008fb8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8008fb8:	4907      	ldr	r1, [pc, #28]	; (8008fd8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8008fba:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008fbc:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008fbe:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008fc2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008fc6:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8008fc8:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8008fca:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008fce:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8008fd2:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8008fd4:	4770      	bx	lr
 8008fd6:	bf00      	nop
 8008fd8:	e000ed00 	.word	0xe000ed00

08008fdc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8008fdc:	4b1c      	ldr	r3, [pc, #112]	; (8009050 <HAL_NVIC_SetPriority+0x74>)
 8008fde:	68db      	ldr	r3, [r3, #12]
 8008fe0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8008fe4:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008fe6:	f1c3 0e07 	rsb	lr, r3, #7
 8008fea:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008fee:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008ff2:	bf28      	it	cs
 8008ff4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008ff8:	f1bc 0f06 	cmp.w	ip, #6
 8008ffc:	d91b      	bls.n	8009036 <HAL_NVIC_SetPriority+0x5a>
 8008ffe:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009000:	f04f 3cff 	mov.w	ip, #4294967295
 8009004:	fa0c fc03 	lsl.w	ip, ip, r3
 8009008:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800900c:	f04f 3cff 	mov.w	ip, #4294967295
 8009010:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009014:	ea21 010c 	bic.w	r1, r1, ip
 8009018:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800901a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800901c:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009020:	db0c      	blt.n	800903c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009022:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009026:	0109      	lsls	r1, r1, #4
 8009028:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800902c:	b2c9      	uxtb	r1, r1
 800902e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009032:	f85d fb04 	ldr.w	pc, [sp], #4
 8009036:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009038:	4613      	mov	r3, r2
 800903a:	e7e7      	b.n	800900c <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800903c:	4b05      	ldr	r3, [pc, #20]	; (8009054 <HAL_NVIC_SetPriority+0x78>)
 800903e:	f000 000f 	and.w	r0, r0, #15
 8009042:	0109      	lsls	r1, r1, #4
 8009044:	4403      	add	r3, r0
 8009046:	b2c9      	uxtb	r1, r1
 8009048:	7619      	strb	r1, [r3, #24]
 800904a:	f85d fb04 	ldr.w	pc, [sp], #4
 800904e:	bf00      	nop
 8009050:	e000ed00 	.word	0xe000ed00
 8009054:	e000ecfc 	.word	0xe000ecfc

08009058 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009058:	2800      	cmp	r0, #0
 800905a:	db07      	blt.n	800906c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800905c:	0941      	lsrs	r1, r0, #5
 800905e:	4a04      	ldr	r2, [pc, #16]	; (8009070 <HAL_NVIC_EnableIRQ+0x18>)
 8009060:	f000 001f 	and.w	r0, r0, #31
 8009064:	2301      	movs	r3, #1
 8009066:	4083      	lsls	r3, r0
 8009068:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800906c:	4770      	bx	lr
 800906e:	bf00      	nop
 8009070:	e000e100 	.word	0xe000e100

08009074 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009074:	b180      	cbz	r0, 8009098 <HAL_CRC_Init+0x24>
{
 8009076:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009078:	7943      	ldrb	r3, [r0, #5]
 800907a:	4604      	mov	r4, r0
 800907c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009080:	b11b      	cbz	r3, 800908a <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009082:	2301      	movs	r3, #1
 8009084:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009086:	2000      	movs	r0, #0
}
 8009088:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800908a:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800908c:	f7f8 fe82 	bl	8001d94 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009090:	2301      	movs	r3, #1
 8009092:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009094:	2000      	movs	r0, #0
}
 8009096:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009098:	2001      	movs	r0, #1
}
 800909a:	4770      	bx	lr

0800909c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800909c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80090a0:	2b02      	cmp	r3, #2
 80090a2:	d003      	beq.n	80090ac <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80090a4:	2380      	movs	r3, #128	; 0x80
 80090a6:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80090a8:	2001      	movs	r0, #1
 80090aa:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80090ac:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80090ae:	2305      	movs	r3, #5
 80090b0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80090b4:	6813      	ldr	r3, [r2, #0]
 80090b6:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 80090ba:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 80090bc:	6013      	str	r3, [r2, #0]
}
 80090be:	4770      	bx	lr

080090c0 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 80090c0:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 80090c4:	4770      	bx	lr
 80090c6:	bf00      	nop

080090c8 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80090c8:	b348      	cbz	r0, 800911e <HAL_DMA2D_Init+0x56>
{
 80090ca:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80090cc:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80090d0:	4604      	mov	r4, r0
 80090d2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80090d6:	b1eb      	cbz	r3, 8009114 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80090d8:	6822      	ldr	r2, [r4, #0]
 80090da:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80090dc:	2302      	movs	r3, #2
 80090de:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80090e2:	6813      	ldr	r3, [r2, #0]
 80090e4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80090e8:	430b      	orrs	r3, r1
 80090ea:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80090ec:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80090ee:	68a1      	ldr	r1, [r4, #8]
 80090f0:	f023 0307 	bic.w	r3, r3, #7
 80090f4:	430b      	orrs	r3, r1
 80090f6:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80090f8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80090fa:	68e1      	ldr	r1, [r4, #12]
 80090fc:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8009100:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8009104:	430b      	orrs	r3, r1
 8009106:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009108:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800910a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800910c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800910e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8009112:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8009114:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8009118:	f7f8 fe56 	bl	8001dc8 <HAL_DMA2D_MspInit>
 800911c:	e7dc      	b.n	80090d8 <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 800911e:	2001      	movs	r0, #1
}
 8009120:	4770      	bx	lr
 8009122:	bf00      	nop

08009124 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8009124:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8009128:	2b01      	cmp	r3, #1
 800912a:	d04d      	beq.n	80091c8 <HAL_DMA2D_ConfigLayer+0xa4>
 800912c:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800912e:	2302      	movs	r3, #2
{
 8009130:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009132:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 8009136:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800913a:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800913e:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8009142:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009146:	3a09      	subs	r2, #9
 8009148:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800914a:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800914e:	d91d      	bls.n	800918c <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8009150:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8009154:	b189      	cbz	r1, 800917a <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009156:	6801      	ldr	r1, [r0, #0]
 8009158:	4a1c      	ldr	r2, [pc, #112]	; (80091cc <HAL_DMA2D_ConfigLayer+0xa8>)
 800915a:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800915c:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009160:	402a      	ands	r2, r5
 8009162:	431a      	orrs	r2, r3
 8009164:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009166:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8009168:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800916a:	2201      	movs	r2, #1
 800916c:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8009170:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 8009174:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 8009176:	4618      	mov	r0, r3
}
 8009178:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800917a:	6801      	ldr	r1, [r0, #0]
 800917c:	4a13      	ldr	r2, [pc, #76]	; (80091cc <HAL_DMA2D_ConfigLayer+0xa8>)
 800917e:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8009180:	4022      	ands	r2, r4
 8009182:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009184:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009186:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009188:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800918a:	e7ed      	b.n	8009168 <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800918c:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 8009190:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8009192:	b961      	cbnz	r1, 80091ae <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009194:	6801      	ldr	r1, [r0, #0]
 8009196:	4a0d      	ldr	r2, [pc, #52]	; (80091cc <HAL_DMA2D_ConfigLayer+0xa8>)
 8009198:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800919a:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800919c:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800919e:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80091a0:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80091a2:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80091a6:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80091a8:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80091aa:	628c      	str	r4, [r1, #40]	; 0x28
 80091ac:	e7dc      	b.n	8009168 <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80091ae:	6804      	ldr	r4, [r0, #0]
 80091b0:	4906      	ldr	r1, [pc, #24]	; (80091cc <HAL_DMA2D_ConfigLayer+0xa8>)
 80091b2:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80091b4:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80091b8:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80091ba:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80091be:	4319      	orrs	r1, r3
 80091c0:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80091c2:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80091c4:	6222      	str	r2, [r4, #32]
 80091c6:	e7cf      	b.n	8009168 <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 80091c8:	2002      	movs	r0, #2
}
 80091ca:	4770      	bx	lr
 80091cc:	00fcfff0 	.word	0x00fcfff0

080091d0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80091d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80091d4:	2200      	movs	r2, #0
 80091d6:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80091d8:	f8df a260 	ldr.w	sl, [pc, #608]	; 800943c <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80091dc:	4e90      	ldr	r6, [pc, #576]	; (8009420 <HAL_GPIO_Init+0x250>)
{
 80091de:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 80091e0:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80091e2:	4689      	mov	r9, r1
 80091e4:	e005      	b.n	80091f2 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80091e6:	3301      	adds	r3, #1
 80091e8:	2b10      	cmp	r3, #16
 80091ea:	f102 0202 	add.w	r2, r2, #2
 80091ee:	f000 8095 	beq.w	800931c <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 80091f2:	2101      	movs	r1, #1
 80091f4:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80091f6:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 80091fa:	43a1      	bics	r1, r4
 80091fc:	d1f3      	bne.n	80091e6 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80091fe:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009202:	f00c 0103 	and.w	r1, ip, #3
 8009206:	1e4d      	subs	r5, r1, #1
 8009208:	2d01      	cmp	r5, #1
 800920a:	f240 808a 	bls.w	8009322 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800920e:	2903      	cmp	r1, #3
 8009210:	f040 80ca 	bne.w	80093a8 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009214:	4091      	lsls	r1, r2
 8009216:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009218:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800921a:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800921c:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800921e:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009222:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009224:	d0df      	beq.n	80091e6 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009226:	2100      	movs	r1, #0
 8009228:	9103      	str	r1, [sp, #12]
 800922a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800922e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009232:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009236:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800923a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800923e:	9103      	str	r1, [sp, #12]
 8009240:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009242:	f023 0103 	bic.w	r1, r3, #3
 8009246:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800924a:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800924e:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009252:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009254:	00bf      	lsls	r7, r7, #2
 8009256:	f04f 0e0f 	mov.w	lr, #15
 800925a:	fa0e fe07 	lsl.w	lr, lr, r7
 800925e:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009262:	4d70      	ldr	r5, [pc, #448]	; (8009424 <HAL_GPIO_Init+0x254>)
 8009264:	42a8      	cmp	r0, r5
 8009266:	d02e      	beq.n	80092c6 <HAL_GPIO_Init+0xf6>
 8009268:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800926c:	42a8      	cmp	r0, r5
 800926e:	f000 809f 	beq.w	80093b0 <HAL_GPIO_Init+0x1e0>
 8009272:	4d6d      	ldr	r5, [pc, #436]	; (8009428 <HAL_GPIO_Init+0x258>)
 8009274:	42a8      	cmp	r0, r5
 8009276:	f000 80a2 	beq.w	80093be <HAL_GPIO_Init+0x1ee>
 800927a:	4d6c      	ldr	r5, [pc, #432]	; (800942c <HAL_GPIO_Init+0x25c>)
 800927c:	42a8      	cmp	r0, r5
 800927e:	f000 80a5 	beq.w	80093cc <HAL_GPIO_Init+0x1fc>
 8009282:	4d6b      	ldr	r5, [pc, #428]	; (8009430 <HAL_GPIO_Init+0x260>)
 8009284:	42a8      	cmp	r0, r5
 8009286:	f000 80a8 	beq.w	80093da <HAL_GPIO_Init+0x20a>
 800928a:	4d6a      	ldr	r5, [pc, #424]	; (8009434 <HAL_GPIO_Init+0x264>)
 800928c:	42a8      	cmp	r0, r5
 800928e:	f000 80b2 	beq.w	80093f6 <HAL_GPIO_Init+0x226>
 8009292:	4d69      	ldr	r5, [pc, #420]	; (8009438 <HAL_GPIO_Init+0x268>)
 8009294:	42a8      	cmp	r0, r5
 8009296:	f000 80b5 	beq.w	8009404 <HAL_GPIO_Init+0x234>
 800929a:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009440 <HAL_GPIO_Init+0x270>
 800929e:	4570      	cmp	r0, lr
 80092a0:	f000 80a2 	beq.w	80093e8 <HAL_GPIO_Init+0x218>
 80092a4:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009444 <HAL_GPIO_Init+0x274>
 80092a8:	4570      	cmp	r0, lr
 80092aa:	f000 80b2 	beq.w	8009412 <HAL_GPIO_Init+0x242>
 80092ae:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009448 <HAL_GPIO_Init+0x278>
 80092b2:	4570      	cmp	r0, lr
 80092b4:	bf0c      	ite	eq
 80092b6:	f04f 0e09 	moveq.w	lr, #9
 80092ba:	f04f 0e0a 	movne.w	lr, #10
 80092be:	fa0e f707 	lsl.w	r7, lr, r7
 80092c2:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80092c6:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 80092ca:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80092cc:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80092d0:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80092d4:	bf0c      	ite	eq
 80092d6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092d8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 80092dc:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 80092de:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80092e0:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 80092e4:	bf0c      	ite	eq
 80092e6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092e8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 80092ec:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 80092ee:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80092f0:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80092f4:	bf0c      	ite	eq
 80092f6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092f8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 80092fc:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80092fe:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009300:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009304:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009308:	bf0c      	ite	eq
 800930a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800930c:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009310:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009312:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009314:	f102 0202 	add.w	r2, r2, #2
 8009318:	f47f af6b 	bne.w	80091f2 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800931c:	b005      	add	sp, #20
 800931e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009322:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009326:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800932a:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800932e:	2503      	movs	r5, #3
 8009330:	fa05 f802 	lsl.w	r8, r5, r2
 8009334:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009338:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800933c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800933e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009340:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009344:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009348:	409f      	lsls	r7, r3
 800934a:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800934e:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009352:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009354:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009356:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800935a:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800935e:	4097      	lsls	r7, r2
 8009360:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009364:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8009366:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009368:	fa01 f102 	lsl.w	r1, r1, r2
 800936c:	f47f af54 	bne.w	8009218 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8009370:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8009374:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009378:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800937c:	f8de 7020 	ldr.w	r7, [lr, #32]
 8009380:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009382:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009386:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800938a:	fa07 f708 	lsl.w	r7, r7, r8
 800938e:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009390:	270f      	movs	r7, #15
 8009392:	fa07 f808 	lsl.w	r8, r7, r8
 8009396:	9f00      	ldr	r7, [sp, #0]
 8009398:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800939c:	9f01      	ldr	r7, [sp, #4]
 800939e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80093a2:	f8ce 7020 	str.w	r7, [lr, #32]
 80093a6:	e737      	b.n	8009218 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80093a8:	2503      	movs	r5, #3
 80093aa:	4095      	lsls	r5, r2
 80093ac:	43ed      	mvns	r5, r5
 80093ae:	e7d1      	b.n	8009354 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80093b0:	f04f 0e01 	mov.w	lr, #1
 80093b4:	fa0e f707 	lsl.w	r7, lr, r7
 80093b8:	ea48 0807 	orr.w	r8, r8, r7
 80093bc:	e783      	b.n	80092c6 <HAL_GPIO_Init+0xf6>
 80093be:	f04f 0e02 	mov.w	lr, #2
 80093c2:	fa0e f707 	lsl.w	r7, lr, r7
 80093c6:	ea48 0807 	orr.w	r8, r8, r7
 80093ca:	e77c      	b.n	80092c6 <HAL_GPIO_Init+0xf6>
 80093cc:	f04f 0e03 	mov.w	lr, #3
 80093d0:	fa0e f707 	lsl.w	r7, lr, r7
 80093d4:	ea48 0807 	orr.w	r8, r8, r7
 80093d8:	e775      	b.n	80092c6 <HAL_GPIO_Init+0xf6>
 80093da:	f04f 0e04 	mov.w	lr, #4
 80093de:	fa0e f707 	lsl.w	r7, lr, r7
 80093e2:	ea48 0807 	orr.w	r8, r8, r7
 80093e6:	e76e      	b.n	80092c6 <HAL_GPIO_Init+0xf6>
 80093e8:	f04f 0e07 	mov.w	lr, #7
 80093ec:	fa0e f707 	lsl.w	r7, lr, r7
 80093f0:	ea48 0807 	orr.w	r8, r8, r7
 80093f4:	e767      	b.n	80092c6 <HAL_GPIO_Init+0xf6>
 80093f6:	f04f 0e05 	mov.w	lr, #5
 80093fa:	fa0e f707 	lsl.w	r7, lr, r7
 80093fe:	ea48 0807 	orr.w	r8, r8, r7
 8009402:	e760      	b.n	80092c6 <HAL_GPIO_Init+0xf6>
 8009404:	f04f 0e06 	mov.w	lr, #6
 8009408:	fa0e f707 	lsl.w	r7, lr, r7
 800940c:	ea48 0807 	orr.w	r8, r8, r7
 8009410:	e759      	b.n	80092c6 <HAL_GPIO_Init+0xf6>
 8009412:	f04f 0e08 	mov.w	lr, #8
 8009416:	fa0e f707 	lsl.w	r7, lr, r7
 800941a:	ea48 0807 	orr.w	r8, r8, r7
 800941e:	e752      	b.n	80092c6 <HAL_GPIO_Init+0xf6>
 8009420:	40013c00 	.word	0x40013c00
 8009424:	40020000 	.word	0x40020000
 8009428:	40020800 	.word	0x40020800
 800942c:	40020c00 	.word	0x40020c00
 8009430:	40021000 	.word	0x40021000
 8009434:	40021400 	.word	0x40021400
 8009438:	40021800 	.word	0x40021800
 800943c:	40023800 	.word	0x40023800
 8009440:	40021c00 	.word	0x40021c00
 8009444:	40022000 	.word	0x40022000
 8009448:	40022400 	.word	0x40022400

0800944c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800944c:	6903      	ldr	r3, [r0, #16]
 800944e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009450:	bf14      	ite	ne
 8009452:	2001      	movne	r0, #1
 8009454:	2000      	moveq	r0, #0
 8009456:	4770      	bx	lr

08009458 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009458:	b902      	cbnz	r2, 800945c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800945a:	0409      	lsls	r1, r1, #16
 800945c:	6181      	str	r1, [r0, #24]
  }
}
 800945e:	4770      	bx	lr

08009460 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009460:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009462:	ea01 0203 	and.w	r2, r1, r3
 8009466:	ea21 0103 	bic.w	r1, r1, r3
 800946a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800946e:	6181      	str	r1, [r0, #24]
}
 8009470:	4770      	bx	lr
 8009472:	bf00      	nop

08009474 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8009474:	4770      	bx	lr
 8009476:	bf00      	nop

08009478 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8009478:	4a04      	ldr	r2, [pc, #16]	; (800948c <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800947a:	6951      	ldr	r1, [r2, #20]
 800947c:	4201      	tst	r1, r0
 800947e:	d100      	bne.n	8009482 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8009480:	4770      	bx	lr
{
 8009482:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8009484:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8009486:	f7ff fff5 	bl	8009474 <HAL_GPIO_EXTI_Callback>
}
 800948a:	bd08      	pop	{r3, pc}
 800948c:	40013c00 	.word	0x40013c00

08009490 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8009490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009494:	6804      	ldr	r4, [r0, #0]
{
 8009496:	b083      	sub	sp, #12
 8009498:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800949a:	6823      	ldr	r3, [r4, #0]
{
 800949c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80094a0:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80094a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80094a8:	4606      	mov	r6, r0
 80094aa:	468a      	mov	sl, r1
 80094ac:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80094ae:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80094b0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80094b4:	d136      	bne.n	8009524 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80094b6:	6965      	ldr	r5, [r4, #20]
 80094b8:	07e8      	lsls	r0, r5, #31
 80094ba:	d5fc      	bpl.n	80094b6 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80094bc:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 80094c0:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80094c2:	f1b9 3fff 	cmp.w	r9, #4294967295
 80094c6:	d003      	beq.n	80094d0 <I2C_RequestMemoryWrite+0x40>
 80094c8:	e04f      	b.n	800956a <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80094ca:	6961      	ldr	r1, [r4, #20]
 80094cc:	054d      	lsls	r5, r1, #21
 80094ce:	d45d      	bmi.n	800958c <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80094d0:	6961      	ldr	r1, [r4, #20]
 80094d2:	078b      	lsls	r3, r1, #30
 80094d4:	d5f9      	bpl.n	80094ca <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80094d6:	2300      	movs	r3, #0
 80094d8:	9301      	str	r3, [sp, #4]
 80094da:	6963      	ldr	r3, [r4, #20]
 80094dc:	9301      	str	r3, [sp, #4]
 80094de:	69a3      	ldr	r3, [r4, #24]
 80094e0:	9301      	str	r3, [sp, #4]
 80094e2:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80094e4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80094e8:	f040 8088 	bne.w	80095fc <I2C_RequestMemoryWrite+0x16c>
 80094ec:	6963      	ldr	r3, [r4, #20]
 80094ee:	061a      	lsls	r2, r3, #24
 80094f0:	d464      	bmi.n	80095bc <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80094f2:	6963      	ldr	r3, [r4, #20]
 80094f4:	055b      	lsls	r3, r3, #21
 80094f6:	d5f9      	bpl.n	80094ec <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 80094f8:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094fa:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80094fe:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009500:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009502:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009504:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009508:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800950c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800950e:	f043 0304 	orr.w	r3, r3, #4
 8009512:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009514:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009516:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009518:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800951a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800951e:	d066      	beq.n	80095ee <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009520:	2001      	movs	r0, #1
 8009522:	e01f      	b.n	8009564 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009524:	6963      	ldr	r3, [r4, #20]
 8009526:	07d9      	lsls	r1, r3, #31
 8009528:	d4c8      	bmi.n	80094bc <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800952a:	f7ff fd2d 	bl	8008f88 <HAL_GetTick>
 800952e:	eba0 000b 	sub.w	r0, r0, fp
 8009532:	4581      	cmp	r9, r0
 8009534:	d304      	bcc.n	8009540 <I2C_RequestMemoryWrite+0xb0>
 8009536:	f1b9 0f00 	cmp.w	r9, #0
 800953a:	d001      	beq.n	8009540 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800953c:	6834      	ldr	r4, [r6, #0]
 800953e:	e7b7      	b.n	80094b0 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009540:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009542:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009544:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009546:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800954a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800954e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009550:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009552:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009556:	f042 0220 	orr.w	r2, r2, #32
 800955a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800955c:	680b      	ldr	r3, [r1, #0]
 800955e:	05dc      	lsls	r4, r3, #23
 8009560:	d435      	bmi.n	80095ce <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8009562:	2003      	movs	r0, #3
}
 8009564:	b003      	add	sp, #12
 8009566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800956a:	6963      	ldr	r3, [r4, #20]
 800956c:	0798      	lsls	r0, r3, #30
 800956e:	d4b2      	bmi.n	80094d6 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009570:	6963      	ldr	r3, [r4, #20]
 8009572:	055a      	lsls	r2, r3, #21
 8009574:	d40a      	bmi.n	800958c <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009576:	f7ff fd07 	bl	8008f88 <HAL_GetTick>
 800957a:	eba0 000b 	sub.w	r0, r0, fp
 800957e:	4581      	cmp	r9, r0
 8009580:	d34e      	bcc.n	8009620 <I2C_RequestMemoryWrite+0x190>
 8009582:	f1b9 0f00 	cmp.w	r9, #0
 8009586:	d04b      	beq.n	8009620 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009588:	6834      	ldr	r4, [r6, #0]
 800958a:	e79a      	b.n	80094c2 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800958c:	6823      	ldr	r3, [r4, #0]
 800958e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009592:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009594:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009596:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800959a:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800959c:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800959e:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80095a0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80095a4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80095a8:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80095aa:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80095ae:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80095b2:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80095b4:	6433      	str	r3, [r6, #64]	; 0x40
}
 80095b6:	b003      	add	sp, #12
 80095b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80095bc:	f1b8 0f01 	cmp.w	r8, #1
 80095c0:	d109      	bne.n	80095d6 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80095c2:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 80095c4:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80095c6:	6127      	str	r7, [r4, #16]
}
 80095c8:	b003      	add	sp, #12
 80095ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80095ce:	f44f 7300 	mov.w	r3, #512	; 0x200
 80095d2:	6433      	str	r3, [r6, #64]	; 0x40
 80095d4:	e7c5      	b.n	8009562 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80095d6:	0a3b      	lsrs	r3, r7, #8
 80095d8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095da:	f1b9 3fff 	cmp.w	r9, #4294967295
 80095de:	d12e      	bne.n	800963e <I2C_RequestMemoryWrite+0x1ae>
 80095e0:	6963      	ldr	r3, [r4, #20]
 80095e2:	0619      	lsls	r1, r3, #24
 80095e4:	d4ed      	bmi.n	80095c2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80095e6:	6963      	ldr	r3, [r4, #20]
 80095e8:	055a      	lsls	r2, r3, #21
 80095ea:	d5f9      	bpl.n	80095e0 <I2C_RequestMemoryWrite+0x150>
 80095ec:	e784      	b.n	80094f8 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80095ee:	6832      	ldr	r2, [r6, #0]
 80095f0:	6813      	ldr	r3, [r2, #0]
 80095f2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 80095f6:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80095f8:	6013      	str	r3, [r2, #0]
 80095fa:	e7b3      	b.n	8009564 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095fc:	6963      	ldr	r3, [r4, #20]
 80095fe:	061d      	lsls	r5, r3, #24
 8009600:	d4dc      	bmi.n	80095bc <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009602:	6963      	ldr	r3, [r4, #20]
 8009604:	0559      	lsls	r1, r3, #21
 8009606:	f53f af77 	bmi.w	80094f8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800960a:	f7ff fcbd 	bl	8008f88 <HAL_GetTick>
 800960e:	eba0 000b 	sub.w	r0, r0, fp
 8009612:	4581      	cmp	r9, r0
 8009614:	d325      	bcc.n	8009662 <I2C_RequestMemoryWrite+0x1d2>
 8009616:	f1b9 0f00 	cmp.w	r9, #0
 800961a:	d022      	beq.n	8009662 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800961c:	6834      	ldr	r4, [r6, #0]
 800961e:	e761      	b.n	80094e4 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009620:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009622:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009624:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009626:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800962a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800962e:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009630:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009634:	f043 0320 	orr.w	r3, r3, #32
 8009638:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800963a:	2001      	movs	r0, #1
 800963c:	e792      	b.n	8009564 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800963e:	6963      	ldr	r3, [r4, #20]
 8009640:	061b      	lsls	r3, r3, #24
 8009642:	d4be      	bmi.n	80095c2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009644:	6963      	ldr	r3, [r4, #20]
 8009646:	0558      	lsls	r0, r3, #21
 8009648:	f53f af56 	bmi.w	80094f8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800964c:	f7ff fc9c 	bl	8008f88 <HAL_GetTick>
 8009650:	eba0 000b 	sub.w	r0, r0, fp
 8009654:	4581      	cmp	r9, r0
 8009656:	d304      	bcc.n	8009662 <I2C_RequestMemoryWrite+0x1d2>
 8009658:	f1b9 0f00 	cmp.w	r9, #0
 800965c:	d001      	beq.n	8009662 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800965e:	6834      	ldr	r4, [r6, #0]
 8009660:	e7bb      	b.n	80095da <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009662:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009664:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009666:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009668:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800966c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009670:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009672:	4313      	orrs	r3, r2
 8009674:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009676:	e74d      	b.n	8009514 <I2C_RequestMemoryWrite+0x84>

08009678 <I2C_RequestMemoryRead>:
{
 8009678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800967c:	6804      	ldr	r4, [r0, #0]
{
 800967e:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009680:	6823      	ldr	r3, [r4, #0]
 8009682:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009686:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009688:	6823      	ldr	r3, [r4, #0]
{
 800968a:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800968c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009690:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009694:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009698:	6023      	str	r3, [r4, #0]
{
 800969a:	4606      	mov	r6, r0
 800969c:	468b      	mov	fp, r1
 800969e:	4617      	mov	r7, r2
 80096a0:	f1ba 3fff 	cmp.w	sl, #4294967295
 80096a4:	d13a      	bne.n	800971c <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80096a6:	6965      	ldr	r5, [r4, #20]
 80096a8:	07eb      	lsls	r3, r5, #31
 80096aa:	d5fc      	bpl.n	80096a6 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80096ac:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 80096b0:	6123      	str	r3, [r4, #16]
 80096b2:	fa5f fb8b 	uxtb.w	fp, fp
 80096b6:	f1ba 3fff 	cmp.w	sl, #4294967295
 80096ba:	d003      	beq.n	80096c4 <I2C_RequestMemoryRead+0x4c>
 80096bc:	e069      	b.n	8009792 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096be:	6965      	ldr	r5, [r4, #20]
 80096c0:	056a      	lsls	r2, r5, #21
 80096c2:	d44e      	bmi.n	8009762 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80096c4:	6965      	ldr	r5, [r4, #20]
 80096c6:	07a9      	lsls	r1, r5, #30
 80096c8:	d5f9      	bpl.n	80096be <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80096ca:	2300      	movs	r3, #0
 80096cc:	9301      	str	r3, [sp, #4]
 80096ce:	6963      	ldr	r3, [r4, #20]
 80096d0:	9301      	str	r3, [sp, #4]
 80096d2:	69a3      	ldr	r3, [r4, #24]
 80096d4:	9301      	str	r3, [sp, #4]
 80096d6:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096d8:	f1ba 3fff 	cmp.w	sl, #4294967295
 80096dc:	f040 80bd 	bne.w	800985a <I2C_RequestMemoryRead+0x1e2>
 80096e0:	6963      	ldr	r3, [r4, #20]
 80096e2:	0618      	lsls	r0, r3, #24
 80096e4:	d468      	bmi.n	80097b8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096e6:	6963      	ldr	r3, [r4, #20]
 80096e8:	0559      	lsls	r1, r3, #21
 80096ea:	d5f9      	bpl.n	80096e0 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096ec:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096ee:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80096f2:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096f4:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096f6:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80096f8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80096fc:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009700:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009702:	f043 0304 	orr.w	r3, r3, #4
 8009706:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009708:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800970a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800970c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800970e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009712:	d070      	beq.n	80097f6 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009714:	2001      	movs	r0, #1
}
 8009716:	b003      	add	sp, #12
 8009718:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800971c:	6963      	ldr	r3, [r4, #20]
 800971e:	07dd      	lsls	r5, r3, #31
 8009720:	d4c4      	bmi.n	80096ac <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009722:	f7ff fc31 	bl	8008f88 <HAL_GetTick>
 8009726:	eba0 0009 	sub.w	r0, r0, r9
 800972a:	4582      	cmp	sl, r0
 800972c:	d304      	bcc.n	8009738 <I2C_RequestMemoryRead+0xc0>
 800972e:	f1ba 0f00 	cmp.w	sl, #0
 8009732:	d001      	beq.n	8009738 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009734:	6834      	ldr	r4, [r6, #0]
 8009736:	e7b3      	b.n	80096a0 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009738:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800973a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800973c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800973e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009742:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009746:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009748:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800974a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800974e:	f042 0220 	orr.w	r2, r2, #32
 8009752:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009754:	680b      	ldr	r3, [r1, #0]
 8009756:	05dc      	lsls	r4, r3, #23
 8009758:	d43d      	bmi.n	80097d6 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800975a:	2003      	movs	r0, #3
}
 800975c:	b003      	add	sp, #12
 800975e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009762:	6823      	ldr	r3, [r4, #0]
 8009764:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009768:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800976a:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800976c:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009770:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009772:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009774:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009776:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800977a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800977e:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009780:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009784:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009788:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800978a:	6433      	str	r3, [r6, #64]	; 0x40
}
 800978c:	b003      	add	sp, #12
 800978e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009792:	6963      	ldr	r3, [r4, #20]
 8009794:	079b      	lsls	r3, r3, #30
 8009796:	d498      	bmi.n	80096ca <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009798:	6963      	ldr	r3, [r4, #20]
 800979a:	0558      	lsls	r0, r3, #21
 800979c:	d4e1      	bmi.n	8009762 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800979e:	f7ff fbf3 	bl	8008f88 <HAL_GetTick>
 80097a2:	eba0 0009 	sub.w	r0, r0, r9
 80097a6:	4582      	cmp	sl, r0
 80097a8:	f0c0 808f 	bcc.w	80098ca <I2C_RequestMemoryRead+0x252>
 80097ac:	f1ba 0f00 	cmp.w	sl, #0
 80097b0:	f000 808b 	beq.w	80098ca <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80097b4:	6834      	ldr	r4, [r6, #0]
 80097b6:	e77e      	b.n	80096b6 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80097b8:	f1b8 0f01 	cmp.w	r8, #1
 80097bc:	d10f      	bne.n	80097de <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80097be:	b2ff      	uxtb	r7, r7
 80097c0:	6127      	str	r7, [r4, #16]
 80097c2:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097c6:	d16e      	bne.n	80098a6 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097c8:	6963      	ldr	r3, [r4, #20]
 80097ca:	061b      	lsls	r3, r3, #24
 80097cc:	d41a      	bmi.n	8009804 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097ce:	6963      	ldr	r3, [r4, #20]
 80097d0:	055f      	lsls	r7, r3, #21
 80097d2:	d5f9      	bpl.n	80097c8 <I2C_RequestMemoryRead+0x150>
 80097d4:	e78a      	b.n	80096ec <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80097d6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80097da:	6433      	str	r3, [r6, #64]	; 0x40
 80097dc:	e7bd      	b.n	800975a <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80097de:	0a3b      	lsrs	r3, r7, #8
 80097e0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097e2:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097e6:	d17e      	bne.n	80098e6 <I2C_RequestMemoryRead+0x26e>
 80097e8:	6963      	ldr	r3, [r4, #20]
 80097ea:	061d      	lsls	r5, r3, #24
 80097ec:	d4e7      	bmi.n	80097be <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097ee:	6963      	ldr	r3, [r4, #20]
 80097f0:	0558      	lsls	r0, r3, #21
 80097f2:	d5f9      	bpl.n	80097e8 <I2C_RequestMemoryRead+0x170>
 80097f4:	e77a      	b.n	80096ec <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097f6:	6832      	ldr	r2, [r6, #0]
 80097f8:	6813      	ldr	r3, [r2, #0]
 80097fa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 80097fe:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009800:	6013      	str	r3, [r2, #0]
 8009802:	e7ab      	b.n	800975c <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009804:	6823      	ldr	r3, [r4, #0]
 8009806:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800980a:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800980c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009810:	d113      	bne.n	800983a <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009812:	6963      	ldr	r3, [r4, #20]
 8009814:	07d8      	lsls	r0, r3, #31
 8009816:	d5fc      	bpl.n	8009812 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009818:	f04b 0301 	orr.w	r3, fp, #1
 800981c:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800981e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009822:	d003      	beq.n	800982c <I2C_RequestMemoryRead+0x1b4>
 8009824:	e02b      	b.n	800987e <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009826:	6963      	ldr	r3, [r4, #20]
 8009828:	055b      	lsls	r3, r3, #21
 800982a:	d49a      	bmi.n	8009762 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800982c:	6963      	ldr	r3, [r4, #20]
 800982e:	43db      	mvns	r3, r3
 8009830:	f013 0302 	ands.w	r3, r3, #2
 8009834:	d1f7      	bne.n	8009826 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009836:	4618      	mov	r0, r3
 8009838:	e790      	b.n	800975c <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800983a:	6963      	ldr	r3, [r4, #20]
 800983c:	07d9      	lsls	r1, r3, #31
 800983e:	d4eb      	bmi.n	8009818 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009840:	f7ff fba2 	bl	8008f88 <HAL_GetTick>
 8009844:	eba0 0009 	sub.w	r0, r0, r9
 8009848:	4582      	cmp	sl, r0
 800984a:	f4ff af75 	bcc.w	8009738 <I2C_RequestMemoryRead+0xc0>
 800984e:	f1ba 0f00 	cmp.w	sl, #0
 8009852:	f43f af71 	beq.w	8009738 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009856:	6834      	ldr	r4, [r6, #0]
 8009858:	e7d8      	b.n	800980c <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800985a:	6963      	ldr	r3, [r4, #20]
 800985c:	061a      	lsls	r2, r3, #24
 800985e:	d4ab      	bmi.n	80097b8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009860:	6963      	ldr	r3, [r4, #20]
 8009862:	055d      	lsls	r5, r3, #21
 8009864:	f53f af42 	bmi.w	80096ec <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009868:	f7ff fb8e 	bl	8008f88 <HAL_GetTick>
 800986c:	eba0 0009 	sub.w	r0, r0, r9
 8009870:	4582      	cmp	sl, r0
 8009872:	d34b      	bcc.n	800990c <I2C_RequestMemoryRead+0x294>
 8009874:	f1ba 0f00 	cmp.w	sl, #0
 8009878:	d048      	beq.n	800990c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800987a:	6834      	ldr	r4, [r6, #0]
 800987c:	e72c      	b.n	80096d8 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800987e:	6963      	ldr	r3, [r4, #20]
 8009880:	43db      	mvns	r3, r3
 8009882:	f013 0302 	ands.w	r3, r3, #2
 8009886:	d0d6      	beq.n	8009836 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009888:	6963      	ldr	r3, [r4, #20]
 800988a:	055a      	lsls	r2, r3, #21
 800988c:	f53f af69 	bmi.w	8009762 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009890:	f7ff fb7a 	bl	8008f88 <HAL_GetTick>
 8009894:	eba0 0009 	sub.w	r0, r0, r9
 8009898:	4582      	cmp	sl, r0
 800989a:	d316      	bcc.n	80098ca <I2C_RequestMemoryRead+0x252>
 800989c:	f1ba 0f00 	cmp.w	sl, #0
 80098a0:	d013      	beq.n	80098ca <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80098a2:	6834      	ldr	r4, [r6, #0]
 80098a4:	e7bb      	b.n	800981e <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098a6:	6963      	ldr	r3, [r4, #20]
 80098a8:	061d      	lsls	r5, r3, #24
 80098aa:	d4ab      	bmi.n	8009804 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098ac:	6963      	ldr	r3, [r4, #20]
 80098ae:	055a      	lsls	r2, r3, #21
 80098b0:	f53f af1c 	bmi.w	80096ec <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80098b4:	f7ff fb68 	bl	8008f88 <HAL_GetTick>
 80098b8:	eba0 0009 	sub.w	r0, r0, r9
 80098bc:	4582      	cmp	sl, r0
 80098be:	d325      	bcc.n	800990c <I2C_RequestMemoryRead+0x294>
 80098c0:	f1ba 0f00 	cmp.w	sl, #0
 80098c4:	d022      	beq.n	800990c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098c6:	6834      	ldr	r4, [r6, #0]
 80098c8:	e77b      	b.n	80097c2 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80098ca:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80098cc:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80098ce:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80098d0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80098d4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80098d8:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80098da:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80098de:	f043 0320 	orr.w	r3, r3, #32
 80098e2:	6433      	str	r3, [r6, #64]	; 0x40
 80098e4:	e716      	b.n	8009714 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098e6:	6963      	ldr	r3, [r4, #20]
 80098e8:	0619      	lsls	r1, r3, #24
 80098ea:	f53f af68 	bmi.w	80097be <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098ee:	6963      	ldr	r3, [r4, #20]
 80098f0:	055b      	lsls	r3, r3, #21
 80098f2:	f53f aefb 	bmi.w	80096ec <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80098f6:	f7ff fb47 	bl	8008f88 <HAL_GetTick>
 80098fa:	eba0 0009 	sub.w	r0, r0, r9
 80098fe:	4582      	cmp	sl, r0
 8009900:	d304      	bcc.n	800990c <I2C_RequestMemoryRead+0x294>
 8009902:	f1ba 0f00 	cmp.w	sl, #0
 8009906:	d001      	beq.n	800990c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009908:	6834      	ldr	r4, [r6, #0]
 800990a:	e76a      	b.n	80097e2 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800990c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800990e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009910:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009912:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009916:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800991a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800991c:	4313      	orrs	r3, r2
 800991e:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009920:	e6f2      	b.n	8009708 <I2C_RequestMemoryRead+0x90>
 8009922:	bf00      	nop

08009924 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009924:	2800      	cmp	r0, #0
 8009926:	f000 80b9 	beq.w	8009a9c <HAL_I2C_Init+0x178>
{
 800992a:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800992c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009930:	4604      	mov	r4, r0
 8009932:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009936:	2b00      	cmp	r3, #0
 8009938:	f000 8098 	beq.w	8009a6c <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800993c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800993e:	2224      	movs	r2, #36	; 0x24
 8009940:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009944:	681a      	ldr	r2, [r3, #0]
 8009946:	f022 0201 	bic.w	r2, r2, #1
 800994a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800994c:	681a      	ldr	r2, [r3, #0]
 800994e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009952:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009954:	681a      	ldr	r2, [r3, #0]
 8009956:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800995a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800995c:	f001 fe70 	bl	800b640 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009960:	6865      	ldr	r5, [r4, #4]
 8009962:	4b4f      	ldr	r3, [pc, #316]	; (8009aa0 <HAL_I2C_Init+0x17c>)
 8009964:	429d      	cmp	r5, r3
 8009966:	d84f      	bhi.n	8009a08 <HAL_I2C_Init+0xe4>
 8009968:	4b4e      	ldr	r3, [pc, #312]	; (8009aa4 <HAL_I2C_Init+0x180>)
 800996a:	4298      	cmp	r0, r3
 800996c:	d97c      	bls.n	8009a68 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800996e:	4b4e      	ldr	r3, [pc, #312]	; (8009aa8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009970:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009972:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009976:	1e43      	subs	r3, r0, #1
 8009978:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800997c:	6822      	ldr	r2, [r4, #0]
 800997e:	6851      	ldr	r1, [r2, #4]
 8009980:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009984:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009988:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800998a:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800998c:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009990:	f10c 0c01 	add.w	ip, ip, #1
 8009994:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009998:	ea41 010c 	orr.w	r1, r1, ip
 800999c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800999e:	69d1      	ldr	r1, [r2, #28]
 80099a0:	f640 70fc 	movw	r0, #4092	; 0xffc
 80099a4:	3301      	adds	r3, #1
 80099a6:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80099aa:	4203      	tst	r3, r0
 80099ac:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80099b0:	d161      	bne.n	8009a76 <HAL_I2C_Init+0x152>
 80099b2:	2304      	movs	r3, #4
 80099b4:	430b      	orrs	r3, r1
 80099b6:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80099b8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80099bc:	6811      	ldr	r1, [r2, #0]
 80099be:	4303      	orrs	r3, r0
 80099c0:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80099c4:	430b      	orrs	r3, r1
 80099c6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80099c8:	6891      	ldr	r1, [r2, #8]
 80099ca:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80099ce:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80099d2:	4303      	orrs	r3, r0
 80099d4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80099d8:	430b      	orrs	r3, r1
 80099da:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80099dc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80099e0:	68d1      	ldr	r1, [r2, #12]
 80099e2:	4303      	orrs	r3, r0
 80099e4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80099e8:	430b      	orrs	r3, r1
 80099ea:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80099ec:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80099ee:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 80099f0:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 80099f4:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 80099f6:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80099f8:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80099fa:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80099fe:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009a00:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009a04:	4618      	mov	r0, r3
}
 8009a06:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009a08:	4b28      	ldr	r3, [pc, #160]	; (8009aac <HAL_I2C_Init+0x188>)
 8009a0a:	4298      	cmp	r0, r3
 8009a0c:	d92c      	bls.n	8009a68 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009a0e:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009a10:	4b25      	ldr	r3, [pc, #148]	; (8009aa8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009a12:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009a14:	4e26      	ldr	r6, [pc, #152]	; (8009ab0 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009a16:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009a1a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009a1e:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009a22:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009a24:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009a28:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009a2c:	fb01 f303 	mul.w	r3, r1, r3
 8009a30:	fba6 6303 	umull	r6, r3, r6, r3
 8009a34:	6a11      	ldr	r1, [r2, #32]
 8009a36:	099b      	lsrs	r3, r3, #6
 8009a38:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009a3c:	3301      	adds	r3, #1
 8009a3e:	430b      	orrs	r3, r1
 8009a40:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a42:	69d1      	ldr	r1, [r2, #28]
 8009a44:	68a3      	ldr	r3, [r4, #8]
 8009a46:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009a4a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009a4e:	b9ab      	cbnz	r3, 8009a7c <HAL_I2C_Init+0x158>
 8009a50:	1e43      	subs	r3, r0, #1
 8009a52:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009a56:	fbb3 f3f5 	udiv	r3, r3, r5
 8009a5a:	3301      	adds	r3, #1
 8009a5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009a60:	b1d3      	cbz	r3, 8009a98 <HAL_I2C_Init+0x174>
 8009a62:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009a66:	e7a5      	b.n	80099b4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009a68:	2001      	movs	r0, #1
}
 8009a6a:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009a6c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009a70:	f7f8 f9c2 	bl	8001df8 <HAL_I2C_MspInit>
 8009a74:	e762      	b.n	800993c <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a76:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009a7a:	e79b      	b.n	80099b4 <HAL_I2C_Init+0x90>
 8009a7c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009a80:	1e43      	subs	r3, r0, #1
 8009a82:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009a86:	fbb3 f3f5 	udiv	r3, r3, r5
 8009a8a:	3301      	adds	r3, #1
 8009a8c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009a90:	b113      	cbz	r3, 8009a98 <HAL_I2C_Init+0x174>
 8009a92:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009a96:	e78d      	b.n	80099b4 <HAL_I2C_Init+0x90>
 8009a98:	2301      	movs	r3, #1
 8009a9a:	e78b      	b.n	80099b4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009a9c:	2001      	movs	r0, #1
}
 8009a9e:	4770      	bx	lr
 8009aa0:	000186a0 	.word	0x000186a0
 8009aa4:	001e847f 	.word	0x001e847f
 8009aa8:	431bde83 	.word	0x431bde83
 8009aac:	003d08ff 	.word	0x003d08ff
 8009ab0:	10624dd3 	.word	0x10624dd3

08009ab4 <HAL_I2C_Mem_Write>:
{
 8009ab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ab8:	4604      	mov	r4, r0
 8009aba:	b083      	sub	sp, #12
 8009abc:	4699      	mov	r9, r3
 8009abe:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009ac2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009ac4:	460f      	mov	r7, r1
 8009ac6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009ac8:	f7ff fa5e 	bl	8008f88 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009acc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009ad0:	2b20      	cmp	r3, #32
 8009ad2:	d004      	beq.n	8009ade <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009ad4:	2702      	movs	r7, #2
}
 8009ad6:	4638      	mov	r0, r7
 8009ad8:	b003      	add	sp, #12
 8009ada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ade:	4605      	mov	r5, r0
 8009ae0:	e005      	b.n	8009aee <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ae2:	f7ff fa51 	bl	8008f88 <HAL_GetTick>
 8009ae6:	1b40      	subs	r0, r0, r5
 8009ae8:	2819      	cmp	r0, #25
 8009aea:	f200 80a8 	bhi.w	8009c3e <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009aee:	6820      	ldr	r0, [r4, #0]
 8009af0:	6983      	ldr	r3, [r0, #24]
 8009af2:	ea6f 0c03 	mvn.w	ip, r3
 8009af6:	f01c 0b02 	ands.w	fp, ip, #2
 8009afa:	d0f2      	beq.n	8009ae2 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009afc:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009b00:	2b01      	cmp	r3, #1
 8009b02:	d0e7      	beq.n	8009ad4 <HAL_I2C_Mem_Write+0x20>
 8009b04:	2301      	movs	r3, #1
 8009b06:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009b0a:	6803      	ldr	r3, [r0, #0]
 8009b0c:	07db      	lsls	r3, r3, #31
 8009b0e:	d572      	bpl.n	8009bf6 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009b10:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009b12:	6807      	ldr	r7, [r0, #0]
 8009b14:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009b18:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009b1a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009b1c:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009b1e:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009b20:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009b24:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009b28:	2040      	movs	r0, #64	; 0x40
 8009b2a:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009b2e:	2000      	movs	r0, #0
 8009b30:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009b32:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009b36:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009b38:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009b3a:	4856      	ldr	r0, [pc, #344]	; (8009c94 <HAL_I2C_Mem_Write+0x1e0>)
 8009b3c:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009b3e:	464b      	mov	r3, r9
 8009b40:	4642      	mov	r2, r8
 8009b42:	4620      	mov	r0, r4
 8009b44:	f7ff fca4 	bl	8009490 <I2C_RequestMemoryWrite>
 8009b48:	4607      	mov	r7, r0
 8009b4a:	bb00      	cbnz	r0, 8009b8e <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009b4c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009b4e:	2b00      	cmp	r3, #0
 8009b50:	f000 809e 	beq.w	8009c90 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009b54:	6823      	ldr	r3, [r4, #0]
 8009b56:	1c72      	adds	r2, r6, #1
 8009b58:	d159      	bne.n	8009c0e <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b5a:	695a      	ldr	r2, [r3, #20]
 8009b5c:	0610      	lsls	r0, r2, #24
 8009b5e:	d41b      	bmi.n	8009b98 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b60:	695a      	ldr	r2, [r3, #20]
 8009b62:	0551      	lsls	r1, r2, #21
 8009b64:	d5f9      	bpl.n	8009b5a <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009b66:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b68:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009b6c:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b6e:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009b70:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009b72:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009b76:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009b7a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009b7c:	f043 0304 	orr.w	r3, r3, #4
 8009b80:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b82:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009b84:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b86:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009b88:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b8c:	d038      	beq.n	8009c00 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009b8e:	2701      	movs	r7, #1
}
 8009b90:	4638      	mov	r0, r7
 8009b92:	b003      	add	sp, #12
 8009b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009b98:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009b9c:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ba0:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009ba2:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ba6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009baa:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009bac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009bae:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009bb0:	3a01      	subs	r2, #1
 8009bb2:	b292      	uxth	r2, r2
 8009bb4:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009bb6:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009bb8:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009bba:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009bbc:	0740      	lsls	r0, r0, #29
 8009bbe:	d517      	bpl.n	8009bf0 <HAL_I2C_Mem_Write+0x13c>
 8009bc0:	b942      	cbnz	r2, 8009bd4 <HAL_I2C_Mem_Write+0x120>
 8009bc2:	1c72      	adds	r2, r6, #1
 8009bc4:	d156      	bne.n	8009c74 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009bc6:	695a      	ldr	r2, [r3, #20]
 8009bc8:	0750      	lsls	r0, r2, #29
 8009bca:	d446      	bmi.n	8009c5a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bcc:	695a      	ldr	r2, [r3, #20]
 8009bce:	0551      	lsls	r1, r2, #21
 8009bd0:	d5f9      	bpl.n	8009bc6 <HAL_I2C_Mem_Write+0x112>
 8009bd2:	e7c8      	b.n	8009b66 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009bd4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009bd8:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009bda:	f10c 0102 	add.w	r1, ip, #2
 8009bde:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009be0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009be2:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009be6:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009be8:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009bea:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009bec:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009bee:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009bf0:	2a00      	cmp	r2, #0
 8009bf2:	d1b0      	bne.n	8009b56 <HAL_I2C_Mem_Write+0xa2>
 8009bf4:	e7e5      	b.n	8009bc2 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009bf6:	6803      	ldr	r3, [r0, #0]
 8009bf8:	f043 0301 	orr.w	r3, r3, #1
 8009bfc:	6003      	str	r3, [r0, #0]
 8009bfe:	e787      	b.n	8009b10 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c00:	6822      	ldr	r2, [r4, #0]
 8009c02:	6813      	ldr	r3, [r2, #0]
 8009c04:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009c08:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c0a:	6013      	str	r3, [r2, #0]
 8009c0c:	e763      	b.n	8009ad6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c0e:	695a      	ldr	r2, [r3, #20]
 8009c10:	0612      	lsls	r2, r2, #24
 8009c12:	d4c1      	bmi.n	8009b98 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c14:	695a      	ldr	r2, [r3, #20]
 8009c16:	0551      	lsls	r1, r2, #21
 8009c18:	d4a5      	bmi.n	8009b66 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c1a:	f7ff f9b5 	bl	8008f88 <HAL_GetTick>
 8009c1e:	1b40      	subs	r0, r0, r5
 8009c20:	4286      	cmp	r6, r0
 8009c22:	d301      	bcc.n	8009c28 <HAL_I2C_Mem_Write+0x174>
 8009c24:	2e00      	cmp	r6, #0
 8009c26:	d195      	bne.n	8009b54 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c28:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c2a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c2c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c2e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c32:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c36:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009c38:	4313      	orrs	r3, r2
 8009c3a:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009c3c:	e7a1      	b.n	8009b82 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c3e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c40:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c44:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c48:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c4c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009c4e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c52:	f043 0320 	orr.w	r3, r3, #32
 8009c56:	6423      	str	r3, [r4, #64]	; 0x40
 8009c58:	e73c      	b.n	8009ad4 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c5a:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c5c:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c5e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009c62:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c64:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009c66:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009c6a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c6e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009c72:	e730      	b.n	8009ad6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009c74:	695a      	ldr	r2, [r3, #20]
 8009c76:	0752      	lsls	r2, r2, #29
 8009c78:	d4ef      	bmi.n	8009c5a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c7a:	695a      	ldr	r2, [r3, #20]
 8009c7c:	0551      	lsls	r1, r2, #21
 8009c7e:	f53f af72 	bmi.w	8009b66 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c82:	f7ff f981 	bl	8008f88 <HAL_GetTick>
 8009c86:	1b40      	subs	r0, r0, r5
 8009c88:	4286      	cmp	r6, r0
 8009c8a:	d3cd      	bcc.n	8009c28 <HAL_I2C_Mem_Write+0x174>
 8009c8c:	2e00      	cmp	r6, #0
 8009c8e:	d0cb      	beq.n	8009c28 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009c90:	6823      	ldr	r3, [r4, #0]
 8009c92:	e796      	b.n	8009bc2 <HAL_I2C_Mem_Write+0x10e>
 8009c94:	ffff0000 	.word	0xffff0000

08009c98 <HAL_I2C_Mem_Read>:
{
 8009c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c9c:	4604      	mov	r4, r0
 8009c9e:	b087      	sub	sp, #28
 8009ca0:	4699      	mov	r9, r3
 8009ca2:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009ca6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009ca8:	460f      	mov	r7, r1
 8009caa:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009cac:	f7ff f96c 	bl	8008f88 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009cb0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009cb4:	2b20      	cmp	r3, #32
 8009cb6:	d004      	beq.n	8009cc2 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009cb8:	2702      	movs	r7, #2
}
 8009cba:	4638      	mov	r0, r7
 8009cbc:	b007      	add	sp, #28
 8009cbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009cc2:	4606      	mov	r6, r0
 8009cc4:	e005      	b.n	8009cd2 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009cc6:	f7ff f95f 	bl	8008f88 <HAL_GetTick>
 8009cca:	1b80      	subs	r0, r0, r6
 8009ccc:	2819      	cmp	r0, #25
 8009cce:	f200 80d2 	bhi.w	8009e76 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009cd2:	f8d4 c000 	ldr.w	ip, [r4]
 8009cd6:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8009cda:	43c0      	mvns	r0, r0
 8009cdc:	f010 0b02 	ands.w	fp, r0, #2
 8009ce0:	d0f1      	beq.n	8009cc6 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009ce2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009ce6:	2b01      	cmp	r3, #1
 8009ce8:	d0e6      	beq.n	8009cb8 <HAL_I2C_Mem_Read+0x20>
 8009cea:	2301      	movs	r3, #1
 8009cec:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009cf0:	f8dc 3000 	ldr.w	r3, [ip]
 8009cf4:	07d9      	lsls	r1, r3, #31
 8009cf6:	d537      	bpl.n	8009d68 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009cf8:	f8dc 0000 	ldr.w	r0, [ip]
 8009cfc:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009d00:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009d04:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009d06:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009d08:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009d0a:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009d0e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009d12:	2040      	movs	r0, #64	; 0x40
 8009d14:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009d18:	2000      	movs	r0, #0
 8009d1a:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009d1c:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009d20:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009d22:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009d24:	4893      	ldr	r0, [pc, #588]	; (8009f74 <HAL_I2C_Mem_Read+0x2dc>)
 8009d26:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009d28:	4639      	mov	r1, r7
 8009d2a:	464b      	mov	r3, r9
 8009d2c:	4642      	mov	r2, r8
 8009d2e:	4620      	mov	r0, r4
 8009d30:	f7ff fca2 	bl	8009678 <I2C_RequestMemoryRead>
 8009d34:	4607      	mov	r7, r0
 8009d36:	2800      	cmp	r0, #0
 8009d38:	f040 80ab 	bne.w	8009e92 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8009d3c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8009d3e:	b9d2      	cbnz	r2, 8009d76 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009d40:	6823      	ldr	r3, [r4, #0]
 8009d42:	9002      	str	r0, [sp, #8]
 8009d44:	695a      	ldr	r2, [r3, #20]
 8009d46:	9202      	str	r2, [sp, #8]
 8009d48:	699a      	ldr	r2, [r3, #24]
 8009d4a:	9202      	str	r2, [sp, #8]
 8009d4c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d4e:	681a      	ldr	r2, [r3, #0]
 8009d50:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009d54:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d56:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009d58:	2220      	movs	r2, #32
 8009d5a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009d5e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d62:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8009d66:	e7a8      	b.n	8009cba <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8009d68:	f8dc 3000 	ldr.w	r3, [ip]
 8009d6c:	f043 0301 	orr.w	r3, r3, #1
 8009d70:	f8cc 3000 	str.w	r3, [ip]
 8009d74:	e7c0      	b.n	8009cf8 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8009d76:	2a01      	cmp	r2, #1
 8009d78:	f000 812c 	beq.w	8009fd4 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8009d7c:	2a02      	cmp	r2, #2
 8009d7e:	f000 80bd 	beq.w	8009efc <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009d82:	6823      	ldr	r3, [r4, #0]
 8009d84:	9005      	str	r0, [sp, #20]
 8009d86:	6959      	ldr	r1, [r3, #20]
 8009d88:	9105      	str	r1, [sp, #20]
 8009d8a:	6999      	ldr	r1, [r3, #24]
 8009d8c:	9105      	str	r1, [sp, #20]
 8009d8e:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009d90:	2a03      	cmp	r2, #3
 8009d92:	d849      	bhi.n	8009e28 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009d94:	2a01      	cmp	r2, #1
 8009d96:	f000 80eb 	beq.w	8009f70 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8009d9a:	2a02      	cmp	r2, #2
 8009d9c:	f000 8089 	beq.w	8009eb2 <HAL_I2C_Mem_Read+0x21a>
 8009da0:	1c69      	adds	r1, r5, #1
 8009da2:	f040 80bb 	bne.w	8009f1c <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009da6:	695a      	ldr	r2, [r3, #20]
 8009da8:	0752      	lsls	r2, r2, #29
 8009daa:	d5fc      	bpl.n	8009da6 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009dac:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dae:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009db0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009db4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009db6:	691b      	ldr	r3, [r3, #16]
 8009db8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009dba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009dbc:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009dbe:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009dc0:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009dc2:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009dc4:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009dc6:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009dc8:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009dca:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009dcc:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009dce:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009dd0:	6822      	ldr	r2, [r4, #0]
 8009dd2:	f040 80af 	bne.w	8009f34 <HAL_I2C_Mem_Read+0x29c>
 8009dd6:	6953      	ldr	r3, [r2, #20]
 8009dd8:	075b      	lsls	r3, r3, #29
 8009dda:	d5fc      	bpl.n	8009dd6 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ddc:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dde:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009de0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009de4:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009de6:	6913      	ldr	r3, [r2, #16]
 8009de8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009dea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009dec:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009dee:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009df0:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009df2:	3b01      	subs	r3, #1
 8009df4:	b29b      	uxth	r3, r3
 8009df6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009df8:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8009dfa:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8009dfc:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009e00:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009e02:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e06:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009e08:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009e0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009e0c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009e0e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009e10:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009e12:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009e14:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009e16:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009e18:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009e1a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009e1c:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009e1e:	2a00      	cmp	r2, #0
 8009e20:	d099      	beq.n	8009d56 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009e22:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009e24:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009e26:	d9b5      	bls.n	8009d94 <HAL_I2C_Mem_Read+0xfc>
 8009e28:	b95d      	cbnz	r5, 8009e42 <HAL_I2C_Mem_Read+0x1aa>
 8009e2a:	e0c5      	b.n	8009fb8 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009e2c:	695a      	ldr	r2, [r3, #20]
 8009e2e:	06d0      	lsls	r0, r2, #27
 8009e30:	f100 80b2 	bmi.w	8009f98 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e34:	f7ff f8a8 	bl	8008f88 <HAL_GetTick>
 8009e38:	1b80      	subs	r0, r0, r6
 8009e3a:	4285      	cmp	r5, r0
 8009e3c:	f0c0 8086 	bcc.w	8009f4c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009e40:	6823      	ldr	r3, [r4, #0]
 8009e42:	695a      	ldr	r2, [r3, #20]
 8009e44:	0652      	lsls	r2, r2, #25
 8009e46:	d5f1      	bpl.n	8009e2c <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e48:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009e4a:	691b      	ldr	r3, [r3, #16]
 8009e4c:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8009e4e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e50:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8009e52:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009e54:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009e56:	3b01      	subs	r3, #1
 8009e58:	b29b      	uxth	r3, r3
 8009e5a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e5c:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8009e5e:	3a01      	subs	r2, #1
 8009e60:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009e62:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e66:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8009e68:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009e6a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e6e:	d5d6      	bpl.n	8009e1e <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e70:	6903      	ldr	r3, [r0, #16]
 8009e72:	704b      	strb	r3, [r1, #1]
 8009e74:	e036      	b.n	8009ee4 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e76:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e78:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e7c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009e80:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e84:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009e86:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e8a:	f043 0320 	orr.w	r3, r3, #32
 8009e8e:	6423      	str	r3, [r4, #64]	; 0x40
 8009e90:	e712      	b.n	8009cb8 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009e92:	2701      	movs	r7, #1
}
 8009e94:	4638      	mov	r0, r7
 8009e96:	b007      	add	sp, #28
 8009e98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e9c:	695a      	ldr	r2, [r3, #20]
 8009e9e:	0750      	lsls	r0, r2, #29
 8009ea0:	d40c      	bmi.n	8009ebc <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ea2:	f7ff f871 	bl	8008f88 <HAL_GetTick>
 8009ea6:	1b80      	subs	r0, r0, r6
 8009ea8:	4285      	cmp	r5, r0
 8009eaa:	d34f      	bcc.n	8009f4c <HAL_I2C_Mem_Read+0x2b4>
 8009eac:	2d00      	cmp	r5, #0
 8009eae:	d04d      	beq.n	8009f4c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009eb0:	6823      	ldr	r3, [r4, #0]
 8009eb2:	1c69      	adds	r1, r5, #1
 8009eb4:	d1f2      	bne.n	8009e9c <HAL_I2C_Mem_Read+0x204>
 8009eb6:	695a      	ldr	r2, [r3, #20]
 8009eb8:	0752      	lsls	r2, r2, #29
 8009eba:	d5fc      	bpl.n	8009eb6 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ebc:	681a      	ldr	r2, [r3, #0]
 8009ebe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009ec2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ec4:	691a      	ldr	r2, [r3, #16]
 8009ec6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009ec8:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8009eca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009ecc:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009ece:	3b01      	subs	r3, #1
 8009ed0:	b29b      	uxth	r3, r3
 8009ed2:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009ed4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009ed6:	3b01      	subs	r3, #1
 8009ed8:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009eda:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009edc:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ede:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8009ee0:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ee2:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009ee4:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009ee6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009ee8:	3301      	adds	r3, #1
 8009eea:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009eec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009eee:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009ef0:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8009ef2:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009ef4:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8009ef6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009ef8:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009efa:	e790      	b.n	8009e1e <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009efc:	6823      	ldr	r3, [r4, #0]
 8009efe:	6819      	ldr	r1, [r3, #0]
 8009f00:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009f04:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009f06:	6819      	ldr	r1, [r3, #0]
 8009f08:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8009f0c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009f0e:	9004      	str	r0, [sp, #16]
 8009f10:	6959      	ldr	r1, [r3, #20]
 8009f12:	9104      	str	r1, [sp, #16]
 8009f14:	6999      	ldr	r1, [r3, #24]
 8009f16:	9104      	str	r1, [sp, #16]
 8009f18:	9904      	ldr	r1, [sp, #16]
 8009f1a:	e739      	b.n	8009d90 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f1c:	695a      	ldr	r2, [r3, #20]
 8009f1e:	0750      	lsls	r0, r2, #29
 8009f20:	f53f af44 	bmi.w	8009dac <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f24:	f7ff f830 	bl	8008f88 <HAL_GetTick>
 8009f28:	1b80      	subs	r0, r0, r6
 8009f2a:	4285      	cmp	r5, r0
 8009f2c:	d30e      	bcc.n	8009f4c <HAL_I2C_Mem_Read+0x2b4>
 8009f2e:	b16d      	cbz	r5, 8009f4c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f30:	6823      	ldr	r3, [r4, #0]
 8009f32:	e735      	b.n	8009da0 <HAL_I2C_Mem_Read+0x108>
 8009f34:	6953      	ldr	r3, [r2, #20]
 8009f36:	0758      	lsls	r0, r3, #29
 8009f38:	f53f af50 	bmi.w	8009ddc <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f3c:	f7ff f824 	bl	8008f88 <HAL_GetTick>
 8009f40:	1b80      	subs	r0, r0, r6
 8009f42:	4285      	cmp	r5, r0
 8009f44:	d302      	bcc.n	8009f4c <HAL_I2C_Mem_Read+0x2b4>
 8009f46:	2d00      	cmp	r5, #0
 8009f48:	f47f af41 	bne.w	8009dce <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f4c:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f4e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f50:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f52:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f56:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f5a:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009f5c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009f60:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f62:	f043 0320 	orr.w	r3, r3, #32
}
 8009f66:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f68:	6423      	str	r3, [r4, #64]	; 0x40
}
 8009f6a:	b007      	add	sp, #28
 8009f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f70:	b95d      	cbnz	r5, 8009f8a <HAL_I2C_Mem_Read+0x2f2>
 8009f72:	e02b      	b.n	8009fcc <HAL_I2C_Mem_Read+0x334>
 8009f74:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009f78:	695a      	ldr	r2, [r3, #20]
 8009f7a:	06d2      	lsls	r2, r2, #27
 8009f7c:	d40c      	bmi.n	8009f98 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f7e:	f7ff f803 	bl	8008f88 <HAL_GetTick>
 8009f82:	1b80      	subs	r0, r0, r6
 8009f84:	4285      	cmp	r5, r0
 8009f86:	d3e1      	bcc.n	8009f4c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f88:	6823      	ldr	r3, [r4, #0]
 8009f8a:	695a      	ldr	r2, [r3, #20]
 8009f8c:	0651      	lsls	r1, r2, #25
 8009f8e:	d5f3      	bpl.n	8009f78 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f90:	691a      	ldr	r2, [r3, #16]
 8009f92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009f94:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009f96:	e7a5      	b.n	8009ee4 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009f98:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009f9a:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8009f9e:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009fa0:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009fa2:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009fa4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009fa8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8009fac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009fae:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009fb0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009fb4:	2701      	movs	r7, #1
 8009fb6:	e680      	b.n	8009cba <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009fb8:	695a      	ldr	r2, [r3, #20]
 8009fba:	0652      	lsls	r2, r2, #25
 8009fbc:	f53f af44 	bmi.w	8009e48 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009fc0:	695a      	ldr	r2, [r3, #20]
 8009fc2:	06d1      	lsls	r1, r2, #27
 8009fc4:	d4e8      	bmi.n	8009f98 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009fc6:	f7fe ffdf 	bl	8008f88 <HAL_GetTick>
 8009fca:	e7bf      	b.n	8009f4c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009fcc:	695a      	ldr	r2, [r3, #20]
 8009fce:	0650      	lsls	r0, r2, #25
 8009fd0:	d5f6      	bpl.n	8009fc0 <HAL_I2C_Mem_Read+0x328>
 8009fd2:	e7dd      	b.n	8009f90 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009fd4:	6823      	ldr	r3, [r4, #0]
 8009fd6:	6819      	ldr	r1, [r3, #0]
 8009fd8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009fdc:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009fde:	9003      	str	r0, [sp, #12]
 8009fe0:	6959      	ldr	r1, [r3, #20]
 8009fe2:	9103      	str	r1, [sp, #12]
 8009fe4:	6999      	ldr	r1, [r3, #24]
 8009fe6:	9103      	str	r1, [sp, #12]
 8009fe8:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009fea:	6819      	ldr	r1, [r3, #0]
 8009fec:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8009ff0:	6019      	str	r1, [r3, #0]
 8009ff2:	e6cd      	b.n	8009d90 <HAL_I2C_Mem_Read+0xf8>

08009ff4 <HAL_I2C_MasterTxCpltCallback>:
 8009ff4:	4770      	bx	lr
 8009ff6:	bf00      	nop

08009ff8 <HAL_I2C_MasterRxCpltCallback>:
 8009ff8:	4770      	bx	lr
 8009ffa:	bf00      	nop

08009ffc <HAL_I2C_SlaveTxCpltCallback>:
 8009ffc:	4770      	bx	lr
 8009ffe:	bf00      	nop

0800a000 <HAL_I2C_SlaveRxCpltCallback>:
 800a000:	4770      	bx	lr
 800a002:	bf00      	nop

0800a004 <HAL_I2C_AddrCallback>:
}
 800a004:	4770      	bx	lr
 800a006:	bf00      	nop

0800a008 <HAL_I2C_ListenCpltCallback>:
 800a008:	4770      	bx	lr
 800a00a:	bf00      	nop

0800a00c <HAL_I2C_MemTxCpltCallback>:
 800a00c:	4770      	bx	lr
 800a00e:	bf00      	nop

0800a010 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a010:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a014:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a016:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a018:	b959      	cbnz	r1, 800a032 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a01a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a01c:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a01e:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a020:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a022:	d00d      	beq.n	800a040 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a024:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a028:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a02a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a02c:	3201      	adds	r2, #1
 800a02e:	6502      	str	r2, [r0, #80]	; 0x50
 800a030:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a032:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a034:	2901      	cmp	r1, #1
 800a036:	d009      	beq.n	800a04c <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a038:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a03a:	2902      	cmp	r1, #2
 800a03c:	d00e      	beq.n	800a05c <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a03e:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a040:	b2d2      	uxtb	r2, r2
 800a042:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a044:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a046:	3202      	adds	r2, #2
 800a048:	6502      	str	r2, [r0, #80]	; 0x50
 800a04a:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a04c:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a04e:	6801      	ldr	r1, [r0, #0]
 800a050:	b2d2      	uxtb	r2, r2
 800a052:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a054:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a056:	3201      	adds	r2, #1
 800a058:	6502      	str	r2, [r0, #80]	; 0x50
 800a05a:	4770      	bx	lr
 800a05c:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a05e:	2a22      	cmp	r2, #34	; 0x22
 800a060:	d01f      	beq.n	800a0a2 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a062:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a064:	b289      	uxth	r1, r1
 800a066:	b9c1      	cbnz	r1, 800a09a <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a068:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a06a:	b289      	uxth	r1, r1
 800a06c:	2900      	cmp	r1, #0
 800a06e:	d1e6      	bne.n	800a03e <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a070:	2a21      	cmp	r2, #33	; 0x21
 800a072:	d1e4      	bne.n	800a03e <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a074:	6802      	ldr	r2, [r0, #0]
{
 800a076:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a078:	6854      	ldr	r4, [r2, #4]
 800a07a:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a07e:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a080:	6814      	ldr	r4, [r2, #0]
 800a082:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a086:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a088:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a08a:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a08c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a090:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a094:	f7ff ffba 	bl	800a00c <HAL_I2C_MemTxCpltCallback>
}
 800a098:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a09a:	2a21      	cmp	r2, #33	; 0x21
 800a09c:	d00a      	beq.n	800a0b4 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a09e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a0a0:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a0a2:	6801      	ldr	r1, [r0, #0]
 800a0a4:	680a      	ldr	r2, [r1, #0]
 800a0a6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a0aa:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a0ac:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a0ae:	3201      	adds	r2, #1
 800a0b0:	6502      	str	r2, [r0, #80]	; 0x50
 800a0b2:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a0b4:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a0b6:	6802      	ldr	r2, [r0, #0]
 800a0b8:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a0bc:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a0be:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a0c0:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a0c2:	3a01      	subs	r2, #1
 800a0c4:	b292      	uxth	r2, r2
 800a0c6:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a0c8:	4770      	bx	lr
 800a0ca:	bf00      	nop

0800a0cc <HAL_I2C_MemRxCpltCallback>:
 800a0cc:	4770      	bx	lr
 800a0ce:	bf00      	nop

0800a0d0 <HAL_I2C_ErrorCallback>:
 800a0d0:	4770      	bx	lr
 800a0d2:	bf00      	nop

0800a0d4 <HAL_I2C_AbortCpltCallback>:
 800a0d4:	4770      	bx	lr
 800a0d6:	bf00      	nop

0800a0d8 <I2C_DMAAbort>:
{
 800a0d8:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0da:	4b3a      	ldr	r3, [pc, #232]	; (800a1c4 <I2C_DMAAbort+0xec>)
 800a0dc:	4a3a      	ldr	r2, [pc, #232]	; (800a1c8 <I2C_DMAAbort+0xf0>)
 800a0de:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a0e0:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a0e2:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0e4:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a0e6:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0e8:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a0ec:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0ee:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a0f0:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a0f4:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0f6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a0fa:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a0fe:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a100:	9301      	str	r3, [sp, #4]
 800a102:	e005      	b.n	800a110 <I2C_DMAAbort+0x38>
    count--;
 800a104:	9b01      	ldr	r3, [sp, #4]
 800a106:	3b01      	subs	r3, #1
 800a108:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a10a:	6813      	ldr	r3, [r2, #0]
 800a10c:	059b      	lsls	r3, r3, #22
 800a10e:	d506      	bpl.n	800a11e <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a110:	9b01      	ldr	r3, [sp, #4]
 800a112:	2b00      	cmp	r3, #0
 800a114:	d1f6      	bne.n	800a104 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a116:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a118:	f043 0320 	orr.w	r3, r3, #32
 800a11c:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a11e:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a120:	b34c      	cbz	r4, 800a176 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a122:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a124:	2500      	movs	r5, #0
 800a126:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a128:	b1f3      	cbz	r3, 800a168 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a12a:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a12c:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a12e:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a132:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a134:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a136:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a138:	2400      	movs	r4, #0
 800a13a:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a13c:	6813      	ldr	r3, [r2, #0]
 800a13e:	f023 0301 	bic.w	r3, r3, #1
 800a142:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a144:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a148:	2b60      	cmp	r3, #96	; 0x60
 800a14a:	d02a      	beq.n	800a1a2 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a14c:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a150:	2928      	cmp	r1, #40	; 0x28
 800a152:	d019      	beq.n	800a188 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a154:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a156:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a158:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a15c:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a160:	f7ff ffb6 	bl	800a0d0 <HAL_I2C_ErrorCallback>
}
 800a164:	b002      	add	sp, #8
 800a166:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a168:	6815      	ldr	r5, [r2, #0]
 800a16a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a16e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a170:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a172:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a174:	e7e2      	b.n	800a13c <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a176:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a178:	b1f3      	cbz	r3, 800a1b8 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a17a:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a17c:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a17e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a182:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a184:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a186:	e7d7      	b.n	800a138 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a188:	6813      	ldr	r3, [r2, #0]
 800a18a:	f043 0301 	orr.w	r3, r3, #1
 800a18e:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a190:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a192:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a194:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a198:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a19a:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a19c:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a1a0:	e7de      	b.n	800a160 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a1a2:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a1a4:	2220      	movs	r2, #32
 800a1a6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a1aa:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a1ae:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a1b0:	f7ff ff90 	bl	800a0d4 <HAL_I2C_AbortCpltCallback>
}
 800a1b4:	b002      	add	sp, #8
 800a1b6:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a1b8:	6814      	ldr	r4, [r2, #0]
 800a1ba:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a1be:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a1c0:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a1c2:	e7bb      	b.n	800a13c <I2C_DMAAbort+0x64>
 800a1c4:	20000078 	.word	0x20000078
 800a1c8:	14f8b589 	.word	0x14f8b589

0800a1cc <I2C_ITError>:
{
 800a1cc:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1ce:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a1d2:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a1d6:	2b10      	cmp	r3, #16
{
 800a1d8:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1da:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a1dc:	d039      	beq.n	800a252 <I2C_ITError+0x86>
 800a1de:	b2d9      	uxtb	r1, r3
 800a1e0:	2940      	cmp	r1, #64	; 0x40
 800a1e2:	d036      	beq.n	800a252 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a1e4:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a1e8:	2928      	cmp	r1, #40	; 0x28
 800a1ea:	d03d      	beq.n	800a268 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a1ec:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a1ee:	6859      	ldr	r1, [r3, #4]
 800a1f0:	0508      	lsls	r0, r1, #20
 800a1f2:	d407      	bmi.n	800a204 <I2C_ITError+0x38>
 800a1f4:	2a60      	cmp	r2, #96	; 0x60
 800a1f6:	d005      	beq.n	800a204 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a1f8:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1fa:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a1fc:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a200:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a204:	2200      	movs	r2, #0
 800a206:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a208:	685a      	ldr	r2, [r3, #4]
 800a20a:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a20e:	d134      	bne.n	800a27a <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a210:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a214:	2960      	cmp	r1, #96	; 0x60
 800a216:	d075      	beq.n	800a304 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a218:	695a      	ldr	r2, [r3, #20]
 800a21a:	0650      	lsls	r0, r2, #25
 800a21c:	d505      	bpl.n	800a22a <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a21e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a220:	691b      	ldr	r3, [r3, #16]
 800a222:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a224:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a226:	3301      	adds	r3, #1
 800a228:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a22a:	4620      	mov	r0, r4
 800a22c:	f7ff ff50 	bl	800a0d0 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a230:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a232:	0719      	lsls	r1, r3, #28
 800a234:	d004      	beq.n	800a240 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a236:	6822      	ldr	r2, [r4, #0]
 800a238:	6853      	ldr	r3, [r2, #4]
 800a23a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a23e:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a240:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a244:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a246:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a248:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a24a:	d501      	bpl.n	800a250 <I2C_ITError+0x84>
 800a24c:	2b28      	cmp	r3, #40	; 0x28
 800a24e:	d02f      	beq.n	800a2b0 <I2C_ITError+0xe4>
}
 800a250:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a252:	2a22      	cmp	r2, #34	; 0x22
 800a254:	d1c6      	bne.n	800a1e4 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a256:	6823      	ldr	r3, [r4, #0]
 800a258:	681a      	ldr	r2, [r3, #0]
 800a25a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a25e:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a260:	685a      	ldr	r2, [r3, #4]
 800a262:	0512      	lsls	r2, r2, #20
 800a264:	d5c8      	bpl.n	800a1f8 <I2C_ITError+0x2c>
 800a266:	e7cd      	b.n	800a204 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a268:	2300      	movs	r3, #0
 800a26a:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a26c:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a26e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a272:	685a      	ldr	r2, [r3, #4]
 800a274:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a278:	d0ca      	beq.n	800a210 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a27a:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a27c:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a27e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a282:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a284:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a288:	2b01      	cmp	r3, #1
 800a28a:	d01e      	beq.n	800a2ca <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a28c:	4b28      	ldr	r3, [pc, #160]	; (800a330 <I2C_ITError+0x164>)
 800a28e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a290:	f7fe ff04 	bl	800909c <HAL_DMA_Abort_IT>
 800a294:	2800      	cmp	r0, #0
 800a296:	d0cb      	beq.n	800a230 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a298:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a29a:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a29c:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a29e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a2a0:	f023 0301 	bic.w	r3, r3, #1
 800a2a4:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a2a6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a2aa:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a2ac:	4798      	blx	r3
 800a2ae:	e7bf      	b.n	800a230 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a2b0:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a2b2:	4920      	ldr	r1, [pc, #128]	; (800a334 <I2C_ITError+0x168>)
 800a2b4:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a2b6:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a2b8:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a2ba:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a2bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a2c0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a2c4:	f7ff fea0 	bl	800a008 <HAL_I2C_ListenCpltCallback>
}
 800a2c8:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a2ca:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a2cc:	4b18      	ldr	r3, [pc, #96]	; (800a330 <I2C_ITError+0x164>)
 800a2ce:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a2d0:	f7fe fee4 	bl	800909c <HAL_DMA_Abort_IT>
 800a2d4:	2800      	cmp	r0, #0
 800a2d6:	d0ab      	beq.n	800a230 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a2d8:	6823      	ldr	r3, [r4, #0]
 800a2da:	695a      	ldr	r2, [r3, #20]
 800a2dc:	0651      	lsls	r1, r2, #25
 800a2de:	d506      	bpl.n	800a2ee <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2e0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a2e2:	691b      	ldr	r3, [r3, #16]
 800a2e4:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a2e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a2e8:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a2ea:	3201      	adds	r2, #1
 800a2ec:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a2ee:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a2f0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a2f2:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a2f6:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a2f8:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a2fa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a2fe:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a300:	4798      	blx	r3
 800a302:	e795      	b.n	800a230 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a304:	2120      	movs	r1, #32
 800a306:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a30a:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a30c:	695a      	ldr	r2, [r3, #20]
 800a30e:	0652      	lsls	r2, r2, #25
 800a310:	d506      	bpl.n	800a320 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a312:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a314:	691b      	ldr	r3, [r3, #16]
 800a316:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a318:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a31a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a31c:	3201      	adds	r2, #1
 800a31e:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a320:	681a      	ldr	r2, [r3, #0]
 800a322:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a326:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a328:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a32a:	f7ff fed3 	bl	800a0d4 <HAL_I2C_AbortCpltCallback>
 800a32e:	e77f      	b.n	800a230 <I2C_ITError+0x64>
 800a330:	0800a0d9 	.word	0x0800a0d9
 800a334:	ffff0000 	.word	0xffff0000

0800a338 <HAL_I2C_EV_IRQHandler>:
{
 800a338:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a33a:	6803      	ldr	r3, [r0, #0]
{
 800a33c:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a33e:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a340:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a342:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a346:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a34a:	2910      	cmp	r1, #16
{
 800a34c:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a34e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a350:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a354:	d022      	beq.n	800a39c <HAL_I2C_EV_IRQHandler+0x64>
 800a356:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a35a:	d01f      	beq.n	800a39c <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a35c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a35e:	2900      	cmp	r1, #0
 800a360:	f000 8094 	beq.w	800a48c <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a364:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a366:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a368:	f011 0602 	ands.w	r6, r1, #2
 800a36c:	d059      	beq.n	800a422 <HAL_I2C_EV_IRQHandler+0xea>
 800a36e:	0586      	lsls	r6, r0, #22
 800a370:	d559      	bpl.n	800a426 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a372:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a374:	b102      	cbz	r2, 800a378 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a376:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a378:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a37c:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a380:	2a28      	cmp	r2, #40	; 0x28
 800a382:	f000 821e 	beq.w	800a7c2 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a386:	2200      	movs	r2, #0
 800a388:	920c      	str	r2, [sp, #48]	; 0x30
 800a38a:	6959      	ldr	r1, [r3, #20]
 800a38c:	910c      	str	r1, [sp, #48]	; 0x30
 800a38e:	699b      	ldr	r3, [r3, #24]
 800a390:	930c      	str	r3, [sp, #48]	; 0x30
 800a392:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a394:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a398:	b00e      	add	sp, #56	; 0x38
 800a39a:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a39c:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a39e:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a3a0:	f011 0f01 	tst.w	r1, #1
 800a3a4:	d11a      	bne.n	800a3dc <HAL_I2C_EV_IRQHandler+0xa4>
 800a3a6:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a3aa:	d0f5      	beq.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a3ac:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a3b0:	d0f2      	beq.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a3b2:	070d      	lsls	r5, r1, #28
 800a3b4:	d56d      	bpl.n	800a492 <HAL_I2C_EV_IRQHandler+0x15a>
 800a3b6:	0585      	lsls	r5, r0, #22
 800a3b8:	f140 8083 	bpl.w	800a4c2 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a3bc:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a3be:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a3c0:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a3c2:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a3c4:	2900      	cmp	r1, #0
 800a3c6:	f000 81e3 	beq.w	800a790 <HAL_I2C_EV_IRQHandler+0x458>
 800a3ca:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a3cc:	2a00      	cmp	r2, #0
 800a3ce:	f000 81df 	beq.w	800a790 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a3d2:	685a      	ldr	r2, [r3, #4]
 800a3d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a3d8:	605a      	str	r2, [r3, #4]
 800a3da:	e7dd      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a3dc:	0585      	lsls	r5, r0, #22
 800a3de:	d56e      	bpl.n	800a4be <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a3e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a3e2:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a3e6:	f000 81e9 	beq.w	800a7bc <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a3ea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a3ec:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a3f0:	bf04      	itt	eq
 800a3f2:	2208      	moveq	r2, #8
 800a3f4:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a3f6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a3fa:	2a40      	cmp	r2, #64	; 0x40
 800a3fc:	f000 81d7 	beq.w	800a7ae <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a400:	6922      	ldr	r2, [r4, #16]
 800a402:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a406:	f000 81b2 	beq.w	800a76e <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a40a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a40c:	2a00      	cmp	r2, #0
 800a40e:	f040 81ef 	bne.w	800a7f0 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a412:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a414:	11d2      	asrs	r2, r2, #7
 800a416:	f002 0206 	and.w	r2, r2, #6
 800a41a:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a41e:	611a      	str	r2, [r3, #16]
 800a420:	e7ba      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a422:	06cd      	lsls	r5, r1, #27
 800a424:	d47c      	bmi.n	800a520 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a426:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a42a:	2a21      	cmp	r2, #33	; 0x21
 800a42c:	f000 80f5 	beq.w	800a61a <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a430:	064e      	lsls	r6, r1, #25
 800a432:	f140 8132 	bpl.w	800a69a <HAL_I2C_EV_IRQHandler+0x362>
 800a436:	0545      	lsls	r5, r0, #21
 800a438:	f140 812f 	bpl.w	800a69a <HAL_I2C_EV_IRQHandler+0x362>
 800a43c:	0749      	lsls	r1, r1, #29
 800a43e:	f100 812f 	bmi.w	800a6a0 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a442:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a446:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a448:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a44a:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a44c:	2a00      	cmp	r2, #0
 800a44e:	d0a3      	beq.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a450:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a452:	691b      	ldr	r3, [r3, #16]
 800a454:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a456:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a458:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a45a:	3b01      	subs	r3, #1
 800a45c:	b29b      	uxth	r3, r3
 800a45e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a460:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a462:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a464:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a466:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a468:	2b00      	cmp	r3, #0
 800a46a:	d195      	bne.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a46c:	292a      	cmp	r1, #42	; 0x2a
 800a46e:	d193      	bne.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a470:	6822      	ldr	r2, [r4, #0]
 800a472:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a474:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a476:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a478:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a47c:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a47e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a480:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a482:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a486:	f7ff fdbb 	bl	800a000 <HAL_I2C_SlaveRxCpltCallback>
 800a48a:	e785      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a48c:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a48e:	6959      	ldr	r1, [r3, #20]
 800a490:	e76a      	b.n	800a368 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a492:	078d      	lsls	r5, r1, #30
 800a494:	d515      	bpl.n	800a4c2 <HAL_I2C_EV_IRQHandler+0x18a>
 800a496:	0585      	lsls	r5, r0, #22
 800a498:	d513      	bpl.n	800a4c2 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a49a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a49e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a4a0:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a4a2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a4a6:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a4a8:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a4aa:	f000 81b3 	beq.w	800a814 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a4ae:	2200      	movs	r2, #0
 800a4b0:	920a      	str	r2, [sp, #40]	; 0x28
 800a4b2:	695a      	ldr	r2, [r3, #20]
 800a4b4:	920a      	str	r2, [sp, #40]	; 0x28
 800a4b6:	699b      	ldr	r3, [r3, #24]
 800a4b8:	930a      	str	r3, [sp, #40]	; 0x28
 800a4ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a4bc:	e76c      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a4be:	070d      	lsls	r5, r1, #28
 800a4c0:	d5e7      	bpl.n	800a492 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a4c2:	0776      	lsls	r6, r6, #29
 800a4c4:	f140 80f5 	bpl.w	800a6b2 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a4c8:	685d      	ldr	r5, [r3, #4]
 800a4ca:	052d      	lsls	r5, r5, #20
 800a4cc:	f53f af64 	bmi.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a4d0:	060e      	lsls	r6, r1, #24
 800a4d2:	f140 8115 	bpl.w	800a700 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a4d6:	0545      	lsls	r5, r0, #21
 800a4d8:	f140 8112 	bpl.w	800a700 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a4dc:	074e      	lsls	r6, r1, #29
 800a4de:	f100 8112 	bmi.w	800a706 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4e2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a4e6:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a4e8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a4ec:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4ee:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a4f0:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a4f2:	2800      	cmp	r0, #0
 800a4f4:	f040 8235 	bne.w	800a962 <HAL_I2C_EV_IRQHandler+0x62a>
 800a4f8:	2a21      	cmp	r2, #33	; 0x21
 800a4fa:	f000 8347 	beq.w	800ab8c <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a4fe:	2940      	cmp	r1, #64	; 0x40
 800a500:	f47f af4a 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a504:	2a22      	cmp	r2, #34	; 0x22
 800a506:	f47f af47 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a50a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a50c:	b292      	uxth	r2, r2
 800a50e:	2a00      	cmp	r2, #0
 800a510:	f000 8268 	beq.w	800a9e4 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a514:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a518:	2a40      	cmp	r2, #64	; 0x40
 800a51a:	f040 80b4 	bne.w	800a686 <HAL_I2C_EV_IRQHandler+0x34e>
 800a51e:	e0fc      	b.n	800a71a <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a520:	0585      	lsls	r5, r0, #22
 800a522:	d580      	bpl.n	800a426 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a524:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a528:	685a      	ldr	r2, [r3, #4]
 800a52a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a52e:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a530:	960d      	str	r6, [sp, #52]	; 0x34
 800a532:	695a      	ldr	r2, [r3, #20]
 800a534:	920d      	str	r2, [sp, #52]	; 0x34
 800a536:	681a      	ldr	r2, [r3, #0]
 800a538:	f042 0201 	orr.w	r2, r2, #1
 800a53c:	601a      	str	r2, [r3, #0]
 800a53e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a540:	681a      	ldr	r2, [r3, #0]
 800a542:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a546:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a548:	685a      	ldr	r2, [r3, #4]
 800a54a:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a54c:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a54e:	d521      	bpl.n	800a594 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a550:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a554:	2a22      	cmp	r2, #34	; 0x22
 800a556:	f000 817a 	beq.w	800a84e <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a55a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a55c:	6802      	ldr	r2, [r0, #0]
 800a55e:	6852      	ldr	r2, [r2, #4]
 800a560:	b292      	uxth	r2, r2
 800a562:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a564:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a566:	b292      	uxth	r2, r2
 800a568:	b11a      	cbz	r2, 800a572 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a56a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a56c:	f042 0204 	orr.w	r2, r2, #4
 800a570:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a572:	685a      	ldr	r2, [r3, #4]
 800a574:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a578:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a57a:	f7fe fda1 	bl	80090c0 <HAL_DMA_GetState>
 800a57e:	2801      	cmp	r0, #1
 800a580:	d008      	beq.n	800a594 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a582:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a584:	4b99      	ldr	r3, [pc, #612]	; (800a7ec <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a586:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a588:	f7fe fd88 	bl	800909c <HAL_DMA_Abort_IT>
 800a58c:	b110      	cbz	r0, 800a594 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a58e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a590:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a592:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a594:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a596:	b29b      	uxth	r3, r3
 800a598:	b313      	cbz	r3, 800a5e0 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a59a:	6823      	ldr	r3, [r4, #0]
 800a59c:	695a      	ldr	r2, [r3, #20]
 800a59e:	0752      	lsls	r2, r2, #29
 800a5a0:	d50a      	bpl.n	800a5b8 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a5a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a5a4:	691b      	ldr	r3, [r3, #16]
 800a5a6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a5a8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a5aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a5ac:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a5ae:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a5b0:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a5b2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a5b4:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a5b6:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a5b8:	695a      	ldr	r2, [r3, #20]
 800a5ba:	0656      	lsls	r6, r2, #25
 800a5bc:	d509      	bpl.n	800a5d2 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a5be:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a5c0:	691b      	ldr	r3, [r3, #16]
 800a5c2:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a5c4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a5c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a5c8:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a5ca:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a5cc:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a5ce:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a5d0:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a5d2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a5d4:	b29b      	uxth	r3, r3
 800a5d6:	b11b      	cbz	r3, 800a5e0 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a5d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a5da:	f043 0304 	orr.w	r3, r3, #4
 800a5de:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a5e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a5e2:	2b00      	cmp	r3, #0
 800a5e4:	f040 80dd 	bne.w	800a7a2 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a5e8:	2d2a      	cmp	r5, #42	; 0x2a
 800a5ea:	f000 8151 	beq.w	800a890 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a5ee:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a5f2:	2b28      	cmp	r3, #40	; 0x28
 800a5f4:	f000 8154 	beq.w	800a8a0 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a5f8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a5fa:	2b22      	cmp	r3, #34	; 0x22
 800a5fc:	d002      	beq.n	800a604 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a5fe:	2d22      	cmp	r5, #34	; 0x22
 800a600:	f47f aeca 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a604:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a606:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a608:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a60a:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a60c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a610:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a614:	f7ff fcf4 	bl	800a000 <HAL_I2C_SlaveRxCpltCallback>
 800a618:	e6be      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a61a:	060d      	lsls	r5, r1, #24
 800a61c:	d528      	bpl.n	800a670 <HAL_I2C_EV_IRQHandler+0x338>
 800a61e:	0546      	lsls	r6, r0, #21
 800a620:	d526      	bpl.n	800a670 <HAL_I2C_EV_IRQHandler+0x338>
 800a622:	074d      	lsls	r5, r1, #29
 800a624:	d427      	bmi.n	800a676 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a626:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a62a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a62c:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a62e:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a630:	2900      	cmp	r1, #0
 800a632:	f43f aeb1 	beq.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a636:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a638:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a63c:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a63e:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a640:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a642:	3901      	subs	r1, #1
 800a644:	b289      	uxth	r1, r1
 800a646:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a648:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a64a:	b289      	uxth	r1, r1
 800a64c:	2900      	cmp	r1, #0
 800a64e:	f47f aea3 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a652:	2829      	cmp	r0, #41	; 0x29
 800a654:	f47f aea0 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a658:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a65a:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a65c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a660:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a662:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a664:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a666:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a66a:	f7ff fcc7 	bl	8009ffc <HAL_I2C_SlaveTxCpltCallback>
 800a66e:	e693      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a670:	0749      	lsls	r1, r1, #29
 800a672:	f57f ae91 	bpl.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a676:	0582      	lsls	r2, r0, #22
 800a678:	f57f ae8e 	bpl.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a67c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a67e:	b292      	uxth	r2, r2
 800a680:	2a00      	cmp	r2, #0
 800a682:	f43f ae89 	beq.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a686:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a688:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a68c:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a68e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a690:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a692:	3b01      	subs	r3, #1
 800a694:	b29b      	uxth	r3, r3
 800a696:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a698:	e67e      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a69a:	074a      	lsls	r2, r1, #29
 800a69c:	f57f ae7c 	bpl.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a6a0:	0586      	lsls	r6, r0, #22
 800a6a2:	f57f ae79 	bpl.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a6a6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6a8:	b292      	uxth	r2, r2
 800a6aa:	2a00      	cmp	r2, #0
 800a6ac:	f43f ae74 	beq.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a6b0:	e01b      	b.n	800a6ea <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a6b2:	685a      	ldr	r2, [r3, #4]
 800a6b4:	0512      	lsls	r2, r2, #20
 800a6b6:	f53f ae6f 	bmi.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a6ba:	064e      	lsls	r6, r1, #25
 800a6bc:	d433      	bmi.n	800a726 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a6be:	0749      	lsls	r1, r1, #29
 800a6c0:	f57f ae6a 	bpl.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a6c4:	0582      	lsls	r2, r0, #22
 800a6c6:	f57f ae67 	bpl.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a6ca:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a6cc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6ce:	b292      	uxth	r2, r2
 800a6d0:	2a04      	cmp	r2, #4
 800a6d2:	f000 8113 	beq.w	800a8fc <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a6d6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6d8:	b292      	uxth	r2, r2
 800a6da:	2a03      	cmp	r2, #3
 800a6dc:	f000 8153 	beq.w	800a986 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a6e0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6e2:	b292      	uxth	r2, r2
 800a6e4:	2a02      	cmp	r2, #2
 800a6e6:	f000 8182 	beq.w	800a9ee <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a6ec:	691b      	ldr	r3, [r3, #16]
 800a6ee:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a6f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a6f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a6f4:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a6f6:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a6f8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a6fa:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a6fc:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a6fe:	e64b      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a700:	074d      	lsls	r5, r1, #29
 800a702:	f57f ae49 	bpl.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a706:	0581      	lsls	r1, r0, #22
 800a708:	f57f ae46 	bpl.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a70c:	2a21      	cmp	r2, #33	; 0x21
 800a70e:	f000 80fd 	beq.w	800a90c <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a712:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a716:	f47f ae3f 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a71a:	4620      	mov	r0, r4
}
 800a71c:	b00e      	add	sp, #56	; 0x38
 800a71e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a722:	f7ff bc75 	b.w	800a010 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a726:	0545      	lsls	r5, r0, #21
 800a728:	d5c9      	bpl.n	800a6be <HAL_I2C_EV_IRQHandler+0x386>
 800a72a:	f011 0104 	ands.w	r1, r1, #4
 800a72e:	d1c9      	bne.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a730:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a734:	2a22      	cmp	r2, #34	; 0x22
 800a736:	f47f ae2f 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a73a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a73c:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a73e:	2a03      	cmp	r2, #3
 800a740:	f240 81ec 	bls.w	800ab1c <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a744:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a746:	691b      	ldr	r3, [r3, #16]
 800a748:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a74a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a74c:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a74e:	3b01      	subs	r3, #1
 800a750:	b29b      	uxth	r3, r3
 800a752:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a754:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a756:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a758:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a75a:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a75c:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a75e:	f47f ae1b 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a762:	6822      	ldr	r2, [r4, #0]
 800a764:	6853      	ldr	r3, [r2, #4]
 800a766:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a76a:	6053      	str	r3, [r2, #4]
 800a76c:	e614      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a76e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a772:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a774:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a776:	bf16      	itet	ne
 800a778:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a77c:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a780:	b2d2      	uxtbne	r2, r2
 800a782:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a784:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a786:	b11a      	cbz	r2, 800a790 <HAL_I2C_EV_IRQHandler+0x458>
 800a788:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a78a:	2a00      	cmp	r2, #0
 800a78c:	f47f ae21 	bne.w	800a3d2 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a790:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a792:	2a00      	cmp	r2, #0
 800a794:	f43f ae00 	beq.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a798:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a79a:	2a00      	cmp	r2, #0
 800a79c:	f47f ae19 	bne.w	800a3d2 <HAL_I2C_EV_IRQHandler+0x9a>
 800a7a0:	e5fa      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a7a2:	4620      	mov	r0, r4
}
 800a7a4:	b00e      	add	sp, #56	; 0x38
 800a7a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a7aa:	f7ff bd0f 	b.w	800a1cc <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a7ae:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a7b0:	bb52      	cbnz	r2, 800a808 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a7b2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a7b4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a7b8:	611a      	str	r2, [r3, #16]
 800a7ba:	e5ed      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a7bc:	2201      	movs	r2, #1
 800a7be:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a7c0:	e619      	b.n	800a3f6 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a7c2:	685a      	ldr	r2, [r3, #4]
 800a7c4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a7c8:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a7ca:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a7cc:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a7d0:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a7d4:	bf54      	ite	pl
 800a7d6:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a7d8:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a7da:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a7de:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a7e2:	4620      	mov	r0, r4
 800a7e4:	f7ff fc0e 	bl	800a004 <HAL_I2C_AddrCallback>
 800a7e8:	e5d6      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800a7ea:	bf00      	nop
 800a7ec:	0800a0d9 	.word	0x0800a0d9
      else if (hi2c->EventCount == 1U)
 800a7f0:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a7f2:	2a01      	cmp	r2, #1
 800a7f4:	f47f add0 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a7f8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a7fa:	11d2      	asrs	r2, r2, #7
 800a7fc:	f002 0206 	and.w	r2, r2, #6
 800a800:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a804:	611a      	str	r2, [r3, #16]
 800a806:	e5c7      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a808:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a80a:	f042 0201 	orr.w	r2, r2, #1
 800a80e:	b2d2      	uxtb	r2, r2
 800a810:	611a      	str	r2, [r3, #16]
 800a812:	e5c1      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a814:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a816:	b911      	cbnz	r1, 800a81e <HAL_I2C_EV_IRQHandler+0x4e6>
 800a818:	2a40      	cmp	r2, #64	; 0x40
 800a81a:	f000 809b 	beq.w	800a954 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a81e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a820:	b922      	cbnz	r2, 800a82c <HAL_I2C_EV_IRQHandler+0x4f4>
 800a822:	6921      	ldr	r1, [r4, #16]
 800a824:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a828:	f000 809f 	beq.w	800a96a <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a82c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a82e:	b292      	uxth	r2, r2
 800a830:	2a00      	cmp	r2, #0
 800a832:	d142      	bne.n	800a8ba <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a834:	9203      	str	r2, [sp, #12]
 800a836:	695a      	ldr	r2, [r3, #20]
 800a838:	9203      	str	r2, [sp, #12]
 800a83a:	699a      	ldr	r2, [r3, #24]
 800a83c:	9203      	str	r2, [sp, #12]
 800a83e:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a840:	681a      	ldr	r2, [r3, #0]
 800a842:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a846:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a848:	2300      	movs	r3, #0
 800a84a:	6523      	str	r3, [r4, #80]	; 0x50
 800a84c:	e5a4      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a84e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a850:	6802      	ldr	r2, [r0, #0]
 800a852:	6852      	ldr	r2, [r2, #4]
 800a854:	b292      	uxth	r2, r2
 800a856:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a858:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a85a:	b292      	uxth	r2, r2
 800a85c:	b11a      	cbz	r2, 800a866 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a85e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a860:	f042 0204 	orr.w	r2, r2, #4
 800a864:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a866:	685a      	ldr	r2, [r3, #4]
 800a868:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a86c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a86e:	f7fe fc27 	bl	80090c0 <HAL_DMA_GetState>
 800a872:	2801      	cmp	r0, #1
 800a874:	f43f ae8e 	beq.w	800a594 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a878:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a87a:	4b98      	ldr	r3, [pc, #608]	; (800aadc <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a87c:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a87e:	f7fe fc0d 	bl	800909c <HAL_DMA_Abort_IT>
 800a882:	2800      	cmp	r0, #0
 800a884:	f43f ae86 	beq.w	800a594 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a888:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a88a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a88c:	4798      	blx	r3
 800a88e:	e681      	b.n	800a594 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a890:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a892:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a894:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a896:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a89a:	f7ff fbb1 	bl	800a000 <HAL_I2C_SlaveRxCpltCallback>
 800a89e:	e6a6      	b.n	800a5ee <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a8a0:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a8a2:	498f      	ldr	r1, [pc, #572]	; (800aae0 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800a8a4:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800a8a6:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a8a8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800a8aa:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a8ac:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a8b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800a8b4:	f7ff fba8 	bl	800a008 <HAL_I2C_ListenCpltCallback>
 800a8b8:	e56e      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800a8ba:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a8bc:	b292      	uxth	r2, r2
 800a8be:	2a01      	cmp	r2, #1
 800a8c0:	d070      	beq.n	800a9a4 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800a8c2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a8c4:	b292      	uxth	r2, r2
 800a8c6:	2a02      	cmp	r2, #2
 800a8c8:	f000 80d6 	beq.w	800aa78 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a8cc:	681a      	ldr	r2, [r3, #0]
 800a8ce:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a8d2:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a8d4:	685a      	ldr	r2, [r3, #4]
 800a8d6:	0511      	lsls	r1, r2, #20
 800a8d8:	d508      	bpl.n	800a8ec <HAL_I2C_EV_IRQHandler+0x5b4>
 800a8da:	2820      	cmp	r0, #32
 800a8dc:	f200 80f8 	bhi.w	800aad0 <HAL_I2C_EV_IRQHandler+0x798>
 800a8e0:	2807      	cmp	r0, #7
 800a8e2:	f200 80ea 	bhi.w	800aaba <HAL_I2C_EV_IRQHandler+0x782>
 800a8e6:	2801      	cmp	r0, #1
 800a8e8:	f000 80ed 	beq.w	800aac6 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a8ec:	2200      	movs	r2, #0
 800a8ee:	9209      	str	r2, [sp, #36]	; 0x24
 800a8f0:	695a      	ldr	r2, [r3, #20]
 800a8f2:	9209      	str	r2, [sp, #36]	; 0x24
 800a8f4:	699b      	ldr	r3, [r3, #24]
 800a8f6:	9309      	str	r3, [sp, #36]	; 0x24
 800a8f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a8fa:	e7a5      	b.n	800a848 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8fc:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8fe:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a900:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a904:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a906:	691b      	ldr	r3, [r3, #16]
 800a908:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800a90a:	e6f1      	b.n	800a6f0 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a90c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a90e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a912:	2a21      	cmp	r2, #33	; 0x21
 800a914:	f47f ad40 	bne.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800a918:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a91a:	b292      	uxth	r2, r2
 800a91c:	2a00      	cmp	r2, #0
 800a91e:	f47f aeb2 	bne.w	800a686 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a922:	2908      	cmp	r1, #8
 800a924:	f000 80e2 	beq.w	800aaec <HAL_I2C_EV_IRQHandler+0x7b4>
 800a928:	2920      	cmp	r1, #32
 800a92a:	f000 80df 	beq.w	800aaec <HAL_I2C_EV_IRQHandler+0x7b4>
 800a92e:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800a932:	f000 80db 	beq.w	800aaec <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a936:	6859      	ldr	r1, [r3, #4]
 800a938:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a93c:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a93e:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800a940:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a942:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a944:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a948:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a94a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a94e:	f7ff fb51 	bl	8009ff4 <HAL_I2C_MasterTxCpltCallback>
 800a952:	e521      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a954:	9101      	str	r1, [sp, #4]
 800a956:	695a      	ldr	r2, [r3, #20]
 800a958:	9201      	str	r2, [sp, #4]
 800a95a:	699b      	ldr	r3, [r3, #24]
 800a95c:	9301      	str	r3, [sp, #4]
 800a95e:	9b01      	ldr	r3, [sp, #4]
 800a960:	e51a      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a962:	2a21      	cmp	r2, #33	; 0x21
 800a964:	f43f add1 	beq.w	800a50a <HAL_I2C_EV_IRQHandler+0x1d2>
 800a968:	e5c9      	b.n	800a4fe <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a96a:	9202      	str	r2, [sp, #8]
 800a96c:	695a      	ldr	r2, [r3, #20]
 800a96e:	9202      	str	r2, [sp, #8]
 800a970:	699a      	ldr	r2, [r3, #24]
 800a972:	9202      	str	r2, [sp, #8]
 800a974:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a976:	681a      	ldr	r2, [r3, #0]
 800a978:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a97c:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800a97e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a980:	3301      	adds	r3, #1
 800a982:	6523      	str	r3, [r4, #80]	; 0x50
 800a984:	e508      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a986:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a988:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a98a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a98e:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a990:	f43f aeab 	beq.w	800a6ea <HAL_I2C_EV_IRQHandler+0x3b2>
 800a994:	2902      	cmp	r1, #2
 800a996:	f43f aea8 	beq.w	800a6ea <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a99a:	681a      	ldr	r2, [r3, #0]
 800a99c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9a0:	601a      	str	r2, [r3, #0]
 800a9a2:	e6a2      	b.n	800a6ea <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800a9a4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a9a8:	f000 811b 	beq.w	800abe2 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800a9ac:	2808      	cmp	r0, #8
 800a9ae:	f000 8108 	beq.w	800abc2 <HAL_I2C_EV_IRQHandler+0x88a>
 800a9b2:	2820      	cmp	r0, #32
 800a9b4:	f000 8105 	beq.w	800abc2 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a9b8:	2d12      	cmp	r5, #18
 800a9ba:	f000 80ff 	beq.w	800abbc <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a9be:	2810      	cmp	r0, #16
 800a9c0:	d804      	bhi.n	800a9cc <HAL_I2C_EV_IRQHandler+0x694>
 800a9c2:	4a48      	ldr	r2, [pc, #288]	; (800aae4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a9c4:	40c2      	lsrs	r2, r0
 800a9c6:	07d1      	lsls	r1, r2, #31
 800a9c8:	f100 814c 	bmi.w	800ac64 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9cc:	681a      	ldr	r2, [r3, #0]
 800a9ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9d2:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9d4:	2200      	movs	r2, #0
 800a9d6:	9206      	str	r2, [sp, #24]
 800a9d8:	695a      	ldr	r2, [r3, #20]
 800a9da:	9206      	str	r2, [sp, #24]
 800a9dc:	699b      	ldr	r3, [r3, #24]
 800a9de:	9306      	str	r3, [sp, #24]
 800a9e0:	9b06      	ldr	r3, [sp, #24]
 800a9e2:	e731      	b.n	800a848 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9e4:	685a      	ldr	r2, [r3, #4]
 800a9e6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9ea:	605a      	str	r2, [r3, #4]
 800a9ec:	e4d4      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800a9ee:	3901      	subs	r1, #1
 800a9f0:	290f      	cmp	r1, #15
 800a9f2:	d809      	bhi.n	800aa08 <HAL_I2C_EV_IRQHandler+0x6d0>
 800a9f4:	e8df f001 	tbb	[pc, r1]
 800a9f8:	3608363b 	.word	0x3608363b
 800a9fc:	08080808 	.word	0x08080808
 800aa00:	08080808 	.word	0x08080808
 800aa04:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa08:	681a      	ldr	r2, [r3, #0]
 800aa0a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aa0e:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa10:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa12:	691b      	ldr	r3, [r3, #16]
 800aa14:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800aa16:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800aa18:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa1a:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800aa1c:	3b01      	subs	r3, #1
 800aa1e:	b29b      	uxth	r3, r3
 800aa20:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa22:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800aa24:	1c51      	adds	r1, r2, #1
 800aa26:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa28:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800aa2a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa2c:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800aa2e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aa30:	3b01      	subs	r3, #1
 800aa32:	b29b      	uxth	r3, r3
 800aa34:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa36:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800aa38:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa3a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800aa3e:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800aa40:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa42:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800aa44:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa48:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800aa4c:	2b40      	cmp	r3, #64	; 0x40
 800aa4e:	f000 80f5 	beq.w	800ac3c <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa52:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800aa54:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa56:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800aa5a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800aa5c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800aa5e:	f7ff facb 	bl	8009ff8 <HAL_I2C_MasterRxCpltCallback>
 800aa62:	e499      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa64:	681a      	ldr	r2, [r3, #0]
 800aa66:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800aa6a:	601a      	str	r2, [r3, #0]
 800aa6c:	e7d0      	b.n	800aa10 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa6e:	681a      	ldr	r2, [r3, #0]
 800aa70:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa74:	601a      	str	r2, [r3, #0]
 800aa76:	e7cb      	b.n	800aa10 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800aa78:	2810      	cmp	r0, #16
 800aa7a:	d804      	bhi.n	800aa86 <HAL_I2C_EV_IRQHandler+0x74e>
 800aa7c:	4a19      	ldr	r2, [pc, #100]	; (800aae4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800aa7e:	40c2      	lsrs	r2, r0
 800aa80:	07d2      	lsls	r2, r2, #31
 800aa82:	f100 80c2 	bmi.w	800ac0a <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa86:	681a      	ldr	r2, [r3, #0]
 800aa88:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa8c:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800aa8e:	681a      	ldr	r2, [r3, #0]
 800aa90:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aa94:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800aa96:	685a      	ldr	r2, [r3, #4]
 800aa98:	0516      	lsls	r6, r2, #20
 800aa9a:	d506      	bpl.n	800aaaa <HAL_I2C_EV_IRQHandler+0x772>
 800aa9c:	2820      	cmp	r0, #32
 800aa9e:	f240 80bc 	bls.w	800ac1a <HAL_I2C_EV_IRQHandler+0x8e2>
 800aaa2:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aaa6:	f000 80bd 	beq.w	800ac24 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aaaa:	2200      	movs	r2, #0
 800aaac:	9208      	str	r2, [sp, #32]
 800aaae:	695a      	ldr	r2, [r3, #20]
 800aab0:	9208      	str	r2, [sp, #32]
 800aab2:	699b      	ldr	r3, [r3, #24]
 800aab4:	9308      	str	r3, [sp, #32]
 800aab6:	9b08      	ldr	r3, [sp, #32]
 800aab8:	e6c6      	b.n	800a848 <HAL_I2C_EV_IRQHandler+0x510>
 800aaba:	4a0b      	ldr	r2, [pc, #44]	; (800aae8 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800aabc:	3808      	subs	r0, #8
 800aabe:	40c2      	lsrs	r2, r0
 800aac0:	07d2      	lsls	r2, r2, #31
 800aac2:	f57f af13 	bpl.w	800a8ec <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800aac6:	685a      	ldr	r2, [r3, #4]
 800aac8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800aacc:	605a      	str	r2, [r3, #4]
 800aace:	e70d      	b.n	800a8ec <HAL_I2C_EV_IRQHandler+0x5b4>
 800aad0:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aad4:	f47f af0a 	bne.w	800a8ec <HAL_I2C_EV_IRQHandler+0x5b4>
 800aad8:	e7f5      	b.n	800aac6 <HAL_I2C_EV_IRQHandler+0x78e>
 800aada:	bf00      	nop
 800aadc:	0800a0d9 	.word	0x0800a0d9
 800aae0:	ffff0000 	.word	0xffff0000
 800aae4:	00010014 	.word	0x00010014
 800aae8:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aaec:	6859      	ldr	r1, [r3, #4]
 800aaee:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800aaf2:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aaf4:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aaf6:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800aaf8:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aafa:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800aafe:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ab00:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800ab02:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ab06:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab0a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ab0e:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ab10:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ab12:	f47f af1c 	bne.w	800a94e <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ab16:	f7ff fa79 	bl	800a00c <HAL_I2C_MemTxCpltCallback>
 800ab1a:	e43d      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800ab1c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ab1e:	2802      	cmp	r0, #2
 800ab20:	f43f af60 	beq.w	800a9e4 <HAL_I2C_EV_IRQHandler+0x6ac>
 800ab24:	2a01      	cmp	r2, #1
 800ab26:	f63f af5d 	bhi.w	800a9e4 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ab2a:	4a62      	ldr	r2, [pc, #392]	; (800acb4 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800ab2c:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ab2e:	6812      	ldr	r2, [r2, #0]
 800ab30:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800ab34:	fbb2 f2f0 	udiv	r2, r2, r0
 800ab38:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ab3c:	920b      	str	r2, [sp, #44]	; 0x2c
 800ab3e:	e004      	b.n	800ab4a <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ab40:	681a      	ldr	r2, [r3, #0]
 800ab42:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800ab46:	f000 8092 	beq.w	800ac6e <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800ab4a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ab4c:	3a01      	subs	r2, #1
 800ab4e:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800ab50:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ab52:	2900      	cmp	r1, #0
 800ab54:	d1f4      	bne.n	800ab40 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ab56:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab58:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ab5a:	f042 0220 	orr.w	r2, r2, #32
 800ab5e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ab60:	685a      	ldr	r2, [r3, #4]
 800ab62:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ab66:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab68:	691b      	ldr	r3, [r3, #16]
 800ab6a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ab6c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ab6e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab70:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800ab72:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800ab74:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800ab76:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800ab78:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ab7a:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800ab7c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800ab80:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab82:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800ab86:	f7ff faa3 	bl	800a0d0 <HAL_I2C_ErrorCallback>
 800ab8a:	e405      	b.n	800a398 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ab8c:	2d08      	cmp	r5, #8
 800ab8e:	d0ad      	beq.n	800aaec <HAL_I2C_EV_IRQHandler+0x7b4>
 800ab90:	2d20      	cmp	r5, #32
 800ab92:	d0ab      	beq.n	800aaec <HAL_I2C_EV_IRQHandler+0x7b4>
 800ab94:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800ab98:	d0a8      	beq.n	800aaec <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ab9a:	685a      	ldr	r2, [r3, #4]
 800ab9c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800aba0:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aba2:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aba4:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aba6:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aba8:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800abaa:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800abae:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800abb0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800abb4:	f7ff fa1e 	bl	8009ff4 <HAL_I2C_MasterTxCpltCallback>
 800abb8:	f7ff bbee 	b.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800abbc:	2801      	cmp	r0, #1
 800abbe:	f43f af05 	beq.w	800a9cc <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abc2:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abc4:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abc6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abca:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abcc:	9107      	str	r1, [sp, #28]
 800abce:	695a      	ldr	r2, [r3, #20]
 800abd0:	9207      	str	r2, [sp, #28]
 800abd2:	699a      	ldr	r2, [r3, #24]
 800abd4:	9207      	str	r2, [sp, #28]
 800abd6:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abd8:	681a      	ldr	r2, [r3, #0]
 800abda:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800abde:	601a      	str	r2, [r3, #0]
 800abe0:	e632      	b.n	800a848 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abe2:	681a      	ldr	r2, [r3, #0]
 800abe4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abe8:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800abea:	685a      	ldr	r2, [r3, #4]
 800abec:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800abf0:	d02d      	beq.n	800ac4e <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abf2:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abf4:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abf6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abfa:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abfc:	9104      	str	r1, [sp, #16]
 800abfe:	695a      	ldr	r2, [r3, #20]
 800ac00:	9204      	str	r2, [sp, #16]
 800ac02:	699b      	ldr	r3, [r3, #24]
 800ac04:	9304      	str	r3, [sp, #16]
 800ac06:	9b04      	ldr	r3, [sp, #16]
 800ac08:	e61e      	b.n	800a848 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac0a:	681a      	ldr	r2, [r3, #0]
 800ac0c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ac10:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ac12:	685a      	ldr	r2, [r3, #4]
 800ac14:	0515      	lsls	r5, r2, #20
 800ac16:	f57f af48 	bpl.w	800aaaa <HAL_I2C_EV_IRQHandler+0x772>
 800ac1a:	2807      	cmp	r0, #7
 800ac1c:	d807      	bhi.n	800ac2e <HAL_I2C_EV_IRQHandler+0x8f6>
 800ac1e:	2801      	cmp	r0, #1
 800ac20:	f47f af43 	bne.w	800aaaa <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ac24:	685a      	ldr	r2, [r3, #4]
 800ac26:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800ac2a:	605a      	str	r2, [r3, #4]
 800ac2c:	e73d      	b.n	800aaaa <HAL_I2C_EV_IRQHandler+0x772>
 800ac2e:	4a22      	ldr	r2, [pc, #136]	; (800acb8 <HAL_I2C_EV_IRQHandler+0x980>)
 800ac30:	3808      	subs	r0, #8
 800ac32:	40c2      	lsrs	r2, r0
 800ac34:	07d0      	lsls	r0, r2, #31
 800ac36:	f57f af38 	bpl.w	800aaaa <HAL_I2C_EV_IRQHandler+0x772>
 800ac3a:	e7f3      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac3c:	2300      	movs	r3, #0
 800ac3e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ac42:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800ac44:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ac46:	f7ff fa41 	bl	800a0cc <HAL_I2C_MemRxCpltCallback>
 800ac4a:	f7ff bba5 	b.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac4e:	9205      	str	r2, [sp, #20]
 800ac50:	695a      	ldr	r2, [r3, #20]
 800ac52:	9205      	str	r2, [sp, #20]
 800ac54:	699a      	ldr	r2, [r3, #24]
 800ac56:	9205      	str	r2, [sp, #20]
 800ac58:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac5a:	681a      	ldr	r2, [r3, #0]
 800ac5c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac60:	601a      	str	r2, [r3, #0]
 800ac62:	e5f1      	b.n	800a848 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac64:	681a      	ldr	r2, [r3, #0]
 800ac66:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ac6a:	601a      	str	r2, [r3, #0]
 800ac6c:	e6b2      	b.n	800a9d4 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac6e:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac70:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac72:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ac76:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac78:	6859      	ldr	r1, [r3, #4]
 800ac7a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ac7e:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac80:	691b      	ldr	r3, [r3, #16]
 800ac82:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ac84:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ac86:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800ac88:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800ac8a:	b29b      	uxth	r3, r3
 800ac8c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800ac8e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800ac92:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac94:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800ac98:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac9a:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800ac9c:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac9e:	f47f aed9 	bne.w	800aa54 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800aca2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800aca6:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800aca8:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800acaa:	f7ff fa0f 	bl	800a0cc <HAL_I2C_MemRxCpltCallback>
 800acae:	f7ff bb73 	b.w	800a398 <HAL_I2C_EV_IRQHandler+0x60>
 800acb2:	bf00      	nop
 800acb4:	20000078 	.word	0x20000078
 800acb8:	01000101 	.word	0x01000101

0800acbc <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800acbc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800acc0:	2a20      	cmp	r2, #32
{
 800acc2:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800acc4:	fa5f fc82 	uxtb.w	ip, r2
 800acc8:	d001      	beq.n	800acce <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800acca:	2002      	movs	r0, #2
  }
}
 800accc:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800acce:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800acd0:	2024      	movs	r0, #36	; 0x24
 800acd2:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800acd6:	6810      	ldr	r0, [r2, #0]
 800acd8:	f020 0001 	bic.w	r0, r0, #1
 800acdc:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800acde:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ace0:	f020 0010 	bic.w	r0, r0, #16
 800ace4:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800ace6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ace8:	4301      	orrs	r1, r0
 800acea:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800acec:	6811      	ldr	r1, [r2, #0]
 800acee:	f041 0101 	orr.w	r1, r1, #1
 800acf2:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800acf4:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800acf6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800acfa:	4770      	bx	lr

0800acfc <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800acfc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ad00:	2a20      	cmp	r2, #32
 800ad02:	d001      	beq.n	800ad08 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ad04:	2002      	movs	r0, #2
  }
}
 800ad06:	4770      	bx	lr
{
 800ad08:	b410      	push	{r4}
 800ad0a:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800ad0e:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ad10:	2224      	movs	r2, #36	; 0x24
 800ad12:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ad16:	6822      	ldr	r2, [r4, #0]
 800ad18:	f022 0201 	bic.w	r2, r2, #1
 800ad1c:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800ad1e:	4603      	mov	r3, r0
 800ad20:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800ad22:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800ad26:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ad28:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800ad2a:	b289      	uxth	r1, r1
 800ad2c:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ad2e:	6822      	ldr	r2, [r4, #0]
 800ad30:	f042 0201 	orr.w	r2, r2, #1
 800ad34:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ad36:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ad3a:	2000      	movs	r0, #0
}
 800ad3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ad40:	4770      	bx	lr
 800ad42:	bf00      	nop

0800ad44 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ad44:	2800      	cmp	r0, #0
 800ad46:	d069      	beq.n	800ae1c <HAL_LTDC_Init+0xd8>
{
 800ad48:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ad4a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ad4e:	4604      	mov	r4, r0
 800ad50:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ad54:	2b00      	cmp	r3, #0
 800ad56:	d05c      	beq.n	800ae12 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ad58:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ad5a:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ad5c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad60:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ad64:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad66:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ad68:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ad6c:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ad70:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad72:	6999      	ldr	r1, [r3, #24]
 800ad74:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ad76:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad78:	430a      	orrs	r2, r1
 800ad7a:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ad7c:	689a      	ldr	r2, [r3, #8]
 800ad7e:	4928      	ldr	r1, [pc, #160]	; (800ae20 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ad80:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ad82:	400a      	ands	r2, r1
 800ad84:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ad86:	689a      	ldr	r2, [r3, #8]
 800ad88:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad8c:	69a0      	ldr	r0, [r4, #24]
 800ad8e:	4302      	orrs	r2, r0
 800ad90:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ad92:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ad94:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ad96:	400a      	ands	r2, r1
 800ad98:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ad9a:	68da      	ldr	r2, [r3, #12]
 800ad9c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ada0:	6a20      	ldr	r0, [r4, #32]
 800ada2:	4302      	orrs	r2, r0
 800ada4:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ada6:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ada8:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800adaa:	400a      	ands	r2, r1
 800adac:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800adae:	691a      	ldr	r2, [r3, #16]
 800adb0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800adb4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800adb6:	4302      	orrs	r2, r0
 800adb8:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800adba:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800adbc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800adbe:	400a      	ands	r2, r1
 800adc0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800adc2:	695a      	ldr	r2, [r3, #20]
 800adc4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800adc6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800adca:	430a      	orrs	r2, r1
 800adcc:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800adce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800add0:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800add4:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800add8:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800addc:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800adde:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800ade0:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800ade4:	432a      	orrs	r2, r5
 800ade6:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800adea:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800adee:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800adf0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800adf2:	f042 0206 	orr.w	r2, r2, #6
 800adf6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800adf8:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800adfa:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800adfe:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800ae00:	ea42 020c 	orr.w	r2, r2, ip
 800ae04:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800ae06:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800ae0a:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800ae0e:	4608      	mov	r0, r1
}
 800ae10:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800ae12:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800ae16:	f7f7 f857 	bl	8001ec8 <HAL_LTDC_MspInit>
 800ae1a:	e79d      	b.n	800ad58 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800ae1c:	2001      	movs	r0, #1
}
 800ae1e:	4770      	bx	lr
 800ae20:	f000f800 	.word	0xf000f800

0800ae24 <HAL_LTDC_ErrorCallback>:
 800ae24:	4770      	bx	lr
 800ae26:	bf00      	nop

0800ae28 <HAL_LTDC_ReloadEventCallback>:
 800ae28:	4770      	bx	lr
 800ae2a:	bf00      	nop

0800ae2c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ae2c:	6803      	ldr	r3, [r0, #0]
{
 800ae2e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ae30:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800ae32:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ae34:	076a      	lsls	r2, r5, #29
{
 800ae36:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ae38:	d501      	bpl.n	800ae3e <HAL_LTDC_IRQHandler+0x12>
 800ae3a:	0771      	lsls	r1, r6, #29
 800ae3c:	d41d      	bmi.n	800ae7a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800ae3e:	07aa      	lsls	r2, r5, #30
 800ae40:	d501      	bpl.n	800ae46 <HAL_LTDC_IRQHandler+0x1a>
 800ae42:	07b3      	lsls	r3, r6, #30
 800ae44:	d42d      	bmi.n	800aea2 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800ae46:	07e8      	lsls	r0, r5, #31
 800ae48:	d501      	bpl.n	800ae4e <HAL_LTDC_IRQHandler+0x22>
 800ae4a:	07f1      	lsls	r1, r6, #31
 800ae4c:	d440      	bmi.n	800aed0 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800ae4e:	072a      	lsls	r2, r5, #28
 800ae50:	d501      	bpl.n	800ae56 <HAL_LTDC_IRQHandler+0x2a>
 800ae52:	0733      	lsls	r3, r6, #28
 800ae54:	d400      	bmi.n	800ae58 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800ae56:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ae58:	6823      	ldr	r3, [r4, #0]
 800ae5a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ae5c:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ae5e:	f022 0208 	bic.w	r2, r2, #8
 800ae62:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800ae64:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ae66:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800ae68:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800ae6a:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae6e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800ae72:	4620      	mov	r0, r4
 800ae74:	f7ff ffd8 	bl	800ae28 <HAL_LTDC_ReloadEventCallback>
}
 800ae78:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800ae7a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ae7c:	f022 0204 	bic.w	r2, r2, #4
 800ae80:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800ae82:	2204      	movs	r2, #4
 800ae84:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800ae86:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800ae8a:	f043 0301 	orr.w	r3, r3, #1
 800ae8e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800ae92:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ae94:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae98:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800ae9c:	f7ff ffc2 	bl	800ae24 <HAL_LTDC_ErrorCallback>
 800aea0:	e7cd      	b.n	800ae3e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800aea2:	6823      	ldr	r3, [r4, #0]
 800aea4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aea6:	f022 0202 	bic.w	r2, r2, #2
 800aeaa:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800aeac:	2202      	movs	r2, #2
 800aeae:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800aeb0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800aeb4:	f043 0302 	orr.w	r3, r3, #2
 800aeb8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aebc:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800aebe:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aec0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aec4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800aec8:	4620      	mov	r0, r4
 800aeca:	f7ff ffab 	bl	800ae24 <HAL_LTDC_ErrorCallback>
 800aece:	e7ba      	b.n	800ae46 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800aed0:	6823      	ldr	r3, [r4, #0]
 800aed2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aed4:	f022 0201 	bic.w	r2, r2, #1
 800aed8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800aeda:	2201      	movs	r2, #1
 800aedc:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800aede:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800aee0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aee4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800aee8:	4620      	mov	r0, r4
 800aeea:	f7f6 f921 	bl	8001130 <HAL_LTDC_LineEventCallback>
 800aeee:	e7ae      	b.n	800ae4e <HAL_LTDC_IRQHandler+0x22>

0800aef0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800aef0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800aef4:	2b01      	cmp	r3, #1
 800aef6:	f000 80c2 	beq.w	800b07e <HAL_LTDC_ConfigLayer+0x18e>
{
 800aefa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aefe:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800af02:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af06:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800af0a:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af0c:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800af0e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af12:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800af16:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800af1a:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800af1e:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af22:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800af26:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af28:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af2c:	460c      	mov	r4, r1
 800af2e:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af30:	9301      	str	r3, [sp, #4]
 800af32:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af34:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800af36:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800af3a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800af3e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800af40:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af42:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800af46:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800af48:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800af4c:	6823      	ldr	r3, [r4, #0]
 800af4e:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af52:	9b01      	ldr	r3, [sp, #4]
 800af54:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800af58:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800af5c:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af5e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800af60:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800af64:	1c51      	adds	r1, r2, #1
 800af66:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800af6a:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800af6c:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800af6e:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800af72:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af76:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800af7a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800af7e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800af82:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af86:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800af8a:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af8c:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800af8e:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800af92:	3301      	adds	r3, #1
 800af94:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800af98:	4403      	add	r3, r0
 800af9a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800af9e:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800afa2:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800afa6:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800afa8:	f023 0307 	bic.w	r3, r3, #7
 800afac:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800afb0:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800afb4:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800afb8:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800afbc:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800afc0:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800afc4:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800afc8:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800afcc:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800afd0:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800afd4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800afd8:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800afdc:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800afe0:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800afe4:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800afe8:	696b      	ldr	r3, [r5, #20]
 800afea:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800afee:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800aff2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800aff6:	f023 0307 	bic.w	r3, r3, #7
 800affa:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800affe:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b002:	4303      	orrs	r3, r0
 800b004:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b008:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b00c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b00e:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b012:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b016:	bb69      	cbnz	r1, 800b074 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b018:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b01a:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b01c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b01e:	fb03 f707 	mul.w	r7, r3, r7
 800b022:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b024:	fb02 f303 	mul.w	r3, r2, r3
 800b028:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b02c:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b030:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b032:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b036:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b03a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b03e:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b042:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b046:	f023 0307 	bic.w	r3, r3, #7
 800b04a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b04e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b052:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b056:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b058:	4313      	orrs	r3, r2
 800b05a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b05e:	2300      	movs	r3, #0
  return HAL_OK;
 800b060:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b062:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b066:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b06a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b06e:	b003      	add	sp, #12
 800b070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b074:	3901      	subs	r1, #1
 800b076:	2906      	cmp	r1, #6
 800b078:	d903      	bls.n	800b082 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b07a:	2301      	movs	r3, #1
 800b07c:	e7cd      	b.n	800b01a <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b07e:	2002      	movs	r0, #2
}
 800b080:	4770      	bx	lr
 800b082:	4b02      	ldr	r3, [pc, #8]	; (800b08c <HAL_LTDC_ConfigLayer+0x19c>)
 800b084:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b088:	e7c7      	b.n	800b01a <HAL_LTDC_ConfigLayer+0x12a>
 800b08a:	bf00      	nop
 800b08c:	0802dc88 	.word	0x0802dc88

0800b090 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b090:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b094:	2b01      	cmp	r3, #1
 800b096:	d019      	beq.n	800b0cc <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b098:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b09a:	2302      	movs	r3, #2
{
 800b09c:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b09e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b0a2:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b0a4:	4c0a      	ldr	r4, [pc, #40]	; (800b0d0 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b0a6:	f023 0301 	bic.w	r3, r3, #1
 800b0aa:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b0ac:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b0ae:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b0b0:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b0b2:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b0b6:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b0ba:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b0bc:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b0c0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b0c4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b0c8:	4618      	mov	r0, r3
}
 800b0ca:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b0cc:	2002      	movs	r0, #2
}
 800b0ce:	4770      	bx	lr
 800b0d0:	40016800 	.word	0x40016800

0800b0d4 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b0d4:	2800      	cmp	r0, #0
 800b0d6:	f000 81a2 	beq.w	800b41e <HAL_RCC_OscConfig+0x34a>
{
 800b0da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b0de:	6803      	ldr	r3, [r0, #0]
 800b0e0:	07dd      	lsls	r5, r3, #31
{
 800b0e2:	b082      	sub	sp, #8
 800b0e4:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b0e6:	d52f      	bpl.n	800b148 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b0e8:	499e      	ldr	r1, [pc, #632]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b0ea:	688a      	ldr	r2, [r1, #8]
 800b0ec:	f002 020c 	and.w	r2, r2, #12
 800b0f0:	2a04      	cmp	r2, #4
 800b0f2:	f000 80ed 	beq.w	800b2d0 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b0f6:	688a      	ldr	r2, [r1, #8]
 800b0f8:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b0fc:	2a08      	cmp	r2, #8
 800b0fe:	f000 80e3 	beq.w	800b2c8 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b102:	6863      	ldr	r3, [r4, #4]
 800b104:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b108:	f000 80ec 	beq.w	800b2e4 <HAL_RCC_OscConfig+0x210>
 800b10c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b110:	f000 8175 	beq.w	800b3fe <HAL_RCC_OscConfig+0x32a>
 800b114:	4d93      	ldr	r5, [pc, #588]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b116:	682a      	ldr	r2, [r5, #0]
 800b118:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b11c:	602a      	str	r2, [r5, #0]
 800b11e:	682a      	ldr	r2, [r5, #0]
 800b120:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b124:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b126:	2b00      	cmp	r3, #0
 800b128:	f040 80e1 	bne.w	800b2ee <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b12c:	f7fd ff2c 	bl	8008f88 <HAL_GetTick>
 800b130:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b132:	e005      	b.n	800b140 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b134:	f7fd ff28 	bl	8008f88 <HAL_GetTick>
 800b138:	1b80      	subs	r0, r0, r6
 800b13a:	2864      	cmp	r0, #100	; 0x64
 800b13c:	f200 8101 	bhi.w	800b342 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b140:	682b      	ldr	r3, [r5, #0]
 800b142:	039b      	lsls	r3, r3, #14
 800b144:	d4f6      	bmi.n	800b134 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b146:	6823      	ldr	r3, [r4, #0]
 800b148:	079f      	lsls	r7, r3, #30
 800b14a:	d528      	bpl.n	800b19e <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b14c:	4a85      	ldr	r2, [pc, #532]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b14e:	6891      	ldr	r1, [r2, #8]
 800b150:	f011 0f0c 	tst.w	r1, #12
 800b154:	f000 8090 	beq.w	800b278 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b158:	6891      	ldr	r1, [r2, #8]
 800b15a:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b15e:	2908      	cmp	r1, #8
 800b160:	f000 8086 	beq.w	800b270 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b164:	68e3      	ldr	r3, [r4, #12]
 800b166:	2b00      	cmp	r3, #0
 800b168:	f000 810e 	beq.w	800b388 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b16c:	4b7e      	ldr	r3, [pc, #504]	; (800b368 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b16e:	4e7d      	ldr	r6, [pc, #500]	; (800b364 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b170:	2201      	movs	r2, #1
 800b172:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b174:	f7fd ff08 	bl	8008f88 <HAL_GetTick>
 800b178:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b17a:	e005      	b.n	800b188 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b17c:	f7fd ff04 	bl	8008f88 <HAL_GetTick>
 800b180:	1b40      	subs	r0, r0, r5
 800b182:	2802      	cmp	r0, #2
 800b184:	f200 80dd 	bhi.w	800b342 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b188:	6833      	ldr	r3, [r6, #0]
 800b18a:	0798      	lsls	r0, r3, #30
 800b18c:	d5f6      	bpl.n	800b17c <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b18e:	6833      	ldr	r3, [r6, #0]
 800b190:	6922      	ldr	r2, [r4, #16]
 800b192:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b196:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b19a:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b19c:	6823      	ldr	r3, [r4, #0]
 800b19e:	071a      	lsls	r2, r3, #28
 800b1a0:	d451      	bmi.n	800b246 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b1a2:	0758      	lsls	r0, r3, #29
 800b1a4:	d52f      	bpl.n	800b206 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b1a6:	4a6f      	ldr	r2, [pc, #444]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b1a8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b1aa:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b1ae:	d07f      	beq.n	800b2b0 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b1b0:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b1b2:	4e6e      	ldr	r6, [pc, #440]	; (800b36c <HAL_RCC_OscConfig+0x298>)
 800b1b4:	6833      	ldr	r3, [r6, #0]
 800b1b6:	05d9      	lsls	r1, r3, #23
 800b1b8:	f140 80b3 	bpl.w	800b322 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b1bc:	68a3      	ldr	r3, [r4, #8]
 800b1be:	2b01      	cmp	r3, #1
 800b1c0:	f000 80c3 	beq.w	800b34a <HAL_RCC_OscConfig+0x276>
 800b1c4:	2b05      	cmp	r3, #5
 800b1c6:	f000 812c 	beq.w	800b422 <HAL_RCC_OscConfig+0x34e>
 800b1ca:	4e66      	ldr	r6, [pc, #408]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b1cc:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b1ce:	f022 0201 	bic.w	r2, r2, #1
 800b1d2:	6732      	str	r2, [r6, #112]	; 0x70
 800b1d4:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b1d6:	f022 0204 	bic.w	r2, r2, #4
 800b1da:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b1dc:	2b00      	cmp	r3, #0
 800b1de:	f040 80b9 	bne.w	800b354 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b1e2:	f7fd fed1 	bl	8008f88 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b1e6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b1ea:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b1ec:	e005      	b.n	800b1fa <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b1ee:	f7fd fecb 	bl	8008f88 <HAL_GetTick>
 800b1f2:	1bc0      	subs	r0, r0, r7
 800b1f4:	4540      	cmp	r0, r8
 800b1f6:	f200 80a4 	bhi.w	800b342 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b1fa:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b1fc:	0798      	lsls	r0, r3, #30
 800b1fe:	d4f6      	bmi.n	800b1ee <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b200:	2d00      	cmp	r5, #0
 800b202:	f040 8106 	bne.w	800b412 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b206:	69a0      	ldr	r0, [r4, #24]
 800b208:	b1c8      	cbz	r0, 800b23e <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b20a:	4d56      	ldr	r5, [pc, #344]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b20c:	68ab      	ldr	r3, [r5, #8]
 800b20e:	f003 030c 	and.w	r3, r3, #12
 800b212:	2b08      	cmp	r3, #8
 800b214:	f000 80c9 	beq.w	800b3aa <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b218:	4b53      	ldr	r3, [pc, #332]	; (800b368 <HAL_RCC_OscConfig+0x294>)
 800b21a:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b21c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b21e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b220:	f000 8109 	beq.w	800b436 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b224:	f7fd feb0 	bl	8008f88 <HAL_GetTick>
 800b228:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b22a:	e005      	b.n	800b238 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b22c:	f7fd feac 	bl	8008f88 <HAL_GetTick>
 800b230:	1b00      	subs	r0, r0, r4
 800b232:	2802      	cmp	r0, #2
 800b234:	f200 8085 	bhi.w	800b342 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b238:	682b      	ldr	r3, [r5, #0]
 800b23a:	019b      	lsls	r3, r3, #6
 800b23c:	d4f6      	bmi.n	800b22c <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b23e:	2000      	movs	r0, #0
}
 800b240:	b002      	add	sp, #8
 800b242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b246:	6963      	ldr	r3, [r4, #20]
 800b248:	b30b      	cbz	r3, 800b28e <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b24a:	4b47      	ldr	r3, [pc, #284]	; (800b368 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b24c:	4e45      	ldr	r6, [pc, #276]	; (800b364 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b24e:	2201      	movs	r2, #1
 800b250:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b254:	f7fd fe98 	bl	8008f88 <HAL_GetTick>
 800b258:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b25a:	e004      	b.n	800b266 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b25c:	f7fd fe94 	bl	8008f88 <HAL_GetTick>
 800b260:	1b40      	subs	r0, r0, r5
 800b262:	2802      	cmp	r0, #2
 800b264:	d86d      	bhi.n	800b342 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b266:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b268:	079b      	lsls	r3, r3, #30
 800b26a:	d5f7      	bpl.n	800b25c <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b26c:	6823      	ldr	r3, [r4, #0]
 800b26e:	e798      	b.n	800b1a2 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b270:	6852      	ldr	r2, [r2, #4]
 800b272:	0256      	lsls	r6, r2, #9
 800b274:	f53f af76 	bmi.w	800b164 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b278:	4a3a      	ldr	r2, [pc, #232]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b27a:	6812      	ldr	r2, [r2, #0]
 800b27c:	0795      	lsls	r5, r2, #30
 800b27e:	d544      	bpl.n	800b30a <HAL_RCC_OscConfig+0x236>
 800b280:	68e2      	ldr	r2, [r4, #12]
 800b282:	2a01      	cmp	r2, #1
 800b284:	d041      	beq.n	800b30a <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b286:	2001      	movs	r0, #1
}
 800b288:	b002      	add	sp, #8
 800b28a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b28e:	4a36      	ldr	r2, [pc, #216]	; (800b368 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b290:	4e34      	ldr	r6, [pc, #208]	; (800b364 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b292:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b296:	f7fd fe77 	bl	8008f88 <HAL_GetTick>
 800b29a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b29c:	e004      	b.n	800b2a8 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b29e:	f7fd fe73 	bl	8008f88 <HAL_GetTick>
 800b2a2:	1b40      	subs	r0, r0, r5
 800b2a4:	2802      	cmp	r0, #2
 800b2a6:	d84c      	bhi.n	800b342 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b2a8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b2aa:	079f      	lsls	r7, r3, #30
 800b2ac:	d4f7      	bmi.n	800b29e <HAL_RCC_OscConfig+0x1ca>
 800b2ae:	e7dd      	b.n	800b26c <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b2b0:	9301      	str	r3, [sp, #4]
 800b2b2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b2b4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b2b8:	6413      	str	r3, [r2, #64]	; 0x40
 800b2ba:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b2bc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b2c0:	9301      	str	r3, [sp, #4]
 800b2c2:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b2c4:	2501      	movs	r5, #1
 800b2c6:	e774      	b.n	800b1b2 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b2c8:	684a      	ldr	r2, [r1, #4]
 800b2ca:	0250      	lsls	r0, r2, #9
 800b2cc:	f57f af19 	bpl.w	800b102 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b2d0:	4a24      	ldr	r2, [pc, #144]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b2d2:	6812      	ldr	r2, [r2, #0]
 800b2d4:	0391      	lsls	r1, r2, #14
 800b2d6:	f57f af37 	bpl.w	800b148 <HAL_RCC_OscConfig+0x74>
 800b2da:	6862      	ldr	r2, [r4, #4]
 800b2dc:	2a00      	cmp	r2, #0
 800b2de:	f47f af33 	bne.w	800b148 <HAL_RCC_OscConfig+0x74>
 800b2e2:	e7d0      	b.n	800b286 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b2e4:	4a1f      	ldr	r2, [pc, #124]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b2e6:	6813      	ldr	r3, [r2, #0]
 800b2e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b2ec:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b2ee:	f7fd fe4b 	bl	8008f88 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b2f2:	4e1c      	ldr	r6, [pc, #112]	; (800b364 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b2f4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b2f6:	e004      	b.n	800b302 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b2f8:	f7fd fe46 	bl	8008f88 <HAL_GetTick>
 800b2fc:	1b40      	subs	r0, r0, r5
 800b2fe:	2864      	cmp	r0, #100	; 0x64
 800b300:	d81f      	bhi.n	800b342 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b302:	6833      	ldr	r3, [r6, #0]
 800b304:	039a      	lsls	r2, r3, #14
 800b306:	d5f7      	bpl.n	800b2f8 <HAL_RCC_OscConfig+0x224>
 800b308:	e71d      	b.n	800b146 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b30a:	4916      	ldr	r1, [pc, #88]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b30c:	6920      	ldr	r0, [r4, #16]
 800b30e:	680a      	ldr	r2, [r1, #0]
 800b310:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b314:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b318:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b31a:	071a      	lsls	r2, r3, #28
 800b31c:	f57f af41 	bpl.w	800b1a2 <HAL_RCC_OscConfig+0xce>
 800b320:	e791      	b.n	800b246 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b322:	6833      	ldr	r3, [r6, #0]
 800b324:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b328:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b32a:	f7fd fe2d 	bl	8008f88 <HAL_GetTick>
 800b32e:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b330:	6833      	ldr	r3, [r6, #0]
 800b332:	05da      	lsls	r2, r3, #23
 800b334:	f53f af42 	bmi.w	800b1bc <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b338:	f7fd fe26 	bl	8008f88 <HAL_GetTick>
 800b33c:	1bc0      	subs	r0, r0, r7
 800b33e:	2802      	cmp	r0, #2
 800b340:	d9f6      	bls.n	800b330 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b342:	2003      	movs	r0, #3
}
 800b344:	b002      	add	sp, #8
 800b346:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b34a:	4a06      	ldr	r2, [pc, #24]	; (800b364 <HAL_RCC_OscConfig+0x290>)
 800b34c:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b34e:	f043 0301 	orr.w	r3, r3, #1
 800b352:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b354:	f7fd fe18 	bl	8008f88 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b358:	4f02      	ldr	r7, [pc, #8]	; (800b364 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b35a:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b35c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b360:	e00b      	b.n	800b37a <HAL_RCC_OscConfig+0x2a6>
 800b362:	bf00      	nop
 800b364:	40023800 	.word	0x40023800
 800b368:	42470000 	.word	0x42470000
 800b36c:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b370:	f7fd fe0a 	bl	8008f88 <HAL_GetTick>
 800b374:	1b80      	subs	r0, r0, r6
 800b376:	4540      	cmp	r0, r8
 800b378:	d8e3      	bhi.n	800b342 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b37a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b37c:	079b      	lsls	r3, r3, #30
 800b37e:	d5f7      	bpl.n	800b370 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b380:	2d00      	cmp	r5, #0
 800b382:	f43f af40 	beq.w	800b206 <HAL_RCC_OscConfig+0x132>
 800b386:	e044      	b.n	800b412 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b388:	4a42      	ldr	r2, [pc, #264]	; (800b494 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b38a:	4e43      	ldr	r6, [pc, #268]	; (800b498 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b38c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b38e:	f7fd fdfb 	bl	8008f88 <HAL_GetTick>
 800b392:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b394:	e004      	b.n	800b3a0 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b396:	f7fd fdf7 	bl	8008f88 <HAL_GetTick>
 800b39a:	1b40      	subs	r0, r0, r5
 800b39c:	2802      	cmp	r0, #2
 800b39e:	d8d0      	bhi.n	800b342 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b3a0:	6833      	ldr	r3, [r6, #0]
 800b3a2:	0799      	lsls	r1, r3, #30
 800b3a4:	d4f7      	bmi.n	800b396 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b3a6:	6823      	ldr	r3, [r4, #0]
 800b3a8:	e6f9      	b.n	800b19e <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b3aa:	2801      	cmp	r0, #1
 800b3ac:	f43f af48 	beq.w	800b240 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b3b0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b3b2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b3b4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b3b8:	4291      	cmp	r1, r2
 800b3ba:	f47f af64 	bne.w	800b286 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b3be:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b3c0:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b3c4:	4291      	cmp	r1, r2
 800b3c6:	f47f af5e 	bne.w	800b286 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b3ca:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b3cc:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b3d0:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b3d2:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b3d6:	f47f af56 	bne.w	800b286 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b3da:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b3dc:	0852      	lsrs	r2, r2, #1
 800b3de:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b3e2:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b3e4:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b3e8:	f47f af4d 	bne.w	800b286 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b3ec:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b3ee:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b3f2:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b3f6:	bf14      	ite	ne
 800b3f8:	2001      	movne	r0, #1
 800b3fa:	2000      	moveq	r0, #0
 800b3fc:	e720      	b.n	800b240 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b3fe:	4b26      	ldr	r3, [pc, #152]	; (800b498 <HAL_RCC_OscConfig+0x3c4>)
 800b400:	681a      	ldr	r2, [r3, #0]
 800b402:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b406:	601a      	str	r2, [r3, #0]
 800b408:	681a      	ldr	r2, [r3, #0]
 800b40a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b40e:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b410:	e76d      	b.n	800b2ee <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b412:	4a21      	ldr	r2, [pc, #132]	; (800b498 <HAL_RCC_OscConfig+0x3c4>)
 800b414:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b416:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b41a:	6413      	str	r3, [r2, #64]	; 0x40
 800b41c:	e6f3      	b.n	800b206 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b41e:	2001      	movs	r0, #1
}
 800b420:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b422:	4b1d      	ldr	r3, [pc, #116]	; (800b498 <HAL_RCC_OscConfig+0x3c4>)
 800b424:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b426:	f042 0204 	orr.w	r2, r2, #4
 800b42a:	671a      	str	r2, [r3, #112]	; 0x70
 800b42c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b42e:	f042 0201 	orr.w	r2, r2, #1
 800b432:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b434:	e78e      	b.n	800b354 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b436:	f7fd fda7 	bl	8008f88 <HAL_GetTick>
 800b43a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b43c:	e005      	b.n	800b44a <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b43e:	f7fd fda3 	bl	8008f88 <HAL_GetTick>
 800b442:	1b80      	subs	r0, r0, r6
 800b444:	2802      	cmp	r0, #2
 800b446:	f63f af7c 	bhi.w	800b342 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b44a:	682b      	ldr	r3, [r5, #0]
 800b44c:	0199      	lsls	r1, r3, #6
 800b44e:	d4f6      	bmi.n	800b43e <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b450:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b454:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b456:	430b      	orrs	r3, r1
 800b458:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b45c:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b460:	0852      	lsrs	r2, r2, #1
 800b462:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b466:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b468:	490a      	ldr	r1, [pc, #40]	; (800b494 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b46a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b46e:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b470:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b472:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b474:	f7fd fd88 	bl	8008f88 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b478:	4d07      	ldr	r5, [pc, #28]	; (800b498 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b47a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b47c:	e005      	b.n	800b48a <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b47e:	f7fd fd83 	bl	8008f88 <HAL_GetTick>
 800b482:	1b00      	subs	r0, r0, r4
 800b484:	2802      	cmp	r0, #2
 800b486:	f63f af5c 	bhi.w	800b342 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b48a:	682b      	ldr	r3, [r5, #0]
 800b48c:	019a      	lsls	r2, r3, #6
 800b48e:	d5f6      	bpl.n	800b47e <HAL_RCC_OscConfig+0x3aa>
 800b490:	e6d5      	b.n	800b23e <HAL_RCC_OscConfig+0x16a>
 800b492:	bf00      	nop
 800b494:	42470000 	.word	0x42470000
 800b498:	40023800 	.word	0x40023800

0800b49c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b49c:	4916      	ldr	r1, [pc, #88]	; (800b4f8 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b49e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b4a0:	688b      	ldr	r3, [r1, #8]
 800b4a2:	f003 030c 	and.w	r3, r3, #12
 800b4a6:	2b04      	cmp	r3, #4
 800b4a8:	d01b      	beq.n	800b4e2 <HAL_RCC_GetSysClockFreq+0x46>
 800b4aa:	2b08      	cmp	r3, #8
 800b4ac:	d117      	bne.n	800b4de <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b4ae:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b4b0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b4b2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b4b4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b4b8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b4bc:	d113      	bne.n	800b4e6 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b4be:	480f      	ldr	r0, [pc, #60]	; (800b4fc <HAL_RCC_GetSysClockFreq+0x60>)
 800b4c0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b4c4:	fba1 0100 	umull	r0, r1, r1, r0
 800b4c8:	f7f4 ff42 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b4cc:	4b0a      	ldr	r3, [pc, #40]	; (800b4f8 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b4ce:	685b      	ldr	r3, [r3, #4]
 800b4d0:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b4d4:	3301      	adds	r3, #1
 800b4d6:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b4d8:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b4dc:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b4de:	4807      	ldr	r0, [pc, #28]	; (800b4fc <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b4e0:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b4e2:	4807      	ldr	r0, [pc, #28]	; (800b500 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b4e4:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b4e6:	4806      	ldr	r0, [pc, #24]	; (800b500 <HAL_RCC_GetSysClockFreq+0x64>)
 800b4e8:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b4ec:	2300      	movs	r3, #0
 800b4ee:	fba1 0100 	umull	r0, r1, r1, r0
 800b4f2:	f7f4 ff2d 	bl	8000350 <__aeabi_uldivmod>
 800b4f6:	e7e9      	b.n	800b4cc <HAL_RCC_GetSysClockFreq+0x30>
 800b4f8:	40023800 	.word	0x40023800
 800b4fc:	00f42400 	.word	0x00f42400
 800b500:	007a1200 	.word	0x007a1200

0800b504 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b504:	2800      	cmp	r0, #0
 800b506:	f000 8087 	beq.w	800b618 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b50a:	4a48      	ldr	r2, [pc, #288]	; (800b62c <HAL_RCC_ClockConfig+0x128>)
 800b50c:	6813      	ldr	r3, [r2, #0]
 800b50e:	f003 030f 	and.w	r3, r3, #15
 800b512:	428b      	cmp	r3, r1
{
 800b514:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b518:	460d      	mov	r5, r1
 800b51a:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b51c:	d209      	bcs.n	800b532 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b51e:	b2cb      	uxtb	r3, r1
 800b520:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b522:	6813      	ldr	r3, [r2, #0]
 800b524:	f003 030f 	and.w	r3, r3, #15
 800b528:	428b      	cmp	r3, r1
 800b52a:	d002      	beq.n	800b532 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b52c:	2001      	movs	r0, #1
}
 800b52e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b532:	6823      	ldr	r3, [r4, #0]
 800b534:	0798      	lsls	r0, r3, #30
 800b536:	d514      	bpl.n	800b562 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b538:	0759      	lsls	r1, r3, #29
 800b53a:	d504      	bpl.n	800b546 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b53c:	493c      	ldr	r1, [pc, #240]	; (800b630 <HAL_RCC_ClockConfig+0x12c>)
 800b53e:	688a      	ldr	r2, [r1, #8]
 800b540:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b544:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b546:	071a      	lsls	r2, r3, #28
 800b548:	d504      	bpl.n	800b554 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b54a:	4939      	ldr	r1, [pc, #228]	; (800b630 <HAL_RCC_ClockConfig+0x12c>)
 800b54c:	688a      	ldr	r2, [r1, #8]
 800b54e:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b552:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b554:	4936      	ldr	r1, [pc, #216]	; (800b630 <HAL_RCC_ClockConfig+0x12c>)
 800b556:	68a0      	ldr	r0, [r4, #8]
 800b558:	688a      	ldr	r2, [r1, #8]
 800b55a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b55e:	4302      	orrs	r2, r0
 800b560:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b562:	07df      	lsls	r7, r3, #31
 800b564:	d521      	bpl.n	800b5aa <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b566:	6862      	ldr	r2, [r4, #4]
 800b568:	2a01      	cmp	r2, #1
 800b56a:	d057      	beq.n	800b61c <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b56c:	1e93      	subs	r3, r2, #2
 800b56e:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b570:	4b2f      	ldr	r3, [pc, #188]	; (800b630 <HAL_RCC_ClockConfig+0x12c>)
 800b572:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b574:	d94d      	bls.n	800b612 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b576:	0799      	lsls	r1, r3, #30
 800b578:	d5d8      	bpl.n	800b52c <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b57a:	4e2d      	ldr	r6, [pc, #180]	; (800b630 <HAL_RCC_ClockConfig+0x12c>)
 800b57c:	68b3      	ldr	r3, [r6, #8]
 800b57e:	f023 0303 	bic.w	r3, r3, #3
 800b582:	4313      	orrs	r3, r2
 800b584:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b586:	f7fd fcff 	bl	8008f88 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b58a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b58e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b590:	e004      	b.n	800b59c <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b592:	f7fd fcf9 	bl	8008f88 <HAL_GetTick>
 800b596:	1bc0      	subs	r0, r0, r7
 800b598:	4540      	cmp	r0, r8
 800b59a:	d844      	bhi.n	800b626 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b59c:	68b3      	ldr	r3, [r6, #8]
 800b59e:	6862      	ldr	r2, [r4, #4]
 800b5a0:	f003 030c 	and.w	r3, r3, #12
 800b5a4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b5a8:	d1f3      	bne.n	800b592 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b5aa:	4a20      	ldr	r2, [pc, #128]	; (800b62c <HAL_RCC_ClockConfig+0x128>)
 800b5ac:	6813      	ldr	r3, [r2, #0]
 800b5ae:	f003 030f 	and.w	r3, r3, #15
 800b5b2:	42ab      	cmp	r3, r5
 800b5b4:	d906      	bls.n	800b5c4 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b5b6:	b2eb      	uxtb	r3, r5
 800b5b8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b5ba:	6813      	ldr	r3, [r2, #0]
 800b5bc:	f003 030f 	and.w	r3, r3, #15
 800b5c0:	42ab      	cmp	r3, r5
 800b5c2:	d1b3      	bne.n	800b52c <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b5c4:	6823      	ldr	r3, [r4, #0]
 800b5c6:	075a      	lsls	r2, r3, #29
 800b5c8:	d506      	bpl.n	800b5d8 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b5ca:	4919      	ldr	r1, [pc, #100]	; (800b630 <HAL_RCC_ClockConfig+0x12c>)
 800b5cc:	68e0      	ldr	r0, [r4, #12]
 800b5ce:	688a      	ldr	r2, [r1, #8]
 800b5d0:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b5d4:	4302      	orrs	r2, r0
 800b5d6:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b5d8:	071b      	lsls	r3, r3, #28
 800b5da:	d507      	bpl.n	800b5ec <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b5dc:	4a14      	ldr	r2, [pc, #80]	; (800b630 <HAL_RCC_ClockConfig+0x12c>)
 800b5de:	6921      	ldr	r1, [r4, #16]
 800b5e0:	6893      	ldr	r3, [r2, #8]
 800b5e2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b5e6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b5ea:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b5ec:	f7ff ff56 	bl	800b49c <HAL_RCC_GetSysClockFreq>
 800b5f0:	4a0f      	ldr	r2, [pc, #60]	; (800b630 <HAL_RCC_ClockConfig+0x12c>)
 800b5f2:	4c10      	ldr	r4, [pc, #64]	; (800b634 <HAL_RCC_ClockConfig+0x130>)
 800b5f4:	6892      	ldr	r2, [r2, #8]
 800b5f6:	4910      	ldr	r1, [pc, #64]	; (800b638 <HAL_RCC_ClockConfig+0x134>)
 800b5f8:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b5fc:	4603      	mov	r3, r0
 800b5fe:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b600:	480e      	ldr	r0, [pc, #56]	; (800b63c <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b602:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b604:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b606:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b608:	f7f6 fe1e 	bl	8002248 <HAL_InitTick>
  return HAL_OK;
 800b60c:	2000      	movs	r0, #0
}
 800b60e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b612:	0198      	lsls	r0, r3, #6
 800b614:	d4b1      	bmi.n	800b57a <HAL_RCC_ClockConfig+0x76>
 800b616:	e789      	b.n	800b52c <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b618:	2001      	movs	r0, #1
}
 800b61a:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b61c:	4b04      	ldr	r3, [pc, #16]	; (800b630 <HAL_RCC_ClockConfig+0x12c>)
 800b61e:	681b      	ldr	r3, [r3, #0]
 800b620:	039e      	lsls	r6, r3, #14
 800b622:	d4aa      	bmi.n	800b57a <HAL_RCC_ClockConfig+0x76>
 800b624:	e782      	b.n	800b52c <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b626:	2003      	movs	r0, #3
 800b628:	e781      	b.n	800b52e <HAL_RCC_ClockConfig+0x2a>
 800b62a:	bf00      	nop
 800b62c:	40023c00 	.word	0x40023c00
 800b630:	40023800 	.word	0x40023800
 800b634:	0802dc70 	.word	0x0802dc70
 800b638:	20000078 	.word	0x20000078
 800b63c:	20000080 	.word	0x20000080

0800b640 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b640:	4b04      	ldr	r3, [pc, #16]	; (800b654 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b642:	4905      	ldr	r1, [pc, #20]	; (800b658 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b644:	689b      	ldr	r3, [r3, #8]
 800b646:	4a05      	ldr	r2, [pc, #20]	; (800b65c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b648:	6808      	ldr	r0, [r1, #0]
 800b64a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b64e:	5cd3      	ldrb	r3, [r2, r3]
}
 800b650:	40d8      	lsrs	r0, r3
 800b652:	4770      	bx	lr
 800b654:	40023800 	.word	0x40023800
 800b658:	20000078 	.word	0x20000078
 800b65c:	0802dc80 	.word	0x0802dc80

0800b660 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b660:	4b0e      	ldr	r3, [pc, #56]	; (800b69c <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b662:	220f      	movs	r2, #15
 800b664:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b666:	689a      	ldr	r2, [r3, #8]
 800b668:	f002 0203 	and.w	r2, r2, #3
 800b66c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b66e:	689a      	ldr	r2, [r3, #8]
 800b670:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b674:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b676:	689a      	ldr	r2, [r3, #8]
 800b678:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b67c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b67e:	689b      	ldr	r3, [r3, #8]
 800b680:	08db      	lsrs	r3, r3, #3
{
 800b682:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b684:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b688:	4c05      	ldr	r4, [pc, #20]	; (800b6a0 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b68a:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b68c:	6823      	ldr	r3, [r4, #0]
}
 800b68e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b692:	f003 030f 	and.w	r3, r3, #15
 800b696:	600b      	str	r3, [r1, #0]
}
 800b698:	4770      	bx	lr
 800b69a:	bf00      	nop
 800b69c:	40023800 	.word	0x40023800
 800b6a0:	40023c00 	.word	0x40023c00

0800b6a4 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b6a4:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b6a6:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b6a8:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b6ac:	b083      	sub	sp, #12
 800b6ae:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b6b0:	d111      	bne.n	800b6d6 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b6b2:	f013 0f0c 	tst.w	r3, #12
 800b6b6:	d16f      	bne.n	800b798 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b6b8:	0698      	lsls	r0, r3, #26
 800b6ba:	f100 80c2 	bmi.w	800b842 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b6be:	f013 0310 	ands.w	r3, r3, #16
 800b6c2:	f000 80bb 	beq.w	800b83c <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b6c6:	4b89      	ldr	r3, [pc, #548]	; (800b8ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b6c8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b6cc:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b6d0:	2000      	movs	r0, #0
}
 800b6d2:	b003      	add	sp, #12
 800b6d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b6d6:	4b86      	ldr	r3, [pc, #536]	; (800b8f0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b6d8:	4e86      	ldr	r6, [pc, #536]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b6da:	2200      	movs	r2, #0
 800b6dc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b6de:	f7fd fc53 	bl	8008f88 <HAL_GetTick>
 800b6e2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b6e4:	e004      	b.n	800b6f0 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b6e6:	f7fd fc4f 	bl	8008f88 <HAL_GetTick>
 800b6ea:	1b43      	subs	r3, r0, r5
 800b6ec:	2b02      	cmp	r3, #2
 800b6ee:	d850      	bhi.n	800b792 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b6f0:	6833      	ldr	r3, [r6, #0]
 800b6f2:	0118      	lsls	r0, r3, #4
 800b6f4:	d4f7      	bmi.n	800b6e6 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b6f6:	6823      	ldr	r3, [r4, #0]
 800b6f8:	07d9      	lsls	r1, r3, #31
 800b6fa:	d506      	bpl.n	800b70a <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b6fc:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b700:	0712      	lsls	r2, r2, #28
 800b702:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b706:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b70a:	079a      	lsls	r2, r3, #30
 800b70c:	d515      	bpl.n	800b73a <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b70e:	4979      	ldr	r1, [pc, #484]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b710:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b712:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b716:	6865      	ldr	r5, [r4, #4]
 800b718:	0612      	lsls	r2, r2, #24
 800b71a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b71e:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b722:	4302      	orrs	r2, r0
 800b724:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b728:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b72c:	69e2      	ldr	r2, [r4, #28]
 800b72e:	f020 001f 	bic.w	r0, r0, #31
 800b732:	3a01      	subs	r2, #1
 800b734:	4302      	orrs	r2, r0
 800b736:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b73a:	065b      	lsls	r3, r3, #25
 800b73c:	d509      	bpl.n	800b752 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b73e:	1d20      	adds	r0, r4, #4
 800b740:	c80b      	ldmia	r0, {r0, r1, r3}
 800b742:	061b      	lsls	r3, r3, #24
 800b744:	4a6b      	ldr	r2, [pc, #428]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b746:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b74a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b74e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b752:	4b67      	ldr	r3, [pc, #412]	; (800b8f0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b754:	4e67      	ldr	r6, [pc, #412]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b756:	2201      	movs	r2, #1
 800b758:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b75a:	f7fd fc15 	bl	8008f88 <HAL_GetTick>
 800b75e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b760:	e004      	b.n	800b76c <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b762:	f7fd fc11 	bl	8008f88 <HAL_GetTick>
 800b766:	1b40      	subs	r0, r0, r5
 800b768:	2802      	cmp	r0, #2
 800b76a:	d812      	bhi.n	800b792 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b76c:	6833      	ldr	r3, [r6, #0]
 800b76e:	011f      	lsls	r7, r3, #4
 800b770:	d5f7      	bpl.n	800b762 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b772:	6823      	ldr	r3, [r4, #0]
 800b774:	e79d      	b.n	800b6b2 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b776:	f7fd fc07 	bl	8008f88 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b77a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b77e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b780:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b782:	079b      	lsls	r3, r3, #30
 800b784:	f100 80a5 	bmi.w	800b8d2 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b788:	f7fd fbfe 	bl	8008f88 <HAL_GetTick>
 800b78c:	1b80      	subs	r0, r0, r6
 800b78e:	42b8      	cmp	r0, r7
 800b790:	d9f6      	bls.n	800b780 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b792:	2003      	movs	r0, #3
}
 800b794:	b003      	add	sp, #12
 800b796:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b798:	4b55      	ldr	r3, [pc, #340]	; (800b8f0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b79a:	4e56      	ldr	r6, [pc, #344]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b79c:	2200      	movs	r2, #0
 800b79e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b7a0:	f7fd fbf2 	bl	8008f88 <HAL_GetTick>
 800b7a4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b7a6:	e004      	b.n	800b7b2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b7a8:	f7fd fbee 	bl	8008f88 <HAL_GetTick>
 800b7ac:	1b43      	subs	r3, r0, r5
 800b7ae:	2b02      	cmp	r3, #2
 800b7b0:	d8ef      	bhi.n	800b792 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b7b2:	6833      	ldr	r3, [r6, #0]
 800b7b4:	0098      	lsls	r0, r3, #2
 800b7b6:	d4f7      	bmi.n	800b7a8 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b7b8:	6822      	ldr	r2, [r4, #0]
 800b7ba:	0751      	lsls	r1, r2, #29
 800b7bc:	d515      	bpl.n	800b7ea <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b7be:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b7c0:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b7c4:	6920      	ldr	r0, [r4, #16]
 800b7c6:	061b      	lsls	r3, r3, #24
 800b7c8:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b7cc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b7d0:	430b      	orrs	r3, r1
 800b7d2:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b7d6:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b7da:	6a21      	ldr	r1, [r4, #32]
 800b7dc:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b7e0:	3901      	subs	r1, #1
 800b7e2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b7e6:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b7ea:	0713      	lsls	r3, r2, #28
 800b7ec:	d514      	bpl.n	800b818 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b7ee:	4a41      	ldr	r2, [pc, #260]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b7f0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b7f2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b7f6:	6920      	ldr	r0, [r4, #16]
 800b7f8:	071b      	lsls	r3, r3, #28
 800b7fa:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b7fe:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b802:	430b      	orrs	r3, r1
 800b804:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b808:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b80c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b80e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b812:	430b      	orrs	r3, r1
 800b814:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b818:	4b35      	ldr	r3, [pc, #212]	; (800b8f0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b81a:	4e36      	ldr	r6, [pc, #216]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b81c:	2201      	movs	r2, #1
 800b81e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b820:	f7fd fbb2 	bl	8008f88 <HAL_GetTick>
 800b824:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b826:	e004      	b.n	800b832 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b828:	f7fd fbae 	bl	8008f88 <HAL_GetTick>
 800b82c:	1b40      	subs	r0, r0, r5
 800b82e:	2802      	cmp	r0, #2
 800b830:	d8af      	bhi.n	800b792 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b832:	6833      	ldr	r3, [r6, #0]
 800b834:	009f      	lsls	r7, r3, #2
 800b836:	d5f7      	bpl.n	800b828 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b838:	6823      	ldr	r3, [r4, #0]
 800b83a:	e73d      	b.n	800b6b8 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b83c:	4618      	mov	r0, r3
}
 800b83e:	b003      	add	sp, #12
 800b840:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b842:	4b2c      	ldr	r3, [pc, #176]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b844:	4d2c      	ldr	r5, [pc, #176]	; (800b8f8 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b846:	2200      	movs	r2, #0
 800b848:	9201      	str	r2, [sp, #4]
 800b84a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b84c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b850:	641a      	str	r2, [r3, #64]	; 0x40
 800b852:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b854:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b858:	9301      	str	r3, [sp, #4]
 800b85a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b85c:	682b      	ldr	r3, [r5, #0]
 800b85e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b862:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b864:	f7fd fb90 	bl	8008f88 <HAL_GetTick>
 800b868:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b86a:	e004      	b.n	800b876 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b86c:	f7fd fb8c 	bl	8008f88 <HAL_GetTick>
 800b870:	1b83      	subs	r3, r0, r6
 800b872:	2b02      	cmp	r3, #2
 800b874:	d88d      	bhi.n	800b792 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b876:	682b      	ldr	r3, [r5, #0]
 800b878:	05d9      	lsls	r1, r3, #23
 800b87a:	d5f7      	bpl.n	800b86c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b87c:	4d1d      	ldr	r5, [pc, #116]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b87e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b880:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b882:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b886:	d111      	bne.n	800b8ac <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b888:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b88c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b890:	d021      	beq.n	800b8d6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b892:	4918      	ldr	r1, [pc, #96]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b894:	688a      	ldr	r2, [r1, #8]
 800b896:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b89a:	608a      	str	r2, [r1, #8]
 800b89c:	4a15      	ldr	r2, [pc, #84]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b89e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b8a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b8a4:	430b      	orrs	r3, r1
 800b8a6:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b8a8:	6823      	ldr	r3, [r4, #0]
 800b8aa:	e708      	b.n	800b6be <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b8ac:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800b8b0:	4291      	cmp	r1, r2
 800b8b2:	d0eb      	beq.n	800b88c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b8b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800b8b6:	4a0e      	ldr	r2, [pc, #56]	; (800b8f0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800b8b8:	2101      	movs	r1, #1
 800b8ba:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b8be:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800b8c2:	2100      	movs	r1, #0
 800b8c4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800b8c8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800b8ca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b8cc:	07da      	lsls	r2, r3, #31
 800b8ce:	f53f af52 	bmi.w	800b776 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b8d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b8d4:	e7d8      	b.n	800b888 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800b8d6:	4807      	ldr	r0, [pc, #28]	; (800b8f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b8d8:	6882      	ldr	r2, [r0, #8]
 800b8da:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800b8de:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b8e2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b8e6:	430a      	orrs	r2, r1
 800b8e8:	6082      	str	r2, [r0, #8]
 800b8ea:	e7d7      	b.n	800b89c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800b8ec:	42471000 	.word	0x42471000
 800b8f0:	42470000 	.word	0x42470000
 800b8f4:	40023800 	.word	0x40023800
 800b8f8:	40007000 	.word	0x40007000

0800b8fc <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800b8fc:	b1f0      	cbz	r0, 800b93c <HAL_SDRAM_Init+0x40>
{
 800b8fe:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800b900:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b904:	460d      	mov	r5, r1
 800b906:	4604      	mov	r4, r0
 800b908:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b90c:	b18b      	cbz	r3, 800b932 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b90e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b910:	2302      	movs	r3, #2
 800b912:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b916:	f851 0b04 	ldr.w	r0, [r1], #4
 800b91a:	f000 ffcd 	bl	800c8b8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800b91e:	e9d4 0200 	ldrd	r0, r2, [r4]
 800b922:	4629      	mov	r1, r5
 800b924:	f001 f806 	bl	800c934 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800b928:	2301      	movs	r3, #1
 800b92a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800b92e:	2000      	movs	r0, #0
}
 800b930:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800b932:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800b936:	f7f6 fc1f 	bl	8002178 <HAL_SDRAM_MspInit>
 800b93a:	e7e8      	b.n	800b90e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800b93c:	2001      	movs	r0, #1
}
 800b93e:	4770      	bx	lr

0800b940 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800b940:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b942:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800b946:	2b02      	cmp	r3, #2
{
 800b948:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b94a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800b94c:	d004      	beq.n	800b958 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800b94e:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800b952:	2c01      	cmp	r4, #1
 800b954:	d001      	beq.n	800b95a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800b956:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b958:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b95a:	460e      	mov	r6, r1
 800b95c:	2302      	movs	r3, #2
 800b95e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800b962:	6828      	ldr	r0, [r5, #0]
 800b964:	f001 f832 	bl	800c9cc <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800b968:	6833      	ldr	r3, [r6, #0]
 800b96a:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800b96c:	bf06      	itte	eq
 800b96e:	2305      	moveq	r3, #5
 800b970:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800b974:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800b978:	2000      	movs	r0, #0
}
 800b97a:	bd70      	pop	{r4, r5, r6, pc}

0800b97c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800b97c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b97e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b982:	2b02      	cmp	r3, #2
{
 800b984:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b986:	b2d8      	uxtb	r0, r3
 800b988:	d005      	beq.n	800b996 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800b98a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b98e:	2b01      	cmp	r3, #1
 800b990:	b2dd      	uxtb	r5, r3
 800b992:	d001      	beq.n	800b998 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800b994:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b996:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b998:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b99a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b99c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b9a0:	f001 f83e 	bl	800ca20 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800b9a4:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800b9a8:	2000      	movs	r0, #0
}
 800b9aa:	bd38      	pop	{r3, r4, r5, pc}

0800b9ac <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800b9ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9b0:	b082      	sub	sp, #8
 800b9b2:	461d      	mov	r5, r3
 800b9b4:	4616      	mov	r6, r2
 800b9b6:	460c      	mov	r4, r1
 800b9b8:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800b9ba:	f7fd fae5 	bl	8008f88 <HAL_GetTick>
 800b9be:	4435      	add	r5, r6
 800b9c0:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800b9c2:	f7fd fae1 	bl	8008f88 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b9c6:	4b27      	ldr	r3, [pc, #156]	; (800ba64 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800b9c8:	681b      	ldr	r3, [r3, #0]
 800b9ca:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800b9ce:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800b9d2:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b9d4:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b9d6:	1c73      	adds	r3, r6, #1
 800b9d8:	6839      	ldr	r1, [r7, #0]
 800b9da:	d107      	bne.n	800b9ec <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800b9dc:	688b      	ldr	r3, [r1, #8]
 800b9de:	ea34 0303 	bics.w	r3, r4, r3
 800b9e2:	d0fb      	beq.n	800b9dc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800b9e4:	2000      	movs	r0, #0
}
 800b9e6:	b002      	add	sp, #8
 800b9e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b9ec:	688b      	ldr	r3, [r1, #8]
 800b9ee:	ea34 0303 	bics.w	r3, r4, r3
 800b9f2:	d1f7      	bne.n	800b9e4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800b9f4:	f7fd fac8 	bl	8008f88 <HAL_GetTick>
 800b9f8:	eba0 0008 	sub.w	r0, r0, r8
 800b9fc:	42a8      	cmp	r0, r5
 800b9fe:	d208      	bcs.n	800ba12 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800ba00:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800ba02:	2b00      	cmp	r3, #0
      count--;
 800ba04:	9b01      	ldr	r3, [sp, #4]
 800ba06:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800ba0a:	bf08      	it	eq
 800ba0c:	2500      	moveq	r5, #0
      count--;
 800ba0e:	9301      	str	r3, [sp, #4]
 800ba10:	e7e1      	b.n	800b9d6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba12:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800ba16:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba18:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800ba1c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800ba20:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba22:	d013      	beq.n	800ba4c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800ba24:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800ba26:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800ba2a:	d107      	bne.n	800ba3c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800ba2c:	681a      	ldr	r2, [r3, #0]
 800ba2e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800ba32:	601a      	str	r2, [r3, #0]
 800ba34:	681a      	ldr	r2, [r3, #0]
 800ba36:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800ba3a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800ba3c:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800ba3e:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800ba40:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800ba44:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800ba48:	2003      	movs	r0, #3
 800ba4a:	e7cc      	b.n	800b9e6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba4c:	68ba      	ldr	r2, [r7, #8]
 800ba4e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800ba52:	d002      	beq.n	800ba5a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800ba54:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ba58:	d1e4      	bne.n	800ba24 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800ba5a:	681a      	ldr	r2, [r3, #0]
 800ba5c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ba60:	601a      	str	r2, [r3, #0]
 800ba62:	e7df      	b.n	800ba24 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800ba64:	20000078 	.word	0x20000078

0800ba68 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800ba68:	b538      	push	{r3, r4, r5, lr}
 800ba6a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba6c:	6842      	ldr	r2, [r0, #4]
 800ba6e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800ba72:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba74:	d006      	beq.n	800ba84 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ba76:	460a      	mov	r2, r1
 800ba78:	2101      	movs	r1, #1
 800ba7a:	f7ff ff97 	bl	800b9ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba7e:	b978      	cbnz	r0, 800baa0 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800ba80:	2000      	movs	r0, #0
}
 800ba82:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba84:	6882      	ldr	r2, [r0, #8]
 800ba86:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800ba8a:	d01c      	beq.n	800bac6 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800ba8c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ba90:	d00c      	beq.n	800baac <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ba92:	460a      	mov	r2, r1
 800ba94:	4620      	mov	r0, r4
 800ba96:	2180      	movs	r1, #128	; 0x80
 800ba98:	f7ff ff88 	bl	800b9ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba9c:	2800      	cmp	r0, #0
 800ba9e:	d0ef      	beq.n	800ba80 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800baa0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800baa2:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800baa6:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800baa8:	6563      	str	r3, [r4, #84]	; 0x54
}
 800baaa:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800baac:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800baae:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800bab0:	6829      	ldr	r1, [r5, #0]
 800bab2:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bab6:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bab8:	2101      	movs	r1, #1
 800baba:	f7ff ff77 	bl	800b9ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800babe:	2800      	cmp	r0, #0
 800bac0:	d1ee      	bne.n	800baa0 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800bac2:	2000      	movs	r0, #0
 800bac4:	e7dd      	b.n	800ba82 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800bac6:	6800      	ldr	r0, [r0, #0]
 800bac8:	6802      	ldr	r2, [r0, #0]
 800baca:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bace:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bad0:	460a      	mov	r2, r1
 800bad2:	4620      	mov	r0, r4
 800bad4:	2180      	movs	r1, #128	; 0x80
 800bad6:	f7ff ff69 	bl	800b9ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bada:	2800      	cmp	r0, #0
 800badc:	d0d0      	beq.n	800ba80 <SPI_EndRxTransaction+0x18>
 800bade:	e7df      	b.n	800baa0 <SPI_EndRxTransaction+0x38>

0800bae0 <HAL_SPI_Init>:
  if (hspi == NULL)
 800bae0:	2800      	cmp	r0, #0
 800bae2:	d05c      	beq.n	800bb9e <HAL_SPI_Init+0xbe>
{
 800bae4:	b570      	push	{r4, r5, r6, lr}
 800bae6:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800bae8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800baea:	2800      	cmp	r0, #0
 800baec:	d047      	beq.n	800bb7e <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800baee:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800baf0:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800baf4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800baf8:	2200      	movs	r2, #0
 800bafa:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bafc:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800bb00:	2b00      	cmp	r3, #0
 800bb02:	d042      	beq.n	800bb8a <HAL_SPI_Init+0xaa>
 800bb04:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800bb06:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb08:	68a5      	ldr	r5, [r4, #8]
 800bb0a:	69a2      	ldr	r2, [r4, #24]
 800bb0c:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800bb0e:	2302      	movs	r3, #2
 800bb10:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800bb14:	680b      	ldr	r3, [r1, #0]
 800bb16:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bb1a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb1c:	6863      	ldr	r3, [r4, #4]
 800bb1e:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800bb22:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800bb26:	432b      	orrs	r3, r5
 800bb28:	68e5      	ldr	r5, [r4, #12]
 800bb2a:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800bb2e:	432b      	orrs	r3, r5
 800bb30:	6925      	ldr	r5, [r4, #16]
 800bb32:	f005 0502 	and.w	r5, r5, #2
 800bb36:	432b      	orrs	r3, r5
 800bb38:	6965      	ldr	r5, [r4, #20]
 800bb3a:	f005 0501 	and.w	r5, r5, #1
 800bb3e:	432b      	orrs	r3, r5
 800bb40:	69e5      	ldr	r5, [r4, #28]
 800bb42:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800bb46:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800bb4a:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800bb4e:	4333      	orrs	r3, r6
 800bb50:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb52:	0c12      	lsrs	r2, r2, #16
 800bb54:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb58:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb5c:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb60:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb64:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb66:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb68:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bb6a:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bb6c:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bb6e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bb72:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bb74:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bb76:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bb78:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bb7c:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bb7e:	6863      	ldr	r3, [r4, #4]
 800bb80:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bb84:	d0b6      	beq.n	800baf4 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800bb86:	61e0      	str	r0, [r4, #28]
 800bb88:	e7b4      	b.n	800baf4 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800bb8a:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bb8c:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bb90:	f7f6 fa8a 	bl	80020a8 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb94:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb98:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800bb9c:	e7b3      	b.n	800bb06 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bb9e:	2001      	movs	r0, #1
}
 800bba0:	4770      	bx	lr
 800bba2:	bf00      	nop

0800bba4 <HAL_SPI_Transmit>:
{
 800bba4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bba8:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bbaa:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bbae:	2801      	cmp	r0, #1
{
 800bbb0:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bbb2:	f000 8085 	beq.w	800bcc0 <HAL_SPI_Transmit+0x11c>
 800bbb6:	461d      	mov	r5, r3
 800bbb8:	2301      	movs	r3, #1
 800bbba:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bbbe:	4688      	mov	r8, r1
 800bbc0:	4617      	mov	r7, r2
 800bbc2:	f7fd f9e1 	bl	8008f88 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bbc6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bbca:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bbcc:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bbce:	b2d8      	uxtb	r0, r3
 800bbd0:	d009      	beq.n	800bbe6 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bbd2:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bbd4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bbd6:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bbd8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bbdc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bbe0:	b002      	add	sp, #8
 800bbe2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bbe6:	f1b8 0f00 	cmp.w	r8, #0
 800bbea:	d0f3      	beq.n	800bbd4 <HAL_SPI_Transmit+0x30>
 800bbec:	2f00      	cmp	r7, #0
 800bbee:	d0f1      	beq.n	800bbd4 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbf0:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bbf2:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bbf4:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bbf8:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bbfa:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbfc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bc00:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bc04:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bc08:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bc0a:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bc0c:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bc0e:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bc10:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bc12:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bc14:	f000 8085 	beq.w	800bd22 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bc18:	6803      	ldr	r3, [r0, #0]
 800bc1a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bc1c:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bc1e:	d403      	bmi.n	800bc28 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bc20:	6803      	ldr	r3, [r0, #0]
 800bc22:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bc26:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bc28:	68e3      	ldr	r3, [r4, #12]
 800bc2a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bc2e:	d04b      	beq.n	800bcc8 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bc30:	6863      	ldr	r3, [r4, #4]
 800bc32:	2b00      	cmp	r3, #0
 800bc34:	f000 8097 	beq.w	800bd66 <HAL_SPI_Transmit+0x1c2>
 800bc38:	2f01      	cmp	r7, #1
 800bc3a:	f000 8094 	beq.w	800bd66 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bc3e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc40:	b29b      	uxth	r3, r3
 800bc42:	b1ab      	cbz	r3, 800bc70 <HAL_SPI_Transmit+0xcc>
 800bc44:	1c68      	adds	r0, r5, #1
 800bc46:	f040 8083 	bne.w	800bd50 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bc4a:	6823      	ldr	r3, [r4, #0]
 800bc4c:	689a      	ldr	r2, [r3, #8]
 800bc4e:	0791      	lsls	r1, r2, #30
 800bc50:	f140 8094 	bpl.w	800bd7c <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bc54:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bc56:	7812      	ldrb	r2, [r2, #0]
 800bc58:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bc5a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc5c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bc5e:	3901      	subs	r1, #1
 800bc60:	b289      	uxth	r1, r1
 800bc62:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bc64:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc66:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bc68:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc6a:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bc6c:	2900      	cmp	r1, #0
 800bc6e:	d1ec      	bne.n	800bc4a <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc70:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bc72:	4b5b      	ldr	r3, [pc, #364]	; (800bde0 <HAL_SPI_Transmit+0x23c>)
 800bc74:	4a5b      	ldr	r2, [pc, #364]	; (800bde4 <HAL_SPI_Transmit+0x240>)
 800bc76:	681b      	ldr	r3, [r3, #0]
 800bc78:	fba2 2303 	umull	r2, r3, r2, r3
 800bc7c:	0d5b      	lsrs	r3, r3, #21
 800bc7e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bc82:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc86:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bc8a:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc8c:	d107      	bne.n	800bc9e <HAL_SPI_Transmit+0xfa>
 800bc8e:	e098      	b.n	800bdc2 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bc90:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bc92:	6822      	ldr	r2, [r4, #0]
      count--;
 800bc94:	3b01      	subs	r3, #1
 800bc96:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bc98:	6893      	ldr	r3, [r2, #8]
 800bc9a:	061b      	lsls	r3, r3, #24
 800bc9c:	d502      	bpl.n	800bca4 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bc9e:	9b01      	ldr	r3, [sp, #4]
 800bca0:	2b00      	cmp	r3, #0
 800bca2:	d1f5      	bne.n	800bc90 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bca4:	68a3      	ldr	r3, [r4, #8]
 800bca6:	b933      	cbnz	r3, 800bcb6 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bca8:	6822      	ldr	r2, [r4, #0]
 800bcaa:	9300      	str	r3, [sp, #0]
 800bcac:	68d3      	ldr	r3, [r2, #12]
 800bcae:	9300      	str	r3, [sp, #0]
 800bcb0:	6893      	ldr	r3, [r2, #8]
 800bcb2:	9300      	str	r3, [sp, #0]
 800bcb4:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bcb6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bcb8:	3800      	subs	r0, #0
 800bcba:	bf18      	it	ne
 800bcbc:	2001      	movne	r0, #1
error:
 800bcbe:	e789      	b.n	800bbd4 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800bcc0:	2002      	movs	r0, #2
}
 800bcc2:	b002      	add	sp, #8
 800bcc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bcc8:	6861      	ldr	r1, [r4, #4]
 800bcca:	2900      	cmp	r1, #0
 800bccc:	d176      	bne.n	800bdbc <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bcce:	4643      	mov	r3, r8
 800bcd0:	f833 7b02 	ldrh.w	r7, [r3], #2
 800bcd4:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bcd6:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bcd8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcda:	3b01      	subs	r3, #1
 800bcdc:	b29b      	uxth	r3, r3
 800bcde:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bce0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bce2:	b29b      	uxth	r3, r3
 800bce4:	2b00      	cmp	r3, #0
 800bce6:	d0c4      	beq.n	800bc72 <HAL_SPI_Transmit+0xce>
 800bce8:	1c6b      	adds	r3, r5, #1
 800bcea:	d15e      	bne.n	800bdaa <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bcec:	6883      	ldr	r3, [r0, #8]
 800bcee:	079f      	lsls	r7, r3, #30
 800bcf0:	d50f      	bpl.n	800bd12 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bcf2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bcf4:	f832 3b02 	ldrh.w	r3, [r2], #2
 800bcf8:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800bcfa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bcfc:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bcfe:	3b01      	subs	r3, #1
 800bd00:	b29b      	uxth	r3, r3
 800bd02:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bd04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd06:	b29b      	uxth	r3, r3
 800bd08:	2b00      	cmp	r3, #0
 800bd0a:	d0b1      	beq.n	800bc70 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bd0c:	6883      	ldr	r3, [r0, #8]
 800bd0e:	079f      	lsls	r7, r3, #30
 800bd10:	d4ef      	bmi.n	800bcf2 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd12:	f7fd f939 	bl	8008f88 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bd16:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd18:	b29b      	uxth	r3, r3
 800bd1a:	2b00      	cmp	r3, #0
 800bd1c:	d0a8      	beq.n	800bc70 <HAL_SPI_Transmit+0xcc>
 800bd1e:	6820      	ldr	r0, [r4, #0]
 800bd20:	e7e4      	b.n	800bcec <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800bd22:	6803      	ldr	r3, [r0, #0]
 800bd24:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bd28:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800bd2a:	6803      	ldr	r3, [r0, #0]
 800bd2c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800bd30:	6003      	str	r3, [r0, #0]
 800bd32:	e771      	b.n	800bc18 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bd34:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bd36:	7812      	ldrb	r2, [r2, #0]
 800bd38:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bd3a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd3c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd3e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd40:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bd42:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd44:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd46:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bd48:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd4a:	b29b      	uxth	r3, r3
 800bd4c:	2b00      	cmp	r3, #0
 800bd4e:	d08f      	beq.n	800bc70 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bd50:	6823      	ldr	r3, [r4, #0]
 800bd52:	689a      	ldr	r2, [r3, #8]
 800bd54:	0792      	lsls	r2, r2, #30
 800bd56:	d4ed      	bmi.n	800bd34 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd58:	f7fd f916 	bl	8008f88 <HAL_GetTick>
 800bd5c:	1b80      	subs	r0, r0, r6
 800bd5e:	42a8      	cmp	r0, r5
 800bd60:	d3f2      	bcc.n	800bd48 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800bd62:	2003      	movs	r0, #3
 800bd64:	e736      	b.n	800bbd4 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bd66:	f898 3000 	ldrb.w	r3, [r8]
 800bd6a:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800bd6c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd6e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bd70:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd72:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bd74:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd76:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bd78:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bd7a:	e760      	b.n	800bc3e <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd7c:	f7fd f904 	bl	8008f88 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bd80:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd82:	b29b      	uxth	r3, r3
 800bd84:	2b00      	cmp	r3, #0
 800bd86:	f47f af60 	bne.w	800bc4a <HAL_SPI_Transmit+0xa6>
 800bd8a:	e771      	b.n	800bc70 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bd8c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bd8e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800bd92:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bd94:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bd96:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd98:	3b01      	subs	r3, #1
 800bd9a:	b29b      	uxth	r3, r3
 800bd9c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bd9e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bda0:	b29b      	uxth	r3, r3
 800bda2:	2b00      	cmp	r3, #0
 800bda4:	f43f af64 	beq.w	800bc70 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bda8:	6822      	ldr	r2, [r4, #0]
 800bdaa:	6893      	ldr	r3, [r2, #8]
 800bdac:	0799      	lsls	r1, r3, #30
 800bdae:	d4ed      	bmi.n	800bd8c <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bdb0:	f7fd f8ea 	bl	8008f88 <HAL_GetTick>
 800bdb4:	1b80      	subs	r0, r0, r6
 800bdb6:	42a8      	cmp	r0, r5
 800bdb8:	d3f1      	bcc.n	800bd9e <HAL_SPI_Transmit+0x1fa>
 800bdba:	e7d2      	b.n	800bd62 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bdbc:	2f01      	cmp	r7, #1
 800bdbe:	d18f      	bne.n	800bce0 <HAL_SPI_Transmit+0x13c>
 800bdc0:	e785      	b.n	800bcce <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bdc2:	4633      	mov	r3, r6
 800bdc4:	462a      	mov	r2, r5
 800bdc6:	2180      	movs	r1, #128	; 0x80
 800bdc8:	4620      	mov	r0, r4
 800bdca:	f7ff fdef 	bl	800b9ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bdce:	2800      	cmp	r0, #0
 800bdd0:	f43f af68 	beq.w	800bca4 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bdd4:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bdd6:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bdd8:	4313      	orrs	r3, r2
 800bdda:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bddc:	6562      	str	r2, [r4, #84]	; 0x54
 800bdde:	e761      	b.n	800bca4 <HAL_SPI_Transmit+0x100>
 800bde0:	20000078 	.word	0x20000078
 800bde4:	165e9f81 	.word	0x165e9f81

0800bde8 <HAL_SPI_TransmitReceive>:
{
 800bde8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdec:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bdee:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bdf2:	2801      	cmp	r0, #1
{
 800bdf4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bdf6:	f000 80ac 	beq.w	800bf52 <HAL_SPI_TransmitReceive+0x16a>
 800bdfa:	461e      	mov	r6, r3
 800bdfc:	2301      	movs	r3, #1
 800bdfe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800be02:	4690      	mov	r8, r2
 800be04:	460f      	mov	r7, r1
 800be06:	f7fd f8bf 	bl	8008f88 <HAL_GetTick>
 800be0a:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800be0c:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800be10:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800be12:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800be14:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800be16:	d011      	beq.n	800be3c <HAL_SPI_TransmitReceive+0x54>
 800be18:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800be1c:	d009      	beq.n	800be32 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800be1e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800be20:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800be22:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800be24:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800be28:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800be2c:	b002      	add	sp, #8
 800be2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800be32:	68a1      	ldr	r1, [r4, #8]
 800be34:	2900      	cmp	r1, #0
 800be36:	d1f2      	bne.n	800be1e <HAL_SPI_TransmitReceive+0x36>
 800be38:	2a04      	cmp	r2, #4
 800be3a:	d1f0      	bne.n	800be1e <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800be3c:	2f00      	cmp	r7, #0
 800be3e:	f000 808c 	beq.w	800bf5a <HAL_SPI_TransmitReceive+0x172>
 800be42:	f1b8 0f00 	cmp.w	r8, #0
 800be46:	f000 8088 	beq.w	800bf5a <HAL_SPI_TransmitReceive+0x172>
 800be4a:	2e00      	cmp	r6, #0
 800be4c:	f000 8085 	beq.w	800bf5a <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800be50:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800be54:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800be58:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800be5a:	bf1c      	itt	ne
 800be5c:	2205      	movne	r2, #5
 800be5e:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800be62:	2200      	movs	r2, #0
 800be64:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800be66:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be6a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800be6c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800be6e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be70:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800be72:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be74:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800be76:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800be78:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be7a:	d403      	bmi.n	800be84 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800be7c:	6811      	ldr	r1, [r2, #0]
 800be7e:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800be82:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800be84:	68e1      	ldr	r1, [r4, #12]
 800be86:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800be8a:	f000 809e 	beq.w	800bfca <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800be8e:	2b00      	cmp	r3, #0
 800be90:	f000 8091 	beq.w	800bfb6 <HAL_SPI_TransmitReceive+0x1ce>
 800be94:	2e01      	cmp	r6, #1
 800be96:	f000 808e 	beq.w	800bfb6 <HAL_SPI_TransmitReceive+0x1ce>
 800be9a:	9b08      	ldr	r3, [sp, #32]
 800be9c:	3301      	adds	r3, #1
        txallowed = 1U;
 800be9e:	f04f 0601 	mov.w	r6, #1
 800bea2:	d028      	beq.n	800bef6 <HAL_SPI_TransmitReceive+0x10e>
 800bea4:	e05b      	b.n	800bf5e <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bea6:	6821      	ldr	r1, [r4, #0]
 800bea8:	688b      	ldr	r3, [r1, #8]
 800beaa:	0798      	lsls	r0, r3, #30
 800beac:	d50f      	bpl.n	800bece <HAL_SPI_TransmitReceive+0xe6>
 800beae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800beb0:	b29b      	uxth	r3, r3
 800beb2:	b163      	cbz	r3, 800bece <HAL_SPI_TransmitReceive+0xe6>
 800beb4:	b15e      	cbz	r6, 800bece <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800beb6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800beb8:	781b      	ldrb	r3, [r3, #0]
 800beba:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800bebc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bebe:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bec0:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800bec2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800bec4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bec6:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800bec8:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800beca:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800becc:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bece:	688a      	ldr	r2, [r1, #8]
 800bed0:	f012 0201 	ands.w	r2, r2, #1
 800bed4:	d00d      	beq.n	800bef2 <HAL_SPI_TransmitReceive+0x10a>
 800bed6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bed8:	b29b      	uxth	r3, r3
 800beda:	b153      	cbz	r3, 800bef2 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800bedc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800bede:	68c9      	ldr	r1, [r1, #12]
 800bee0:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800bee2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800bee4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bee6:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800bee8:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800beea:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800beec:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800beee:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800bef0:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bef2:	f7fd f849 	bl	8008f88 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bef6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bef8:	b292      	uxth	r2, r2
 800befa:	2a00      	cmp	r2, #0
 800befc:	d1d3      	bne.n	800bea6 <HAL_SPI_TransmitReceive+0xbe>
 800befe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bf00:	b29b      	uxth	r3, r3
 800bf02:	2b00      	cmp	r3, #0
 800bf04:	d1cf      	bne.n	800bea6 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bf06:	4b79      	ldr	r3, [pc, #484]	; (800c0ec <HAL_SPI_TransmitReceive+0x304>)
 800bf08:	4a79      	ldr	r2, [pc, #484]	; (800c0f0 <HAL_SPI_TransmitReceive+0x308>)
 800bf0a:	681b      	ldr	r3, [r3, #0]
 800bf0c:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bf10:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bf12:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800bf16:	0d5b      	lsrs	r3, r3, #21
 800bf18:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bf1c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bf20:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bf22:	d107      	bne.n	800bf34 <HAL_SPI_TransmitReceive+0x14c>
 800bf24:	e0d2      	b.n	800c0cc <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800bf26:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bf28:	6822      	ldr	r2, [r4, #0]
      count--;
 800bf2a:	3b01      	subs	r3, #1
 800bf2c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bf2e:	6893      	ldr	r3, [r2, #8]
 800bf30:	061b      	lsls	r3, r3, #24
 800bf32:	d502      	bpl.n	800bf3a <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800bf34:	9b01      	ldr	r3, [sp, #4]
 800bf36:	2b00      	cmp	r3, #0
 800bf38:	d1f5      	bne.n	800bf26 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bf3a:	68a0      	ldr	r0, [r4, #8]
 800bf3c:	2800      	cmp	r0, #0
 800bf3e:	f040 8082 	bne.w	800c046 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bf42:	6823      	ldr	r3, [r4, #0]
 800bf44:	9000      	str	r0, [sp, #0]
 800bf46:	68da      	ldr	r2, [r3, #12]
 800bf48:	9200      	str	r2, [sp, #0]
 800bf4a:	689b      	ldr	r3, [r3, #8]
 800bf4c:	9300      	str	r3, [sp, #0]
 800bf4e:	9b00      	ldr	r3, [sp, #0]
 800bf50:	e766      	b.n	800be20 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800bf52:	2002      	movs	r0, #2
}
 800bf54:	b002      	add	sp, #8
 800bf56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800bf5a:	2001      	movs	r0, #1
 800bf5c:	e760      	b.n	800be20 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bf5e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf60:	b29b      	uxth	r3, r3
 800bf62:	b91b      	cbnz	r3, 800bf6c <HAL_SPI_TransmitReceive+0x184>
 800bf64:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bf66:	b29b      	uxth	r3, r3
 800bf68:	2b00      	cmp	r3, #0
 800bf6a:	d0cc      	beq.n	800bf06 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bf6c:	6822      	ldr	r2, [r4, #0]
 800bf6e:	6893      	ldr	r3, [r2, #8]
 800bf70:	0799      	lsls	r1, r3, #30
 800bf72:	d50f      	bpl.n	800bf94 <HAL_SPI_TransmitReceive+0x1ac>
 800bf74:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf76:	b29b      	uxth	r3, r3
 800bf78:	b163      	cbz	r3, 800bf94 <HAL_SPI_TransmitReceive+0x1ac>
 800bf7a:	b15e      	cbz	r6, 800bf94 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bf7c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bf7e:	781b      	ldrb	r3, [r3, #0]
 800bf80:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800bf82:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bf84:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bf86:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800bf88:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bf8a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800bf8c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf8e:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800bf90:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bf92:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf94:	6893      	ldr	r3, [r2, #8]
 800bf96:	f013 0301 	ands.w	r3, r3, #1
 800bf9a:	d004      	beq.n	800bfa6 <HAL_SPI_TransmitReceive+0x1be>
 800bf9c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bf9e:	b289      	uxth	r1, r1
 800bfa0:	2900      	cmp	r1, #0
 800bfa2:	f040 8087 	bne.w	800c0b4 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bfa6:	f7fc ffef 	bl	8008f88 <HAL_GetTick>
 800bfaa:	9b08      	ldr	r3, [sp, #32]
 800bfac:	1b40      	subs	r0, r0, r5
 800bfae:	4298      	cmp	r0, r3
 800bfb0:	d3d5      	bcc.n	800bf5e <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800bfb2:	2003      	movs	r0, #3
 800bfb4:	e734      	b.n	800be20 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bfb6:	783b      	ldrb	r3, [r7, #0]
 800bfb8:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800bfba:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bfbc:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bfbe:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bfc0:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bfc2:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bfc4:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bfc6:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bfc8:	e767      	b.n	800be9a <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bfca:	2b00      	cmp	r3, #0
 800bfcc:	d13d      	bne.n	800c04a <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bfce:	f837 3b02 	ldrh.w	r3, [r7], #2
 800bfd2:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800bfd4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bfd6:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bfd8:	3b01      	subs	r3, #1
 800bfda:	b29b      	uxth	r3, r3
 800bfdc:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bfde:	9b08      	ldr	r3, [sp, #32]
 800bfe0:	3301      	adds	r3, #1
{
 800bfe2:	f04f 0601 	mov.w	r6, #1
 800bfe6:	d025      	beq.n	800c034 <HAL_SPI_TransmitReceive+0x24c>
 800bfe8:	e032      	b.n	800c050 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bfea:	6823      	ldr	r3, [r4, #0]
 800bfec:	689a      	ldr	r2, [r3, #8]
 800bfee:	0792      	lsls	r2, r2, #30
 800bff0:	d50d      	bpl.n	800c00e <HAL_SPI_TransmitReceive+0x226>
 800bff2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bff4:	b292      	uxth	r2, r2
 800bff6:	b152      	cbz	r2, 800c00e <HAL_SPI_TransmitReceive+0x226>
 800bff8:	b14e      	cbz	r6, 800c00e <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bffa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bffc:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c000:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c002:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c004:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c006:	3a01      	subs	r2, #1
 800c008:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c00a:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c00c:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c00e:	689a      	ldr	r2, [r3, #8]
 800c010:	f012 0201 	ands.w	r2, r2, #1
 800c014:	d00c      	beq.n	800c030 <HAL_SPI_TransmitReceive+0x248>
 800c016:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c018:	b289      	uxth	r1, r1
 800c01a:	b149      	cbz	r1, 800c030 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c01c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c01e:	68db      	ldr	r3, [r3, #12]
 800c020:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c024:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c026:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c028:	3b01      	subs	r3, #1
 800c02a:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c02c:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c02e:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c030:	f7fc ffaa 	bl	8008f88 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c034:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c036:	b29b      	uxth	r3, r3
 800c038:	2b00      	cmp	r3, #0
 800c03a:	d1d6      	bne.n	800bfea <HAL_SPI_TransmitReceive+0x202>
 800c03c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c03e:	b29b      	uxth	r3, r3
 800c040:	2b00      	cmp	r3, #0
 800c042:	d1d2      	bne.n	800bfea <HAL_SPI_TransmitReceive+0x202>
 800c044:	e75f      	b.n	800bf06 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c046:	2000      	movs	r0, #0
 800c048:	e6ea      	b.n	800be20 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c04a:	2e01      	cmp	r6, #1
 800c04c:	d1c7      	bne.n	800bfde <HAL_SPI_TransmitReceive+0x1f6>
 800c04e:	e7be      	b.n	800bfce <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c050:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c052:	b29b      	uxth	r3, r3
 800c054:	b923      	cbnz	r3, 800c060 <HAL_SPI_TransmitReceive+0x278>
 800c056:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c058:	b29b      	uxth	r3, r3
 800c05a:	2b00      	cmp	r3, #0
 800c05c:	f43f af53 	beq.w	800bf06 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c060:	6822      	ldr	r2, [r4, #0]
 800c062:	6893      	ldr	r3, [r2, #8]
 800c064:	079f      	lsls	r7, r3, #30
 800c066:	d50d      	bpl.n	800c084 <HAL_SPI_TransmitReceive+0x29c>
 800c068:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c06a:	b29b      	uxth	r3, r3
 800c06c:	b153      	cbz	r3, 800c084 <HAL_SPI_TransmitReceive+0x29c>
 800c06e:	b14e      	cbz	r6, 800c084 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c070:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c072:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c076:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c078:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c07a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c07c:	3b01      	subs	r3, #1
 800c07e:	b29b      	uxth	r3, r3
 800c080:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c082:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c084:	6893      	ldr	r3, [r2, #8]
 800c086:	f013 0301 	ands.w	r3, r3, #1
 800c08a:	d00c      	beq.n	800c0a6 <HAL_SPI_TransmitReceive+0x2be>
 800c08c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c08e:	b289      	uxth	r1, r1
 800c090:	b149      	cbz	r1, 800c0a6 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c092:	68d1      	ldr	r1, [r2, #12]
 800c094:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c096:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c09a:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c09c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c09e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c0a0:	3b01      	subs	r3, #1
 800c0a2:	b29b      	uxth	r3, r3
 800c0a4:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c0a6:	f7fc ff6f 	bl	8008f88 <HAL_GetTick>
 800c0aa:	9b08      	ldr	r3, [sp, #32]
 800c0ac:	1b40      	subs	r0, r0, r5
 800c0ae:	4298      	cmp	r0, r3
 800c0b0:	d3ce      	bcc.n	800c050 <HAL_SPI_TransmitReceive+0x268>
 800c0b2:	e77e      	b.n	800bfb2 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c0b4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c0b6:	68d2      	ldr	r2, [r2, #12]
 800c0b8:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c0ba:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c0bc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c0be:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c0c0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c0c2:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c0c4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c0c6:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c0c8:	461e      	mov	r6, r3
 800c0ca:	e76c      	b.n	800bfa6 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c0cc:	9a08      	ldr	r2, [sp, #32]
 800c0ce:	462b      	mov	r3, r5
 800c0d0:	2180      	movs	r1, #128	; 0x80
 800c0d2:	4620      	mov	r0, r4
 800c0d4:	f7ff fc6a 	bl	800b9ac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c0d8:	2800      	cmp	r0, #0
 800c0da:	f43f af2e 	beq.w	800bf3a <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c0de:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c0e0:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c0e2:	4313      	orrs	r3, r2
 800c0e4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c0e6:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c0e8:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c0ea:	e699      	b.n	800be20 <HAL_SPI_TransmitReceive+0x38>
 800c0ec:	20000078 	.word	0x20000078
 800c0f0:	165e9f81 	.word	0x165e9f81

0800c0f4 <HAL_SPI_Receive>:
{
 800c0f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c0f8:	6846      	ldr	r6, [r0, #4]
 800c0fa:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c0fe:	b082      	sub	sp, #8
 800c100:	4604      	mov	r4, r0
 800c102:	4690      	mov	r8, r2
 800c104:	461d      	mov	r5, r3
 800c106:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c108:	d06e      	beq.n	800c1e8 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c10a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c10e:	2b01      	cmp	r3, #1
 800c110:	d076      	beq.n	800c200 <HAL_SPI_Receive+0x10c>
 800c112:	2301      	movs	r3, #1
 800c114:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c118:	f7fc ff36 	bl	8008f88 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c11c:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c120:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c124:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c126:	fa5f f08c 	uxtb.w	r0, ip
 800c12a:	d009      	beq.n	800c140 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c12c:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c12e:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c130:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c132:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c136:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c13a:	b002      	add	sp, #8
 800c13c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c140:	2f00      	cmp	r7, #0
 800c142:	d0f4      	beq.n	800c12e <HAL_SPI_Receive+0x3a>
 800c144:	f1b8 0f00 	cmp.w	r8, #0
 800c148:	d0f1      	beq.n	800c12e <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c14a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c14c:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c14e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c152:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c154:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c158:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c15c:	f04f 0104 	mov.w	r1, #4
 800c160:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c164:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c168:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c16a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c16c:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c16e:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c172:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c174:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c176:	d107      	bne.n	800c188 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c178:	6811      	ldr	r1, [r2, #0]
 800c17a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c17e:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c180:	6811      	ldr	r1, [r2, #0]
 800c182:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c186:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c188:	6811      	ldr	r1, [r2, #0]
 800c18a:	0648      	lsls	r0, r1, #25
 800c18c:	d403      	bmi.n	800c196 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c18e:	6811      	ldr	r1, [r2, #0]
 800c190:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c194:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c196:	68e1      	ldr	r1, [r4, #12]
 800c198:	2900      	cmp	r1, #0
 800c19a:	d054      	beq.n	800c246 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c19c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c19e:	b289      	uxth	r1, r1
 800c1a0:	b1a9      	cbz	r1, 800c1ce <HAL_SPI_Receive+0xda>
 800c1a2:	1c69      	adds	r1, r5, #1
 800c1a4:	d13e      	bne.n	800c224 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c1a6:	6893      	ldr	r3, [r2, #8]
 800c1a8:	07db      	lsls	r3, r3, #31
 800c1aa:	d544      	bpl.n	800c236 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c1ac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c1ae:	68d1      	ldr	r1, [r2, #12]
 800c1b0:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c1b4:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c1b8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1ba:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c1be:	fa1f fc8c 	uxth.w	ip, ip
 800c1c2:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c1c6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c1c8:	b29b      	uxth	r3, r3
 800c1ca:	2b00      	cmp	r3, #0
 800c1cc:	d1eb      	bne.n	800c1a6 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c1ce:	4632      	mov	r2, r6
 800c1d0:	4629      	mov	r1, r5
 800c1d2:	4620      	mov	r0, r4
 800c1d4:	f7ff fc48 	bl	800ba68 <SPI_EndRxTransaction>
 800c1d8:	b108      	cbz	r0, 800c1de <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c1da:	2320      	movs	r3, #32
 800c1dc:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c1de:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c1e0:	3800      	subs	r0, #0
 800c1e2:	bf18      	it	ne
 800c1e4:	2001      	movne	r0, #1
error :
 800c1e6:	e7a2      	b.n	800c12e <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c1e8:	6883      	ldr	r3, [r0, #8]
 800c1ea:	2b00      	cmp	r3, #0
 800c1ec:	d18d      	bne.n	800c10a <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c1ee:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c1f0:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c1f2:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c1f4:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c1f8:	460a      	mov	r2, r1
 800c1fa:	f7ff fdf5 	bl	800bde8 <HAL_SPI_TransmitReceive>
 800c1fe:	e79c      	b.n	800c13a <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c200:	2002      	movs	r0, #2
}
 800c202:	b002      	add	sp, #8
 800c204:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c208:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c20a:	68db      	ldr	r3, [r3, #12]
 800c20c:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c210:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c212:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c214:	3b01      	subs	r3, #1
 800c216:	b29b      	uxth	r3, r3
 800c218:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c21a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c21c:	b29b      	uxth	r3, r3
 800c21e:	2b00      	cmp	r3, #0
 800c220:	d0d5      	beq.n	800c1ce <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c222:	6823      	ldr	r3, [r4, #0]
 800c224:	689a      	ldr	r2, [r3, #8]
 800c226:	07d2      	lsls	r2, r2, #31
 800c228:	d4ee      	bmi.n	800c208 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c22a:	f7fc fead 	bl	8008f88 <HAL_GetTick>
 800c22e:	1b80      	subs	r0, r0, r6
 800c230:	42a8      	cmp	r0, r5
 800c232:	d243      	bcs.n	800c2bc <HAL_SPI_Receive+0x1c8>
 800c234:	e7f1      	b.n	800c21a <HAL_SPI_Receive+0x126>
 800c236:	f7fc fea7 	bl	8008f88 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c23a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c23c:	b29b      	uxth	r3, r3
 800c23e:	2b00      	cmp	r3, #0
 800c240:	d0c5      	beq.n	800c1ce <HAL_SPI_Receive+0xda>
 800c242:	6822      	ldr	r2, [r4, #0]
 800c244:	e7af      	b.n	800c1a6 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c246:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c248:	b292      	uxth	r2, r2
 800c24a:	2a00      	cmp	r2, #0
 800c24c:	d0bf      	beq.n	800c1ce <HAL_SPI_Receive+0xda>
 800c24e:	1c6f      	adds	r7, r5, #1
 800c250:	d013      	beq.n	800c27a <HAL_SPI_Receive+0x186>
 800c252:	e02b      	b.n	800c2ac <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c254:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c256:	7b1b      	ldrb	r3, [r3, #12]
 800c258:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c25a:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c25e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c260:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c264:	fa1f fc8c 	uxth.w	ip, ip
 800c268:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c26c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c26e:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c270:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c272:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c274:	2b00      	cmp	r3, #0
 800c276:	d0aa      	beq.n	800c1ce <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c278:	6823      	ldr	r3, [r4, #0]
 800c27a:	689a      	ldr	r2, [r3, #8]
 800c27c:	07d0      	lsls	r0, r2, #31
 800c27e:	d4e9      	bmi.n	800c254 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c280:	f7fc fe82 	bl	8008f88 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c284:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c286:	b29b      	uxth	r3, r3
 800c288:	2b00      	cmp	r3, #0
 800c28a:	d1f5      	bne.n	800c278 <HAL_SPI_Receive+0x184>
 800c28c:	e79f      	b.n	800c1ce <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c28e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c290:	7b1b      	ldrb	r3, [r3, #12]
 800c292:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c294:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c296:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c298:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c29a:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c29c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c29e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c2a0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c2a2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c2a4:	b29b      	uxth	r3, r3
 800c2a6:	2b00      	cmp	r3, #0
 800c2a8:	d091      	beq.n	800c1ce <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c2aa:	6823      	ldr	r3, [r4, #0]
 800c2ac:	689a      	ldr	r2, [r3, #8]
 800c2ae:	07d1      	lsls	r1, r2, #31
 800c2b0:	d4ed      	bmi.n	800c28e <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c2b2:	f7fc fe69 	bl	8008f88 <HAL_GetTick>
 800c2b6:	1b80      	subs	r0, r0, r6
 800c2b8:	42a8      	cmp	r0, r5
 800c2ba:	d3f2      	bcc.n	800c2a2 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c2bc:	2003      	movs	r0, #3
 800c2be:	e736      	b.n	800c12e <HAL_SPI_Receive+0x3a>

0800c2c0 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c2c0:	2800      	cmp	r0, #0
 800c2c2:	f000 8087 	beq.w	800c3d4 <HAL_TIM_Base_Init+0x114>
{
 800c2c6:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c2c8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c2cc:	4604      	mov	r4, r0
 800c2ce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c2d2:	2b00      	cmp	r3, #0
 800c2d4:	d079      	beq.n	800c3ca <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c2d6:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c2d8:	493f      	ldr	r1, [pc, #252]	; (800c3d8 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c2da:	2302      	movs	r3, #2
 800c2dc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c2e0:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c2e2:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c2e4:	d05d      	beq.n	800c3a2 <HAL_TIM_Base_Init+0xe2>
 800c2e6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c2ea:	d031      	beq.n	800c350 <HAL_TIM_Base_Init+0x90>
 800c2ec:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c2f0:	428a      	cmp	r2, r1
 800c2f2:	d02d      	beq.n	800c350 <HAL_TIM_Base_Init+0x90>
 800c2f4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c2f8:	428a      	cmp	r2, r1
 800c2fa:	d029      	beq.n	800c350 <HAL_TIM_Base_Init+0x90>
 800c2fc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c300:	428a      	cmp	r2, r1
 800c302:	d025      	beq.n	800c350 <HAL_TIM_Base_Init+0x90>
 800c304:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c308:	428a      	cmp	r2, r1
 800c30a:	d04a      	beq.n	800c3a2 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c30c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c310:	428a      	cmp	r2, r1
 800c312:	d021      	beq.n	800c358 <HAL_TIM_Base_Init+0x98>
 800c314:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c318:	428a      	cmp	r2, r1
 800c31a:	d01d      	beq.n	800c358 <HAL_TIM_Base_Init+0x98>
 800c31c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c320:	428a      	cmp	r2, r1
 800c322:	d019      	beq.n	800c358 <HAL_TIM_Base_Init+0x98>
 800c324:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c328:	428a      	cmp	r2, r1
 800c32a:	d015      	beq.n	800c358 <HAL_TIM_Base_Init+0x98>
 800c32c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c330:	428a      	cmp	r2, r1
 800c332:	d011      	beq.n	800c358 <HAL_TIM_Base_Init+0x98>
 800c334:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c338:	428a      	cmp	r2, r1
 800c33a:	d00d      	beq.n	800c358 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c33c:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c33e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c340:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c344:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c346:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c348:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c34a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c34c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c34e:	e010      	b.n	800c372 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c350:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c352:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c356:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c358:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c35a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c35c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c360:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c362:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c366:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c368:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c36a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c36c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c36e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c370:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c372:	2301      	movs	r3, #1
 800c374:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c376:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c37a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c37e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c382:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c386:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c38a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c38e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c392:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c396:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c39a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c39e:	2000      	movs	r0, #0
}
 800c3a0:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c3a2:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c3a4:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c3a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c3aa:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c3ac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c3b0:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c3b2:	69a1      	ldr	r1, [r4, #24]
 800c3b4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c3b8:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c3ba:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c3bc:	68e3      	ldr	r3, [r4, #12]
 800c3be:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c3c0:	6863      	ldr	r3, [r4, #4]
 800c3c2:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c3c4:	6963      	ldr	r3, [r4, #20]
 800c3c6:	6313      	str	r3, [r2, #48]	; 0x30
 800c3c8:	e7d3      	b.n	800c372 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c3ca:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c3ce:	f7f5 fea7 	bl	8002120 <HAL_TIM_Base_MspInit>
 800c3d2:	e780      	b.n	800c2d6 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c3d4:	2001      	movs	r0, #1
}
 800c3d6:	4770      	bx	lr
 800c3d8:	40010000 	.word	0x40010000

0800c3dc <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c3dc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c3e0:	2b01      	cmp	r3, #1
 800c3e2:	d12f      	bne.n	800c444 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c3e4:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3e6:	4919      	ldr	r1, [pc, #100]	; (800c44c <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c3e8:	2202      	movs	r2, #2
 800c3ea:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c3ee:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3f0:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c3f2:	f042 0201 	orr.w	r2, r2, #1
 800c3f6:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3f8:	d019      	beq.n	800c42e <HAL_TIM_Base_Start_IT+0x52>
 800c3fa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c3fe:	d016      	beq.n	800c42e <HAL_TIM_Base_Start_IT+0x52>
 800c400:	4a13      	ldr	r2, [pc, #76]	; (800c450 <HAL_TIM_Base_Start_IT+0x74>)
 800c402:	4293      	cmp	r3, r2
 800c404:	d013      	beq.n	800c42e <HAL_TIM_Base_Start_IT+0x52>
 800c406:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c40a:	4293      	cmp	r3, r2
 800c40c:	d00f      	beq.n	800c42e <HAL_TIM_Base_Start_IT+0x52>
 800c40e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c412:	4293      	cmp	r3, r2
 800c414:	d00b      	beq.n	800c42e <HAL_TIM_Base_Start_IT+0x52>
 800c416:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c41a:	4293      	cmp	r3, r2
 800c41c:	d007      	beq.n	800c42e <HAL_TIM_Base_Start_IT+0x52>
 800c41e:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c422:	4293      	cmp	r3, r2
 800c424:	d003      	beq.n	800c42e <HAL_TIM_Base_Start_IT+0x52>
 800c426:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c42a:	4293      	cmp	r3, r2
 800c42c:	d104      	bne.n	800c438 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c42e:	689a      	ldr	r2, [r3, #8]
 800c430:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c434:	2a06      	cmp	r2, #6
 800c436:	d007      	beq.n	800c448 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c438:	681a      	ldr	r2, [r3, #0]
 800c43a:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c43e:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c440:	601a      	str	r2, [r3, #0]
 800c442:	4770      	bx	lr
    return HAL_ERROR;
 800c444:	2001      	movs	r0, #1
 800c446:	4770      	bx	lr
  return HAL_OK;
 800c448:	2000      	movs	r0, #0
}
 800c44a:	4770      	bx	lr
 800c44c:	40010000 	.word	0x40010000
 800c450:	40000400 	.word	0x40000400

0800c454 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c454:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c458:	2b01      	cmp	r3, #1
 800c45a:	d075      	beq.n	800c548 <HAL_TIM_ConfigClockSource+0xf4>
 800c45c:	4602      	mov	r2, r0
{
 800c45e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c460:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c462:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c464:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c468:	2001      	movs	r0, #1
 800c46a:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c46e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c470:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c474:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c478:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c47a:	680b      	ldr	r3, [r1, #0]
 800c47c:	2b60      	cmp	r3, #96	; 0x60
 800c47e:	d065      	beq.n	800c54c <HAL_TIM_ConfigClockSource+0xf8>
 800c480:	d824      	bhi.n	800c4cc <HAL_TIM_ConfigClockSource+0x78>
 800c482:	2b40      	cmp	r3, #64	; 0x40
 800c484:	d07c      	beq.n	800c580 <HAL_TIM_ConfigClockSource+0x12c>
 800c486:	d94b      	bls.n	800c520 <HAL_TIM_ConfigClockSource+0xcc>
 800c488:	2b50      	cmp	r3, #80	; 0x50
 800c48a:	d117      	bne.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c48c:	684b      	ldr	r3, [r1, #4]
 800c48e:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c490:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c492:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c496:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c498:	6a23      	ldr	r3, [r4, #32]
 800c49a:	f023 0301 	bic.w	r3, r3, #1
 800c49e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c4a0:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c4a2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c4a6:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c4aa:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c4ac:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c4ae:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c4b0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c4b4:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c4b8:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c4ba:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c4bc:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c4be:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c4c0:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c4c4:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c4c8:	bc30      	pop	{r4, r5}
 800c4ca:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c4cc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c4d0:	d038      	beq.n	800c544 <HAL_TIM_ConfigClockSource+0xf0>
 800c4d2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c4d6:	d110      	bne.n	800c4fa <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4d8:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c4dc:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4de:	432b      	orrs	r3, r5
 800c4e0:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c4e2:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4e6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c4ea:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c4ec:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c4ee:	68a3      	ldr	r3, [r4, #8]
 800c4f0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c4f4:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c4f6:	60a3      	str	r3, [r4, #8]
      break;
 800c4f8:	e7e0      	b.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c4fa:	2b70      	cmp	r3, #112	; 0x70
 800c4fc:	d1de      	bne.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4fe:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c502:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c504:	432b      	orrs	r3, r5
 800c506:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c508:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c50c:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c510:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c512:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c514:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c516:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c51a:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c51c:	60a3      	str	r3, [r4, #8]
      break;
 800c51e:	e7cd      	b.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c520:	2b20      	cmp	r3, #32
 800c522:	d002      	beq.n	800c52a <HAL_TIM_ConfigClockSource+0xd6>
 800c524:	d90a      	bls.n	800c53c <HAL_TIM_ConfigClockSource+0xe8>
 800c526:	2b30      	cmp	r3, #48	; 0x30
 800c528:	d1c8      	bne.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c52a:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c52c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c530:	430b      	orrs	r3, r1
 800c532:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c536:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c538:	60a3      	str	r3, [r4, #8]
}
 800c53a:	e7bf      	b.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c53c:	f033 0110 	bics.w	r1, r3, #16
 800c540:	d1bc      	bne.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
 800c542:	e7f2      	b.n	800c52a <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c544:	2000      	movs	r0, #0
 800c546:	e7b9      	b.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c548:	2002      	movs	r0, #2
}
 800c54a:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c54c:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c54e:	6848      	ldr	r0, [r1, #4]
 800c550:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c552:	f023 0310 	bic.w	r3, r3, #16
 800c556:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c558:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c55a:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c55c:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c560:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c564:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c568:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c56c:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c56e:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c570:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c572:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c576:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c57a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c57c:	60a3      	str	r3, [r4, #8]
}
 800c57e:	e79d      	b.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c580:	684b      	ldr	r3, [r1, #4]
 800c582:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c584:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c586:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c58a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c58c:	6a23      	ldr	r3, [r4, #32]
 800c58e:	f023 0301 	bic.w	r3, r3, #1
 800c592:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c594:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c596:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c59a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c59e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c5a0:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c5a2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c5a4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c5a8:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c5ac:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c5ae:	60a3      	str	r3, [r4, #8]
}
 800c5b0:	e784      	b.n	800c4bc <HAL_TIM_ConfigClockSource+0x68>
 800c5b2:	bf00      	nop

0800c5b4 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c5b4:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c5b8:	2a01      	cmp	r2, #1
 800c5ba:	d050      	beq.n	800c65e <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c5bc:	4603      	mov	r3, r0
{
 800c5be:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c5c0:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c5c2:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c5c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c5c8:	2001      	movs	r0, #1
 800c5ca:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c5ce:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c5d0:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c5d2:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c5d4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c5d8:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c5da:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c5de:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c5e0:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c5e2:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c5e4:	d060      	beq.n	800c6a8 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c5e6:	d90f      	bls.n	800c608 <HAL_TIM_SlaveConfigSynchro+0x54>
 800c5e8:	2860      	cmp	r0, #96	; 0x60
 800c5ea:	d03a      	beq.n	800c662 <HAL_TIM_SlaveConfigSynchro+0xae>
 800c5ec:	2870      	cmp	r0, #112	; 0x70
 800c5ee:	d10e      	bne.n	800c60e <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5f0:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c5f4:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5f6:	432a      	orrs	r2, r5
 800c5f8:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c5fa:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5fe:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c602:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c604:	60a2      	str	r2, [r4, #8]
 800c606:	e00f      	b.n	800c628 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c608:	2840      	cmp	r0, #64	; 0x40
 800c60a:	d03d      	beq.n	800c688 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c60c:	d907      	bls.n	800c61e <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c60e:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c610:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c612:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c616:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c61a:	bc30      	pop	{r4, r5}
 800c61c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c61e:	2820      	cmp	r0, #32
 800c620:	d002      	beq.n	800c628 <HAL_TIM_SlaveConfigSynchro+0x74>
 800c622:	d912      	bls.n	800c64a <HAL_TIM_SlaveConfigSynchro+0x96>
 800c624:	2830      	cmp	r0, #48	; 0x30
 800c626:	d1f2      	bne.n	800c60e <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800c628:	68e2      	ldr	r2, [r4, #12]
 800c62a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c62e:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c630:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800c632:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800c634:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c636:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800c63a:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800c63c:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c640:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800c644:	4608      	mov	r0, r1
}
 800c646:	bc30      	pop	{r4, r5}
 800c648:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c64a:	f030 0210 	bics.w	r2, r0, #16
 800c64e:	d0eb      	beq.n	800c628 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800c650:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c652:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c654:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c658:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800c65c:	e7dd      	b.n	800c61a <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800c65e:	2002      	movs	r0, #2
}
 800c660:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c662:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c664:	6888      	ldr	r0, [r1, #8]
 800c666:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c668:	f022 0210 	bic.w	r2, r2, #16
 800c66c:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c66e:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c670:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c672:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c676:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c67a:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800c67e:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800c682:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c684:	6222      	str	r2, [r4, #32]
 800c686:	e7cf      	b.n	800c628 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800c688:	2d05      	cmp	r5, #5
 800c68a:	d0c0      	beq.n	800c60e <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800c68c:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c68e:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c690:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c692:	f022 0201 	bic.w	r2, r2, #1
 800c696:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800c698:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c69a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c69e:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800c6a2:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800c6a4:	6220      	str	r0, [r4, #32]
      break;
 800c6a6:	e7bf      	b.n	800c628 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c6a8:	688a      	ldr	r2, [r1, #8]
 800c6aa:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800c6ac:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c6ae:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c6b2:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c6b4:	6a22      	ldr	r2, [r4, #32]
 800c6b6:	f022 0201 	bic.w	r2, r2, #1
 800c6ba:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c6bc:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c6be:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c6c2:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c6c6:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800c6c8:	6221      	str	r1, [r4, #32]
 800c6ca:	e7ad      	b.n	800c628 <HAL_TIM_SlaveConfigSynchro+0x74>

0800c6cc <HAL_TIM_OC_DelayElapsedCallback>:
 800c6cc:	4770      	bx	lr
 800c6ce:	bf00      	nop

0800c6d0 <HAL_TIM_IC_CaptureCallback>:
 800c6d0:	4770      	bx	lr
 800c6d2:	bf00      	nop

0800c6d4 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c6d4:	4770      	bx	lr
 800c6d6:	bf00      	nop

0800c6d8 <HAL_TIM_TriggerCallback>:
 800c6d8:	4770      	bx	lr
 800c6da:	bf00      	nop

0800c6dc <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c6dc:	6803      	ldr	r3, [r0, #0]
 800c6de:	691a      	ldr	r2, [r3, #16]
 800c6e0:	0791      	lsls	r1, r2, #30
{
 800c6e2:	b510      	push	{r4, lr}
 800c6e4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c6e6:	d502      	bpl.n	800c6ee <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c6e8:	68da      	ldr	r2, [r3, #12]
 800c6ea:	0792      	lsls	r2, r2, #30
 800c6ec:	d45f      	bmi.n	800c7ae <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c6ee:	691a      	ldr	r2, [r3, #16]
 800c6f0:	0750      	lsls	r0, r2, #29
 800c6f2:	d502      	bpl.n	800c6fa <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c6f4:	68da      	ldr	r2, [r3, #12]
 800c6f6:	0751      	lsls	r1, r2, #29
 800c6f8:	d446      	bmi.n	800c788 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c6fa:	691a      	ldr	r2, [r3, #16]
 800c6fc:	0712      	lsls	r2, r2, #28
 800c6fe:	d502      	bpl.n	800c706 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c700:	68da      	ldr	r2, [r3, #12]
 800c702:	0710      	lsls	r0, r2, #28
 800c704:	d42e      	bmi.n	800c764 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c706:	691a      	ldr	r2, [r3, #16]
 800c708:	06d2      	lsls	r2, r2, #27
 800c70a:	d502      	bpl.n	800c712 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c70c:	68da      	ldr	r2, [r3, #12]
 800c70e:	06d0      	lsls	r0, r2, #27
 800c710:	d418      	bmi.n	800c744 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c712:	691a      	ldr	r2, [r3, #16]
 800c714:	07d1      	lsls	r1, r2, #31
 800c716:	d502      	bpl.n	800c71e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c718:	68da      	ldr	r2, [r3, #12]
 800c71a:	07d2      	lsls	r2, r2, #31
 800c71c:	d45d      	bmi.n	800c7da <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c71e:	691a      	ldr	r2, [r3, #16]
 800c720:	0610      	lsls	r0, r2, #24
 800c722:	d502      	bpl.n	800c72a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c724:	68da      	ldr	r2, [r3, #12]
 800c726:	0611      	lsls	r1, r2, #24
 800c728:	d45f      	bmi.n	800c7ea <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c72a:	691a      	ldr	r2, [r3, #16]
 800c72c:	0652      	lsls	r2, r2, #25
 800c72e:	d502      	bpl.n	800c736 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c730:	68da      	ldr	r2, [r3, #12]
 800c732:	0650      	lsls	r0, r2, #25
 800c734:	d461      	bmi.n	800c7fa <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c736:	691a      	ldr	r2, [r3, #16]
 800c738:	0691      	lsls	r1, r2, #26
 800c73a:	d502      	bpl.n	800c742 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c73c:	68da      	ldr	r2, [r3, #12]
 800c73e:	0692      	lsls	r2, r2, #26
 800c740:	d443      	bmi.n	800c7ca <HAL_TIM_IRQHandler+0xee>
}
 800c742:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c744:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c748:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c74a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c74c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c74e:	69db      	ldr	r3, [r3, #28]
 800c750:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c754:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c756:	d064      	beq.n	800c822 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c758:	f7ff ffba 	bl	800c6d0 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c75c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c75e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c760:	7722      	strb	r2, [r4, #28]
 800c762:	e7d6      	b.n	800c712 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c764:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c768:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c76a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c76c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c76e:	69db      	ldr	r3, [r3, #28]
 800c770:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c772:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c774:	d152      	bne.n	800c81c <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c776:	f7ff ffa9 	bl	800c6cc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c77a:	4620      	mov	r0, r4
 800c77c:	f7ff ffaa 	bl	800c6d4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c780:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c782:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c784:	7722      	strb	r2, [r4, #28]
 800c786:	e7be      	b.n	800c706 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c788:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c78c:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c78e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c790:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c792:	699b      	ldr	r3, [r3, #24]
 800c794:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c798:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c79a:	d13c      	bne.n	800c816 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c79c:	f7ff ff96 	bl	800c6cc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c7a0:	4620      	mov	r0, r4
 800c7a2:	f7ff ff97 	bl	800c6d4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c7a6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c7a8:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c7aa:	7722      	strb	r2, [r4, #28]
 800c7ac:	e7a5      	b.n	800c6fa <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c7ae:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c7b2:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c7b4:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c7b6:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c7b8:	699b      	ldr	r3, [r3, #24]
 800c7ba:	079b      	lsls	r3, r3, #30
 800c7bc:	d025      	beq.n	800c80a <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c7be:	f7ff ff87 	bl	800c6d0 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c7c2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c7c4:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c7c6:	7722      	strb	r2, [r4, #28]
 800c7c8:	e791      	b.n	800c6ee <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c7ca:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c7ce:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c7d0:	611a      	str	r2, [r3, #16]
}
 800c7d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c7d6:	f000 b86b 	b.w	800c8b0 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c7da:	f06f 0201 	mvn.w	r2, #1
 800c7de:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c7e0:	4620      	mov	r0, r4
 800c7e2:	f7f5 f94f 	bl	8001a84 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c7e6:	6823      	ldr	r3, [r4, #0]
 800c7e8:	e799      	b.n	800c71e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c7ea:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c7ee:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c7f0:	4620      	mov	r0, r4
 800c7f2:	f000 f85f 	bl	800c8b4 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c7f6:	6823      	ldr	r3, [r4, #0]
 800c7f8:	e797      	b.n	800c72a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c7fa:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c7fe:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c800:	4620      	mov	r0, r4
 800c802:	f7ff ff69 	bl	800c6d8 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c806:	6823      	ldr	r3, [r4, #0]
 800c808:	e795      	b.n	800c736 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c80a:	f7ff ff5f 	bl	800c6cc <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c80e:	4620      	mov	r0, r4
 800c810:	f7ff ff60 	bl	800c6d4 <HAL_TIM_PWM_PulseFinishedCallback>
 800c814:	e7d5      	b.n	800c7c2 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c816:	f7ff ff5b 	bl	800c6d0 <HAL_TIM_IC_CaptureCallback>
 800c81a:	e7c4      	b.n	800c7a6 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c81c:	f7ff ff58 	bl	800c6d0 <HAL_TIM_IC_CaptureCallback>
 800c820:	e7ae      	b.n	800c780 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c822:	f7ff ff53 	bl	800c6cc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c826:	4620      	mov	r0, r4
 800c828:	f7ff ff54 	bl	800c6d4 <HAL_TIM_PWM_PulseFinishedCallback>
 800c82c:	e796      	b.n	800c75c <HAL_TIM_IRQHandler+0x80>
 800c82e:	bf00      	nop

0800c830 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800c830:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c834:	2b01      	cmp	r3, #1
 800c836:	d037      	beq.n	800c8a8 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800c838:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c83a:	2202      	movs	r2, #2
{
 800c83c:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c83e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800c842:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c844:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800c846:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800c848:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c84c:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800c84e:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c850:	4a16      	ldr	r2, [pc, #88]	; (800c8ac <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800c852:	4293      	cmp	r3, r2
 800c854:	d01a      	beq.n	800c88c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c856:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c85a:	d017      	beq.n	800c88c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c85c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c860:	4293      	cmp	r3, r2
 800c862:	d013      	beq.n	800c88c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c864:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c868:	4293      	cmp	r3, r2
 800c86a:	d00f      	beq.n	800c88c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c86c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c870:	4293      	cmp	r3, r2
 800c872:	d00b      	beq.n	800c88c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c874:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c878:	4293      	cmp	r3, r2
 800c87a:	d007      	beq.n	800c88c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c87c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c880:	4293      	cmp	r3, r2
 800c882:	d003      	beq.n	800c88c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c884:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c888:	4293      	cmp	r3, r2
 800c88a:	d104      	bne.n	800c896 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c88c:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800c88e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c892:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800c894:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800c896:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c898:	2201      	movs	r2, #1
 800c89a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c89e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800c8a2:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800c8a4:	4618      	mov	r0, r3
}
 800c8a6:	4770      	bx	lr
  __HAL_LOCK(htim);
 800c8a8:	2002      	movs	r0, #2
}
 800c8aa:	4770      	bx	lr
 800c8ac:	40010000 	.word	0x40010000

0800c8b0 <HAL_TIMEx_CommutCallback>:
 800c8b0:	4770      	bx	lr
 800c8b2:	bf00      	nop

0800c8b4 <HAL_TIMEx_BreakCallback>:
 800c8b4:	4770      	bx	lr
 800c8b6:	bf00      	nop

0800c8b8 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c8b8:	680b      	ldr	r3, [r1, #0]
{
 800c8ba:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c8bc:	b9d3      	cbnz	r3, 800c8f4 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c8be:	6803      	ldr	r3, [r0, #0]
 800c8c0:	684c      	ldr	r4, [r1, #4]
 800c8c2:	688a      	ldr	r2, [r1, #8]
 800c8c4:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c8c8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c8cc:	4323      	orrs	r3, r4
 800c8ce:	4313      	orrs	r3, r2
 800c8d0:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800c8d4:	4323      	orrs	r3, r4
 800c8d6:	4313      	orrs	r3, r2
 800c8d8:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800c8dc:	4323      	orrs	r3, r4
 800c8de:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800c8e2:	4313      	orrs	r3, r2
 800c8e4:	432b      	orrs	r3, r5
 800c8e6:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c8e8:	4323      	orrs	r3, r4
 800c8ea:	4313      	orrs	r3, r2
 800c8ec:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800c8ee:	bc30      	pop	{r4, r5}
 800c8f0:	2000      	movs	r0, #0
 800c8f2:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c8f4:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800c8f8:	6803      	ldr	r3, [r0, #0]
 800c8fa:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800c8fe:	4323      	orrs	r3, r4
 800c900:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800c902:	4313      	orrs	r3, r2
 800c904:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c906:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c908:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c90a:	6843      	ldr	r3, [r0, #4]
 800c90c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c910:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c914:	4313      	orrs	r3, r2
 800c916:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c91a:	4323      	orrs	r3, r4
 800c91c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c920:	4313      	orrs	r3, r2
 800c922:	432b      	orrs	r3, r5
 800c924:	698a      	ldr	r2, [r1, #24]
 800c926:	4323      	orrs	r3, r4
 800c928:	4313      	orrs	r3, r2
 800c92a:	6043      	str	r3, [r0, #4]
}
 800c92c:	bc30      	pop	{r4, r5}
 800c92e:	2000      	movs	r0, #0
 800c930:	4770      	bx	lr
 800c932:	bf00      	nop

0800c934 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800c934:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c936:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800c938:	bb02      	cbnz	r2, 800c97c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c93a:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c93e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c942:	3c01      	subs	r4, #1
 800c944:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c948:	3a01      	subs	r2, #1
 800c94a:	4313      	orrs	r3, r2
 800c94c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c950:	3c01      	subs	r4, #1
 800c952:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c956:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c95a:	3a01      	subs	r2, #1
 800c95c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800c960:	698a      	ldr	r2, [r1, #24]
 800c962:	1e69      	subs	r1, r5, #1
 800c964:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c968:	1e61      	subs	r1, r4, #1
 800c96a:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800c96e:	3a01      	subs	r2, #1
 800c970:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c974:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800c976:	bc30      	pop	{r4, r5}
 800c978:	2000      	movs	r0, #0
 800c97a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c97c:	68cc      	ldr	r4, [r1, #12]
 800c97e:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c980:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c982:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800c986:	3c01      	subs	r4, #1
 800c988:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c98c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800c990:	3a01      	subs	r2, #1
 800c992:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800c996:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c998:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c99c:	68c3      	ldr	r3, [r0, #12]
 800c99e:	3c01      	subs	r4, #1
 800c9a0:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c9a4:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c9a8:	3a01      	subs	r2, #1
 800c9aa:	690c      	ldr	r4, [r1, #16]
 800c9ac:	4313      	orrs	r3, r2
 800c9ae:	698a      	ldr	r2, [r1, #24]
 800c9b0:	1e69      	subs	r1, r5, #1
 800c9b2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c9b6:	1e61      	subs	r1, r4, #1
 800c9b8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c9bc:	3a01      	subs	r2, #1
 800c9be:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c9c2:	60c3      	str	r3, [r0, #12]
}
 800c9c4:	bc30      	pop	{r4, r5}
 800c9c6:	2000      	movs	r0, #0
 800c9c8:	4770      	bx	lr
 800c9ca:	bf00      	nop

0800c9cc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800c9cc:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c9ce:	680b      	ldr	r3, [r1, #0]
{
 800c9d0:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c9d2:	684a      	ldr	r2, [r1, #4]
{
 800c9d4:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c9d6:	4313      	orrs	r3, r2
 800c9d8:	6900      	ldr	r0, [r0, #16]
 800c9da:	68ca      	ldr	r2, [r1, #12]
 800c9dc:	0d80      	lsrs	r0, r0, #22
 800c9de:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800c9e2:	688a      	ldr	r2, [r1, #8]
 800c9e4:	0580      	lsls	r0, r0, #22
 800c9e6:	4303      	orrs	r3, r0
 800c9e8:	3a01      	subs	r2, #1
 800c9ea:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800c9ee:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800c9f0:	f7fc faca 	bl	8008f88 <HAL_GetTick>
 800c9f4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c9f6:	1c6b      	adds	r3, r5, #1
 800c9f8:	d105      	bne.n	800ca06 <FMC_SDRAM_SendCommand+0x3a>
 800c9fa:	69a3      	ldr	r3, [r4, #24]
 800c9fc:	f013 0320 	ands.w	r3, r3, #32
 800ca00:	d1fb      	bne.n	800c9fa <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800ca02:	4618      	mov	r0, r3
}
 800ca04:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800ca06:	69a3      	ldr	r3, [r4, #24]
 800ca08:	f013 0320 	ands.w	r3, r3, #32
 800ca0c:	d0f9      	beq.n	800ca02 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800ca0e:	b125      	cbz	r5, 800ca1a <FMC_SDRAM_SendCommand+0x4e>
 800ca10:	f7fc faba 	bl	8008f88 <HAL_GetTick>
 800ca14:	1b80      	subs	r0, r0, r6
 800ca16:	42a8      	cmp	r0, r5
 800ca18:	d9ed      	bls.n	800c9f6 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800ca1a:	2003      	movs	r0, #3
}
 800ca1c:	bd70      	pop	{r4, r5, r6, pc}
 800ca1e:	bf00      	nop

0800ca20 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800ca20:	6943      	ldr	r3, [r0, #20]
 800ca22:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800ca26:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800ca28:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800ca2c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800ca30:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800ca32:	6151      	str	r1, [r2, #20]
}
 800ca34:	4770      	bx	lr
 800ca36:	bf00      	nop

0800ca38 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800ca38:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800ca3a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ca3e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800ca40:	f002 fb00 	bl	800f044 <xTaskGetSchedulerState>
 800ca44:	2801      	cmp	r0, #1
 800ca46:	d100      	bne.n	800ca4a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800ca48:	bd08      	pop	{r3, pc}
 800ca4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800ca4e:	f000 bc41 	b.w	800d2d4 <xPortSysTickHandler>
 800ca52:	bf00      	nop

0800ca54 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ca54:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800ca58:	b92b      	cbnz	r3, 800ca66 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800ca5a:	4b06      	ldr	r3, [pc, #24]	; (800ca74 <osKernelInitialize+0x20>)
 800ca5c:	6818      	ldr	r0, [r3, #0]
 800ca5e:	b928      	cbnz	r0, 800ca6c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800ca60:	2201      	movs	r2, #1
 800ca62:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800ca64:	4770      	bx	lr
    stat = osErrorISR;
 800ca66:	f06f 0005 	mvn.w	r0, #5
 800ca6a:	4770      	bx	lr
    } else {
      stat = osError;
 800ca6c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800ca70:	4770      	bx	lr
 800ca72:	bf00      	nop
 800ca74:	20002330 	.word	0x20002330

0800ca78 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800ca78:	b510      	push	{r4, lr}
 800ca7a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ca7e:	b974      	cbnz	r4, 800ca9e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800ca80:	4b08      	ldr	r3, [pc, #32]	; (800caa4 <osKernelStart+0x2c>)
 800ca82:	681a      	ldr	r2, [r3, #0]
 800ca84:	2a01      	cmp	r2, #1
 800ca86:	d107      	bne.n	800ca98 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ca88:	4907      	ldr	r1, [pc, #28]	; (800caa8 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800ca8a:	2202      	movs	r2, #2
 800ca8c:	77cc      	strb	r4, [r1, #31]
 800ca8e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800ca90:	f002 f8b2 	bl	800ebf8 <vTaskStartScheduler>
      stat = osOK;
 800ca94:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800ca96:	bd10      	pop	{r4, pc}
      stat = osError;
 800ca98:	f04f 30ff 	mov.w	r0, #4294967295
}
 800ca9c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ca9e:	f06f 0005 	mvn.w	r0, #5
}
 800caa2:	bd10      	pop	{r4, pc}
 800caa4:	20002330 	.word	0x20002330
 800caa8:	e000ed00 	.word	0xe000ed00

0800caac <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800caac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800caae:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cab0:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cab2:	4615      	mov	r5, r2
  hTask = NULL;
 800cab4:	9405      	str	r4, [sp, #20]
 800cab6:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800caba:	b9ea      	cbnz	r2, 800caf8 <osThreadNew+0x4c>
 800cabc:	b350      	cbz	r0, 800cb14 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cabe:	b1f5      	cbz	r5, 800cafe <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cac0:	69ab      	ldr	r3, [r5, #24]
 800cac2:	bb5b      	cbnz	r3, 800cb1c <osThreadNew+0x70>
 800cac4:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cac6:	686a      	ldr	r2, [r5, #4]
 800cac8:	07d2      	lsls	r2, r2, #31
 800caca:	d423      	bmi.n	800cb14 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cacc:	696e      	ldr	r6, [r5, #20]
 800cace:	b34e      	cbz	r6, 800cb24 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cad0:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cad4:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800cad6:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cad8:	b34c      	cbz	r4, 800cb2e <osThreadNew+0x82>
 800cada:	68ea      	ldr	r2, [r5, #12]
 800cadc:	2aab      	cmp	r2, #171	; 0xab
 800cade:	d919      	bls.n	800cb14 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cae0:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cae2:	b1bd      	cbz	r5, 800cb14 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cae4:	b1b6      	cbz	r6, 800cb14 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cae6:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800caea:	9300      	str	r3, [sp, #0]
 800caec:	4662      	mov	r2, ip
 800caee:	460b      	mov	r3, r1
 800caf0:	4639      	mov	r1, r7
 800caf2:	f001 ffbf 	bl	800ea74 <xTaskCreateStatic>
 800caf6:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800caf8:	4620      	mov	r0, r4
 800cafa:	b007      	add	sp, #28
 800cafc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cafe:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800cb00:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cb02:	ac05      	add	r4, sp, #20
 800cb04:	9300      	str	r3, [sp, #0]
 800cb06:	9401      	str	r4, [sp, #4]
 800cb08:	460b      	mov	r3, r1
 800cb0a:	4629      	mov	r1, r5
 800cb0c:	f001 ffec 	bl	800eae8 <xTaskCreate>
 800cb10:	2801      	cmp	r0, #1
 800cb12:	d00a      	beq.n	800cb2a <osThreadNew+0x7e>
        return (NULL);
 800cb14:	2400      	movs	r4, #0
}
 800cb16:	4620      	mov	r0, r4
 800cb18:	b007      	add	sp, #28
 800cb1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cb1c:	1e5c      	subs	r4, r3, #1
 800cb1e:	2c37      	cmp	r4, #55	; 0x37
 800cb20:	d9d1      	bls.n	800cac6 <osThreadNew+0x1a>
 800cb22:	e7f7      	b.n	800cb14 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800cb24:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800cb28:	e7d4      	b.n	800cad4 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800cb2a:	9c05      	ldr	r4, [sp, #20]
 800cb2c:	e7e4      	b.n	800caf8 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cb2e:	68ee      	ldr	r6, [r5, #12]
 800cb30:	2e00      	cmp	r6, #0
 800cb32:	d1e1      	bne.n	800caf8 <osThreadNew+0x4c>
 800cb34:	692d      	ldr	r5, [r5, #16]
 800cb36:	2d00      	cmp	r5, #0
 800cb38:	d1de      	bne.n	800caf8 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cb3a:	fa1f f28c 	uxth.w	r2, ip
 800cb3e:	463d      	mov	r5, r7
 800cb40:	e7df      	b.n	800cb02 <osThreadNew+0x56>
 800cb42:	bf00      	nop

0800cb44 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cb44:	b510      	push	{r4, lr}
 800cb46:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cb4a:	b92c      	cbnz	r4, 800cb58 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cb4c:	b900      	cbnz	r0, 800cb50 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800cb4e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800cb50:	f001 fffc 	bl	800eb4c <vTaskDelay>
    stat = osOK;
 800cb54:	4620      	mov	r0, r4
}
 800cb56:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cb58:	f06f 0005 	mvn.w	r0, #5
}
 800cb5c:	bd10      	pop	{r4, pc}
 800cb5e:	bf00      	nop

0800cb60 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cb60:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb62:	b083      	sub	sp, #12
 800cb64:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cb68:	b9fe      	cbnz	r6, 800cbaa <osSemaphoreNew+0x4a>
 800cb6a:	b1f0      	cbz	r0, 800cbaa <osSemaphoreNew+0x4a>
 800cb6c:	4288      	cmp	r0, r1
 800cb6e:	460f      	mov	r7, r1
 800cb70:	d31b      	bcc.n	800cbaa <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800cb72:	4615      	mov	r5, r2
 800cb74:	b192      	cbz	r2, 800cb9c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cb76:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cb7a:	b1d2      	cbz	r2, 800cbb2 <osSemaphoreNew+0x52>
 800cb7c:	2b4f      	cmp	r3, #79	; 0x4f
 800cb7e:	d914      	bls.n	800cbaa <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800cb80:	2801      	cmp	r0, #1
 800cb82:	d038      	beq.n	800cbf6 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cb84:	f000 fd8c 	bl	800d6a0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cb88:	4604      	mov	r4, r0
 800cb8a:	b170      	cbz	r0, 800cbaa <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cb8c:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800cb8e:	4620      	mov	r0, r4
 800cb90:	4629      	mov	r1, r5
 800cb92:	f001 fc37 	bl	800e404 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cb96:	4620      	mov	r0, r4
 800cb98:	b003      	add	sp, #12
 800cb9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800cb9c:	2801      	cmp	r0, #1
 800cb9e:	d012      	beq.n	800cbc6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cba0:	f000 fdde 	bl	800d760 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cba4:	4604      	mov	r4, r0
 800cba6:	2800      	cmp	r0, #0
 800cba8:	d1f1      	bne.n	800cb8e <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800cbaa:	2400      	movs	r4, #0
}
 800cbac:	4620      	mov	r0, r4
 800cbae:	b003      	add	sp, #12
 800cbb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cbb2:	2b00      	cmp	r3, #0
 800cbb4:	d1f9      	bne.n	800cbaa <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800cbb6:	2801      	cmp	r0, #1
 800cbb8:	d005      	beq.n	800cbc6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cbba:	f000 fdd1 	bl	800d760 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cbbe:	4604      	mov	r4, r0
 800cbc0:	2800      	cmp	r0, #0
 800cbc2:	d1e3      	bne.n	800cb8c <osSemaphoreNew+0x2c>
 800cbc4:	e7f1      	b.n	800cbaa <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800cbc6:	2203      	movs	r2, #3
 800cbc8:	2100      	movs	r1, #0
 800cbca:	2001      	movs	r0, #1
 800cbcc:	f000 fd26 	bl	800d61c <xQueueGenericCreate>
 800cbd0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cbd2:	2c00      	cmp	r4, #0
 800cbd4:	d0e9      	beq.n	800cbaa <osSemaphoreNew+0x4a>
 800cbd6:	b917      	cbnz	r7, 800cbde <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800cbd8:	2d00      	cmp	r5, #0
 800cbda:	d1d7      	bne.n	800cb8c <osSemaphoreNew+0x2c>
 800cbdc:	e7d7      	b.n	800cb8e <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cbde:	2300      	movs	r3, #0
 800cbe0:	461a      	mov	r2, r3
 800cbe2:	4619      	mov	r1, r3
 800cbe4:	4620      	mov	r0, r4
 800cbe6:	f000 fe01 	bl	800d7ec <xQueueGenericSend>
 800cbea:	2801      	cmp	r0, #1
 800cbec:	d0f4      	beq.n	800cbd8 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800cbee:	4620      	mov	r0, r4
 800cbf0:	f001 fbc2 	bl	800e378 <vQueueDelete>
 800cbf4:	e7d9      	b.n	800cbaa <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cbf6:	4613      	mov	r3, r2
 800cbf8:	2203      	movs	r2, #3
 800cbfa:	9200      	str	r2, [sp, #0]
 800cbfc:	4631      	mov	r1, r6
 800cbfe:	4632      	mov	r2, r6
 800cc00:	f000 fc9e 	bl	800d540 <xQueueGenericCreateStatic>
 800cc04:	4604      	mov	r4, r0
 800cc06:	e7e4      	b.n	800cbd2 <osSemaphoreNew+0x72>

0800cc08 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cc08:	b370      	cbz	r0, 800cc68 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800cc0a:	b510      	push	{r4, lr}
 800cc0c:	460c      	mov	r4, r1
 800cc0e:	b082      	sub	sp, #8
 800cc10:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cc14:	b1c3      	cbz	r3, 800cc48 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800cc16:	bb21      	cbnz	r1, 800cc62 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cc18:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cc1a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cc1c:	f001 fb2a 	bl	800e274 <xQueueReceiveFromISR>
 800cc20:	2801      	cmp	r0, #1
 800cc22:	d11a      	bne.n	800cc5a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cc24:	9b01      	ldr	r3, [sp, #4]
 800cc26:	b913      	cbnz	r3, 800cc2e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800cc28:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cc2a:	b002      	add	sp, #8
 800cc2c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800cc2e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc32:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cc36:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cc3a:	f3bf 8f4f 	dsb	sy
 800cc3e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cc42:	4620      	mov	r0, r4
}
 800cc44:	b002      	add	sp, #8
 800cc46:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800cc48:	f001 f98a 	bl	800df60 <xQueueSemaphoreTake>
 800cc4c:	2801      	cmp	r0, #1
 800cc4e:	d0eb      	beq.n	800cc28 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800cc50:	b11c      	cbz	r4, 800cc5a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800cc52:	f06f 0001 	mvn.w	r0, #1
}
 800cc56:	b002      	add	sp, #8
 800cc58:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800cc5a:	f06f 0002 	mvn.w	r0, #2
}
 800cc5e:	b002      	add	sp, #8
 800cc60:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800cc62:	f06f 0003 	mvn.w	r0, #3
 800cc66:	e7e0      	b.n	800cc2a <osSemaphoreAcquire+0x22>
 800cc68:	f06f 0003 	mvn.w	r0, #3
}
 800cc6c:	4770      	bx	lr
 800cc6e:	bf00      	nop

0800cc70 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cc70:	b330      	cbz	r0, 800ccc0 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cc72:	b510      	push	{r4, lr}
 800cc74:	b082      	sub	sp, #8
 800cc76:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cc7a:	b1ab      	cbz	r3, 800cca8 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800cc7c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cc7e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800cc80:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cc82:	f000 ff97 	bl	800dbb4 <xQueueGiveFromISR>
 800cc86:	2801      	cmp	r0, #1
 800cc88:	d117      	bne.n	800ccba <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cc8a:	9b01      	ldr	r3, [sp, #4]
 800cc8c:	b193      	cbz	r3, 800ccb4 <osSemaphoreRelease+0x44>
 800cc8e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc92:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cc96:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cc9a:	f3bf 8f4f 	dsb	sy
 800cc9e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cca2:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cca4:	b002      	add	sp, #8
 800cca6:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cca8:	461a      	mov	r2, r3
 800ccaa:	4619      	mov	r1, r3
 800ccac:	f000 fd9e 	bl	800d7ec <xQueueGenericSend>
 800ccb0:	2801      	cmp	r0, #1
 800ccb2:	d102      	bne.n	800ccba <osSemaphoreRelease+0x4a>
  stat = osOK;
 800ccb4:	2000      	movs	r0, #0
}
 800ccb6:	b002      	add	sp, #8
 800ccb8:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800ccba:	f06f 0002 	mvn.w	r0, #2
 800ccbe:	e7fa      	b.n	800ccb6 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800ccc0:	f06f 0003 	mvn.w	r0, #3
}
 800ccc4:	4770      	bx	lr
 800ccc6:	bf00      	nop

0800ccc8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800ccc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ccca:	b085      	sub	sp, #20
 800cccc:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800ccd0:	b987      	cbnz	r7, 800ccf4 <osMessageQueueNew+0x2c>
 800ccd2:	4605      	mov	r5, r0
 800ccd4:	b170      	cbz	r0, 800ccf4 <osMessageQueueNew+0x2c>
 800ccd6:	b169      	cbz	r1, 800ccf4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800ccd8:	4614      	mov	r4, r2
 800ccda:	b1ea      	cbz	r2, 800cd18 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ccdc:	6893      	ldr	r3, [r2, #8]
 800ccde:	b163      	cbz	r3, 800ccfa <osMessageQueueNew+0x32>
 800cce0:	68d2      	ldr	r2, [r2, #12]
 800cce2:	2a4f      	cmp	r2, #79	; 0x4f
 800cce4:	d906      	bls.n	800ccf4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cce6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cce8:	b122      	cbz	r2, 800ccf4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ccea:	6966      	ldr	r6, [r4, #20]
 800ccec:	fb01 f505 	mul.w	r5, r1, r5
 800ccf0:	42ae      	cmp	r6, r5
 800ccf2:	d21c      	bcs.n	800cd2e <osMessageQueueNew+0x66>
  hQueue = NULL;
 800ccf4:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ccf6:	b005      	add	sp, #20
 800ccf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800ccfa:	68d3      	ldr	r3, [r2, #12]
 800ccfc:	2b00      	cmp	r3, #0
 800ccfe:	d1f9      	bne.n	800ccf4 <osMessageQueueNew+0x2c>
 800cd00:	6913      	ldr	r3, [r2, #16]
 800cd02:	2b00      	cmp	r3, #0
 800cd04:	d1f6      	bne.n	800ccf4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800cd06:	6952      	ldr	r2, [r2, #20]
 800cd08:	2a00      	cmp	r2, #0
 800cd0a:	d1f3      	bne.n	800ccf4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cd0c:	f000 fc86 	bl	800d61c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cd10:	2800      	cmp	r0, #0
 800cd12:	d0ef      	beq.n	800ccf4 <osMessageQueueNew+0x2c>
        name = attr->name;
 800cd14:	6824      	ldr	r4, [r4, #0]
 800cd16:	e003      	b.n	800cd20 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cd18:	f000 fc80 	bl	800d61c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cd1c:	2800      	cmp	r0, #0
 800cd1e:	d0e9      	beq.n	800ccf4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800cd20:	4621      	mov	r1, r4
 800cd22:	9003      	str	r0, [sp, #12]
 800cd24:	f001 fb6e 	bl	800e404 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800cd28:	9803      	ldr	r0, [sp, #12]
}
 800cd2a:	b005      	add	sp, #20
 800cd2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800cd2e:	9700      	str	r7, [sp, #0]
 800cd30:	f000 fc06 	bl	800d540 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800cd34:	2800      	cmp	r0, #0
 800cd36:	d1ed      	bne.n	800cd14 <osMessageQueueNew+0x4c>
 800cd38:	e7dc      	b.n	800ccf4 <osMessageQueueNew+0x2c>
 800cd3a:	bf00      	nop

0800cd3c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800cd3c:	b570      	push	{r4, r5, r6, lr}
 800cd3e:	461c      	mov	r4, r3
 800cd40:	b082      	sub	sp, #8
 800cd42:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cd46:	b1be      	cbz	r6, 800cd78 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cd48:	b350      	cbz	r0, 800cda0 <osMessageQueuePut+0x64>
 800cd4a:	b349      	cbz	r1, 800cda0 <osMessageQueuePut+0x64>
 800cd4c:	bb43      	cbnz	r3, 800cda0 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cd4e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cd50:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cd52:	f000 fec9 	bl	800dae8 <xQueueGenericSendFromISR>
 800cd56:	2801      	cmp	r0, #1
 800cd58:	d11e      	bne.n	800cd98 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cd5a:	9b01      	ldr	r3, [sp, #4]
 800cd5c:	b1cb      	cbz	r3, 800cd92 <osMessageQueuePut+0x56>
 800cd5e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd62:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd66:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd6a:	f3bf 8f4f 	dsb	sy
 800cd6e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cd72:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cd74:	b002      	add	sp, #8
 800cd76:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cd78:	b190      	cbz	r0, 800cda0 <osMessageQueuePut+0x64>
 800cd7a:	b189      	cbz	r1, 800cda0 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cd7c:	4633      	mov	r3, r6
 800cd7e:	4622      	mov	r2, r4
 800cd80:	f000 fd34 	bl	800d7ec <xQueueGenericSend>
 800cd84:	2801      	cmp	r0, #1
 800cd86:	d004      	beq.n	800cd92 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800cd88:	b134      	cbz	r4, 800cd98 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800cd8a:	f06f 0001 	mvn.w	r0, #1
}
 800cd8e:	b002      	add	sp, #8
 800cd90:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800cd92:	2000      	movs	r0, #0
}
 800cd94:	b002      	add	sp, #8
 800cd96:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800cd98:	f06f 0002 	mvn.w	r0, #2
}
 800cd9c:	b002      	add	sp, #8
 800cd9e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800cda0:	f06f 0003 	mvn.w	r0, #3
 800cda4:	e7e6      	b.n	800cd74 <osMessageQueuePut+0x38>
 800cda6:	bf00      	nop

0800cda8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800cda8:	b530      	push	{r4, r5, lr}
 800cdaa:	461c      	mov	r4, r3
 800cdac:	b083      	sub	sp, #12
 800cdae:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cdb2:	b1bb      	cbz	r3, 800cde4 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cdb4:	b348      	cbz	r0, 800ce0a <osMessageQueueGet+0x62>
 800cdb6:	b341      	cbz	r1, 800ce0a <osMessageQueueGet+0x62>
 800cdb8:	bb3c      	cbnz	r4, 800ce0a <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cdba:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cdbc:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cdbe:	f001 fa59 	bl	800e274 <xQueueReceiveFromISR>
 800cdc2:	2801      	cmp	r0, #1
 800cdc4:	d11d      	bne.n	800ce02 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cdc6:	9b01      	ldr	r3, [sp, #4]
 800cdc8:	b1c3      	cbz	r3, 800cdfc <osMessageQueueGet+0x54>
 800cdca:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cdce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cdd2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cdd6:	f3bf 8f4f 	dsb	sy
 800cdda:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cdde:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cde0:	b003      	add	sp, #12
 800cde2:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cde4:	b188      	cbz	r0, 800ce0a <osMessageQueueGet+0x62>
 800cde6:	b181      	cbz	r1, 800ce0a <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cde8:	4622      	mov	r2, r4
 800cdea:	f000 ff3b 	bl	800dc64 <xQueueReceive>
 800cdee:	2801      	cmp	r0, #1
 800cdf0:	d004      	beq.n	800cdfc <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800cdf2:	b134      	cbz	r4, 800ce02 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800cdf4:	f06f 0001 	mvn.w	r0, #1
}
 800cdf8:	b003      	add	sp, #12
 800cdfa:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800cdfc:	2000      	movs	r0, #0
}
 800cdfe:	b003      	add	sp, #12
 800ce00:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800ce02:	f06f 0002 	mvn.w	r0, #2
}
 800ce06:	b003      	add	sp, #12
 800ce08:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800ce0a:	f06f 0003 	mvn.w	r0, #3
 800ce0e:	e7e7      	b.n	800cde0 <osMessageQueueGet+0x38>

0800ce10 <osMessageQueueGetCount>:
 800ce10:	b130      	cbz	r0, 800ce20 <osMessageQueueGetCount+0x10>
 800ce12:	f3ef 8305 	mrs	r3, IPSR
 800ce16:	b10b      	cbz	r3, 800ce1c <osMessageQueueGetCount+0xc>
 800ce18:	f001 baa0 	b.w	800e35c <uxQueueMessagesWaitingFromISR>
 800ce1c:	f001 ba88 	b.w	800e330 <uxQueueMessagesWaiting>
 800ce20:	4770      	bx	lr
 800ce22:	bf00      	nop

0800ce24 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800ce24:	4b04      	ldr	r3, [pc, #16]	; (800ce38 <vApplicationGetIdleTaskMemory+0x14>)
 800ce26:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800ce28:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800ce2a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800ce2c:	4c03      	ldr	r4, [pc, #12]	; (800ce3c <vApplicationGetIdleTaskMemory+0x18>)
 800ce2e:	600c      	str	r4, [r1, #0]
}
 800ce30:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800ce34:	6013      	str	r3, [r2, #0]
}
 800ce36:	4770      	bx	lr
 800ce38:	20002284 	.word	0x20002284
 800ce3c:	20002084 	.word	0x20002084

0800ce40 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800ce40:	4b05      	ldr	r3, [pc, #20]	; (800ce58 <vApplicationGetTimerTaskMemory+0x18>)
 800ce42:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800ce44:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800ce46:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800ce4a:	4c04      	ldr	r4, [pc, #16]	; (800ce5c <vApplicationGetTimerTaskMemory+0x1c>)
 800ce4c:	600c      	str	r4, [r1, #0]
}
 800ce4e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800ce52:	6013      	str	r3, [r2, #0]
}
 800ce54:	4770      	bx	lr
 800ce56:	bf00      	nop
 800ce58:	20002734 	.word	0x20002734
 800ce5c:	20002334 	.word	0x20002334

0800ce60 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800ce60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce64:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800ce66:	f001 ff43 	bl	800ecf0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800ce6a:	4a54      	ldr	r2, [pc, #336]	; (800cfbc <pvPortMalloc+0x15c>)
 800ce6c:	6816      	ldr	r6, [r2, #0]
 800ce6e:	2e00      	cmp	r6, #0
 800ce70:	d06e      	beq.n	800cf50 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800ce72:	4b53      	ldr	r3, [pc, #332]	; (800cfc0 <pvPortMalloc+0x160>)
 800ce74:	681f      	ldr	r7, [r3, #0]
 800ce76:	423d      	tst	r5, r7
 800ce78:	d12e      	bne.n	800ced8 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800ce7a:	b36d      	cbz	r5, 800ced8 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800ce7c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800ce80:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800ce82:	bf1c      	itt	ne
 800ce84:	f024 0407 	bicne.w	r4, r4, #7
 800ce88:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800ce8a:	b32c      	cbz	r4, 800ced8 <pvPortMalloc+0x78>
 800ce8c:	f8df c144 	ldr.w	ip, [pc, #324]	; 800cfd4 <pvPortMalloc+0x174>
 800ce90:	f8dc 5000 	ldr.w	r5, [ip]
 800ce94:	42a5      	cmp	r5, r4
 800ce96:	d31f      	bcc.n	800ced8 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800ce98:	484a      	ldr	r0, [pc, #296]	; (800cfc4 <pvPortMalloc+0x164>)
 800ce9a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800ce9c:	e003      	b.n	800cea6 <pvPortMalloc+0x46>
 800ce9e:	681a      	ldr	r2, [r3, #0]
 800cea0:	b122      	cbz	r2, 800ceac <pvPortMalloc+0x4c>
 800cea2:	4618      	mov	r0, r3
 800cea4:	4613      	mov	r3, r2
 800cea6:	6859      	ldr	r1, [r3, #4]
 800cea8:	42a1      	cmp	r1, r4
 800ceaa:	d3f8      	bcc.n	800ce9e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800ceac:	42b3      	cmp	r3, r6
 800ceae:	d013      	beq.n	800ced8 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800ceb0:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ceb2:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800ceb4:	f858 eb08 	ldr.w	lr, [r8], #8
 800ceb8:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cebc:	2a10      	cmp	r2, #16
 800cebe:	d929      	bls.n	800cf14 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800cec0:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800cec2:	0748      	lsls	r0, r1, #29
 800cec4:	d00f      	beq.n	800cee6 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800cec6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ceca:	f383 8811 	msr	BASEPRI, r3
 800cece:	f3bf 8f6f 	isb	sy
 800ced2:	f3bf 8f4f 	dsb	sy
 800ced6:	e7fe      	b.n	800ced6 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800ced8:	f001 ff12 	bl	800ed00 <xTaskResumeAll>
 800cedc:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800cee0:	4640      	mov	r0, r8
 800cee2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800cee6:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cee8:	4a36      	ldr	r2, [pc, #216]	; (800cfc4 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800ceea:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ceec:	4614      	mov	r4, r2
 800ceee:	6812      	ldr	r2, [r2, #0]
 800cef0:	4291      	cmp	r1, r2
 800cef2:	d8fb      	bhi.n	800ceec <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cef4:	6860      	ldr	r0, [r4, #4]
 800cef6:	eb04 0e00 	add.w	lr, r4, r0
 800cefa:	4571      	cmp	r1, lr
 800cefc:	d04b      	beq.n	800cf96 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cefe:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cf02:	eb01 000e 	add.w	r0, r1, lr
 800cf06:	4282      	cmp	r2, r0
 800cf08:	d051      	beq.n	800cfae <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800cf0a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cf0c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cf0e:	bf18      	it	ne
 800cf10:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cf12:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cf14:	4a2c      	ldr	r2, [pc, #176]	; (800cfc8 <pvPortMalloc+0x168>)
 800cf16:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cf18:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cf1a:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800cf1c:	bf38      	it	cc
 800cf1e:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800cf20:	4a2a      	ldr	r2, [pc, #168]	; (800cfcc <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cf22:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800cf26:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800cf28:	2000      	movs	r0, #0
 800cf2a:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800cf2e:	6813      	ldr	r3, [r2, #0]
 800cf30:	3301      	adds	r3, #1
 800cf32:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800cf34:	f001 fee4 	bl	800ed00 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800cf38:	f018 0f07 	tst.w	r8, #7
 800cf3c:	d0d0      	beq.n	800cee0 <pvPortMalloc+0x80>
 800cf3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf42:	f383 8811 	msr	BASEPRI, r3
 800cf46:	f3bf 8f6f 	isb	sy
 800cf4a:	f3bf 8f4f 	dsb	sy
 800cf4e:	e7fe      	b.n	800cf4e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800cf50:	4b1f      	ldr	r3, [pc, #124]	; (800cfd0 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800cf52:	075e      	lsls	r6, r3, #29
 800cf54:	d118      	bne.n	800cf88 <pvPortMalloc+0x128>
 800cf56:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800cf5a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800cf5c:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cf5e:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800cf62:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf64:	4a18      	ldr	r2, [pc, #96]	; (800cfc8 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cf66:	4817      	ldr	r0, [pc, #92]	; (800cfc4 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cf68:	4c15      	ldr	r4, [pc, #84]	; (800cfc0 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cf6a:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800cf6c:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf6e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf70:	4a18      	ldr	r2, [pc, #96]	; (800cfd4 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cf72:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf76:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800cf78:	2200      	movs	r2, #0
 800cf7a:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cf7c:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800cf7e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800cf82:	e9c1 6300 	strd	r6, r3, [r1]
}
 800cf86:	e776      	b.n	800ce76 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800cf88:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800cf8a:	f021 0107 	bic.w	r1, r1, #7
 800cf8e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cf92:	460b      	mov	r3, r1
 800cf94:	e7e2      	b.n	800cf5c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cf96:	6849      	ldr	r1, [r1, #4]
 800cf98:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cf9c:	eb04 010e 	add.w	r1, r4, lr
 800cfa0:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cfa2:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cfa6:	d001      	beq.n	800cfac <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cfa8:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800cfaa:	e7b2      	b.n	800cf12 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cfac:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cfae:	42b2      	cmp	r2, r6
 800cfb0:	d0ab      	beq.n	800cf0a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cfb2:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cfb4:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cfb6:	4470      	add	r0, lr
 800cfb8:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cfba:	e7a6      	b.n	800cf0a <pvPortMalloc+0xaa>
 800cfbc:	200027e0 	.word	0x200027e0
 800cfc0:	200127e4 	.word	0x200127e4
 800cfc4:	200127f8 	.word	0x200127f8
 800cfc8:	200127ec 	.word	0x200127ec
 800cfcc:	200127f0 	.word	0x200127f0
 800cfd0:	200027e4 	.word	0x200027e4
 800cfd4:	200127e8 	.word	0x200127e8

0800cfd8 <vPortFree>:
	if( pv != NULL )
 800cfd8:	b1d0      	cbz	r0, 800d010 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cfda:	4a2c      	ldr	r2, [pc, #176]	; (800d08c <vPortFree+0xb4>)
 800cfdc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800cfe0:	6812      	ldr	r2, [r2, #0]
 800cfe2:	4213      	tst	r3, r2
 800cfe4:	d00b      	beq.n	800cffe <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800cfe6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800cfea:	b191      	cbz	r1, 800d012 <vPortFree+0x3a>
 800cfec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cff0:	f383 8811 	msr	BASEPRI, r3
 800cff4:	f3bf 8f6f 	isb	sy
 800cff8:	f3bf 8f4f 	dsb	sy
 800cffc:	e7fe      	b.n	800cffc <vPortFree+0x24>
 800cffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d002:	f383 8811 	msr	BASEPRI, r3
 800d006:	f3bf 8f6f 	isb	sy
 800d00a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d00e:	e7fe      	b.n	800d00e <vPortFree+0x36>
 800d010:	4770      	bx	lr
{
 800d012:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d014:	ea23 0302 	bic.w	r3, r3, r2
{
 800d018:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d01a:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d01e:	4c1c      	ldr	r4, [pc, #112]	; (800d090 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d020:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d022:	f001 fe65 	bl	800ecf0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d026:	9801      	ldr	r0, [sp, #4]
 800d028:	6822      	ldr	r2, [r4, #0]
 800d02a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d02e:	4b19      	ldr	r3, [pc, #100]	; (800d094 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d030:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d032:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d034:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d036:	461a      	mov	r2, r3
 800d038:	681b      	ldr	r3, [r3, #0]
 800d03a:	4298      	cmp	r0, r3
 800d03c:	d8fb      	bhi.n	800d036 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d03e:	6854      	ldr	r4, [r2, #4]
 800d040:	eb02 0e04 	add.w	lr, r2, r4
 800d044:	4570      	cmp	r0, lr
 800d046:	d010      	beq.n	800d06a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d048:	eb00 0c01 	add.w	ip, r0, r1
 800d04c:	4563      	cmp	r3, ip
 800d04e:	d014      	beq.n	800d07a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d050:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d052:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d054:	bf18      	it	ne
 800d056:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d058:	4a0f      	ldr	r2, [pc, #60]	; (800d098 <vPortFree+0xc0>)
 800d05a:	6813      	ldr	r3, [r2, #0]
 800d05c:	3301      	adds	r3, #1
 800d05e:	6013      	str	r3, [r2, #0]
}
 800d060:	b002      	add	sp, #8
 800d062:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d066:	f001 be4b 	b.w	800ed00 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d06a:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d06c:	1850      	adds	r0, r2, r1
 800d06e:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d070:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d072:	d001      	beq.n	800d078 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d074:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d076:	e7ef      	b.n	800d058 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d078:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d07a:	4c08      	ldr	r4, [pc, #32]	; (800d09c <vPortFree+0xc4>)
 800d07c:	6824      	ldr	r4, [r4, #0]
 800d07e:	42a3      	cmp	r3, r4
 800d080:	d0e6      	beq.n	800d050 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d082:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d086:	4421      	add	r1, r4
 800d088:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d08a:	e7e1      	b.n	800d050 <vPortFree+0x78>
 800d08c:	200127e4 	.word	0x200127e4
 800d090:	200127e8 	.word	0x200127e8
 800d094:	200127f8 	.word	0x200127f8
 800d098:	200127f4 	.word	0x200127f4
 800d09c:	200027e0 	.word	0x200027e0

0800d0a0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d0a0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d0a4:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d0a8:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d0aa:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d0ae:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d0b2:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d0b4:	4770      	bx	lr
 800d0b6:	bf00      	nop

0800d0b8 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d0b8:	2300      	movs	r3, #0
 800d0ba:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d0bc:	4770      	bx	lr
 800d0be:	bf00      	nop

0800d0c0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d0c0:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d0c2:	689a      	ldr	r2, [r3, #8]
 800d0c4:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d0c6:	6802      	ldr	r2, [r0, #0]
{
 800d0c8:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d0ca:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d0cc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d0ce:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d0d0:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d0d2:	6099      	str	r1, [r3, #8]
}
 800d0d4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d0d8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d0da:	6002      	str	r2, [r0, #0]
}
 800d0dc:	4770      	bx	lr
 800d0de:	bf00      	nop

0800d0e0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d0e0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d0e2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d0e4:	1c6b      	adds	r3, r5, #1
 800d0e6:	d010      	beq.n	800d10a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d0e8:	f100 0308 	add.w	r3, r0, #8
 800d0ec:	461c      	mov	r4, r3
 800d0ee:	685b      	ldr	r3, [r3, #4]
 800d0f0:	681a      	ldr	r2, [r3, #0]
 800d0f2:	42aa      	cmp	r2, r5
 800d0f4:	d9fa      	bls.n	800d0ec <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d0f6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d0f8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d0fa:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d0fc:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d0fe:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d100:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d102:	6108      	str	r0, [r1, #16]
}
 800d104:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d106:	6002      	str	r2, [r0, #0]
}
 800d108:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d10a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d10c:	6863      	ldr	r3, [r4, #4]
 800d10e:	e7f2      	b.n	800d0f6 <vListInsert+0x16>

0800d110 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d110:	6903      	ldr	r3, [r0, #16]
{
 800d112:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d114:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d118:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d11a:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d11c:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d11e:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d120:	bf08      	it	eq
 800d122:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d124:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d126:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d12a:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d12c:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d12e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d130:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d132:	6818      	ldr	r0, [r3, #0]
}
 800d134:	4770      	bx	lr
 800d136:	bf00      	nop

0800d138 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d138:	4808      	ldr	r0, [pc, #32]	; (800d15c <prvPortStartFirstTask+0x24>)
 800d13a:	6800      	ldr	r0, [r0, #0]
 800d13c:	6800      	ldr	r0, [r0, #0]
 800d13e:	f380 8808 	msr	MSP, r0
 800d142:	f04f 0000 	mov.w	r0, #0
 800d146:	f380 8814 	msr	CONTROL, r0
 800d14a:	b662      	cpsie	i
 800d14c:	b661      	cpsie	f
 800d14e:	f3bf 8f4f 	dsb	sy
 800d152:	f3bf 8f6f 	isb	sy
 800d156:	df00      	svc	0
 800d158:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d15a:	0000      	.short	0x0000
 800d15c:	e000ed08 	.word	0xe000ed08

0800d160 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d160:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d170 <vPortEnableVFP+0x10>
 800d164:	6801      	ldr	r1, [r0, #0]
 800d166:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d16a:	6001      	str	r1, [r0, #0]
 800d16c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d16e:	0000      	.short	0x0000
 800d170:	e000ed88 	.word	0xe000ed88

0800d174 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d174:	4b0e      	ldr	r3, [pc, #56]	; (800d1b0 <prvTaskExitError+0x3c>)
 800d176:	681b      	ldr	r3, [r3, #0]
{
 800d178:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d17a:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d17c:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d17e:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d180:	d008      	beq.n	800d194 <prvTaskExitError+0x20>
 800d182:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d186:	f383 8811 	msr	BASEPRI, r3
 800d18a:	f3bf 8f6f 	isb	sy
 800d18e:	f3bf 8f4f 	dsb	sy
 800d192:	e7fe      	b.n	800d192 <prvTaskExitError+0x1e>
 800d194:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d198:	f383 8811 	msr	BASEPRI, r3
 800d19c:	f3bf 8f6f 	isb	sy
 800d1a0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d1a4:	9b01      	ldr	r3, [sp, #4]
 800d1a6:	2b00      	cmp	r3, #0
 800d1a8:	d0fc      	beq.n	800d1a4 <prvTaskExitError+0x30>
}
 800d1aa:	b002      	add	sp, #8
 800d1ac:	4770      	bx	lr
 800d1ae:	bf00      	nop
 800d1b0:	20000084 	.word	0x20000084

0800d1b4 <pxPortInitialiseStack>:
{
 800d1b4:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d1b6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d1ba:	4c07      	ldr	r4, [pc, #28]	; (800d1d8 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d1bc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d1c0:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d1c4:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d1c8:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d1cc:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d1d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d1d4:	3844      	subs	r0, #68	; 0x44
 800d1d6:	4770      	bx	lr
 800d1d8:	0800d175 	.word	0x0800d175
 800d1dc:	00000000 	.word	0x00000000

0800d1e0 <SVC_Handler>:
	__asm volatile (
 800d1e0:	4b07      	ldr	r3, [pc, #28]	; (800d200 <pxCurrentTCBConst2>)
 800d1e2:	6819      	ldr	r1, [r3, #0]
 800d1e4:	6808      	ldr	r0, [r1, #0]
 800d1e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1ea:	f380 8809 	msr	PSP, r0
 800d1ee:	f3bf 8f6f 	isb	sy
 800d1f2:	f04f 0000 	mov.w	r0, #0
 800d1f6:	f380 8811 	msr	BASEPRI, r0
 800d1fa:	4770      	bx	lr
 800d1fc:	f3af 8000 	nop.w

0800d200 <pxCurrentTCBConst2>:
 800d200:	20012848 	.word	0x20012848

0800d204 <vPortEnterCritical>:
 800d204:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d208:	f383 8811 	msr	BASEPRI, r3
 800d20c:	f3bf 8f6f 	isb	sy
 800d210:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d214:	4a0b      	ldr	r2, [pc, #44]	; (800d244 <vPortEnterCritical+0x40>)
 800d216:	6813      	ldr	r3, [r2, #0]
 800d218:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d21a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d21c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d21e:	d000      	beq.n	800d222 <vPortEnterCritical+0x1e>
}
 800d220:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d222:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d226:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d22a:	b2db      	uxtb	r3, r3
 800d22c:	2b00      	cmp	r3, #0
 800d22e:	d0f7      	beq.n	800d220 <vPortEnterCritical+0x1c>
 800d230:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d234:	f383 8811 	msr	BASEPRI, r3
 800d238:	f3bf 8f6f 	isb	sy
 800d23c:	f3bf 8f4f 	dsb	sy
 800d240:	e7fe      	b.n	800d240 <vPortEnterCritical+0x3c>
 800d242:	bf00      	nop
 800d244:	20000084 	.word	0x20000084

0800d248 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d248:	4a08      	ldr	r2, [pc, #32]	; (800d26c <vPortExitCritical+0x24>)
 800d24a:	6813      	ldr	r3, [r2, #0]
 800d24c:	b943      	cbnz	r3, 800d260 <vPortExitCritical+0x18>
 800d24e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d252:	f383 8811 	msr	BASEPRI, r3
 800d256:	f3bf 8f6f 	isb	sy
 800d25a:	f3bf 8f4f 	dsb	sy
 800d25e:	e7fe      	b.n	800d25e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d260:	3b01      	subs	r3, #1
 800d262:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d264:	b90b      	cbnz	r3, 800d26a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d266:	f383 8811 	msr	BASEPRI, r3
}
 800d26a:	4770      	bx	lr
 800d26c:	20000084 	.word	0x20000084

0800d270 <PendSV_Handler>:
	__asm volatile
 800d270:	f3ef 8009 	mrs	r0, PSP
 800d274:	f3bf 8f6f 	isb	sy
 800d278:	4b15      	ldr	r3, [pc, #84]	; (800d2d0 <pxCurrentTCBConst>)
 800d27a:	681a      	ldr	r2, [r3, #0]
 800d27c:	f01e 0f10 	tst.w	lr, #16
 800d280:	bf08      	it	eq
 800d282:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d286:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d28a:	6010      	str	r0, [r2, #0]
 800d28c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d290:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d294:	f380 8811 	msr	BASEPRI, r0
 800d298:	f3bf 8f4f 	dsb	sy
 800d29c:	f3bf 8f6f 	isb	sy
 800d2a0:	f001 fd54 	bl	800ed4c <vTaskSwitchContext>
 800d2a4:	f04f 0000 	mov.w	r0, #0
 800d2a8:	f380 8811 	msr	BASEPRI, r0
 800d2ac:	bc09      	pop	{r0, r3}
 800d2ae:	6819      	ldr	r1, [r3, #0]
 800d2b0:	6808      	ldr	r0, [r1, #0]
 800d2b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2b6:	f01e 0f10 	tst.w	lr, #16
 800d2ba:	bf08      	it	eq
 800d2bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d2c0:	f380 8809 	msr	PSP, r0
 800d2c4:	f3bf 8f6f 	isb	sy
 800d2c8:	4770      	bx	lr
 800d2ca:	bf00      	nop
 800d2cc:	f3af 8000 	nop.w

0800d2d0 <pxCurrentTCBConst>:
 800d2d0:	20012848 	.word	0x20012848

0800d2d4 <xPortSysTickHandler>:
{
 800d2d4:	b508      	push	{r3, lr}
	__asm volatile
 800d2d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2da:	f383 8811 	msr	BASEPRI, r3
 800d2de:	f3bf 8f6f 	isb	sy
 800d2e2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d2e6:	f001 fd21 	bl	800ed2c <xTaskIncrementTick>
 800d2ea:	b128      	cbz	r0, 800d2f8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d2ec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d2f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d2f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d2f8:	2300      	movs	r3, #0
 800d2fa:	f383 8811 	msr	BASEPRI, r3
}
 800d2fe:	bd08      	pop	{r3, pc}

0800d300 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d300:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d304:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d306:	4906      	ldr	r1, [pc, #24]	; (800d320 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d308:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d30a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d30c:	680b      	ldr	r3, [r1, #0]
 800d30e:	4905      	ldr	r1, [pc, #20]	; (800d324 <vPortSetupTimerInterrupt+0x24>)
 800d310:	fba1 1303 	umull	r1, r3, r1, r3
 800d314:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d316:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d318:	3b01      	subs	r3, #1
 800d31a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d31c:	6110      	str	r0, [r2, #16]
}
 800d31e:	4770      	bx	lr
 800d320:	20000078 	.word	0x20000078
 800d324:	10624dd3 	.word	0x10624dd3

0800d328 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d328:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d32c:	4a49      	ldr	r2, [pc, #292]	; (800d454 <xPortStartScheduler+0x12c>)
 800d32e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d332:	4291      	cmp	r1, r2
 800d334:	d043      	beq.n	800d3be <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d336:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d33a:	4b47      	ldr	r3, [pc, #284]	; (800d458 <xPortStartScheduler+0x130>)
 800d33c:	429a      	cmp	r2, r3
 800d33e:	d035      	beq.n	800d3ac <xPortStartScheduler+0x84>
{
 800d340:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d342:	4b46      	ldr	r3, [pc, #280]	; (800d45c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d344:	4846      	ldr	r0, [pc, #280]	; (800d460 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d346:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d348:	4c46      	ldr	r4, [pc, #280]	; (800d464 <xPortStartScheduler+0x13c>)
{
 800d34a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d34c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d34e:	b2d2      	uxtb	r2, r2
 800d350:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d352:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d354:	781b      	ldrb	r3, [r3, #0]
 800d356:	b2db      	uxtb	r3, r3
 800d358:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d35c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d360:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d364:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d368:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d36a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d36c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d36e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d370:	bf48      	it	mi
 800d372:	2206      	movmi	r2, #6
 800d374:	d511      	bpl.n	800d39a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d376:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d37a:	005b      	lsls	r3, r3, #1
 800d37c:	b2db      	uxtb	r3, r3
 800d37e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d382:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d386:	0609      	lsls	r1, r1, #24
 800d388:	4610      	mov	r0, r2
 800d38a:	f102 32ff 	add.w	r2, r2, #4294967295
 800d38e:	d4f2      	bmi.n	800d376 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d390:	2803      	cmp	r0, #3
 800d392:	6020      	str	r0, [r4, #0]
 800d394:	f88d 3007 	strb.w	r3, [sp, #7]
 800d398:	d01a      	beq.n	800d3d0 <xPortStartScheduler+0xa8>
	__asm volatile
 800d39a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d39e:	f383 8811 	msr	BASEPRI, r3
 800d3a2:	f3bf 8f6f 	isb	sy
 800d3a6:	f3bf 8f4f 	dsb	sy
 800d3aa:	e7fe      	b.n	800d3aa <xPortStartScheduler+0x82>
 800d3ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3b0:	f383 8811 	msr	BASEPRI, r3
 800d3b4:	f3bf 8f6f 	isb	sy
 800d3b8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d3bc:	e7fe      	b.n	800d3bc <xPortStartScheduler+0x94>
 800d3be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3c2:	f383 8811 	msr	BASEPRI, r3
 800d3c6:	f3bf 8f6f 	isb	sy
 800d3ca:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d3ce:	e7fe      	b.n	800d3ce <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d3d0:	9b02      	ldr	r3, [sp, #8]
 800d3d2:	4a22      	ldr	r2, [pc, #136]	; (800d45c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d3d4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d3d8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d3dc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d3de:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d3e0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d3e2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d3e6:	4c20      	ldr	r4, [pc, #128]	; (800d468 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d3e8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d3ec:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d3f0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d3f4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d3f8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d3fc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d3fe:	f7ff ff7f 	bl	800d300 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d402:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d404:	f7ff feac 	bl	800d160 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d408:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d40c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d410:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d414:	f7ff fe90 	bl	800d138 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d418:	f001 fc98 	bl	800ed4c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d41c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d41e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d420:	3301      	adds	r3, #1
 800d422:	d008      	beq.n	800d436 <xPortStartScheduler+0x10e>
 800d424:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d428:	f383 8811 	msr	BASEPRI, r3
 800d42c:	f3bf 8f6f 	isb	sy
 800d430:	f3bf 8f4f 	dsb	sy
 800d434:	e7fe      	b.n	800d434 <xPortStartScheduler+0x10c>
 800d436:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d43a:	f383 8811 	msr	BASEPRI, r3
 800d43e:	f3bf 8f6f 	isb	sy
 800d442:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d446:	9b03      	ldr	r3, [sp, #12]
 800d448:	2b00      	cmp	r3, #0
 800d44a:	d0fc      	beq.n	800d446 <xPortStartScheduler+0x11e>
}
 800d44c:	2000      	movs	r0, #0
 800d44e:	b004      	add	sp, #16
 800d450:	bd70      	pop	{r4, r5, r6, pc}
 800d452:	bf00      	nop
 800d454:	410fc271 	.word	0x410fc271
 800d458:	410fc270 	.word	0x410fc270
 800d45c:	e000e400 	.word	0xe000e400
 800d460:	20012800 	.word	0x20012800
 800d464:	20012804 	.word	0x20012804
 800d468:	20000084 	.word	0x20000084

0800d46c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d46c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d470:	2b0f      	cmp	r3, #15
 800d472:	d90e      	bls.n	800d492 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d474:	4911      	ldr	r1, [pc, #68]	; (800d4bc <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d476:	4a12      	ldr	r2, [pc, #72]	; (800d4c0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d478:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d47a:	7812      	ldrb	r2, [r2, #0]
 800d47c:	429a      	cmp	r2, r3
 800d47e:	d908      	bls.n	800d492 <vPortValidateInterruptPriority+0x26>
 800d480:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d484:	f383 8811 	msr	BASEPRI, r3
 800d488:	f3bf 8f6f 	isb	sy
 800d48c:	f3bf 8f4f 	dsb	sy
 800d490:	e7fe      	b.n	800d490 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d492:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d496:	4a0b      	ldr	r2, [pc, #44]	; (800d4c4 <vPortValidateInterruptPriority+0x58>)
 800d498:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d49c:	6812      	ldr	r2, [r2, #0]
 800d49e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d4a2:	4293      	cmp	r3, r2
 800d4a4:	d908      	bls.n	800d4b8 <vPortValidateInterruptPriority+0x4c>
 800d4a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4aa:	f383 8811 	msr	BASEPRI, r3
 800d4ae:	f3bf 8f6f 	isb	sy
 800d4b2:	f3bf 8f4f 	dsb	sy
 800d4b6:	e7fe      	b.n	800d4b6 <vPortValidateInterruptPriority+0x4a>
	}
 800d4b8:	4770      	bx	lr
 800d4ba:	bf00      	nop
 800d4bc:	e000e3f0 	.word	0xe000e3f0
 800d4c0:	20012800 	.word	0x20012800
 800d4c4:	20012804 	.word	0x20012804

0800d4c8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d4c8:	b570      	push	{r4, r5, r6, lr}
 800d4ca:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d4cc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d4ce:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d4d0:	b920      	cbnz	r0, 800d4dc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d4d2:	6825      	ldr	r5, [r4, #0]
 800d4d4:	b34d      	cbz	r5, 800d52a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d4d6:	3601      	adds	r6, #1
 800d4d8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d4da:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d4dc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d4de:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d4e0:	b97d      	cbnz	r5, 800d502 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d4e2:	6860      	ldr	r0, [r4, #4]
 800d4e4:	f01c fee9 	bl	802a2ba <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d4e8:	6863      	ldr	r3, [r4, #4]
 800d4ea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d4ec:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d4ee:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d4f0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d4f2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d4f4:	bf24      	itt	cs
 800d4f6:	6823      	ldrcs	r3, [r4, #0]
 800d4f8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d4fa:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d4fc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d4fe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d500:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d502:	68e0      	ldr	r0, [r4, #12]
 800d504:	f01c fed9 	bl	802a2ba <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d508:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d50a:	68e3      	ldr	r3, [r4, #12]
 800d50c:	4251      	negs	r1, r2
 800d50e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d510:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d512:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d514:	4293      	cmp	r3, r2
 800d516:	d202      	bcs.n	800d51e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d518:	68a3      	ldr	r3, [r4, #8]
 800d51a:	440b      	add	r3, r1
 800d51c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d51e:	2d02      	cmp	r5, #2
 800d520:	d008      	beq.n	800d534 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d522:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d524:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d526:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d528:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d52a:	68a0      	ldr	r0, [r4, #8]
 800d52c:	f001 fde0 	bl	800f0f0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d530:	60a5      	str	r5, [r4, #8]
 800d532:	e7d0      	b.n	800d4d6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d534:	2e01      	cmp	r6, #1
 800d536:	bf38      	it	cc
 800d538:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d53a:	2000      	movs	r0, #0
 800d53c:	e7cc      	b.n	800d4d8 <prvCopyDataToQueue+0x10>
 800d53e:	bf00      	nop

0800d540 <xQueueGenericCreateStatic>:
	{
 800d540:	b530      	push	{r4, r5, lr}
 800d542:	b083      	sub	sp, #12
 800d544:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d548:	b940      	cbnz	r0, 800d55c <xQueueGenericCreateStatic+0x1c>
 800d54a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d54e:	f383 8811 	msr	BASEPRI, r3
 800d552:	f3bf 8f6f 	isb	sy
 800d556:	f3bf 8f4f 	dsb	sy
 800d55a:	e7fe      	b.n	800d55a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d55c:	461d      	mov	r5, r3
 800d55e:	b17b      	cbz	r3, 800d580 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d560:	b302      	cbz	r2, 800d5a4 <xQueueGenericCreateStatic+0x64>
 800d562:	b1b1      	cbz	r1, 800d592 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d564:	2350      	movs	r3, #80	; 0x50
 800d566:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d568:	9b01      	ldr	r3, [sp, #4]
 800d56a:	2b50      	cmp	r3, #80	; 0x50
 800d56c:	d023      	beq.n	800d5b6 <xQueueGenericCreateStatic+0x76>
 800d56e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d572:	f383 8811 	msr	BASEPRI, r3
 800d576:	f3bf 8f6f 	isb	sy
 800d57a:	f3bf 8f4f 	dsb	sy
 800d57e:	e7fe      	b.n	800d57e <xQueueGenericCreateStatic+0x3e>
 800d580:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d584:	f383 8811 	msr	BASEPRI, r3
 800d588:	f3bf 8f6f 	isb	sy
 800d58c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d590:	e7fe      	b.n	800d590 <xQueueGenericCreateStatic+0x50>
 800d592:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d596:	f383 8811 	msr	BASEPRI, r3
 800d59a:	f3bf 8f6f 	isb	sy
 800d59e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d5a2:	e7fe      	b.n	800d5a2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d5a4:	bb89      	cbnz	r1, 800d60a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d5a6:	2250      	movs	r2, #80	; 0x50
 800d5a8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d5aa:	9a01      	ldr	r2, [sp, #4]
 800d5ac:	2a50      	cmp	r2, #80	; 0x50
 800d5ae:	d1de      	bne.n	800d56e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d5b0:	9a01      	ldr	r2, [sp, #4]
 800d5b2:	462a      	mov	r2, r5
 800d5b4:	e000      	b.n	800d5b8 <xQueueGenericCreateStatic+0x78>
 800d5b6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d5b8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d5ba:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d5bc:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d5c0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d5c4:	f7ff fe1e 	bl	800d204 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5c8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d5cc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d5ce:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5d0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5d4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5d6:	4401      	add	r1, r0
 800d5d8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d5da:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5dc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d5de:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d5e0:	21ff      	movs	r1, #255	; 0xff
 800d5e2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5e6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d5e8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d5ec:	f105 0010 	add.w	r0, r5, #16
 800d5f0:	f7ff fd56 	bl	800d0a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d5f4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d5f8:	f7ff fd52 	bl	800d0a0 <vListInitialise>
	taskEXIT_CRITICAL();
 800d5fc:	f7ff fe24 	bl	800d248 <vPortExitCritical>
	}
 800d600:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d602:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d606:	b003      	add	sp, #12
 800d608:	bd30      	pop	{r4, r5, pc}
 800d60a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d60e:	f383 8811 	msr	BASEPRI, r3
 800d612:	f3bf 8f6f 	isb	sy
 800d616:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d61a:	e7fe      	b.n	800d61a <xQueueGenericCreateStatic+0xda>

0800d61c <xQueueGenericCreate>:
	{
 800d61c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d61e:	b940      	cbnz	r0, 800d632 <xQueueGenericCreate+0x16>
 800d620:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d624:	f383 8811 	msr	BASEPRI, r3
 800d628:	f3bf 8f6f 	isb	sy
 800d62c:	f3bf 8f4f 	dsb	sy
 800d630:	e7fe      	b.n	800d630 <xQueueGenericCreate+0x14>
 800d632:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d634:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d638:	3050      	adds	r0, #80	; 0x50
 800d63a:	460e      	mov	r6, r1
 800d63c:	4617      	mov	r7, r2
 800d63e:	f7ff fc0f 	bl	800ce60 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d642:	4604      	mov	r4, r0
 800d644:	b340      	cbz	r0, 800d698 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d646:	2300      	movs	r3, #0
 800d648:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d64c:	b336      	cbz	r6, 800d69c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d64e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d652:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d654:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d658:	f7ff fdd4 	bl	800d204 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d65c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d660:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d662:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d664:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d668:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d66a:	440a      	add	r2, r1
 800d66c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d66e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d670:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d672:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d674:	22ff      	movs	r2, #255	; 0xff
 800d676:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d67a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d67c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d680:	f104 0010 	add.w	r0, r4, #16
 800d684:	f7ff fd0c 	bl	800d0a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d688:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d68c:	f7ff fd08 	bl	800d0a0 <vListInitialise>
	taskEXIT_CRITICAL();
 800d690:	f7ff fdda 	bl	800d248 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d694:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d698:	4620      	mov	r0, r4
 800d69a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d69c:	4603      	mov	r3, r0
 800d69e:	e7d8      	b.n	800d652 <xQueueGenericCreate+0x36>

0800d6a0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d6a0:	b940      	cbnz	r0, 800d6b4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d6a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6a6:	f383 8811 	msr	BASEPRI, r3
 800d6aa:	f3bf 8f6f 	isb	sy
 800d6ae:	f3bf 8f4f 	dsb	sy
 800d6b2:	e7fe      	b.n	800d6b2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d6b4:	4288      	cmp	r0, r1
 800d6b6:	d208      	bcs.n	800d6ca <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d6b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6bc:	f383 8811 	msr	BASEPRI, r3
 800d6c0:	f3bf 8f6f 	isb	sy
 800d6c4:	f3bf 8f4f 	dsb	sy
 800d6c8:	e7fe      	b.n	800d6c8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d6ca:	b530      	push	{r4, r5, lr}
 800d6cc:	4615      	mov	r5, r2
 800d6ce:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d6d0:	2a00      	cmp	r2, #0
 800d6d2:	d03c      	beq.n	800d74e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d6d4:	2350      	movs	r3, #80	; 0x50
 800d6d6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d6d8:	9b03      	ldr	r3, [sp, #12]
 800d6da:	2b50      	cmp	r3, #80	; 0x50
 800d6dc:	d008      	beq.n	800d6f0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d6de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6e2:	f383 8811 	msr	BASEPRI, r3
 800d6e6:	f3bf 8f6f 	isb	sy
 800d6ea:	f3bf 8f4f 	dsb	sy
 800d6ee:	e7fe      	b.n	800d6ee <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d6f0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d6f2:	2301      	movs	r3, #1
 800d6f4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d6f8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d6fa:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d6fe:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d700:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d702:	f7ff fd7f 	bl	800d204 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d706:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d70a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d70c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d70e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d712:	1ac3      	subs	r3, r0, r3
 800d714:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d716:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d718:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d71c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d720:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d722:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d724:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d728:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d72a:	f105 0010 	add.w	r0, r5, #16
 800d72e:	f7ff fcb7 	bl	800d0a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d732:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d736:	f7ff fcb3 	bl	800d0a0 <vListInitialise>
	taskEXIT_CRITICAL();
 800d73a:	f7ff fd85 	bl	800d248 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d73e:	9901      	ldr	r1, [sp, #4]
 800d740:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d742:	2302      	movs	r3, #2
	}
 800d744:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d746:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d74a:	b005      	add	sp, #20
 800d74c:	bd30      	pop	{r4, r5, pc}
 800d74e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d752:	f383 8811 	msr	BASEPRI, r3
 800d756:	f3bf 8f6f 	isb	sy
 800d75a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d75e:	e7fe      	b.n	800d75e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d760 <xQueueCreateCountingSemaphore>:
	{
 800d760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d762:	b940      	cbnz	r0, 800d776 <xQueueCreateCountingSemaphore+0x16>
 800d764:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d768:	f383 8811 	msr	BASEPRI, r3
 800d76c:	f3bf 8f6f 	isb	sy
 800d770:	f3bf 8f4f 	dsb	sy
 800d774:	e7fe      	b.n	800d774 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d776:	4288      	cmp	r0, r1
 800d778:	460e      	mov	r6, r1
 800d77a:	4604      	mov	r4, r0
 800d77c:	d208      	bcs.n	800d790 <xQueueCreateCountingSemaphore+0x30>
 800d77e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d782:	f383 8811 	msr	BASEPRI, r3
 800d786:	f3bf 8f6f 	isb	sy
 800d78a:	f3bf 8f4f 	dsb	sy
 800d78e:	e7fe      	b.n	800d78e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d790:	2050      	movs	r0, #80	; 0x50
 800d792:	f7ff fb65 	bl	800ce60 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d796:	4605      	mov	r5, r0
 800d798:	b330      	cbz	r0, 800d7e8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d79a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d79c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d7a0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d7a4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d7a6:	f7ff fd2d 	bl	800d204 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7aa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d7ae:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d7b0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7b2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7b6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7b8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7ba:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7bc:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d7be:	22ff      	movs	r2, #255	; 0xff
 800d7c0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7c4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d7c6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d7c8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d7cc:	f105 0010 	add.w	r0, r5, #16
 800d7d0:	f7ff fc66 	bl	800d0a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d7d4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d7d8:	f7ff fc62 	bl	800d0a0 <vListInitialise>
	taskEXIT_CRITICAL();
 800d7dc:	f7ff fd34 	bl	800d248 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d7e0:	2302      	movs	r3, #2
 800d7e2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d7e6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d7e8:	4628      	mov	r0, r5
 800d7ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d7ec <xQueueGenericSend>:
{
 800d7ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d7f0:	b085      	sub	sp, #20
 800d7f2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d7f4:	2800      	cmp	r0, #0
 800d7f6:	f000 80a4 	beq.w	800d942 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d7fa:	4688      	mov	r8, r1
 800d7fc:	461f      	mov	r7, r3
 800d7fe:	4604      	mov	r4, r0
 800d800:	2900      	cmp	r1, #0
 800d802:	f000 8091 	beq.w	800d928 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d806:	2f02      	cmp	r7, #2
 800d808:	d10b      	bne.n	800d822 <xQueueGenericSend+0x36>
 800d80a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d80c:	2b01      	cmp	r3, #1
 800d80e:	d008      	beq.n	800d822 <xQueueGenericSend+0x36>
 800d810:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d814:	f383 8811 	msr	BASEPRI, r3
 800d818:	f3bf 8f6f 	isb	sy
 800d81c:	f3bf 8f4f 	dsb	sy
 800d820:	e7fe      	b.n	800d820 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d822:	f001 fc0f 	bl	800f044 <xTaskGetSchedulerState>
 800d826:	4605      	mov	r5, r0
 800d828:	2800      	cmp	r0, #0
 800d82a:	f000 8093 	beq.w	800d954 <xQueueGenericSend+0x168>
 800d82e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d830:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d834:	f7ff fce6 	bl	800d204 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d838:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d83a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d83c:	429a      	cmp	r2, r3
 800d83e:	f0c0 80ef 	bcc.w	800da20 <xQueueGenericSend+0x234>
 800d842:	2f02      	cmp	r7, #2
 800d844:	f000 80ec 	beq.w	800da20 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d848:	9801      	ldr	r0, [sp, #4]
 800d84a:	2800      	cmp	r0, #0
 800d84c:	f000 8101 	beq.w	800da52 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d850:	2d00      	cmp	r5, #0
 800d852:	f000 80e1 	beq.w	800da18 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d856:	f7ff fcf7 	bl	800d248 <vPortExitCritical>
		vTaskSuspendAll();
 800d85a:	f001 fa49 	bl	800ecf0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d85e:	f7ff fcd1 	bl	800d204 <vPortEnterCritical>
 800d862:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d866:	2bff      	cmp	r3, #255	; 0xff
 800d868:	bf04      	itt	eq
 800d86a:	2300      	moveq	r3, #0
 800d86c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d870:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d874:	2bff      	cmp	r3, #255	; 0xff
 800d876:	bf04      	itt	eq
 800d878:	2300      	moveq	r3, #0
 800d87a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d87e:	f7ff fce3 	bl	800d248 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d882:	a901      	add	r1, sp, #4
 800d884:	a802      	add	r0, sp, #8
 800d886:	f001 fb8f 	bl	800efa8 <xTaskCheckForTimeOut>
 800d88a:	2800      	cmp	r0, #0
 800d88c:	f040 80e6 	bne.w	800da5c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d890:	f7ff fcb8 	bl	800d204 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d894:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d896:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d898:	429a      	cmp	r2, r3
 800d89a:	d068      	beq.n	800d96e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d89c:	f7ff fcd4 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d8a0:	f7ff fcb0 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d8a4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d8a8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d8aa:	2d00      	cmp	r5, #0
 800d8ac:	dc04      	bgt.n	800d8b8 <xQueueGenericSend+0xcc>
 800d8ae:	e011      	b.n	800d8d4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800d8b0:	1e6a      	subs	r2, r5, #1
 800d8b2:	b2d3      	uxtb	r3, r2
 800d8b4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d8b6:	b16b      	cbz	r3, 800d8d4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d8b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d8ba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d8bc:	b153      	cbz	r3, 800d8d4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d8be:	f001 fb1f 	bl	800ef00 <xTaskRemoveFromEventList>
 800d8c2:	2800      	cmp	r0, #0
 800d8c4:	d0f4      	beq.n	800d8b0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800d8c6:	f001 fbb7 	bl	800f038 <vTaskMissedYield>
			--cTxLock;
 800d8ca:	1e6a      	subs	r2, r5, #1
 800d8cc:	b2d3      	uxtb	r3, r2
 800d8ce:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d8d0:	2b00      	cmp	r3, #0
 800d8d2:	d1f1      	bne.n	800d8b8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d8d4:	23ff      	movs	r3, #255	; 0xff
 800d8d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d8da:	f7ff fcb5 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d8de:	f7ff fc91 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d8e2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800d8e6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d8e8:	2d00      	cmp	r5, #0
 800d8ea:	dd14      	ble.n	800d916 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d8ec:	f104 0910 	add.w	r9, r4, #16
 800d8f0:	e003      	b.n	800d8fa <xQueueGenericSend+0x10e>
				--cRxLock;
 800d8f2:	1e6a      	subs	r2, r5, #1
 800d8f4:	b2d3      	uxtb	r3, r2
 800d8f6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d8f8:	b16b      	cbz	r3, 800d916 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d8fa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d8fc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d8fe:	b153      	cbz	r3, 800d916 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d900:	f001 fafe 	bl	800ef00 <xTaskRemoveFromEventList>
 800d904:	2800      	cmp	r0, #0
 800d906:	d0f4      	beq.n	800d8f2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800d908:	f001 fb96 	bl	800f038 <vTaskMissedYield>
				--cRxLock;
 800d90c:	1e6a      	subs	r2, r5, #1
 800d90e:	b2d3      	uxtb	r3, r2
 800d910:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d912:	2b00      	cmp	r3, #0
 800d914:	d1f1      	bne.n	800d8fa <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800d916:	23ff      	movs	r3, #255	; 0xff
 800d918:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d91c:	f7ff fc94 	bl	800d248 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d920:	f001 f9ee 	bl	800ed00 <xTaskResumeAll>
 800d924:	2501      	movs	r5, #1
 800d926:	e785      	b.n	800d834 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d928:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d92a:	2b00      	cmp	r3, #0
 800d92c:	f43f af6b 	beq.w	800d806 <xQueueGenericSend+0x1a>
 800d930:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d934:	f383 8811 	msr	BASEPRI, r3
 800d938:	f3bf 8f6f 	isb	sy
 800d93c:	f3bf 8f4f 	dsb	sy
 800d940:	e7fe      	b.n	800d940 <xQueueGenericSend+0x154>
 800d942:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d946:	f383 8811 	msr	BASEPRI, r3
 800d94a:	f3bf 8f6f 	isb	sy
 800d94e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d952:	e7fe      	b.n	800d952 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d954:	9b01      	ldr	r3, [sp, #4]
 800d956:	2b00      	cmp	r3, #0
 800d958:	f43f af6a 	beq.w	800d830 <xQueueGenericSend+0x44>
 800d95c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d960:	f383 8811 	msr	BASEPRI, r3
 800d964:	f3bf 8f6f 	isb	sy
 800d968:	f3bf 8f4f 	dsb	sy
 800d96c:	e7fe      	b.n	800d96c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d96e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800d972:	f7ff fc69 	bl	800d248 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d976:	9901      	ldr	r1, [sp, #4]
 800d978:	4648      	mov	r0, r9
 800d97a:	f001 fa33 	bl	800ede4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d97e:	f7ff fc41 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d982:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d986:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d988:	2d00      	cmp	r5, #0
 800d98a:	dc04      	bgt.n	800d996 <xQueueGenericSend+0x1aa>
 800d98c:	e011      	b.n	800d9b2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800d98e:	1e6b      	subs	r3, r5, #1
 800d990:	b2da      	uxtb	r2, r3
 800d992:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d994:	b16a      	cbz	r2, 800d9b2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d996:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d998:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d99a:	b153      	cbz	r3, 800d9b2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d99c:	f001 fab0 	bl	800ef00 <xTaskRemoveFromEventList>
 800d9a0:	2800      	cmp	r0, #0
 800d9a2:	d0f4      	beq.n	800d98e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800d9a4:	f001 fb48 	bl	800f038 <vTaskMissedYield>
			--cTxLock;
 800d9a8:	1e6b      	subs	r3, r5, #1
 800d9aa:	b2da      	uxtb	r2, r3
 800d9ac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9ae:	2a00      	cmp	r2, #0
 800d9b0:	d1f1      	bne.n	800d996 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800d9b2:	23ff      	movs	r3, #255	; 0xff
 800d9b4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d9b8:	f7ff fc46 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d9bc:	f7ff fc22 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d9c0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d9c4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9c6:	2d00      	cmp	r5, #0
 800d9c8:	dc04      	bgt.n	800d9d4 <xQueueGenericSend+0x1e8>
 800d9ca:	e011      	b.n	800d9f0 <xQueueGenericSend+0x204>
				--cRxLock;
 800d9cc:	1e6b      	subs	r3, r5, #1
 800d9ce:	b2da      	uxtb	r2, r3
 800d9d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9d2:	b16a      	cbz	r2, 800d9f0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9d4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9d6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9d8:	b153      	cbz	r3, 800d9f0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9da:	f001 fa91 	bl	800ef00 <xTaskRemoveFromEventList>
 800d9de:	2800      	cmp	r0, #0
 800d9e0:	d0f4      	beq.n	800d9cc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800d9e2:	f001 fb29 	bl	800f038 <vTaskMissedYield>
				--cRxLock;
 800d9e6:	1e6b      	subs	r3, r5, #1
 800d9e8:	b2da      	uxtb	r2, r3
 800d9ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9ec:	2a00      	cmp	r2, #0
 800d9ee:	d1f1      	bne.n	800d9d4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800d9f0:	23ff      	movs	r3, #255	; 0xff
 800d9f2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d9f6:	f7ff fc27 	bl	800d248 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d9fa:	f001 f981 	bl	800ed00 <xTaskResumeAll>
 800d9fe:	2800      	cmp	r0, #0
 800da00:	d190      	bne.n	800d924 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800da02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da0e:	f3bf 8f4f 	dsb	sy
 800da12:	f3bf 8f6f 	isb	sy
 800da16:	e785      	b.n	800d924 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800da18:	a802      	add	r0, sp, #8
 800da1a:	f001 fab9 	bl	800ef90 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800da1e:	e71a      	b.n	800d856 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800da20:	463a      	mov	r2, r7
 800da22:	4641      	mov	r1, r8
 800da24:	4620      	mov	r0, r4
 800da26:	f7ff fd4f 	bl	800d4c8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800da2c:	2b00      	cmp	r3, #0
 800da2e:	d153      	bne.n	800dad8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800da30:	b148      	cbz	r0, 800da46 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800da32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da3e:	f3bf 8f4f 	dsb	sy
 800da42:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800da46:	f7ff fbff 	bl	800d248 <vPortExitCritical>
				return pdPASS;
 800da4a:	2001      	movs	r0, #1
}
 800da4c:	b005      	add	sp, #20
 800da4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800da52:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800da54:	f7ff fbf8 	bl	800d248 <vPortExitCritical>
					return errQUEUE_FULL;
 800da58:	9800      	ldr	r0, [sp, #0]
 800da5a:	e7f7      	b.n	800da4c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800da5c:	f7ff fbd2 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800da60:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800da64:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da66:	2d00      	cmp	r5, #0
 800da68:	dd10      	ble.n	800da8c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da6a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800da6e:	e003      	b.n	800da78 <xQueueGenericSend+0x28c>
			--cTxLock;
 800da70:	1e6b      	subs	r3, r5, #1
 800da72:	b2da      	uxtb	r2, r3
 800da74:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da76:	b14a      	cbz	r2, 800da8c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da78:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da7a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da7c:	b133      	cbz	r3, 800da8c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da7e:	f001 fa3f 	bl	800ef00 <xTaskRemoveFromEventList>
 800da82:	2800      	cmp	r0, #0
 800da84:	d0f4      	beq.n	800da70 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800da86:	f001 fad7 	bl	800f038 <vTaskMissedYield>
 800da8a:	e7f1      	b.n	800da70 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800da8c:	23ff      	movs	r3, #255	; 0xff
 800da8e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800da92:	f7ff fbd9 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800da96:	f7ff fbb5 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800da9a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800da9e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800daa0:	2d00      	cmp	r5, #0
 800daa2:	dd10      	ble.n	800dac6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800daa4:	f104 0610 	add.w	r6, r4, #16
 800daa8:	e003      	b.n	800dab2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800daaa:	1e6b      	subs	r3, r5, #1
 800daac:	b2da      	uxtb	r2, r3
 800daae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dab0:	b14a      	cbz	r2, 800dac6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dab2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dab4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dab6:	b133      	cbz	r3, 800dac6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dab8:	f001 fa22 	bl	800ef00 <xTaskRemoveFromEventList>
 800dabc:	2800      	cmp	r0, #0
 800dabe:	d0f4      	beq.n	800daaa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800dac0:	f001 faba 	bl	800f038 <vTaskMissedYield>
 800dac4:	e7f1      	b.n	800daaa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800dac6:	23ff      	movs	r3, #255	; 0xff
 800dac8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dacc:	f7ff fbbc 	bl	800d248 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dad0:	f001 f916 	bl	800ed00 <xTaskResumeAll>
			return errQUEUE_FULL;
 800dad4:	2000      	movs	r0, #0
 800dad6:	e7b9      	b.n	800da4c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dad8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dadc:	f001 fa10 	bl	800ef00 <xTaskRemoveFromEventList>
 800dae0:	2800      	cmp	r0, #0
 800dae2:	d0b0      	beq.n	800da46 <xQueueGenericSend+0x25a>
 800dae4:	e7a5      	b.n	800da32 <xQueueGenericSend+0x246>
 800dae6:	bf00      	nop

0800dae8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800dae8:	2800      	cmp	r0, #0
 800daea:	d04b      	beq.n	800db84 <xQueueGenericSendFromISR+0x9c>
{
 800daec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800daf0:	460e      	mov	r6, r1
 800daf2:	4617      	mov	r7, r2
 800daf4:	461d      	mov	r5, r3
 800daf6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800daf8:	b321      	cbz	r1, 800db44 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dafa:	2d02      	cmp	r5, #2
 800dafc:	d10b      	bne.n	800db16 <xQueueGenericSendFromISR+0x2e>
 800dafe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800db00:	2b01      	cmp	r3, #1
 800db02:	d008      	beq.n	800db16 <xQueueGenericSendFromISR+0x2e>
 800db04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db08:	f383 8811 	msr	BASEPRI, r3
 800db0c:	f3bf 8f6f 	isb	sy
 800db10:	f3bf 8f4f 	dsb	sy
 800db14:	e7fe      	b.n	800db14 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800db16:	f7ff fca9 	bl	800d46c <vPortValidateInterruptPriority>
	__asm volatile
 800db1a:	f3ef 8811 	mrs	r8, BASEPRI
 800db1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db22:	f383 8811 	msr	BASEPRI, r3
 800db26:	f3bf 8f6f 	isb	sy
 800db2a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800db2e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800db30:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800db32:	429a      	cmp	r2, r3
 800db34:	d312      	bcc.n	800db5c <xQueueGenericSendFromISR+0x74>
 800db36:	2d02      	cmp	r5, #2
 800db38:	d010      	beq.n	800db5c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800db3a:	2000      	movs	r0, #0
	__asm volatile
 800db3c:	f388 8811 	msr	BASEPRI, r8
}
 800db40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800db44:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800db46:	2b00      	cmp	r3, #0
 800db48:	d0d7      	beq.n	800dafa <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800db4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db4e:	f383 8811 	msr	BASEPRI, r3
 800db52:	f3bf 8f6f 	isb	sy
 800db56:	f3bf 8f4f 	dsb	sy
 800db5a:	e7fe      	b.n	800db5a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800db5c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800db5e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800db62:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800db64:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800db66:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800db68:	4620      	mov	r0, r4
 800db6a:	f7ff fcad 	bl	800d4c8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800db6e:	1c6b      	adds	r3, r5, #1
 800db70:	d011      	beq.n	800db96 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800db72:	1c6b      	adds	r3, r5, #1
 800db74:	b25b      	sxtb	r3, r3
 800db76:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800db7a:	2001      	movs	r0, #1
	__asm volatile
 800db7c:	f388 8811 	msr	BASEPRI, r8
}
 800db80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800db84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db88:	f383 8811 	msr	BASEPRI, r3
 800db8c:	f3bf 8f6f 	isb	sy
 800db90:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800db94:	e7fe      	b.n	800db94 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800db98:	2b00      	cmp	r3, #0
 800db9a:	d0ee      	beq.n	800db7a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db9c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dba0:	f001 f9ae 	bl	800ef00 <xTaskRemoveFromEventList>
 800dba4:	2800      	cmp	r0, #0
 800dba6:	d0e8      	beq.n	800db7a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800dba8:	2f00      	cmp	r7, #0
 800dbaa:	d0e6      	beq.n	800db7a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dbac:	2001      	movs	r0, #1
 800dbae:	6038      	str	r0, [r7, #0]
 800dbb0:	e7c4      	b.n	800db3c <xQueueGenericSendFromISR+0x54>
 800dbb2:	bf00      	nop

0800dbb4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800dbb4:	b370      	cbz	r0, 800dc14 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dbb6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800dbb8:	b570      	push	{r4, r5, r6, lr}
 800dbba:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800dbbc:	b143      	cbz	r3, 800dbd0 <xQueueGiveFromISR+0x1c>
 800dbbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbc2:	f383 8811 	msr	BASEPRI, r3
 800dbc6:	f3bf 8f6f 	isb	sy
 800dbca:	f3bf 8f4f 	dsb	sy
 800dbce:	e7fe      	b.n	800dbce <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dbd0:	6803      	ldr	r3, [r0, #0]
 800dbd2:	460c      	mov	r4, r1
 800dbd4:	b33b      	cbz	r3, 800dc26 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dbd6:	f7ff fc49 	bl	800d46c <vPortValidateInterruptPriority>
	__asm volatile
 800dbda:	f3ef 8511 	mrs	r5, BASEPRI
 800dbde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbe2:	f383 8811 	msr	BASEPRI, r3
 800dbe6:	f3bf 8f6f 	isb	sy
 800dbea:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dbee:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800dbf0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800dbf2:	429a      	cmp	r2, r3
 800dbf4:	d923      	bls.n	800dc3e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dbf6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dbfa:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800dbfc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dbfe:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dc00:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800dc02:	d020      	beq.n	800dc46 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dc04:	3301      	adds	r3, #1
 800dc06:	b25b      	sxtb	r3, r3
 800dc08:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800dc0c:	2001      	movs	r0, #1
	__asm volatile
 800dc0e:	f385 8811 	msr	BASEPRI, r5
}
 800dc12:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800dc14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc18:	f383 8811 	msr	BASEPRI, r3
 800dc1c:	f3bf 8f6f 	isb	sy
 800dc20:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dc24:	e7fe      	b.n	800dc24 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dc26:	6883      	ldr	r3, [r0, #8]
 800dc28:	2b00      	cmp	r3, #0
 800dc2a:	d0d4      	beq.n	800dbd6 <xQueueGiveFromISR+0x22>
 800dc2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc30:	f383 8811 	msr	BASEPRI, r3
 800dc34:	f3bf 8f6f 	isb	sy
 800dc38:	f3bf 8f4f 	dsb	sy
 800dc3c:	e7fe      	b.n	800dc3c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800dc3e:	2000      	movs	r0, #0
	__asm volatile
 800dc40:	f385 8811 	msr	BASEPRI, r5
}
 800dc44:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc46:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800dc48:	2b00      	cmp	r3, #0
 800dc4a:	d0df      	beq.n	800dc0c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc4c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800dc50:	f001 f956 	bl	800ef00 <xTaskRemoveFromEventList>
 800dc54:	2800      	cmp	r0, #0
 800dc56:	d0d9      	beq.n	800dc0c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800dc58:	2c00      	cmp	r4, #0
 800dc5a:	d0d7      	beq.n	800dc0c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dc5c:	2001      	movs	r0, #1
 800dc5e:	6020      	str	r0, [r4, #0]
 800dc60:	e7ee      	b.n	800dc40 <xQueueGiveFromISR+0x8c>
 800dc62:	bf00      	nop

0800dc64 <xQueueReceive>:
{
 800dc64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dc68:	b085      	sub	sp, #20
 800dc6a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dc6c:	2800      	cmp	r0, #0
 800dc6e:	f000 815c 	beq.w	800df2a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dc72:	460f      	mov	r7, r1
 800dc74:	4604      	mov	r4, r0
 800dc76:	2900      	cmp	r1, #0
 800dc78:	d079      	beq.n	800dd6e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc7a:	f001 f9e3 	bl	800f044 <xTaskGetSchedulerState>
 800dc7e:	2800      	cmp	r0, #0
 800dc80:	f000 8081 	beq.w	800dd86 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800dc84:	f7ff fabe 	bl	800d204 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dc88:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dc8a:	2d00      	cmp	r5, #0
 800dc8c:	f040 8138 	bne.w	800df00 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dc90:	9b01      	ldr	r3, [sp, #4]
 800dc92:	2b00      	cmp	r3, #0
 800dc94:	f000 80d5 	beq.w	800de42 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc98:	a802      	add	r0, sp, #8
 800dc9a:	f001 f979 	bl	800ef90 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800dc9e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dca0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800dca4:	f7ff fad0 	bl	800d248 <vPortExitCritical>
		vTaskSuspendAll();
 800dca8:	f001 f822 	bl	800ecf0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dcac:	f7ff faaa 	bl	800d204 <vPortEnterCritical>
 800dcb0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dcb4:	2bff      	cmp	r3, #255	; 0xff
 800dcb6:	bf08      	it	eq
 800dcb8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800dcbc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dcc0:	2bff      	cmp	r3, #255	; 0xff
 800dcc2:	bf08      	it	eq
 800dcc4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800dcc8:	f7ff fabe 	bl	800d248 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dccc:	a901      	add	r1, sp, #4
 800dcce:	a802      	add	r0, sp, #8
 800dcd0:	f001 f96a 	bl	800efa8 <xTaskCheckForTimeOut>
 800dcd4:	2800      	cmp	r0, #0
 800dcd6:	d163      	bne.n	800dda0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800dcd8:	f7ff fa94 	bl	800d204 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dcdc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dcde:	2b00      	cmp	r3, #0
 800dce0:	f000 80b5 	beq.w	800de4e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800dce4:	f7ff fab0 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dce8:	f7ff fa8c 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dcec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dcf0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcf2:	2d00      	cmp	r5, #0
 800dcf4:	dc04      	bgt.n	800dd00 <xQueueReceive+0x9c>
 800dcf6:	e011      	b.n	800dd1c <xQueueReceive+0xb8>
			--cTxLock;
 800dcf8:	1e6b      	subs	r3, r5, #1
 800dcfa:	b2da      	uxtb	r2, r3
 800dcfc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcfe:	b16a      	cbz	r2, 800dd1c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd00:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd02:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd04:	b153      	cbz	r3, 800dd1c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd06:	f001 f8fb 	bl	800ef00 <xTaskRemoveFromEventList>
 800dd0a:	2800      	cmp	r0, #0
 800dd0c:	d0f4      	beq.n	800dcf8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800dd0e:	f001 f993 	bl	800f038 <vTaskMissedYield>
			--cTxLock;
 800dd12:	1e6b      	subs	r3, r5, #1
 800dd14:	b2da      	uxtb	r2, r3
 800dd16:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd18:	2a00      	cmp	r2, #0
 800dd1a:	d1f1      	bne.n	800dd00 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800dd1c:	23ff      	movs	r3, #255	; 0xff
 800dd1e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dd22:	f7ff fa91 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dd26:	f7ff fa6d 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dd2a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dd2e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd30:	2d00      	cmp	r5, #0
 800dd32:	dd14      	ble.n	800dd5e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd34:	f104 0910 	add.w	r9, r4, #16
 800dd38:	e003      	b.n	800dd42 <xQueueReceive+0xde>
				--cRxLock;
 800dd3a:	1e6b      	subs	r3, r5, #1
 800dd3c:	b2da      	uxtb	r2, r3
 800dd3e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd40:	b16a      	cbz	r2, 800dd5e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd42:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd44:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd46:	b153      	cbz	r3, 800dd5e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd48:	f001 f8da 	bl	800ef00 <xTaskRemoveFromEventList>
 800dd4c:	2800      	cmp	r0, #0
 800dd4e:	d0f4      	beq.n	800dd3a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800dd50:	f001 f972 	bl	800f038 <vTaskMissedYield>
				--cRxLock;
 800dd54:	1e6b      	subs	r3, r5, #1
 800dd56:	b2da      	uxtb	r2, r3
 800dd58:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd5a:	2a00      	cmp	r2, #0
 800dd5c:	d1f1      	bne.n	800dd42 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd5e:	23ff      	movs	r3, #255	; 0xff
 800dd60:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd64:	f7ff fa70 	bl	800d248 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dd68:	f000 ffca 	bl	800ed00 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800dd6c:	e060      	b.n	800de30 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd6e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dd70:	2b00      	cmp	r3, #0
 800dd72:	d082      	beq.n	800dc7a <xQueueReceive+0x16>
	__asm volatile
 800dd74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd78:	f383 8811 	msr	BASEPRI, r3
 800dd7c:	f3bf 8f6f 	isb	sy
 800dd80:	f3bf 8f4f 	dsb	sy
 800dd84:	e7fe      	b.n	800dd84 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dd86:	9b01      	ldr	r3, [sp, #4]
 800dd88:	2b00      	cmp	r3, #0
 800dd8a:	f43f af7b 	beq.w	800dc84 <xQueueReceive+0x20>
 800dd8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd92:	f383 8811 	msr	BASEPRI, r3
 800dd96:	f3bf 8f6f 	isb	sy
 800dd9a:	f3bf 8f4f 	dsb	sy
 800dd9e:	e7fe      	b.n	800dd9e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800dda0:	f7ff fa30 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dda4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dda8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddaa:	2d00      	cmp	r5, #0
 800ddac:	dc04      	bgt.n	800ddb8 <xQueueReceive+0x154>
 800ddae:	e011      	b.n	800ddd4 <xQueueReceive+0x170>
			--cTxLock;
 800ddb0:	1e6b      	subs	r3, r5, #1
 800ddb2:	b2da      	uxtb	r2, r3
 800ddb4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddb6:	b16a      	cbz	r2, 800ddd4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddbc:	b153      	cbz	r3, 800ddd4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddbe:	f001 f89f 	bl	800ef00 <xTaskRemoveFromEventList>
 800ddc2:	2800      	cmp	r0, #0
 800ddc4:	d0f4      	beq.n	800ddb0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800ddc6:	f001 f937 	bl	800f038 <vTaskMissedYield>
			--cTxLock;
 800ddca:	1e6b      	subs	r3, r5, #1
 800ddcc:	b2da      	uxtb	r2, r3
 800ddce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddd0:	2a00      	cmp	r2, #0
 800ddd2:	d1f1      	bne.n	800ddb8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800ddd4:	23ff      	movs	r3, #255	; 0xff
 800ddd6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ddda:	f7ff fa35 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ddde:	f7ff fa11 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dde2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dde6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dde8:	2d00      	cmp	r5, #0
 800ddea:	dd14      	ble.n	800de16 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddec:	f104 0910 	add.w	r9, r4, #16
 800ddf0:	e003      	b.n	800ddfa <xQueueReceive+0x196>
				--cRxLock;
 800ddf2:	1e6b      	subs	r3, r5, #1
 800ddf4:	b2da      	uxtb	r2, r3
 800ddf6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddf8:	b16a      	cbz	r2, 800de16 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddfa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddfc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddfe:	b153      	cbz	r3, 800de16 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de00:	f001 f87e 	bl	800ef00 <xTaskRemoveFromEventList>
 800de04:	2800      	cmp	r0, #0
 800de06:	d0f4      	beq.n	800ddf2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800de08:	f001 f916 	bl	800f038 <vTaskMissedYield>
				--cRxLock;
 800de0c:	1e6b      	subs	r3, r5, #1
 800de0e:	b2da      	uxtb	r2, r3
 800de10:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de12:	2a00      	cmp	r2, #0
 800de14:	d1f1      	bne.n	800ddfa <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800de16:	23ff      	movs	r3, #255	; 0xff
 800de18:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800de1c:	f7ff fa14 	bl	800d248 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800de20:	f000 ff6e 	bl	800ed00 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800de24:	f7ff f9ee 	bl	800d204 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800de28:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800de2a:	b153      	cbz	r3, 800de42 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800de2c:	f7ff fa0c 	bl	800d248 <vPortExitCritical>
		taskENTER_CRITICAL();
 800de30:	f7ff f9e8 	bl	800d204 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de34:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800de36:	2d00      	cmp	r5, #0
 800de38:	d162      	bne.n	800df00 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800de3a:	9b01      	ldr	r3, [sp, #4]
 800de3c:	2b00      	cmp	r3, #0
 800de3e:	f47f af31 	bne.w	800dca4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800de42:	f7ff fa01 	bl	800d248 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800de46:	2000      	movs	r0, #0
}
 800de48:	b005      	add	sp, #20
 800de4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800de4e:	f7ff f9fb 	bl	800d248 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800de52:	9901      	ldr	r1, [sp, #4]
 800de54:	4630      	mov	r0, r6
 800de56:	f000 ffc5 	bl	800ede4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800de5a:	f7ff f9d3 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800de5e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800de62:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de64:	2d00      	cmp	r5, #0
 800de66:	dc04      	bgt.n	800de72 <xQueueReceive+0x20e>
 800de68:	e011      	b.n	800de8e <xQueueReceive+0x22a>
			--cTxLock;
 800de6a:	1e6b      	subs	r3, r5, #1
 800de6c:	b2da      	uxtb	r2, r3
 800de6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de70:	b16a      	cbz	r2, 800de8e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de72:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de74:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de76:	b153      	cbz	r3, 800de8e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de78:	f001 f842 	bl	800ef00 <xTaskRemoveFromEventList>
 800de7c:	2800      	cmp	r0, #0
 800de7e:	d0f4      	beq.n	800de6a <xQueueReceive+0x206>
						vTaskMissedYield();
 800de80:	f001 f8da 	bl	800f038 <vTaskMissedYield>
			--cTxLock;
 800de84:	1e6b      	subs	r3, r5, #1
 800de86:	b2da      	uxtb	r2, r3
 800de88:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de8a:	2a00      	cmp	r2, #0
 800de8c:	d1f1      	bne.n	800de72 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800de8e:	23ff      	movs	r3, #255	; 0xff
 800de90:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800de94:	f7ff f9d8 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de98:	f7ff f9b4 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800de9c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dea0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dea2:	2d00      	cmp	r5, #0
 800dea4:	dd14      	ble.n	800ded0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dea6:	f104 0910 	add.w	r9, r4, #16
 800deaa:	e003      	b.n	800deb4 <xQueueReceive+0x250>
				--cRxLock;
 800deac:	1e6b      	subs	r3, r5, #1
 800deae:	b2da      	uxtb	r2, r3
 800deb0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800deb2:	b16a      	cbz	r2, 800ded0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800deb4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800deb6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800deb8:	b153      	cbz	r3, 800ded0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800deba:	f001 f821 	bl	800ef00 <xTaskRemoveFromEventList>
 800debe:	2800      	cmp	r0, #0
 800dec0:	d0f4      	beq.n	800deac <xQueueReceive+0x248>
					vTaskMissedYield();
 800dec2:	f001 f8b9 	bl	800f038 <vTaskMissedYield>
				--cRxLock;
 800dec6:	1e6b      	subs	r3, r5, #1
 800dec8:	b2da      	uxtb	r2, r3
 800deca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800decc:	2a00      	cmp	r2, #0
 800dece:	d1f1      	bne.n	800deb4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800ded0:	23ff      	movs	r3, #255	; 0xff
 800ded2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ded6:	f7ff f9b7 	bl	800d248 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800deda:	f000 ff11 	bl	800ed00 <xTaskResumeAll>
 800dede:	2800      	cmp	r0, #0
 800dee0:	d1a6      	bne.n	800de30 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800dee2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dee6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800deea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800deee:	f3bf 8f4f 	dsb	sy
 800def2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800def6:	f7ff f985 	bl	800d204 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800defa:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800defc:	2d00      	cmp	r5, #0
 800defe:	d09c      	beq.n	800de3a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800df00:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800df02:	b152      	cbz	r2, 800df1a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800df04:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800df06:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800df08:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800df0a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800df0c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800df0e:	bf24      	itt	cs
 800df10:	6821      	ldrcs	r1, [r4, #0]
 800df12:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800df14:	4638      	mov	r0, r7
 800df16:	f01c f9d0 	bl	802a2ba <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800df1a:	3d01      	subs	r5, #1
 800df1c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df1e:	6923      	ldr	r3, [r4, #16]
 800df20:	b963      	cbnz	r3, 800df3c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800df22:	f7ff f991 	bl	800d248 <vPortExitCritical>
				return pdPASS;
 800df26:	2001      	movs	r0, #1
 800df28:	e78e      	b.n	800de48 <xQueueReceive+0x1e4>
 800df2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df2e:	f383 8811 	msr	BASEPRI, r3
 800df32:	f3bf 8f6f 	isb	sy
 800df36:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800df3a:	e7fe      	b.n	800df3a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df3c:	f104 0010 	add.w	r0, r4, #16
 800df40:	f000 ffde 	bl	800ef00 <xTaskRemoveFromEventList>
 800df44:	2800      	cmp	r0, #0
 800df46:	d0ec      	beq.n	800df22 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800df48:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df4c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df50:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df54:	f3bf 8f4f 	dsb	sy
 800df58:	f3bf 8f6f 	isb	sy
 800df5c:	e7e1      	b.n	800df22 <xQueueReceive+0x2be>
 800df5e:	bf00      	nop

0800df60 <xQueueSemaphoreTake>:
{
 800df60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df64:	b084      	sub	sp, #16
 800df66:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800df68:	2800      	cmp	r0, #0
 800df6a:	d05c      	beq.n	800e026 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800df6c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800df6e:	4604      	mov	r4, r0
 800df70:	b147      	cbz	r7, 800df84 <xQueueSemaphoreTake+0x24>
 800df72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df76:	f383 8811 	msr	BASEPRI, r3
 800df7a:	f3bf 8f6f 	isb	sy
 800df7e:	f3bf 8f4f 	dsb	sy
 800df82:	e7fe      	b.n	800df82 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800df84:	f001 f85e 	bl	800f044 <xTaskGetSchedulerState>
 800df88:	4605      	mov	r5, r0
 800df8a:	2800      	cmp	r0, #0
 800df8c:	d054      	beq.n	800e038 <xQueueSemaphoreTake+0xd8>
 800df8e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df90:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800df94:	f7ff f936 	bl	800d204 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800df98:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800df9a:	2b00      	cmp	r3, #0
 800df9c:	f040 8148 	bne.w	800e230 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dfa0:	9b01      	ldr	r3, [sp, #4]
 800dfa2:	2b00      	cmp	r3, #0
 800dfa4:	f000 813a 	beq.w	800e21c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800dfa8:	2d00      	cmp	r5, #0
 800dfaa:	f000 809d 	beq.w	800e0e8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800dfae:	f7ff f94b 	bl	800d248 <vPortExitCritical>
		vTaskSuspendAll();
 800dfb2:	f000 fe9d 	bl	800ecf0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dfb6:	f7ff f925 	bl	800d204 <vPortEnterCritical>
 800dfba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dfbe:	2bff      	cmp	r3, #255	; 0xff
 800dfc0:	bf04      	itt	eq
 800dfc2:	2300      	moveq	r3, #0
 800dfc4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dfc8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dfcc:	2bff      	cmp	r3, #255	; 0xff
 800dfce:	bf04      	itt	eq
 800dfd0:	2300      	moveq	r3, #0
 800dfd2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800dfd6:	f7ff f937 	bl	800d248 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dfda:	a901      	add	r1, sp, #4
 800dfdc:	a802      	add	r0, sp, #8
 800dfde:	f000 ffe3 	bl	800efa8 <xTaskCheckForTimeOut>
 800dfe2:	2800      	cmp	r0, #0
 800dfe4:	d135      	bne.n	800e052 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800dfe6:	f7ff f90d 	bl	800d204 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dfea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dfec:	2b00      	cmp	r3, #0
 800dfee:	f000 80a4 	beq.w	800e13a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800dff2:	f7ff f929 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dff6:	f7ff f905 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dffa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dffe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e000:	2d00      	cmp	r5, #0
 800e002:	dc05      	bgt.n	800e010 <xQueueSemaphoreTake+0xb0>
 800e004:	e074      	b.n	800e0f0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e006:	1e6b      	subs	r3, r5, #1
 800e008:	b2da      	uxtb	r2, r3
 800e00a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e00c:	2a00      	cmp	r2, #0
 800e00e:	d06f      	beq.n	800e0f0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e010:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e012:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e014:	2b00      	cmp	r3, #0
 800e016:	d06b      	beq.n	800e0f0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e018:	f000 ff72 	bl	800ef00 <xTaskRemoveFromEventList>
 800e01c:	2800      	cmp	r0, #0
 800e01e:	d0f2      	beq.n	800e006 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e020:	f001 f80a 	bl	800f038 <vTaskMissedYield>
 800e024:	e7ef      	b.n	800e006 <xQueueSemaphoreTake+0xa6>
 800e026:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e02a:	f383 8811 	msr	BASEPRI, r3
 800e02e:	f3bf 8f6f 	isb	sy
 800e032:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e036:	e7fe      	b.n	800e036 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e038:	9b01      	ldr	r3, [sp, #4]
 800e03a:	2b00      	cmp	r3, #0
 800e03c:	f000 80d4 	beq.w	800e1e8 <xQueueSemaphoreTake+0x288>
 800e040:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e044:	f383 8811 	msr	BASEPRI, r3
 800e048:	f3bf 8f6f 	isb	sy
 800e04c:	f3bf 8f4f 	dsb	sy
 800e050:	e7fe      	b.n	800e050 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e052:	f7ff f8d7 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e056:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e05a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e05c:	2d00      	cmp	r5, #0
 800e05e:	dc04      	bgt.n	800e06a <xQueueSemaphoreTake+0x10a>
 800e060:	e011      	b.n	800e086 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e062:	1e6b      	subs	r3, r5, #1
 800e064:	b2da      	uxtb	r2, r3
 800e066:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e068:	b16a      	cbz	r2, 800e086 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e06a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e06c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e06e:	b153      	cbz	r3, 800e086 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e070:	f000 ff46 	bl	800ef00 <xTaskRemoveFromEventList>
 800e074:	2800      	cmp	r0, #0
 800e076:	d0f4      	beq.n	800e062 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e078:	f000 ffde 	bl	800f038 <vTaskMissedYield>
			--cTxLock;
 800e07c:	1e6b      	subs	r3, r5, #1
 800e07e:	b2da      	uxtb	r2, r3
 800e080:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e082:	2a00      	cmp	r2, #0
 800e084:	d1f1      	bne.n	800e06a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e086:	23ff      	movs	r3, #255	; 0xff
 800e088:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e08c:	f7ff f8dc 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e090:	f7ff f8b8 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e094:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e098:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e09a:	2d00      	cmp	r5, #0
 800e09c:	dd14      	ble.n	800e0c8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e09e:	f104 0810 	add.w	r8, r4, #16
 800e0a2:	e003      	b.n	800e0ac <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e0a4:	1e6b      	subs	r3, r5, #1
 800e0a6:	b2da      	uxtb	r2, r3
 800e0a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0aa:	b16a      	cbz	r2, 800e0c8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0ac:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0ae:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0b0:	b153      	cbz	r3, 800e0c8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0b2:	f000 ff25 	bl	800ef00 <xTaskRemoveFromEventList>
 800e0b6:	2800      	cmp	r0, #0
 800e0b8:	d0f4      	beq.n	800e0a4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e0ba:	f000 ffbd 	bl	800f038 <vTaskMissedYield>
				--cRxLock;
 800e0be:	1e6b      	subs	r3, r5, #1
 800e0c0:	b2da      	uxtb	r2, r3
 800e0c2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0c4:	2a00      	cmp	r2, #0
 800e0c6:	d1f1      	bne.n	800e0ac <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e0c8:	23ff      	movs	r3, #255	; 0xff
 800e0ca:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e0ce:	f7ff f8bb 	bl	800d248 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e0d2:	f000 fe15 	bl	800ed00 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e0d6:	f7ff f895 	bl	800d204 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e0da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e0dc:	2b00      	cmp	r3, #0
 800e0de:	d07c      	beq.n	800e1da <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e0e0:	f7ff f8b2 	bl	800d248 <vPortExitCritical>
	return xReturn;
 800e0e4:	2501      	movs	r5, #1
 800e0e6:	e755      	b.n	800df94 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e0e8:	a802      	add	r0, sp, #8
 800e0ea:	f000 ff51 	bl	800ef90 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e0ee:	e75e      	b.n	800dfae <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e0f0:	23ff      	movs	r3, #255	; 0xff
 800e0f2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e0f6:	f7ff f8a7 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e0fa:	f7ff f883 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e0fe:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e102:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e104:	2d00      	cmp	r5, #0
 800e106:	dd10      	ble.n	800e12a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e108:	f104 0810 	add.w	r8, r4, #16
 800e10c:	e003      	b.n	800e116 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e10e:	1e6b      	subs	r3, r5, #1
 800e110:	b2da      	uxtb	r2, r3
 800e112:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e114:	b14a      	cbz	r2, 800e12a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e116:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e118:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e11a:	b133      	cbz	r3, 800e12a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e11c:	f000 fef0 	bl	800ef00 <xTaskRemoveFromEventList>
 800e120:	2800      	cmp	r0, #0
 800e122:	d0f4      	beq.n	800e10e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e124:	f000 ff88 	bl	800f038 <vTaskMissedYield>
 800e128:	e7f1      	b.n	800e10e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e12a:	23ff      	movs	r3, #255	; 0xff
 800e12c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e130:	f7ff f88a 	bl	800d248 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e134:	f000 fde4 	bl	800ed00 <xTaskResumeAll>
 800e138:	e7d4      	b.n	800e0e4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e13a:	f7ff f885 	bl	800d248 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e13e:	6823      	ldr	r3, [r4, #0]
 800e140:	2b00      	cmp	r3, #0
 800e142:	d062      	beq.n	800e20a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e144:	9901      	ldr	r1, [sp, #4]
 800e146:	4630      	mov	r0, r6
 800e148:	f000 fe4c 	bl	800ede4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e14c:	f7ff f85a 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e150:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e154:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e156:	2d00      	cmp	r5, #0
 800e158:	dc04      	bgt.n	800e164 <xQueueSemaphoreTake+0x204>
 800e15a:	e00d      	b.n	800e178 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e15c:	1e6b      	subs	r3, r5, #1
 800e15e:	b2da      	uxtb	r2, r3
 800e160:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e162:	b14a      	cbz	r2, 800e178 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e164:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e166:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e168:	b133      	cbz	r3, 800e178 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e16a:	f000 fec9 	bl	800ef00 <xTaskRemoveFromEventList>
 800e16e:	2800      	cmp	r0, #0
 800e170:	d0f4      	beq.n	800e15c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e172:	f000 ff61 	bl	800f038 <vTaskMissedYield>
 800e176:	e7f1      	b.n	800e15c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e178:	23ff      	movs	r3, #255	; 0xff
 800e17a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e17e:	f7ff f863 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e182:	f7ff f83f 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e186:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e18a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e18c:	2d00      	cmp	r5, #0
 800e18e:	dd10      	ble.n	800e1b2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e190:	f104 0810 	add.w	r8, r4, #16
 800e194:	e003      	b.n	800e19e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e196:	1e6b      	subs	r3, r5, #1
 800e198:	b2da      	uxtb	r2, r3
 800e19a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e19c:	b14a      	cbz	r2, 800e1b2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e19e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1a0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1a2:	b133      	cbz	r3, 800e1b2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1a4:	f000 feac 	bl	800ef00 <xTaskRemoveFromEventList>
 800e1a8:	2800      	cmp	r0, #0
 800e1aa:	d0f4      	beq.n	800e196 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e1ac:	f000 ff44 	bl	800f038 <vTaskMissedYield>
 800e1b0:	e7f1      	b.n	800e196 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e1b2:	23ff      	movs	r3, #255	; 0xff
 800e1b4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e1b8:	f7ff f846 	bl	800d248 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e1bc:	f000 fda0 	bl	800ed00 <xTaskResumeAll>
 800e1c0:	2800      	cmp	r0, #0
 800e1c2:	d18f      	bne.n	800e0e4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e1c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e1c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e1cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e1d0:	f3bf 8f4f 	dsb	sy
 800e1d4:	f3bf 8f6f 	isb	sy
 800e1d8:	e784      	b.n	800e0e4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e1da:	f7ff f835 	bl	800d248 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e1de:	b92f      	cbnz	r7, 800e1ec <xQueueSemaphoreTake+0x28c>
}
 800e1e0:	4638      	mov	r0, r7
 800e1e2:	b004      	add	sp, #16
 800e1e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1e8:	4607      	mov	r7, r0
 800e1ea:	e6d1      	b.n	800df90 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e1ec:	f7ff f80a 	bl	800d204 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e1f0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e1f2:	b119      	cbz	r1, 800e1fc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e1f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e1f6:	6819      	ldr	r1, [r3, #0]
 800e1f8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e1fc:	68a0      	ldr	r0, [r4, #8]
 800e1fe:	f000 ffbd 	bl	800f17c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e202:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e204:	f7ff f820 	bl	800d248 <vPortExitCritical>
 800e208:	e7ea      	b.n	800e1e0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e20a:	f7fe fffb 	bl	800d204 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e20e:	68a0      	ldr	r0, [r4, #8]
 800e210:	f000 ff28 	bl	800f064 <xTaskPriorityInherit>
 800e214:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e216:	f7ff f817 	bl	800d248 <vPortExitCritical>
 800e21a:	e793      	b.n	800e144 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e21c:	b197      	cbz	r7, 800e244 <xQueueSemaphoreTake+0x2e4>
 800e21e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e222:	f383 8811 	msr	BASEPRI, r3
 800e226:	f3bf 8f6f 	isb	sy
 800e22a:	f3bf 8f4f 	dsb	sy
 800e22e:	e7fe      	b.n	800e22e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e230:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e232:	3b01      	subs	r3, #1
 800e234:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e236:	b1ca      	cbz	r2, 800e26c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e238:	6923      	ldr	r3, [r4, #16]
 800e23a:	b933      	cbnz	r3, 800e24a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e23c:	f7ff f804 	bl	800d248 <vPortExitCritical>
				return pdPASS;
 800e240:	2701      	movs	r7, #1
 800e242:	e7cd      	b.n	800e1e0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e244:	f7ff f800 	bl	800d248 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e248:	e7ca      	b.n	800e1e0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e24a:	f104 0010 	add.w	r0, r4, #16
 800e24e:	f000 fe57 	bl	800ef00 <xTaskRemoveFromEventList>
 800e252:	2800      	cmp	r0, #0
 800e254:	d0f2      	beq.n	800e23c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e256:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e25a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e25e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e262:	f3bf 8f4f 	dsb	sy
 800e266:	f3bf 8f6f 	isb	sy
 800e26a:	e7e7      	b.n	800e23c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e26c:	f000 ffda 	bl	800f224 <pvTaskIncrementMutexHeldCount>
 800e270:	60a0      	str	r0, [r4, #8]
 800e272:	e7e1      	b.n	800e238 <xQueueSemaphoreTake+0x2d8>

0800e274 <xQueueReceiveFromISR>:
{
 800e274:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e278:	b310      	cbz	r0, 800e2c0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e27a:	460e      	mov	r6, r1
 800e27c:	4617      	mov	r7, r2
 800e27e:	4604      	mov	r4, r0
 800e280:	b191      	cbz	r1, 800e2a8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e282:	f7ff f8f3 	bl	800d46c <vPortValidateInterruptPriority>
	__asm volatile
 800e286:	f3ef 8911 	mrs	r9, BASEPRI
 800e28a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e28e:	f383 8811 	msr	BASEPRI, r3
 800e292:	f3bf 8f6f 	isb	sy
 800e296:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e29a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e29c:	b9cd      	cbnz	r5, 800e2d2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e29e:	4628      	mov	r0, r5
	__asm volatile
 800e2a0:	f389 8811 	msr	BASEPRI, r9
}
 800e2a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e2a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e2aa:	2b00      	cmp	r3, #0
 800e2ac:	d0e9      	beq.n	800e282 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e2ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2b2:	f383 8811 	msr	BASEPRI, r3
 800e2b6:	f3bf 8f6f 	isb	sy
 800e2ba:	f3bf 8f4f 	dsb	sy
 800e2be:	e7fe      	b.n	800e2be <xQueueReceiveFromISR+0x4a>
 800e2c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2c4:	f383 8811 	msr	BASEPRI, r3
 800e2c8:	f3bf 8f6f 	isb	sy
 800e2cc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e2d0:	e7fe      	b.n	800e2d0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e2d2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e2d6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e2d8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e2dc:	b152      	cbz	r2, 800e2f4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2de:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e2e0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2e2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e2e4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2e6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e2e8:	bf24      	itt	cs
 800e2ea:	6821      	ldrcs	r1, [r4, #0]
 800e2ec:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e2ee:	4630      	mov	r0, r6
 800e2f0:	f01b ffe3 	bl	802a2ba <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e2f4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e2f6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e2fa:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e2fc:	d009      	beq.n	800e312 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e2fe:	f108 0301 	add.w	r3, r8, #1
 800e302:	b25b      	sxtb	r3, r3
 800e304:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e308:	2001      	movs	r0, #1
	__asm volatile
 800e30a:	f389 8811 	msr	BASEPRI, r9
}
 800e30e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e312:	6923      	ldr	r3, [r4, #16]
 800e314:	2b00      	cmp	r3, #0
 800e316:	d0f7      	beq.n	800e308 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e318:	f104 0010 	add.w	r0, r4, #16
 800e31c:	f000 fdf0 	bl	800ef00 <xTaskRemoveFromEventList>
 800e320:	2800      	cmp	r0, #0
 800e322:	d0f1      	beq.n	800e308 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e324:	2f00      	cmp	r7, #0
 800e326:	d0ef      	beq.n	800e308 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e328:	2001      	movs	r0, #1
 800e32a:	6038      	str	r0, [r7, #0]
 800e32c:	e7b8      	b.n	800e2a0 <xQueueReceiveFromISR+0x2c>
 800e32e:	bf00      	nop

0800e330 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e330:	b158      	cbz	r0, 800e34a <uxQueueMessagesWaiting+0x1a>
{
 800e332:	b510      	push	{r4, lr}
 800e334:	4604      	mov	r4, r0
 800e336:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e338:	f7fe ff64 	bl	800d204 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e33c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e33e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e340:	f7fe ff82 	bl	800d248 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e344:	9801      	ldr	r0, [sp, #4]
 800e346:	b002      	add	sp, #8
 800e348:	bd10      	pop	{r4, pc}
	__asm volatile
 800e34a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e34e:	f383 8811 	msr	BASEPRI, r3
 800e352:	f3bf 8f6f 	isb	sy
 800e356:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e35a:	e7fe      	b.n	800e35a <uxQueueMessagesWaiting+0x2a>

0800e35c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e35c:	b108      	cbz	r0, 800e362 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e35e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e360:	4770      	bx	lr
 800e362:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e366:	f383 8811 	msr	BASEPRI, r3
 800e36a:	f3bf 8f6f 	isb	sy
 800e36e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e372:	e7fe      	b.n	800e372 <uxQueueMessagesWaitingFromISR+0x16>
 800e374:	0000      	movs	r0, r0
	...

0800e378 <vQueueDelete>:
	configASSERT( pxQueue );
 800e378:	b1f0      	cbz	r0, 800e3b8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e37a:	4b21      	ldr	r3, [pc, #132]	; (800e400 <vQueueDelete+0x88>)
 800e37c:	685a      	ldr	r2, [r3, #4]
 800e37e:	4290      	cmp	r0, r2
 800e380:	d025      	beq.n	800e3ce <vQueueDelete+0x56>
 800e382:	68da      	ldr	r2, [r3, #12]
 800e384:	4290      	cmp	r0, r2
 800e386:	d02c      	beq.n	800e3e2 <vQueueDelete+0x6a>
 800e388:	695a      	ldr	r2, [r3, #20]
 800e38a:	4290      	cmp	r0, r2
 800e38c:	d02b      	beq.n	800e3e6 <vQueueDelete+0x6e>
 800e38e:	69da      	ldr	r2, [r3, #28]
 800e390:	4290      	cmp	r0, r2
 800e392:	d02a      	beq.n	800e3ea <vQueueDelete+0x72>
 800e394:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e396:	4290      	cmp	r0, r2
 800e398:	d029      	beq.n	800e3ee <vQueueDelete+0x76>
 800e39a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e39c:	4290      	cmp	r0, r2
 800e39e:	d01e      	beq.n	800e3de <vQueueDelete+0x66>
 800e3a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e3a2:	4290      	cmp	r0, r2
 800e3a4:	d025      	beq.n	800e3f2 <vQueueDelete+0x7a>
 800e3a6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e3a8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e3aa:	bf08      	it	eq
 800e3ac:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e3ae:	d00f      	beq.n	800e3d0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e3b0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e3b4:	b14b      	cbz	r3, 800e3ca <vQueueDelete+0x52>
}
 800e3b6:	4770      	bx	lr
 800e3b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3bc:	f383 8811 	msr	BASEPRI, r3
 800e3c0:	f3bf 8f6f 	isb	sy
 800e3c4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e3c8:	e7fe      	b.n	800e3c8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e3ca:	f7fe be05 	b.w	800cfd8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e3ce:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e3d0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e3f8 <vQueueDelete+0x80>
 800e3d4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e3d8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e3dc:	e7e8      	b.n	800e3b0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e3de:	2205      	movs	r2, #5
 800e3e0:	e7f6      	b.n	800e3d0 <vQueueDelete+0x58>
 800e3e2:	2201      	movs	r2, #1
 800e3e4:	e7f4      	b.n	800e3d0 <vQueueDelete+0x58>
 800e3e6:	2202      	movs	r2, #2
 800e3e8:	e7f2      	b.n	800e3d0 <vQueueDelete+0x58>
 800e3ea:	2203      	movs	r2, #3
 800e3ec:	e7f0      	b.n	800e3d0 <vQueueDelete+0x58>
 800e3ee:	2204      	movs	r2, #4
 800e3f0:	e7ee      	b.n	800e3d0 <vQueueDelete+0x58>
 800e3f2:	2206      	movs	r2, #6
 800e3f4:	e7ec      	b.n	800e3d0 <vQueueDelete+0x58>
 800e3f6:	bf00      	nop
	...
 800e400:	20012808 	.word	0x20012808

0800e404 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e404:	4b12      	ldr	r3, [pc, #72]	; (800e450 <vQueueAddToRegistry+0x4c>)
 800e406:	681a      	ldr	r2, [r3, #0]
 800e408:	b17a      	cbz	r2, 800e42a <vQueueAddToRegistry+0x26>
 800e40a:	689a      	ldr	r2, [r3, #8]
 800e40c:	b162      	cbz	r2, 800e428 <vQueueAddToRegistry+0x24>
 800e40e:	691a      	ldr	r2, [r3, #16]
 800e410:	b192      	cbz	r2, 800e438 <vQueueAddToRegistry+0x34>
 800e412:	699a      	ldr	r2, [r3, #24]
 800e414:	b192      	cbz	r2, 800e43c <vQueueAddToRegistry+0x38>
 800e416:	6a1a      	ldr	r2, [r3, #32]
 800e418:	b192      	cbz	r2, 800e440 <vQueueAddToRegistry+0x3c>
 800e41a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e41c:	b192      	cbz	r2, 800e444 <vQueueAddToRegistry+0x40>
 800e41e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e420:	b192      	cbz	r2, 800e448 <vQueueAddToRegistry+0x44>
 800e422:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e424:	b192      	cbz	r2, 800e44c <vQueueAddToRegistry+0x48>
	}
 800e426:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e428:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e42a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e42e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e432:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e436:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e438:	2202      	movs	r2, #2
 800e43a:	e7f6      	b.n	800e42a <vQueueAddToRegistry+0x26>
 800e43c:	2203      	movs	r2, #3
 800e43e:	e7f4      	b.n	800e42a <vQueueAddToRegistry+0x26>
 800e440:	2204      	movs	r2, #4
 800e442:	e7f2      	b.n	800e42a <vQueueAddToRegistry+0x26>
 800e444:	2205      	movs	r2, #5
 800e446:	e7f0      	b.n	800e42a <vQueueAddToRegistry+0x26>
 800e448:	2206      	movs	r2, #6
 800e44a:	e7ee      	b.n	800e42a <vQueueAddToRegistry+0x26>
 800e44c:	2207      	movs	r2, #7
 800e44e:	e7ec      	b.n	800e42a <vQueueAddToRegistry+0x26>
 800e450:	20012808 	.word	0x20012808

0800e454 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e454:	b570      	push	{r4, r5, r6, lr}
 800e456:	4605      	mov	r5, r0
 800e458:	460e      	mov	r6, r1
 800e45a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e45c:	f7fe fed2 	bl	800d204 <vPortEnterCritical>
 800e460:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e464:	2bff      	cmp	r3, #255	; 0xff
 800e466:	bf04      	itt	eq
 800e468:	2300      	moveq	r3, #0
 800e46a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e46e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e472:	2bff      	cmp	r3, #255	; 0xff
 800e474:	bf04      	itt	eq
 800e476:	2300      	moveq	r3, #0
 800e478:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e47c:	f7fe fee4 	bl	800d248 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e480:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e482:	2b00      	cmp	r3, #0
 800e484:	d043      	beq.n	800e50e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e486:	f7fe febd 	bl	800d204 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e48a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e48e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e490:	2c00      	cmp	r4, #0
 800e492:	dd14      	ble.n	800e4be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e494:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e498:	e003      	b.n	800e4a2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e49a:	1e63      	subs	r3, r4, #1
 800e49c:	b2da      	uxtb	r2, r3
 800e49e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4a0:	b16a      	cbz	r2, 800e4be <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e4a2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4a4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e4a6:	b153      	cbz	r3, 800e4be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4a8:	f000 fd2a 	bl	800ef00 <xTaskRemoveFromEventList>
 800e4ac:	2800      	cmp	r0, #0
 800e4ae:	d0f4      	beq.n	800e49a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e4b0:	f000 fdc2 	bl	800f038 <vTaskMissedYield>
			--cTxLock;
 800e4b4:	1e63      	subs	r3, r4, #1
 800e4b6:	b2da      	uxtb	r2, r3
 800e4b8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4ba:	2a00      	cmp	r2, #0
 800e4bc:	d1f1      	bne.n	800e4a2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e4be:	23ff      	movs	r3, #255	; 0xff
 800e4c0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e4c4:	f7fe fec0 	bl	800d248 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e4c8:	f7fe fe9c 	bl	800d204 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e4cc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e4d0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4d2:	2c00      	cmp	r4, #0
 800e4d4:	dd14      	ble.n	800e500 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4d6:	f105 0610 	add.w	r6, r5, #16
 800e4da:	e003      	b.n	800e4e4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e4dc:	1e63      	subs	r3, r4, #1
 800e4de:	b2da      	uxtb	r2, r3
 800e4e0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4e2:	b16a      	cbz	r2, 800e500 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4e4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4e6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4e8:	b153      	cbz	r3, 800e500 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4ea:	f000 fd09 	bl	800ef00 <xTaskRemoveFromEventList>
 800e4ee:	2800      	cmp	r0, #0
 800e4f0:	d0f4      	beq.n	800e4dc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e4f2:	f000 fda1 	bl	800f038 <vTaskMissedYield>
				--cRxLock;
 800e4f6:	1e63      	subs	r3, r4, #1
 800e4f8:	b2da      	uxtb	r2, r3
 800e4fa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4fc:	2a00      	cmp	r2, #0
 800e4fe:	d1f1      	bne.n	800e4e4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e500:	23ff      	movs	r3, #255	; 0xff
 800e502:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e506:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e50a:	f7fe be9d 	b.w	800d248 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e50e:	4622      	mov	r2, r4
 800e510:	4631      	mov	r1, r6
 800e512:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e516:	f000 fca9 	bl	800ee6c <vTaskPlaceOnEventListRestricted>
 800e51a:	e7b4      	b.n	800e486 <vQueueWaitForMessageRestricted+0x32>

0800e51c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e51c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e520:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e522:	f7fe fe6f 	bl	800d204 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e526:	4a34      	ldr	r2, [pc, #208]	; (800e5f8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e528:	4e34      	ldr	r6, [pc, #208]	; (800e5fc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e52a:	6813      	ldr	r3, [r2, #0]
 800e52c:	3301      	adds	r3, #1
 800e52e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e530:	6833      	ldr	r3, [r6, #0]
 800e532:	2b00      	cmp	r3, #0
 800e534:	d032      	beq.n	800e59c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e536:	4c32      	ldr	r4, [pc, #200]	; (800e600 <prvAddNewTaskToReadyList+0xe4>)
 800e538:	6823      	ldr	r3, [r4, #0]
 800e53a:	b33b      	cbz	r3, 800e58c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e53c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e53e:	4f31      	ldr	r7, [pc, #196]	; (800e604 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e540:	4a31      	ldr	r2, [pc, #196]	; (800e608 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e542:	4932      	ldr	r1, [pc, #200]	; (800e60c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e544:	6813      	ldr	r3, [r2, #0]
 800e546:	3301      	adds	r3, #1
 800e548:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e54a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e54c:	680b      	ldr	r3, [r1, #0]
 800e54e:	4283      	cmp	r3, r0
 800e550:	bf38      	it	cc
 800e552:	6008      	strcc	r0, [r1, #0]
 800e554:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e558:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e55c:	1d29      	adds	r1, r5, #4
 800e55e:	f7fe fdaf 	bl	800d0c0 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e562:	f7fe fe71 	bl	800d248 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e566:	6823      	ldr	r3, [r4, #0]
 800e568:	b173      	cbz	r3, 800e588 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e56a:	6832      	ldr	r2, [r6, #0]
 800e56c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e56e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e570:	429a      	cmp	r2, r3
 800e572:	d209      	bcs.n	800e588 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e574:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e578:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e57c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e580:	f3bf 8f4f 	dsb	sy
 800e584:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e588:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e58c:	6833      	ldr	r3, [r6, #0]
 800e58e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e590:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e592:	4f1c      	ldr	r7, [pc, #112]	; (800e604 <prvAddNewTaskToReadyList+0xe8>)
 800e594:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e596:	bf98      	it	ls
 800e598:	6035      	strls	r5, [r6, #0]
 800e59a:	e7d1      	b.n	800e540 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e59c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e59e:	6813      	ldr	r3, [r2, #0]
 800e5a0:	2b01      	cmp	r3, #1
 800e5a2:	d003      	beq.n	800e5ac <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e5a4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e5a6:	4f17      	ldr	r7, [pc, #92]	; (800e604 <prvAddNewTaskToReadyList+0xe8>)
 800e5a8:	4c15      	ldr	r4, [pc, #84]	; (800e600 <prvAddNewTaskToReadyList+0xe4>)
 800e5aa:	e7c9      	b.n	800e540 <prvAddNewTaskToReadyList+0x24>
 800e5ac:	4f15      	ldr	r7, [pc, #84]	; (800e604 <prvAddNewTaskToReadyList+0xe8>)
 800e5ae:	463c      	mov	r4, r7
 800e5b0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e5b4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e5b6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e5b8:	f7fe fd72 	bl	800d0a0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e5bc:	45a0      	cmp	r8, r4
 800e5be:	d1f9      	bne.n	800e5b4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e5c0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e624 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e5c4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e628 <prvAddNewTaskToReadyList+0x10c>
 800e5c8:	4c0d      	ldr	r4, [pc, #52]	; (800e600 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e5ca:	4648      	mov	r0, r9
 800e5cc:	f7fe fd68 	bl	800d0a0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e5d0:	4640      	mov	r0, r8
 800e5d2:	f7fe fd65 	bl	800d0a0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e5d6:	480e      	ldr	r0, [pc, #56]	; (800e610 <prvAddNewTaskToReadyList+0xf4>)
 800e5d8:	f7fe fd62 	bl	800d0a0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e5dc:	480d      	ldr	r0, [pc, #52]	; (800e614 <prvAddNewTaskToReadyList+0xf8>)
 800e5de:	f7fe fd5f 	bl	800d0a0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e5e2:	480d      	ldr	r0, [pc, #52]	; (800e618 <prvAddNewTaskToReadyList+0xfc>)
 800e5e4:	f7fe fd5c 	bl	800d0a0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e5e8:	4b0c      	ldr	r3, [pc, #48]	; (800e61c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e5ea:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e5ec:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e5f0:	4b0b      	ldr	r3, [pc, #44]	; (800e620 <prvAddNewTaskToReadyList+0x104>)
 800e5f2:	f8c3 8000 	str.w	r8, [r3]
}
 800e5f6:	e7a3      	b.n	800e540 <prvAddNewTaskToReadyList+0x24>
 800e5f8:	20012cb4 	.word	0x20012cb4
 800e5fc:	20012848 	.word	0x20012848
 800e600:	20012d10 	.word	0x20012d10
 800e604:	20012854 	.word	0x20012854
 800e608:	20012cc0 	.word	0x20012cc0
 800e60c:	20012cc4 	.word	0x20012cc4
 800e610:	20012cfc 	.word	0x20012cfc
 800e614:	20012d28 	.word	0x20012d28
 800e618:	20012d14 	.word	0x20012d14
 800e61c:	2001284c 	.word	0x2001284c
 800e620:	20012850 	.word	0x20012850
 800e624:	20012cc8 	.word	0x20012cc8
 800e628:	20012cdc 	.word	0x20012cdc

0800e62c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e62c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e630:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e632:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e636:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e63a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e63c:	4606      	mov	r6, r0
 800e63e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e640:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e642:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e644:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e646:	f01b fd12 	bl	802a06e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e64a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e64c:	f1a9 0904 	sub.w	r9, r9, #4
 800e650:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e652:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e656:	2d00      	cmp	r5, #0
 800e658:	d079      	beq.n	800e74e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e65a:	782b      	ldrb	r3, [r5, #0]
 800e65c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e660:	2b00      	cmp	r3, #0
 800e662:	d03b      	beq.n	800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e664:	786b      	ldrb	r3, [r5, #1]
 800e666:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e66a:	2b00      	cmp	r3, #0
 800e66c:	d036      	beq.n	800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e66e:	78ab      	ldrb	r3, [r5, #2]
 800e670:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e674:	b393      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e676:	78eb      	ldrb	r3, [r5, #3]
 800e678:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e67c:	b373      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e67e:	792b      	ldrb	r3, [r5, #4]
 800e680:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e684:	b353      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e686:	796b      	ldrb	r3, [r5, #5]
 800e688:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e68c:	b333      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e68e:	79ab      	ldrb	r3, [r5, #6]
 800e690:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e694:	b313      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e696:	79eb      	ldrb	r3, [r5, #7]
 800e698:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e69c:	b1f3      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e69e:	7a2b      	ldrb	r3, [r5, #8]
 800e6a0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e6a4:	b1d3      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e6a6:	7a6b      	ldrb	r3, [r5, #9]
 800e6a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e6ac:	b1b3      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e6ae:	7aab      	ldrb	r3, [r5, #10]
 800e6b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e6b4:	b193      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e6b6:	7aeb      	ldrb	r3, [r5, #11]
 800e6b8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e6bc:	b173      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e6be:	7b2b      	ldrb	r3, [r5, #12]
 800e6c0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e6c4:	b153      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e6c6:	7b6b      	ldrb	r3, [r5, #13]
 800e6c8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e6cc:	b133      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e6ce:	7bab      	ldrb	r3, [r5, #14]
 800e6d0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e6d4:	b113      	cbz	r3, 800e6dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e6d6:	7beb      	ldrb	r3, [r5, #15]
 800e6d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e6dc:	2300      	movs	r3, #0
 800e6de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e6e2:	9d08      	ldr	r5, [sp, #32]
 800e6e4:	2d37      	cmp	r5, #55	; 0x37
 800e6e6:	bf28      	it	cs
 800e6e8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e6ea:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e6ee:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e6f0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e6f2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e6f4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e6f8:	f7fe fcde 	bl	800d0b8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e6fc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e700:	f104 0018 	add.w	r0, r4, #24
 800e704:	f7fe fcd8 	bl	800d0b8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e708:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e70a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e70e:	4651      	mov	r1, sl
 800e710:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e712:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e714:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e716:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e71a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e71e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e722:	f01b fca4 	bl	802a06e <memset>
 800e726:	4b0b      	ldr	r3, [pc, #44]	; (800e754 <prvInitialiseNewTask.constprop.0+0x128>)
 800e728:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e72a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e72e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e730:	463a      	mov	r2, r7
 800e732:	4631      	mov	r1, r6
 800e734:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e736:	6625      	str	r5, [r4, #96]	; 0x60
 800e738:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e73a:	f7fe fd3b 	bl	800d1b4 <pxPortInitialiseStack>
 800e73e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e740:	f1b8 0f00 	cmp.w	r8, #0
 800e744:	d001      	beq.n	800e74a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e746:	f8c8 4000 	str.w	r4, [r8]
}
 800e74a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e74e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e752:	e7c6      	b.n	800e6e2 <prvInitialiseNewTask.constprop.0+0xb6>
 800e754:	200137d8 	.word	0x200137d8

0800e758 <prvIdleTask>:
{
 800e758:	b580      	push	{r7, lr}
 800e75a:	4d23      	ldr	r5, [pc, #140]	; (800e7e8 <prvIdleTask+0x90>)
 800e75c:	4f23      	ldr	r7, [pc, #140]	; (800e7ec <prvIdleTask+0x94>)
 800e75e:	4e24      	ldr	r6, [pc, #144]	; (800e7f0 <prvIdleTask+0x98>)
 800e760:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e7f4 <prvIdleTask+0x9c>
				taskYIELD();
 800e764:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e768:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e76c:	682b      	ldr	r3, [r5, #0]
 800e76e:	b35b      	cbz	r3, 800e7c8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e770:	f7fe fd48 	bl	800d204 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e774:	68fb      	ldr	r3, [r7, #12]
 800e776:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e778:	1d20      	adds	r0, r4, #4
 800e77a:	f7fe fcc9 	bl	800d110 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e77e:	6833      	ldr	r3, [r6, #0]
 800e780:	3b01      	subs	r3, #1
 800e782:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e784:	682b      	ldr	r3, [r5, #0]
 800e786:	3b01      	subs	r3, #1
 800e788:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e78a:	f7fe fd5d 	bl	800d248 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e78e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e792:	f01b fcb5 	bl	802a100 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e796:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e79a:	b163      	cbz	r3, 800e7b6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e79c:	2b01      	cmp	r3, #1
 800e79e:	d01e      	beq.n	800e7de <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e7a0:	2b02      	cmp	r3, #2
 800e7a2:	d0e3      	beq.n	800e76c <prvIdleTask+0x14>
 800e7a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7a8:	f383 8811 	msr	BASEPRI, r3
 800e7ac:	f3bf 8f6f 	isb	sy
 800e7b0:	f3bf 8f4f 	dsb	sy
 800e7b4:	e7fe      	b.n	800e7b4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e7b6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e7b8:	f7fe fc0e 	bl	800cfd8 <vPortFree>
				vPortFree( pxTCB );
 800e7bc:	4620      	mov	r0, r4
 800e7be:	f7fe fc0b 	bl	800cfd8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e7c2:	682b      	ldr	r3, [r5, #0]
 800e7c4:	2b00      	cmp	r3, #0
 800e7c6:	d1d3      	bne.n	800e770 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e7c8:	f8d8 3000 	ldr.w	r3, [r8]
 800e7cc:	2b01      	cmp	r3, #1
 800e7ce:	d9cd      	bls.n	800e76c <prvIdleTask+0x14>
				taskYIELD();
 800e7d0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e7d4:	f3bf 8f4f 	dsb	sy
 800e7d8:	f3bf 8f6f 	isb	sy
 800e7dc:	e7c6      	b.n	800e76c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e7de:	4620      	mov	r0, r4
 800e7e0:	f7fe fbfa 	bl	800cfd8 <vPortFree>
 800e7e4:	e7c2      	b.n	800e76c <prvIdleTask+0x14>
 800e7e6:	bf00      	nop
 800e7e8:	20012cb8 	.word	0x20012cb8
 800e7ec:	20012d28 	.word	0x20012d28
 800e7f0:	20012cb4 	.word	0x20012cb4
 800e7f4:	20012854 	.word	0x20012854

0800e7f8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e7f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e7fc:	4b47      	ldr	r3, [pc, #284]	; (800e91c <xTaskIncrementTick.part.0+0x124>)
 800e7fe:	681e      	ldr	r6, [r3, #0]
 800e800:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e802:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e804:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e806:	2e00      	cmp	r6, #0
 800e808:	d040      	beq.n	800e88c <xTaskIncrementTick.part.0+0x94>
 800e80a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800e930 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e80e:	f8db 3000 	ldr.w	r3, [fp]
 800e812:	429e      	cmp	r6, r3
 800e814:	d347      	bcc.n	800e8a6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e816:	4f42      	ldr	r7, [pc, #264]	; (800e920 <xTaskIncrementTick.part.0+0x128>)
 800e818:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800e934 <xTaskIncrementTick.part.0+0x13c>
 800e81c:	683b      	ldr	r3, [r7, #0]
 800e81e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800e938 <xTaskIncrementTick.part.0+0x140>
 800e822:	681d      	ldr	r5, [r3, #0]
 800e824:	2d00      	cmp	r5, #0
 800e826:	d073      	beq.n	800e910 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e828:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800e93c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e82c:	2500      	movs	r5, #0
 800e82e:	e022      	b.n	800e876 <xTaskIncrementTick.part.0+0x7e>
 800e830:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e832:	f7fe fc6d 	bl	800d110 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e836:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e838:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e83a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e83e:	b113      	cbz	r3, 800e846 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e840:	f7fe fc66 	bl	800d110 <uxListRemove>
 800e844:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e846:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e848:	f8d8 2000 	ldr.w	r2, [r8]
 800e84c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e850:	4293      	cmp	r3, r2
 800e852:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e856:	bf88      	it	hi
 800e858:	f8c8 3000 	strhi.w	r3, [r8]
 800e85c:	f7fe fc30 	bl	800d0c0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e860:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e864:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e866:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e868:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e86a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e86c:	4291      	cmp	r1, r2
 800e86e:	bf28      	it	cs
 800e870:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e872:	2b00      	cmp	r3, #0
 800e874:	d04c      	beq.n	800e910 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e876:	683b      	ldr	r3, [r7, #0]
 800e878:	68db      	ldr	r3, [r3, #12]
 800e87a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e87c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e87e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e880:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e882:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e884:	d2d4      	bcs.n	800e830 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e886:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e88a:	e011      	b.n	800e8b0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e88c:	4b24      	ldr	r3, [pc, #144]	; (800e920 <xTaskIncrementTick.part.0+0x128>)
 800e88e:	681a      	ldr	r2, [r3, #0]
 800e890:	6812      	ldr	r2, [r2, #0]
 800e892:	b30a      	cbz	r2, 800e8d8 <xTaskIncrementTick.part.0+0xe0>
 800e894:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e898:	f383 8811 	msr	BASEPRI, r3
 800e89c:	f3bf 8f6f 	isb	sy
 800e8a0:	f3bf 8f4f 	dsb	sy
 800e8a4:	e7fe      	b.n	800e8a4 <xTaskIncrementTick.part.0+0xac>
 800e8a6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800e934 <xTaskIncrementTick.part.0+0x13c>
 800e8aa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800e938 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800e8ae:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e8b0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800e8b4:	491b      	ldr	r1, [pc, #108]	; (800e924 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e8b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8b8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e8bc:	009b      	lsls	r3, r3, #2
 800e8be:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800e8c2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800e8c4:	2a02      	cmp	r2, #2
 800e8c6:	bf28      	it	cs
 800e8c8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800e8ca:	2b00      	cmp	r3, #0
}
 800e8cc:	bf0c      	ite	eq
 800e8ce:	4628      	moveq	r0, r5
 800e8d0:	2001      	movne	r0, #1
 800e8d2:	b003      	add	sp, #12
 800e8d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800e8d8:	4a13      	ldr	r2, [pc, #76]	; (800e928 <xTaskIncrementTick.part.0+0x130>)
 800e8da:	6818      	ldr	r0, [r3, #0]
 800e8dc:	6811      	ldr	r1, [r2, #0]
 800e8de:	6019      	str	r1, [r3, #0]
 800e8e0:	4912      	ldr	r1, [pc, #72]	; (800e92c <xTaskIncrementTick.part.0+0x134>)
 800e8e2:	6010      	str	r0, [r2, #0]
 800e8e4:	680a      	ldr	r2, [r1, #0]
 800e8e6:	3201      	adds	r2, #1
 800e8e8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e8ea:	681a      	ldr	r2, [r3, #0]
 800e8ec:	6812      	ldr	r2, [r2, #0]
 800e8ee:	b932      	cbnz	r2, 800e8fe <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e8f0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800e930 <xTaskIncrementTick.part.0+0x138>
 800e8f4:	f04f 33ff 	mov.w	r3, #4294967295
 800e8f8:	f8cb 3000 	str.w	r3, [fp]
 800e8fc:	e787      	b.n	800e80e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8fe:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e900:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800e930 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e904:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e906:	68db      	ldr	r3, [r3, #12]
 800e908:	685b      	ldr	r3, [r3, #4]
 800e90a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800e90e:	e77e      	b.n	800e80e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e910:	f04f 33ff 	mov.w	r3, #4294967295
 800e914:	f8cb 3000 	str.w	r3, [fp]
					break;
 800e918:	e7ca      	b.n	800e8b0 <xTaskIncrementTick.part.0+0xb8>
 800e91a:	bf00      	nop
 800e91c:	20012d3c 	.word	0x20012d3c
 800e920:	2001284c 	.word	0x2001284c
 800e924:	20012d40 	.word	0x20012d40
 800e928:	20012850 	.word	0x20012850
 800e92c:	20012cf4 	.word	0x20012cf4
 800e930:	20012cf0 	.word	0x20012cf0
 800e934:	20012854 	.word	0x20012854
 800e938:	20012848 	.word	0x20012848
 800e93c:	20012cc4 	.word	0x20012cc4

0800e940 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800e940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800e944:	4d41      	ldr	r5, [pc, #260]	; (800ea4c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800e946:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800e948:	f7fe fc5c 	bl	800d204 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e94c:	682b      	ldr	r3, [r5, #0]
 800e94e:	3b01      	subs	r3, #1
 800e950:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e952:	682b      	ldr	r3, [r5, #0]
 800e954:	2b00      	cmp	r3, #0
 800e956:	d161      	bne.n	800ea1c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e958:	4b3d      	ldr	r3, [pc, #244]	; (800ea50 <xTaskResumeAll.part.0+0x110>)
 800e95a:	681b      	ldr	r3, [r3, #0]
 800e95c:	2b00      	cmp	r3, #0
 800e95e:	d05d      	beq.n	800ea1c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e960:	4e3c      	ldr	r6, [pc, #240]	; (800ea54 <xTaskResumeAll.part.0+0x114>)
 800e962:	6833      	ldr	r3, [r6, #0]
 800e964:	2b00      	cmp	r3, #0
 800e966:	d06e      	beq.n	800ea46 <xTaskResumeAll.part.0+0x106>
 800e968:	4f3b      	ldr	r7, [pc, #236]	; (800ea58 <xTaskResumeAll.part.0+0x118>)
 800e96a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800ea68 <xTaskResumeAll.part.0+0x128>
 800e96e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800ea6c <xTaskResumeAll.part.0+0x12c>
 800e972:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800ea70 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e976:	68f3      	ldr	r3, [r6, #12]
 800e978:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e97a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e97e:	f104 0018 	add.w	r0, r4, #24
 800e982:	f7fe fbc5 	bl	800d110 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e986:	4658      	mov	r0, fp
 800e988:	f7fe fbc2 	bl	800d110 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e98c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e98e:	683a      	ldr	r2, [r7, #0]
 800e990:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e994:	4293      	cmp	r3, r2
 800e996:	4659      	mov	r1, fp
 800e998:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e99c:	bf88      	it	hi
 800e99e:	603b      	strhi	r3, [r7, #0]
 800e9a0:	f7fe fb8e 	bl	800d0c0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e9a4:	f8d8 3000 	ldr.w	r3, [r8]
 800e9a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e9aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9ac:	429a      	cmp	r2, r3
 800e9ae:	d33d      	bcc.n	800ea2c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800e9b0:	2301      	movs	r3, #1
 800e9b2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e9b6:	6833      	ldr	r3, [r6, #0]
 800e9b8:	2b00      	cmp	r3, #0
 800e9ba:	d1dc      	bne.n	800e976 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e9bc:	4b27      	ldr	r3, [pc, #156]	; (800ea5c <xTaskResumeAll.part.0+0x11c>)
 800e9be:	681a      	ldr	r2, [r3, #0]
 800e9c0:	6812      	ldr	r2, [r2, #0]
 800e9c2:	2a00      	cmp	r2, #0
 800e9c4:	d03a      	beq.n	800ea3c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9c6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e9c8:	4b25      	ldr	r3, [pc, #148]	; (800ea60 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9ca:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e9cc:	68d2      	ldr	r2, [r2, #12]
 800e9ce:	6852      	ldr	r2, [r2, #4]
 800e9d0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e9d2:	4e24      	ldr	r6, [pc, #144]	; (800ea64 <xTaskResumeAll.part.0+0x124>)
 800e9d4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e9d6:	b194      	cbz	r4, 800e9fe <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800e9d8:	2701      	movs	r7, #1
 800e9da:	e006      	b.n	800e9ea <xTaskResumeAll.part.0+0xaa>
 800e9dc:	f7ff ff0c 	bl	800e7f8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800e9e0:	b108      	cbz	r0, 800e9e6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800e9e2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e9e6:	3c01      	subs	r4, #1
 800e9e8:	d008      	beq.n	800e9fc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e9ea:	682b      	ldr	r3, [r5, #0]
 800e9ec:	2b00      	cmp	r3, #0
 800e9ee:	d0f5      	beq.n	800e9dc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800e9f0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e9f2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800e9f4:	f103 0301 	add.w	r3, r3, #1
 800e9f8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e9fa:	d1f6      	bne.n	800e9ea <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800e9fc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800e9fe:	f8da 3000 	ldr.w	r3, [sl]
 800ea02:	b15b      	cbz	r3, 800ea1c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800ea04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ea08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ea0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ea10:	f3bf 8f4f 	dsb	sy
 800ea14:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800ea18:	2001      	movs	r0, #1
 800ea1a:	e000      	b.n	800ea1e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800ea1c:	2000      	movs	r0, #0
 800ea1e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ea20:	f7fe fc12 	bl	800d248 <vPortExitCritical>
}
 800ea24:	9801      	ldr	r0, [sp, #4]
 800ea26:	b003      	add	sp, #12
 800ea28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ea2c:	6833      	ldr	r3, [r6, #0]
 800ea2e:	2b00      	cmp	r3, #0
 800ea30:	d1a1      	bne.n	800e976 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ea32:	4b0a      	ldr	r3, [pc, #40]	; (800ea5c <xTaskResumeAll.part.0+0x11c>)
 800ea34:	681a      	ldr	r2, [r3, #0]
 800ea36:	6812      	ldr	r2, [r2, #0]
 800ea38:	2a00      	cmp	r2, #0
 800ea3a:	d1c4      	bne.n	800e9c6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ea3c:	4b08      	ldr	r3, [pc, #32]	; (800ea60 <xTaskResumeAll.part.0+0x120>)
 800ea3e:	f04f 32ff 	mov.w	r2, #4294967295
 800ea42:	601a      	str	r2, [r3, #0]
 800ea44:	e7c5      	b.n	800e9d2 <xTaskResumeAll.part.0+0x92>
 800ea46:	f8df a028 	ldr.w	sl, [pc, #40]	; 800ea70 <xTaskResumeAll.part.0+0x130>
 800ea4a:	e7c2      	b.n	800e9d2 <xTaskResumeAll.part.0+0x92>
 800ea4c:	20012cbc 	.word	0x20012cbc
 800ea50:	20012cb4 	.word	0x20012cb4
 800ea54:	20012cfc 	.word	0x20012cfc
 800ea58:	20012cc4 	.word	0x20012cc4
 800ea5c:	2001284c 	.word	0x2001284c
 800ea60:	20012cf0 	.word	0x20012cf0
 800ea64:	20012cf8 	.word	0x20012cf8
 800ea68:	20012854 	.word	0x20012854
 800ea6c:	20012848 	.word	0x20012848
 800ea70:	20012d40 	.word	0x20012d40

0800ea74 <xTaskCreateStatic>:
	{
 800ea74:	b530      	push	{r4, r5, lr}
 800ea76:	b087      	sub	sp, #28
 800ea78:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800ea7a:	b1c4      	cbz	r4, 800eaae <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800ea7c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ea7e:	b16d      	cbz	r5, 800ea9c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ea80:	25ac      	movs	r5, #172	; 0xac
 800ea82:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800ea84:	9d05      	ldr	r5, [sp, #20]
 800ea86:	2dac      	cmp	r5, #172	; 0xac
 800ea88:	d01a      	beq.n	800eac0 <xTaskCreateStatic+0x4c>
 800ea8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea8e:	f383 8811 	msr	BASEPRI, r3
 800ea92:	f3bf 8f6f 	isb	sy
 800ea96:	f3bf 8f4f 	dsb	sy
 800ea9a:	e7fe      	b.n	800ea9a <xTaskCreateStatic+0x26>
 800ea9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eaa0:	f383 8811 	msr	BASEPRI, r3
 800eaa4:	f3bf 8f6f 	isb	sy
 800eaa8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800eaac:	e7fe      	b.n	800eaac <xTaskCreateStatic+0x38>
 800eaae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eab2:	f383 8811 	msr	BASEPRI, r3
 800eab6:	f3bf 8f6f 	isb	sy
 800eaba:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800eabe:	e7fe      	b.n	800eabe <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800eac0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800eac2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800eac4:	2402      	movs	r4, #2
 800eac6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eaca:	ac04      	add	r4, sp, #16
 800eacc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800ead0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ead2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ead4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ead6:	f7ff fda9 	bl	800e62c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800eada:	980c      	ldr	r0, [sp, #48]	; 0x30
 800eadc:	f7ff fd1e 	bl	800e51c <prvAddNewTaskToReadyList>
	}
 800eae0:	9804      	ldr	r0, [sp, #16]
 800eae2:	b007      	add	sp, #28
 800eae4:	bd30      	pop	{r4, r5, pc}
 800eae6:	bf00      	nop

0800eae8 <xTaskCreate>:
	{
 800eae8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eaec:	4607      	mov	r7, r0
 800eaee:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800eaf0:	0090      	lsls	r0, r2, #2
	{
 800eaf2:	4615      	mov	r5, r2
 800eaf4:	4688      	mov	r8, r1
 800eaf6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800eaf8:	f7fe f9b2 	bl	800ce60 <pvPortMalloc>
			if( pxStack != NULL )
 800eafc:	b1d8      	cbz	r0, 800eb36 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800eafe:	4604      	mov	r4, r0
 800eb00:	20ac      	movs	r0, #172	; 0xac
 800eb02:	f7fe f9ad 	bl	800ce60 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800eb06:	4606      	mov	r6, r0
 800eb08:	b1d0      	cbz	r0, 800eb40 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800eb0a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800eb0c:	2400      	movs	r4, #0
 800eb0e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800eb12:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800eb14:	9401      	str	r4, [sp, #4]
 800eb16:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800eb18:	9602      	str	r6, [sp, #8]
 800eb1a:	464b      	mov	r3, r9
 800eb1c:	462a      	mov	r2, r5
 800eb1e:	4641      	mov	r1, r8
 800eb20:	4638      	mov	r0, r7
 800eb22:	9400      	str	r4, [sp, #0]
 800eb24:	f7ff fd82 	bl	800e62c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800eb28:	4630      	mov	r0, r6
 800eb2a:	f7ff fcf7 	bl	800e51c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800eb2e:	2001      	movs	r0, #1
	}
 800eb30:	b005      	add	sp, #20
 800eb32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800eb36:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800eb3a:	b005      	add	sp, #20
 800eb3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800eb40:	4620      	mov	r0, r4
 800eb42:	f7fe fa49 	bl	800cfd8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800eb46:	f04f 30ff 	mov.w	r0, #4294967295
 800eb4a:	e7f1      	b.n	800eb30 <xTaskCreate+0x48>

0800eb4c <vTaskDelay>:
	{
 800eb4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800eb4e:	b950      	cbnz	r0, 800eb66 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800eb50:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb54:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb58:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb5c:	f3bf 8f4f 	dsb	sy
 800eb60:	f3bf 8f6f 	isb	sy
	}
 800eb64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800eb66:	4d1e      	ldr	r5, [pc, #120]	; (800ebe0 <vTaskDelay+0x94>)
 800eb68:	682b      	ldr	r3, [r5, #0]
 800eb6a:	b143      	cbz	r3, 800eb7e <vTaskDelay+0x32>
 800eb6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb70:	f383 8811 	msr	BASEPRI, r3
 800eb74:	f3bf 8f6f 	isb	sy
 800eb78:	f3bf 8f4f 	dsb	sy
 800eb7c:	e7fe      	b.n	800eb7c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800eb7e:	682b      	ldr	r3, [r5, #0]
 800eb80:	3301      	adds	r3, #1
 800eb82:	4604      	mov	r4, r0
 800eb84:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800eb86:	4b17      	ldr	r3, [pc, #92]	; (800ebe4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eb88:	4e17      	ldr	r6, [pc, #92]	; (800ebe8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800eb8a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eb8c:	6830      	ldr	r0, [r6, #0]
 800eb8e:	3004      	adds	r0, #4
 800eb90:	f7fe fabe 	bl	800d110 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800eb94:	6833      	ldr	r3, [r6, #0]
 800eb96:	19e4      	adds	r4, r4, r7
 800eb98:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800eb9a:	d310      	bcc.n	800ebbe <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb9c:	4b13      	ldr	r3, [pc, #76]	; (800ebec <vTaskDelay+0xa0>)
 800eb9e:	6818      	ldr	r0, [r3, #0]
 800eba0:	6831      	ldr	r1, [r6, #0]
 800eba2:	3104      	adds	r1, #4
 800eba4:	f7fe fa9c 	bl	800d0e0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800eba8:	682b      	ldr	r3, [r5, #0]
 800ebaa:	b9a3      	cbnz	r3, 800ebd6 <vTaskDelay+0x8a>
 800ebac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebb0:	f383 8811 	msr	BASEPRI, r3
 800ebb4:	f3bf 8f6f 	isb	sy
 800ebb8:	f3bf 8f4f 	dsb	sy
 800ebbc:	e7fe      	b.n	800ebbc <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ebbe:	4b0c      	ldr	r3, [pc, #48]	; (800ebf0 <vTaskDelay+0xa4>)
 800ebc0:	6818      	ldr	r0, [r3, #0]
 800ebc2:	6831      	ldr	r1, [r6, #0]
 800ebc4:	3104      	adds	r1, #4
 800ebc6:	f7fe fa8b 	bl	800d0e0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800ebca:	4b0a      	ldr	r3, [pc, #40]	; (800ebf4 <vTaskDelay+0xa8>)
 800ebcc:	681a      	ldr	r2, [r3, #0]
 800ebce:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800ebd0:	bf38      	it	cc
 800ebd2:	601c      	strcc	r4, [r3, #0]
 800ebd4:	e7e8      	b.n	800eba8 <vTaskDelay+0x5c>
 800ebd6:	f7ff feb3 	bl	800e940 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800ebda:	2800      	cmp	r0, #0
 800ebdc:	d0b8      	beq.n	800eb50 <vTaskDelay+0x4>
	}
 800ebde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ebe0:	20012cbc 	.word	0x20012cbc
 800ebe4:	20012d3c 	.word	0x20012d3c
 800ebe8:	20012848 	.word	0x20012848
 800ebec:	20012850 	.word	0x20012850
 800ebf0:	2001284c 	.word	0x2001284c
 800ebf4:	20012cf0 	.word	0x20012cf0

0800ebf8 <vTaskStartScheduler>:
{
 800ebf8:	b530      	push	{r4, r5, lr}
 800ebfa:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ebfc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ebfe:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ec00:	a906      	add	r1, sp, #24
 800ec02:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ec04:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ec08:	f7fe f90c 	bl	800ce24 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ec0c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ec10:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800ec12:	b1bb      	cbz	r3, 800ec44 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800ec14:	b16d      	cbz	r5, 800ec32 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ec16:	21ac      	movs	r1, #172	; 0xac
 800ec18:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800ec1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ec1c:	29ac      	cmp	r1, #172	; 0xac
 800ec1e:	d01a      	beq.n	800ec56 <vTaskStartScheduler+0x5e>
 800ec20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec24:	f383 8811 	msr	BASEPRI, r3
 800ec28:	f3bf 8f6f 	isb	sy
 800ec2c:	f3bf 8f4f 	dsb	sy
 800ec30:	e7fe      	b.n	800ec30 <vTaskStartScheduler+0x38>
 800ec32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec36:	f383 8811 	msr	BASEPRI, r3
 800ec3a:	f3bf 8f6f 	isb	sy
 800ec3e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ec42:	e7fe      	b.n	800ec42 <vTaskStartScheduler+0x4a>
 800ec44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec48:	f383 8811 	msr	BASEPRI, r3
 800ec4c:	f3bf 8f6f 	isb	sy
 800ec50:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ec54:	e7fe      	b.n	800ec54 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ec56:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ec58:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ec5a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ec5c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ec60:	4623      	mov	r3, r4
 800ec62:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800ec66:	491b      	ldr	r1, [pc, #108]	; (800ecd4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ec68:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ec6a:	9400      	str	r4, [sp, #0]
 800ec6c:	481a      	ldr	r0, [pc, #104]	; (800ecd8 <vTaskStartScheduler+0xe0>)
 800ec6e:	f7ff fcdd 	bl	800e62c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ec72:	4628      	mov	r0, r5
 800ec74:	f7ff fc52 	bl	800e51c <prvAddNewTaskToReadyList>
		return xReturn;
 800ec78:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800ec7a:	b1eb      	cbz	r3, 800ecb8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800ec7c:	f000 fc6e 	bl	800f55c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800ec80:	2801      	cmp	r0, #1
 800ec82:	d11b      	bne.n	800ecbc <vTaskStartScheduler+0xc4>
 800ec84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec88:	f383 8811 	msr	BASEPRI, r3
 800ec8c:	f3bf 8f6f 	isb	sy
 800ec90:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ec94:	4b11      	ldr	r3, [pc, #68]	; (800ecdc <vTaskStartScheduler+0xe4>)
 800ec96:	4a12      	ldr	r2, [pc, #72]	; (800ece0 <vTaskStartScheduler+0xe8>)
 800ec98:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800ec9a:	4912      	ldr	r1, [pc, #72]	; (800ece4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ec9c:	3358      	adds	r3, #88	; 0x58
 800ec9e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800eca0:	4a11      	ldr	r2, [pc, #68]	; (800ece8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800eca2:	4b12      	ldr	r3, [pc, #72]	; (800ecec <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800eca4:	f04f 35ff 	mov.w	r5, #4294967295
 800eca8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800ecaa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ecac:	601c      	str	r4, [r3, #0]
}
 800ecae:	b00b      	add	sp, #44	; 0x2c
 800ecb0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800ecb4:	f7fe bb38 	b.w	800d328 <xPortStartScheduler>
}
 800ecb8:	b00b      	add	sp, #44	; 0x2c
 800ecba:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ecbc:	3001      	adds	r0, #1
 800ecbe:	d1fb      	bne.n	800ecb8 <vTaskStartScheduler+0xc0>
 800ecc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecc4:	f383 8811 	msr	BASEPRI, r3
 800ecc8:	f3bf 8f6f 	isb	sy
 800eccc:	f3bf 8f4f 	dsb	sy
 800ecd0:	e7fe      	b.n	800ecd0 <vTaskStartScheduler+0xd8>
 800ecd2:	bf00      	nop
 800ecd4:	0802dca4 	.word	0x0802dca4
 800ecd8:	0800e759 	.word	0x0800e759
 800ecdc:	20012848 	.word	0x20012848
 800ece0:	20000160 	.word	0x20000160
 800ece4:	20012cf0 	.word	0x20012cf0
 800ece8:	20012d10 	.word	0x20012d10
 800ecec:	20012d3c 	.word	0x20012d3c

0800ecf0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ecf0:	4a02      	ldr	r2, [pc, #8]	; (800ecfc <vTaskSuspendAll+0xc>)
 800ecf2:	6813      	ldr	r3, [r2, #0]
 800ecf4:	3301      	adds	r3, #1
 800ecf6:	6013      	str	r3, [r2, #0]
}
 800ecf8:	4770      	bx	lr
 800ecfa:	bf00      	nop
 800ecfc:	20012cbc 	.word	0x20012cbc

0800ed00 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800ed00:	4b06      	ldr	r3, [pc, #24]	; (800ed1c <xTaskResumeAll+0x1c>)
 800ed02:	681b      	ldr	r3, [r3, #0]
 800ed04:	b943      	cbnz	r3, 800ed18 <xTaskResumeAll+0x18>
 800ed06:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed0a:	f383 8811 	msr	BASEPRI, r3
 800ed0e:	f3bf 8f6f 	isb	sy
 800ed12:	f3bf 8f4f 	dsb	sy
 800ed16:	e7fe      	b.n	800ed16 <xTaskResumeAll+0x16>
 800ed18:	f7ff be12 	b.w	800e940 <xTaskResumeAll.part.0>
 800ed1c:	20012cbc 	.word	0x20012cbc

0800ed20 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ed20:	4b01      	ldr	r3, [pc, #4]	; (800ed28 <xTaskGetTickCount+0x8>)
 800ed22:	6818      	ldr	r0, [r3, #0]
}
 800ed24:	4770      	bx	lr
 800ed26:	bf00      	nop
 800ed28:	20012d3c 	.word	0x20012d3c

0800ed2c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ed2c:	4b05      	ldr	r3, [pc, #20]	; (800ed44 <xTaskIncrementTick+0x18>)
 800ed2e:	681b      	ldr	r3, [r3, #0]
 800ed30:	b90b      	cbnz	r3, 800ed36 <xTaskIncrementTick+0xa>
 800ed32:	f7ff bd61 	b.w	800e7f8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800ed36:	4a04      	ldr	r2, [pc, #16]	; (800ed48 <xTaskIncrementTick+0x1c>)
 800ed38:	6813      	ldr	r3, [r2, #0]
 800ed3a:	3301      	adds	r3, #1
}
 800ed3c:	2000      	movs	r0, #0
		++xPendedTicks;
 800ed3e:	6013      	str	r3, [r2, #0]
}
 800ed40:	4770      	bx	lr
 800ed42:	bf00      	nop
 800ed44:	20012cbc 	.word	0x20012cbc
 800ed48:	20012cf8 	.word	0x20012cf8

0800ed4c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ed4c:	4b1f      	ldr	r3, [pc, #124]	; (800edcc <vTaskSwitchContext+0x80>)
 800ed4e:	681b      	ldr	r3, [r3, #0]
 800ed50:	b11b      	cbz	r3, 800ed5a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800ed52:	4b1f      	ldr	r3, [pc, #124]	; (800edd0 <vTaskSwitchContext+0x84>)
 800ed54:	2201      	movs	r2, #1
 800ed56:	601a      	str	r2, [r3, #0]
 800ed58:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800ed5a:	4a1d      	ldr	r2, [pc, #116]	; (800edd0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed5c:	491d      	ldr	r1, [pc, #116]	; (800edd4 <vTaskSwitchContext+0x88>)
{
 800ed5e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed60:	4c1d      	ldr	r4, [pc, #116]	; (800edd8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800ed62:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed64:	6823      	ldr	r3, [r4, #0]
 800ed66:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ed6a:	0092      	lsls	r2, r2, #2
 800ed6c:	0098      	lsls	r0, r3, #2
 800ed6e:	588a      	ldr	r2, [r1, r2]
 800ed70:	b942      	cbnz	r2, 800ed84 <vTaskSwitchContext+0x38>
 800ed72:	b313      	cbz	r3, 800edba <vTaskSwitchContext+0x6e>
 800ed74:	3b01      	subs	r3, #1
 800ed76:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ed7a:	0098      	lsls	r0, r3, #2
 800ed7c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800ed80:	2a00      	cmp	r2, #0
 800ed82:	d0f6      	beq.n	800ed72 <vTaskSwitchContext+0x26>
 800ed84:	4418      	add	r0, r3
 800ed86:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800ed8a:	4662      	mov	r2, ip
 800ed8c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800ed90:	6849      	ldr	r1, [r1, #4]
 800ed92:	f8cc 1004 	str.w	r1, [ip, #4]
 800ed96:	3208      	adds	r2, #8
 800ed98:	4291      	cmp	r1, r2
 800ed9a:	bf08      	it	eq
 800ed9c:	6849      	ldreq	r1, [r1, #4]
 800ed9e:	4a0f      	ldr	r2, [pc, #60]	; (800eddc <vTaskSwitchContext+0x90>)
 800eda0:	bf08      	it	eq
 800eda2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800eda6:	68c9      	ldr	r1, [r1, #12]
 800eda8:	6011      	str	r1, [r2, #0]
 800edaa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800edac:	6813      	ldr	r3, [r2, #0]
 800edae:	4a0c      	ldr	r2, [pc, #48]	; (800ede0 <vTaskSwitchContext+0x94>)
}
 800edb0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800edb4:	3358      	adds	r3, #88	; 0x58
 800edb6:	6013      	str	r3, [r2, #0]
}
 800edb8:	4770      	bx	lr
 800edba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edbe:	f383 8811 	msr	BASEPRI, r3
 800edc2:	f3bf 8f6f 	isb	sy
 800edc6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800edca:	e7fe      	b.n	800edca <vTaskSwitchContext+0x7e>
 800edcc:	20012cbc 	.word	0x20012cbc
 800edd0:	20012d40 	.word	0x20012d40
 800edd4:	20012854 	.word	0x20012854
 800edd8:	20012cc4 	.word	0x20012cc4
 800eddc:	20012848 	.word	0x20012848
 800ede0:	20000160 	.word	0x20000160

0800ede4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800ede4:	b1d0      	cbz	r0, 800ee1c <vTaskPlaceOnEventList+0x38>
{
 800ede6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ede8:	4d1a      	ldr	r5, [pc, #104]	; (800ee54 <vTaskPlaceOnEventList+0x70>)
 800edea:	460c      	mov	r4, r1
 800edec:	6829      	ldr	r1, [r5, #0]
 800edee:	3118      	adds	r1, #24
 800edf0:	f7fe f976 	bl	800d0e0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800edf4:	4b18      	ldr	r3, [pc, #96]	; (800ee58 <vTaskPlaceOnEventList+0x74>)
 800edf6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800edf8:	6828      	ldr	r0, [r5, #0]
 800edfa:	3004      	adds	r0, #4
 800edfc:	f7fe f988 	bl	800d110 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800ee00:	1c63      	adds	r3, r4, #1
 800ee02:	d014      	beq.n	800ee2e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ee04:	682b      	ldr	r3, [r5, #0]
 800ee06:	19a4      	adds	r4, r4, r6
 800ee08:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ee0a:	d317      	bcc.n	800ee3c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee0c:	4b13      	ldr	r3, [pc, #76]	; (800ee5c <vTaskPlaceOnEventList+0x78>)
 800ee0e:	6818      	ldr	r0, [r3, #0]
 800ee10:	6829      	ldr	r1, [r5, #0]
}
 800ee12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee16:	3104      	adds	r1, #4
 800ee18:	f7fe b962 	b.w	800d0e0 <vListInsert>
 800ee1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee20:	f383 8811 	msr	BASEPRI, r3
 800ee24:	f3bf 8f6f 	isb	sy
 800ee28:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800ee2c:	e7fe      	b.n	800ee2c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee2e:	6829      	ldr	r1, [r5, #0]
 800ee30:	480b      	ldr	r0, [pc, #44]	; (800ee60 <vTaskPlaceOnEventList+0x7c>)
}
 800ee32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee36:	3104      	adds	r1, #4
 800ee38:	f7fe b942 	b.w	800d0c0 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee3c:	4b09      	ldr	r3, [pc, #36]	; (800ee64 <vTaskPlaceOnEventList+0x80>)
 800ee3e:	6818      	ldr	r0, [r3, #0]
 800ee40:	6829      	ldr	r1, [r5, #0]
 800ee42:	3104      	adds	r1, #4
 800ee44:	f7fe f94c 	bl	800d0e0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ee48:	4b07      	ldr	r3, [pc, #28]	; (800ee68 <vTaskPlaceOnEventList+0x84>)
 800ee4a:	681a      	ldr	r2, [r3, #0]
 800ee4c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ee4e:	bf38      	it	cc
 800ee50:	601c      	strcc	r4, [r3, #0]
}
 800ee52:	bd70      	pop	{r4, r5, r6, pc}
 800ee54:	20012848 	.word	0x20012848
 800ee58:	20012d3c 	.word	0x20012d3c
 800ee5c:	20012850 	.word	0x20012850
 800ee60:	20012d14 	.word	0x20012d14
 800ee64:	2001284c 	.word	0x2001284c
 800ee68:	20012cf0 	.word	0x20012cf0

0800ee6c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800ee6c:	b330      	cbz	r0, 800eebc <vTaskPlaceOnEventListRestricted+0x50>
	{
 800ee6e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ee70:	4e1d      	ldr	r6, [pc, #116]	; (800eee8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800ee72:	460c      	mov	r4, r1
 800ee74:	6831      	ldr	r1, [r6, #0]
 800ee76:	4615      	mov	r5, r2
 800ee78:	3118      	adds	r1, #24
 800ee7a:	f7fe f921 	bl	800d0c0 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800ee7e:	4b1b      	ldr	r3, [pc, #108]	; (800eeec <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800ee80:	b985      	cbnz	r5, 800eea4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800ee82:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ee84:	6830      	ldr	r0, [r6, #0]
 800ee86:	3004      	adds	r0, #4
 800ee88:	f7fe f942 	bl	800d110 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ee8c:	6833      	ldr	r3, [r6, #0]
 800ee8e:	1964      	adds	r4, r4, r5
 800ee90:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ee92:	d31c      	bcc.n	800eece <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee94:	4b16      	ldr	r3, [pc, #88]	; (800eef0 <vTaskPlaceOnEventListRestricted+0x84>)
 800ee96:	6818      	ldr	r0, [r3, #0]
 800ee98:	6831      	ldr	r1, [r6, #0]
	}
 800ee9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee9e:	3104      	adds	r1, #4
 800eea0:	f7fe b91e 	b.w	800d0e0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800eea4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eea6:	6830      	ldr	r0, [r6, #0]
 800eea8:	3004      	adds	r0, #4
 800eeaa:	f7fe f931 	bl	800d110 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eeae:	6831      	ldr	r1, [r6, #0]
 800eeb0:	4810      	ldr	r0, [pc, #64]	; (800eef4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800eeb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eeb6:	3104      	adds	r1, #4
 800eeb8:	f7fe b902 	b.w	800d0c0 <vListInsertEnd>
 800eebc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eec0:	f383 8811 	msr	BASEPRI, r3
 800eec4:	f3bf 8f6f 	isb	sy
 800eec8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800eecc:	e7fe      	b.n	800eecc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eece:	4b0a      	ldr	r3, [pc, #40]	; (800eef8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800eed0:	6818      	ldr	r0, [r3, #0]
 800eed2:	6831      	ldr	r1, [r6, #0]
 800eed4:	3104      	adds	r1, #4
 800eed6:	f7fe f903 	bl	800d0e0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800eeda:	4b08      	ldr	r3, [pc, #32]	; (800eefc <vTaskPlaceOnEventListRestricted+0x90>)
 800eedc:	681a      	ldr	r2, [r3, #0]
 800eede:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800eee0:	bf38      	it	cc
 800eee2:	601c      	strcc	r4, [r3, #0]
	}
 800eee4:	bd70      	pop	{r4, r5, r6, pc}
 800eee6:	bf00      	nop
 800eee8:	20012848 	.word	0x20012848
 800eeec:	20012d3c 	.word	0x20012d3c
 800eef0:	20012850 	.word	0x20012850
 800eef4:	20012d14 	.word	0x20012d14
 800eef8:	2001284c 	.word	0x2001284c
 800eefc:	20012cf0 	.word	0x20012cf0

0800ef00 <xTaskRemoveFromEventList>:
{
 800ef00:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ef02:	68c3      	ldr	r3, [r0, #12]
 800ef04:	68dc      	ldr	r4, [r3, #12]
{
 800ef06:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800ef08:	2c00      	cmp	r4, #0
 800ef0a:	d02b      	beq.n	800ef64 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ef0c:	f104 0518 	add.w	r5, r4, #24
 800ef10:	4628      	mov	r0, r5
 800ef12:	f7fe f8fd 	bl	800d110 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ef16:	4b18      	ldr	r3, [pc, #96]	; (800ef78 <xTaskRemoveFromEventList+0x78>)
 800ef18:	681b      	ldr	r3, [r3, #0]
 800ef1a:	b17b      	cbz	r3, 800ef3c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ef1c:	4817      	ldr	r0, [pc, #92]	; (800ef7c <xTaskRemoveFromEventList+0x7c>)
 800ef1e:	4629      	mov	r1, r5
 800ef20:	f7fe f8ce 	bl	800d0c0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ef24:	4b16      	ldr	r3, [pc, #88]	; (800ef80 <xTaskRemoveFromEventList+0x80>)
 800ef26:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ef28:	681b      	ldr	r3, [r3, #0]
 800ef2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef2c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800ef2e:	bf85      	ittet	hi
 800ef30:	4b14      	ldrhi	r3, [pc, #80]	; (800ef84 <xTaskRemoveFromEventList+0x84>)
 800ef32:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800ef34:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800ef36:	6018      	strhi	r0, [r3, #0]
}
 800ef38:	b003      	add	sp, #12
 800ef3a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ef3c:	1d21      	adds	r1, r4, #4
 800ef3e:	4608      	mov	r0, r1
 800ef40:	9101      	str	r1, [sp, #4]
 800ef42:	f7fe f8e5 	bl	800d110 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800ef46:	4a10      	ldr	r2, [pc, #64]	; (800ef88 <xTaskRemoveFromEventList+0x88>)
 800ef48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ef4a:	6810      	ldr	r0, [r2, #0]
 800ef4c:	9901      	ldr	r1, [sp, #4]
 800ef4e:	4283      	cmp	r3, r0
 800ef50:	480e      	ldr	r0, [pc, #56]	; (800ef8c <xTaskRemoveFromEventList+0x8c>)
 800ef52:	bf88      	it	hi
 800ef54:	6013      	strhi	r3, [r2, #0]
 800ef56:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ef5a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ef5e:	f7fe f8af 	bl	800d0c0 <vListInsertEnd>
 800ef62:	e7df      	b.n	800ef24 <xTaskRemoveFromEventList+0x24>
 800ef64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef68:	f383 8811 	msr	BASEPRI, r3
 800ef6c:	f3bf 8f6f 	isb	sy
 800ef70:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800ef74:	e7fe      	b.n	800ef74 <xTaskRemoveFromEventList+0x74>
 800ef76:	bf00      	nop
 800ef78:	20012cbc 	.word	0x20012cbc
 800ef7c:	20012cfc 	.word	0x20012cfc
 800ef80:	20012848 	.word	0x20012848
 800ef84:	20012d40 	.word	0x20012d40
 800ef88:	20012cc4 	.word	0x20012cc4
 800ef8c:	20012854 	.word	0x20012854

0800ef90 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ef90:	4a03      	ldr	r2, [pc, #12]	; (800efa0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ef92:	4b04      	ldr	r3, [pc, #16]	; (800efa4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ef94:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ef96:	681b      	ldr	r3, [r3, #0]
 800ef98:	e9c0 2300 	strd	r2, r3, [r0]
}
 800ef9c:	4770      	bx	lr
 800ef9e:	bf00      	nop
 800efa0:	20012cf4 	.word	0x20012cf4
 800efa4:	20012d3c 	.word	0x20012d3c

0800efa8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800efa8:	b328      	cbz	r0, 800eff6 <xTaskCheckForTimeOut+0x4e>
{
 800efaa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efac:	460d      	mov	r5, r1
 800efae:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800efb0:	b1c1      	cbz	r1, 800efe4 <xTaskCheckForTimeOut+0x3c>
 800efb2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800efb4:	f7fe f926 	bl	800d204 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800efb8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800efba:	4a1d      	ldr	r2, [pc, #116]	; (800f030 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800efbc:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800efbe:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800efc0:	d030      	beq.n	800f024 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800efc2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f034 <xTaskCheckForTimeOut+0x8c>
 800efc6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800efca:	f8dc 7000 	ldr.w	r7, [ip]
 800efce:	42be      	cmp	r6, r7
 800efd0:	d01a      	beq.n	800f008 <xTaskCheckForTimeOut+0x60>
 800efd2:	4288      	cmp	r0, r1
 800efd4:	d818      	bhi.n	800f008 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800efd6:	2001      	movs	r0, #1
 800efd8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800efda:	f7fe f935 	bl	800d248 <vPortExitCritical>
}
 800efde:	9801      	ldr	r0, [sp, #4]
 800efe0:	b003      	add	sp, #12
 800efe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efe8:	f383 8811 	msr	BASEPRI, r3
 800efec:	f3bf 8f6f 	isb	sy
 800eff0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800eff4:	e7fe      	b.n	800eff4 <xTaskCheckForTimeOut+0x4c>
 800eff6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800effa:	f383 8811 	msr	BASEPRI, r3
 800effe:	f3bf 8f6f 	isb	sy
 800f002:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f006:	e7fe      	b.n	800f006 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f008:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f00c:	4573      	cmp	r3, lr
 800f00e:	d90b      	bls.n	800f028 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f010:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f012:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f016:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f018:	4403      	add	r3, r0
 800f01a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f01c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f01e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f022:	e7d9      	b.n	800efd8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f024:	2000      	movs	r0, #0
 800f026:	e7d7      	b.n	800efd8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f028:	2300      	movs	r3, #0
 800f02a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f02c:	2001      	movs	r0, #1
 800f02e:	e7d3      	b.n	800efd8 <xTaskCheckForTimeOut+0x30>
 800f030:	20012d3c 	.word	0x20012d3c
 800f034:	20012cf4 	.word	0x20012cf4

0800f038 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f038:	4b01      	ldr	r3, [pc, #4]	; (800f040 <vTaskMissedYield+0x8>)
 800f03a:	2201      	movs	r2, #1
 800f03c:	601a      	str	r2, [r3, #0]
}
 800f03e:	4770      	bx	lr
 800f040:	20012d40 	.word	0x20012d40

0800f044 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f044:	4b05      	ldr	r3, [pc, #20]	; (800f05c <xTaskGetSchedulerState+0x18>)
 800f046:	681b      	ldr	r3, [r3, #0]
 800f048:	b133      	cbz	r3, 800f058 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f04a:	4b05      	ldr	r3, [pc, #20]	; (800f060 <xTaskGetSchedulerState+0x1c>)
 800f04c:	6818      	ldr	r0, [r3, #0]
 800f04e:	fab0 f080 	clz	r0, r0
 800f052:	0940      	lsrs	r0, r0, #5
 800f054:	0040      	lsls	r0, r0, #1
 800f056:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f058:	2001      	movs	r0, #1
	}
 800f05a:	4770      	bx	lr
 800f05c:	20012d10 	.word	0x20012d10
 800f060:	20012cbc 	.word	0x20012cbc

0800f064 <xTaskPriorityInherit>:
	{
 800f064:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f066:	4604      	mov	r4, r0
	{
 800f068:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f06a:	b1c8      	cbz	r0, 800f0a0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f06c:	4d1d      	ldr	r5, [pc, #116]	; (800f0e4 <xTaskPriorityInherit+0x80>)
 800f06e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f070:	682a      	ldr	r2, [r5, #0]
 800f072:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f074:	4293      	cmp	r3, r2
 800f076:	d215      	bcs.n	800f0a4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f078:	6982      	ldr	r2, [r0, #24]
 800f07a:	2a00      	cmp	r2, #0
 800f07c:	db04      	blt.n	800f088 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f07e:	682a      	ldr	r2, [r5, #0]
 800f080:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f082:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f086:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f088:	4e17      	ldr	r6, [pc, #92]	; (800f0e8 <xTaskPriorityInherit+0x84>)
 800f08a:	6962      	ldr	r2, [r4, #20]
 800f08c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f090:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f094:	429a      	cmp	r2, r3
 800f096:	d00e      	beq.n	800f0b6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f098:	682b      	ldr	r3, [r5, #0]
 800f09a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f09c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f09e:	2001      	movs	r0, #1
	}
 800f0a0:	b002      	add	sp, #8
 800f0a2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f0a4:	682b      	ldr	r3, [r5, #0]
 800f0a6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f0a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f0aa:	4298      	cmp	r0, r3
 800f0ac:	bf2c      	ite	cs
 800f0ae:	2000      	movcs	r0, #0
 800f0b0:	2001      	movcc	r0, #1
	}
 800f0b2:	b002      	add	sp, #8
 800f0b4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f0b6:	1d21      	adds	r1, r4, #4
 800f0b8:	4608      	mov	r0, r1
 800f0ba:	9101      	str	r1, [sp, #4]
 800f0bc:	f7fe f828 	bl	800d110 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f0c0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f0c2:	4b0a      	ldr	r3, [pc, #40]	; (800f0ec <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f0c4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f0c6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f0c8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f0ca:	4290      	cmp	r0, r2
 800f0cc:	bf88      	it	hi
 800f0ce:	6018      	strhi	r0, [r3, #0]
 800f0d0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f0d4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f0d8:	9901      	ldr	r1, [sp, #4]
 800f0da:	f7fd fff1 	bl	800d0c0 <vListInsertEnd>
				xReturn = pdTRUE;
 800f0de:	2001      	movs	r0, #1
 800f0e0:	e7de      	b.n	800f0a0 <xTaskPriorityInherit+0x3c>
 800f0e2:	bf00      	nop
 800f0e4:	20012848 	.word	0x20012848
 800f0e8:	20012854 	.word	0x20012854
 800f0ec:	20012cc4 	.word	0x20012cc4

0800f0f0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f0f0:	b318      	cbz	r0, 800f13a <xTaskPriorityDisinherit+0x4a>
	{
 800f0f2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f0f4:	4b1e      	ldr	r3, [pc, #120]	; (800f170 <xTaskPriorityDisinherit+0x80>)
 800f0f6:	681c      	ldr	r4, [r3, #0]
 800f0f8:	4284      	cmp	r4, r0
	{
 800f0fa:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f0fc:	d008      	beq.n	800f110 <xTaskPriorityDisinherit+0x20>
 800f0fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f102:	f383 8811 	msr	BASEPRI, r3
 800f106:	f3bf 8f6f 	isb	sy
 800f10a:	f3bf 8f4f 	dsb	sy
 800f10e:	e7fe      	b.n	800f10e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f110:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f112:	b14b      	cbz	r3, 800f128 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f114:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f116:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f118:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f11a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f11c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f11e:	d000      	beq.n	800f122 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f120:	b16b      	cbz	r3, 800f13e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f122:	2000      	movs	r0, #0
	}
 800f124:	b002      	add	sp, #8
 800f126:	bd10      	pop	{r4, pc}
 800f128:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f12c:	f383 8811 	msr	BASEPRI, r3
 800f130:	f3bf 8f6f 	isb	sy
 800f134:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f138:	e7fe      	b.n	800f138 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f13a:	2000      	movs	r0, #0
	}
 800f13c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f13e:	1d21      	adds	r1, r4, #4
 800f140:	4608      	mov	r0, r1
 800f142:	9101      	str	r1, [sp, #4]
 800f144:	f7fd ffe4 	bl	800d110 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f148:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f14a:	4a0a      	ldr	r2, [pc, #40]	; (800f174 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f14c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f14e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f152:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f154:	6810      	ldr	r0, [r2, #0]
 800f156:	9901      	ldr	r1, [sp, #4]
 800f158:	4283      	cmp	r3, r0
 800f15a:	4807      	ldr	r0, [pc, #28]	; (800f178 <xTaskPriorityDisinherit+0x88>)
 800f15c:	bf88      	it	hi
 800f15e:	6013      	strhi	r3, [r2, #0]
 800f160:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f164:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f168:	f7fd ffaa 	bl	800d0c0 <vListInsertEnd>
					xReturn = pdTRUE;
 800f16c:	2001      	movs	r0, #1
		return xReturn;
 800f16e:	e7d9      	b.n	800f124 <xTaskPriorityDisinherit+0x34>
 800f170:	20012848 	.word	0x20012848
 800f174:	20012cc4 	.word	0x20012cc4
 800f178:	20012854 	.word	0x20012854

0800f17c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f17c:	2800      	cmp	r0, #0
 800f17e:	d041      	beq.n	800f204 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f180:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f182:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f184:	b083      	sub	sp, #12
 800f186:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f188:	b153      	cbz	r3, 800f1a0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f18a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f18c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f18e:	4281      	cmp	r1, r0
 800f190:	bf38      	it	cc
 800f192:	4601      	movcc	r1, r0
 800f194:	428a      	cmp	r2, r1
 800f196:	d001      	beq.n	800f19c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f198:	2b01      	cmp	r3, #1
 800f19a:	d00a      	beq.n	800f1b2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f19c:	b003      	add	sp, #12
 800f19e:	bd30      	pop	{r4, r5, pc}
 800f1a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1a4:	f383 8811 	msr	BASEPRI, r3
 800f1a8:	f3bf 8f6f 	isb	sy
 800f1ac:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f1b0:	e7fe      	b.n	800f1b0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f1b2:	4b19      	ldr	r3, [pc, #100]	; (800f218 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f1b4:	681b      	ldr	r3, [r3, #0]
 800f1b6:	42a3      	cmp	r3, r4
 800f1b8:	d025      	beq.n	800f206 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f1ba:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f1bc:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f1be:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f1c0:	bfa8      	it	ge
 800f1c2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f1c6:	4d15      	ldr	r5, [pc, #84]	; (800f21c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f1c8:	bfa8      	it	ge
 800f1ca:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f1cc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f1d0:	6961      	ldr	r1, [r4, #20]
 800f1d2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f1d6:	4299      	cmp	r1, r3
 800f1d8:	d1e0      	bne.n	800f19c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f1da:	1d21      	adds	r1, r4, #4
 800f1dc:	4608      	mov	r0, r1
 800f1de:	9101      	str	r1, [sp, #4]
 800f1e0:	f7fd ff96 	bl	800d110 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f1e4:	4b0e      	ldr	r3, [pc, #56]	; (800f220 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f1e6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f1e8:	681a      	ldr	r2, [r3, #0]
 800f1ea:	9901      	ldr	r1, [sp, #4]
 800f1ec:	4290      	cmp	r0, r2
 800f1ee:	bf88      	it	hi
 800f1f0:	6018      	strhi	r0, [r3, #0]
 800f1f2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f1f6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f1fa:	b003      	add	sp, #12
 800f1fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f200:	f7fd bf5e 	b.w	800d0c0 <vListInsertEnd>
 800f204:	4770      	bx	lr
 800f206:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f20a:	f383 8811 	msr	BASEPRI, r3
 800f20e:	f3bf 8f6f 	isb	sy
 800f212:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f216:	e7fe      	b.n	800f216 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f218:	20012848 	.word	0x20012848
 800f21c:	20012854 	.word	0x20012854
 800f220:	20012cc4 	.word	0x20012cc4

0800f224 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f224:	4b04      	ldr	r3, [pc, #16]	; (800f238 <pvTaskIncrementMutexHeldCount+0x14>)
 800f226:	681a      	ldr	r2, [r3, #0]
 800f228:	b11a      	cbz	r2, 800f232 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f22a:	6819      	ldr	r1, [r3, #0]
 800f22c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f22e:	3201      	adds	r2, #1
 800f230:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f232:	6818      	ldr	r0, [r3, #0]
	}
 800f234:	4770      	bx	lr
 800f236:	bf00      	nop
 800f238:	20012848 	.word	0x20012848

0800f23c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f23c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f240:	4e22      	ldr	r6, [pc, #136]	; (800f2cc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f242:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f2d4 <prvSwitchTimerLists+0x98>
{
 800f246:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f248:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f24c:	e00d      	b.n	800f26a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f24e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f250:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f252:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f254:	1d25      	adds	r5, r4, #4
 800f256:	4628      	mov	r0, r5
 800f258:	f7fd ff5a 	bl	800d110 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f25c:	6a23      	ldr	r3, [r4, #32]
 800f25e:	4620      	mov	r0, r4
 800f260:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f262:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f266:	075b      	lsls	r3, r3, #29
 800f268:	d40a      	bmi.n	800f280 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f26a:	6833      	ldr	r3, [r6, #0]
 800f26c:	681a      	ldr	r2, [r3, #0]
 800f26e:	2a00      	cmp	r2, #0
 800f270:	d1ed      	bne.n	800f24e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f272:	4a17      	ldr	r2, [pc, #92]	; (800f2d0 <prvSwitchTimerLists+0x94>)
 800f274:	6811      	ldr	r1, [r2, #0]
 800f276:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f278:	6013      	str	r3, [r2, #0]
}
 800f27a:	b005      	add	sp, #20
 800f27c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f280:	69a3      	ldr	r3, [r4, #24]
 800f282:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f284:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f286:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f288:	d205      	bcs.n	800f296 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f28a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f28c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f28e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f290:	f7fd ff26 	bl	800d0e0 <vListInsert>
 800f294:	e7e9      	b.n	800f26a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f296:	f8d9 3000 	ldr.w	r3, [r9]
 800f29a:	b16b      	cbz	r3, 800f2b8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f29c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f2a0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f2a2:	f7ff fecf 	bl	800f044 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f2a6:	2300      	movs	r3, #0
 800f2a8:	f8d9 0000 	ldr.w	r0, [r9]
 800f2ac:	461a      	mov	r2, r3
 800f2ae:	4669      	mov	r1, sp
 800f2b0:	f7fe fa9c 	bl	800d7ec <xQueueGenericSend>
				configASSERT( xResult );
 800f2b4:	2800      	cmp	r0, #0
 800f2b6:	d1d8      	bne.n	800f26a <prvSwitchTimerLists+0x2e>
 800f2b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2bc:	f383 8811 	msr	BASEPRI, r3
 800f2c0:	f3bf 8f6f 	isb	sy
 800f2c4:	f3bf 8f4f 	dsb	sy
 800f2c8:	e7fe      	b.n	800f2c8 <prvSwitchTimerLists+0x8c>
 800f2ca:	bf00      	nop
 800f2cc:	20012d44 	.word	0x20012d44
 800f2d0:	20012d48 	.word	0x20012d48
 800f2d4:	20012e68 	.word	0x20012e68

0800f2d8 <prvTimerTask>:
{
 800f2d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2dc:	4e9b      	ldr	r6, [pc, #620]	; (800f54c <prvTimerTask+0x274>)
 800f2de:	4d9c      	ldr	r5, [pc, #624]	; (800f550 <prvTimerTask+0x278>)
 800f2e0:	4c9c      	ldr	r4, [pc, #624]	; (800f554 <prvTimerTask+0x27c>)
 800f2e2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f2e4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f2e8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f2ec:	6833      	ldr	r3, [r6, #0]
 800f2ee:	681f      	ldr	r7, [r3, #0]
 800f2f0:	2f00      	cmp	r7, #0
 800f2f2:	f000 80a8 	beq.w	800f446 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f2f6:	68db      	ldr	r3, [r3, #12]
 800f2f8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f2fa:	f7ff fcf9 	bl	800ecf0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f2fe:	f7ff fd0f 	bl	800ed20 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f302:	682a      	ldr	r2, [r5, #0]
 800f304:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f306:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f308:	f0c0 80ae 	bcc.w	800f468 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f30c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f30e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f310:	f240 80b4 	bls.w	800f47c <prvTimerTask+0x1a4>
 800f314:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f316:	6820      	ldr	r0, [r4, #0]
 800f318:	eba7 010a 	sub.w	r1, r7, sl
 800f31c:	f7ff f89a 	bl	800e454 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f320:	f7ff fcee 	bl	800ed00 <xTaskResumeAll>
 800f324:	b928      	cbnz	r0, 800f332 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f326:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f32a:	f3bf 8f4f 	dsb	sy
 800f32e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f332:	6820      	ldr	r0, [r4, #0]
 800f334:	2200      	movs	r2, #0
 800f336:	a902      	add	r1, sp, #8
 800f338:	f7fe fc94 	bl	800dc64 <xQueueReceive>
 800f33c:	2800      	cmp	r0, #0
 800f33e:	d0d5      	beq.n	800f2ec <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f340:	9b02      	ldr	r3, [sp, #8]
 800f342:	2b00      	cmp	r3, #0
 800f344:	db76      	blt.n	800f434 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f346:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f348:	697b      	ldr	r3, [r7, #20]
 800f34a:	b113      	cbz	r3, 800f352 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f34c:	1d38      	adds	r0, r7, #4
 800f34e:	f7fd fedf 	bl	800d110 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f352:	f7ff fce5 	bl	800ed20 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f356:	682b      	ldr	r3, [r5, #0]
 800f358:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f35a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f35c:	f0c0 808b 	bcc.w	800f476 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f360:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f362:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f366:	2b09      	cmp	r3, #9
 800f368:	d8e3      	bhi.n	800f332 <prvTimerTask+0x5a>
 800f36a:	e8df f003 	tbb	[pc, r3]
 800f36e:	0505      	.short	0x0505
 800f370:	5a3d5305 	.word	0x5a3d5305
 800f374:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f378:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f37c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f37e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f380:	f043 0301 	orr.w	r3, r3, #1
 800f384:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f388:	9b03      	ldr	r3, [sp, #12]
 800f38a:	1899      	adds	r1, r3, r2
 800f38c:	bf2c      	ite	cs
 800f38e:	2001      	movcs	r0, #1
 800f390:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f392:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f394:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f396:	f200 808c 	bhi.w	800f4b2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f39a:	ebaa 0303 	sub.w	r3, sl, r3
 800f39e:	429a      	cmp	r2, r3
 800f3a0:	d832      	bhi.n	800f408 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f3a2:	6a3b      	ldr	r3, [r7, #32]
 800f3a4:	4638      	mov	r0, r7
 800f3a6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f3a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f3ac:	075b      	lsls	r3, r3, #29
 800f3ae:	d5c0      	bpl.n	800f332 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f3b0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f3b2:	9903      	ldr	r1, [sp, #12]
 800f3b4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f3b6:	b172      	cbz	r2, 800f3d6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f3b8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f3ba:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f3be:	2300      	movs	r3, #0
 800f3c0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f3c2:	f7ff fe3f 	bl	800f044 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f3c6:	2300      	movs	r3, #0
 800f3c8:	6820      	ldr	r0, [r4, #0]
 800f3ca:	461a      	mov	r2, r3
 800f3cc:	a906      	add	r1, sp, #24
 800f3ce:	f7fe fa0d 	bl	800d7ec <xQueueGenericSend>
							configASSERT( xResult );
 800f3d2:	2800      	cmp	r0, #0
 800f3d4:	d1ad      	bne.n	800f332 <prvTimerTask+0x5a>
 800f3d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3da:	f383 8811 	msr	BASEPRI, r3
 800f3de:	f3bf 8f6f 	isb	sy
 800f3e2:	f3bf 8f4f 	dsb	sy
 800f3e6:	e7fe      	b.n	800f3e6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f3e8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f3ec:	f043 0301 	orr.w	r3, r3, #1
 800f3f0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f3f4:	9b03      	ldr	r3, [sp, #12]
 800f3f6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f3f8:	2b00      	cmp	r3, #0
 800f3fa:	f000 809d 	beq.w	800f538 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f3fe:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f400:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f402:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f404:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f406:	d85e      	bhi.n	800f4c6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f408:	4b53      	ldr	r3, [pc, #332]	; (800f558 <prvTimerTask+0x280>)
 800f40a:	1d39      	adds	r1, r7, #4
 800f40c:	6818      	ldr	r0, [r3, #0]
 800f40e:	f7fd fe67 	bl	800d0e0 <vListInsert>
	return xProcessTimerNow;
 800f412:	e78e      	b.n	800f332 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f414:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f418:	f023 0301 	bic.w	r3, r3, #1
 800f41c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f420:	e787      	b.n	800f332 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f422:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f426:	079a      	lsls	r2, r3, #30
 800f428:	d552      	bpl.n	800f4d0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f42a:	f023 0301 	bic.w	r3, r3, #1
 800f42e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f432:	e77e      	b.n	800f332 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f434:	9b03      	ldr	r3, [sp, #12]
 800f436:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f43a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f43c:	9b02      	ldr	r3, [sp, #8]
 800f43e:	2b00      	cmp	r3, #0
 800f440:	f6ff af77 	blt.w	800f332 <prvTimerTask+0x5a>
 800f444:	e77f      	b.n	800f346 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f446:	f7ff fc53 	bl	800ecf0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f44a:	f7ff fc69 	bl	800ed20 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f44e:	682a      	ldr	r2, [r5, #0]
 800f450:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f452:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f454:	d808      	bhi.n	800f468 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f456:	4b40      	ldr	r3, [pc, #256]	; (800f558 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f458:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f45c:	681a      	ldr	r2, [r3, #0]
 800f45e:	6812      	ldr	r2, [r2, #0]
 800f460:	fab2 f282 	clz	r2, r2
 800f464:	0952      	lsrs	r2, r2, #5
 800f466:	e756      	b.n	800f316 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f468:	f7ff fee8 	bl	800f23c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f46c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f470:	f7ff fc46 	bl	800ed00 <xTaskResumeAll>
 800f474:	e75d      	b.n	800f332 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f476:	f7ff fee1 	bl	800f23c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f47a:	e771      	b.n	800f360 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f47c:	f7ff fc40 	bl	800ed00 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f480:	6832      	ldr	r2, [r6, #0]
 800f482:	68d2      	ldr	r2, [r2, #12]
 800f484:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f488:	f10b 0104 	add.w	r1, fp, #4
 800f48c:	4608      	mov	r0, r1
 800f48e:	9101      	str	r1, [sp, #4]
 800f490:	f7fd fe3e 	bl	800d110 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f494:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f498:	9901      	ldr	r1, [sp, #4]
 800f49a:	f010 0f04 	tst.w	r0, #4
 800f49e:	d11b      	bne.n	800f4d8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f4a0:	f020 0001 	bic.w	r0, r0, #1
 800f4a4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f4a8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f4ac:	4658      	mov	r0, fp
 800f4ae:	4798      	blx	r3
}
 800f4b0:	e73f      	b.n	800f332 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f4b2:	4553      	cmp	r3, sl
 800f4b4:	d902      	bls.n	800f4bc <prvTimerTask+0x1e4>
 800f4b6:	2800      	cmp	r0, #0
 800f4b8:	f43f af73 	beq.w	800f3a2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4bc:	6830      	ldr	r0, [r6, #0]
 800f4be:	1d39      	adds	r1, r7, #4
 800f4c0:	f7fd fe0e 	bl	800d0e0 <vListInsert>
	return xProcessTimerNow;
 800f4c4:	e735      	b.n	800f332 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4c6:	6830      	ldr	r0, [r6, #0]
 800f4c8:	1d39      	adds	r1, r7, #4
 800f4ca:	f7fd fe09 	bl	800d0e0 <vListInsert>
 800f4ce:	e730      	b.n	800f332 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f4d0:	4638      	mov	r0, r7
 800f4d2:	f7fd fd81 	bl	800cfd8 <vPortFree>
 800f4d6:	e72c      	b.n	800f332 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f4d8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f4dc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f4e0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f4e2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f4e4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f4e8:	d903      	bls.n	800f4f2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4ea:	6830      	ldr	r0, [r6, #0]
 800f4ec:	f7fd fdf8 	bl	800d0e0 <vListInsert>
	return xProcessTimerNow;
 800f4f0:	e7da      	b.n	800f4a8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4f2:	ebaa 0307 	sub.w	r3, sl, r7
 800f4f6:	429a      	cmp	r2, r3
 800f4f8:	d819      	bhi.n	800f52e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f4fa:	6823      	ldr	r3, [r4, #0]
 800f4fc:	b173      	cbz	r3, 800f51c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f4fe:	2300      	movs	r3, #0
 800f500:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f502:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f504:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f508:	f7ff fd9c 	bl	800f044 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f50c:	2300      	movs	r3, #0
 800f50e:	6820      	ldr	r0, [r4, #0]
 800f510:	461a      	mov	r2, r3
 800f512:	a906      	add	r1, sp, #24
 800f514:	f7fe f96a 	bl	800d7ec <xQueueGenericSend>
			configASSERT( xResult );
 800f518:	2800      	cmp	r0, #0
 800f51a:	d1c5      	bne.n	800f4a8 <prvTimerTask+0x1d0>
 800f51c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f520:	f383 8811 	msr	BASEPRI, r3
 800f524:	f3bf 8f6f 	isb	sy
 800f528:	f3bf 8f4f 	dsb	sy
 800f52c:	e7fe      	b.n	800f52c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f52e:	4b0a      	ldr	r3, [pc, #40]	; (800f558 <prvTimerTask+0x280>)
 800f530:	6818      	ldr	r0, [r3, #0]
 800f532:	f7fd fdd5 	bl	800d0e0 <vListInsert>
	return xProcessTimerNow;
 800f536:	e7b7      	b.n	800f4a8 <prvTimerTask+0x1d0>
 800f538:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f53c:	f383 8811 	msr	BASEPRI, r3
 800f540:	f3bf 8f6f 	isb	sy
 800f544:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f548:	e7fe      	b.n	800f548 <prvTimerTask+0x270>
 800f54a:	bf00      	nop
 800f54c:	20012d44 	.word	0x20012d44
 800f550:	20012e14 	.word	0x20012e14
 800f554:	20012e68 	.word	0x20012e68
 800f558:	20012d48 	.word	0x20012d48

0800f55c <xTimerCreateTimerTask>:
{
 800f55c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f55e:	4c23      	ldr	r4, [pc, #140]	; (800f5ec <xTimerCreateTimerTask+0x90>)
{
 800f560:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f562:	f7fd fe4f 	bl	800d204 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f566:	6825      	ldr	r5, [r4, #0]
 800f568:	b335      	cbz	r5, 800f5b8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f56a:	f7fd fe6d 	bl	800d248 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f56e:	6823      	ldr	r3, [r4, #0]
 800f570:	b1cb      	cbz	r3, 800f5a6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f572:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f574:	aa07      	add	r2, sp, #28
 800f576:	a906      	add	r1, sp, #24
 800f578:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f57a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f57e:	f7fd fc5f 	bl	800ce40 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f582:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f586:	2302      	movs	r3, #2
 800f588:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f58c:	9300      	str	r3, [sp, #0]
 800f58e:	9a07      	ldr	r2, [sp, #28]
 800f590:	4917      	ldr	r1, [pc, #92]	; (800f5f0 <xTimerCreateTimerTask+0x94>)
 800f592:	4818      	ldr	r0, [pc, #96]	; (800f5f4 <xTimerCreateTimerTask+0x98>)
 800f594:	4623      	mov	r3, r4
 800f596:	f7ff fa6d 	bl	800ea74 <xTaskCreateStatic>
 800f59a:	4b17      	ldr	r3, [pc, #92]	; (800f5f8 <xTimerCreateTimerTask+0x9c>)
 800f59c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f59e:	b110      	cbz	r0, 800f5a6 <xTimerCreateTimerTask+0x4a>
}
 800f5a0:	2001      	movs	r0, #1
 800f5a2:	b009      	add	sp, #36	; 0x24
 800f5a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f5a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5aa:	f383 8811 	msr	BASEPRI, r3
 800f5ae:	f3bf 8f6f 	isb	sy
 800f5b2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f5b6:	e7fe      	b.n	800f5b6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f5b8:	4f10      	ldr	r7, [pc, #64]	; (800f5fc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f5ba:	4e11      	ldr	r6, [pc, #68]	; (800f600 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f5bc:	4638      	mov	r0, r7
 800f5be:	f7fd fd6f 	bl	800d0a0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f5c2:	4630      	mov	r0, r6
 800f5c4:	f7fd fd6c 	bl	800d0a0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f5c8:	4a0e      	ldr	r2, [pc, #56]	; (800f604 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f5ca:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f5cc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f5ce:	4a0e      	ldr	r2, [pc, #56]	; (800f608 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f5d0:	4b0e      	ldr	r3, [pc, #56]	; (800f60c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f5d2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f5d4:	2110      	movs	r1, #16
 800f5d6:	4a0e      	ldr	r2, [pc, #56]	; (800f610 <xTimerCreateTimerTask+0xb4>)
 800f5d8:	200a      	movs	r0, #10
 800f5da:	f7fd ffb1 	bl	800d540 <xQueueGenericCreateStatic>
 800f5de:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f5e0:	2800      	cmp	r0, #0
 800f5e2:	d0c2      	beq.n	800f56a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f5e4:	490b      	ldr	r1, [pc, #44]	; (800f614 <xTimerCreateTimerTask+0xb8>)
 800f5e6:	f7fe ff0d 	bl	800e404 <vQueueAddToRegistry>
 800f5ea:	e7be      	b.n	800f56a <xTimerCreateTimerTask+0xe>
 800f5ec:	20012e68 	.word	0x20012e68
 800f5f0:	0802dcb4 	.word	0x0802dcb4
 800f5f4:	0800f2d9 	.word	0x0800f2d9
 800f5f8:	20012e6c 	.word	0x20012e6c
 800f5fc:	20012dec 	.word	0x20012dec
 800f600:	20012e00 	.word	0x20012e00
 800f604:	20012d44 	.word	0x20012d44
 800f608:	20012d48 	.word	0x20012d48
 800f60c:	20012e18 	.word	0x20012e18
 800f610:	20012d4c 	.word	0x20012d4c
 800f614:	0802dcac 	.word	0x0802dcac

0800f618 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f618:	8880      	ldrh	r0, [r0, #4]
 800f61a:	4770      	bx	lr

0800f61c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f61c:	b570      	push	{r4, r5, r6, lr}
 800f61e:	6803      	ldr	r3, [r0, #0]
 800f620:	4605      	mov	r5, r0
 800f622:	460c      	mov	r4, r1
 800f624:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f626:	2100      	movs	r1, #0
 800f628:	4798      	blx	r3
 800f62a:	682b      	ldr	r3, [r5, #0]
 800f62c:	4606      	mov	r6, r0
 800f62e:	6a1b      	ldr	r3, [r3, #32]
 800f630:	4628      	mov	r0, r5
 800f632:	4798      	blx	r3
 800f634:	1ba4      	subs	r4, r4, r6
 800f636:	b2a4      	uxth	r4, r4
 800f638:	fbb4 f0f0 	udiv	r0, r4, r0
 800f63c:	bd70      	pop	{r4, r5, r6, pc}

0800f63e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f63e:	2300      	movs	r3, #0
 800f640:	8083      	strh	r3, [r0, #4]
 800f642:	4770      	bx	lr

0800f644 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f644:	b510      	push	{r4, lr}
 800f646:	6803      	ldr	r3, [r0, #0]
 800f648:	8881      	ldrh	r1, [r0, #4]
 800f64a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f64c:	4604      	mov	r4, r0
 800f64e:	4798      	blx	r3
 800f650:	88a3      	ldrh	r3, [r4, #4]
 800f652:	3301      	adds	r3, #1
 800f654:	80a3      	strh	r3, [r4, #4]
 800f656:	bd10      	pop	{r4, pc}

0800f658 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f658:	6803      	ldr	r3, [r0, #0]
 800f65a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f65c:	4718      	bx	r3

0800f65e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f65e:	4770      	bx	lr

0800f660 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f660:	4a02      	ldr	r2, [pc, #8]	; (800f66c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f662:	6002      	str	r2, [r0, #0]
 800f664:	2200      	movs	r2, #0
 800f666:	8082      	strh	r2, [r0, #4]
 800f668:	4770      	bx	lr
 800f66a:	bf00      	nop
 800f66c:	0802dcc4 	.word	0x0802dcc4

0800f670 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f670:	b510      	push	{r4, lr}
 800f672:	6803      	ldr	r3, [r0, #0]
 800f674:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f678:	4604      	mov	r4, r0
 800f67a:	4798      	blx	r3
 800f67c:	b110      	cbz	r0, 800f684 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f67e:	4620      	mov	r0, r4
 800f680:	f7f1 fcce 	bl	8001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f684:	bd10      	pop	{r4, pc}

0800f686 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f686:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f68a:	4770      	bx	lr

0800f68c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f68c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f690:	4770      	bx	lr

0800f692 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f692:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f696:	4770      	bx	lr

0800f698 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f698:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f69c:	4770      	bx	lr

0800f69e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f69e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f6a0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f6a4:	461e      	mov	r6, r3
 800f6a6:	6803      	ldr	r3, [r0, #0]
 800f6a8:	460f      	mov	r7, r1
 800f6aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f6ae:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f6b2:	4604      	mov	r4, r0
 800f6b4:	4615      	mov	r5, r2
 800f6b6:	4798      	blx	r3
 800f6b8:	b93e      	cbnz	r6, 800f6ca <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f6ba:	1bed      	subs	r5, r5, r7
 800f6bc:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f6c0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f6c4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f6c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f6ca:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f6ce:	e7f7      	b.n	800f6c0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f6d0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f6d0:	b510      	push	{r4, lr}
 800f6d2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f6d6:	600c      	str	r4, [r1, #0]
 800f6d8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f6dc:	6011      	str	r1, [r2, #0]
 800f6de:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f6e2:	801a      	strh	r2, [r3, #0]
 800f6e4:	9b02      	ldr	r3, [sp, #8]
 800f6e6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f6ea:	801a      	strh	r2, [r3, #0]
 800f6ec:	bd10      	pop	{r4, pc}

0800f6ee <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f6ee:	b510      	push	{r4, lr}
 800f6f0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f6f4:	600c      	str	r4, [r1, #0]
 800f6f6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f6fa:	6011      	str	r1, [r2, #0]
 800f6fc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f700:	801a      	strh	r2, [r3, #0]
 800f702:	bd10      	pop	{r4, pc}

0800f704 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f704:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f708:	600b      	str	r3, [r1, #0]
 800f70a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f70e:	6013      	str	r3, [r2, #0]
 800f710:	4770      	bx	lr

0800f712 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f712:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f716:	4770      	bx	lr

0800f718 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f718:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f71c:	4770      	bx	lr

0800f71e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f71e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f722:	4770      	bx	lr

0800f724 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f724:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f728:	4770      	bx	lr

0800f72a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f72a:	4770      	bx	lr

0800f72c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f72c:	b510      	push	{r4, lr}
 800f72e:	21b4      	movs	r1, #180	; 0xb4
 800f730:	4604      	mov	r4, r0
 800f732:	f019 fc84 	bl	802903e <_ZdlPvj>
 800f736:	4620      	mov	r0, r4
 800f738:	bd10      	pop	{r4, pc}

0800f73a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f73a:	b570      	push	{r4, r5, r6, lr}
 800f73c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f740:	428d      	cmp	r5, r1
 800f742:	bfb8      	it	lt
 800f744:	460d      	movlt	r5, r1
 800f746:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f74a:	428d      	cmp	r5, r1
 800f74c:	4604      	mov	r4, r0
 800f74e:	bfa8      	it	ge
 800f750:	460d      	movge	r5, r1
 800f752:	4616      	mov	r6, r2
 800f754:	b99a      	cbnz	r2, 800f77e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f756:	6803      	ldr	r3, [r0, #0]
 800f758:	4629      	mov	r1, r5
 800f75a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f75e:	4798      	blx	r3
 800f760:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f764:	b368      	cbz	r0, 800f7c2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f766:	6803      	ldr	r3, [r0, #0]
 800f768:	68db      	ldr	r3, [r3, #12]
 800f76a:	4798      	blx	r3
 800f76c:	b348      	cbz	r0, 800f7c2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f76e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f772:	6803      	ldr	r3, [r0, #0]
 800f774:	4621      	mov	r1, r4
 800f776:	689b      	ldr	r3, [r3, #8]
 800f778:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f77c:	4718      	bx	r3
 800f77e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f782:	2b00      	cmp	r3, #0
 800f784:	dd08      	ble.n	800f798 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f786:	f005 fbe3 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
 800f78a:	4621      	mov	r1, r4
 800f78c:	3004      	adds	r0, #4
 800f78e:	f005 fc2c 	bl	8014fea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f792:	2300      	movs	r3, #0
 800f794:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f798:	6823      	ldr	r3, [r4, #0]
 800f79a:	4620      	mov	r0, r4
 800f79c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f7a0:	4798      	blx	r3
 800f7a2:	2300      	movs	r3, #0
 800f7a4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f7a8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f7ac:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f7b0:	f005 fbce 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
 800f7b4:	4621      	mov	r1, r4
 800f7b6:	3004      	adds	r0, #4
 800f7b8:	f005 fcc0 	bl	801513c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f7bc:	2301      	movs	r3, #1
 800f7be:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f7c2:	bd70      	pop	{r4, r5, r6, pc}

0800f7c4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f7c4:	b510      	push	{r4, lr}
 800f7c6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f7ca:	4299      	cmp	r1, r3
 800f7cc:	bfb8      	it	lt
 800f7ce:	4619      	movlt	r1, r3
 800f7d0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f7d4:	4299      	cmp	r1, r3
 800f7d6:	bfa8      	it	ge
 800f7d8:	4619      	movge	r1, r3
 800f7da:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f7de:	428b      	cmp	r3, r1
 800f7e0:	4604      	mov	r4, r0
 800f7e2:	d010      	beq.n	800f806 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f7e4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f7e8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f7ec:	b158      	cbz	r0, 800f806 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f7ee:	6803      	ldr	r3, [r0, #0]
 800f7f0:	68db      	ldr	r3, [r3, #12]
 800f7f2:	4798      	blx	r3
 800f7f4:	b138      	cbz	r0, 800f806 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f7f6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f7fa:	6803      	ldr	r3, [r0, #0]
 800f7fc:	4621      	mov	r1, r4
 800f7fe:	689b      	ldr	r3, [r3, #8]
 800f800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f804:	4718      	bx	r3
 800f806:	bd10      	pop	{r4, pc}

0800f808 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f808:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f80a:	4604      	mov	r4, r0
 800f80c:	460d      	mov	r5, r1
 800f80e:	b1a9      	cbz	r1, 800f83c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f810:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f814:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f818:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f81c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f820:	ab01      	add	r3, sp, #4
 800f822:	1a12      	subs	r2, r2, r0
 800f824:	1b89      	subs	r1, r1, r6
 800f826:	1a38      	subs	r0, r7, r0
 800f828:	f006 fe48 	bl	80164bc <_ZN8touchgfx6muldivElllRl>
 800f82c:	4629      	mov	r1, r5
 800f82e:	ab01      	add	r3, sp, #4
 800f830:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f834:	4430      	add	r0, r6
 800f836:	f006 fe41 	bl	80164bc <_ZN8touchgfx6muldivElllRl>
 800f83a:	b285      	uxth	r5, r0
 800f83c:	4628      	mov	r0, r5
 800f83e:	b003      	add	sp, #12
 800f840:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f842 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f842:	b570      	push	{r4, r5, r6, lr}
 800f844:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f848:	4604      	mov	r4, r0
 800f84a:	2b00      	cmp	r3, #0
 800f84c:	d035      	beq.n	800f8ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f84e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f852:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f856:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f85a:	3001      	adds	r0, #1
 800f85c:	1ad2      	subs	r2, r2, r3
 800f85e:	b212      	sxth	r2, r2
 800f860:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f864:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f868:	2100      	movs	r1, #0
 800f86a:	b280      	uxth	r0, r0
 800f86c:	47a8      	blx	r5
 800f86e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f872:	6823      	ldr	r3, [r4, #0]
 800f874:	4401      	add	r1, r0
 800f876:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f87a:	4620      	mov	r0, r4
 800f87c:	4798      	blx	r3
 800f87e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f882:	429a      	cmp	r2, r3
 800f884:	db19      	blt.n	800f8ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f886:	2500      	movs	r5, #0
 800f888:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f88c:	f005 fb60 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
 800f890:	4621      	mov	r1, r4
 800f892:	3004      	adds	r0, #4
 800f894:	f005 fba9 	bl	8014fea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f898:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f89c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f8a0:	b158      	cbz	r0, 800f8ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f8a2:	6803      	ldr	r3, [r0, #0]
 800f8a4:	68db      	ldr	r3, [r3, #12]
 800f8a6:	4798      	blx	r3
 800f8a8:	b138      	cbz	r0, 800f8ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f8aa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f8ae:	6803      	ldr	r3, [r0, #0]
 800f8b0:	4621      	mov	r1, r4
 800f8b2:	689b      	ldr	r3, [r3, #8]
 800f8b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f8b8:	4718      	bx	r3
 800f8ba:	bd70      	pop	{r4, r5, r6, pc}

0800f8bc <_ZN8touchgfx8DrawableC1Ev>:
 800f8bc:	4a0a      	ldr	r2, [pc, #40]	; (800f8e8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800f8be:	6002      	str	r2, [r0, #0]
 800f8c0:	2200      	movs	r2, #0
 800f8c2:	8082      	strh	r2, [r0, #4]
 800f8c4:	80c2      	strh	r2, [r0, #6]
 800f8c6:	8102      	strh	r2, [r0, #8]
 800f8c8:	8142      	strh	r2, [r0, #10]
 800f8ca:	8182      	strh	r2, [r0, #12]
 800f8cc:	81c2      	strh	r2, [r0, #14]
 800f8ce:	8202      	strh	r2, [r0, #16]
 800f8d0:	8242      	strh	r2, [r0, #18]
 800f8d2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f8d6:	61c2      	str	r2, [r0, #28]
 800f8d8:	8402      	strh	r2, [r0, #32]
 800f8da:	8442      	strh	r2, [r0, #34]	; 0x22
 800f8dc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f8e0:	2201      	movs	r2, #1
 800f8e2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f8e6:	4770      	bx	lr
 800f8e8:	0802e464 	.word	0x0802e464

0800f8ec <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f8ec:	b570      	push	{r4, r5, r6, lr}
 800f8ee:	6803      	ldr	r3, [r0, #0]
 800f8f0:	4604      	mov	r4, r0
 800f8f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f8f4:	4615      	mov	r5, r2
 800f8f6:	4798      	blx	r3
 800f8f8:	6823      	ldr	r3, [r4, #0]
 800f8fa:	4629      	mov	r1, r5
 800f8fc:	4620      	mov	r0, r4
 800f8fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f900:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f904:	4718      	bx	r3

0800f906 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f906:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f90a:	4604      	mov	r4, r0
 800f90c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f910:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f914:	460e      	mov	r6, r1
 800f916:	4615      	mov	r5, r2
 800f918:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f91c:	4619      	mov	r1, r3
 800f91e:	463a      	mov	r2, r7
 800f920:	3058      	adds	r0, #88	; 0x58
 800f922:	4698      	mov	r8, r3
 800f924:	f7ff ffe2 	bl	800f8ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f928:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f92c:	4446      	add	r6, r8
 800f92e:	42b3      	cmp	r3, r6
 800f930:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f934:	bfb8      	it	lt
 800f936:	8126      	strhlt	r6, [r4, #8]
 800f938:	443d      	add	r5, r7
 800f93a:	42ab      	cmp	r3, r5
 800f93c:	bfb8      	it	lt
 800f93e:	8165      	strhlt	r5, [r4, #10]
 800f940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f944 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f944:	b510      	push	{r4, lr}
 800f946:	4604      	mov	r4, r0
 800f948:	302c      	adds	r0, #44	; 0x2c
 800f94a:	f002 fdf8 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f94e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f952:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f956:	4620      	mov	r0, r4
 800f958:	f7ff ffc8 	bl	800f8ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f95c:	bd10      	pop	{r4, pc}
	...

0800f960 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f960:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f962:	4604      	mov	r4, r0
 800f964:	4626      	mov	r6, r4
 800f966:	2500      	movs	r5, #0
 800f968:	f7ff ffa8 	bl	800f8bc <_ZN8touchgfx8DrawableC1Ev>
 800f96c:	4b23      	ldr	r3, [pc, #140]	; (800f9fc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f96e:	62a5      	str	r5, [r4, #40]	; 0x28
 800f970:	f846 3b2c 	str.w	r3, [r6], #44
 800f974:	2226      	movs	r2, #38	; 0x26
 800f976:	4629      	mov	r1, r5
 800f978:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f97c:	4630      	mov	r0, r6
 800f97e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f982:	f01a fb74 	bl	802a06e <memset>
 800f986:	4630      	mov	r0, r6
 800f988:	f7ff ff98 	bl	800f8bc <_ZN8touchgfx8DrawableC1Ev>
 800f98c:	a902      	add	r1, sp, #8
 800f98e:	4b1c      	ldr	r3, [pc, #112]	; (800fa00 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f990:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f992:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f996:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f99a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f99e:	4630      	mov	r0, r6
 800f9a0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f9a4:	f002 fdcb 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f9a8:	4638      	mov	r0, r7
 800f9aa:	f7ff ff87 	bl	800f8bc <_ZN8touchgfx8DrawableC1Ev>
 800f9ae:	4b15      	ldr	r3, [pc, #84]	; (800fa04 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f9b0:	65a3      	str	r3, [r4, #88]	; 0x58
 800f9b2:	2364      	movs	r3, #100	; 0x64
 800f9b4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f9b8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f9bc:	4b12      	ldr	r3, [pc, #72]	; (800fa08 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f9be:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f9c2:	4629      	mov	r1, r5
 800f9c4:	4630      	mov	r0, r6
 800f9c6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f9ca:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f9ce:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f9d2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f9d6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f9da:	f7f1 fa7d 	bl	8000ed8 <_ZN8touchgfx8Drawable4setXEs>
 800f9de:	4629      	mov	r1, r5
 800f9e0:	4630      	mov	r0, r6
 800f9e2:	f7f1 fa7b 	bl	8000edc <_ZN8touchgfx8Drawable4setYEs>
 800f9e6:	4631      	mov	r1, r6
 800f9e8:	4620      	mov	r0, r4
 800f9ea:	f000 f819 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f9ee:	4620      	mov	r0, r4
 800f9f0:	4639      	mov	r1, r7
 800f9f2:	f000 f815 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f9f6:	4620      	mov	r0, r4
 800f9f8:	b003      	add	sp, #12
 800f9fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9fc:	0802dcf8 	.word	0x0802dcf8
 800fa00:	0802e320 	.word	0x0802e320
 800fa04:	0802ddcc 	.word	0x0802ddcc
 800fa08:	08016c1b 	.word	0x08016c1b

0800fa0c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800fa0c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fa0e:	2000      	movs	r0, #0
 800fa10:	b12b      	cbz	r3, 800fa1e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fa12:	b920      	cbnz	r0, 800fa1e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fa14:	1a5a      	subs	r2, r3, r1
 800fa16:	4250      	negs	r0, r2
 800fa18:	4150      	adcs	r0, r2
 800fa1a:	699b      	ldr	r3, [r3, #24]
 800fa1c:	e7f8      	b.n	800fa10 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800fa1e:	4770      	bx	lr

0800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800fa20:	2300      	movs	r3, #0
 800fa22:	6148      	str	r0, [r1, #20]
 800fa24:	618b      	str	r3, [r1, #24]
 800fa26:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fa28:	b913      	cbnz	r3, 800fa30 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800fa2a:	6281      	str	r1, [r0, #40]	; 0x28
 800fa2c:	4770      	bx	lr
 800fa2e:	4613      	mov	r3, r2
 800fa30:	699a      	ldr	r2, [r3, #24]
 800fa32:	2a00      	cmp	r2, #0
 800fa34:	d1fb      	bne.n	800fa2e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800fa36:	6199      	str	r1, [r3, #24]
 800fa38:	4770      	bx	lr

0800fa3a <_ZN8touchgfx9Container9removeAllEv>:
 800fa3a:	2200      	movs	r2, #0
 800fa3c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fa3e:	b123      	cbz	r3, 800fa4a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800fa40:	6999      	ldr	r1, [r3, #24]
 800fa42:	6281      	str	r1, [r0, #40]	; 0x28
 800fa44:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800fa48:	e7f8      	b.n	800fa3c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800fa4a:	4770      	bx	lr

0800fa4c <_ZN8touchgfx9Container6unlinkEv>:
 800fa4c:	2300      	movs	r3, #0
 800fa4e:	6283      	str	r3, [r0, #40]	; 0x28
 800fa50:	4770      	bx	lr

0800fa52 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800fa52:	2200      	movs	r2, #0
 800fa54:	8002      	strh	r2, [r0, #0]
 800fa56:	8042      	strh	r2, [r0, #2]
 800fa58:	8082      	strh	r2, [r0, #4]
 800fa5a:	80c2      	strh	r2, [r0, #6]
 800fa5c:	4770      	bx	lr

0800fa5e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800fa5e:	b570      	push	{r4, r5, r6, lr}
 800fa60:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fa62:	460d      	mov	r5, r1
 800fa64:	4616      	mov	r6, r2
 800fa66:	b13c      	cbz	r4, 800fa78 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800fa68:	6823      	ldr	r3, [r4, #0]
 800fa6a:	4620      	mov	r0, r4
 800fa6c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fa6e:	4632      	mov	r2, r6
 800fa70:	4629      	mov	r1, r5
 800fa72:	4798      	blx	r3
 800fa74:	69a4      	ldr	r4, [r4, #24]
 800fa76:	e7f6      	b.n	800fa66 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800fa78:	bd70      	pop	{r4, r5, r6, pc}

0800fa7a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800fa7a:	b538      	push	{r3, r4, r5, lr}
 800fa7c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fa7e:	460d      	mov	r5, r1
 800fa80:	b134      	cbz	r4, 800fa90 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800fa82:	682b      	ldr	r3, [r5, #0]
 800fa84:	4621      	mov	r1, r4
 800fa86:	689b      	ldr	r3, [r3, #8]
 800fa88:	4628      	mov	r0, r5
 800fa8a:	4798      	blx	r3
 800fa8c:	69a4      	ldr	r4, [r4, #24]
 800fa8e:	e7f7      	b.n	800fa80 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800fa90:	bd38      	pop	{r3, r4, r5, pc}

0800fa92 <_ZN8touchgfx9ContainerD1Ev>:
 800fa92:	4770      	bx	lr

0800fa94 <_ZN8touchgfx9ContainerD0Ev>:
 800fa94:	b510      	push	{r4, lr}
 800fa96:	212c      	movs	r1, #44	; 0x2c
 800fa98:	4604      	mov	r4, r0
 800fa9a:	f019 fad0 	bl	802903e <_ZdlPvj>
 800fa9e:	4620      	mov	r0, r4
 800faa0:	bd10      	pop	{r4, pc}

0800faa2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800faa2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800faa4:	b19b      	cbz	r3, 800face <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800faa6:	428b      	cmp	r3, r1
 800faa8:	d109      	bne.n	800fabe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800faaa:	699a      	ldr	r2, [r3, #24]
 800faac:	2100      	movs	r1, #0
 800faae:	6159      	str	r1, [r3, #20]
 800fab0:	6282      	str	r2, [r0, #40]	; 0x28
 800fab2:	b902      	cbnz	r2, 800fab6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800fab4:	4770      	bx	lr
 800fab6:	6199      	str	r1, [r3, #24]
 800fab8:	4770      	bx	lr
 800faba:	4613      	mov	r3, r2
 800fabc:	b13a      	cbz	r2, 800face <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fabe:	699a      	ldr	r2, [r3, #24]
 800fac0:	428a      	cmp	r2, r1
 800fac2:	d1fa      	bne.n	800faba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800fac4:	698a      	ldr	r2, [r1, #24]
 800fac6:	619a      	str	r2, [r3, #24]
 800fac8:	2300      	movs	r3, #0
 800faca:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800face:	4770      	bx	lr

0800fad0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800fad0:	b410      	push	{r4}
 800fad2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fad4:	4604      	mov	r4, r0
 800fad6:	b92b      	cbnz	r3, 800fae4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800fad8:	6803      	ldr	r3, [r0, #0]
 800fada:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fade:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800fae0:	4611      	mov	r1, r2
 800fae2:	4718      	bx	r3
 800fae4:	b941      	cbnz	r1, 800faf8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800fae6:	6193      	str	r3, [r2, #24]
 800fae8:	6282      	str	r2, [r0, #40]	; 0x28
 800faea:	6154      	str	r4, [r2, #20]
 800faec:	f85d 4b04 	ldr.w	r4, [sp], #4
 800faf0:	4770      	bx	lr
 800faf2:	4603      	mov	r3, r0
 800faf4:	2800      	cmp	r0, #0
 800faf6:	d0f9      	beq.n	800faec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800faf8:	4299      	cmp	r1, r3
 800fafa:	6998      	ldr	r0, [r3, #24]
 800fafc:	d1f9      	bne.n	800faf2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800fafe:	6190      	str	r0, [r2, #24]
 800fb00:	618a      	str	r2, [r1, #24]
 800fb02:	e7f2      	b.n	800faea <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800fb04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800fb04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb08:	461f      	mov	r7, r3
 800fb0a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800fb0e:	460d      	mov	r5, r1
 800fb10:	4616      	mov	r6, r2
 800fb12:	b103      	cbz	r3, 800fb16 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800fb14:	6038      	str	r0, [r7, #0]
 800fb16:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fb18:	b314      	cbz	r4, 800fb60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800fb1a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fb1e:	b1eb      	cbz	r3, 800fb5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fb20:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800fb24:	428d      	cmp	r5, r1
 800fb26:	db19      	blt.n	800fb5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fb28:	8923      	ldrh	r3, [r4, #8]
 800fb2a:	b289      	uxth	r1, r1
 800fb2c:	440b      	add	r3, r1
 800fb2e:	b21b      	sxth	r3, r3
 800fb30:	429d      	cmp	r5, r3
 800fb32:	da13      	bge.n	800fb5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fb34:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fb38:	4296      	cmp	r6, r2
 800fb3a:	db0f      	blt.n	800fb5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fb3c:	8963      	ldrh	r3, [r4, #10]
 800fb3e:	b292      	uxth	r2, r2
 800fb40:	4413      	add	r3, r2
 800fb42:	b21b      	sxth	r3, r3
 800fb44:	429e      	cmp	r6, r3
 800fb46:	da09      	bge.n	800fb5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fb48:	6823      	ldr	r3, [r4, #0]
 800fb4a:	1ab2      	subs	r2, r6, r2
 800fb4c:	1a69      	subs	r1, r5, r1
 800fb4e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800fb52:	b212      	sxth	r2, r2
 800fb54:	463b      	mov	r3, r7
 800fb56:	b209      	sxth	r1, r1
 800fb58:	4620      	mov	r0, r4
 800fb5a:	47c0      	blx	r8
 800fb5c:	69a4      	ldr	r4, [r4, #24]
 800fb5e:	e7db      	b.n	800fb18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800fb60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fb64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800fb64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb68:	4c6e      	ldr	r4, [pc, #440]	; (800fd24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800fb6a:	b0a1      	sub	sp, #132	; 0x84
 800fb6c:	6824      	ldr	r4, [r4, #0]
 800fb6e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800fb70:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800fb74:	9303      	str	r3, [sp, #12]
 800fb76:	2400      	movs	r4, #0
 800fb78:	802c      	strh	r4, [r5, #0]
 800fb7a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800fb7c:	802c      	strh	r4, [r5, #0]
 800fb7e:	601c      	str	r4, [r3, #0]
 800fb80:	4606      	mov	r6, r0
 800fb82:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800fb86:	f7ff ffbd 	bl	800fb04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fb8a:	f1b9 0f03 	cmp.w	r9, #3
 800fb8e:	f340 80c2 	ble.w	800fd16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800fb92:	4631      	mov	r1, r6
 800fb94:	a80c      	add	r0, sp, #48	; 0x30
 800fb96:	f006 fb5f 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fb9a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800fb9e:	9306      	str	r3, [sp, #24]
 800fba0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fba4:	9307      	str	r3, [sp, #28]
 800fba6:	9b03      	ldr	r3, [sp, #12]
 800fba8:	f8d3 a000 	ldr.w	sl, [r3]
 800fbac:	f1ba 0f00 	cmp.w	sl, #0
 800fbb0:	f000 80b4 	beq.w	800fd1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800fbb4:	4651      	mov	r1, sl
 800fbb6:	a810      	add	r0, sp, #64	; 0x40
 800fbb8:	f006 fb4e 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fbbc:	9b01      	ldr	r3, [sp, #4]
 800fbbe:	9a06      	ldr	r2, [sp, #24]
 800fbc0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800fbc4:	189d      	adds	r5, r3, r2
 800fbc6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800fbca:	9a07      	ldr	r2, [sp, #28]
 800fbcc:	2002      	movs	r0, #2
 800fbce:	fb91 f1f0 	sdiv	r1, r1, r0
 800fbd2:	4419      	add	r1, r3
 800fbd4:	1a6d      	subs	r5, r5, r1
 800fbd6:	9b02      	ldr	r3, [sp, #8]
 800fbd8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800fbdc:	4413      	add	r3, r2
 800fbde:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800fbe2:	fb92 f2f0 	sdiv	r2, r2, r0
 800fbe6:	440a      	add	r2, r1
 800fbe8:	1a9b      	subs	r3, r3, r2
 800fbea:	435b      	muls	r3, r3
 800fbec:	fb05 3505 	mla	r5, r5, r5, r3
 800fbf0:	4f4d      	ldr	r7, [pc, #308]	; (800fd28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800fbf2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fbf4:	ac10      	add	r4, sp, #64	; 0x40
 800fbf6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fbf8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fbfa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fbfc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fbfe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fc00:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800fc04:	f1b9 0f0c 	cmp.w	r9, #12
 800fc08:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800fc0c:	f04f 0303 	mov.w	r3, #3
 800fc10:	bfc8      	it	gt
 800fc12:	4698      	movgt	r8, r3
 800fc14:	f8cd 9000 	str.w	r9, [sp]
 800fc18:	f04f 0400 	mov.w	r4, #0
 800fc1c:	bfdc      	itt	le
 800fc1e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800fc22:	fb92 f8f3 	sdivle	r8, r2, r3
 800fc26:	1c63      	adds	r3, r4, #1
 800fc28:	aa10      	add	r2, sp, #64	; 0x40
 800fc2a:	f004 0401 	and.w	r4, r4, #1
 800fc2e:	9308      	str	r3, [sp, #32]
 800fc30:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800fc34:	9b00      	ldr	r3, [sp, #0]
 800fc36:	fb93 f3f8 	sdiv	r3, r3, r8
 800fc3a:	b29b      	uxth	r3, r3
 800fc3c:	3404      	adds	r4, #4
 800fc3e:	f04f 0b00 	mov.w	fp, #0
 800fc42:	9304      	str	r3, [sp, #16]
 800fc44:	9a04      	ldr	r2, [sp, #16]
 800fc46:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800fc4a:	fb13 f302 	smulbb	r3, r3, r2
 800fc4e:	9a01      	ldr	r2, [sp, #4]
 800fc50:	b29b      	uxth	r3, r3
 800fc52:	1899      	adds	r1, r3, r2
 800fc54:	9305      	str	r3, [sp, #20]
 800fc56:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fc5a:	b209      	sxth	r1, r1
 800fc5c:	4299      	cmp	r1, r3
 800fc5e:	db4d      	blt.n	800fcfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc60:	8932      	ldrh	r2, [r6, #8]
 800fc62:	4413      	add	r3, r2
 800fc64:	b21b      	sxth	r3, r3
 800fc66:	4299      	cmp	r1, r3
 800fc68:	da48      	bge.n	800fcfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc6a:	9b04      	ldr	r3, [sp, #16]
 800fc6c:	6827      	ldr	r7, [r4, #0]
 800fc6e:	fb17 f703 	smulbb	r7, r7, r3
 800fc72:	9b02      	ldr	r3, [sp, #8]
 800fc74:	b2bf      	uxth	r7, r7
 800fc76:	18fa      	adds	r2, r7, r3
 800fc78:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fc7c:	b212      	sxth	r2, r2
 800fc7e:	429a      	cmp	r2, r3
 800fc80:	db3c      	blt.n	800fcfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc82:	8970      	ldrh	r0, [r6, #10]
 800fc84:	4403      	add	r3, r0
 800fc86:	b21b      	sxth	r3, r3
 800fc88:	429a      	cmp	r2, r3
 800fc8a:	da37      	bge.n	800fcfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc8c:	2300      	movs	r3, #0
 800fc8e:	930b      	str	r3, [sp, #44]	; 0x2c
 800fc90:	4630      	mov	r0, r6
 800fc92:	ab0b      	add	r3, sp, #44	; 0x2c
 800fc94:	f7ff ff36 	bl	800fb04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fc98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fc9a:	b37a      	cbz	r2, 800fcfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc9c:	4552      	cmp	r2, sl
 800fc9e:	d02d      	beq.n	800fcfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fca0:	4611      	mov	r1, r2
 800fca2:	a80e      	add	r0, sp, #56	; 0x38
 800fca4:	9209      	str	r2, [sp, #36]	; 0x24
 800fca6:	f006 fad7 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fcaa:	9a06      	ldr	r2, [sp, #24]
 800fcac:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800fcb0:	9b01      	ldr	r3, [sp, #4]
 800fcb2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800fcb6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800fcba:	4413      	add	r3, r2
 800fcbc:	f04f 0e02 	mov.w	lr, #2
 800fcc0:	fb91 f1fe 	sdiv	r1, r1, lr
 800fcc4:	4401      	add	r1, r0
 800fcc6:	1a58      	subs	r0, r3, r1
 800fcc8:	9a07      	ldr	r2, [sp, #28]
 800fcca:	9b02      	ldr	r3, [sp, #8]
 800fccc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800fcd0:	fb9c fcfe 	sdiv	ip, ip, lr
 800fcd4:	4413      	add	r3, r2
 800fcd6:	448c      	add	ip, r1
 800fcd8:	eba3 030c 	sub.w	r3, r3, ip
 800fcdc:	435b      	muls	r3, r3
 800fcde:	fb00 3300 	mla	r3, r0, r0, r3
 800fce2:	42ab      	cmp	r3, r5
 800fce4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fce6:	d208      	bcs.n	800fcfa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800fce8:	9803      	ldr	r0, [sp, #12]
 800fcea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fcec:	6001      	str	r1, [r0, #0]
 800fcee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800fcf0:	9805      	ldr	r0, [sp, #20]
 800fcf2:	8008      	strh	r0, [r1, #0]
 800fcf4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fcf6:	461d      	mov	r5, r3
 800fcf8:	800f      	strh	r7, [r1, #0]
 800fcfa:	4692      	mov	sl, r2
 800fcfc:	f10b 0b01 	add.w	fp, fp, #1
 800fd00:	f1bb 0f04 	cmp.w	fp, #4
 800fd04:	f104 0408 	add.w	r4, r4, #8
 800fd08:	d19c      	bne.n	800fc44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800fd0a:	9b00      	ldr	r3, [sp, #0]
 800fd0c:	9c08      	ldr	r4, [sp, #32]
 800fd0e:	444b      	add	r3, r9
 800fd10:	4544      	cmp	r4, r8
 800fd12:	9300      	str	r3, [sp, #0]
 800fd14:	d187      	bne.n	800fc26 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800fd16:	b021      	add	sp, #132	; 0x84
 800fd18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd1c:	f04f 35ff 	mov.w	r5, #4294967295
 800fd20:	e766      	b.n	800fbf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800fd22:	bf00      	nop
 800fd24:	20012e7c 	.word	0x20012e7c
 800fd28:	0802ad7c 	.word	0x0802ad7c

0800fd2c <_ZN8touchgfx4RectaNERKS0_>:
 800fd2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd30:	f9b1 7000 	ldrsh.w	r7, [r1]
 800fd34:	888c      	ldrh	r4, [r1, #4]
 800fd36:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fd3a:	443c      	add	r4, r7
 800fd3c:	b2a4      	uxth	r4, r4
 800fd3e:	fa0f f884 	sxth.w	r8, r4
 800fd42:	45c1      	cmp	r9, r8
 800fd44:	da2f      	bge.n	800fda6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fd46:	8882      	ldrh	r2, [r0, #4]
 800fd48:	444a      	add	r2, r9
 800fd4a:	b292      	uxth	r2, r2
 800fd4c:	fa0f fe82 	sxth.w	lr, r2
 800fd50:	4577      	cmp	r7, lr
 800fd52:	da28      	bge.n	800fda6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fd54:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800fd58:	88cb      	ldrh	r3, [r1, #6]
 800fd5a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800fd5e:	442b      	add	r3, r5
 800fd60:	b21b      	sxth	r3, r3
 800fd62:	429e      	cmp	r6, r3
 800fd64:	da1f      	bge.n	800fda6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fd66:	88c3      	ldrh	r3, [r0, #6]
 800fd68:	4433      	add	r3, r6
 800fd6a:	b29b      	uxth	r3, r3
 800fd6c:	fa0f fc83 	sxth.w	ip, r3
 800fd70:	4565      	cmp	r5, ip
 800fd72:	da18      	bge.n	800fda6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fd74:	454f      	cmp	r7, r9
 800fd76:	bfb8      	it	lt
 800fd78:	464f      	movlt	r7, r9
 800fd7a:	42b5      	cmp	r5, r6
 800fd7c:	bfb8      	it	lt
 800fd7e:	4635      	movlt	r5, r6
 800fd80:	45f0      	cmp	r8, lr
 800fd82:	bfd8      	it	le
 800fd84:	4622      	movle	r2, r4
 800fd86:	1bd2      	subs	r2, r2, r7
 800fd88:	8082      	strh	r2, [r0, #4]
 800fd8a:	884a      	ldrh	r2, [r1, #2]
 800fd8c:	88c9      	ldrh	r1, [r1, #6]
 800fd8e:	8007      	strh	r7, [r0, #0]
 800fd90:	440a      	add	r2, r1
 800fd92:	b292      	uxth	r2, r2
 800fd94:	b211      	sxth	r1, r2
 800fd96:	458c      	cmp	ip, r1
 800fd98:	bfa8      	it	ge
 800fd9a:	4613      	movge	r3, r2
 800fd9c:	1b5b      	subs	r3, r3, r5
 800fd9e:	80c3      	strh	r3, [r0, #6]
 800fda0:	8045      	strh	r5, [r0, #2]
 800fda2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fda6:	2300      	movs	r3, #0
 800fda8:	8003      	strh	r3, [r0, #0]
 800fdaa:	8043      	strh	r3, [r0, #2]
 800fdac:	8083      	strh	r3, [r0, #4]
 800fdae:	80c3      	strh	r3, [r0, #6]
 800fdb0:	e7f7      	b.n	800fda2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800fdb2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fdb6:	2b00      	cmp	r3, #0
 800fdb8:	dd06      	ble.n	800fdc8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800fdba:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800fdbe:	2800      	cmp	r0, #0
 800fdc0:	bfcc      	ite	gt
 800fdc2:	2000      	movgt	r0, #0
 800fdc4:	2001      	movle	r0, #1
 800fdc6:	4770      	bx	lr
 800fdc8:	2001      	movs	r0, #1
 800fdca:	4770      	bx	lr

0800fdcc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800fdcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fdd0:	2300      	movs	r3, #0
 800fdd2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fdd4:	8003      	strh	r3, [r0, #0]
 800fdd6:	4604      	mov	r4, r0
 800fdd8:	8043      	strh	r3, [r0, #2]
 800fdda:	8083      	strh	r3, [r0, #4]
 800fddc:	80c3      	strh	r3, [r0, #6]
 800fdde:	2d00      	cmp	r5, #0
 800fde0:	d040      	beq.n	800fe64 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800fde2:	1d28      	adds	r0, r5, #4
 800fde4:	f7ff ffe5 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fde8:	b988      	cbnz	r0, 800fe0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fdea:	4620      	mov	r0, r4
 800fdec:	f7ff ffe1 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fdf0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800fdf4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fdf8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800fdfc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800fe00:	b138      	cbz	r0, 800fe12 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800fe02:	8022      	strh	r2, [r4, #0]
 800fe04:	8063      	strh	r3, [r4, #2]
 800fe06:	f8a4 e004 	strh.w	lr, [r4, #4]
 800fe0a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fe0e:	69ad      	ldr	r5, [r5, #24]
 800fe10:	e7e5      	b.n	800fdde <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800fe12:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fe16:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fe1a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800fe1e:	4290      	cmp	r0, r2
 800fe20:	4607      	mov	r7, r0
 800fe22:	bfa8      	it	ge
 800fe24:	4617      	movge	r7, r2
 800fe26:	4472      	add	r2, lr
 800fe28:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800fe2c:	8027      	strh	r7, [r4, #0]
 800fe2e:	4299      	cmp	r1, r3
 800fe30:	460e      	mov	r6, r1
 800fe32:	4440      	add	r0, r8
 800fe34:	bfa8      	it	ge
 800fe36:	461e      	movge	r6, r3
 800fe38:	4471      	add	r1, lr
 800fe3a:	4463      	add	r3, ip
 800fe3c:	b200      	sxth	r0, r0
 800fe3e:	b212      	sxth	r2, r2
 800fe40:	b209      	sxth	r1, r1
 800fe42:	b21b      	sxth	r3, r3
 800fe44:	4290      	cmp	r0, r2
 800fe46:	bfac      	ite	ge
 800fe48:	ebc7 0200 	rsbge	r2, r7, r0
 800fe4c:	ebc7 0202 	rsblt	r2, r7, r2
 800fe50:	4299      	cmp	r1, r3
 800fe52:	bfac      	ite	ge
 800fe54:	ebc6 0301 	rsbge	r3, r6, r1
 800fe58:	ebc6 0303 	rsblt	r3, r6, r3
 800fe5c:	8066      	strh	r6, [r4, #2]
 800fe5e:	80a2      	strh	r2, [r4, #4]
 800fe60:	80e3      	strh	r3, [r4, #6]
 800fe62:	e7d4      	b.n	800fe0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fe64:	4620      	mov	r0, r4
 800fe66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fe6a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800fe6a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fe6e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fe72:	b383      	cbz	r3, 800fed6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fe74:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fe76:	b374      	cbz	r4, 800fed6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fe78:	f9b1 5000 	ldrsh.w	r5, [r1]
 800fe7c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800fe80:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800fe84:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800fe88:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fe8c:	b303      	cbz	r3, 800fed0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fe8e:	4668      	mov	r0, sp
 800fe90:	1d21      	adds	r1, r4, #4
 800fe92:	f8ad 5000 	strh.w	r5, [sp]
 800fe96:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fe9a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fe9e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800fea2:	f7ff ff43 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 800fea6:	4668      	mov	r0, sp
 800fea8:	f7ff ff83 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800feac:	b980      	cbnz	r0, 800fed0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800feae:	f8bd 3000 	ldrh.w	r3, [sp]
 800feb2:	88a2      	ldrh	r2, [r4, #4]
 800feb4:	1a9b      	subs	r3, r3, r2
 800feb6:	f8ad 3000 	strh.w	r3, [sp]
 800feba:	88e2      	ldrh	r2, [r4, #6]
 800febc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fec0:	1a9b      	subs	r3, r3, r2
 800fec2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fec6:	6823      	ldr	r3, [r4, #0]
 800fec8:	4669      	mov	r1, sp
 800feca:	689b      	ldr	r3, [r3, #8]
 800fecc:	4620      	mov	r0, r4
 800fece:	4798      	blx	r3
 800fed0:	69a4      	ldr	r4, [r4, #24]
 800fed2:	2c00      	cmp	r4, #0
 800fed4:	d1d8      	bne.n	800fe88 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fed6:	b002      	add	sp, #8
 800fed8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fedc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800fedc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fede:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fee2:	460d      	mov	r5, r1
 800fee4:	4616      	mov	r6, r2
 800fee6:	b323      	cbz	r3, 800ff32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fee8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800feea:	b314      	cbz	r4, 800ff32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800feec:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fef0:	b1eb      	cbz	r3, 800ff2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fef2:	6828      	ldr	r0, [r5, #0]
 800fef4:	6869      	ldr	r1, [r5, #4]
 800fef6:	466b      	mov	r3, sp
 800fef8:	c303      	stmia	r3!, {r0, r1}
 800fefa:	4668      	mov	r0, sp
 800fefc:	1d21      	adds	r1, r4, #4
 800fefe:	f7ff ff15 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 800ff02:	4668      	mov	r0, sp
 800ff04:	f7ff ff55 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff08:	b988      	cbnz	r0, 800ff2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ff0a:	f8bd 3000 	ldrh.w	r3, [sp]
 800ff0e:	88a2      	ldrh	r2, [r4, #4]
 800ff10:	1a9b      	subs	r3, r3, r2
 800ff12:	f8ad 3000 	strh.w	r3, [sp]
 800ff16:	88e2      	ldrh	r2, [r4, #6]
 800ff18:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ff1c:	1a9b      	subs	r3, r3, r2
 800ff1e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ff22:	6823      	ldr	r3, [r4, #0]
 800ff24:	4632      	mov	r2, r6
 800ff26:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ff28:	4669      	mov	r1, sp
 800ff2a:	4620      	mov	r0, r4
 800ff2c:	4798      	blx	r3
 800ff2e:	69a4      	ldr	r4, [r4, #24]
 800ff30:	e7db      	b.n	800feea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ff32:	b002      	add	sp, #8
 800ff34:	bd70      	pop	{r4, r5, r6, pc}

0800ff36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ff36:	b513      	push	{r0, r1, r4, lr}
 800ff38:	6803      	ldr	r3, [r0, #0]
 800ff3a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800ff3e:	2300      	movs	r3, #0
 800ff40:	e9cd 3300 	strd	r3, r3, [sp]
 800ff44:	466b      	mov	r3, sp
 800ff46:	47a0      	blx	r4
 800ff48:	b002      	add	sp, #8
 800ff4a:	bd10      	pop	{r4, pc}

0800ff4c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ff4c:	2301      	movs	r3, #1
 800ff4e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ff52:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ff56:	4770      	bx	lr

0800ff58 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ff58:	2301      	movs	r3, #1
 800ff5a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ff5e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ff62:	4770      	bx	lr

0800ff64 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ff64:	6843      	ldr	r3, [r0, #4]
 800ff66:	2201      	movs	r2, #1
 800ff68:	725a      	strb	r2, [r3, #9]
 800ff6a:	6840      	ldr	r0, [r0, #4]
 800ff6c:	6803      	ldr	r3, [r0, #0]
 800ff6e:	691b      	ldr	r3, [r3, #16]
 800ff70:	4718      	bx	r3

0800ff72 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ff72:	6840      	ldr	r0, [r0, #4]
 800ff74:	6803      	ldr	r3, [r0, #0]
 800ff76:	689b      	ldr	r3, [r3, #8]
 800ff78:	4718      	bx	r3

0800ff7a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ff7a:	b530      	push	{r4, r5, lr}
 800ff7c:	b08b      	sub	sp, #44	; 0x2c
 800ff7e:	6804      	ldr	r4, [r0, #0]
 800ff80:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ff84:	9509      	str	r5, [sp, #36]	; 0x24
 800ff86:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ff8a:	9508      	str	r5, [sp, #32]
 800ff8c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ff90:	9507      	str	r5, [sp, #28]
 800ff92:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ff96:	9506      	str	r5, [sp, #24]
 800ff98:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ff9c:	9505      	str	r5, [sp, #20]
 800ff9e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ffa2:	9504      	str	r5, [sp, #16]
 800ffa4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ffa8:	9503      	str	r5, [sp, #12]
 800ffaa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ffae:	9502      	str	r5, [sp, #8]
 800ffb0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ffb4:	e9cd 3500 	strd	r3, r5, [sp]
 800ffb8:	4613      	mov	r3, r2
 800ffba:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800ffbc:	2200      	movs	r2, #0
 800ffbe:	47a0      	blx	r4
 800ffc0:	b00b      	add	sp, #44	; 0x2c
 800ffc2:	bd30      	pop	{r4, r5, pc}

0800ffc4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ffc4:	4b04      	ldr	r3, [pc, #16]	; (800ffd8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ffc6:	781b      	ldrb	r3, [r3, #0]
 800ffc8:	b123      	cbz	r3, 800ffd4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ffca:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800ffce:	f080 0001 	eor.w	r0, r0, #1
 800ffd2:	4770      	bx	lr
 800ffd4:	2001      	movs	r0, #1
 800ffd6:	4770      	bx	lr
 800ffd8:	20012e7a 	.word	0x20012e7a

0800ffdc <_ZN8touchgfx3HAL8endFrameEv>:
 800ffdc:	b510      	push	{r4, lr}
 800ffde:	4604      	mov	r4, r0
 800ffe0:	6840      	ldr	r0, [r0, #4]
 800ffe2:	6803      	ldr	r3, [r0, #0]
 800ffe4:	689b      	ldr	r3, [r3, #8]
 800ffe6:	4798      	blx	r3
 800ffe8:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800ffec:	b113      	cbz	r3, 800fff4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ffee:	2301      	movs	r3, #1
 800fff0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800fff4:	bd10      	pop	{r4, pc}

0800fff6 <_ZN8touchgfx3HAL10initializeEv>:
 800fff6:	b510      	push	{r4, lr}
 800fff8:	4604      	mov	r4, r0
 800fffa:	f7f0 fd57 	bl	8000aac <_ZN8touchgfx10OSWrappers10initializeEv>
 800fffe:	f7f0 fc63 	bl	80008c8 <_ZN8touchgfx4GPIO4initEv>
 8010002:	6860      	ldr	r0, [r4, #4]
 8010004:	6803      	ldr	r3, [r0, #0]
 8010006:	68db      	ldr	r3, [r3, #12]
 8010008:	4798      	blx	r3
 801000a:	68e0      	ldr	r0, [r4, #12]
 801000c:	6803      	ldr	r3, [r0, #0]
 801000e:	689b      	ldr	r3, [r3, #8]
 8010010:	4798      	blx	r3
 8010012:	6823      	ldr	r3, [r4, #0]
 8010014:	4620      	mov	r0, r4
 8010016:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010018:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801001c:	4718      	bx	r3
	...

08010020 <_ZN8touchgfx3HAL4tickEv>:
 8010020:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010022:	6803      	ldr	r3, [r0, #0]
 8010024:	4d5b      	ldr	r5, [pc, #364]	; (8010194 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010026:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801002a:	4604      	mov	r4, r0
 801002c:	4798      	blx	r3
 801002e:	2800      	cmp	r0, #0
 8010030:	f000 8095 	beq.w	801015e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010034:	2001      	movs	r0, #1
 8010036:	f7f0 fbf9 	bl	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801003a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 801003e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010042:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010046:	2600      	movs	r6, #0
 8010048:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 801004c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010050:	b133      	cbz	r3, 8010060 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010052:	6823      	ldr	r3, [r4, #0]
 8010054:	4620      	mov	r0, r4
 8010056:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801005a:	4798      	blx	r3
 801005c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010060:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010064:	6862      	ldr	r2, [r4, #4]
 8010066:	f083 0301 	eor.w	r3, r3, #1
 801006a:	7253      	strb	r3, [r2, #9]
 801006c:	2601      	movs	r6, #1
 801006e:	702e      	strb	r6, [r5, #0]
 8010070:	f004 ff6e 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
 8010074:	6803      	ldr	r3, [r0, #0]
 8010076:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010078:	4798      	blx	r3
 801007a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801007e:	b90b      	cbnz	r3, 8010084 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010080:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010084:	f004 ff64 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
 8010088:	6803      	ldr	r3, [r0, #0]
 801008a:	695b      	ldr	r3, [r3, #20]
 801008c:	4798      	blx	r3
 801008e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010090:	6803      	ldr	r3, [r0, #0]
 8010092:	691b      	ldr	r3, [r3, #16]
 8010094:	4798      	blx	r3
 8010096:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801009a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 801009e:	3b01      	subs	r3, #1
 80100a0:	b2db      	uxtb	r3, r3
 80100a2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80100a6:	b10a      	cbz	r2, 80100ac <_ZN8touchgfx3HAL4tickEv+0x8c>
 80100a8:	2b00      	cmp	r3, #0
 80100aa:	d1eb      	bne.n	8010084 <_ZN8touchgfx3HAL4tickEv+0x64>
 80100ac:	4a3a      	ldr	r2, [pc, #232]	; (8010198 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80100ae:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80100b2:	7813      	ldrb	r3, [r2, #0]
 80100b4:	3301      	adds	r3, #1
 80100b6:	b25b      	sxtb	r3, r3
 80100b8:	4299      	cmp	r1, r3
 80100ba:	7013      	strb	r3, [r2, #0]
 80100bc:	dc10      	bgt.n	80100e0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80100be:	68e0      	ldr	r0, [r4, #12]
 80100c0:	2300      	movs	r3, #0
 80100c2:	7013      	strb	r3, [r2, #0]
 80100c4:	6803      	ldr	r3, [r0, #0]
 80100c6:	aa03      	add	r2, sp, #12
 80100c8:	68db      	ldr	r3, [r3, #12]
 80100ca:	a902      	add	r1, sp, #8
 80100cc:	4798      	blx	r3
 80100ce:	6823      	ldr	r3, [r4, #0]
 80100d0:	2800      	cmp	r0, #0
 80100d2:	d050      	beq.n	8010176 <_ZN8touchgfx3HAL4tickEv+0x156>
 80100d4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80100d8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80100dc:	4620      	mov	r0, r4
 80100de:	4798      	blx	r3
 80100e0:	6960      	ldr	r0, [r4, #20]
 80100e2:	2300      	movs	r3, #0
 80100e4:	f88d 3007 	strb.w	r3, [sp, #7]
 80100e8:	b158      	cbz	r0, 8010102 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80100ea:	6803      	ldr	r3, [r0, #0]
 80100ec:	f10d 0107 	add.w	r1, sp, #7
 80100f0:	68db      	ldr	r3, [r3, #12]
 80100f2:	4798      	blx	r3
 80100f4:	b128      	cbz	r0, 8010102 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80100f6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80100f8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80100fc:	6803      	ldr	r3, [r0, #0]
 80100fe:	68db      	ldr	r3, [r3, #12]
 8010100:	4798      	blx	r3
 8010102:	f104 001c 	add.w	r0, r4, #28
 8010106:	f015 feb9 	bl	8025e7c <_ZN8touchgfx8Gestures4tickEv>
 801010a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801010e:	b30b      	cbz	r3, 8010154 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010110:	6920      	ldr	r0, [r4, #16]
 8010112:	6803      	ldr	r3, [r0, #0]
 8010114:	691b      	ldr	r3, [r3, #16]
 8010116:	4798      	blx	r3
 8010118:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801011a:	4606      	mov	r6, r0
 801011c:	b903      	cbnz	r3, 8010120 <_ZN8touchgfx3HAL4tickEv+0x100>
 801011e:	6760      	str	r0, [r4, #116]	; 0x74
 8010120:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010122:	4a1e      	ldr	r2, [pc, #120]	; (801019c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010124:	1af3      	subs	r3, r6, r3
 8010126:	4293      	cmp	r3, r2
 8010128:	d914      	bls.n	8010154 <_ZN8touchgfx3HAL4tickEv+0x134>
 801012a:	6920      	ldr	r0, [r4, #16]
 801012c:	6803      	ldr	r3, [r0, #0]
 801012e:	699b      	ldr	r3, [r3, #24]
 8010130:	4798      	blx	r3
 8010132:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010134:	2264      	movs	r2, #100	; 0x64
 8010136:	1af3      	subs	r3, r6, r3
 8010138:	fbb3 f3f2 	udiv	r3, r3, r2
 801013c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010140:	2800      	cmp	r0, #0
 8010142:	dc1d      	bgt.n	8010180 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010144:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010148:	6920      	ldr	r0, [r4, #16]
 801014a:	6803      	ldr	r3, [r0, #0]
 801014c:	2100      	movs	r1, #0
 801014e:	69db      	ldr	r3, [r3, #28]
 8010150:	4798      	blx	r3
 8010152:	6766      	str	r6, [r4, #116]	; 0x74
 8010154:	f004 fefc 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
 8010158:	6803      	ldr	r3, [r0, #0]
 801015a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801015c:	4798      	blx	r3
 801015e:	6823      	ldr	r3, [r4, #0]
 8010160:	4620      	mov	r0, r4
 8010162:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010166:	4798      	blx	r3
 8010168:	2001      	movs	r0, #1
 801016a:	f7f0 fb77 	bl	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801016e:	2300      	movs	r3, #0
 8010170:	702b      	strb	r3, [r5, #0]
 8010172:	b004      	add	sp, #16
 8010174:	bd70      	pop	{r4, r5, r6, pc}
 8010176:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801017a:	4620      	mov	r0, r4
 801017c:	4798      	blx	r3
 801017e:	e7af      	b.n	80100e0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010180:	2863      	cmp	r0, #99	; 0x63
 8010182:	bfcb      	itete	gt
 8010184:	2300      	movgt	r3, #0
 8010186:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 801018a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 801018e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010192:	e7d9      	b.n	8010148 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010194:	20012e80 	.word	0x20012e80
 8010198:	20012e81 	.word	0x20012e81
 801019c:	05f5e100 	.word	0x05f5e100

080101a0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80101a0:	b510      	push	{r4, lr}
 80101a2:	4604      	mov	r4, r0
 80101a4:	f7f0 fcb2 	bl	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80101a8:	6863      	ldr	r3, [r4, #4]
 80101aa:	2200      	movs	r2, #0
 80101ac:	729a      	strb	r2, [r3, #10]
 80101ae:	bd10      	pop	{r4, pc}

080101b0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80101b0:	65c1      	str	r1, [r0, #92]	; 0x5c
 80101b2:	301c      	adds	r0, #28
 80101b4:	f015 be60 	b.w	8025e78 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080101b8 <_ZN8touchgfx3HAL5touchEll>:
 80101b8:	b530      	push	{r4, r5, lr}
 80101ba:	b087      	sub	sp, #28
 80101bc:	4604      	mov	r4, r0
 80101be:	a804      	add	r0, sp, #16
 80101c0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80101c4:	f004 fc90 	bl	8014ae8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80101c8:	9b04      	ldr	r3, [sp, #16]
 80101ca:	f8ad 300c 	strh.w	r3, [sp, #12]
 80101ce:	a906      	add	r1, sp, #24
 80101d0:	9b05      	ldr	r3, [sp, #20]
 80101d2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80101d6:	a803      	add	r0, sp, #12
 80101d8:	f004 fcd8 	bl	8014b8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80101dc:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80101e0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80101e4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80101e8:	f104 001c 	add.w	r0, r4, #28
 80101ec:	b189      	cbz	r1, 8010212 <_ZN8touchgfx3HAL5touchEll+0x5a>
 80101ee:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80101f2:	9300      	str	r3, [sp, #0]
 80101f4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80101f8:	4613      	mov	r3, r2
 80101fa:	462a      	mov	r2, r5
 80101fc:	f015 fe4c 	bl	8025e98 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010200:	b128      	cbz	r0, 801020e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010202:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010206:	6623      	str	r3, [r4, #96]	; 0x60
 8010208:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801020c:	6663      	str	r3, [r4, #100]	; 0x64
 801020e:	b007      	add	sp, #28
 8010210:	bd30      	pop	{r4, r5, pc}
 8010212:	f015 fe81 	bl	8025f18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010216:	2301      	movs	r3, #1
 8010218:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801021c:	e7f1      	b.n	8010202 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801021e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801021e:	b510      	push	{r4, lr}
 8010220:	2b00      	cmp	r3, #0
 8010222:	d046      	beq.n	80102b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010224:	ea81 0002 	eor.w	r0, r1, r2
 8010228:	07c4      	lsls	r4, r0, #31
 801022a:	d508      	bpl.n	801023e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801022c:	440b      	add	r3, r1
 801022e:	3a01      	subs	r2, #1
 8010230:	428b      	cmp	r3, r1
 8010232:	d93e      	bls.n	80102b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010234:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010238:	f801 0b01 	strb.w	r0, [r1], #1
 801023c:	e7f8      	b.n	8010230 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801023e:	07d0      	lsls	r0, r2, #31
 8010240:	bf42      	ittt	mi
 8010242:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010246:	f801 0b01 	strbmi.w	r0, [r1], #1
 801024a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801024e:	2b01      	cmp	r3, #1
 8010250:	d911      	bls.n	8010276 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010252:	ea81 0402 	eor.w	r4, r1, r2
 8010256:	07a4      	lsls	r4, r4, #30
 8010258:	4610      	mov	r0, r2
 801025a:	d022      	beq.n	80102a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801025c:	f023 0401 	bic.w	r4, r3, #1
 8010260:	440c      	add	r4, r1
 8010262:	428c      	cmp	r4, r1
 8010264:	4602      	mov	r2, r0
 8010266:	d904      	bls.n	8010272 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010268:	8812      	ldrh	r2, [r2, #0]
 801026a:	f821 2b02 	strh.w	r2, [r1], #2
 801026e:	3002      	adds	r0, #2
 8010270:	e7f7      	b.n	8010262 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010272:	f003 0301 	and.w	r3, r3, #1
 8010276:	f023 0003 	bic.w	r0, r3, #3
 801027a:	4408      	add	r0, r1
 801027c:	4288      	cmp	r0, r1
 801027e:	4614      	mov	r4, r2
 8010280:	d904      	bls.n	801028c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010282:	6824      	ldr	r4, [r4, #0]
 8010284:	f841 4b04 	str.w	r4, [r1], #4
 8010288:	3204      	adds	r2, #4
 801028a:	e7f7      	b.n	801027c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 801028c:	f003 0303 	and.w	r3, r3, #3
 8010290:	440b      	add	r3, r1
 8010292:	3a01      	subs	r2, #1
 8010294:	428b      	cmp	r3, r1
 8010296:	d90c      	bls.n	80102b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010298:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801029c:	f801 0b01 	strb.w	r0, [r1], #1
 80102a0:	e7f8      	b.n	8010294 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80102a2:	0790      	lsls	r0, r2, #30
 80102a4:	d0e7      	beq.n	8010276 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80102a6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80102aa:	f821 0b02 	strh.w	r0, [r1], #2
 80102ae:	3b02      	subs	r3, #2
 80102b0:	e7e1      	b.n	8010276 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80102b2:	2001      	movs	r0, #1
 80102b4:	bd10      	pop	{r4, pc}

080102b6 <_ZN8touchgfx3HAL7noTouchEv>:
 80102b6:	b510      	push	{r4, lr}
 80102b8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80102bc:	4604      	mov	r4, r0
 80102be:	b153      	cbz	r3, 80102d6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80102c0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80102c4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80102c8:	2101      	movs	r1, #1
 80102ca:	301c      	adds	r0, #28
 80102cc:	f015 fe24 	bl	8025f18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80102d0:	2300      	movs	r3, #0
 80102d2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80102d6:	bd10      	pop	{r4, pc}

080102d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80102d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80102dc:	b085      	sub	sp, #20
 80102de:	ad04      	add	r5, sp, #16
 80102e0:	4604      	mov	r4, r0
 80102e2:	2000      	movs	r0, #0
 80102e4:	f845 0d04 	str.w	r0, [r5, #-4]!
 80102e8:	69a0      	ldr	r0, [r4, #24]
 80102ea:	6806      	ldr	r6, [r0, #0]
 80102ec:	9501      	str	r5, [sp, #4]
 80102ee:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80102f2:	9500      	str	r5, [sp, #0]
 80102f4:	6835      	ldr	r5, [r6, #0]
 80102f6:	4699      	mov	r9, r3
 80102f8:	460f      	mov	r7, r1
 80102fa:	4690      	mov	r8, r2
 80102fc:	47a8      	blx	r5
 80102fe:	4d10      	ldr	r5, [pc, #64]	; (8010340 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010300:	4606      	mov	r6, r0
 8010302:	f8a5 9000 	strh.w	r9, [r5]
 8010306:	f7f3 fa6b 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 801030a:	6803      	ldr	r3, [r0, #0]
 801030c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801030e:	4798      	blx	r3
 8010310:	b128      	cbz	r0, 801031e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010312:	2801      	cmp	r0, #1
 8010314:	d00b      	beq.n	801032e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010316:	4630      	mov	r0, r6
 8010318:	b005      	add	sp, #20
 801031a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801031e:	882b      	ldrh	r3, [r5, #0]
 8010320:	fb08 7203 	mla	r2, r8, r3, r7
 8010324:	9b03      	ldr	r3, [sp, #12]
 8010326:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801032a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801032c:	e7f3      	b.n	8010316 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801032e:	882a      	ldrh	r2, [r5, #0]
 8010330:	9b03      	ldr	r3, [sp, #12]
 8010332:	fb08 7202 	mla	r2, r8, r2, r7
 8010336:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801033a:	1a9a      	subs	r2, r3, r2
 801033c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801033e:	e7ea      	b.n	8010316 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010340:	20012e76 	.word	0x20012e76

08010344 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010344:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010346:	b08b      	sub	sp, #44	; 0x2c
 8010348:	4617      	mov	r7, r2
 801034a:	4604      	mov	r4, r0
 801034c:	460e      	mov	r6, r1
 801034e:	461d      	mov	r5, r3
 8010350:	f7f3 fa46 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 8010354:	6803      	ldr	r3, [r0, #0]
 8010356:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010358:	4798      	blx	r3
 801035a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801035e:	9007      	str	r0, [sp, #28]
 8010360:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010364:	4b0d      	ldr	r3, [pc, #52]	; (801039c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010366:	6822      	ldr	r2, [r4, #0]
 8010368:	881b      	ldrh	r3, [r3, #0]
 801036a:	9306      	str	r3, [sp, #24]
 801036c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010370:	9305      	str	r3, [sp, #20]
 8010372:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010376:	9304      	str	r3, [sp, #16]
 8010378:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801037c:	9303      	str	r3, [sp, #12]
 801037e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010382:	9302      	str	r3, [sp, #8]
 8010384:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010388:	e9cd 5300 	strd	r5, r3, [sp]
 801038c:	4631      	mov	r1, r6
 801038e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010390:	463b      	mov	r3, r7
 8010392:	2200      	movs	r2, #0
 8010394:	4620      	mov	r0, r4
 8010396:	47a8      	blx	r5
 8010398:	b00b      	add	sp, #44	; 0x2c
 801039a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801039c:	20012e76 	.word	0x20012e76

080103a0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80103a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80103a4:	4698      	mov	r8, r3
 80103a6:	6803      	ldr	r3, [r0, #0]
 80103a8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80103aa:	4b15      	ldr	r3, [pc, #84]	; (8010400 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80103ac:	b08b      	sub	sp, #44	; 0x2c
 80103ae:	4617      	mov	r7, r2
 80103b0:	f8b3 9000 	ldrh.w	r9, [r3]
 80103b4:	460e      	mov	r6, r1
 80103b6:	4604      	mov	r4, r0
 80103b8:	f7f3 fa12 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 80103bc:	6803      	ldr	r3, [r0, #0]
 80103be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80103c0:	4798      	blx	r3
 80103c2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80103c6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80103ca:	2302      	movs	r3, #2
 80103cc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80103d0:	2301      	movs	r3, #1
 80103d2:	9305      	str	r3, [sp, #20]
 80103d4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80103d8:	9304      	str	r3, [sp, #16]
 80103da:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80103de:	9303      	str	r3, [sp, #12]
 80103e0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80103e4:	9302      	str	r3, [sp, #8]
 80103e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80103ea:	2200      	movs	r2, #0
 80103ec:	e9cd 8300 	strd	r8, r3, [sp]
 80103f0:	4631      	mov	r1, r6
 80103f2:	463b      	mov	r3, r7
 80103f4:	4620      	mov	r0, r4
 80103f6:	47a8      	blx	r5
 80103f8:	b00b      	add	sp, #44	; 0x2c
 80103fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80103fe:	bf00      	nop
 8010400:	20012e76 	.word	0x20012e76

08010404 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010404:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010408:	4698      	mov	r8, r3
 801040a:	6803      	ldr	r3, [r0, #0]
 801040c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801040e:	4b11      	ldr	r3, [pc, #68]	; (8010454 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010410:	b087      	sub	sp, #28
 8010412:	f8b3 9000 	ldrh.w	r9, [r3]
 8010416:	460e      	mov	r6, r1
 8010418:	4617      	mov	r7, r2
 801041a:	4604      	mov	r4, r0
 801041c:	f7f3 f9e0 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 8010420:	6803      	ldr	r3, [r0, #0]
 8010422:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010424:	4798      	blx	r3
 8010426:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801042a:	f8cd 900c 	str.w	r9, [sp, #12]
 801042e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010432:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010436:	9302      	str	r3, [sp, #8]
 8010438:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801043c:	9301      	str	r3, [sp, #4]
 801043e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010442:	9300      	str	r3, [sp, #0]
 8010444:	463a      	mov	r2, r7
 8010446:	4643      	mov	r3, r8
 8010448:	4631      	mov	r1, r6
 801044a:	4620      	mov	r0, r4
 801044c:	47a8      	blx	r5
 801044e:	b007      	add	sp, #28
 8010450:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010454:	20012e76 	.word	0x20012e76

08010458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801045c:	4604      	mov	r4, r0
 801045e:	b08f      	sub	sp, #60	; 0x3c
 8010460:	4610      	mov	r0, r2
 8010462:	460d      	mov	r5, r1
 8010464:	4691      	mov	r9, r2
 8010466:	461e      	mov	r6, r3
 8010468:	f008 f8f0 	bl	801864c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801046c:	2800      	cmp	r0, #0
 801046e:	f000 809d 	beq.w	80105ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010472:	6823      	ldr	r3, [r4, #0]
 8010474:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010610 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010478:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801047a:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010614 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801047e:	4f61      	ldr	r7, [pc, #388]	; (8010604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010480:	4620      	mov	r0, r4
 8010482:	4798      	blx	r3
 8010484:	6823      	ldr	r3, [r4, #0]
 8010486:	4620      	mov	r0, r4
 8010488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801048a:	4798      	blx	r3
 801048c:	f8bb 3000 	ldrh.w	r3, [fp]
 8010490:	9301      	str	r3, [sp, #4]
 8010492:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010496:	f8ba 3000 	ldrh.w	r3, [sl]
 801049a:	9302      	str	r3, [sp, #8]
 801049c:	883b      	ldrh	r3, [r7, #0]
 801049e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80104a2:	9303      	str	r3, [sp, #12]
 80104a4:	4b58      	ldr	r3, [pc, #352]	; (8010608 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80104a6:	9305      	str	r3, [sp, #20]
 80104a8:	881a      	ldrh	r2, [r3, #0]
 80104aa:	9204      	str	r2, [sp, #16]
 80104ac:	4640      	mov	r0, r8
 80104ae:	f008 f961 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80104b2:	8038      	strh	r0, [r7, #0]
 80104b4:	4640      	mov	r0, r8
 80104b6:	f008 f991 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80104ba:	9b05      	ldr	r3, [sp, #20]
 80104bc:	b280      	uxth	r0, r0
 80104be:	8018      	strh	r0, [r3, #0]
 80104c0:	4b52      	ldr	r3, [pc, #328]	; (801060c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80104c2:	781b      	ldrb	r3, [r3, #0]
 80104c4:	2b00      	cmp	r3, #0
 80104c6:	d174      	bne.n	80105b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80104c8:	883b      	ldrh	r3, [r7, #0]
 80104ca:	f8ab 3000 	strh.w	r3, [fp]
 80104ce:	f8aa 0000 	strh.w	r0, [sl]
 80104d2:	4648      	mov	r0, r9
 80104d4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80104d8:	f008 f8b8 	bl	801864c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80104dc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80104e0:	2200      	movs	r2, #0
 80104e2:	4611      	mov	r1, r2
 80104e4:	4628      	mov	r0, r5
 80104e6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80104ea:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80104ee:	f7f2 f8bc 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 80104f2:	2301      	movs	r3, #1
 80104f4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80104f8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80104fc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010500:	2b00      	cmp	r3, #0
 8010502:	dd5c      	ble.n	80105be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010504:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010508:	2b00      	cmp	r3, #0
 801050a:	dd58      	ble.n	80105be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801050c:	462a      	mov	r2, r5
 801050e:	ab0a      	add	r3, sp, #40	; 0x28
 8010510:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010514:	6851      	ldr	r1, [r2, #4]
 8010516:	c303      	stmia	r3!, {r0, r1}
 8010518:	4631      	mov	r1, r6
 801051a:	a80a      	add	r0, sp, #40	; 0x28
 801051c:	f7ff fc06 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 8010520:	4b38      	ldr	r3, [pc, #224]	; (8010604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010522:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010526:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801052a:	2100      	movs	r1, #0
 801052c:	aa0a      	add	r2, sp, #40	; 0x28
 801052e:	4b36      	ldr	r3, [pc, #216]	; (8010608 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010530:	910c      	str	r1, [sp, #48]	; 0x30
 8010532:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010536:	f9b3 3000 	ldrsh.w	r3, [r3]
 801053a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801053e:	ab08      	add	r3, sp, #32
 8010540:	e883 0003 	stmia.w	r3, {r0, r1}
 8010544:	4618      	mov	r0, r3
 8010546:	a90c      	add	r1, sp, #48	; 0x30
 8010548:	f7ff fbf0 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 801054c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801054e:	2b00      	cmp	r3, #0
 8010550:	d13c      	bne.n	80105cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010552:	2000      	movs	r0, #0
 8010554:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010558:	2600      	movs	r6, #0
 801055a:	682a      	ldr	r2, [r5, #0]
 801055c:	696b      	ldr	r3, [r5, #20]
 801055e:	616e      	str	r6, [r5, #20]
 8010560:	9305      	str	r3, [sp, #20]
 8010562:	6892      	ldr	r2, [r2, #8]
 8010564:	a908      	add	r1, sp, #32
 8010566:	4628      	mov	r0, r5
 8010568:	4790      	blx	r2
 801056a:	9b05      	ldr	r3, [sp, #20]
 801056c:	616b      	str	r3, [r5, #20]
 801056e:	4652      	mov	r2, sl
 8010570:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010574:	4649      	mov	r1, r9
 8010576:	4628      	mov	r0, r5
 8010578:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801057c:	f7f2 f875 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8010580:	4b23      	ldr	r3, [pc, #140]	; (8010610 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010582:	9a01      	ldr	r2, [sp, #4]
 8010584:	801a      	strh	r2, [r3, #0]
 8010586:	4b23      	ldr	r3, [pc, #140]	; (8010614 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010588:	9a02      	ldr	r2, [sp, #8]
 801058a:	801a      	strh	r2, [r3, #0]
 801058c:	4b1d      	ldr	r3, [pc, #116]	; (8010604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801058e:	9a03      	ldr	r2, [sp, #12]
 8010590:	801a      	strh	r2, [r3, #0]
 8010592:	4b1d      	ldr	r3, [pc, #116]	; (8010608 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010594:	9a04      	ldr	r2, [sp, #16]
 8010596:	801a      	strh	r2, [r3, #0]
 8010598:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801059c:	6823      	ldr	r3, [r4, #0]
 801059e:	4620      	mov	r0, r4
 80105a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80105a2:	4798      	blx	r3
 80105a4:	6823      	ldr	r3, [r4, #0]
 80105a6:	4620      	mov	r0, r4
 80105a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105aa:	4798      	blx	r3
 80105ac:	b00f      	add	sp, #60	; 0x3c
 80105ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105b2:	883b      	ldrh	r3, [r7, #0]
 80105b4:	f8ab 0000 	strh.w	r0, [fp]
 80105b8:	f8aa 3000 	strh.w	r3, [sl]
 80105bc:	e789      	b.n	80104d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80105be:	462a      	mov	r2, r5
 80105c0:	ab0a      	add	r3, sp, #40	; 0x28
 80105c2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80105c6:	6851      	ldr	r1, [r2, #4]
 80105c8:	c303      	stmia	r3!, {r0, r1}
 80105ca:	e7a9      	b.n	8010520 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80105cc:	a807      	add	r0, sp, #28
 80105ce:	f008 fa41 	bl	8018a54 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80105d2:	4606      	mov	r6, r0
 80105d4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80105d6:	6803      	ldr	r3, [r0, #0]
 80105d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105da:	4798      	blx	r3
 80105dc:	4286      	cmp	r6, r0
 80105de:	d1b8      	bne.n	8010552 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80105e0:	f7f3 f8fe 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 80105e4:	6803      	ldr	r3, [r0, #0]
 80105e6:	4606      	mov	r6, r0
 80105e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80105ea:	9305      	str	r3, [sp, #20]
 80105ec:	a807      	add	r0, sp, #28
 80105ee:	f008 fa31 	bl	8018a54 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80105f2:	9b05      	ldr	r3, [sp, #20]
 80105f4:	4601      	mov	r1, r0
 80105f6:	4630      	mov	r0, r6
 80105f8:	4798      	blx	r3
 80105fa:	f080 0001 	eor.w	r0, r0, #1
 80105fe:	b2c0      	uxtb	r0, r0
 8010600:	e7a8      	b.n	8010554 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010602:	bf00      	nop
 8010604:	20012e70 	.word	0x20012e70
 8010608:	20012e72 	.word	0x20012e72
 801060c:	20012e74 	.word	0x20012e74
 8010610:	20012e76 	.word	0x20012e76
 8010614:	20012e78 	.word	0x20012e78

08010618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010618:	b510      	push	{r4, lr}
 801061a:	4b07      	ldr	r3, [pc, #28]	; (8010638 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801061c:	781b      	ldrb	r3, [r3, #0]
 801061e:	4604      	mov	r4, r0
 8010620:	b13b      	cbz	r3, 8010632 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010622:	6803      	ldr	r3, [r0, #0]
 8010624:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010626:	4798      	blx	r3
 8010628:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801062a:	4283      	cmp	r3, r0
 801062c:	d101      	bne.n	8010632 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801062e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010630:	bd10      	pop	{r4, pc}
 8010632:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010634:	e7fc      	b.n	8010630 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010636:	bf00      	nop
 8010638:	20012e7a 	.word	0x20012e7a

0801063c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801063c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010640:	b08a      	sub	sp, #40	; 0x28
 8010642:	461d      	mov	r5, r3
 8010644:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010648:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801064c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010650:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010654:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010658:	f8ad 301a 	strh.w	r3, [sp, #26]
 801065c:	2400      	movs	r4, #0
 801065e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010662:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010666:	f8ad 301c 	strh.w	r3, [sp, #28]
 801066a:	4690      	mov	r8, r2
 801066c:	4607      	mov	r7, r0
 801066e:	9404      	str	r4, [sp, #16]
 8010670:	f88d 4020 	strb.w	r4, [sp, #32]
 8010674:	f7ff ffd0 	bl	8010618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010678:	fb06 8505 	mla	r5, r6, r5, r8
 801067c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010680:	6878      	ldr	r0, [r7, #4]
 8010682:	9505      	str	r5, [sp, #20]
 8010684:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010688:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801068c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010690:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010694:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010698:	6803      	ldr	r3, [r0, #0]
 801069a:	a901      	add	r1, sp, #4
 801069c:	685b      	ldr	r3, [r3, #4]
 801069e:	4798      	blx	r3
 80106a0:	b00a      	add	sp, #40	; 0x28
 80106a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080106a6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80106a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80106aa:	b08b      	sub	sp, #44	; 0x2c
 80106ac:	2400      	movs	r4, #0
 80106ae:	461d      	mov	r5, r3
 80106b0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80106b4:	4688      	mov	r8, r1
 80106b6:	4691      	mov	r9, r2
 80106b8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80106bc:	9404      	str	r4, [sp, #16]
 80106be:	4607      	mov	r7, r0
 80106c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80106c4:	f7ff ffa8 	bl	8010618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80106c8:	fb06 9505 	mla	r5, r6, r5, r9
 80106cc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80106d0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80106d4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80106d8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80106dc:	6878      	ldr	r0, [r7, #4]
 80106de:	9505      	str	r5, [sp, #20]
 80106e0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80106e4:	f8ad 401c 	strh.w	r4, [sp, #28]
 80106e8:	f8ad 601e 	strh.w	r6, [sp, #30]
 80106ec:	f8cd 8010 	str.w	r8, [sp, #16]
 80106f0:	f8ad 4020 	strh.w	r4, [sp, #32]
 80106f4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80106f8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80106fc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010700:	6803      	ldr	r3, [r0, #0]
 8010702:	a901      	add	r1, sp, #4
 8010704:	685b      	ldr	r3, [r3, #4]
 8010706:	4798      	blx	r3
 8010708:	b00b      	add	sp, #44	; 0x2c
 801070a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010710 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010710:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010714:	b08a      	sub	sp, #40	; 0x28
 8010716:	4698      	mov	r8, r3
 8010718:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801071c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010720:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010724:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010728:	2300      	movs	r3, #0
 801072a:	2d0b      	cmp	r5, #11
 801072c:	4606      	mov	r6, r0
 801072e:	9304      	str	r3, [sp, #16]
 8010730:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010734:	d138      	bne.n	80107a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010736:	2380      	movs	r3, #128	; 0x80
 8010738:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801073c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010740:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010744:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010748:	f8ad 301a 	strh.w	r3, [sp, #26]
 801074c:	f88d 0020 	strb.w	r0, [sp, #32]
 8010750:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010754:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010758:	4630      	mov	r0, r6
 801075a:	9203      	str	r2, [sp, #12]
 801075c:	f7ff ff5c 	bl	8010618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010760:	2c0b      	cmp	r4, #11
 8010762:	bf98      	it	ls
 8010764:	4b1b      	ldrls	r3, [pc, #108]	; (80107d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010766:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801076a:	bf98      	it	ls
 801076c:	5d19      	ldrbls	r1, [r3, r4]
 801076e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010772:	bf88      	it	hi
 8010774:	2100      	movhi	r1, #0
 8010776:	fb02 8307 	mla	r3, r2, r7, r8
 801077a:	10c9      	asrs	r1, r1, #3
 801077c:	fb01 0003 	mla	r0, r1, r3, r0
 8010780:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010784:	9005      	str	r0, [sp, #20]
 8010786:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801078a:	6870      	ldr	r0, [r6, #4]
 801078c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010790:	2300      	movs	r3, #0
 8010792:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010796:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801079a:	6803      	ldr	r3, [r0, #0]
 801079c:	a901      	add	r1, sp, #4
 801079e:	685b      	ldr	r3, [r3, #4]
 80107a0:	4798      	blx	r3
 80107a2:	b00a      	add	sp, #40	; 0x28
 80107a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107a8:	2d02      	cmp	r5, #2
 80107aa:	d109      	bne.n	80107c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80107ac:	28ff      	cmp	r0, #255	; 0xff
 80107ae:	d105      	bne.n	80107bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80107b0:	f1bc 0f00 	cmp.w	ip, #0
 80107b4:	bf14      	ite	ne
 80107b6:	2340      	movne	r3, #64	; 0x40
 80107b8:	2320      	moveq	r3, #32
 80107ba:	e7bd      	b.n	8010738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80107bc:	2340      	movs	r3, #64	; 0x40
 80107be:	e7bb      	b.n	8010738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80107c0:	28ff      	cmp	r0, #255	; 0xff
 80107c2:	d105      	bne.n	80107d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 80107c4:	f1bc 0f00 	cmp.w	ip, #0
 80107c8:	bf14      	ite	ne
 80107ca:	2304      	movne	r3, #4
 80107cc:	2301      	moveq	r3, #1
 80107ce:	e7b3      	b.n	8010738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80107d0:	2304      	movs	r3, #4
 80107d2:	e7b1      	b.n	8010738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80107d4:	0802de54 	.word	0x0802de54

080107d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80107d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107dc:	b08b      	sub	sp, #44	; 0x2c
 80107de:	461d      	mov	r5, r3
 80107e0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80107e4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80107e8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80107ec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80107f0:	bf14      	ite	ne
 80107f2:	2308      	movne	r3, #8
 80107f4:	2302      	moveq	r3, #2
 80107f6:	2400      	movs	r4, #0
 80107f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80107fc:	4688      	mov	r8, r1
 80107fe:	4693      	mov	fp, r2
 8010800:	9404      	str	r4, [sp, #16]
 8010802:	4607      	mov	r7, r0
 8010804:	f7ff ff08 	bl	8010618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010808:	2e0b      	cmp	r6, #11
 801080a:	bf98      	it	ls
 801080c:	4b15      	ldrls	r3, [pc, #84]	; (8010864 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801080e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010812:	bf98      	it	ls
 8010814:	5d9c      	ldrbls	r4, [r3, r6]
 8010816:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801081a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801081e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010822:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010826:	f8ad 301a 	strh.w	r3, [sp, #26]
 801082a:	10e4      	asrs	r4, r4, #3
 801082c:	fb04 0405 	mla	r4, r4, r5, r0
 8010830:	2300      	movs	r3, #0
 8010832:	6878      	ldr	r0, [r7, #4]
 8010834:	9405      	str	r4, [sp, #20]
 8010836:	f8ad 301c 	strh.w	r3, [sp, #28]
 801083a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801083e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010842:	f88d 9020 	strb.w	r9, [sp, #32]
 8010846:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801084a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801084e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010852:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010856:	6803      	ldr	r3, [r0, #0]
 8010858:	a901      	add	r1, sp, #4
 801085a:	685b      	ldr	r3, [r3, #4]
 801085c:	4798      	blx	r3
 801085e:	b00b      	add	sp, #44	; 0x2c
 8010860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010864:	0802de54 	.word	0x0802de54

08010868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801086c:	461e      	mov	r6, r3
 801086e:	4b0a      	ldr	r3, [pc, #40]	; (8010898 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010870:	460f      	mov	r7, r1
 8010872:	881d      	ldrh	r5, [r3, #0]
 8010874:	4690      	mov	r8, r2
 8010876:	f7f2 ffb3 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 801087a:	6803      	ldr	r3, [r0, #0]
 801087c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801087e:	4798      	blx	r3
 8010880:	280b      	cmp	r0, #11
 8010882:	bf9a      	itte	ls
 8010884:	4b05      	ldrls	r3, [pc, #20]	; (801089c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010886:	5c1c      	ldrbls	r4, [r3, r0]
 8010888:	2400      	movhi	r4, #0
 801088a:	fb08 7005 	mla	r0, r8, r5, r7
 801088e:	10e4      	asrs	r4, r4, #3
 8010890:	fb04 6000 	mla	r0, r4, r0, r6
 8010894:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010898:	20012e76 	.word	0x20012e76
 801089c:	0802de54 	.word	0x0802de54

080108a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80108a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80108a2:	b08b      	sub	sp, #44	; 0x2c
 80108a4:	461f      	mov	r7, r3
 80108a6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80108aa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80108ae:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80108b2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80108b6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80108ba:	f8ad 301a 	strh.w	r3, [sp, #26]
 80108be:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80108c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80108c6:	2500      	movs	r5, #0
 80108c8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80108cc:	f88d 3020 	strb.w	r3, [sp, #32]
 80108d0:	4604      	mov	r4, r0
 80108d2:	4616      	mov	r6, r2
 80108d4:	9504      	str	r5, [sp, #16]
 80108d6:	f7ff fe9f 	bl	8010618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80108da:	463a      	mov	r2, r7
 80108dc:	4631      	mov	r1, r6
 80108de:	4603      	mov	r3, r0
 80108e0:	4620      	mov	r0, r4
 80108e2:	f7ff ffc1 	bl	8010868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80108e6:	4b0e      	ldr	r3, [pc, #56]	; (8010920 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80108e8:	9005      	str	r0, [sp, #20]
 80108ea:	881b      	ldrh	r3, [r3, #0]
 80108ec:	f8ad 301e 	strh.w	r3, [sp, #30]
 80108f0:	f7f2 ff76 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 80108f4:	6803      	ldr	r3, [r0, #0]
 80108f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80108f8:	4798      	blx	r3
 80108fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80108fc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010900:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010904:	9304      	str	r3, [sp, #16]
 8010906:	6860      	ldr	r0, [r4, #4]
 8010908:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801090c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010910:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010914:	6803      	ldr	r3, [r0, #0]
 8010916:	a901      	add	r1, sp, #4
 8010918:	685b      	ldr	r3, [r3, #4]
 801091a:	4798      	blx	r3
 801091c:	b00b      	add	sp, #44	; 0x2c
 801091e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010920:	20012e76 	.word	0x20012e76

08010924 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010924:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010926:	b08d      	sub	sp, #52	; 0x34
 8010928:	466b      	mov	r3, sp
 801092a:	e883 0006 	stmia.w	r3, {r1, r2}
 801092e:	2300      	movs	r3, #0
 8010930:	9306      	str	r3, [sp, #24]
 8010932:	6803      	ldr	r3, [r0, #0]
 8010934:	f8bd 6000 	ldrh.w	r6, [sp]
 8010938:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801093a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801093e:	2501      	movs	r5, #1
 8010940:	9503      	str	r5, [sp, #12]
 8010942:	4604      	mov	r4, r0
 8010944:	4798      	blx	r3
 8010946:	463a      	mov	r2, r7
 8010948:	4631      	mov	r1, r6
 801094a:	4603      	mov	r3, r0
 801094c:	4620      	mov	r0, r4
 801094e:	f7ff ff8b 	bl	8010868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010952:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010954:	9307      	str	r3, [sp, #28]
 8010956:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801095a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801095e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010962:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010966:	4b0f      	ldr	r3, [pc, #60]	; (80109a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010968:	9004      	str	r0, [sp, #16]
 801096a:	881b      	ldrh	r3, [r3, #0]
 801096c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010970:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010974:	f7f2 ff34 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 8010978:	6803      	ldr	r3, [r0, #0]
 801097a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801097c:	4798      	blx	r3
 801097e:	23ff      	movs	r3, #255	; 0xff
 8010980:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010984:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010988:	6860      	ldr	r0, [r4, #4]
 801098a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801098e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010992:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010996:	6803      	ldr	r3, [r0, #0]
 8010998:	a903      	add	r1, sp, #12
 801099a:	685b      	ldr	r3, [r3, #4]
 801099c:	4798      	blx	r3
 801099e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80109a0:	b00d      	add	sp, #52	; 0x34
 80109a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80109a4:	20012e76 	.word	0x20012e76

080109a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80109a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109ac:	b08c      	sub	sp, #48	; 0x30
 80109ae:	461e      	mov	r6, r3
 80109b0:	466d      	mov	r5, sp
 80109b2:	2300      	movs	r3, #0
 80109b4:	e885 0006 	stmia.w	r5, {r1, r2}
 80109b8:	9306      	str	r3, [sp, #24]
 80109ba:	6803      	ldr	r3, [r0, #0]
 80109bc:	f8bd 7000 	ldrh.w	r7, [sp]
 80109c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80109c2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80109c6:	2501      	movs	r5, #1
 80109c8:	9503      	str	r5, [sp, #12]
 80109ca:	4604      	mov	r4, r0
 80109cc:	4798      	blx	r3
 80109ce:	4642      	mov	r2, r8
 80109d0:	4639      	mov	r1, r7
 80109d2:	4603      	mov	r3, r0
 80109d4:	4620      	mov	r0, r4
 80109d6:	f7ff ff47 	bl	8010868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80109da:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80109de:	f8ad 3020 	strh.w	r3, [sp, #32]
 80109e2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80109e6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80109ea:	4b11      	ldr	r3, [pc, #68]	; (8010a30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80109ec:	9004      	str	r0, [sp, #16]
 80109ee:	881b      	ldrh	r3, [r3, #0]
 80109f0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80109f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80109f6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80109fa:	9607      	str	r6, [sp, #28]
 80109fc:	f7f2 fef0 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 8010a00:	6803      	ldr	r3, [r0, #0]
 8010a02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a04:	4798      	blx	r3
 8010a06:	23ff      	movs	r3, #255	; 0xff
 8010a08:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010a0c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010a10:	6860      	ldr	r0, [r4, #4]
 8010a12:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010a16:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010a1a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010a1e:	6803      	ldr	r3, [r0, #0]
 8010a20:	a903      	add	r1, sp, #12
 8010a22:	685b      	ldr	r3, [r3, #4]
 8010a24:	4798      	blx	r3
 8010a26:	4630      	mov	r0, r6
 8010a28:	b00c      	add	sp, #48	; 0x30
 8010a2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a2e:	bf00      	nop
 8010a30:	20012e76 	.word	0x20012e76

08010a34 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010a34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010a36:	b085      	sub	sp, #20
 8010a38:	ac02      	add	r4, sp, #8
 8010a3a:	e884 0006 	stmia.w	r4, {r1, r2}
 8010a3e:	4605      	mov	r5, r0
 8010a40:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010a44:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010a48:	f7ff fde6 	bl	8010618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010a4c:	463a      	mov	r2, r7
 8010a4e:	4603      	mov	r3, r0
 8010a50:	4631      	mov	r1, r6
 8010a52:	4628      	mov	r0, r5
 8010a54:	f7ff ff08 	bl	8010868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010a58:	4a05      	ldr	r2, [pc, #20]	; (8010a70 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8010a5a:	682b      	ldr	r3, [r5, #0]
 8010a5c:	8812      	ldrh	r2, [r2, #0]
 8010a5e:	9200      	str	r2, [sp, #0]
 8010a60:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010a62:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010a66:	4603      	mov	r3, r0
 8010a68:	4628      	mov	r0, r5
 8010a6a:	47b0      	blx	r6
 8010a6c:	b005      	add	sp, #20
 8010a6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a70:	20012e76 	.word	0x20012e76

08010a74 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010a74:	b570      	push	{r4, r5, r6, lr}
 8010a76:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8010a7a:	4604      	mov	r4, r0
 8010a7c:	b19b      	cbz	r3, 8010aa6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8010a7e:	2002      	movs	r0, #2
 8010a80:	f7ef ff04 	bl	800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010a84:	2300      	movs	r3, #0
 8010a86:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010a8a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8010a8e:	6823      	ldr	r3, [r4, #0]
 8010a90:	4620      	mov	r0, r4
 8010a92:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010a96:	f7ff fdbf 	bl	8010618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010a9a:	462b      	mov	r3, r5
 8010a9c:	4601      	mov	r1, r0
 8010a9e:	4620      	mov	r0, r4
 8010aa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010aa4:	4718      	bx	r3
 8010aa6:	bd70      	pop	{r4, r5, r6, pc}

08010aa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010aa8:	b538      	push	{r3, r4, r5, lr}
 8010aaa:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8010aae:	428b      	cmp	r3, r1
 8010ab0:	4604      	mov	r4, r0
 8010ab2:	460d      	mov	r5, r1
 8010ab4:	d006      	beq.n	8010ac4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010ab6:	6803      	ldr	r3, [r0, #0]
 8010ab8:	b929      	cbnz	r1, 8010ac6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8010aba:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010abe:	4798      	blx	r3
 8010ac0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010ac4:	bd38      	pop	{r3, r4, r5, pc}
 8010ac6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010aca:	e7f8      	b.n	8010abe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010acc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010acc:	b510      	push	{r4, lr}
 8010ace:	4b0d      	ldr	r3, [pc, #52]	; (8010b04 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010ad0:	781b      	ldrb	r3, [r3, #0]
 8010ad2:	4604      	mov	r4, r0
 8010ad4:	b95b      	cbnz	r3, 8010aee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010ad6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8010ada:	2b02      	cmp	r3, #2
 8010adc:	d007      	beq.n	8010aee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010ade:	6840      	ldr	r0, [r0, #4]
 8010ae0:	f000 f92c 	bl	8010d3c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010ae4:	b118      	cbz	r0, 8010aee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010ae6:	6862      	ldr	r2, [r4, #4]
 8010ae8:	7a53      	ldrb	r3, [r2, #9]
 8010aea:	2b00      	cmp	r3, #0
 8010aec:	d0fc      	beq.n	8010ae8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010aee:	f7f0 f805 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010af2:	4620      	mov	r0, r4
 8010af4:	2100      	movs	r1, #0
 8010af6:	f7ff ffd7 	bl	8010aa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010afa:	4620      	mov	r0, r4
 8010afc:	f7ff fd8c 	bl	8010618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010b00:	bd10      	pop	{r4, pc}
 8010b02:	bf00      	nop
 8010b04:	20012e7a 	.word	0x20012e7a

08010b08 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010b08:	b570      	push	{r4, r5, r6, lr}
 8010b0a:	4604      	mov	r4, r0
 8010b0c:	6803      	ldr	r3, [r0, #0]
 8010b0e:	b919      	cbnz	r1, 8010b18 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010b10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010b12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b16:	4718      	bx	r3
 8010b18:	2200      	movs	r2, #0
 8010b1a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8010b1e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010b22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010b24:	4798      	blx	r3
 8010b26:	6863      	ldr	r3, [r4, #4]
 8010b28:	2101      	movs	r1, #1
 8010b2a:	4605      	mov	r5, r0
 8010b2c:	7299      	strb	r1, [r3, #10]
 8010b2e:	4620      	mov	r0, r4
 8010b30:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010b34:	f7ff ffb8 	bl	8010aa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010b38:	4628      	mov	r0, r5
 8010b3a:	bd70      	pop	{r4, r5, r6, pc}

08010b3c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010b3c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010b40:	1a13      	subs	r3, r2, r0
 8010b42:	4258      	negs	r0, r3
 8010b44:	4158      	adcs	r0, r3
 8010b46:	4770      	bx	lr

08010b48 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010b48:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010b4c:	1a9b      	subs	r3, r3, r2
 8010b4e:	2b00      	cmp	r3, #0
 8010b50:	bfdc      	itt	le
 8010b52:	6882      	ldrle	r2, [r0, #8]
 8010b54:	189b      	addle	r3, r3, r2
 8010b56:	2b01      	cmp	r3, #1
 8010b58:	bfcc      	ite	gt
 8010b5a:	2000      	movgt	r0, #0
 8010b5c:	2001      	movle	r0, #1
 8010b5e:	4770      	bx	lr

08010b60 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010b60:	6902      	ldr	r2, [r0, #16]
 8010b62:	6843      	ldr	r3, [r0, #4]
 8010b64:	2024      	movs	r0, #36	; 0x24
 8010b66:	fb00 3002 	mla	r0, r0, r2, r3
 8010b6a:	4770      	bx	lr

08010b6c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8010b6c:	6803      	ldr	r3, [r0, #0]
 8010b6e:	691b      	ldr	r3, [r3, #16]
 8010b70:	4718      	bx	r3

08010b72 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010b72:	b570      	push	{r4, r5, r6, lr}
 8010b74:	2301      	movs	r3, #1
 8010b76:	7203      	strb	r3, [r0, #8]
 8010b78:	4604      	mov	r4, r0
 8010b7a:	6840      	ldr	r0, [r0, #4]
 8010b7c:	6803      	ldr	r3, [r0, #0]
 8010b7e:	699b      	ldr	r3, [r3, #24]
 8010b80:	4798      	blx	r3
 8010b82:	6803      	ldr	r3, [r0, #0]
 8010b84:	2b40      	cmp	r3, #64	; 0x40
 8010b86:	4605      	mov	r5, r0
 8010b88:	d00c      	beq.n	8010ba4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010b8a:	d810      	bhi.n	8010bae <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8010b8c:	2b04      	cmp	r3, #4
 8010b8e:	d01d      	beq.n	8010bcc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010b90:	d804      	bhi.n	8010b9c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010b92:	2b01      	cmp	r3, #1
 8010b94:	d006      	beq.n	8010ba4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010b96:	2b02      	cmp	r3, #2
 8010b98:	d02c      	beq.n	8010bf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8010b9a:	bd70      	pop	{r4, r5, r6, pc}
 8010b9c:	2b08      	cmp	r3, #8
 8010b9e:	d01d      	beq.n	8010bdc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010ba0:	2b20      	cmp	r3, #32
 8010ba2:	d1fa      	bne.n	8010b9a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010ba4:	6823      	ldr	r3, [r4, #0]
 8010ba6:	4620      	mov	r0, r4
 8010ba8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010baa:	4798      	blx	r3
 8010bac:	e013      	b.n	8010bd6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8010bae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010bb2:	d0f7      	beq.n	8010ba4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010bb4:	d804      	bhi.n	8010bc0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010bb6:	2b80      	cmp	r3, #128	; 0x80
 8010bb8:	d0f4      	beq.n	8010ba4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010bba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010bbe:	e7f0      	b.n	8010ba2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010bc0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010bc4:	d0ee      	beq.n	8010ba4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010bc6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8010bca:	e7e5      	b.n	8010b98 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010bcc:	6823      	ldr	r3, [r4, #0]
 8010bce:	7f01      	ldrb	r1, [r0, #28]
 8010bd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010bd2:	4620      	mov	r0, r4
 8010bd4:	4798      	blx	r3
 8010bd6:	6823      	ldr	r3, [r4, #0]
 8010bd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010bda:	e006      	b.n	8010bea <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8010bdc:	6823      	ldr	r3, [r4, #0]
 8010bde:	7f01      	ldrb	r1, [r0, #28]
 8010be0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010be2:	4620      	mov	r0, r4
 8010be4:	4798      	blx	r3
 8010be6:	6823      	ldr	r3, [r4, #0]
 8010be8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010bea:	4629      	mov	r1, r5
 8010bec:	4620      	mov	r0, r4
 8010bee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bf2:	4718      	bx	r3
 8010bf4:	6823      	ldr	r3, [r4, #0]
 8010bf6:	4620      	mov	r0, r4
 8010bf8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010bfa:	4798      	blx	r3
 8010bfc:	e7f3      	b.n	8010be6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08010bfe <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010bfe:	4770      	bx	lr

08010c00 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010c00:	4770      	bx	lr

08010c02 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010c02:	4770      	bx	lr

08010c04 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010c04:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010c08:	1ad2      	subs	r2, r2, r3
 8010c0a:	2a00      	cmp	r2, #0
 8010c0c:	b510      	push	{r4, lr}
 8010c0e:	bfdc      	itt	le
 8010c10:	6884      	ldrle	r4, [r0, #8]
 8010c12:	1912      	addle	r2, r2, r4
 8010c14:	2a01      	cmp	r2, #1
 8010c16:	dd16      	ble.n	8010c46 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010c18:	6842      	ldr	r2, [r0, #4]
 8010c1a:	2424      	movs	r4, #36	; 0x24
 8010c1c:	fb04 2303 	mla	r3, r4, r3, r2
 8010c20:	f101 0220 	add.w	r2, r1, #32
 8010c24:	f851 4b04 	ldr.w	r4, [r1], #4
 8010c28:	f843 4b04 	str.w	r4, [r3], #4
 8010c2c:	4291      	cmp	r1, r2
 8010c2e:	d1f9      	bne.n	8010c24 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010c30:	780a      	ldrb	r2, [r1, #0]
 8010c32:	701a      	strb	r2, [r3, #0]
 8010c34:	68c3      	ldr	r3, [r0, #12]
 8010c36:	6882      	ldr	r2, [r0, #8]
 8010c38:	f3bf 8f5b 	dmb	ish
 8010c3c:	3301      	adds	r3, #1
 8010c3e:	429a      	cmp	r2, r3
 8010c40:	bfd8      	it	le
 8010c42:	1a9b      	suble	r3, r3, r2
 8010c44:	60c3      	str	r3, [r0, #12]
 8010c46:	bd10      	pop	{r4, pc}

08010c48 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010c48:	6903      	ldr	r3, [r0, #16]
 8010c4a:	6882      	ldr	r2, [r0, #8]
 8010c4c:	f3bf 8f5b 	dmb	ish
 8010c50:	3301      	adds	r3, #1
 8010c52:	429a      	cmp	r2, r3
 8010c54:	bfd8      	it	le
 8010c56:	1a9b      	suble	r3, r3, r2
 8010c58:	6103      	str	r3, [r0, #16]
 8010c5a:	4770      	bx	lr

08010c5c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8010c5c:	b570      	push	{r4, r5, r6, lr}
 8010c5e:	4604      	mov	r4, r0
 8010c60:	460e      	mov	r6, r1
 8010c62:	6860      	ldr	r0, [r4, #4]
 8010c64:	6803      	ldr	r3, [r0, #0]
 8010c66:	685b      	ldr	r3, [r3, #4]
 8010c68:	4798      	blx	r3
 8010c6a:	2800      	cmp	r0, #0
 8010c6c:	d1f9      	bne.n	8010c62 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8010c6e:	4d0d      	ldr	r5, [pc, #52]	; (8010ca4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010c70:	6828      	ldr	r0, [r5, #0]
 8010c72:	6803      	ldr	r3, [r0, #0]
 8010c74:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010c76:	4798      	blx	r3
 8010c78:	f7ef ff4e 	bl	8000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8010c7c:	6828      	ldr	r0, [r5, #0]
 8010c7e:	2101      	movs	r1, #1
 8010c80:	f7ff ff12 	bl	8010aa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010c84:	6860      	ldr	r0, [r4, #4]
 8010c86:	6803      	ldr	r3, [r0, #0]
 8010c88:	4631      	mov	r1, r6
 8010c8a:	689b      	ldr	r3, [r3, #8]
 8010c8c:	4798      	blx	r3
 8010c8e:	6823      	ldr	r3, [r4, #0]
 8010c90:	4620      	mov	r0, r4
 8010c92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c94:	4798      	blx	r3
 8010c96:	6828      	ldr	r0, [r5, #0]
 8010c98:	6803      	ldr	r3, [r0, #0]
 8010c9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c9e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010ca0:	4718      	bx	r3
 8010ca2:	bf00      	nop
 8010ca4:	20012e7c 	.word	0x20012e7c

08010ca8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010ca8:	b508      	push	{r3, lr}
 8010caa:	f7ef ff27 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010cae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010cb2:	f7ef bf2b 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010cb6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010cb6:	b510      	push	{r4, lr}
 8010cb8:	2114      	movs	r1, #20
 8010cba:	4604      	mov	r4, r0
 8010cbc:	f018 f9bf 	bl	802903e <_ZdlPvj>
 8010cc0:	4620      	mov	r0, r4
 8010cc2:	bd10      	pop	{r4, pc}

08010cc4 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010cc4:	b510      	push	{r4, lr}
 8010cc6:	4604      	mov	r4, r0
 8010cc8:	6840      	ldr	r0, [r0, #4]
 8010cca:	6803      	ldr	r3, [r0, #0]
 8010ccc:	681b      	ldr	r3, [r3, #0]
 8010cce:	4798      	blx	r3
 8010cd0:	b948      	cbnz	r0, 8010ce6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010cd2:	7a63      	ldrb	r3, [r4, #9]
 8010cd4:	b13b      	cbz	r3, 8010ce6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010cd6:	7a23      	ldrb	r3, [r4, #8]
 8010cd8:	b92b      	cbnz	r3, 8010ce6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010cda:	6823      	ldr	r3, [r4, #0]
 8010cdc:	4620      	mov	r0, r4
 8010cde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010ce0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ce4:	4718      	bx	r3
 8010ce6:	bd10      	pop	{r4, pc}

08010ce8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010ce8:	b570      	push	{r4, r5, r6, lr}
 8010cea:	4604      	mov	r4, r0
 8010cec:	6840      	ldr	r0, [r0, #4]
 8010cee:	6803      	ldr	r3, [r0, #0]
 8010cf0:	681b      	ldr	r3, [r3, #0]
 8010cf2:	4798      	blx	r3
 8010cf4:	4605      	mov	r5, r0
 8010cf6:	b930      	cbnz	r0, 8010d06 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010cf8:	7a23      	ldrb	r3, [r4, #8]
 8010cfa:	b123      	cbz	r3, 8010d06 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010cfc:	6860      	ldr	r0, [r4, #4]
 8010cfe:	6803      	ldr	r3, [r0, #0]
 8010d00:	695b      	ldr	r3, [r3, #20]
 8010d02:	4798      	blx	r3
 8010d04:	7225      	strb	r5, [r4, #8]
 8010d06:	6860      	ldr	r0, [r4, #4]
 8010d08:	6803      	ldr	r3, [r0, #0]
 8010d0a:	681b      	ldr	r3, [r3, #0]
 8010d0c:	4798      	blx	r3
 8010d0e:	b928      	cbnz	r0, 8010d1c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010d10:	6823      	ldr	r3, [r4, #0]
 8010d12:	4620      	mov	r0, r4
 8010d14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010d16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d1a:	4718      	bx	r3
 8010d1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d20:	f7ef bf02 	b.w	8000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010d24 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010d24:	b510      	push	{r4, lr}
 8010d26:	4c04      	ldr	r4, [pc, #16]	; (8010d38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010d28:	6082      	str	r2, [r0, #8]
 8010d2a:	2200      	movs	r2, #0
 8010d2c:	e9c0 4100 	strd	r4, r1, [r0]
 8010d30:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010d34:	bd10      	pop	{r4, pc}
 8010d36:	bf00      	nop
 8010d38:	0802de68 	.word	0x0802de68

08010d3c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8010d3c:	6840      	ldr	r0, [r0, #4]
 8010d3e:	6803      	ldr	r3, [r0, #0]
 8010d40:	681b      	ldr	r3, [r3, #0]
 8010d42:	4718      	bx	r3

08010d44 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010d44:	4b06      	ldr	r3, [pc, #24]	; (8010d60 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010d46:	60c1      	str	r1, [r0, #12]
 8010d48:	094a      	lsrs	r2, r1, #5
 8010d4a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8010d4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010d52:	4313      	orrs	r3, r2
 8010d54:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8010d58:	4319      	orrs	r1, r3
 8010d5a:	8201      	strh	r1, [r0, #16]
 8010d5c:	4770      	bx	lr
 8010d5e:	bf00      	nop
 8010d60:	fffff800 	.word	0xfffff800

08010d64 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010d64:	f1a0 0008 	sub.w	r0, r0, #8
 8010d68:	e7ec      	b.n	8010d44 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8010d6a:	bf00      	nop

08010d6c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8010d6c:	b508      	push	{r3, lr}
 8010d6e:	4b05      	ldr	r3, [pc, #20]	; (8010d84 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8010d70:	6818      	ldr	r0, [r3, #0]
 8010d72:	6803      	ldr	r3, [r0, #0]
 8010d74:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010d78:	4798      	blx	r3
 8010d7a:	1e43      	subs	r3, r0, #1
 8010d7c:	4258      	negs	r0, r3
 8010d7e:	4158      	adcs	r0, r3
 8010d80:	bd08      	pop	{r3, pc}
 8010d82:	bf00      	nop
 8010d84:	20012e7c 	.word	0x20012e7c

08010d88 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8010d88:	4770      	bx	lr

08010d8a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8010d8a:	3808      	subs	r0, #8
 8010d8c:	4770      	bx	lr

08010d8e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8010d8e:	b430      	push	{r4, r5}
 8010d90:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010d94:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010d98:	8a02      	ldrh	r2, [r0, #16]
 8010d9a:	9202      	str	r2, [sp, #8]
 8010d9c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010da0:	68c2      	ldr	r2, [r0, #12]
 8010da2:	4629      	mov	r1, r5
 8010da4:	4620      	mov	r0, r4
 8010da6:	bc30      	pop	{r4, r5}
 8010da8:	f7f0 b982 	b.w	80010b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08010dac <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8010dac:	f7f0 b97e 	b.w	80010ac <_ZN8touchgfx5paint8tearDownEv>

08010db0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010db0:	b510      	push	{r4, lr}
 8010db2:	2114      	movs	r1, #20
 8010db4:	4604      	mov	r4, r0
 8010db6:	f018 f942 	bl	802903e <_ZdlPvj>
 8010dba:	4620      	mov	r0, r4
 8010dbc:	bd10      	pop	{r4, pc}

08010dbe <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8010dbe:	f1a0 0008 	sub.w	r0, r0, #8
 8010dc2:	e7f5      	b.n	8010db0 <_ZN8touchgfx13PainterRGB565D0Ev>

08010dc4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010dc4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010dc6:	6803      	ldr	r3, [r0, #0]
 8010dc8:	460d      	mov	r5, r1
 8010dca:	4604      	mov	r4, r0
 8010dcc:	4601      	mov	r1, r0
 8010dce:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010dd0:	a802      	add	r0, sp, #8
 8010dd2:	4798      	blx	r3
 8010dd4:	6828      	ldr	r0, [r5, #0]
 8010dd6:	6869      	ldr	r1, [r5, #4]
 8010dd8:	466b      	mov	r3, sp
 8010dda:	c303      	stmia	r3!, {r0, r1}
 8010ddc:	4668      	mov	r0, sp
 8010dde:	4619      	mov	r1, r3
 8010de0:	f7fe ffa4 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 8010de4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010de6:	b188      	cbz	r0, 8010e0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010de8:	6803      	ldr	r3, [r0, #0]
 8010dea:	1d21      	adds	r1, r4, #4
 8010dec:	68db      	ldr	r3, [r3, #12]
 8010dee:	4798      	blx	r3
 8010df0:	b160      	cbz	r0, 8010e0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010df2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010df6:	2b00      	cmp	r3, #0
 8010df8:	dd08      	ble.n	8010e0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010dfa:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8010dfe:	2d00      	cmp	r5, #0
 8010e00:	dd04      	ble.n	8010e0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010e02:	4a2b      	ldr	r2, [pc, #172]	; (8010eb0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010e04:	7812      	ldrb	r2, [r2, #0]
 8010e06:	b11a      	cbz	r2, 8010e10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010e08:	2a01      	cmp	r2, #1
 8010e0a:	d029      	beq.n	8010e60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8010e0c:	b004      	add	sp, #16
 8010e0e:	bd70      	pop	{r4, r5, r6, pc}
 8010e10:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010e14:	441d      	add	r5, r3
 8010e16:	b2ad      	uxth	r5, r5
 8010e18:	b22e      	sxth	r6, r5
 8010e1a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8010e1e:	42b3      	cmp	r3, r6
 8010e20:	daf4      	bge.n	8010e0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010e22:	6823      	ldr	r3, [r4, #0]
 8010e24:	4669      	mov	r1, sp
 8010e26:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010e28:	4620      	mov	r0, r4
 8010e2a:	4798      	blx	r3
 8010e2c:	b940      	cbnz	r0, 8010e40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010e2e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010e32:	2b01      	cmp	r3, #1
 8010e34:	d004      	beq.n	8010e40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010e36:	3301      	adds	r3, #1
 8010e38:	105b      	asrs	r3, r3, #1
 8010e3a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e3e:	e7f0      	b.n	8010e22 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010e40:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010e44:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010e48:	4413      	add	r3, r2
 8010e4a:	b29b      	uxth	r3, r3
 8010e4c:	441a      	add	r2, r3
 8010e4e:	b212      	sxth	r2, r2
 8010e50:	4296      	cmp	r6, r2
 8010e52:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010e56:	dae0      	bge.n	8010e1a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010e58:	1aeb      	subs	r3, r5, r3
 8010e5a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e5e:	e7dc      	b.n	8010e1a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010e60:	f8bd 5000 	ldrh.w	r5, [sp]
 8010e64:	441d      	add	r5, r3
 8010e66:	b2ad      	uxth	r5, r5
 8010e68:	b22e      	sxth	r6, r5
 8010e6a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8010e6e:	42b3      	cmp	r3, r6
 8010e70:	dacc      	bge.n	8010e0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010e72:	6823      	ldr	r3, [r4, #0]
 8010e74:	4669      	mov	r1, sp
 8010e76:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010e78:	4620      	mov	r0, r4
 8010e7a:	4798      	blx	r3
 8010e7c:	b940      	cbnz	r0, 8010e90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010e7e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010e82:	2b01      	cmp	r3, #1
 8010e84:	d004      	beq.n	8010e90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010e86:	3301      	adds	r3, #1
 8010e88:	105b      	asrs	r3, r3, #1
 8010e8a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010e8e:	e7f0      	b.n	8010e72 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010e90:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010e94:	f8bd 3000 	ldrh.w	r3, [sp]
 8010e98:	4413      	add	r3, r2
 8010e9a:	b29b      	uxth	r3, r3
 8010e9c:	441a      	add	r2, r3
 8010e9e:	b212      	sxth	r2, r2
 8010ea0:	4296      	cmp	r6, r2
 8010ea2:	f8ad 3000 	strh.w	r3, [sp]
 8010ea6:	dae0      	bge.n	8010e6a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010ea8:	1aeb      	subs	r3, r5, r3
 8010eaa:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010eae:	e7dc      	b.n	8010e6a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010eb0:	20012e74 	.word	0x20012e74

08010eb4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010eb4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010eb6:	6803      	ldr	r3, [r0, #0]
 8010eb8:	4604      	mov	r4, r0
 8010eba:	4601      	mov	r1, r0
 8010ebc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010ebe:	4668      	mov	r0, sp
 8010ec0:	4798      	blx	r3
 8010ec2:	2100      	movs	r1, #0
 8010ec4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010ec8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010ecc:	9102      	str	r1, [sp, #8]
 8010ece:	4668      	mov	r0, sp
 8010ed0:	a902      	add	r1, sp, #8
 8010ed2:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010ed6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010eda:	f7fe ff27 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 8010ede:	6823      	ldr	r3, [r4, #0]
 8010ee0:	4669      	mov	r1, sp
 8010ee2:	691b      	ldr	r3, [r3, #16]
 8010ee4:	4620      	mov	r0, r4
 8010ee6:	4798      	blx	r3
 8010ee8:	b004      	add	sp, #16
 8010eea:	bd10      	pop	{r4, pc}

08010eec <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010eec:	2101      	movs	r1, #1
 8010eee:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010ef2:	490b      	ldr	r1, [pc, #44]	; (8010f20 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010ef4:	6001      	str	r1, [r0, #0]
 8010ef6:	2200      	movs	r2, #0
 8010ef8:	21ff      	movs	r1, #255	; 0xff
 8010efa:	8082      	strh	r2, [r0, #4]
 8010efc:	80c2      	strh	r2, [r0, #6]
 8010efe:	8102      	strh	r2, [r0, #8]
 8010f00:	8142      	strh	r2, [r0, #10]
 8010f02:	8182      	strh	r2, [r0, #12]
 8010f04:	81c2      	strh	r2, [r0, #14]
 8010f06:	8202      	strh	r2, [r0, #16]
 8010f08:	8242      	strh	r2, [r0, #18]
 8010f0a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010f0e:	61c2      	str	r2, [r0, #28]
 8010f10:	8402      	strh	r2, [r0, #32]
 8010f12:	8442      	strh	r2, [r0, #34]	; 0x22
 8010f14:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010f18:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8010f1c:	6282      	str	r2, [r0, #40]	; 0x28
 8010f1e:	4770      	bx	lr
 8010f20:	0802dec4 	.word	0x0802dec4

08010f24 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010f24:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010f28:	4602      	mov	r2, r0
 8010f2a:	cb03      	ldmia	r3!, {r0, r1}
 8010f2c:	6010      	str	r0, [r2, #0]
 8010f2e:	6051      	str	r1, [r2, #4]
 8010f30:	4610      	mov	r0, r2
 8010f32:	4770      	bx	lr

08010f34 <_ZN8touchgfx4LineD1Ev>:
 8010f34:	4770      	bx	lr

08010f36 <_ZN8touchgfx4LineD0Ev>:
 8010f36:	b510      	push	{r4, lr}
 8010f38:	2170      	movs	r1, #112	; 0x70
 8010f3a:	4604      	mov	r4, r0
 8010f3c:	f018 f87f 	bl	802903e <_ZdlPvj>
 8010f40:	4620      	mov	r0, r4
 8010f42:	bd10      	pop	{r4, pc}

08010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010f44:	b507      	push	{r0, r1, r2, lr}
 8010f46:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010f4a:	ab01      	add	r3, sp, #4
 8010f4c:	6809      	ldr	r1, [r1, #0]
 8010f4e:	6800      	ldr	r0, [r0, #0]
 8010f50:	f005 fab4 	bl	80164bc <_ZN8touchgfx6muldivElllRl>
 8010f54:	b003      	add	sp, #12
 8010f56:	f85d fb04 	ldr.w	pc, [sp], #4

08010f5a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010f5a:	6800      	ldr	r0, [r0, #0]
 8010f5c:	2800      	cmp	r0, #0
 8010f5e:	bfb9      	ittee	lt
 8010f60:	2320      	movlt	r3, #32
 8010f62:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010f66:	301f      	addge	r0, #31
 8010f68:	1140      	asrge	r0, r0, #5
 8010f6a:	4770      	bx	lr

08010f6c <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f70:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010f74:	b089      	sub	sp, #36	; 0x24
 8010f76:	4604      	mov	r4, r0
 8010f78:	b353      	cbz	r3, 8010fd0 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010f7a:	6803      	ldr	r3, [r0, #0]
 8010f7c:	4601      	mov	r1, r0
 8010f7e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010f80:	a802      	add	r0, sp, #8
 8010f82:	4798      	blx	r3
 8010f84:	2220      	movs	r2, #32
 8010f86:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010f8a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010f8c:	fb9a f0f2 	sdiv	r0, sl, r2
 8010f90:	fb91 f5f2 	sdiv	r5, r1, r2
 8010f94:	1b40      	subs	r0, r0, r5
 8010f96:	2800      	cmp	r0, #0
 8010f98:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010f9a:	fb93 f6f2 	sdiv	r6, r3, r2
 8010f9e:	bfb8      	it	lt
 8010fa0:	4240      	neglt	r0, r0
 8010fa2:	0076      	lsls	r6, r6, #1
 8010fa4:	4286      	cmp	r6, r0
 8010fa6:	f8d4 b000 	ldr.w	fp, [r4]
 8010faa:	dc0c      	bgt.n	8010fc6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010fac:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010fae:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010fb2:	fb95 f0f2 	sdiv	r0, r5, r2
 8010fb6:	fb98 f7f2 	sdiv	r7, r8, r2
 8010fba:	1bc0      	subs	r0, r0, r7
 8010fbc:	2800      	cmp	r0, #0
 8010fbe:	bfb8      	it	lt
 8010fc0:	4240      	neglt	r0, r0
 8010fc2:	4286      	cmp	r6, r0
 8010fc4:	dd07      	ble.n	8010fd6 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010fc6:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010fca:	a902      	add	r1, sp, #8
 8010fcc:	4620      	mov	r0, r4
 8010fce:	4798      	blx	r3
 8010fd0:	b009      	add	sp, #36	; 0x24
 8010fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fd6:	3301      	adds	r3, #1
 8010fd8:	2002      	movs	r0, #2
 8010fda:	f10d 0920 	add.w	r9, sp, #32
 8010fde:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010fe2:	4103      	asrs	r3, r0
 8010fe4:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010fe8:	eb01 060a 	add.w	r6, r1, sl
 8010fec:	eb08 0705 	add.w	r7, r8, r5
 8010ff0:	fb96 f6f0 	sdiv	r6, r6, r0
 8010ff4:	fb97 f7f0 	sdiv	r7, r7, r0
 8010ff8:	4648      	mov	r0, r9
 8010ffa:	9101      	str	r1, [sp, #4]
 8010ffc:	b236      	sxth	r6, r6
 8010ffe:	b23f      	sxth	r7, r7
 8011000:	fb96 f6f2 	sdiv	r6, r6, r2
 8011004:	fb97 f7f2 	sdiv	r7, r7, r2
 8011008:	f7ff ffa7 	bl	8010f5a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801100c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011010:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011014:	9901      	ldr	r1, [sp, #4]
 8011016:	4293      	cmp	r3, r2
 8011018:	fa1f fe87 	uxth.w	lr, r7
 801101c:	fa1f fc86 	uxth.w	ip, r6
 8011020:	eba1 0a0a 	sub.w	sl, r1, sl
 8011024:	b280      	uxth	r0, r0
 8011026:	da54      	bge.n	80110d2 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011028:	ebac 0100 	sub.w	r1, ip, r0
 801102c:	b289      	uxth	r1, r1
 801102e:	4460      	add	r0, ip
 8011030:	f1ba 0f00 	cmp.w	sl, #0
 8011034:	b20e      	sxth	r6, r1
 8011036:	b280      	uxth	r0, r0
 8011038:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801103c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011040:	da29      	bge.n	8011096 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011042:	eba8 0505 	sub.w	r5, r8, r5
 8011046:	2d00      	cmp	r5, #0
 8011048:	da2a      	bge.n	80110a0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 801104a:	fa1f f88a 	uxth.w	r8, sl
 801104e:	eba0 0008 	sub.w	r0, r0, r8
 8011052:	fa1f f58c 	uxth.w	r5, ip
 8011056:	4443      	add	r3, r8
 8011058:	f8ad 0014 	strh.w	r0, [sp, #20]
 801105c:	1a59      	subs	r1, r3, r1
 801105e:	ebae 0005 	sub.w	r0, lr, r5
 8011062:	f8ad a010 	strh.w	sl, [sp, #16]
 8011066:	f8ad c012 	strh.w	ip, [sp, #18]
 801106a:	f8ad 0016 	strh.w	r0, [sp, #22]
 801106e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011072:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011076:	f8ad 101c 	strh.w	r1, [sp, #28]
 801107a:	442a      	add	r2, r5
 801107c:	eba2 0e0e 	sub.w	lr, r2, lr
 8011080:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011084:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011088:	a904      	add	r1, sp, #16
 801108a:	4620      	mov	r0, r4
 801108c:	4798      	blx	r3
 801108e:	6823      	ldr	r3, [r4, #0]
 8011090:	4649      	mov	r1, r9
 8011092:	691b      	ldr	r3, [r3, #16]
 8011094:	e79a      	b.n	8010fcc <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011096:	d003      	beq.n	80110a0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011098:	eba8 0505 	sub.w	r5, r8, r5
 801109c:	2d00      	cmp	r5, #0
 801109e:	dcd4      	bgt.n	801104a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 80110a0:	fa1f f88a 	uxth.w	r8, sl
 80110a4:	4443      	add	r3, r8
 80110a6:	fa1f f58c 	uxth.w	r5, ip
 80110aa:	1a59      	subs	r1, r3, r1
 80110ac:	eba0 0008 	sub.w	r0, r0, r8
 80110b0:	ebae 0305 	sub.w	r3, lr, r5
 80110b4:	f8ad 6010 	strh.w	r6, [sp, #16]
 80110b8:	f8ad c012 	strh.w	ip, [sp, #18]
 80110bc:	f8ad 1014 	strh.w	r1, [sp, #20]
 80110c0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80110c4:	f8ad a018 	strh.w	sl, [sp, #24]
 80110c8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80110cc:	f8ad 001c 	strh.w	r0, [sp, #28]
 80110d0:	e7d3      	b.n	801107a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80110d2:	ebae 0100 	sub.w	r1, lr, r0
 80110d6:	b289      	uxth	r1, r1
 80110d8:	4470      	add	r0, lr
 80110da:	f1ba 0f00 	cmp.w	sl, #0
 80110de:	b20f      	sxth	r7, r1
 80110e0:	b280      	uxth	r0, r0
 80110e2:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80110e6:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80110ea:	da20      	bge.n	801112e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80110ec:	eba8 0505 	sub.w	r5, r8, r5
 80110f0:	2d00      	cmp	r5, #0
 80110f2:	da21      	bge.n	8011138 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80110f4:	fa1f f88e 	uxth.w	r8, lr
 80110f8:	fa1f f58a 	uxth.w	r5, sl
 80110fc:	4443      	add	r3, r8
 80110fe:	442a      	add	r2, r5
 8011100:	f8ad e010 	strh.w	lr, [sp, #16]
 8011104:	1b40      	subs	r0, r0, r5
 8011106:	ebac 0e08 	sub.w	lr, ip, r8
 801110a:	1a51      	subs	r1, r2, r1
 801110c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011110:	f8ad a012 	strh.w	sl, [sp, #18]
 8011114:	f8ad e014 	strh.w	lr, [sp, #20]
 8011118:	f8ad 0016 	strh.w	r0, [sp, #22]
 801111c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011120:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011124:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011128:	f8ad 101e 	strh.w	r1, [sp, #30]
 801112c:	e7aa      	b.n	8011084 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 801112e:	d003      	beq.n	8011138 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011130:	eba8 0505 	sub.w	r5, r8, r5
 8011134:	2d00      	cmp	r5, #0
 8011136:	dcdd      	bgt.n	80110f4 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011138:	fa1f f58e 	uxth.w	r5, lr
 801113c:	fa1f f88a 	uxth.w	r8, sl
 8011140:	4442      	add	r2, r8
 8011142:	442b      	add	r3, r5
 8011144:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011148:	1a51      	subs	r1, r2, r1
 801114a:	ebac 0705 	sub.w	r7, ip, r5
 801114e:	eba0 0008 	sub.w	r0, r0, r8
 8011152:	eba3 0c0c 	sub.w	ip, r3, ip
 8011156:	f8ad e010 	strh.w	lr, [sp, #16]
 801115a:	f8ad 7014 	strh.w	r7, [sp, #20]
 801115e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011162:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011166:	f8ad a01a 	strh.w	sl, [sp, #26]
 801116a:	f8ad c01c 	strh.w	ip, [sp, #28]
 801116e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011172:	e787      	b.n	8011084 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011174 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011174:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011178:	fb90 f2f3 	sdiv	r2, r0, r3
 801117c:	fb02 0013 	mls	r0, r2, r3, r0
 8011180:	2800      	cmp	r0, #0
 8011182:	bfb8      	it	lt
 8011184:	18c0      	addlt	r0, r0, r3
 8011186:	285a      	cmp	r0, #90	; 0x5a
 8011188:	4b09      	ldr	r3, [pc, #36]	; (80111b0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 801118a:	dc02      	bgt.n	8011192 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 801118c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011190:	4770      	bx	lr
 8011192:	28b4      	cmp	r0, #180	; 0xb4
 8011194:	dc02      	bgt.n	801119c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011196:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 801119a:	e7f7      	b.n	801118c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 801119c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80111a0:	bfd4      	ite	le
 80111a2:	38b4      	suble	r0, #180	; 0xb4
 80111a4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80111a8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80111ac:	4240      	negs	r0, r0
 80111ae:	4770      	bx	lr
 80111b0:	0802df90 	.word	0x0802df90

080111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80111b4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80111b8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80111ba:	fb90 f2f3 	sdiv	r2, r0, r3
 80111be:	fb02 0013 	mls	r0, r2, r3, r0
 80111c2:	2800      	cmp	r0, #0
 80111c4:	bfb8      	it	lt
 80111c6:	18c0      	addlt	r0, r0, r3
 80111c8:	1144      	asrs	r4, r0, #5
 80111ca:	f000 061f 	and.w	r6, r0, #31
 80111ce:	4620      	mov	r0, r4
 80111d0:	f7ff ffd0 	bl	8011174 <_ZN8touchgfx7CWRUtil4sineEi>
 80111d4:	4605      	mov	r5, r0
 80111d6:	b90e      	cbnz	r6, 80111dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80111d8:	b002      	add	sp, #8
 80111da:	bd70      	pop	{r4, r5, r6, pc}
 80111dc:	1c60      	adds	r0, r4, #1
 80111de:	f7ff ffc9 	bl	8011174 <_ZN8touchgfx7CWRUtil4sineEi>
 80111e2:	ab01      	add	r3, sp, #4
 80111e4:	2220      	movs	r2, #32
 80111e6:	4631      	mov	r1, r6
 80111e8:	1b40      	subs	r0, r0, r5
 80111ea:	f005 f967 	bl	80164bc <_ZN8touchgfx6muldivElllRl>
 80111ee:	4428      	add	r0, r5
 80111f0:	e7f2      	b.n	80111d8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080111f2 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80111f2:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80111f6:	bf2c      	ite	cs
 80111f8:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80111fc:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011200:	2300      	movs	r3, #0
 8011202:	1899      	adds	r1, r3, r2
 8011204:	4288      	cmp	r0, r1
 8011206:	bf24      	itt	cs
 8011208:	1853      	addcs	r3, r2, r1
 801120a:	1a40      	subcs	r0, r0, r1
 801120c:	0892      	lsrs	r2, r2, #2
 801120e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011212:	d1f6      	bne.n	8011202 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011214:	4618      	mov	r0, r3
 8011216:	4770      	bx	lr

08011218 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011218:	b510      	push	{r4, lr}
 801121a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801121e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011222:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011226:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801122a:	13a4      	asrs	r4, r4, #14
 801122c:	139b      	asrs	r3, r3, #14
 801122e:	429c      	cmp	r4, r3
 8011230:	bfb8      	it	lt
 8011232:	461c      	movlt	r4, r3
 8011234:	2c01      	cmp	r4, #1
 8011236:	dd07      	ble.n	8011248 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011238:	fb91 f1f4 	sdiv	r1, r1, r4
 801123c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011240:	f7ff ffea 	bl	8011218 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011244:	4360      	muls	r0, r4
 8011246:	bd10      	pop	{r4, pc}
 8011248:	4340      	muls	r0, r0
 801124a:	fb01 0001 	mla	r0, r1, r1, r0
 801124e:	f7ff ffd0 	bl	80111f2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011252:	e7f8      	b.n	8011246 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011254 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011254:	2800      	cmp	r0, #0
 8011256:	b508      	push	{r3, lr}
 8011258:	da05      	bge.n	8011266 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801125a:	4240      	negs	r0, r0
 801125c:	f7ff fffa 	bl	8011254 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011260:	4240      	negs	r0, r0
 8011262:	b240      	sxtb	r0, r0
 8011264:	bd08      	pop	{r3, pc}
 8011266:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801126a:	dc11      	bgt.n	8011290 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801126c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011270:	dd09      	ble.n	8011286 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011272:	4340      	muls	r0, r0
 8011274:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011278:	f7ff ffbb 	bl	80111f2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 801127c:	f7ff ffea 	bl	8011254 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011280:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011284:	e7ed      	b.n	8011262 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011286:	3003      	adds	r0, #3
 8011288:	10c0      	asrs	r0, r0, #3
 801128a:	4b02      	ldr	r3, [pc, #8]	; (8011294 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 801128c:	5618      	ldrsb	r0, [r3, r0]
 801128e:	e7e9      	b.n	8011264 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011290:	2000      	movs	r0, #0
 8011292:	e7e7      	b.n	8011264 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011294:	0802df34 	.word	0x0802df34

08011298 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011298:	4281      	cmp	r1, r0
 801129a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801129c:	460c      	mov	r4, r1
 801129e:	4615      	mov	r5, r2
 80112a0:	dd07      	ble.n	80112b2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80112a2:	4601      	mov	r1, r0
 80112a4:	4620      	mov	r0, r4
 80112a6:	f7ff fff7 	bl	8011298 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80112aa:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80112ae:	b003      	add	sp, #12
 80112b0:	bd30      	pop	{r4, r5, pc}
 80112b2:	f7ff ffb1 	bl	8011218 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80112b6:	6028      	str	r0, [r5, #0]
 80112b8:	2800      	cmp	r0, #0
 80112ba:	d0f8      	beq.n	80112ae <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80112bc:	4602      	mov	r2, r0
 80112be:	ab01      	add	r3, sp, #4
 80112c0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80112c4:	4620      	mov	r0, r4
 80112c6:	f005 f8f9 	bl	80164bc <_ZN8touchgfx6muldivElllRl>
 80112ca:	f7ff ffc3 	bl	8011254 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80112ce:	e7ee      	b.n	80112ae <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080112d0 <_ZN8touchgfx4LineC1Ev>:
 80112d0:	b510      	push	{r4, lr}
 80112d2:	4604      	mov	r4, r0
 80112d4:	f7ff fe0a 	bl	8010eec <_ZN8touchgfx12CanvasWidgetC1Ev>
 80112d8:	4b0c      	ldr	r3, [pc, #48]	; (801130c <_ZN8touchgfx4LineC1Ev+0x3c>)
 80112da:	6023      	str	r3, [r4, #0]
 80112dc:	2220      	movs	r2, #32
 80112de:	2300      	movs	r3, #0
 80112e0:	63e2      	str	r2, [r4, #60]	; 0x3c
 80112e2:	2212      	movs	r2, #18
 80112e4:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80112e8:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80112ec:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80112f0:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80112f4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80112f8:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80112fc:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011300:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011304:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011306:	60a3      	str	r3, [r4, #8]
 8011308:	4620      	mov	r0, r4
 801130a:	bd10      	pop	{r4, pc}
 801130c:	0802e050 	.word	0x0802e050

08011310 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011310:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011314:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011316:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011318:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801131a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801131c:	1aff      	subs	r7, r7, r3
 801131e:	4604      	mov	r4, r0
 8011320:	eba5 0502 	sub.w	r5, r5, r2
 8011324:	d142      	bne.n	80113ac <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011326:	b955      	cbnz	r5, 801133e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011328:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801132c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011330:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011334:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011338:	b002      	add	sp, #8
 801133a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801133e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011342:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011346:	4629      	mov	r1, r5
 8011348:	4642      	mov	r2, r8
 801134a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801134c:	f005 f8d5 	bl	80164fa <_ZN8touchgfx6muldivElll>
 8011350:	2502      	movs	r5, #2
 8011352:	4642      	mov	r2, r8
 8011354:	fb90 f6f5 	sdiv	r6, r0, r5
 8011358:	4639      	mov	r1, r7
 801135a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801135c:	f005 f8cd 	bl	80164fa <_ZN8touchgfx6muldivElll>
 8011360:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011364:	fb90 f5f5 	sdiv	r5, r0, r5
 8011368:	f1b9 0f00 	cmp.w	r9, #0
 801136c:	d067      	beq.n	801143e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801136e:	f1b9 0f02 	cmp.w	r9, #2
 8011372:	d878      	bhi.n	8011466 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011374:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011376:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011378:	1b93      	subs	r3, r2, r6
 801137a:	1b5b      	subs	r3, r3, r5
 801137c:	6463      	str	r3, [r4, #68]	; 0x44
 801137e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011380:	18e9      	adds	r1, r5, r3
 8011382:	1b89      	subs	r1, r1, r6
 8011384:	6561      	str	r1, [r4, #84]	; 0x54
 8011386:	1b81      	subs	r1, r0, r6
 8011388:	4429      	add	r1, r5
 801138a:	64a1      	str	r1, [r4, #72]	; 0x48
 801138c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801138e:	4430      	add	r0, r6
 8011390:	186f      	adds	r7, r5, r1
 8011392:	4432      	add	r2, r6
 8011394:	1b49      	subs	r1, r1, r5
 8011396:	4437      	add	r7, r6
 8011398:	4428      	add	r0, r5
 801139a:	4431      	add	r1, r6
 801139c:	1b52      	subs	r2, r2, r5
 801139e:	1b5b      	subs	r3, r3, r5
 80113a0:	65a7      	str	r7, [r4, #88]	; 0x58
 80113a2:	64e0      	str	r0, [r4, #76]	; 0x4c
 80113a4:	65e1      	str	r1, [r4, #92]	; 0x5c
 80113a6:	6522      	str	r2, [r4, #80]	; 0x50
 80113a8:	1b9b      	subs	r3, r3, r6
 80113aa:	e05b      	b.n	8011464 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80113ac:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80113b0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80113b4:	2d00      	cmp	r5, #0
 80113b6:	d0c6      	beq.n	8011346 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80113b8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80113bc:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80113c0:	fb93 f2f8 	sdiv	r2, r3, r8
 80113c4:	fb08 3312 	mls	r3, r8, r2, r3
 80113c8:	b353      	cbz	r3, 8011420 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80113ca:	fb98 f2f3 	sdiv	r2, r8, r3
 80113ce:	fb03 8812 	mls	r8, r3, r2, r8
 80113d2:	f1b8 0f00 	cmp.w	r8, #0
 80113d6:	d1f3      	bne.n	80113c0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80113d8:	2b01      	cmp	r3, #1
 80113da:	bf1c      	itt	ne
 80113dc:	fb95 f5f3 	sdivne	r5, r5, r3
 80113e0:	fb97 f7f3 	sdivne	r7, r7, r3
 80113e4:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80113e8:	f24b 5104 	movw	r1, #46340	; 0xb504
 80113ec:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80113f0:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80113f4:	428b      	cmp	r3, r1
 80113f6:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80113fa:	4608      	mov	r0, r1
 80113fc:	dd01      	ble.n	8011402 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80113fe:	428a      	cmp	r2, r1
 8011400:	dc10      	bgt.n	8011424 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011402:	fb90 f3f3 	sdiv	r3, r0, r3
 8011406:	fb90 f2f2 	sdiv	r2, r0, r2
 801140a:	4293      	cmp	r3, r2
 801140c:	bfa8      	it	ge
 801140e:	4613      	movge	r3, r2
 8011410:	435f      	muls	r7, r3
 8011412:	435d      	muls	r5, r3
 8011414:	4629      	mov	r1, r5
 8011416:	4638      	mov	r0, r7
 8011418:	f7ff fefe 	bl	8011218 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801141c:	4680      	mov	r8, r0
 801141e:	e792      	b.n	8011346 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011420:	4643      	mov	r3, r8
 8011422:	e7d9      	b.n	80113d8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011424:	fb93 f3f1 	sdiv	r3, r3, r1
 8011428:	fb92 f2f1 	sdiv	r2, r2, r1
 801142c:	4293      	cmp	r3, r2
 801142e:	bfcc      	ite	gt
 8011430:	3301      	addgt	r3, #1
 8011432:	1c53      	addle	r3, r2, #1
 8011434:	fb97 f7f3 	sdiv	r7, r7, r3
 8011438:	fb95 f5f3 	sdiv	r5, r5, r3
 801143c:	e7ea      	b.n	8011414 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801143e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011440:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011442:	1b93      	subs	r3, r2, r6
 8011444:	6463      	str	r3, [r4, #68]	; 0x44
 8011446:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011448:	18e9      	adds	r1, r5, r3
 801144a:	6561      	str	r1, [r4, #84]	; 0x54
 801144c:	1b81      	subs	r1, r0, r6
 801144e:	64a1      	str	r1, [r4, #72]	; 0x48
 8011450:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011452:	4430      	add	r0, r6
 8011454:	186f      	adds	r7, r5, r1
 8011456:	4432      	add	r2, r6
 8011458:	1b49      	subs	r1, r1, r5
 801145a:	65a7      	str	r7, [r4, #88]	; 0x58
 801145c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801145e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011460:	6522      	str	r2, [r4, #80]	; 0x50
 8011462:	1b5b      	subs	r3, r3, r5
 8011464:	6623      	str	r3, [r4, #96]	; 0x60
 8011466:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8011468:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801146a:	9200      	str	r2, [sp, #0]
 801146c:	9301      	str	r3, [sp, #4]
 801146e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8011472:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8011476:	680f      	ldr	r7, [r1, #0]
 8011478:	9800      	ldr	r0, [sp, #0]
 801147a:	42ba      	cmp	r2, r7
 801147c:	bfa8      	it	ge
 801147e:	463a      	movge	r2, r7
 8011480:	4287      	cmp	r7, r0
 8011482:	bfc8      	it	gt
 8011484:	9700      	strgt	r7, [sp, #0]
 8011486:	690f      	ldr	r7, [r1, #16]
 8011488:	9801      	ldr	r0, [sp, #4]
 801148a:	42bb      	cmp	r3, r7
 801148c:	bfa8      	it	ge
 801148e:	463b      	movge	r3, r7
 8011490:	3104      	adds	r1, #4
 8011492:	4287      	cmp	r7, r0
 8011494:	bfc8      	it	gt
 8011496:	9701      	strgt	r7, [sp, #4]
 8011498:	458c      	cmp	ip, r1
 801149a:	d1ec      	bne.n	8011476 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801149c:	4668      	mov	r0, sp
 801149e:	2720      	movs	r7, #32
 80114a0:	fb92 f8f7 	sdiv	r8, r2, r7
 80114a4:	fb93 f7f7 	sdiv	r7, r3, r7
 80114a8:	f7ff fd57 	bl	8010f5a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80114ac:	4682      	mov	sl, r0
 80114ae:	a801      	add	r0, sp, #4
 80114b0:	f7ff fd53 	bl	8010f5a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80114b4:	ebaa 0208 	sub.w	r2, sl, r8
 80114b8:	1bc0      	subs	r0, r0, r7
 80114ba:	f1b9 0f01 	cmp.w	r9, #1
 80114be:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80114c2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80114c6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80114ca:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80114ce:	f47f af33 	bne.w	8011338 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 80114d2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80114d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80114d6:	1b83      	subs	r3, r0, r6
 80114d8:	6463      	str	r3, [r4, #68]	; 0x44
 80114da:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80114dc:	18ea      	adds	r2, r5, r3
 80114de:	6562      	str	r2, [r4, #84]	; 0x54
 80114e0:	1b8a      	subs	r2, r1, r6
 80114e2:	64a2      	str	r2, [r4, #72]	; 0x48
 80114e4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80114e6:	4431      	add	r1, r6
 80114e8:	18af      	adds	r7, r5, r2
 80114ea:	4406      	add	r6, r0
 80114ec:	1b52      	subs	r2, r2, r5
 80114ee:	1b5d      	subs	r5, r3, r5
 80114f0:	65a7      	str	r7, [r4, #88]	; 0x58
 80114f2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80114f4:	65e2      	str	r2, [r4, #92]	; 0x5c
 80114f6:	6526      	str	r6, [r4, #80]	; 0x50
 80114f8:	6625      	str	r5, [r4, #96]	; 0x60
 80114fa:	e71d      	b.n	8011338 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080114fc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80114fc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80114fe:	428b      	cmp	r3, r1
 8011500:	d102      	bne.n	8011508 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011502:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011504:	4293      	cmp	r3, r2
 8011506:	d003      	beq.n	8011510 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011508:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801150c:	f7ff bf00 	b.w	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011510:	4770      	bx	lr

08011512 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011512:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011514:	428b      	cmp	r3, r1
 8011516:	d102      	bne.n	801151e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011518:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801151a:	4293      	cmp	r3, r2
 801151c:	d003      	beq.n	8011526 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801151e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011522:	f7ff bef5 	b.w	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011526:	4770      	bx	lr

08011528 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011528:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801152c:	f7ff bef0 	b.w	8011310 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011530 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011530:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011534:	b0a0      	sub	sp, #128	; 0x80
 8011536:	4604      	mov	r4, r0
 8011538:	460a      	mov	r2, r1
 801153a:	4601      	mov	r1, r0
 801153c:	a804      	add	r0, sp, #16
 801153e:	f014 fe3b 	bl	80261b8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011542:	2300      	movs	r3, #0
 8011544:	9301      	str	r3, [sp, #4]
 8011546:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801154a:	2b01      	cmp	r3, #1
 801154c:	d17c      	bne.n	8011648 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801154e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011550:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011552:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011554:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011556:	1ac0      	subs	r0, r0, r3
 8011558:	eba1 0102 	sub.w	r1, r1, r2
 801155c:	d437      	bmi.n	80115ce <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801155e:	2900      	cmp	r1, #0
 8011560:	aa01      	add	r2, sp, #4
 8011562:	db2e      	blt.n	80115c2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011564:	f7ff fe98 	bl	8011298 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011568:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801156c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801156e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011570:	a804      	add	r0, sp, #16
 8011572:	f014 ffa1 	bl	80264b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011576:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011578:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801157a:	a804      	add	r0, sp, #16
 801157c:	f014 ffe9 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011580:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011582:	2db3      	cmp	r5, #179	; 0xb3
 8011584:	dc33      	bgt.n	80115ee <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8011586:	eba6 0805 	sub.w	r8, r6, r5
 801158a:	4640      	mov	r0, r8
 801158c:	f7ff fdf2 	bl	8011174 <_ZN8touchgfx7CWRUtil4sineEi>
 8011590:	a902      	add	r1, sp, #8
 8011592:	9002      	str	r0, [sp, #8]
 8011594:	a801      	add	r0, sp, #4
 8011596:	f7ff fcd5 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801159a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801159c:	1847      	adds	r7, r0, r1
 801159e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80115a2:	f7ff fde7 	bl	8011174 <_ZN8touchgfx7CWRUtil4sineEi>
 80115a6:	a903      	add	r1, sp, #12
 80115a8:	9003      	str	r0, [sp, #12]
 80115aa:	a801      	add	r0, sp, #4
 80115ac:	f7ff fcca 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80115b0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80115b2:	4639      	mov	r1, r7
 80115b4:	1a12      	subs	r2, r2, r0
 80115b6:	a804      	add	r0, sp, #16
 80115b8:	f014 ffcb 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80115bc:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80115be:	441d      	add	r5, r3
 80115c0:	e7df      	b.n	8011582 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80115c2:	4249      	negs	r1, r1
 80115c4:	f7ff fe68 	bl	8011298 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80115c8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80115cc:	e7ce      	b.n	801156c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80115ce:	2900      	cmp	r1, #0
 80115d0:	f1c0 0000 	rsb	r0, r0, #0
 80115d4:	aa01      	add	r2, sp, #4
 80115d6:	db04      	blt.n	80115e2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 80115d8:	f7ff fe5e 	bl	8011298 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80115dc:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 80115e0:	e7c4      	b.n	801156c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80115e2:	4249      	negs	r1, r1
 80115e4:	f7ff fe58 	bl	8011298 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80115e8:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 80115ec:	e7be      	b.n	801156c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80115ee:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80115f0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80115f2:	a804      	add	r0, sp, #16
 80115f4:	f014 ffad 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80115f8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80115fa:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80115fc:	a804      	add	r0, sp, #16
 80115fe:	f014 ffa8 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011602:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011604:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011608:	2d00      	cmp	r5, #0
 801160a:	dd31      	ble.n	8011670 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801160c:	eb05 0806 	add.w	r8, r5, r6
 8011610:	4640      	mov	r0, r8
 8011612:	f7ff fdaf 	bl	8011174 <_ZN8touchgfx7CWRUtil4sineEi>
 8011616:	a902      	add	r1, sp, #8
 8011618:	9002      	str	r0, [sp, #8]
 801161a:	a801      	add	r0, sp, #4
 801161c:	f7ff fc92 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011620:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011622:	1847      	adds	r7, r0, r1
 8011624:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011628:	f7ff fda4 	bl	8011174 <_ZN8touchgfx7CWRUtil4sineEi>
 801162c:	a903      	add	r1, sp, #12
 801162e:	9003      	str	r0, [sp, #12]
 8011630:	a801      	add	r0, sp, #4
 8011632:	f7ff fc87 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011636:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011638:	4639      	mov	r1, r7
 801163a:	1a12      	subs	r2, r2, r0
 801163c:	a804      	add	r0, sp, #16
 801163e:	f014 ff88 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011642:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011644:	1aed      	subs	r5, r5, r3
 8011646:	e7df      	b.n	8011608 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011648:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801164a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801164c:	a804      	add	r0, sp, #16
 801164e:	f014 ff33 	bl	80264b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011652:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011654:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011656:	a804      	add	r0, sp, #16
 8011658:	f014 ff7b 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801165c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801165e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011660:	a804      	add	r0, sp, #16
 8011662:	f014 ff76 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011666:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011668:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801166a:	a804      	add	r0, sp, #16
 801166c:	f014 ff71 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011670:	21ff      	movs	r1, #255	; 0xff
 8011672:	a804      	add	r0, sp, #16
 8011674:	f014 fe5c 	bl	8026330 <_ZN8touchgfx6Canvas6renderEh>
 8011678:	4b04      	ldr	r3, [pc, #16]	; (801168c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 801167a:	9304      	str	r3, [sp, #16]
 801167c:	4604      	mov	r4, r0
 801167e:	a80c      	add	r0, sp, #48	; 0x30
 8011680:	f001 f8cc 	bl	801281c <_ZN8touchgfx7OutlineD1Ev>
 8011684:	4620      	mov	r0, r4
 8011686:	b020      	add	sp, #128	; 0x80
 8011688:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801168c:	0802e878 	.word	0x0802e878

08011690 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011690:	2000      	movs	r0, #0
 8011692:	4770      	bx	lr

08011694 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011694:	4b07      	ldr	r3, [pc, #28]	; (80116b4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011696:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011698:	881b      	ldrh	r3, [r3, #0]
 801169a:	4293      	cmp	r3, r2
 801169c:	bf81      	itttt	hi
 801169e:	4b06      	ldrhi	r3, [pc, #24]	; (80116b8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80116a0:	681b      	ldrhi	r3, [r3, #0]
 80116a2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80116a6:	7858      	ldrbhi	r0, [r3, #1]
 80116a8:	bf8c      	ite	hi
 80116aa:	f000 0003 	andhi.w	r0, r0, #3
 80116ae:	2000      	movls	r0, #0
 80116b0:	4770      	bx	lr
 80116b2:	bf00      	nop
 80116b4:	20012ed8 	.word	0x20012ed8
 80116b8:	20012ed4 	.word	0x20012ed4

080116bc <_ZN8touchgfx8TextAreaD1Ev>:
 80116bc:	4770      	bx	lr
	...

080116c0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80116c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116c4:	4b10      	ldr	r3, [pc, #64]	; (8011708 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80116c6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80116c8:	881b      	ldrh	r3, [r3, #0]
 80116ca:	428b      	cmp	r3, r1
 80116cc:	4604      	mov	r4, r0
 80116ce:	d918      	bls.n	8011702 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80116d0:	6803      	ldr	r3, [r0, #0]
 80116d2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80116d4:	4b0d      	ldr	r3, [pc, #52]	; (801170c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80116d6:	6818      	ldr	r0, [r3, #0]
 80116d8:	f7f6 fcca 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 80116dc:	6823      	ldr	r3, [r4, #0]
 80116de:	4606      	mov	r6, r0
 80116e0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80116e2:	4620      	mov	r0, r4
 80116e4:	4798      	blx	r3
 80116e6:	6823      	ldr	r3, [r4, #0]
 80116e8:	4607      	mov	r7, r0
 80116ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80116ee:	4620      	mov	r0, r4
 80116f0:	4798      	blx	r3
 80116f2:	463a      	mov	r2, r7
 80116f4:	4603      	mov	r3, r0
 80116f6:	4631      	mov	r1, r6
 80116f8:	4620      	mov	r0, r4
 80116fa:	46ac      	mov	ip, r5
 80116fc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011700:	4760      	bx	ip
 8011702:	2000      	movs	r0, #0
 8011704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011708:	20012ed8 	.word	0x20012ed8
 801170c:	20012ee0 	.word	0x20012ee0

08011710 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011710:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011714:	4b17      	ldr	r3, [pc, #92]	; (8011774 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011716:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011718:	881b      	ldrh	r3, [r3, #0]
 801171a:	428b      	cmp	r3, r1
 801171c:	4604      	mov	r4, r0
 801171e:	d926      	bls.n	801176e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011720:	4b15      	ldr	r3, [pc, #84]	; (8011778 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011722:	681b      	ldr	r3, [r3, #0]
 8011724:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011728:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801172c:	4b13      	ldr	r3, [pc, #76]	; (801177c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801172e:	7855      	ldrb	r5, [r2, #1]
 8011730:	681b      	ldr	r3, [r3, #0]
 8011732:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011736:	6833      	ldr	r3, [r6, #0]
 8011738:	69df      	ldr	r7, [r3, #28]
 801173a:	4b11      	ldr	r3, [pc, #68]	; (8011780 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801173c:	6818      	ldr	r0, [r3, #0]
 801173e:	f7f6 fc97 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8011742:	6823      	ldr	r3, [r4, #0]
 8011744:	4680      	mov	r8, r0
 8011746:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011748:	4620      	mov	r0, r4
 801174a:	4798      	blx	r3
 801174c:	6823      	ldr	r3, [r4, #0]
 801174e:	4681      	mov	r9, r0
 8011750:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011754:	4620      	mov	r0, r4
 8011756:	4798      	blx	r3
 8011758:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801175c:	9000      	str	r0, [sp, #0]
 801175e:	464b      	mov	r3, r9
 8011760:	4642      	mov	r2, r8
 8011762:	4629      	mov	r1, r5
 8011764:	4630      	mov	r0, r6
 8011766:	47b8      	blx	r7
 8011768:	b003      	add	sp, #12
 801176a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801176e:	2000      	movs	r0, #0
 8011770:	e7fa      	b.n	8011768 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011772:	bf00      	nop
 8011774:	20012ed8 	.word	0x20012ed8
 8011778:	20012ed4 	.word	0x20012ed4
 801177c:	20012edc 	.word	0x20012edc
 8011780:	20012ee0 	.word	0x20012ee0

08011784 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011784:	b40e      	push	{r1, r2, r3}
 8011786:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801178a:	4b2f      	ldr	r3, [pc, #188]	; (8011848 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801178c:	881a      	ldrh	r2, [r3, #0]
 801178e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011790:	429a      	cmp	r2, r3
 8011792:	b09d      	sub	sp, #116	; 0x74
 8011794:	4604      	mov	r4, r0
 8011796:	d954      	bls.n	8011842 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011798:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801184c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801179c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011850 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80117a0:	aa26      	add	r2, sp, #152	; 0x98
 80117a2:	9202      	str	r2, [sp, #8]
 80117a4:	f8d9 2000 	ldr.w	r2, [r9]
 80117a8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80117ac:	f8d8 3000 	ldr.w	r3, [r8]
 80117b0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80117b4:	682b      	ldr	r3, [r5, #0]
 80117b6:	4628      	mov	r0, r5
 80117b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80117ba:	4798      	blx	r3
 80117bc:	b207      	sxth	r7, r0
 80117be:	4606      	mov	r6, r0
 80117c0:	a803      	add	r0, sp, #12
 80117c2:	f005 fa57 	bl	8016c74 <_ZN8touchgfx12TextProviderC1Ev>
 80117c6:	682b      	ldr	r3, [r5, #0]
 80117c8:	4628      	mov	r0, r5
 80117ca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80117cc:	4798      	blx	r3
 80117ce:	682b      	ldr	r3, [r5, #0]
 80117d0:	4682      	mov	sl, r0
 80117d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80117d4:	4628      	mov	r0, r5
 80117d6:	4798      	blx	r3
 80117d8:	4653      	mov	r3, sl
 80117da:	9000      	str	r0, [sp, #0]
 80117dc:	9a02      	ldr	r2, [sp, #8]
 80117de:	9925      	ldr	r1, [sp, #148]	; 0x94
 80117e0:	a803      	add	r0, sp, #12
 80117e2:	f005 faa2 	bl	8016d2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80117e6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80117e8:	f8d9 3000 	ldr.w	r3, [r9]
 80117ec:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80117f0:	8925      	ldrh	r5, [r4, #8]
 80117f2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80117f6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80117fa:	eba5 050c 	sub.w	r5, r5, ip
 80117fe:	784a      	ldrb	r2, [r1, #1]
 8011800:	f8d8 3000 	ldr.w	r3, [r8]
 8011804:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011808:	b22d      	sxth	r5, r5
 801180a:	9500      	str	r5, [sp, #0]
 801180c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011810:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011814:	a803      	add	r0, sp, #12
 8011816:	f002 feed 	bl	80145f4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801181a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801181e:	18b9      	adds	r1, r7, r2
 8011820:	2900      	cmp	r1, #0
 8011822:	b203      	sxth	r3, r0
 8011824:	dd0b      	ble.n	801183e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011826:	3b01      	subs	r3, #1
 8011828:	fb13 f302 	smulbb	r3, r3, r2
 801182c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011830:	b21f      	sxth	r7, r3
 8011832:	4638      	mov	r0, r7
 8011834:	b01d      	add	sp, #116	; 0x74
 8011836:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801183a:	b003      	add	sp, #12
 801183c:	4770      	bx	lr
 801183e:	2b00      	cmp	r3, #0
 8011840:	dcf7      	bgt.n	8011832 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011842:	2700      	movs	r7, #0
 8011844:	e7f5      	b.n	8011832 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011846:	bf00      	nop
 8011848:	20012ed8 	.word	0x20012ed8
 801184c:	20012ed4 	.word	0x20012ed4
 8011850:	20012edc 	.word	0x20012edc

08011854 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011858:	4bbc      	ldr	r3, [pc, #752]	; (8011b4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801185a:	460c      	mov	r4, r1
 801185c:	881b      	ldrh	r3, [r3, #0]
 801185e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011860:	428b      	cmp	r3, r1
 8011862:	b0a9      	sub	sp, #164	; 0xa4
 8011864:	4680      	mov	r8, r0
 8011866:	d809      	bhi.n	801187c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011868:	2300      	movs	r3, #0
 801186a:	f04f 32ff 	mov.w	r2, #4294967295
 801186e:	e9c0 3200 	strd	r3, r2, [r0]
 8011872:	6083      	str	r3, [r0, #8]
 8011874:	4640      	mov	r0, r8
 8011876:	b029      	add	sp, #164	; 0xa4
 8011878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801187c:	4eb4      	ldr	r6, [pc, #720]	; (8011b50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801187e:	6833      	ldr	r3, [r6, #0]
 8011880:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011884:	4bb3      	ldr	r3, [pc, #716]	; (8011b54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011886:	681b      	ldr	r3, [r3, #0]
 8011888:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801188c:	4bb2      	ldr	r3, [pc, #712]	; (8011b58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801188e:	6818      	ldr	r0, [r3, #0]
 8011890:	f7f6 fbee 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8011894:	682b      	ldr	r3, [r5, #0]
 8011896:	4681      	mov	r9, r0
 8011898:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801189a:	4628      	mov	r0, r5
 801189c:	4798      	blx	r3
 801189e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80118a0:	b203      	sxth	r3, r0
 80118a2:	4407      	add	r7, r0
 80118a4:	9304      	str	r3, [sp, #16]
 80118a6:	b2bb      	uxth	r3, r7
 80118a8:	9303      	str	r3, [sp, #12]
 80118aa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80118ae:	4682      	mov	sl, r0
 80118b0:	a80f      	add	r0, sp, #60	; 0x3c
 80118b2:	2b00      	cmp	r3, #0
 80118b4:	f040 80a6 	bne.w	8011a04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80118b8:	f005 f9dc 	bl	8016c74 <_ZN8touchgfx12TextProviderC1Ev>
 80118bc:	682b      	ldr	r3, [r5, #0]
 80118be:	4628      	mov	r0, r5
 80118c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80118c2:	4798      	blx	r3
 80118c4:	682b      	ldr	r3, [r5, #0]
 80118c6:	4606      	mov	r6, r0
 80118c8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80118ca:	4628      	mov	r0, r5
 80118cc:	4798      	blx	r3
 80118ce:	6823      	ldr	r3, [r4, #0]
 80118d0:	4607      	mov	r7, r0
 80118d2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80118d4:	4620      	mov	r0, r4
 80118d6:	4798      	blx	r3
 80118d8:	6823      	ldr	r3, [r4, #0]
 80118da:	4683      	mov	fp, r0
 80118dc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80118e0:	4620      	mov	r0, r4
 80118e2:	4798      	blx	r3
 80118e4:	463b      	mov	r3, r7
 80118e6:	e9cd b000 	strd	fp, r0, [sp]
 80118ea:	4649      	mov	r1, r9
 80118ec:	4632      	mov	r2, r6
 80118ee:	a80f      	add	r0, sp, #60	; 0x3c
 80118f0:	f005 fa30 	bl	8016d54 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80118f4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80118f8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011b50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80118fc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011900:	f04f 0600 	mov.w	r6, #0
 8011904:	bf0c      	ite	eq
 8011906:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801190a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801190e:	4637      	mov	r7, r6
 8011910:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011912:	f8db 3000 	ldr.w	r3, [fp]
 8011916:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801191a:	4629      	mov	r1, r5
 801191c:	785b      	ldrb	r3, [r3, #1]
 801191e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011922:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011926:	a80f      	add	r0, sp, #60	; 0x3c
 8011928:	f002 fb7f 	bl	801402a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801192c:	9b03      	ldr	r3, [sp, #12]
 801192e:	4286      	cmp	r6, r0
 8011930:	bfb8      	it	lt
 8011932:	4606      	movlt	r6, r0
 8011934:	3701      	adds	r7, #1
 8011936:	eba9 0903 	sub.w	r9, r9, r3
 801193a:	a80f      	add	r0, sp, #60	; 0x3c
 801193c:	b236      	sxth	r6, r6
 801193e:	b2bf      	uxth	r7, r7
 8011940:	fa0f f989 	sxth.w	r9, r9
 8011944:	f005 f9bd 	bl	8016cc2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011948:	b918      	cbnz	r0, 8011952 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801194a:	7a2b      	ldrb	r3, [r5, #8]
 801194c:	444b      	add	r3, r9
 801194e:	2b00      	cmp	r3, #0
 8011950:	dcde      	bgt.n	8011910 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011952:	9b03      	ldr	r3, [sp, #12]
 8011954:	9a04      	ldr	r2, [sp, #16]
 8011956:	f895 9009 	ldrb.w	r9, [r5, #9]
 801195a:	fb13 f707 	smulbb	r7, r3, r7
 801195e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011960:	1aff      	subs	r7, r7, r3
 8011962:	b2bf      	uxth	r7, r7
 8011964:	b23b      	sxth	r3, r7
 8011966:	429a      	cmp	r2, r3
 8011968:	bfa8      	it	ge
 801196a:	4657      	movge	r7, sl
 801196c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011970:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011974:	6823      	ldr	r3, [r4, #0]
 8011976:	bf08      	it	eq
 8011978:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801197c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801197e:	bf18      	it	ne
 8011980:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011984:	4620      	mov	r0, r4
 8011986:	4798      	blx	r3
 8011988:	444f      	add	r7, r9
 801198a:	fa1f f987 	uxth.w	r9, r7
 801198e:	2801      	cmp	r0, #1
 8011990:	fa0f f789 	sxth.w	r7, r9
 8011994:	b2b3      	uxth	r3, r6
 8011996:	f000 80e1 	beq.w	8011b5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801199a:	2802      	cmp	r0, #2
 801199c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80119a0:	f000 80e2 	beq.w	8011b68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80119a4:	7aea      	ldrb	r2, [r5, #11]
 80119a6:	7b2d      	ldrb	r5, [r5, #12]
 80119a8:	b236      	sxth	r6, r6
 80119aa:	1ab6      	subs	r6, r6, r2
 80119ac:	442a      	add	r2, r5
 80119ae:	4413      	add	r3, r2
 80119b0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80119b4:	fa1f fa86 	uxth.w	sl, r6
 80119b8:	b29b      	uxth	r3, r3
 80119ba:	2a02      	cmp	r2, #2
 80119bc:	fa0f fb8a 	sxth.w	fp, sl
 80119c0:	b21e      	sxth	r6, r3
 80119c2:	f000 80d5 	beq.w	8011b70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80119c6:	2a03      	cmp	r2, #3
 80119c8:	f000 80dd 	beq.w	8011b86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80119cc:	2a01      	cmp	r2, #1
 80119ce:	f040 80e5 	bne.w	8011b9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80119d2:	8925      	ldrh	r5, [r4, #8]
 80119d4:	4633      	mov	r3, r6
 80119d6:	eba5 0909 	sub.w	r9, r5, r9
 80119da:	463e      	mov	r6, r7
 80119dc:	465d      	mov	r5, fp
 80119de:	461f      	mov	r7, r3
 80119e0:	fa0f fb89 	sxth.w	fp, r9
 80119e4:	4b5c      	ldr	r3, [pc, #368]	; (8011b58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80119e6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80119e8:	6818      	ldr	r0, [r3, #0]
 80119ea:	f7f6 fb41 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 80119ee:	f8a8 b000 	strh.w	fp, [r8]
 80119f2:	f8a8 5002 	strh.w	r5, [r8, #2]
 80119f6:	f8a8 6004 	strh.w	r6, [r8, #4]
 80119fa:	f8a8 7006 	strh.w	r7, [r8, #6]
 80119fe:	f8c8 0008 	str.w	r0, [r8, #8]
 8011a02:	e737      	b.n	8011874 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011a04:	f005 f936 	bl	8016c74 <_ZN8touchgfx12TextProviderC1Ev>
 8011a08:	682b      	ldr	r3, [r5, #0]
 8011a0a:	4628      	mov	r0, r5
 8011a0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011a0e:	4798      	blx	r3
 8011a10:	682b      	ldr	r3, [r5, #0]
 8011a12:	4607      	mov	r7, r0
 8011a14:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011a16:	4628      	mov	r0, r5
 8011a18:	4798      	blx	r3
 8011a1a:	6823      	ldr	r3, [r4, #0]
 8011a1c:	4683      	mov	fp, r0
 8011a1e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011a20:	4620      	mov	r0, r4
 8011a22:	4798      	blx	r3
 8011a24:	6822      	ldr	r2, [r4, #0]
 8011a26:	9005      	str	r0, [sp, #20]
 8011a28:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011a2c:	4620      	mov	r0, r4
 8011a2e:	4790      	blx	r2
 8011a30:	9b05      	ldr	r3, [sp, #20]
 8011a32:	9001      	str	r0, [sp, #4]
 8011a34:	463a      	mov	r2, r7
 8011a36:	4649      	mov	r1, r9
 8011a38:	9300      	str	r3, [sp, #0]
 8011a3a:	a80f      	add	r0, sp, #60	; 0x3c
 8011a3c:	465b      	mov	r3, fp
 8011a3e:	f005 f989 	bl	8016d54 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011a42:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011a46:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011a4a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011a4c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011a50:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011a54:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011a58:	bf0a      	itet	eq
 8011a5a:	464a      	moveq	r2, r9
 8011a5c:	461a      	movne	r2, r3
 8011a5e:	4699      	moveq	r9, r3
 8011a60:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011a64:	1ad2      	subs	r2, r2, r3
 8011a66:	6833      	ldr	r3, [r6, #0]
 8011a68:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011a6c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011a70:	af0f      	add	r7, sp, #60	; 0x3c
 8011a72:	7859      	ldrb	r1, [r3, #1]
 8011a74:	9707      	str	r7, [sp, #28]
 8011a76:	2300      	movs	r3, #0
 8011a78:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011a7c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011a80:	f88d 1020 	strb.w	r1, [sp, #32]
 8011a84:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011a88:	9509      	str	r5, [sp, #36]	; 0x24
 8011a8a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011a8e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011a92:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011a96:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011a9a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011a9e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011aa2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011aa6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011aaa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011aae:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011ab2:	b350      	cbz	r0, 8011b0a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ab4:	682b      	ldr	r3, [r5, #0]
 8011ab6:	4628      	mov	r0, r5
 8011ab8:	695b      	ldr	r3, [r3, #20]
 8011aba:	4798      	blx	r3
 8011abc:	4607      	mov	r7, r0
 8011abe:	b320      	cbz	r0, 8011b0a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ac0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011ac2:	6803      	ldr	r3, [r0, #0]
 8011ac4:	4639      	mov	r1, r7
 8011ac6:	68db      	ldr	r3, [r3, #12]
 8011ac8:	4798      	blx	r3
 8011aca:	4606      	mov	r6, r0
 8011acc:	b1e8      	cbz	r0, 8011b0a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ace:	7b43      	ldrb	r3, [r0, #13]
 8011ad0:	7a82      	ldrb	r2, [r0, #10]
 8011ad2:	005b      	lsls	r3, r3, #1
 8011ad4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011ad8:	4313      	orrs	r3, r2
 8011ada:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011ade:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011ae2:	2b06      	cmp	r3, #6
 8011ae4:	d111      	bne.n	8011b0a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ae6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011ae8:	6803      	ldr	r3, [r0, #0]
 8011aea:	4632      	mov	r2, r6
 8011aec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011aee:	4639      	mov	r1, r7
 8011af0:	4798      	blx	r3
 8011af2:	7b73      	ldrb	r3, [r6, #13]
 8011af4:	005b      	lsls	r3, r3, #1
 8011af6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011afa:	7ab3      	ldrb	r3, [r6, #10]
 8011afc:	4313      	orrs	r3, r2
 8011afe:	4418      	add	r0, r3
 8011b00:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011b04:	4418      	add	r0, r3
 8011b06:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011b0a:	2600      	movs	r6, #0
 8011b0c:	4637      	mov	r7, r6
 8011b0e:	a806      	add	r0, sp, #24
 8011b10:	f002 fc6c 	bl	80143ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011b14:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011b18:	9b03      	ldr	r3, [sp, #12]
 8011b1a:	4286      	cmp	r6, r0
 8011b1c:	eba9 0903 	sub.w	r9, r9, r3
 8011b20:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011b24:	bfb8      	it	lt
 8011b26:	4606      	movlt	r6, r0
 8011b28:	3701      	adds	r7, #1
 8011b2a:	b236      	sxth	r6, r6
 8011b2c:	b2bf      	uxth	r7, r7
 8011b2e:	fa0f f989 	sxth.w	r9, r9
 8011b32:	2b00      	cmp	r3, #0
 8011b34:	f43f af0d 	beq.w	8011952 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b38:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011b3c:	2b00      	cmp	r3, #0
 8011b3e:	f47f af08 	bne.w	8011952 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b42:	7a2b      	ldrb	r3, [r5, #8]
 8011b44:	444b      	add	r3, r9
 8011b46:	2b00      	cmp	r3, #0
 8011b48:	dce1      	bgt.n	8011b0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011b4a:	e702      	b.n	8011952 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b4c:	20012ed8 	.word	0x20012ed8
 8011b50:	20012ed4 	.word	0x20012ed4
 8011b54:	20012edc 	.word	0x20012edc
 8011b58:	20012ee0 	.word	0x20012ee0
 8011b5c:	ebaa 0606 	sub.w	r6, sl, r6
 8011b60:	2002      	movs	r0, #2
 8011b62:	fb96 f6f0 	sdiv	r6, r6, r0
 8011b66:	e71d      	b.n	80119a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011b68:	441e      	add	r6, r3
 8011b6a:	ebaa 0606 	sub.w	r6, sl, r6
 8011b6e:	e719      	b.n	80119a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011b70:	8925      	ldrh	r5, [r4, #8]
 8011b72:	1aed      	subs	r5, r5, r3
 8011b74:	eba5 050a 	sub.w	r5, r5, sl
 8011b78:	fa0f fb85 	sxth.w	fp, r5
 8011b7c:	8965      	ldrh	r5, [r4, #10]
 8011b7e:	eba5 0509 	sub.w	r5, r5, r9
 8011b82:	b22d      	sxth	r5, r5
 8011b84:	e72e      	b.n	80119e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011b86:	8965      	ldrh	r5, [r4, #10]
 8011b88:	1aed      	subs	r5, r5, r3
 8011b8a:	eba5 050a 	sub.w	r5, r5, sl
 8011b8e:	4633      	mov	r3, r6
 8011b90:	b22d      	sxth	r5, r5
 8011b92:	463e      	mov	r6, r7
 8011b94:	f04f 0b00 	mov.w	fp, #0
 8011b98:	461f      	mov	r7, r3
 8011b9a:	e723      	b.n	80119e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011b9c:	2500      	movs	r5, #0
 8011b9e:	e721      	b.n	80119e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011ba0 <_ZN8touchgfx8TextAreaD0Ev>:
 8011ba0:	b510      	push	{r4, lr}
 8011ba2:	2148      	movs	r1, #72	; 0x48
 8011ba4:	4604      	mov	r4, r0
 8011ba6:	f017 fa4a 	bl	802903e <_ZdlPvj>
 8011baa:	4620      	mov	r0, r4
 8011bac:	bd10      	pop	{r4, pc}
	...

08011bb0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011bb0:	b513      	push	{r0, r1, r4, lr}
 8011bb2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011bb6:	4604      	mov	r4, r0
 8011bb8:	b1fb      	cbz	r3, 8011bfa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011bba:	4b16      	ldr	r3, [pc, #88]	; (8011c14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011bbc:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011bbe:	881b      	ldrh	r3, [r3, #0]
 8011bc0:	428b      	cmp	r3, r1
 8011bc2:	d91a      	bls.n	8011bfa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011bc4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011bc8:	2b00      	cmp	r3, #0
 8011bca:	dd16      	ble.n	8011bfa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011bcc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011bd0:	2b00      	cmp	r3, #0
 8011bd2:	dd12      	ble.n	8011bfa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011bd4:	4b10      	ldr	r3, [pc, #64]	; (8011c18 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011bd6:	6818      	ldr	r0, [r3, #0]
 8011bd8:	f7f6 fa4a 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8011bdc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011be0:	6822      	ldr	r2, [r4, #0]
 8011be2:	2b00      	cmp	r3, #0
 8011be4:	db06      	blt.n	8011bf4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011be6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011bea:	2b00      	cmp	r3, #0
 8011bec:	db02      	blt.n	8011bf4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011bee:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011bf0:	4298      	cmp	r0, r3
 8011bf2:	d004      	beq.n	8011bfe <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011bf4:	6953      	ldr	r3, [r2, #20]
 8011bf6:	4620      	mov	r0, r4
 8011bf8:	4798      	blx	r3
 8011bfa:	b002      	add	sp, #8
 8011bfc:	bd10      	pop	{r4, pc}
 8011bfe:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011c02:	c903      	ldmia	r1, {r0, r1}
 8011c04:	466b      	mov	r3, sp
 8011c06:	e883 0003 	stmia.w	r3, {r0, r1}
 8011c0a:	6912      	ldr	r2, [r2, #16]
 8011c0c:	4619      	mov	r1, r3
 8011c0e:	4620      	mov	r0, r4
 8011c10:	4790      	blx	r2
 8011c12:	e7f2      	b.n	8011bfa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011c14:	20012ed8 	.word	0x20012ed8
 8011c18:	20012ee0 	.word	0x20012ee0

08011c1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011c1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c20:	4b44      	ldr	r3, [pc, #272]	; (8011d34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011c22:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011c24:	881b      	ldrh	r3, [r3, #0]
 8011c26:	4293      	cmp	r3, r2
 8011c28:	b08e      	sub	sp, #56	; 0x38
 8011c2a:	4604      	mov	r4, r0
 8011c2c:	d97e      	bls.n	8011d2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c2e:	6808      	ldr	r0, [r1, #0]
 8011c30:	4d41      	ldr	r5, [pc, #260]	; (8011d38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011c32:	6849      	ldr	r1, [r1, #4]
 8011c34:	ab05      	add	r3, sp, #20
 8011c36:	c303      	stmia	r3!, {r0, r1}
 8011c38:	4611      	mov	r1, r2
 8011c3a:	6828      	ldr	r0, [r5, #0]
 8011c3c:	f7f6 fa18 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8011c40:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011c44:	2b00      	cmp	r3, #0
 8011c46:	db11      	blt.n	8011c6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011c48:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011c4c:	2b00      	cmp	r3, #0
 8011c4e:	db0d      	blt.n	8011c6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011c50:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011c52:	4298      	cmp	r0, r3
 8011c54:	d10a      	bne.n	8011c6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011c56:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011c5a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011c5e:	ab09      	add	r3, sp, #36	; 0x24
 8011c60:	e883 0003 	stmia.w	r3, {r0, r1}
 8011c64:	4619      	mov	r1, r3
 8011c66:	a805      	add	r0, sp, #20
 8011c68:	f7fe f860 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 8011c6c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011c70:	2b00      	cmp	r3, #0
 8011c72:	dd5b      	ble.n	8011d2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c74:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011c78:	2b00      	cmp	r3, #0
 8011c7a:	dd57      	ble.n	8011d2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c7c:	4f2f      	ldr	r7, [pc, #188]	; (8011d3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011c7e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011c80:	683b      	ldr	r3, [r7, #0]
 8011c82:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011c86:	4b2e      	ldr	r3, [pc, #184]	; (8011d40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011c88:	681b      	ldr	r3, [r3, #0]
 8011c8a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011c8e:	2e00      	cmp	r6, #0
 8011c90:	d04c      	beq.n	8011d2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c92:	6823      	ldr	r3, [r4, #0]
 8011c94:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011c98:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011c9a:	4620      	mov	r0, r4
 8011c9c:	4798      	blx	r3
 8011c9e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011ca0:	683b      	ldr	r3, [r7, #0]
 8011ca2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011ca6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011caa:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011cae:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011cb0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011cb4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011cb8:	785b      	ldrb	r3, [r3, #1]
 8011cba:	9609      	str	r6, [sp, #36]	; 0x24
 8011cbc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011cc0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011cc4:	4b1f      	ldr	r3, [pc, #124]	; (8011d44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011cc6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011cca:	681b      	ldr	r3, [r3, #0]
 8011ccc:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011cd0:	910b      	str	r1, [sp, #44]	; 0x2c
 8011cd2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011cd6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8011cda:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8011cde:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011ce2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011ce6:	b10a      	cbz	r2, 8011cec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011ce8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011cea:	b906      	cbnz	r6, 8011cee <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011cec:	689e      	ldr	r6, [r3, #8]
 8011cee:	af07      	add	r7, sp, #28
 8011cf0:	4621      	mov	r1, r4
 8011cf2:	4638      	mov	r0, r7
 8011cf4:	f004 fab0 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011cf8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011cfa:	6828      	ldr	r0, [r5, #0]
 8011cfc:	f7f6 f9b8 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8011d00:	6823      	ldr	r3, [r4, #0]
 8011d02:	4605      	mov	r5, r0
 8011d04:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011d06:	4620      	mov	r0, r4
 8011d08:	4798      	blx	r3
 8011d0a:	6823      	ldr	r3, [r4, #0]
 8011d0c:	4680      	mov	r8, r0
 8011d0e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011d12:	4620      	mov	r0, r4
 8011d14:	4798      	blx	r3
 8011d16:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011d1a:	ab09      	add	r3, sp, #36	; 0x24
 8011d1c:	9300      	str	r3, [sp, #0]
 8011d1e:	9501      	str	r5, [sp, #4]
 8011d20:	ab05      	add	r3, sp, #20
 8011d22:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011d26:	4630      	mov	r0, r6
 8011d28:	f7f6 f954 	bl	8007fd4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011d2c:	b00e      	add	sp, #56	; 0x38
 8011d2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d32:	bf00      	nop
 8011d34:	20012ed8 	.word	0x20012ed8
 8011d38:	20012ee0 	.word	0x20012ee0
 8011d3c:	20012ed4 	.word	0x20012ed4
 8011d40:	20012edc 	.word	0x20012edc
 8011d44:	20012e7c 	.word	0x20012e7c

08011d48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011d48:	b538      	push	{r3, r4, r5, lr}
 8011d4a:	4b0e      	ldr	r3, [pc, #56]	; (8011d84 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8011d4c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011d4e:	881b      	ldrh	r3, [r3, #0]
 8011d50:	429a      	cmp	r2, r3
 8011d52:	4604      	mov	r4, r0
 8011d54:	d214      	bcs.n	8011d80 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8011d56:	6803      	ldr	r3, [r0, #0]
 8011d58:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011d5a:	4798      	blx	r3
 8011d5c:	6823      	ldr	r3, [r4, #0]
 8011d5e:	4605      	mov	r5, r0
 8011d60:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011d62:	4620      	mov	r0, r4
 8011d64:	4798      	blx	r3
 8011d66:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011d6a:	b22d      	sxth	r5, r5
 8011d6c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011d70:	4601      	mov	r1, r0
 8011d72:	bf06      	itte	eq
 8011d74:	4602      	moveq	r2, r0
 8011d76:	4629      	moveq	r1, r5
 8011d78:	462a      	movne	r2, r5
 8011d7a:	4620      	mov	r0, r4
 8011d7c:	f7fd fdb6 	bl	800f8ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011d80:	bd38      	pop	{r3, r4, r5, pc}
 8011d82:	bf00      	nop
 8011d84:	20012ed8 	.word	0x20012ed8

08011d88 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8011d88:	b530      	push	{r4, r5, lr}
 8011d8a:	888b      	ldrh	r3, [r1, #4]
 8011d8c:	8583      	strh	r3, [r0, #44]	; 0x2c
 8011d8e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011d92:	b085      	sub	sp, #20
 8011d94:	4604      	mov	r4, r0
 8011d96:	b923      	cbnz	r3, 8011da2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011d98:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011d9c:	b90b      	cbnz	r3, 8011da2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011d9e:	f7ff ffd3 	bl	8011d48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011da2:	6823      	ldr	r3, [r4, #0]
 8011da4:	466d      	mov	r5, sp
 8011da6:	4621      	mov	r1, r4
 8011da8:	4628      	mov	r0, r5
 8011daa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011dae:	4798      	blx	r3
 8011db0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011db4:	343c      	adds	r4, #60	; 0x3c
 8011db6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011dba:	b005      	add	sp, #20
 8011dbc:	bd30      	pop	{r4, r5, pc}

08011dbe <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011dbe:	2300      	movs	r3, #0
 8011dc0:	8083      	strh	r3, [r0, #4]
 8011dc2:	80c3      	strh	r3, [r0, #6]
 8011dc4:	8003      	strh	r3, [r0, #0]
 8011dc6:	8043      	strh	r3, [r0, #2]
 8011dc8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8011dcc:	2bff      	cmp	r3, #255	; 0xff
 8011dce:	bf01      	itttt	eq
 8011dd0:	890b      	ldrheq	r3, [r1, #8]
 8011dd2:	8083      	strheq	r3, [r0, #4]
 8011dd4:	894b      	ldrheq	r3, [r1, #10]
 8011dd6:	80c3      	strheq	r3, [r0, #6]
 8011dd8:	4770      	bx	lr
	...

08011ddc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011ddc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011dde:	4604      	mov	r4, r0
 8011de0:	6808      	ldr	r0, [r1, #0]
 8011de2:	6849      	ldr	r1, [r1, #4]
 8011de4:	466b      	mov	r3, sp
 8011de6:	c303      	stmia	r3!, {r0, r1}
 8011de8:	6823      	ldr	r3, [r4, #0]
 8011dea:	4669      	mov	r1, sp
 8011dec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011dee:	4620      	mov	r0, r4
 8011df0:	4798      	blx	r3
 8011df2:	4b08      	ldr	r3, [pc, #32]	; (8011e14 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011df4:	681b      	ldr	r3, [r3, #0]
 8011df6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011dfa:	b10a      	cbz	r2, 8011e00 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8011dfc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011dfe:	b900      	cbnz	r0, 8011e02 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011e00:	6898      	ldr	r0, [r3, #8]
 8011e02:	6803      	ldr	r3, [r0, #0]
 8011e04:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011e06:	6a1d      	ldr	r5, [r3, #32]
 8011e08:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8011e0c:	4669      	mov	r1, sp
 8011e0e:	47a8      	blx	r5
 8011e10:	b003      	add	sp, #12
 8011e12:	bd30      	pop	{r4, r5, pc}
 8011e14:	20012e7c 	.word	0x20012e7c

08011e18 <_ZN8touchgfx3BoxD1Ev>:
 8011e18:	4770      	bx	lr

08011e1a <_ZN8touchgfx3BoxD0Ev>:
 8011e1a:	b510      	push	{r4, lr}
 8011e1c:	212c      	movs	r1, #44	; 0x2c
 8011e1e:	4604      	mov	r4, r0
 8011e20:	f017 f90d 	bl	802903e <_ZdlPvj>
 8011e24:	4620      	mov	r0, r4
 8011e26:	bd10      	pop	{r4, pc}

08011e28 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011e28:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8011e2c:	b12a      	cbz	r2, 8011e3a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011e2e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011e32:	b112      	cbz	r2, 8011e3a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011e34:	6803      	ldr	r3, [r0, #0]
 8011e36:	695b      	ldr	r3, [r3, #20]
 8011e38:	4718      	bx	r3
 8011e3a:	4770      	bx	lr

08011e3c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8011e3c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8011e40:	600b      	str	r3, [r1, #0]
 8011e42:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8011e46:	6013      	str	r3, [r2, #0]
 8011e48:	4770      	bx	lr

08011e4a <_ZN8touchgfx5Gauge8setWidthEs>:
 8011e4a:	8101      	strh	r1, [r0, #8]
 8011e4c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8011e50:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8011e54:	4770      	bx	lr

08011e56 <_ZN8touchgfx5Gauge9setHeightEs>:
 8011e56:	8141      	strh	r1, [r0, #10]
 8011e58:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8011e5c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8011e60:	4770      	bx	lr

08011e62 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8011e62:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8011e66:	4770      	bx	lr

08011e68 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8011e68:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8011e6c:	4770      	bx	lr

08011e6e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8011e6e:	4770      	bx	lr

08011e70 <_ZN8touchgfx5GaugeD1Ev>:
 8011e70:	4770      	bx	lr

08011e72 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8011e72:	b538      	push	{r3, r4, r5, lr}
 8011e74:	4604      	mov	r4, r0
 8011e76:	460d      	mov	r5, r1
 8011e78:	f7fd fc51 	bl	800f71e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011e7c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8011e80:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8011e84:	bd38      	pop	{r3, r4, r5, pc}

08011e86 <_ZN8touchgfx5GaugeD0Ev>:
 8011e86:	b510      	push	{r4, lr}
 8011e88:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8011e8c:	4604      	mov	r4, r0
 8011e8e:	f017 f8d6 	bl	802903e <_ZdlPvj>
 8011e92:	4620      	mov	r0, r4
 8011e94:	bd10      	pop	{r4, pc}

08011e96 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8011e96:	b510      	push	{r4, lr}
 8011e98:	6803      	ldr	r3, [r0, #0]
 8011e9a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011e9e:	4604      	mov	r4, r0
 8011ea0:	4798      	blx	r3
 8011ea2:	b170      	cbz	r0, 8011ec2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011ea4:	6823      	ldr	r3, [r4, #0]
 8011ea6:	4620      	mov	r0, r4
 8011ea8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011eac:	4798      	blx	r3
 8011eae:	b140      	cbz	r0, 8011ec2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011eb0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011eb4:	b12b      	cbz	r3, 8011ec2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011eb6:	6823      	ldr	r3, [r4, #0]
 8011eb8:	4620      	mov	r0, r4
 8011eba:	695b      	ldr	r3, [r3, #20]
 8011ebc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011ec0:	4718      	bx	r3
 8011ec2:	bd10      	pop	{r4, pc}

08011ec4 <_ZN8touchgfx5GaugeC1Ev>:
 8011ec4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011ec6:	4604      	mov	r4, r0
 8011ec8:	4626      	mov	r6, r4
 8011eca:	f7fd fd49 	bl	800f960 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011ece:	4b18      	ldr	r3, [pc, #96]	; (8011f30 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8011ed0:	f846 3bb4 	str.w	r3, [r6], #180
 8011ed4:	a902      	add	r1, sp, #8
 8011ed6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011eda:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8011ede:	4630      	mov	r0, r6
 8011ee0:	f015 f970 	bl	80271c4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8011ee4:	2500      	movs	r5, #0
 8011ee6:	2301      	movs	r3, #1
 8011ee8:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8011eec:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8011ef0:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8011ef4:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8011ef8:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8011efc:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8011f00:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8011f04:	4638      	mov	r0, r7
 8011f06:	f014 fba1 	bl	802664c <_ZN8touchgfx6CircleC1Ev>
 8011f0a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8011f0e:	4620      	mov	r0, r4
 8011f10:	f7fd fdc7 	bl	800faa2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011f14:	4639      	mov	r1, r7
 8011f16:	4620      	mov	r0, r4
 8011f18:	f7fd fd82 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011f1c:	4620      	mov	r0, r4
 8011f1e:	4631      	mov	r1, r6
 8011f20:	f7fd fd7e 	bl	800fa20 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011f24:	4620      	mov	r0, r4
 8011f26:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8011f2a:	b003      	add	sp, #12
 8011f2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f2e:	bf00      	nop
 8011f30:	0802e1c0 	.word	0x0802e1c0

08011f34 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011f34:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8011f38:	4770      	bx	lr

08011f3a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011f3a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8011f3e:	4770      	bx	lr

08011f40 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8011f40:	b538      	push	{r3, r4, r5, lr}
 8011f42:	8902      	ldrh	r2, [r0, #8]
 8011f44:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011f48:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8011f4c:	4604      	mov	r4, r0
 8011f4e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011f52:	2200      	movs	r2, #0
 8011f54:	4611      	mov	r1, r2
 8011f56:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8011f5a:	4628      	mov	r0, r5
 8011f5c:	f7f0 fb85 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 8011f60:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8011f64:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011f68:	1a9b      	subs	r3, r3, r2
 8011f6a:	ee07 3a90 	vmov	s15, r3
 8011f6e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8011f72:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8011f76:	1a9b      	subs	r3, r3, r2
 8011f78:	ee07 3a10 	vmov	s14, r3
 8011f7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011f80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011f84:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8011f88:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8011f8c:	4628      	mov	r0, r5
 8011f8e:	f015 f965 	bl	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011f92:	4b16      	ldr	r3, [pc, #88]	; (8011fec <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8011f94:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8011f98:	4628      	mov	r0, r5
 8011f9a:	f015 f95f 	bl	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011f9e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011fa2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8011fa6:	ee07 3a90 	vmov	s15, r3
 8011faa:	ee07 2a10 	vmov	s14, r2
 8011fae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011fb2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011fb6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8011fba:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8011fbe:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8011fc2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8011fc6:	4628      	mov	r0, r5
 8011fc8:	f015 f948 	bl	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011fcc:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8011fd0:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8011fd4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8011fd8:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8011fdc:	4628      	mov	r0, r5
 8011fde:	f015 f93d 	bl	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011fe2:	2301      	movs	r3, #1
 8011fe4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011fe8:	bd38      	pop	{r3, r4, r5, pc}
 8011fea:	bf00      	nop
 8011fec:	43960000 	.word	0x43960000

08011ff0 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8011ff0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011ff2:	4604      	mov	r4, r0
 8011ff4:	a802      	add	r0, sp, #8
 8011ff6:	4616      	mov	r6, r2
 8011ff8:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8011ffc:	461d      	mov	r5, r3
 8011ffe:	4601      	mov	r1, r0
 8012000:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012004:	f015 fa80 	bl	8027508 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012008:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 801200c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012010:	4620      	mov	r0, r4
 8012012:	f7ff ff95 	bl	8011f40 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012016:	b002      	add	sp, #8
 8012018:	bd70      	pop	{r4, r5, r6, pc}

0801201a <_ZN8touchgfx5Gauge9setCenterEii>:
 801201a:	b570      	push	{r4, r5, r6, lr}
 801201c:	4606      	mov	r6, r0
 801201e:	460d      	mov	r5, r1
 8012020:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012024:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012028:	4614      	mov	r4, r2
 801202a:	f7ff ff89 	bl	8011f40 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801202e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012032:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012036:	1aa4      	subs	r4, r4, r2
 8012038:	1a6d      	subs	r5, r5, r1
 801203a:	0164      	lsls	r4, r4, #5
 801203c:	016d      	lsls	r5, r5, #5
 801203e:	3410      	adds	r4, #16
 8012040:	3510      	adds	r5, #16
 8012042:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012046:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 801204a:	bd70      	pop	{r4, r5, r6, pc}

0801204c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 801204c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801204e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012050:	0149      	lsls	r1, r1, #5
 8012052:	4299      	cmp	r1, r3
 8012054:	4604      	mov	r4, r0
 8012056:	9101      	str	r1, [sp, #4]
 8012058:	d00b      	beq.n	8012072 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 801205a:	4601      	mov	r1, r0
 801205c:	aa01      	add	r2, sp, #4
 801205e:	a802      	add	r0, sp, #8
 8012060:	f014 fcf2 	bl	8026a48 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012064:	9b01      	ldr	r3, [sp, #4]
 8012066:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012068:	6823      	ldr	r3, [r4, #0]
 801206a:	a902      	add	r1, sp, #8
 801206c:	691b      	ldr	r3, [r3, #16]
 801206e:	4620      	mov	r0, r4
 8012070:	4798      	blx	r3
 8012072:	b004      	add	sp, #16
 8012074:	bd10      	pop	{r4, pc}
	...

08012078 <_ZN8touchgfx5Gauge8setValueEi>:
 8012078:	b570      	push	{r4, r5, r6, lr}
 801207a:	4604      	mov	r4, r0
 801207c:	f7fd fba2 	bl	800f7c4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012080:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012084:	429a      	cmp	r2, r3
 8012086:	bfac      	ite	ge
 8012088:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 801208c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012090:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012094:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012098:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 801209c:	1ac9      	subs	r1, r1, r3
 801209e:	2900      	cmp	r1, #0
 80120a0:	bfb8      	it	lt
 80120a2:	4249      	neglt	r1, r1
 80120a4:	b289      	uxth	r1, r1
 80120a6:	4620      	mov	r0, r4
 80120a8:	f7fd fbae 	bl	800f808 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 80120ac:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80120b0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80120b4:	eddf 6a19 	vldr	s13, [pc, #100]	; 801211c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 80120b8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012120 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 80120bc:	429a      	cmp	r2, r3
 80120be:	4605      	mov	r5, r0
 80120c0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80120c4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80120c8:	da15      	bge.n	80120f6 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80120ca:	1b5b      	subs	r3, r3, r5
 80120cc:	ee07 3a90 	vmov	s15, r3
 80120d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80120d4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80120d8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80120dc:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80120e0:	ee21 1a07 	vmul.f32	s2, s2, s14
 80120e4:	f015 f829 	bl	802713a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80120e8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80120ec:	1b49      	subs	r1, r1, r5
 80120ee:	4630      	mov	r0, r6
 80120f0:	f7ff ffac 	bl	801204c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 80120f4:	bd70      	pop	{r4, r5, r6, pc}
 80120f6:	442b      	add	r3, r5
 80120f8:	ee07 3a90 	vmov	s15, r3
 80120fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012100:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012104:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012108:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 801210c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012110:	f015 f813 	bl	802713a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012114:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012118:	4429      	add	r1, r5
 801211a:	e7e8      	b.n	80120ee <_ZN8touchgfx5Gauge8setValueEi+0x76>
 801211c:	43340000 	.word	0x43340000
 8012120:	40490fdb 	.word	0x40490fdb

08012124 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012124:	b510      	push	{r4, lr}
 8012126:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801212a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801212e:	0149      	lsls	r1, r1, #5
 8012130:	0152      	lsls	r2, r2, #5
 8012132:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012136:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801213a:	4604      	mov	r4, r0
 801213c:	f7fd faec 	bl	800f718 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012140:	4601      	mov	r1, r0
 8012142:	4620      	mov	r0, r4
 8012144:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012148:	f7ff bf96 	b.w	8012078 <_ZN8touchgfx5Gauge8setValueEi>

0801214c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801214c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012150:	4770      	bx	lr

08012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012152:	b570      	push	{r4, r5, r6, lr}
 8012154:	880b      	ldrh	r3, [r1, #0]
 8012156:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012158:	4605      	mov	r5, r0
 801215a:	8813      	ldrh	r3, [r2, #0]
 801215c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012160:	4604      	mov	r4, r0
 8012162:	4628      	mov	r0, r5
 8012164:	f006 fb06 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012168:	4606      	mov	r6, r0
 801216a:	4628      	mov	r0, r5
 801216c:	f006 fb36 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012170:	6823      	ldr	r3, [r4, #0]
 8012172:	4605      	mov	r5, r0
 8012174:	4631      	mov	r1, r6
 8012176:	4620      	mov	r0, r4
 8012178:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801217a:	4798      	blx	r3
 801217c:	6823      	ldr	r3, [r4, #0]
 801217e:	4629      	mov	r1, r5
 8012180:	4620      	mov	r0, r4
 8012182:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012184:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012188:	4718      	bx	r3

0801218a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801218a:	b510      	push	{r4, lr}
 801218c:	4604      	mov	r4, r0
 801218e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012190:	b150      	cbz	r0, 80121a8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012192:	6803      	ldr	r3, [r0, #0]
 8012194:	68db      	ldr	r3, [r3, #12]
 8012196:	4798      	blx	r3
 8012198:	b130      	cbz	r0, 80121a8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801219a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801219c:	6803      	ldr	r3, [r0, #0]
 801219e:	4621      	mov	r1, r4
 80121a0:	689b      	ldr	r3, [r3, #8]
 80121a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80121a6:	4718      	bx	r3
 80121a8:	bd10      	pop	{r4, pc}

080121aa <_ZNK8touchgfx6Button12getSolidRectEv>:
 80121aa:	b510      	push	{r4, lr}
 80121ac:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80121b0:	2bff      	cmp	r3, #255	; 0xff
 80121b2:	4604      	mov	r4, r0
 80121b4:	d006      	beq.n	80121c4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80121b6:	2300      	movs	r3, #0
 80121b8:	8003      	strh	r3, [r0, #0]
 80121ba:	8043      	strh	r3, [r0, #2]
 80121bc:	8083      	strh	r3, [r0, #4]
 80121be:	80c3      	strh	r3, [r0, #6]
 80121c0:	4620      	mov	r0, r4
 80121c2:	bd10      	pop	{r4, pc}
 80121c4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80121c8:	b11b      	cbz	r3, 80121d2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80121ca:	3130      	adds	r1, #48	; 0x30
 80121cc:	f006 fb3a 	bl	8018844 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80121d0:	e7f6      	b.n	80121c0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80121d2:	312e      	adds	r1, #46	; 0x2e
 80121d4:	e7fa      	b.n	80121cc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080121d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80121d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121dc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80121e0:	b08a      	sub	sp, #40	; 0x28
 80121e2:	4604      	mov	r4, r0
 80121e4:	4688      	mov	r8, r1
 80121e6:	2b00      	cmp	r3, #0
 80121e8:	d066      	beq.n	80122b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80121ea:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80121ec:	f8ad 3014 	strh.w	r3, [sp, #20]
 80121f0:	a805      	add	r0, sp, #20
 80121f2:	f006 fabf 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80121f6:	4607      	mov	r7, r0
 80121f8:	a805      	add	r0, sp, #20
 80121fa:	f006 faef 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80121fe:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012202:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012206:	4432      	add	r2, r6
 8012208:	b292      	uxth	r2, r2
 801220a:	2300      	movs	r3, #0
 801220c:	fa0f fc82 	sxth.w	ip, r2
 8012210:	459c      	cmp	ip, r3
 8012212:	9306      	str	r3, [sp, #24]
 8012214:	dd52      	ble.n	80122bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012216:	42b7      	cmp	r7, r6
 8012218:	dd50      	ble.n	80122bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801221a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801221e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012222:	442b      	add	r3, r5
 8012224:	b29b      	uxth	r3, r3
 8012226:	b219      	sxth	r1, r3
 8012228:	2900      	cmp	r1, #0
 801222a:	dd47      	ble.n	80122bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801222c:	42a8      	cmp	r0, r5
 801222e:	dd45      	ble.n	80122bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012230:	4567      	cmp	r7, ip
 8012232:	bfb8      	it	lt
 8012234:	b2ba      	uxthlt	r2, r7
 8012236:	4288      	cmp	r0, r1
 8012238:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801223c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012240:	bfb8      	it	lt
 8012242:	b283      	uxthlt	r3, r0
 8012244:	1b92      	subs	r2, r2, r6
 8012246:	1b5b      	subs	r3, r3, r5
 8012248:	f8ad 201c 	strh.w	r2, [sp, #28]
 801224c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012250:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012254:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012258:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801225c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012260:	429a      	cmp	r2, r3
 8012262:	d026      	beq.n	80122b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012264:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012268:	2b00      	cmp	r3, #0
 801226a:	dd22      	ble.n	80122b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801226c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012270:	2b00      	cmp	r3, #0
 8012272:	dd1e      	ble.n	80122b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012274:	2300      	movs	r3, #0
 8012276:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801227a:	6823      	ldr	r3, [r4, #0]
 801227c:	a908      	add	r1, sp, #32
 801227e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012280:	4620      	mov	r0, r4
 8012282:	4798      	blx	r3
 8012284:	4b0f      	ldr	r3, [pc, #60]	; (80122c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8012286:	681b      	ldr	r3, [r3, #0]
 8012288:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801228c:	b10a      	cbz	r2, 8012292 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 801228e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012290:	b900      	cbnz	r0, 8012294 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012292:	6898      	ldr	r0, [r3, #8]
 8012294:	6801      	ldr	r1, [r0, #0]
 8012296:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801229a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801229e:	2501      	movs	r5, #1
 80122a0:	9502      	str	r5, [sp, #8]
 80122a2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80122a6:	9401      	str	r4, [sp, #4]
 80122a8:	ac06      	add	r4, sp, #24
 80122aa:	9400      	str	r4, [sp, #0]
 80122ac:	688c      	ldr	r4, [r1, #8]
 80122ae:	a905      	add	r1, sp, #20
 80122b0:	47a0      	blx	r4
 80122b2:	b00a      	add	sp, #40	; 0x28
 80122b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80122b8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80122ba:	e797      	b.n	80121ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80122bc:	2300      	movs	r3, #0
 80122be:	9307      	str	r3, [sp, #28]
 80122c0:	e7ca      	b.n	8012258 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80122c2:	bf00      	nop
 80122c4:	20012e7c 	.word	0x20012e7c

080122c8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80122c8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80122cc:	b12a      	cbz	r2, 80122da <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80122ce:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80122d2:	b112      	cbz	r2, 80122da <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80122d4:	6803      	ldr	r3, [r0, #0]
 80122d6:	695b      	ldr	r3, [r3, #20]
 80122d8:	4718      	bx	r3
 80122da:	4770      	bx	lr

080122dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80122dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80122e0:	4b2f      	ldr	r3, [pc, #188]	; (80123a0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80122e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80122e4:	881b      	ldrh	r3, [r3, #0]
 80122e6:	4293      	cmp	r3, r2
 80122e8:	b08d      	sub	sp, #52	; 0x34
 80122ea:	4604      	mov	r4, r0
 80122ec:	460f      	mov	r7, r1
 80122ee:	d954      	bls.n	801239a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80122f0:	4b2c      	ldr	r3, [pc, #176]	; (80123a4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80122f2:	6819      	ldr	r1, [r3, #0]
 80122f4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80122f8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80122fc:	4a2a      	ldr	r2, [pc, #168]	; (80123a8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80122fe:	6812      	ldr	r2, [r2, #0]
 8012300:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012304:	2900      	cmp	r1, #0
 8012306:	d048      	beq.n	801239a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012308:	785a      	ldrb	r2, [r3, #1]
 801230a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801230e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012312:	4b26      	ldr	r3, [pc, #152]	; (80123ac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012314:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012318:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801231c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012320:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012322:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012326:	9107      	str	r1, [sp, #28]
 8012328:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801232c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012330:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012334:	681a      	ldr	r2, [r3, #0]
 8012336:	f88d 8020 	strb.w	r8, [sp, #32]
 801233a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801233e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012342:	9609      	str	r6, [sp, #36]	; 0x24
 8012344:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012348:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801234c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012350:	b10b      	cbz	r3, 8012356 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012352:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012354:	b905      	cbnz	r5, 8012358 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012356:	6895      	ldr	r5, [r2, #8]
 8012358:	ae05      	add	r6, sp, #20
 801235a:	4621      	mov	r1, r4
 801235c:	4630      	mov	r0, r6
 801235e:	f003 ff7b 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012362:	4b13      	ldr	r3, [pc, #76]	; (80123b0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012364:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012366:	6818      	ldr	r0, [r3, #0]
 8012368:	f7f5 fe82 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 801236c:	6823      	ldr	r3, [r4, #0]
 801236e:	4680      	mov	r8, r0
 8012370:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012372:	4620      	mov	r0, r4
 8012374:	4798      	blx	r3
 8012376:	6823      	ldr	r3, [r4, #0]
 8012378:	4681      	mov	r9, r0
 801237a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801237e:	4620      	mov	r0, r4
 8012380:	4798      	blx	r3
 8012382:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8012386:	ab07      	add	r3, sp, #28
 8012388:	9300      	str	r3, [sp, #0]
 801238a:	f8cd 8004 	str.w	r8, [sp, #4]
 801238e:	463b      	mov	r3, r7
 8012390:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012394:	4628      	mov	r0, r5
 8012396:	f7f5 fe1d 	bl	8007fd4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801239a:	b00d      	add	sp, #52	; 0x34
 801239c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80123a0:	20012ed8 	.word	0x20012ed8
 80123a4:	20012ed4 	.word	0x20012ed4
 80123a8:	20012edc 	.word	0x20012edc
 80123ac:	20012e7c 	.word	0x20012e7c
 80123b0:	20012ee0 	.word	0x20012ee0

080123b4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80123b4:	4770      	bx	lr

080123b6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80123b6:	4770      	bx	lr

080123b8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80123b8:	b510      	push	{r4, lr}
 80123ba:	213c      	movs	r1, #60	; 0x3c
 80123bc:	4604      	mov	r4, r0
 80123be:	f016 fe3e 	bl	802903e <_ZdlPvj>
 80123c2:	4620      	mov	r0, r4
 80123c4:	bd10      	pop	{r4, pc}

080123c6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80123c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123ca:	461c      	mov	r4, r3
 80123cc:	4606      	mov	r6, r0
 80123ce:	9f06      	ldr	r7, [sp, #24]
 80123d0:	f7ff febf 	bl	8012152 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80123d4:	8823      	ldrh	r3, [r4, #0]
 80123d6:	86b3      	strh	r3, [r6, #52]	; 0x34
 80123d8:	883b      	ldrh	r3, [r7, #0]
 80123da:	86f3      	strh	r3, [r6, #54]	; 0x36
 80123dc:	4638      	mov	r0, r7
 80123de:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80123e2:	f006 f9c7 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80123e6:	f04f 0802 	mov.w	r8, #2
 80123ea:	fb95 f5f8 	sdiv	r5, r5, r8
 80123ee:	b2ad      	uxth	r5, r5
 80123f0:	fb90 f0f8 	sdiv	r0, r0, r8
 80123f4:	1a2d      	subs	r5, r5, r0
 80123f6:	8735      	strh	r5, [r6, #56]	; 0x38
 80123f8:	4638      	mov	r0, r7
 80123fa:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80123fe:	fb94 f4f8 	sdiv	r4, r4, r8
 8012402:	f006 f9eb 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012406:	b2a4      	uxth	r4, r4
 8012408:	fb90 f0f8 	sdiv	r0, r0, r8
 801240c:	1a24      	subs	r4, r4, r0
 801240e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8012410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012414 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012414:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012418:	4604      	mov	r4, r0
 801241a:	b08c      	sub	sp, #48	; 0x30
 801241c:	460d      	mov	r5, r1
 801241e:	f7ff fedb 	bl	80121d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012422:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012426:	2b00      	cmp	r3, #0
 8012428:	d05d      	beq.n	80124e6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801242a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801242c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012430:	a805      	add	r0, sp, #20
 8012432:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8012436:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801243a:	f006 f99b 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801243e:	4606      	mov	r6, r0
 8012440:	a805      	add	r0, sp, #20
 8012442:	f006 f9cb 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012446:	6869      	ldr	r1, [r5, #4]
 8012448:	f8ad 001e 	strh.w	r0, [sp, #30]
 801244c:	6828      	ldr	r0, [r5, #0]
 801244e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012452:	ab08      	add	r3, sp, #32
 8012454:	ad08      	add	r5, sp, #32
 8012456:	c303      	stmia	r3!, {r0, r1}
 8012458:	a906      	add	r1, sp, #24
 801245a:	4628      	mov	r0, r5
 801245c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012460:	f8ad 601c 	strh.w	r6, [sp, #28]
 8012464:	f7fd fc62 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 8012468:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801246c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012470:	429a      	cmp	r2, r3
 8012472:	d035      	beq.n	80124e0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012474:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012478:	2b00      	cmp	r3, #0
 801247a:	dd31      	ble.n	80124e0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801247c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8012480:	2b00      	cmp	r3, #0
 8012482:	dd2d      	ble.n	80124e0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012484:	2300      	movs	r3, #0
 8012486:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801248a:	6823      	ldr	r3, [r4, #0]
 801248c:	a90a      	add	r1, sp, #40	; 0x28
 801248e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012490:	4620      	mov	r0, r4
 8012492:	4798      	blx	r3
 8012494:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012498:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801249a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801249e:	1a9b      	subs	r3, r3, r2
 80124a0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80124a4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80124a6:	1ac9      	subs	r1, r1, r3
 80124a8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80124ac:	490f      	ldr	r1, [pc, #60]	; (80124ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80124ae:	6809      	ldr	r1, [r1, #0]
 80124b0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80124b4:	b108      	cbz	r0, 80124ba <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80124b6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80124b8:	b900      	cbnz	r0, 80124bc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80124ba:	6888      	ldr	r0, [r1, #8]
 80124bc:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80124c0:	440b      	add	r3, r1
 80124c2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80124c6:	2601      	movs	r6, #1
 80124c8:	440a      	add	r2, r1
 80124ca:	6801      	ldr	r1, [r0, #0]
 80124cc:	9602      	str	r6, [sp, #8]
 80124ce:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80124d2:	e9cd 5400 	strd	r5, r4, [sp]
 80124d6:	b21b      	sxth	r3, r3
 80124d8:	688c      	ldr	r4, [r1, #8]
 80124da:	b212      	sxth	r2, r2
 80124dc:	a905      	add	r1, sp, #20
 80124de:	47a0      	blx	r4
 80124e0:	b00c      	add	sp, #48	; 0x30
 80124e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124e6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80124e8:	e7a0      	b.n	801242c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80124ea:	bf00      	nop
 80124ec:	20012e7c 	.word	0x20012e7c

080124f0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80124f0:	b510      	push	{r4, lr}
 80124f2:	2101      	movs	r1, #1
 80124f4:	2200      	movs	r2, #0
 80124f6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80124fa:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80124fe:	4c0e      	ldr	r4, [pc, #56]	; (8012538 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8012500:	8082      	strh	r2, [r0, #4]
 8012502:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012506:	80c2      	strh	r2, [r0, #6]
 8012508:	8102      	strh	r2, [r0, #8]
 801250a:	8142      	strh	r2, [r0, #10]
 801250c:	8182      	strh	r2, [r0, #12]
 801250e:	81c2      	strh	r2, [r0, #14]
 8012510:	8202      	strh	r2, [r0, #16]
 8012512:	8242      	strh	r2, [r0, #18]
 8012514:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012518:	61c2      	str	r2, [r0, #28]
 801251a:	8402      	strh	r2, [r0, #32]
 801251c:	8442      	strh	r2, [r0, #34]	; 0x22
 801251e:	6282      	str	r2, [r0, #40]	; 0x28
 8012520:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012524:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012526:	8601      	strh	r1, [r0, #48]	; 0x30
 8012528:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801252c:	6004      	str	r4, [r0, #0]
 801252e:	8681      	strh	r1, [r0, #52]	; 0x34
 8012530:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012532:	8702      	strh	r2, [r0, #56]	; 0x38
 8012534:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012536:	bd10      	pop	{r4, pc}
 8012538:	0802e2a8 	.word	0x0802e2a8

0801253c <_ZN8touchgfx5ImageD1Ev>:
 801253c:	4770      	bx	lr

0801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801253e:	b570      	push	{r4, r5, r6, lr}
 8012540:	880b      	ldrh	r3, [r1, #0]
 8012542:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012544:	4604      	mov	r4, r0
 8012546:	4608      	mov	r0, r1
 8012548:	460d      	mov	r5, r1
 801254a:	f006 f913 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801254e:	4606      	mov	r6, r0
 8012550:	4628      	mov	r0, r5
 8012552:	f006 f943 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012556:	6823      	ldr	r3, [r4, #0]
 8012558:	4605      	mov	r5, r0
 801255a:	4631      	mov	r1, r6
 801255c:	4620      	mov	r0, r4
 801255e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012560:	4798      	blx	r3
 8012562:	6823      	ldr	r3, [r4, #0]
 8012564:	4629      	mov	r1, r5
 8012566:	4620      	mov	r0, r4
 8012568:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801256a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801256e:	4718      	bx	r3

08012570 <_ZN8touchgfx5ImageD0Ev>:
 8012570:	b510      	push	{r4, lr}
 8012572:	212c      	movs	r1, #44	; 0x2c
 8012574:	4604      	mov	r4, r0
 8012576:	f016 fd62 	bl	802903e <_ZdlPvj>
 801257a:	4620      	mov	r0, r4
 801257c:	bd10      	pop	{r4, pc}

0801257e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801257e:	b510      	push	{r4, lr}
 8012580:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8012584:	2bff      	cmp	r3, #255	; 0xff
 8012586:	4604      	mov	r4, r0
 8012588:	d006      	beq.n	8012598 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801258a:	2300      	movs	r3, #0
 801258c:	8003      	strh	r3, [r0, #0]
 801258e:	8043      	strh	r3, [r0, #2]
 8012590:	8083      	strh	r3, [r0, #4]
 8012592:	80c3      	strh	r3, [r0, #6]
 8012594:	4620      	mov	r0, r4
 8012596:	bd10      	pop	{r4, pc}
 8012598:	3126      	adds	r1, #38	; 0x26
 801259a:	f006 f953 	bl	8018844 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801259e:	e7f9      	b.n	8012594 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080125a0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80125a0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80125a4:	b12a      	cbz	r2, 80125b2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80125a6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80125aa:	b112      	cbz	r2, 80125b2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80125ac:	6803      	ldr	r3, [r0, #0]
 80125ae:	695b      	ldr	r3, [r3, #20]
 80125b0:	4718      	bx	r3
 80125b2:	4770      	bx	lr

080125b4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80125b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125b8:	4604      	mov	r4, r0
 80125ba:	b088      	sub	sp, #32
 80125bc:	f854 3b26 	ldr.w	r3, [r4], #38
 80125c0:	2500      	movs	r5, #0
 80125c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80125c4:	460f      	mov	r7, r1
 80125c6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80125ca:	a904      	add	r1, sp, #16
 80125cc:	4606      	mov	r6, r0
 80125ce:	4798      	blx	r3
 80125d0:	4620      	mov	r0, r4
 80125d2:	f006 f8cf 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80125d6:	4680      	mov	r8, r0
 80125d8:	4620      	mov	r0, r4
 80125da:	f006 f8ff 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80125de:	9506      	str	r5, [sp, #24]
 80125e0:	ad06      	add	r5, sp, #24
 80125e2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80125e6:	4639      	mov	r1, r7
 80125e8:	4628      	mov	r0, r5
 80125ea:	f8ad 801c 	strh.w	r8, [sp, #28]
 80125ee:	f7fd fb9d 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 80125f2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80125f6:	2b00      	cmp	r3, #0
 80125f8:	dd19      	ble.n	801262e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80125fa:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80125fe:	2b00      	cmp	r3, #0
 8012600:	dd15      	ble.n	801262e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012602:	4b0c      	ldr	r3, [pc, #48]	; (8012634 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012604:	681b      	ldr	r3, [r3, #0]
 8012606:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801260a:	b10a      	cbz	r2, 8012610 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801260c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801260e:	b900      	cbnz	r0, 8012612 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012610:	6898      	ldr	r0, [r3, #8]
 8012612:	6801      	ldr	r1, [r0, #0]
 8012614:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012618:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801261c:	2701      	movs	r7, #1
 801261e:	9702      	str	r7, [sp, #8]
 8012620:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012624:	e9cd 5600 	strd	r5, r6, [sp]
 8012628:	688d      	ldr	r5, [r1, #8]
 801262a:	4621      	mov	r1, r4
 801262c:	47a8      	blx	r5
 801262e:	b008      	add	sp, #32
 8012630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012634:	20012e7c 	.word	0x20012e7c

08012638 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012638:	4770      	bx	lr

0801263a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801263a:	b510      	push	{r4, lr}
 801263c:	2148      	movs	r1, #72	; 0x48
 801263e:	4604      	mov	r4, r0
 8012640:	f016 fcfd 	bl	802903e <_ZdlPvj>
 8012644:	4620      	mov	r0, r4
 8012646:	bd10      	pop	{r4, pc}

08012648 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012648:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801264c:	b08d      	sub	sp, #52	; 0x34
 801264e:	4604      	mov	r4, r0
 8012650:	460f      	mov	r7, r1
 8012652:	f7ff fdc1 	bl	80121d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012656:	4a55      	ldr	r2, [pc, #340]	; (80127ac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012658:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801265a:	8812      	ldrh	r2, [r2, #0]
 801265c:	429a      	cmp	r2, r3
 801265e:	f240 8082 	bls.w	8012766 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012662:	4d53      	ldr	r5, [pc, #332]	; (80127b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8012664:	682a      	ldr	r2, [r5, #0]
 8012666:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801266a:	4b52      	ldr	r3, [pc, #328]	; (80127b4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801266c:	681b      	ldr	r3, [r3, #0]
 801266e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012672:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8012676:	2200      	movs	r2, #0
 8012678:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801267c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8012680:	2a03      	cmp	r2, #3
 8012682:	d811      	bhi.n	80126a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012684:	e8df f002 	tbb	[pc, r2]
 8012688:	89727902 	.word	0x89727902
 801268c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012690:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012694:	1ad2      	subs	r2, r2, r3
 8012696:	2002      	movs	r0, #2
 8012698:	f8ad 1010 	strh.w	r1, [sp, #16]
 801269c:	fb92 f2f0 	sdiv	r2, r2, r0
 80126a0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80126a4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80126a8:	f10d 080c 	add.w	r8, sp, #12
 80126ac:	e898 0003 	ldmia.w	r8, {r0, r1}
 80126b0:	f10d 0914 	add.w	r9, sp, #20
 80126b4:	e889 0003 	stmia.w	r9, {r0, r1}
 80126b8:	4639      	mov	r1, r7
 80126ba:	4648      	mov	r0, r9
 80126bc:	f7fd fb36 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 80126c0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80126c4:	2b00      	cmp	r3, #0
 80126c6:	dd4e      	ble.n	8012766 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80126c8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80126cc:	2b00      	cmp	r3, #0
 80126ce:	dd4a      	ble.n	8012766 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80126d0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80126d4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80126d8:	1a9b      	subs	r3, r3, r2
 80126da:	f8ad 3014 	strh.w	r3, [sp, #20]
 80126de:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80126e2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80126e6:	1a9b      	subs	r3, r3, r2
 80126e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80126ec:	6823      	ldr	r3, [r4, #0]
 80126ee:	4641      	mov	r1, r8
 80126f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80126f2:	4620      	mov	r0, r4
 80126f4:	4798      	blx	r3
 80126f6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80126fa:	2b00      	cmp	r3, #0
 80126fc:	d053      	beq.n	80127a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80126fe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012700:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012702:	682b      	ldr	r3, [r5, #0]
 8012704:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012708:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801270c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012710:	785b      	ldrb	r3, [r3, #1]
 8012712:	9209      	str	r2, [sp, #36]	; 0x24
 8012714:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012718:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801271c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012720:	2300      	movs	r3, #0
 8012722:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012726:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801272a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801272e:	4b22      	ldr	r3, [pc, #136]	; (80127b8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012730:	9607      	str	r6, [sp, #28]
 8012732:	681b      	ldr	r3, [r3, #0]
 8012734:	f88d 5020 	strb.w	r5, [sp, #32]
 8012738:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801273c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012740:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012744:	b10a      	cbz	r2, 801274a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012746:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012748:	b904      	cbnz	r4, 801274c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801274a:	689c      	ldr	r4, [r3, #8]
 801274c:	4b1b      	ldr	r3, [pc, #108]	; (80127bc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801274e:	6818      	ldr	r0, [r3, #0]
 8012750:	f7f5 fc8e 	bl	8008070 <_ZNK8touchgfx5Texts7getTextEt>
 8012754:	ab07      	add	r3, sp, #28
 8012756:	9001      	str	r0, [sp, #4]
 8012758:	9300      	str	r3, [sp, #0]
 801275a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801275e:	464b      	mov	r3, r9
 8012760:	4620      	mov	r0, r4
 8012762:	f7f5 fc37 	bl	8007fd4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012766:	b00d      	add	sp, #52	; 0x34
 8012768:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801276c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012770:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012774:	1ad2      	subs	r2, r2, r3
 8012776:	3201      	adds	r2, #1
 8012778:	e78d      	b.n	8012696 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801277a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801277e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012782:	1ad2      	subs	r2, r2, r3
 8012784:	3201      	adds	r2, #1
 8012786:	2002      	movs	r0, #2
 8012788:	f8ad 3010 	strh.w	r3, [sp, #16]
 801278c:	fb92 f2f0 	sdiv	r2, r2, r0
 8012790:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012794:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012798:	e786      	b.n	80126a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801279a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801279e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80127a2:	1ad2      	subs	r2, r2, r3
 80127a4:	e7ef      	b.n	8012786 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80127a6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80127a8:	e7aa      	b.n	8012700 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80127aa:	bf00      	nop
 80127ac:	20012ed8 	.word	0x20012ed8
 80127b0:	20012ed4 	.word	0x20012ed4
 80127b4:	20012edc 	.word	0x20012edc
 80127b8:	20012e7c 	.word	0x20012e7c
 80127bc:	20012ee0 	.word	0x20012ee0

080127c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80127c0:	b510      	push	{r4, lr}
 80127c2:	2101      	movs	r1, #1
 80127c4:	4c13      	ldr	r4, [pc, #76]	; (8012814 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80127c6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80127ca:	2200      	movs	r2, #0
 80127cc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80127d0:	6004      	str	r4, [r0, #0]
 80127d2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80127d6:	4c10      	ldr	r4, [pc, #64]	; (8012818 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80127d8:	8082      	strh	r2, [r0, #4]
 80127da:	80c2      	strh	r2, [r0, #6]
 80127dc:	8102      	strh	r2, [r0, #8]
 80127de:	8142      	strh	r2, [r0, #10]
 80127e0:	8182      	strh	r2, [r0, #12]
 80127e2:	81c2      	strh	r2, [r0, #14]
 80127e4:	8202      	strh	r2, [r0, #16]
 80127e6:	8242      	strh	r2, [r0, #18]
 80127e8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80127ec:	61c2      	str	r2, [r0, #28]
 80127ee:	8402      	strh	r2, [r0, #32]
 80127f0:	8442      	strh	r2, [r0, #34]	; 0x22
 80127f2:	6282      	str	r2, [r0, #40]	; 0x28
 80127f4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80127f8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80127fa:	8601      	strh	r1, [r0, #48]	; 0x30
 80127fc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012800:	6344      	str	r4, [r0, #52]	; 0x34
 8012802:	8701      	strh	r1, [r0, #56]	; 0x38
 8012804:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012808:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801280c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012810:	bd10      	pop	{r4, pc}
 8012812:	bf00      	nop
 8012814:	0802e38c 	.word	0x0802e38c
 8012818:	0802b808 	.word	0x0802b808

0801281c <_ZN8touchgfx7OutlineD1Ev>:
 801281c:	4770      	bx	lr

0801281e <_ZN8touchgfx7OutlineD0Ev>:
 801281e:	b510      	push	{r4, lr}
 8012820:	2130      	movs	r1, #48	; 0x30
 8012822:	4604      	mov	r4, r0
 8012824:	f016 fc0b 	bl	802903e <_ZdlPvj>
 8012828:	4620      	mov	r0, r4
 801282a:	bd10      	pop	{r4, pc}

0801282c <_ZN8touchgfx7Outline5resetEv>:
 801282c:	b510      	push	{r4, lr}
 801282e:	4604      	mov	r4, r0
 8012830:	f000 fe96 	bl	8013560 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012834:	60e0      	str	r0, [r4, #12]
 8012836:	f000 fe99 	bl	801356c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801283a:	68e3      	ldr	r3, [r4, #12]
 801283c:	6123      	str	r3, [r4, #16]
 801283e:	08c0      	lsrs	r0, r0, #3
 8012840:	2200      	movs	r2, #0
 8012842:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012846:	3801      	subs	r0, #1
 8012848:	6060      	str	r0, [r4, #4]
 801284a:	60a2      	str	r2, [r4, #8]
 801284c:	8019      	strh	r1, [r3, #0]
 801284e:	8059      	strh	r1, [r3, #2]
 8012850:	809a      	strh	r2, [r3, #4]
 8012852:	80da      	strh	r2, [r3, #6]
 8012854:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012856:	f023 0301 	bic.w	r3, r3, #1
 801285a:	f043 0302 	orr.w	r3, r3, #2
 801285e:	6263      	str	r3, [r4, #36]	; 0x24
 8012860:	bd10      	pop	{r4, pc}
	...

08012864 <_ZN8touchgfx7OutlineC1Ev>:
 8012864:	b510      	push	{r4, lr}
 8012866:	4b0a      	ldr	r3, [pc, #40]	; (8012890 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8012868:	6003      	str	r3, [r0, #0]
 801286a:	2300      	movs	r3, #0
 801286c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8012870:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012874:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012878:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801287c:	6243      	str	r3, [r0, #36]	; 0x24
 801287e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8012882:	4604      	mov	r4, r0
 8012884:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8012888:	f7ff ffd0 	bl	801282c <_ZN8touchgfx7Outline5resetEv>
 801288c:	4620      	mov	r0, r4
 801288e:	bd10      	pop	{r4, pc}
 8012890:	0802e400 	.word	0x0802e400

08012894 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012898:	b093      	sub	sp, #76	; 0x4c
 801289a:	1156      	asrs	r6, r2, #5
 801289c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801289e:	9305      	str	r3, [sp, #20]
 80128a0:	f004 051f 	and.w	r5, r4, #31
 80128a4:	1153      	asrs	r3, r2, #5
 80128a6:	9504      	str	r5, [sp, #16]
 80128a8:	1165      	asrs	r5, r4, #5
 80128aa:	9303      	str	r3, [sp, #12]
 80128ac:	42ae      	cmp	r6, r5
 80128ae:	ea4f 1364 	mov.w	r3, r4, asr #5
 80128b2:	9306      	str	r3, [sp, #24]
 80128b4:	f002 031f 	and.w	r3, r2, #31
 80128b8:	f040 80f8 	bne.w	8012aac <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80128bc:	9c04      	ldr	r4, [sp, #16]
 80128be:	9a05      	ldr	r2, [sp, #20]
 80128c0:	42a3      	cmp	r3, r4
 80128c2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80128c6:	6902      	ldr	r2, [r0, #16]
 80128c8:	d125      	bne.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80128ca:	f9b2 3000 	ldrsh.w	r3, [r2]
 80128ce:	459e      	cmp	lr, r3
 80128d0:	d103      	bne.n	80128da <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80128d2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80128d6:	429e      	cmp	r6, r3
 80128d8:	d035      	beq.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80128da:	88d1      	ldrh	r1, [r2, #6]
 80128dc:	8893      	ldrh	r3, [r2, #4]
 80128de:	430b      	orrs	r3, r1
 80128e0:	d010      	beq.n	8012904 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80128e2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80128e6:	2b00      	cmp	r3, #0
 80128e8:	db0c      	blt.n	8012904 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80128ea:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80128ec:	428b      	cmp	r3, r1
 80128ee:	da09      	bge.n	8012904 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80128f0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80128f4:	428b      	cmp	r3, r1
 80128f6:	bf38      	it	cc
 80128f8:	3208      	addcc	r2, #8
 80128fa:	f103 0301 	add.w	r3, r3, #1
 80128fe:	bf38      	it	cc
 8012900:	6102      	strcc	r2, [r0, #16]
 8012902:	6083      	str	r3, [r0, #8]
 8012904:	6903      	ldr	r3, [r0, #16]
 8012906:	9a03      	ldr	r2, [sp, #12]
 8012908:	f8a3 e000 	strh.w	lr, [r3]
 801290c:	805a      	strh	r2, [r3, #2]
 801290e:	2200      	movs	r2, #0
 8012910:	809a      	strh	r2, [r3, #4]
 8012912:	80da      	strh	r2, [r3, #6]
 8012914:	e017      	b.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012916:	9c05      	ldr	r4, [sp, #20]
 8012918:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801291c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012920:	f004 041f 	and.w	r4, r4, #31
 8012924:	114e      	asrs	r6, r1, #5
 8012926:	9402      	str	r4, [sp, #8]
 8012928:	9c04      	ldr	r4, [sp, #16]
 801292a:	4576      	cmp	r6, lr
 801292c:	f001 0c1f 	and.w	ip, r1, #31
 8012930:	eba4 0403 	sub.w	r4, r4, r3
 8012934:	d10a      	bne.n	801294c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012936:	9b02      	ldr	r3, [sp, #8]
 8012938:	449c      	add	ip, r3
 801293a:	44a0      	add	r8, r4
 801293c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012940:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012944:	80d4      	strh	r4, [r2, #6]
 8012946:	b013      	add	sp, #76	; 0x4c
 8012948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801294c:	9d05      	ldr	r5, [sp, #20]
 801294e:	1a69      	subs	r1, r5, r1
 8012950:	bf5b      	ittet	pl
 8012952:	f1cc 0520 	rsbpl	r5, ip, #32
 8012956:	436c      	mulpl	r4, r5
 8012958:	2500      	movmi	r5, #0
 801295a:	2520      	movpl	r5, #32
 801295c:	bf44      	itt	mi
 801295e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012962:	4249      	negmi	r1, r1
 8012964:	9501      	str	r5, [sp, #4]
 8012966:	9f01      	ldr	r7, [sp, #4]
 8012968:	fb94 f5f1 	sdiv	r5, r4, r1
 801296c:	fb01 4415 	mls	r4, r1, r5, r4
 8012970:	bf54      	ite	pl
 8012972:	f04f 0901 	movpl.w	r9, #1
 8012976:	f04f 39ff 	movmi.w	r9, #4294967295
 801297a:	2c00      	cmp	r4, #0
 801297c:	bfb8      	it	lt
 801297e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012982:	44bc      	add	ip, r7
 8012984:	44a8      	add	r8, r5
 8012986:	fb05 ac0c 	mla	ip, r5, ip, sl
 801298a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801298e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012992:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012996:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801299a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801299e:	bfb8      	it	lt
 80129a0:	1864      	addlt	r4, r4, r1
 80129a2:	ea58 0202 	orrs.w	r2, r8, r2
 80129a6:	444e      	add	r6, r9
 80129a8:	d011      	beq.n	80129ce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80129aa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80129ae:	f1b8 0f00 	cmp.w	r8, #0
 80129b2:	db0c      	blt.n	80129ce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80129b4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80129b6:	4590      	cmp	r8, r2
 80129b8:	da09      	bge.n	80129ce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80129ba:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80129be:	4590      	cmp	r8, r2
 80129c0:	bf3c      	itt	cc
 80129c2:	f10c 0208 	addcc.w	r2, ip, #8
 80129c6:	6102      	strcc	r2, [r0, #16]
 80129c8:	f108 0201 	add.w	r2, r8, #1
 80129cc:	6082      	str	r2, [r0, #8]
 80129ce:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80129d2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80129d6:	f8ac 6000 	strh.w	r6, [ip]
 80129da:	2700      	movs	r7, #0
 80129dc:	45b6      	cmp	lr, r6
 80129de:	f8ac 2002 	strh.w	r2, [ip, #2]
 80129e2:	f8ac 7004 	strh.w	r7, [ip, #4]
 80129e6:	f8ac 7006 	strh.w	r7, [ip, #6]
 80129ea:	442b      	add	r3, r5
 80129ec:	d04d      	beq.n	8012a8a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80129ee:	9f04      	ldr	r7, [sp, #16]
 80129f0:	1aff      	subs	r7, r7, r3
 80129f2:	443d      	add	r5, r7
 80129f4:	016d      	lsls	r5, r5, #5
 80129f6:	fb95 f8f1 	sdiv	r8, r5, r1
 80129fa:	fb01 5518 	mls	r5, r1, r8, r5
 80129fe:	2d00      	cmp	r5, #0
 8012a00:	bfb8      	it	lt
 8012a02:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012a06:	f108 0701 	add.w	r7, r8, #1
 8012a0a:	bfb8      	it	lt
 8012a0c:	186d      	addlt	r5, r5, r1
 8012a0e:	1a64      	subs	r4, r4, r1
 8012a10:	9703      	str	r7, [sp, #12]
 8012a12:	f04f 0a00 	mov.w	sl, #0
 8012a16:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012a1a:	1964      	adds	r4, r4, r5
 8012a1c:	bf58      	it	pl
 8012a1e:	9f03      	ldrpl	r7, [sp, #12]
 8012a20:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012a24:	bf48      	it	mi
 8012a26:	4647      	movmi	r7, r8
 8012a28:	44bb      	add	fp, r7
 8012a2a:	f8ac b004 	strh.w	fp, [ip, #4]
 8012a2e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012a32:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012a36:	f8ac b006 	strh.w	fp, [ip, #6]
 8012a3a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012a3e:	443b      	add	r3, r7
 8012a40:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012a44:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012a48:	bf58      	it	pl
 8012a4a:	1a64      	subpl	r4, r4, r1
 8012a4c:	ea5b 0707 	orrs.w	r7, fp, r7
 8012a50:	444e      	add	r6, r9
 8012a52:	d011      	beq.n	8012a78 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012a54:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012a58:	f1bb 0f00 	cmp.w	fp, #0
 8012a5c:	db0c      	blt.n	8012a78 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012a5e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012a60:	45bb      	cmp	fp, r7
 8012a62:	da09      	bge.n	8012a78 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012a64:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012a68:	45bb      	cmp	fp, r7
 8012a6a:	bf3c      	itt	cc
 8012a6c:	f10c 0708 	addcc.w	r7, ip, #8
 8012a70:	6107      	strcc	r7, [r0, #16]
 8012a72:	f10b 0701 	add.w	r7, fp, #1
 8012a76:	6087      	str	r7, [r0, #8]
 8012a78:	6907      	ldr	r7, [r0, #16]
 8012a7a:	45b6      	cmp	lr, r6
 8012a7c:	803e      	strh	r6, [r7, #0]
 8012a7e:	807a      	strh	r2, [r7, #2]
 8012a80:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012a84:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012a88:	d1c5      	bne.n	8012a16 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8012a8a:	9a04      	ldr	r2, [sp, #16]
 8012a8c:	1ad3      	subs	r3, r2, r3
 8012a8e:	6902      	ldr	r2, [r0, #16]
 8012a90:	8891      	ldrh	r1, [r2, #4]
 8012a92:	88d6      	ldrh	r6, [r2, #6]
 8012a94:	4419      	add	r1, r3
 8012a96:	8091      	strh	r1, [r2, #4]
 8012a98:	9902      	ldr	r1, [sp, #8]
 8012a9a:	f101 0c20 	add.w	ip, r1, #32
 8012a9e:	9901      	ldr	r1, [sp, #4]
 8012aa0:	ebac 0c01 	sub.w	ip, ip, r1
 8012aa4:	fb03 630c 	mla	r3, r3, ip, r6
 8012aa8:	80d3      	strh	r3, [r2, #6]
 8012aaa:	e74c      	b.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012aac:	9d05      	ldr	r5, [sp, #20]
 8012aae:	1aa2      	subs	r2, r4, r2
 8012ab0:	eba5 0501 	sub.w	r5, r5, r1
 8012ab4:	9508      	str	r5, [sp, #32]
 8012ab6:	9202      	str	r2, [sp, #8]
 8012ab8:	f140 8128 	bpl.w	8012d0c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012abc:	9a03      	ldr	r2, [sp, #12]
 8012abe:	2a00      	cmp	r2, #0
 8012ac0:	f6ff af41 	blt.w	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012ac4:	9a02      	ldr	r2, [sp, #8]
 8012ac6:	4252      	negs	r2, r2
 8012ac8:	9202      	str	r2, [sp, #8]
 8012aca:	9a06      	ldr	r2, [sp, #24]
 8012acc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012ad0:	f04f 34ff 	mov.w	r4, #4294967295
 8012ad4:	9206      	str	r2, [sp, #24]
 8012ad6:	462a      	mov	r2, r5
 8012ad8:	940b      	str	r4, [sp, #44]	; 0x2c
 8012ada:	435a      	muls	r2, r3
 8012adc:	2400      	movs	r4, #0
 8012ade:	9d02      	ldr	r5, [sp, #8]
 8012ae0:	9401      	str	r4, [sp, #4]
 8012ae2:	9c02      	ldr	r4, [sp, #8]
 8012ae4:	fb92 f4f4 	sdiv	r4, r2, r4
 8012ae8:	fb05 2214 	mls	r2, r5, r4, r2
 8012aec:	2a00      	cmp	r2, #0
 8012aee:	9207      	str	r2, [sp, #28]
 8012af0:	bfbc      	itt	lt
 8012af2:	1952      	addlt	r2, r2, r5
 8012af4:	9207      	strlt	r2, [sp, #28]
 8012af6:	9a01      	ldr	r2, [sp, #4]
 8012af8:	6905      	ldr	r5, [r0, #16]
 8012afa:	bfb8      	it	lt
 8012afc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012b00:	eb04 0901 	add.w	r9, r4, r1
 8012b04:	429a      	cmp	r2, r3
 8012b06:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012b0a:	f040 8112 	bne.w	8012d32 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012b0e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012b12:	429e      	cmp	r6, r3
 8012b14:	d104      	bne.n	8012b20 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012b16:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012b1a:	9a03      	ldr	r2, [sp, #12]
 8012b1c:	429a      	cmp	r2, r3
 8012b1e:	d01b      	beq.n	8012b58 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012b20:	88ea      	ldrh	r2, [r5, #6]
 8012b22:	88ab      	ldrh	r3, [r5, #4]
 8012b24:	4313      	orrs	r3, r2
 8012b26:	d010      	beq.n	8012b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012b28:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012b2c:	2a00      	cmp	r2, #0
 8012b2e:	db0c      	blt.n	8012b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012b30:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012b32:	429a      	cmp	r2, r3
 8012b34:	da09      	bge.n	8012b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012b36:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8012b3a:	429a      	cmp	r2, r3
 8012b3c:	bf38      	it	cc
 8012b3e:	3508      	addcc	r5, #8
 8012b40:	f102 0201 	add.w	r2, r2, #1
 8012b44:	bf38      	it	cc
 8012b46:	6105      	strcc	r5, [r0, #16]
 8012b48:	6082      	str	r2, [r0, #8]
 8012b4a:	6903      	ldr	r3, [r0, #16]
 8012b4c:	9a03      	ldr	r2, [sp, #12]
 8012b4e:	805a      	strh	r2, [r3, #2]
 8012b50:	2200      	movs	r2, #0
 8012b52:	801e      	strh	r6, [r3, #0]
 8012b54:	809a      	strh	r2, [r3, #4]
 8012b56:	80da      	strh	r2, [r3, #6]
 8012b58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012b5a:	9a03      	ldr	r2, [sp, #12]
 8012b5c:	6901      	ldr	r1, [r0, #16]
 8012b5e:	441a      	add	r2, r3
 8012b60:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012b64:	42b3      	cmp	r3, r6
 8012b66:	d103      	bne.n	8012b70 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012b68:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012b6c:	429a      	cmp	r2, r3
 8012b6e:	d01a      	beq.n	8012ba6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012b70:	88cc      	ldrh	r4, [r1, #6]
 8012b72:	888b      	ldrh	r3, [r1, #4]
 8012b74:	4323      	orrs	r3, r4
 8012b76:	d010      	beq.n	8012b9a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012b78:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012b7c:	2c00      	cmp	r4, #0
 8012b7e:	db0c      	blt.n	8012b9a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012b80:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012b82:	429c      	cmp	r4, r3
 8012b84:	da09      	bge.n	8012b9a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012b86:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012b8a:	429c      	cmp	r4, r3
 8012b8c:	bf38      	it	cc
 8012b8e:	3108      	addcc	r1, #8
 8012b90:	f104 0401 	add.w	r4, r4, #1
 8012b94:	bf38      	it	cc
 8012b96:	6101      	strcc	r1, [r0, #16]
 8012b98:	6084      	str	r4, [r0, #8]
 8012b9a:	6903      	ldr	r3, [r0, #16]
 8012b9c:	2100      	movs	r1, #0
 8012b9e:	801e      	strh	r6, [r3, #0]
 8012ba0:	805a      	strh	r2, [r3, #2]
 8012ba2:	8099      	strh	r1, [r3, #4]
 8012ba4:	80d9      	strh	r1, [r3, #6]
 8012ba6:	9b06      	ldr	r3, [sp, #24]
 8012ba8:	4293      	cmp	r3, r2
 8012baa:	f000 8082 	beq.w	8012cb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012bae:	9b08      	ldr	r3, [sp, #32]
 8012bb0:	9c02      	ldr	r4, [sp, #8]
 8012bb2:	9902      	ldr	r1, [sp, #8]
 8012bb4:	015b      	lsls	r3, r3, #5
 8012bb6:	fb93 f1f1 	sdiv	r1, r3, r1
 8012bba:	fb04 3311 	mls	r3, r4, r1, r3
 8012bbe:	2b00      	cmp	r3, #0
 8012bc0:	9103      	str	r1, [sp, #12]
 8012bc2:	9308      	str	r3, [sp, #32]
 8012bc4:	da04      	bge.n	8012bd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012bc6:	1e4b      	subs	r3, r1, #1
 8012bc8:	9303      	str	r3, [sp, #12]
 8012bca:	9b08      	ldr	r3, [sp, #32]
 8012bcc:	4423      	add	r3, r4
 8012bce:	9308      	str	r3, [sp, #32]
 8012bd0:	9b07      	ldr	r3, [sp, #28]
 8012bd2:	9902      	ldr	r1, [sp, #8]
 8012bd4:	1a5b      	subs	r3, r3, r1
 8012bd6:	9307      	str	r3, [sp, #28]
 8012bd8:	9b01      	ldr	r3, [sp, #4]
 8012bda:	f1c3 0320 	rsb	r3, r3, #32
 8012bde:	930e      	str	r3, [sp, #56]	; 0x38
 8012be0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012be2:	9b01      	ldr	r3, [sp, #4]
 8012be4:	1a5b      	subs	r3, r3, r1
 8012be6:	464f      	mov	r7, r9
 8012be8:	930a      	str	r3, [sp, #40]	; 0x28
 8012bea:	2600      	movs	r6, #0
 8012bec:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012bf0:	185b      	adds	r3, r3, r1
 8012bf2:	bf58      	it	pl
 8012bf4:	9902      	ldrpl	r1, [sp, #8]
 8012bf6:	9307      	str	r3, [sp, #28]
 8012bf8:	bf5d      	ittte	pl
 8012bfa:	1a5b      	subpl	r3, r3, r1
 8012bfc:	9307      	strpl	r3, [sp, #28]
 8012bfe:	9b03      	ldrpl	r3, [sp, #12]
 8012c00:	9903      	ldrmi	r1, [sp, #12]
 8012c02:	bf58      	it	pl
 8012c04:	1c59      	addpl	r1, r3, #1
 8012c06:	4489      	add	r9, r1
 8012c08:	2a00      	cmp	r2, #0
 8012c0a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8012c0e:	db2e      	blt.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012c10:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012c12:	4293      	cmp	r3, r2
 8012c14:	dd2b      	ble.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012c16:	9c01      	ldr	r4, [sp, #4]
 8012c18:	6905      	ldr	r5, [r0, #16]
 8012c1a:	46a0      	mov	r8, r4
 8012c1c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8012c1e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012c22:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012c26:	45a0      	cmp	r8, r4
 8012c28:	f040 814f 	bne.w	8012eca <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8012c2c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012c30:	4551      	cmp	r1, sl
 8012c32:	d103      	bne.n	8012c3c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012c34:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012c38:	4291      	cmp	r1, r2
 8012c3a:	d018      	beq.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012c3c:	ea5c 010e 	orrs.w	r1, ip, lr
 8012c40:	d00f      	beq.n	8012c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012c42:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012c46:	2900      	cmp	r1, #0
 8012c48:	db0b      	blt.n	8012c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012c4a:	428b      	cmp	r3, r1
 8012c4c:	dd09      	ble.n	8012c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012c4e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012c52:	4299      	cmp	r1, r3
 8012c54:	bf38      	it	cc
 8012c56:	3508      	addcc	r5, #8
 8012c58:	f101 0101 	add.w	r1, r1, #1
 8012c5c:	bf38      	it	cc
 8012c5e:	6105      	strcc	r5, [r0, #16]
 8012c60:	6081      	str	r1, [r0, #8]
 8012c62:	6903      	ldr	r3, [r0, #16]
 8012c64:	f8a3 a000 	strh.w	sl, [r3]
 8012c68:	805a      	strh	r2, [r3, #2]
 8012c6a:	809e      	strh	r6, [r3, #4]
 8012c6c:	80de      	strh	r6, [r3, #6]
 8012c6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012c70:	6901      	ldr	r1, [r0, #16]
 8012c72:	441a      	add	r2, r3
 8012c74:	88cc      	ldrh	r4, [r1, #6]
 8012c76:	888b      	ldrh	r3, [r1, #4]
 8012c78:	4323      	orrs	r3, r4
 8012c7a:	d010      	beq.n	8012c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012c7c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012c80:	2c00      	cmp	r4, #0
 8012c82:	db0c      	blt.n	8012c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012c84:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012c86:	429c      	cmp	r4, r3
 8012c88:	da09      	bge.n	8012c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012c8a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012c8e:	429c      	cmp	r4, r3
 8012c90:	bf38      	it	cc
 8012c92:	3108      	addcc	r1, #8
 8012c94:	f104 0401 	add.w	r4, r4, #1
 8012c98:	bf38      	it	cc
 8012c9a:	6101      	strcc	r1, [r0, #16]
 8012c9c:	6084      	str	r4, [r0, #8]
 8012c9e:	6903      	ldr	r3, [r0, #16]
 8012ca0:	f8a3 a000 	strh.w	sl, [r3]
 8012ca4:	805a      	strh	r2, [r3, #2]
 8012ca6:	809e      	strh	r6, [r3, #4]
 8012ca8:	80de      	strh	r6, [r3, #6]
 8012caa:	9b06      	ldr	r3, [sp, #24]
 8012cac:	4293      	cmp	r3, r2
 8012cae:	464f      	mov	r7, r9
 8012cb0:	d19c      	bne.n	8012bec <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012cb2:	9b01      	ldr	r3, [sp, #4]
 8012cb4:	6907      	ldr	r7, [r0, #16]
 8012cb6:	f1c3 0620 	rsb	r6, r3, #32
 8012cba:	9b05      	ldr	r3, [sp, #20]
 8012cbc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012cc0:	9b04      	ldr	r3, [sp, #16]
 8012cc2:	429e      	cmp	r6, r3
 8012cc4:	f040 81cc 	bne.w	8013060 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012cc8:	f9b7 3000 	ldrsh.w	r3, [r7]
 8012ccc:	459e      	cmp	lr, r3
 8012cce:	d104      	bne.n	8012cda <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012cd0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012cd4:	429a      	cmp	r2, r3
 8012cd6:	f43f ae36 	beq.w	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012cda:	88f9      	ldrh	r1, [r7, #6]
 8012cdc:	88bb      	ldrh	r3, [r7, #4]
 8012cde:	430b      	orrs	r3, r1
 8012ce0:	d010      	beq.n	8012d04 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012ce2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012ce6:	2b00      	cmp	r3, #0
 8012ce8:	db0c      	blt.n	8012d04 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012cea:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012cec:	428b      	cmp	r3, r1
 8012cee:	da09      	bge.n	8012d04 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012cf0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012cf4:	428b      	cmp	r3, r1
 8012cf6:	bf38      	it	cc
 8012cf8:	3708      	addcc	r7, #8
 8012cfa:	f103 0301 	add.w	r3, r3, #1
 8012cfe:	bf38      	it	cc
 8012d00:	6107      	strcc	r7, [r0, #16]
 8012d02:	6083      	str	r3, [r0, #8]
 8012d04:	6903      	ldr	r3, [r0, #16]
 8012d06:	f8a3 e000 	strh.w	lr, [r3]
 8012d0a:	e5ff      	b.n	801290c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8012d0c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012d0e:	9c03      	ldr	r4, [sp, #12]
 8012d10:	42a2      	cmp	r2, r4
 8012d12:	f6ff ae18 	blt.w	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012d16:	9c06      	ldr	r4, [sp, #24]
 8012d18:	42a2      	cmp	r2, r4
 8012d1a:	bfb8      	it	lt
 8012d1c:	3201      	addlt	r2, #1
 8012d1e:	9c08      	ldr	r4, [sp, #32]
 8012d20:	bfb8      	it	lt
 8012d22:	9206      	strlt	r2, [sp, #24]
 8012d24:	f1c3 0220 	rsb	r2, r3, #32
 8012d28:	4362      	muls	r2, r4
 8012d2a:	2401      	movs	r4, #1
 8012d2c:	940b      	str	r4, [sp, #44]	; 0x2c
 8012d2e:	2420      	movs	r4, #32
 8012d30:	e6d5      	b.n	8012ade <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012d32:	f009 021f 	and.w	r2, r9, #31
 8012d36:	ea4f 1861 	mov.w	r8, r1, asr #5
 8012d3a:	920c      	str	r2, [sp, #48]	; 0x30
 8012d3c:	9a01      	ldr	r2, [sp, #4]
 8012d3e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012d42:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012d46:	45b0      	cmp	r8, r6
 8012d48:	f001 011f 	and.w	r1, r1, #31
 8012d4c:	eba2 0203 	sub.w	r2, r2, r3
 8012d50:	d108      	bne.n	8012d64 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012d52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012d54:	4419      	add	r1, r3
 8012d56:	4496      	add	lr, r2
 8012d58:	fb02 a101 	mla	r1, r2, r1, sl
 8012d5c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012d60:	80e9      	strh	r1, [r5, #6]
 8012d62:	e6f9      	b.n	8012b58 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012d64:	2c00      	cmp	r4, #0
 8012d66:	f2c0 80a9 	blt.w	8012ebc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8012d6a:	2701      	movs	r7, #1
 8012d6c:	f1c1 0c20 	rsb	ip, r1, #32
 8012d70:	970a      	str	r7, [sp, #40]	; 0x28
 8012d72:	fb02 f20c 	mul.w	r2, r2, ip
 8012d76:	2720      	movs	r7, #32
 8012d78:	9709      	str	r7, [sp, #36]	; 0x24
 8012d7a:	fb92 fcf4 	sdiv	ip, r2, r4
 8012d7e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012d80:	fb04 221c 	mls	r2, r4, ip, r2
 8012d84:	2a00      	cmp	r2, #0
 8012d86:	bfb8      	it	lt
 8012d88:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012d8c:	4439      	add	r1, r7
 8012d8e:	fb0c a101 	mla	r1, ip, r1, sl
 8012d92:	80e9      	strh	r1, [r5, #6]
 8012d94:	44e6      	add	lr, ip
 8012d96:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012d98:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012d9c:	eb08 0501 	add.w	r5, r8, r1
 8012da0:	6901      	ldr	r1, [r0, #16]
 8012da2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012da6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8012daa:	bfb8      	it	lt
 8012dac:	1912      	addlt	r2, r2, r4
 8012dae:	ea58 070e 	orrs.w	r7, r8, lr
 8012db2:	d010      	beq.n	8012dd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012db4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012db8:	f1be 0f00 	cmp.w	lr, #0
 8012dbc:	db0b      	blt.n	8012dd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012dbe:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012dc0:	45be      	cmp	lr, r7
 8012dc2:	da08      	bge.n	8012dd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012dc4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012dc8:	45be      	cmp	lr, r7
 8012dca:	bf3c      	itt	cc
 8012dcc:	3108      	addcc	r1, #8
 8012dce:	6101      	strcc	r1, [r0, #16]
 8012dd0:	f10e 0101 	add.w	r1, lr, #1
 8012dd4:	6081      	str	r1, [r0, #8]
 8012dd6:	6901      	ldr	r1, [r0, #16]
 8012dd8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012ddc:	800d      	strh	r5, [r1, #0]
 8012dde:	f04f 0e00 	mov.w	lr, #0
 8012de2:	42ae      	cmp	r6, r5
 8012de4:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012de8:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012dec:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012df0:	4463      	add	r3, ip
 8012df2:	d054      	beq.n	8012e9e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012df4:	9901      	ldr	r1, [sp, #4]
 8012df6:	1ac9      	subs	r1, r1, r3
 8012df8:	4461      	add	r1, ip
 8012dfa:	0149      	lsls	r1, r1, #5
 8012dfc:	fb91 fef4 	sdiv	lr, r1, r4
 8012e00:	fb04 111e 	mls	r1, r4, lr, r1
 8012e04:	2900      	cmp	r1, #0
 8012e06:	bfb8      	it	lt
 8012e08:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012e0c:	f10e 0701 	add.w	r7, lr, #1
 8012e10:	bfb8      	it	lt
 8012e12:	1909      	addlt	r1, r1, r4
 8012e14:	1b12      	subs	r2, r2, r4
 8012e16:	970d      	str	r7, [sp, #52]	; 0x34
 8012e18:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012e1c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012e1e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012e22:	1852      	adds	r2, r2, r1
 8012e24:	bf54      	ite	pl
 8012e26:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8012e2a:	46f4      	movmi	ip, lr
 8012e2c:	44e3      	add	fp, ip
 8012e2e:	f8aa b004 	strh.w	fp, [sl, #4]
 8012e32:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012e36:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8012e3a:	f8aa b006 	strh.w	fp, [sl, #6]
 8012e3e:	4463      	add	r3, ip
 8012e40:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e44:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012e48:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012e4c:	bf58      	it	pl
 8012e4e:	1b12      	subpl	r2, r2, r4
 8012e50:	443d      	add	r5, r7
 8012e52:	ea5b 070a 	orrs.w	r7, fp, sl
 8012e56:	d014      	beq.n	8012e82 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012e58:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012e5c:	f1ba 0f00 	cmp.w	sl, #0
 8012e60:	db0f      	blt.n	8012e82 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012e62:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012e64:	45ba      	cmp	sl, r7
 8012e66:	da0c      	bge.n	8012e82 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012e68:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012e6c:	45ba      	cmp	sl, r7
 8012e6e:	bf38      	it	cc
 8012e70:	f10c 0c08 	addcc.w	ip, ip, #8
 8012e74:	f10a 0a01 	add.w	sl, sl, #1
 8012e78:	bf38      	it	cc
 8012e7a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012e7e:	f8c0 a008 	str.w	sl, [r0, #8]
 8012e82:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e86:	f04f 0700 	mov.w	r7, #0
 8012e8a:	42ae      	cmp	r6, r5
 8012e8c:	f8ac 5000 	strh.w	r5, [ip]
 8012e90:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012e94:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012e98:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012e9c:	d1bc      	bne.n	8012e18 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012e9e:	6904      	ldr	r4, [r0, #16]
 8012ea0:	9a01      	ldr	r2, [sp, #4]
 8012ea2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012ea4:	1ad3      	subs	r3, r2, r3
 8012ea6:	88a2      	ldrh	r2, [r4, #4]
 8012ea8:	441a      	add	r2, r3
 8012eaa:	80a2      	strh	r2, [r4, #4]
 8012eac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012eae:	3120      	adds	r1, #32
 8012eb0:	1a89      	subs	r1, r1, r2
 8012eb2:	88e2      	ldrh	r2, [r4, #6]
 8012eb4:	fb03 2301 	mla	r3, r3, r1, r2
 8012eb8:	80e3      	strh	r3, [r4, #6]
 8012eba:	e64d      	b.n	8012b58 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012ebc:	f04f 37ff 	mov.w	r7, #4294967295
 8012ec0:	970a      	str	r7, [sp, #40]	; 0x28
 8012ec2:	434a      	muls	r2, r1
 8012ec4:	4264      	negs	r4, r4
 8012ec6:	2700      	movs	r7, #0
 8012ec8:	e756      	b.n	8012d78 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012eca:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012ece:	f009 031f 	and.w	r3, r9, #31
 8012ed2:	45d0      	cmp	r8, sl
 8012ed4:	f007 071f 	and.w	r7, r7, #31
 8012ed8:	930f      	str	r3, [sp, #60]	; 0x3c
 8012eda:	fa1f fc8c 	uxth.w	ip, ip
 8012ede:	fa1f fe8e 	uxth.w	lr, lr
 8012ee2:	d10a      	bne.n	8012efa <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012ee4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012ee6:	449c      	add	ip, r3
 8012ee8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012eea:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012eee:	441f      	add	r7, r3
 8012ef0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012ef2:	fb03 e707 	mla	r7, r3, r7, lr
 8012ef6:	80ef      	strh	r7, [r5, #6]
 8012ef8:	e6b9      	b.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012efa:	2900      	cmp	r1, #0
 8012efc:	f2c0 80a8 	blt.w	8013050 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012f00:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012f02:	f1c7 0320 	rsb	r3, r7, #32
 8012f06:	4363      	muls	r3, r4
 8012f08:	2401      	movs	r4, #1
 8012f0a:	940d      	str	r4, [sp, #52]	; 0x34
 8012f0c:	2420      	movs	r4, #32
 8012f0e:	940c      	str	r4, [sp, #48]	; 0x30
 8012f10:	fb93 f4f1 	sdiv	r4, r3, r1
 8012f14:	fb01 3b14 	mls	fp, r1, r4, r3
 8012f18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012f1a:	f1bb 0f00 	cmp.w	fp, #0
 8012f1e:	bfb8      	it	lt
 8012f20:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012f24:	441f      	add	r7, r3
 8012f26:	fb04 e707 	mla	r7, r4, r7, lr
 8012f2a:	44a4      	add	ip, r4
 8012f2c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012f30:	80ef      	strh	r7, [r5, #6]
 8012f32:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012f36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012f38:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012f3c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012f40:	bfb8      	it	lt
 8012f42:	448b      	addlt	fp, r1
 8012f44:	eb08 0503 	add.w	r5, r8, r3
 8012f48:	ea5e 0307 	orrs.w	r3, lr, r7
 8012f4c:	d011      	beq.n	8012f72 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012f4e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012f52:	f1be 0f00 	cmp.w	lr, #0
 8012f56:	db0c      	blt.n	8012f72 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012f58:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012f5a:	45be      	cmp	lr, r7
 8012f5c:	da09      	bge.n	8012f72 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012f5e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012f62:	45be      	cmp	lr, r7
 8012f64:	bf3c      	itt	cc
 8012f66:	f10c 0708 	addcc.w	r7, ip, #8
 8012f6a:	6107      	strcc	r7, [r0, #16]
 8012f6c:	f10e 0701 	add.w	r7, lr, #1
 8012f70:	6087      	str	r7, [r0, #8]
 8012f72:	6907      	ldr	r7, [r0, #16]
 8012f74:	b213      	sxth	r3, r2
 8012f76:	9310      	str	r3, [sp, #64]	; 0x40
 8012f78:	807b      	strh	r3, [r7, #2]
 8012f7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012f7c:	803d      	strh	r5, [r7, #0]
 8012f7e:	4555      	cmp	r5, sl
 8012f80:	80be      	strh	r6, [r7, #4]
 8012f82:	80fe      	strh	r6, [r7, #6]
 8012f84:	eb04 0c03 	add.w	ip, r4, r3
 8012f88:	d051      	beq.n	801302e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012f8a:	9b01      	ldr	r3, [sp, #4]
 8012f8c:	eba3 070c 	sub.w	r7, r3, ip
 8012f90:	443c      	add	r4, r7
 8012f92:	0164      	lsls	r4, r4, #5
 8012f94:	fb94 f8f1 	sdiv	r8, r4, r1
 8012f98:	fb01 4418 	mls	r4, r1, r8, r4
 8012f9c:	2c00      	cmp	r4, #0
 8012f9e:	bfb8      	it	lt
 8012fa0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012fa4:	ebab 0301 	sub.w	r3, fp, r1
 8012fa8:	f108 0701 	add.w	r7, r8, #1
 8012fac:	bfb8      	it	lt
 8012fae:	1864      	addlt	r4, r4, r1
 8012fb0:	9309      	str	r3, [sp, #36]	; 0x24
 8012fb2:	9711      	str	r7, [sp, #68]	; 0x44
 8012fb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012fb6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012fba:	191b      	adds	r3, r3, r4
 8012fbc:	bf58      	it	pl
 8012fbe:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012fc0:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012fc4:	9309      	str	r3, [sp, #36]	; 0x24
 8012fc6:	bf48      	it	mi
 8012fc8:	4647      	movmi	r7, r8
 8012fca:	44bb      	add	fp, r7
 8012fcc:	f8ae b004 	strh.w	fp, [lr, #4]
 8012fd0:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012fd4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012fd8:	f8ae b006 	strh.w	fp, [lr, #6]
 8012fdc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012fe0:	44bc      	add	ip, r7
 8012fe2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012fe4:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012fe8:	443d      	add	r5, r7
 8012fea:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012fee:	bf5c      	itt	pl
 8012ff0:	1a5b      	subpl	r3, r3, r1
 8012ff2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012ff4:	ea5b 0307 	orrs.w	r3, fp, r7
 8012ff8:	d011      	beq.n	801301e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012ffa:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012ffe:	f1bb 0f00 	cmp.w	fp, #0
 8013002:	db0c      	blt.n	801301e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013004:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013006:	45bb      	cmp	fp, r7
 8013008:	da09      	bge.n	801301e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801300a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801300e:	45bb      	cmp	fp, r7
 8013010:	bf3c      	itt	cc
 8013012:	f10e 0708 	addcc.w	r7, lr, #8
 8013016:	6107      	strcc	r7, [r0, #16]
 8013018:	f10b 0701 	add.w	r7, fp, #1
 801301c:	6087      	str	r7, [r0, #8]
 801301e:	6907      	ldr	r7, [r0, #16]
 8013020:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013022:	803d      	strh	r5, [r7, #0]
 8013024:	4555      	cmp	r5, sl
 8013026:	807b      	strh	r3, [r7, #2]
 8013028:	80be      	strh	r6, [r7, #4]
 801302a:	80fe      	strh	r6, [r7, #6]
 801302c:	d1c2      	bne.n	8012fb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801302e:	9b01      	ldr	r3, [sp, #4]
 8013030:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013032:	eba3 0c0c 	sub.w	ip, r3, ip
 8013036:	6903      	ldr	r3, [r0, #16]
 8013038:	8899      	ldrh	r1, [r3, #4]
 801303a:	4461      	add	r1, ip
 801303c:	8099      	strh	r1, [r3, #4]
 801303e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013040:	3720      	adds	r7, #32
 8013042:	1a7f      	subs	r7, r7, r1
 8013044:	88d9      	ldrh	r1, [r3, #6]
 8013046:	fb0c 1c07 	mla	ip, ip, r7, r1
 801304a:	f8a3 c006 	strh.w	ip, [r3, #6]
 801304e:	e60e      	b.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013050:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013052:	f04f 34ff 	mov.w	r4, #4294967295
 8013056:	940d      	str	r4, [sp, #52]	; 0x34
 8013058:	437b      	muls	r3, r7
 801305a:	4249      	negs	r1, r1
 801305c:	2400      	movs	r4, #0
 801305e:	e756      	b.n	8012f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013060:	9905      	ldr	r1, [sp, #20]
 8013062:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013066:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801306a:	f001 011f 	and.w	r1, r1, #31
 801306e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013072:	9102      	str	r1, [sp, #8]
 8013074:	9904      	ldr	r1, [sp, #16]
 8013076:	45f3      	cmp	fp, lr
 8013078:	f009 0c1f 	and.w	ip, r9, #31
 801307c:	eba1 0406 	sub.w	r4, r1, r6
 8013080:	d108      	bne.n	8013094 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013082:	9b02      	ldr	r3, [sp, #8]
 8013084:	449c      	add	ip, r3
 8013086:	44a0      	add	r8, r4
 8013088:	fb04 a40c 	mla	r4, r4, ip, sl
 801308c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013090:	80fc      	strh	r4, [r7, #6]
 8013092:	e458      	b.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013094:	9905      	ldr	r1, [sp, #20]
 8013096:	ebb1 0109 	subs.w	r1, r1, r9
 801309a:	bf5b      	ittet	pl
 801309c:	f1cc 0520 	rsbpl	r5, ip, #32
 80130a0:	436c      	mulpl	r4, r5
 80130a2:	2500      	movmi	r5, #0
 80130a4:	2520      	movpl	r5, #32
 80130a6:	bf44      	itt	mi
 80130a8:	fb04 f40c 	mulmi.w	r4, r4, ip
 80130ac:	4249      	negmi	r1, r1
 80130ae:	9501      	str	r5, [sp, #4]
 80130b0:	9b01      	ldr	r3, [sp, #4]
 80130b2:	fb94 f5f1 	sdiv	r5, r4, r1
 80130b6:	fb01 4415 	mls	r4, r1, r5, r4
 80130ba:	bf54      	ite	pl
 80130bc:	f04f 0901 	movpl.w	r9, #1
 80130c0:	f04f 39ff 	movmi.w	r9, #4294967295
 80130c4:	2c00      	cmp	r4, #0
 80130c6:	bfb8      	it	lt
 80130c8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80130cc:	449c      	add	ip, r3
 80130ce:	44a8      	add	r8, r5
 80130d0:	fb05 ac0c 	mla	ip, r5, ip, sl
 80130d4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80130d8:	f8a7 c006 	strh.w	ip, [r7, #6]
 80130dc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80130e0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80130e4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80130e8:	bfb8      	it	lt
 80130ea:	1864      	addlt	r4, r4, r1
 80130ec:	ea58 0707 	orrs.w	r7, r8, r7
 80130f0:	eb0b 0309 	add.w	r3, fp, r9
 80130f4:	d011      	beq.n	801311a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80130f6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80130fa:	f1b8 0f00 	cmp.w	r8, #0
 80130fe:	db0c      	blt.n	801311a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013100:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013102:	45b8      	cmp	r8, r7
 8013104:	da09      	bge.n	801311a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013106:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801310a:	45b8      	cmp	r8, r7
 801310c:	bf3c      	itt	cc
 801310e:	f10c 0708 	addcc.w	r7, ip, #8
 8013112:	6107      	strcc	r7, [r0, #16]
 8013114:	f108 0701 	add.w	r7, r8, #1
 8013118:	6087      	str	r7, [r0, #8]
 801311a:	6907      	ldr	r7, [r0, #16]
 801311c:	f04f 0c00 	mov.w	ip, #0
 8013120:	b212      	sxth	r2, r2
 8013122:	459e      	cmp	lr, r3
 8013124:	803b      	strh	r3, [r7, #0]
 8013126:	807a      	strh	r2, [r7, #2]
 8013128:	f8a7 c004 	strh.w	ip, [r7, #4]
 801312c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013130:	442e      	add	r6, r5
 8013132:	d04d      	beq.n	80131d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013134:	9f04      	ldr	r7, [sp, #16]
 8013136:	1bbf      	subs	r7, r7, r6
 8013138:	443d      	add	r5, r7
 801313a:	016d      	lsls	r5, r5, #5
 801313c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013140:	fb01 5518 	mls	r5, r1, r8, r5
 8013144:	4565      	cmp	r5, ip
 8013146:	bfb8      	it	lt
 8013148:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801314c:	f108 0701 	add.w	r7, r8, #1
 8013150:	bfb8      	it	lt
 8013152:	186d      	addlt	r5, r5, r1
 8013154:	1a64      	subs	r4, r4, r1
 8013156:	9703      	str	r7, [sp, #12]
 8013158:	f04f 0a00 	mov.w	sl, #0
 801315c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013160:	1964      	adds	r4, r4, r5
 8013162:	bf58      	it	pl
 8013164:	9f03      	ldrpl	r7, [sp, #12]
 8013166:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801316a:	bf48      	it	mi
 801316c:	4647      	movmi	r7, r8
 801316e:	44bb      	add	fp, r7
 8013170:	f8ac b004 	strh.w	fp, [ip, #4]
 8013174:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013178:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801317c:	f8ac b006 	strh.w	fp, [ip, #6]
 8013180:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013184:	443e      	add	r6, r7
 8013186:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801318a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801318e:	bf58      	it	pl
 8013190:	1a64      	subpl	r4, r4, r1
 8013192:	ea5b 0707 	orrs.w	r7, fp, r7
 8013196:	444b      	add	r3, r9
 8013198:	d011      	beq.n	80131be <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801319a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801319e:	f1bb 0f00 	cmp.w	fp, #0
 80131a2:	db0c      	blt.n	80131be <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80131a4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80131a6:	45bb      	cmp	fp, r7
 80131a8:	da09      	bge.n	80131be <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80131aa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80131ae:	45bb      	cmp	fp, r7
 80131b0:	bf3c      	itt	cc
 80131b2:	f10c 0708 	addcc.w	r7, ip, #8
 80131b6:	6107      	strcc	r7, [r0, #16]
 80131b8:	f10b 0701 	add.w	r7, fp, #1
 80131bc:	6087      	str	r7, [r0, #8]
 80131be:	6907      	ldr	r7, [r0, #16]
 80131c0:	459e      	cmp	lr, r3
 80131c2:	803b      	strh	r3, [r7, #0]
 80131c4:	807a      	strh	r2, [r7, #2]
 80131c6:	f8a7 a004 	strh.w	sl, [r7, #4]
 80131ca:	f8a7 a006 	strh.w	sl, [r7, #6]
 80131ce:	d1c5      	bne.n	801315c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80131d0:	9b04      	ldr	r3, [sp, #16]
 80131d2:	1b9e      	subs	r6, r3, r6
 80131d4:	6903      	ldr	r3, [r0, #16]
 80131d6:	889a      	ldrh	r2, [r3, #4]
 80131d8:	4432      	add	r2, r6
 80131da:	809a      	strh	r2, [r3, #4]
 80131dc:	9a02      	ldr	r2, [sp, #8]
 80131de:	f102 0c20 	add.w	ip, r2, #32
 80131e2:	9a01      	ldr	r2, [sp, #4]
 80131e4:	ebac 0c02 	sub.w	ip, ip, r2
 80131e8:	88da      	ldrh	r2, [r3, #6]
 80131ea:	fb06 260c 	mla	r6, r6, ip, r2
 80131ee:	80de      	strh	r6, [r3, #6]
 80131f0:	f7ff bba9 	b.w	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080131f4 <_ZN8touchgfx7Outline6lineToEii>:
 80131f4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80131f6:	079b      	lsls	r3, r3, #30
 80131f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80131fa:	460e      	mov	r6, r1
 80131fc:	4615      	mov	r5, r2
 80131fe:	d511      	bpl.n	8013224 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013200:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013204:	ea86 0701 	eor.w	r7, r6, r1
 8013208:	ea85 0302 	eor.w	r3, r5, r2
 801320c:	433b      	orrs	r3, r7
 801320e:	d009      	beq.n	8013224 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013210:	4633      	mov	r3, r6
 8013212:	9500      	str	r5, [sp, #0]
 8013214:	f7ff fb3e 	bl	8012894 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013218:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801321a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801321e:	f043 0301 	orr.w	r3, r3, #1
 8013222:	6243      	str	r3, [r0, #36]	; 0x24
 8013224:	b003      	add	sp, #12
 8013226:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013228 <_ZN8touchgfx7Outline6moveToEii>:
 8013228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801322a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801322c:	4615      	mov	r5, r2
 801322e:	079a      	lsls	r2, r3, #30
 8013230:	4604      	mov	r4, r0
 8013232:	460e      	mov	r6, r1
 8013234:	d401      	bmi.n	801323a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013236:	f7ff faf9 	bl	801282c <_ZN8touchgfx7Outline5resetEv>
 801323a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801323c:	07db      	lsls	r3, r3, #31
 801323e:	d504      	bpl.n	801324a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013240:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013244:	4620      	mov	r0, r4
 8013246:	f7ff ffd5 	bl	80131f4 <_ZN8touchgfx7Outline6lineToEii>
 801324a:	6923      	ldr	r3, [r4, #16]
 801324c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013250:	1170      	asrs	r0, r6, #5
 8013252:	4290      	cmp	r0, r2
 8013254:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013258:	d103      	bne.n	8013262 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801325a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801325e:	4291      	cmp	r1, r2
 8013260:	d01a      	beq.n	8013298 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013262:	88df      	ldrh	r7, [r3, #6]
 8013264:	889a      	ldrh	r2, [r3, #4]
 8013266:	433a      	orrs	r2, r7
 8013268:	d010      	beq.n	801328c <_ZN8touchgfx7Outline6moveToEii+0x64>
 801326a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801326e:	2a00      	cmp	r2, #0
 8013270:	db0c      	blt.n	801328c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013272:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8013274:	42ba      	cmp	r2, r7
 8013276:	da09      	bge.n	801328c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013278:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801327c:	42ba      	cmp	r2, r7
 801327e:	bf38      	it	cc
 8013280:	3308      	addcc	r3, #8
 8013282:	f102 0201 	add.w	r2, r2, #1
 8013286:	bf38      	it	cc
 8013288:	6123      	strcc	r3, [r4, #16]
 801328a:	60a2      	str	r2, [r4, #8]
 801328c:	6923      	ldr	r3, [r4, #16]
 801328e:	2200      	movs	r2, #0
 8013290:	8018      	strh	r0, [r3, #0]
 8013292:	8059      	strh	r1, [r3, #2]
 8013294:	809a      	strh	r2, [r3, #4]
 8013296:	80da      	strh	r2, [r3, #6]
 8013298:	6166      	str	r6, [r4, #20]
 801329a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801329e:	6225      	str	r5, [r4, #32]
 80132a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080132a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80132a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80132a6:	b0d0      	sub	sp, #320	; 0x140
 80132a8:	466c      	mov	r4, sp
 80132aa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80132ae:	4627      	mov	r7, r4
 80132b0:	1a0d      	subs	r5, r1, r0
 80132b2:	2d48      	cmp	r5, #72	; 0x48
 80132b4:	f100 0308 	add.w	r3, r0, #8
 80132b8:	f340 80d5 	ble.w	8013466 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80132bc:	112d      	asrs	r5, r5, #4
 80132be:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80132c2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80132c6:	6816      	ldr	r6, [r2, #0]
 80132c8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80132cc:	6006      	str	r6, [r0, #0]
 80132ce:	6856      	ldr	r6, [r2, #4]
 80132d0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80132d4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80132d8:	6046      	str	r6, [r0, #4]
 80132da:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80132de:	f8a2 8002 	strh.w	r8, [r2, #2]
 80132e2:	f8a2 e004 	strh.w	lr, [r2, #4]
 80132e6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80132ea:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80132ee:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80132f2:	4565      	cmp	r5, ip
 80132f4:	f1a1 0208 	sub.w	r2, r1, #8
 80132f8:	db06      	blt.n	8013308 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80132fa:	d119      	bne.n	8013330 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80132fc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013300:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8013304:	42ae      	cmp	r6, r5
 8013306:	dd13      	ble.n	8013330 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013308:	460e      	mov	r6, r1
 801330a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801330e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013312:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013316:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801331a:	601d      	str	r5, [r3, #0]
 801331c:	6875      	ldr	r5, [r6, #4]
 801331e:	605d      	str	r5, [r3, #4]
 8013320:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013324:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013328:	f821 8c04 	strh.w	r8, [r1, #-4]
 801332c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013330:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013334:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013338:	42ae      	cmp	r6, r5
 801333a:	db06      	blt.n	801334a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801333c:	d116      	bne.n	801336c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801333e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013342:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013346:	45ac      	cmp	ip, r5
 8013348:	da10      	bge.n	801336c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801334a:	681d      	ldr	r5, [r3, #0]
 801334c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013350:	6005      	str	r5, [r0, #0]
 8013352:	685d      	ldr	r5, [r3, #4]
 8013354:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013358:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801335c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013360:	6045      	str	r5, [r0, #4]
 8013362:	8146      	strh	r6, [r0, #10]
 8013364:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013368:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801336c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013370:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013374:	4565      	cmp	r5, ip
 8013376:	db06      	blt.n	8013386 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8013378:	d119      	bne.n	80133ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801337a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801337e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013382:	42ae      	cmp	r6, r5
 8013384:	da13      	bge.n	80133ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013386:	460e      	mov	r6, r1
 8013388:	f9b0 9000 	ldrsh.w	r9, [r0]
 801338c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013390:	6005      	str	r5, [r0, #0]
 8013392:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8013396:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801339a:	6875      	ldr	r5, [r6, #4]
 801339c:	6045      	str	r5, [r0, #4]
 801339e:	f821 9c08 	strh.w	r9, [r1, #-8]
 80133a2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80133a6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80133aa:	f821 ec02 	strh.w	lr, [r1, #-2]
 80133ae:	3308      	adds	r3, #8
 80133b0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80133b4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80133b8:	45e6      	cmp	lr, ip
 80133ba:	dbf8      	blt.n	80133ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80133bc:	d105      	bne.n	80133ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80133be:	f9b3 6000 	ldrsh.w	r6, [r3]
 80133c2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80133c6:	42ae      	cmp	r6, r5
 80133c8:	dbf1      	blt.n	80133ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80133ca:	4615      	mov	r5, r2
 80133cc:	3a08      	subs	r2, #8
 80133ce:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80133d2:	45b4      	cmp	ip, r6
 80133d4:	dbf9      	blt.n	80133ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80133d6:	d105      	bne.n	80133e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80133d8:	f9b0 8000 	ldrsh.w	r8, [r0]
 80133dc:	f9b2 6000 	ldrsh.w	r6, [r2]
 80133e0:	45b0      	cmp	r8, r6
 80133e2:	dbf2      	blt.n	80133ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80133e4:	4293      	cmp	r3, r2
 80133e6:	f1a5 0608 	sub.w	r6, r5, #8
 80133ea:	d816      	bhi.n	801341a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80133ec:	f8d6 c000 	ldr.w	ip, [r6]
 80133f0:	f9b3 a000 	ldrsh.w	sl, [r3]
 80133f4:	f8c3 c000 	str.w	ip, [r3]
 80133f8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80133fc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013400:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8013404:	f8c3 c004 	str.w	ip, [r3, #4]
 8013408:	f825 ac08 	strh.w	sl, [r5, #-8]
 801340c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013410:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013414:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013418:	e7c9      	b.n	80133ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801341a:	f8d6 e000 	ldr.w	lr, [r6]
 801341e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013422:	f8c0 e000 	str.w	lr, [r0]
 8013426:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801342a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801342e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8013432:	f8c0 e004 	str.w	lr, [r0, #4]
 8013436:	f825 ac08 	strh.w	sl, [r5, #-8]
 801343a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801343e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013442:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013446:	1acd      	subs	r5, r1, r3
 8013448:	1a16      	subs	r6, r2, r0
 801344a:	10ed      	asrs	r5, r5, #3
 801344c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8013450:	bfb5      	itete	lt
 8013452:	e9c4 0200 	strdlt	r0, r2, [r4]
 8013456:	e9c4 3100 	strdge	r3, r1, [r4]
 801345a:	460a      	movlt	r2, r1
 801345c:	4603      	movge	r3, r0
 801345e:	3408      	adds	r4, #8
 8013460:	4618      	mov	r0, r3
 8013462:	4611      	mov	r1, r2
 8013464:	e724      	b.n	80132b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013466:	4299      	cmp	r1, r3
 8013468:	d928      	bls.n	80134bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801346a:	f1a3 0210 	sub.w	r2, r3, #16
 801346e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8013472:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8013476:	45ac      	cmp	ip, r5
 8013478:	db06      	blt.n	8013488 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801347a:	d11d      	bne.n	80134b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801347c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8013480:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8013484:	42ae      	cmp	r6, r5
 8013486:	da17      	bge.n	80134b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8013488:	4615      	mov	r5, r2
 801348a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801348e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8013492:	6116      	str	r6, [r2, #16]
 8013494:	686e      	ldr	r6, [r5, #4]
 8013496:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801349a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801349e:	f8a2 9008 	strh.w	r9, [r2, #8]
 80134a2:	42a8      	cmp	r0, r5
 80134a4:	6156      	str	r6, [r2, #20]
 80134a6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80134aa:	f8a2 800c 	strh.w	r8, [r2, #12]
 80134ae:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80134b2:	f1a2 0208 	sub.w	r2, r2, #8
 80134b6:	d1da      	bne.n	801346e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80134b8:	3308      	adds	r3, #8
 80134ba:	e7d4      	b.n	8013466 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80134bc:	42bc      	cmp	r4, r7
 80134be:	d903      	bls.n	80134c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80134c0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80134c4:	3c08      	subs	r4, #8
 80134c6:	e6f3      	b.n	80132b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80134c8:	b050      	add	sp, #320	; 0x140
 80134ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080134ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80134ce:	b510      	push	{r4, lr}
 80134d0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80134d2:	07da      	lsls	r2, r3, #31
 80134d4:	4604      	mov	r4, r0
 80134d6:	d507      	bpl.n	80134e8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80134d8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80134dc:	f7ff fe8a 	bl	80131f4 <_ZN8touchgfx7Outline6lineToEii>
 80134e0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80134e2:	f023 0301 	bic.w	r3, r3, #1
 80134e6:	6243      	str	r3, [r0, #36]	; 0x24
 80134e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80134ea:	079b      	lsls	r3, r3, #30
 80134ec:	d521      	bpl.n	8013532 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80134ee:	6923      	ldr	r3, [r4, #16]
 80134f0:	88d9      	ldrh	r1, [r3, #6]
 80134f2:	889a      	ldrh	r2, [r3, #4]
 80134f4:	430a      	orrs	r2, r1
 80134f6:	d010      	beq.n	801351a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80134f8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80134fc:	2a00      	cmp	r2, #0
 80134fe:	db0c      	blt.n	801351a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013500:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013502:	428a      	cmp	r2, r1
 8013504:	da09      	bge.n	801351a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013506:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801350a:	4291      	cmp	r1, r2
 801350c:	bf88      	it	hi
 801350e:	3308      	addhi	r3, #8
 8013510:	f102 0201 	add.w	r2, r2, #1
 8013514:	bf88      	it	hi
 8013516:	6123      	strhi	r3, [r4, #16]
 8013518:	60a2      	str	r2, [r4, #8]
 801351a:	68a1      	ldr	r1, [r4, #8]
 801351c:	b129      	cbz	r1, 801352a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801351e:	6863      	ldr	r3, [r4, #4]
 8013520:	4299      	cmp	r1, r3
 8013522:	d802      	bhi.n	801352a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013524:	68e0      	ldr	r0, [r4, #12]
 8013526:	f7ff febc 	bl	80132a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801352a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801352c:	f023 0302 	bic.w	r3, r3, #2
 8013530:	6263      	str	r3, [r4, #36]	; 0x24
 8013532:	68e0      	ldr	r0, [r4, #12]
 8013534:	bd10      	pop	{r4, pc}
	...

08013538 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013538:	4b02      	ldr	r3, [pc, #8]	; (8013544 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801353a:	6018      	str	r0, [r3, #0]
 801353c:	4b02      	ldr	r3, [pc, #8]	; (8013548 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801353e:	6019      	str	r1, [r3, #0]
 8013540:	4770      	bx	lr
 8013542:	bf00      	nop
 8013544:	20012e84 	.word	0x20012e84
 8013548:	20012e88 	.word	0x20012e88

0801354c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801354c:	4a02      	ldr	r2, [pc, #8]	; (8013558 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801354e:	2300      	movs	r3, #0
 8013550:	6013      	str	r3, [r2, #0]
 8013552:	4a02      	ldr	r2, [pc, #8]	; (801355c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8013554:	6013      	str	r3, [r2, #0]
 8013556:	4770      	bx	lr
 8013558:	20012e84 	.word	0x20012e84
 801355c:	20012e88 	.word	0x20012e88

08013560 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8013560:	4b01      	ldr	r3, [pc, #4]	; (8013568 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8013562:	6818      	ldr	r0, [r3, #0]
 8013564:	4770      	bx	lr
 8013566:	bf00      	nop
 8013568:	20012e84 	.word	0x20012e84

0801356c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801356c:	4b01      	ldr	r3, [pc, #4]	; (8013574 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801356e:	6818      	ldr	r0, [r3, #0]
 8013570:	4770      	bx	lr
 8013572:	bf00      	nop
 8013574:	20012e88 	.word	0x20012e88

08013578 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013578:	b510      	push	{r4, lr}
 801357a:	6803      	ldr	r3, [r0, #0]
 801357c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801357e:	460c      	mov	r4, r1
 8013580:	4798      	blx	r3
 8013582:	1b03      	subs	r3, r0, r4
 8013584:	4258      	negs	r0, r3
 8013586:	4158      	adcs	r0, r3
 8013588:	bd10      	pop	{r4, pc}
	...

0801358c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801358c:	4b01      	ldr	r3, [pc, #4]	; (8013594 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801358e:	6019      	str	r1, [r3, #0]
 8013590:	4770      	bx	lr
 8013592:	bf00      	nop
 8013594:	20012e8c 	.word	0x20012e8c

08013598 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801359c:	4696      	mov	lr, r2
 801359e:	4605      	mov	r5, r0
 80135a0:	4614      	mov	r4, r2
 80135a2:	460e      	mov	r6, r1
 80135a4:	461f      	mov	r7, r3
 80135a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80135aa:	b097      	sub	sp, #92	; 0x5c
 80135ac:	f10d 0c1c 	add.w	ip, sp, #28
 80135b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80135b4:	f8de 3000 	ldr.w	r3, [lr]
 80135b8:	f8cc 3000 	str.w	r3, [ip]
 80135bc:	f104 0e14 	add.w	lr, r4, #20
 80135c0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80135c4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80135c8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80135cc:	f8de 3000 	ldr.w	r3, [lr]
 80135d0:	f8cc 3000 	str.w	r3, [ip]
 80135d4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80135d8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80135dc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80135e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80135e4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80135e8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80135ec:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80135f0:	f8de 3000 	ldr.w	r3, [lr]
 80135f4:	f8cc 3000 	str.w	r3, [ip]
 80135f8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80135fa:	682b      	ldr	r3, [r5, #0]
 80135fc:	9201      	str	r2, [sp, #4]
 80135fe:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013602:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013604:	9200      	str	r2, [sp, #0]
 8013606:	f8cd 8008 	str.w	r8, [sp, #8]
 801360a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801360e:	aa07      	add	r2, sp, #28
 8013610:	463b      	mov	r3, r7
 8013612:	4631      	mov	r1, r6
 8013614:	4628      	mov	r0, r5
 8013616:	47d8      	blx	fp
 8013618:	46a6      	mov	lr, r4
 801361a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801361e:	f10d 0c1c 	add.w	ip, sp, #28
 8013622:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013626:	f8de 3000 	ldr.w	r3, [lr]
 801362a:	f8cc 3000 	str.w	r3, [ip]
 801362e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013632:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013636:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801363a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801363e:	343c      	adds	r4, #60	; 0x3c
 8013640:	f8de 3000 	ldr.w	r3, [lr]
 8013644:	f8cc 3000 	str.w	r3, [ip]
 8013648:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801364a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801364e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013652:	6823      	ldr	r3, [r4, #0]
 8013654:	f8cc 3000 	str.w	r3, [ip]
 8013658:	682b      	ldr	r3, [r5, #0]
 801365a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801365e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013660:	9201      	str	r2, [sp, #4]
 8013662:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013664:	9200      	str	r2, [sp, #0]
 8013666:	f8cd 8008 	str.w	r8, [sp, #8]
 801366a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801366c:	aa07      	add	r2, sp, #28
 801366e:	463b      	mov	r3, r7
 8013670:	4631      	mov	r1, r6
 8013672:	4628      	mov	r0, r5
 8013674:	47a0      	blx	r4
 8013676:	b017      	add	sp, #92	; 0x5c
 8013678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801367c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801367c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013680:	b08d      	sub	sp, #52	; 0x34
 8013682:	4688      	mov	r8, r1
 8013684:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013686:	f8d3 c000 	ldr.w	ip, [r3]
 801368a:	680f      	ldr	r7, [r1, #0]
 801368c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013690:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013694:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013698:	edd3 6a07 	vldr	s13, [r3, #28]
 801369c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801369e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80136a2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80136a6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80136aa:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80136ae:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80136b2:	eba7 070c 	sub.w	r7, r7, ip
 80136b6:	42bc      	cmp	r4, r7
 80136b8:	bfa8      	it	ge
 80136ba:	463c      	movge	r4, r7
 80136bc:	ee07 4a90 	vmov	s15, r4
 80136c0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80136c4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80136c8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80136cc:	ee65 4a24 	vmul.f32	s9, s10, s9
 80136d0:	ee25 5a27 	vmul.f32	s10, s10, s15
 80136d4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80136d8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80136dc:	eb09 0e0c 	add.w	lr, r9, ip
 80136e0:	4571      	cmp	r1, lr
 80136e2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80136e6:	ee32 1a05 	vadd.f32	s2, s4, s10
 80136ea:	ee36 0a84 	vadd.f32	s0, s13, s8
 80136ee:	ee61 1a87 	vmul.f32	s3, s3, s14
 80136f2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80136f6:	f340 808d 	ble.w	8013814 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80136fa:	eba1 060e 	sub.w	r6, r1, lr
 80136fe:	fb96 f5f4 	sdiv	r5, r6, r4
 8013702:	ee07 5a10 	vmov	s14, r5
 8013706:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801370a:	2d00      	cmp	r5, #0
 801370c:	fb04 6615 	mls	r6, r4, r5, r6
 8013710:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013714:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013718:	eea7 1a05 	vfma.f32	s2, s14, s10
 801371c:	dd13      	ble.n	8013746 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801371e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013722:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013726:	eef5 6a40 	vcmp.f32	s13, #0.0
 801372a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801372e:	bf18      	it	ne
 8013730:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013734:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013738:	bf08      	it	eq
 801373a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801373e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013742:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013746:	fb05 f204 	mul.w	r2, r5, r4
 801374a:	1abf      	subs	r7, r7, r2
 801374c:	4494      	add	ip, r2
 801374e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013752:	4411      	add	r1, r2
 8013754:	eb09 020c 	add.w	r2, r9, ip
 8013758:	443a      	add	r2, r7
 801375a:	b209      	sxth	r1, r1
 801375c:	428a      	cmp	r2, r1
 801375e:	bfc4      	itt	gt
 8013760:	eba1 0209 	subgt.w	r2, r1, r9
 8013764:	eba2 070c 	subgt.w	r7, r2, ip
 8013768:	2f00      	cmp	r7, #0
 801376a:	dd50      	ble.n	801380e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801376c:	fb97 f1f4 	sdiv	r1, r7, r4
 8013770:	fb04 7211 	mls	r2, r4, r1, r7
 8013774:	b90a      	cbnz	r2, 801377a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8013776:	3901      	subs	r1, #1
 8013778:	4622      	mov	r2, r4
 801377a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801377e:	6840      	ldr	r0, [r0, #4]
 8013780:	900b      	str	r0, [sp, #44]	; 0x2c
 8013782:	f8d0 a000 	ldr.w	sl, [r0]
 8013786:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013788:	9008      	str	r0, [sp, #32]
 801378a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801378e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013790:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013794:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013798:	695b      	ldr	r3, [r3, #20]
 801379a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801379c:	445b      	add	r3, fp
 801379e:	eef0 6a42 	vmov.f32	s13, s4
 80137a2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80137a6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80137aa:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80137ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80137b2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80137b6:	9307      	str	r3, [sp, #28]
 80137b8:	ee17 7a90 	vmov	r7, s15
 80137bc:	ee73 7a42 	vsub.f32	s15, s6, s4
 80137c0:	eeb0 7a61 	vmov.f32	s14, s3
 80137c4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80137c8:	ee16 3a90 	vmov	r3, s13
 80137cc:	fb97 f7f4 	sdiv	r7, r7, r4
 80137d0:	ee17 ca90 	vmov	ip, s15
 80137d4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80137d8:	fb9c fcf4 	sdiv	ip, ip, r4
 80137dc:	fb0c 3306 	mla	r3, ip, r6, r3
 80137e0:	9302      	str	r3, [sp, #8]
 80137e2:	ee17 3a10 	vmov	r3, s14
 80137e6:	44b6      	add	lr, r6
 80137e8:	fb04 e505 	mla	r5, r4, r5, lr
 80137ec:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80137f0:	fb07 3706 	mla	r7, r7, r6, r3
 80137f4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80137f8:	e9cd 4700 	strd	r4, r7, [sp]
 80137fc:	2900      	cmp	r1, #0
 80137fe:	bfcc      	ite	gt
 8013800:	46a1      	movgt	r9, r4
 8013802:	4691      	movle	r9, r2
 8013804:	eba9 0306 	sub.w	r3, r9, r6
 8013808:	f8da 4008 	ldr.w	r4, [sl, #8]
 801380c:	47a0      	blx	r4
 801380e:	b00d      	add	sp, #52	; 0x34
 8013810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013814:	2500      	movs	r5, #0
 8013816:	462e      	mov	r6, r5
 8013818:	e799      	b.n	801374e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801381c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801381c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013820:	b0db      	sub	sp, #364	; 0x16c
 8013822:	461d      	mov	r5, r3
 8013824:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013828:	930a      	str	r3, [sp, #40]	; 0x28
 801382a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801382e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013830:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013834:	9310      	str	r3, [sp, #64]	; 0x40
 8013836:	6803      	ldr	r3, [r0, #0]
 8013838:	910f      	str	r1, [sp, #60]	; 0x3c
 801383a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801383c:	9009      	str	r0, [sp, #36]	; 0x24
 801383e:	4614      	mov	r4, r2
 8013840:	4629      	mov	r1, r5
 8013842:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013846:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801384a:	47b8      	blx	r7
 801384c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801384e:	6058      	str	r0, [r3, #4]
 8013850:	2800      	cmp	r0, #0
 8013852:	f000 83a1 	beq.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013856:	682b      	ldr	r3, [r5, #0]
 8013858:	9314      	str	r3, [sp, #80]	; 0x50
 801385a:	686b      	ldr	r3, [r5, #4]
 801385c:	9315      	str	r3, [sp, #84]	; 0x54
 801385e:	4bc4      	ldr	r3, [pc, #784]	; (8013b70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013860:	ed94 7a02 	vldr	s14, [r4, #8]
 8013864:	7819      	ldrb	r1, [r3, #0]
 8013866:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801386a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801386e:	2900      	cmp	r1, #0
 8013870:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013874:	bf16      	itet	ne
 8013876:	4619      	movne	r1, r3
 8013878:	4611      	moveq	r1, r2
 801387a:	4613      	movne	r3, r2
 801387c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013880:	9116      	str	r1, [sp, #88]	; 0x58
 8013882:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013886:	f240 8387 	bls.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801388a:	ed94 7a07 	vldr	s14, [r4, #28]
 801388e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013896:	f240 837f 	bls.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801389a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801389e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80138a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80138a6:	f240 8377 	bls.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138aa:	6822      	ldr	r2, [r4, #0]
 80138ac:	4bb1      	ldr	r3, [pc, #708]	; (8013b74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80138ae:	429a      	cmp	r2, r3
 80138b0:	f2c0 8372 	blt.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138b4:	49b0      	ldr	r1, [pc, #704]	; (8013b78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80138b6:	6963      	ldr	r3, [r4, #20]
 80138b8:	428a      	cmp	r2, r1
 80138ba:	f300 836d 	bgt.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138be:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80138c2:	48ae      	ldr	r0, [pc, #696]	; (8013b7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80138c4:	33ff      	adds	r3, #255	; 0xff
 80138c6:	4283      	cmp	r3, r0
 80138c8:	f200 8366 	bhi.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138cc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80138ce:	4dac      	ldr	r5, [pc, #688]	; (8013b80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80138d0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80138d4:	33ff      	adds	r3, #255	; 0xff
 80138d6:	42ab      	cmp	r3, r5
 80138d8:	f200 835e 	bhi.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138dc:	6862      	ldr	r2, [r4, #4]
 80138de:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80138e2:	33ff      	adds	r3, #255	; 0xff
 80138e4:	4283      	cmp	r3, r0
 80138e6:	f200 8357 	bhi.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138ea:	69a1      	ldr	r1, [r4, #24]
 80138ec:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80138f0:	33ff      	adds	r3, #255	; 0xff
 80138f2:	4283      	cmp	r3, r0
 80138f4:	f200 8350 	bhi.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138f8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80138fa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80138fe:	30ff      	adds	r0, #255	; 0xff
 8013900:	42a8      	cmp	r0, r5
 8013902:	f200 8349 	bhi.w	8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013906:	428a      	cmp	r2, r1
 8013908:	f280 8110 	bge.w	8013b2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801390c:	429a      	cmp	r2, r3
 801390e:	f300 8119 	bgt.w	8013b44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013912:	4299      	cmp	r1, r3
 8013914:	f280 811d 	bge.w	8013b52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013918:	2502      	movs	r5, #2
 801391a:	2701      	movs	r7, #1
 801391c:	46a9      	mov	r9, r5
 801391e:	46b8      	mov	r8, r7
 8013920:	f04f 0a00 	mov.w	sl, #0
 8013924:	4621      	mov	r1, r4
 8013926:	a849      	add	r0, sp, #292	; 0x124
 8013928:	f003 feec 	bl	8017704 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801392c:	4622      	mov	r2, r4
 801392e:	4653      	mov	r3, sl
 8013930:	a949      	add	r1, sp, #292	; 0x124
 8013932:	f8cd 9000 	str.w	r9, [sp]
 8013936:	a819      	add	r0, sp, #100	; 0x64
 8013938:	f004 f814 	bl	8017964 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801393c:	4622      	mov	r2, r4
 801393e:	4653      	mov	r3, sl
 8013940:	a949      	add	r1, sp, #292	; 0x124
 8013942:	f8cd 8000 	str.w	r8, [sp]
 8013946:	a829      	add	r0, sp, #164	; 0xa4
 8013948:	f004 f80c 	bl	8017964 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801394c:	4643      	mov	r3, r8
 801394e:	4622      	mov	r2, r4
 8013950:	a949      	add	r1, sp, #292	; 0x124
 8013952:	f8cd 9000 	str.w	r9, [sp]
 8013956:	a839      	add	r0, sp, #228	; 0xe4
 8013958:	f004 f804 	bl	8017964 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801395c:	42af      	cmp	r7, r5
 801395e:	bfb5      	itete	lt
 8013960:	2300      	movlt	r3, #0
 8013962:	2301      	movge	r3, #1
 8013964:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013966:	930e      	strge	r3, [sp, #56]	; 0x38
 8013968:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801396a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801396e:	af12      	add	r7, sp, #72	; 0x48
 8013970:	bfb9      	ittee	lt
 8013972:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013974:	ac19      	addlt	r4, sp, #100	; 0x64
 8013976:	ad19      	addge	r5, sp, #100	; 0x64
 8013978:	ac29      	addge	r4, sp, #164	; 0xa4
 801397a:	e887 0003 	stmia.w	r7, {r0, r1}
 801397e:	b928      	cbnz	r0, 801398c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013980:	4b80      	ldr	r3, [pc, #512]	; (8013b84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013982:	6818      	ldr	r0, [r3, #0]
 8013984:	6803      	ldr	r3, [r0, #0]
 8013986:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013988:	4798      	blx	r3
 801398a:	6038      	str	r0, [r7, #0]
 801398c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801398e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013992:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013996:	930c      	str	r3, [sp, #48]	; 0x30
 8013998:	990c      	ldr	r1, [sp, #48]	; 0x30
 801399a:	6963      	ldr	r3, [r4, #20]
 801399c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801399e:	440b      	add	r3, r1
 80139a0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80139a4:	4408      	add	r0, r1
 80139a6:	b200      	sxth	r0, r0
 80139a8:	4283      	cmp	r3, r0
 80139aa:	900d      	str	r0, [sp, #52]	; 0x34
 80139ac:	f280 80dd 	bge.w	8013b6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80139b0:	428b      	cmp	r3, r1
 80139b2:	da08      	bge.n	80139c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80139b4:	2a00      	cmp	r2, #0
 80139b6:	dd06      	ble.n	80139c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80139b8:	1acb      	subs	r3, r1, r3
 80139ba:	429a      	cmp	r2, r3
 80139bc:	f2c0 80e4 	blt.w	8013b88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80139c0:	2b00      	cmp	r3, #0
 80139c2:	f300 80e2 	bgt.w	8013b8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80139c6:	6967      	ldr	r7, [r4, #20]
 80139c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80139ca:	443b      	add	r3, r7
 80139cc:	461f      	mov	r7, r3
 80139ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139d0:	1bdf      	subs	r7, r3, r7
 80139d2:	4297      	cmp	r7, r2
 80139d4:	bfa8      	it	ge
 80139d6:	4617      	movge	r7, r2
 80139d8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80139dc:	2f00      	cmp	r7, #0
 80139de:	f340 8166 	ble.w	8013cae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80139e2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80139e4:	6829      	ldr	r1, [r5, #0]
 80139e6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80139ea:	f9bb 3000 	ldrsh.w	r3, [fp]
 80139ee:	6820      	ldr	r0, [r4, #0]
 80139f0:	4411      	add	r1, r2
 80139f2:	4299      	cmp	r1, r3
 80139f4:	dd1a      	ble.n	8013a2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80139f6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80139fa:	440b      	add	r3, r1
 80139fc:	4402      	add	r2, r0
 80139fe:	b21b      	sxth	r3, r3
 8013a00:	429a      	cmp	r2, r3
 8013a02:	dc13      	bgt.n	8013a2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013a04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013a08:	681b      	ldr	r3, [r3, #0]
 8013a0a:	9206      	str	r2, [sp, #24]
 8013a0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013a0e:	9205      	str	r2, [sp, #20]
 8013a10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013a12:	9500      	str	r5, [sp, #0]
 8013a14:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013a18:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013a1a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013a1c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013a20:	a912      	add	r1, sp, #72	; 0x48
 8013a22:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013a26:	aa49      	add	r2, sp, #292	; 0x124
 8013a28:	4623      	mov	r3, r4
 8013a2a:	47c8      	blx	r9
 8013a2c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013a30:	441a      	add	r2, r3
 8013a32:	6963      	ldr	r3, [r4, #20]
 8013a34:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013a38:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013a3c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013a40:	68a1      	ldr	r1, [r4, #8]
 8013a42:	ed94 6a08 	vldr	s12, [r4, #32]
 8013a46:	6022      	str	r2, [r4, #0]
 8013a48:	3301      	adds	r3, #1
 8013a4a:	6163      	str	r3, [r4, #20]
 8013a4c:	69a3      	ldr	r3, [r4, #24]
 8013a4e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013a52:	3b01      	subs	r3, #1
 8013a54:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013a58:	61a3      	str	r3, [r4, #24]
 8013a5a:	6923      	ldr	r3, [r4, #16]
 8013a5c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013a60:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013a64:	edd4 6a07 	vldr	s13, [r4, #28]
 8013a68:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013a6c:	440b      	add	r3, r1
 8013a6e:	68e1      	ldr	r1, [r4, #12]
 8013a70:	6123      	str	r3, [r4, #16]
 8013a72:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013a76:	428b      	cmp	r3, r1
 8013a78:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a7c:	db15      	blt.n	8013aaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013a7e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013a82:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013a86:	3201      	adds	r2, #1
 8013a88:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a8c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013a90:	6022      	str	r2, [r4, #0]
 8013a92:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013a96:	1a5b      	subs	r3, r3, r1
 8013a98:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013a9c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013aa0:	6123      	str	r3, [r4, #16]
 8013aa2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013aa6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013aaa:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013aae:	441a      	add	r2, r3
 8013ab0:	696b      	ldr	r3, [r5, #20]
 8013ab2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013ab6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013aba:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013abe:	68a9      	ldr	r1, [r5, #8]
 8013ac0:	ed95 6a08 	vldr	s12, [r5, #32]
 8013ac4:	602a      	str	r2, [r5, #0]
 8013ac6:	3301      	adds	r3, #1
 8013ac8:	616b      	str	r3, [r5, #20]
 8013aca:	69ab      	ldr	r3, [r5, #24]
 8013acc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013ad0:	3b01      	subs	r3, #1
 8013ad2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013ad6:	61ab      	str	r3, [r5, #24]
 8013ad8:	692b      	ldr	r3, [r5, #16]
 8013ada:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013ade:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013ae2:	edd5 6a07 	vldr	s13, [r5, #28]
 8013ae6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013aea:	440b      	add	r3, r1
 8013aec:	68e9      	ldr	r1, [r5, #12]
 8013aee:	612b      	str	r3, [r5, #16]
 8013af0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013af4:	428b      	cmp	r3, r1
 8013af6:	edc5 6a07 	vstr	s13, [r5, #28]
 8013afa:	db15      	blt.n	8013b28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013afc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013b00:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013b04:	3201      	adds	r2, #1
 8013b06:	edc5 6a07 	vstr	s13, [r5, #28]
 8013b0a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013b0e:	602a      	str	r2, [r5, #0]
 8013b10:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013b14:	1a5b      	subs	r3, r3, r1
 8013b16:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013b1a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013b1e:	612b      	str	r3, [r5, #16]
 8013b20:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013b24:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013b28:	3f01      	subs	r7, #1
 8013b2a:	e757      	b.n	80139dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013b2c:	4299      	cmp	r1, r3
 8013b2e:	dc13      	bgt.n	8013b58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013b30:	429a      	cmp	r2, r3
 8013b32:	da14      	bge.n	8013b5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013b34:	2502      	movs	r5, #2
 8013b36:	2703      	movs	r7, #3
 8013b38:	46a9      	mov	r9, r5
 8013b3a:	f04f 0800 	mov.w	r8, #0
 8013b3e:	f04f 0a01 	mov.w	sl, #1
 8013b42:	e6ef      	b.n	8013924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013b44:	2501      	movs	r5, #1
 8013b46:	2700      	movs	r7, #0
 8013b48:	46a9      	mov	r9, r5
 8013b4a:	46b8      	mov	r8, r7
 8013b4c:	f04f 0a02 	mov.w	sl, #2
 8013b50:	e6e8      	b.n	8013924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013b52:	2501      	movs	r5, #1
 8013b54:	2702      	movs	r7, #2
 8013b56:	e6e1      	b.n	801391c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013b58:	2500      	movs	r5, #0
 8013b5a:	2701      	movs	r7, #1
 8013b5c:	e7f4      	b.n	8013b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013b5e:	2702      	movs	r7, #2
 8013b60:	2503      	movs	r5, #3
 8013b62:	f04f 0900 	mov.w	r9, #0
 8013b66:	46b8      	mov	r8, r7
 8013b68:	e7e9      	b.n	8013b3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013b6a:	4613      	mov	r3, r2
 8013b6c:	e728      	b.n	80139c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013b6e:	bf00      	nop
 8013b70:	20012e74 	.word	0x20012e74
 8013b74:	fffd8f01 	.word	0xfffd8f01
 8013b78:	00027100 	.word	0x00027100
 8013b7c:	0004e1ff 	.word	0x0004e1ff
 8013b80:	0004e1fe 	.word	0x0004e1fe
 8013b84:	20012e7c 	.word	0x20012e7c
 8013b88:	4613      	mov	r3, r2
 8013b8a:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013b8c:	9111      	str	r1, [sp, #68]	; 0x44
 8013b8e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013b92:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013b96:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013b98:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013b9c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013ba0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013ba4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013ba8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013bac:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013bb0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013bb4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013bb8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013bbc:	469e      	mov	lr, r3
 8013bbe:	469c      	mov	ip, r3
 8013bc0:	f04f 0900 	mov.w	r9, #0
 8013bc4:	f1bc 0f00 	cmp.w	ip, #0
 8013bc8:	d147      	bne.n	8013c5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013bca:	eb03 0c07 	add.w	ip, r3, r7
 8013bce:	1ad7      	subs	r7, r2, r3
 8013bd0:	f1b9 0f00 	cmp.w	r9, #0
 8013bd4:	d009      	beq.n	8013bea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013bd6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013bda:	9029      	str	r0, [sp, #164]	; 0xa4
 8013bdc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013be0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013be4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013be8:	912d      	str	r1, [sp, #180]	; 0xb4
 8013bea:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013bec:	9111      	str	r1, [sp, #68]	; 0x44
 8013bee:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013bf2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013bf6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013bfa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013bfe:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013c02:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013c06:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013c0a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013c0e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013c12:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013c16:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013c1a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013c1e:	f04f 0800 	mov.w	r8, #0
 8013c22:	f1be 0f00 	cmp.w	lr, #0
 8013c26:	d031      	beq.n	8013c8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013c28:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013c2a:	4431      	add	r1, r6
 8013c2c:	4549      	cmp	r1, r9
 8013c2e:	4450      	add	r0, sl
 8013c30:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013c34:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013c38:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013c3c:	db08      	blt.n	8013c50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013c3e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013c42:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013c46:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013c4a:	3001      	adds	r0, #1
 8013c4c:	eba1 0109 	sub.w	r1, r1, r9
 8013c50:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013c54:	f04f 0801 	mov.w	r8, #1
 8013c58:	e7e3      	b.n	8013c22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013c5a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013c5c:	4431      	add	r1, r6
 8013c5e:	4541      	cmp	r1, r8
 8013c60:	4450      	add	r0, sl
 8013c62:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013c66:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013c6a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013c6e:	db08      	blt.n	8013c82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013c70:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013c74:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013c78:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013c7c:	3001      	adds	r0, #1
 8013c7e:	eba1 0108 	sub.w	r1, r1, r8
 8013c82:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013c86:	f04f 0901 	mov.w	r9, #1
 8013c8a:	e79b      	b.n	8013bc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013c8c:	449c      	add	ip, r3
 8013c8e:	1aff      	subs	r7, r7, r3
 8013c90:	f1b8 0f00 	cmp.w	r8, #0
 8013c94:	d009      	beq.n	8013caa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013c96:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013c9a:	9019      	str	r0, [sp, #100]	; 0x64
 8013c9c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013ca0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013ca4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013ca8:	911d      	str	r1, [sp, #116]	; 0x74
 8013caa:	1ad2      	subs	r2, r2, r3
 8013cac:	e68b      	b.n	80139c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013cae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013cb0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013cb2:	2b00      	cmp	r3, #0
 8013cb4:	f000 80d1 	beq.w	8013e5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013cb8:	ad19      	add	r5, sp, #100	; 0x64
 8013cba:	ac39      	add	r4, sp, #228	; 0xe4
 8013cbc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013cbe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013cc2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013cc6:	930c      	str	r3, [sp, #48]	; 0x30
 8013cc8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013cca:	6963      	ldr	r3, [r4, #20]
 8013ccc:	440b      	add	r3, r1
 8013cce:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013cd2:	4408      	add	r0, r1
 8013cd4:	b200      	sxth	r0, r0
 8013cd6:	4283      	cmp	r3, r0
 8013cd8:	900d      	str	r0, [sp, #52]	; 0x34
 8013cda:	f280 80c1 	bge.w	8013e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8013cde:	428b      	cmp	r3, r1
 8013ce0:	da08      	bge.n	8013cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013ce2:	2a00      	cmp	r2, #0
 8013ce4:	dd06      	ble.n	8013cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013ce6:	1acb      	subs	r3, r1, r3
 8013ce8:	429a      	cmp	r2, r3
 8013cea:	f2c0 80bb 	blt.w	8013e64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013cee:	2b00      	cmp	r3, #0
 8013cf0:	f300 80b9 	bgt.w	8013e66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013cf4:	6967      	ldr	r7, [r4, #20]
 8013cf6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013cf8:	443b      	add	r3, r7
 8013cfa:	461f      	mov	r7, r3
 8013cfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013cfe:	1bdf      	subs	r7, r3, r7
 8013d00:	4297      	cmp	r7, r2
 8013d02:	bfa8      	it	ge
 8013d04:	4617      	movge	r7, r2
 8013d06:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013d0a:	2f00      	cmp	r7, #0
 8013d0c:	f340 813c 	ble.w	8013f88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013d10:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013d12:	6829      	ldr	r1, [r5, #0]
 8013d14:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d18:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013d1c:	6820      	ldr	r0, [r4, #0]
 8013d1e:	4411      	add	r1, r2
 8013d20:	4299      	cmp	r1, r3
 8013d22:	dd1a      	ble.n	8013d5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013d24:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013d28:	440b      	add	r3, r1
 8013d2a:	4402      	add	r2, r0
 8013d2c:	b21b      	sxth	r3, r3
 8013d2e:	429a      	cmp	r2, r3
 8013d30:	dc13      	bgt.n	8013d5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013d32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013d36:	681b      	ldr	r3, [r3, #0]
 8013d38:	9206      	str	r2, [sp, #24]
 8013d3a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013d3c:	9205      	str	r2, [sp, #20]
 8013d3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013d40:	9500      	str	r5, [sp, #0]
 8013d42:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013d46:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013d48:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013d4a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013d4e:	a912      	add	r1, sp, #72	; 0x48
 8013d50:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013d54:	aa49      	add	r2, sp, #292	; 0x124
 8013d56:	4623      	mov	r3, r4
 8013d58:	47c8      	blx	r9
 8013d5a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013d5e:	441a      	add	r2, r3
 8013d60:	6963      	ldr	r3, [r4, #20]
 8013d62:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013d66:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013d6a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013d6e:	68a1      	ldr	r1, [r4, #8]
 8013d70:	ed94 6a08 	vldr	s12, [r4, #32]
 8013d74:	6022      	str	r2, [r4, #0]
 8013d76:	3301      	adds	r3, #1
 8013d78:	6163      	str	r3, [r4, #20]
 8013d7a:	69a3      	ldr	r3, [r4, #24]
 8013d7c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013d80:	3b01      	subs	r3, #1
 8013d82:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013d86:	61a3      	str	r3, [r4, #24]
 8013d88:	6923      	ldr	r3, [r4, #16]
 8013d8a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013d8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013d92:	edd4 6a07 	vldr	s13, [r4, #28]
 8013d96:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013d9a:	440b      	add	r3, r1
 8013d9c:	68e1      	ldr	r1, [r4, #12]
 8013d9e:	6123      	str	r3, [r4, #16]
 8013da0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013da4:	428b      	cmp	r3, r1
 8013da6:	edc4 6a07 	vstr	s13, [r4, #28]
 8013daa:	db15      	blt.n	8013dd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013dac:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013db0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013db4:	3201      	adds	r2, #1
 8013db6:	edc4 6a07 	vstr	s13, [r4, #28]
 8013dba:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013dbe:	6022      	str	r2, [r4, #0]
 8013dc0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013dc4:	1a5b      	subs	r3, r3, r1
 8013dc6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013dca:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013dce:	6123      	str	r3, [r4, #16]
 8013dd0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013dd4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013dd8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013ddc:	441a      	add	r2, r3
 8013dde:	696b      	ldr	r3, [r5, #20]
 8013de0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013de4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013de8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013dec:	68a9      	ldr	r1, [r5, #8]
 8013dee:	ed95 6a08 	vldr	s12, [r5, #32]
 8013df2:	602a      	str	r2, [r5, #0]
 8013df4:	3301      	adds	r3, #1
 8013df6:	616b      	str	r3, [r5, #20]
 8013df8:	69ab      	ldr	r3, [r5, #24]
 8013dfa:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013dfe:	3b01      	subs	r3, #1
 8013e00:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013e04:	61ab      	str	r3, [r5, #24]
 8013e06:	692b      	ldr	r3, [r5, #16]
 8013e08:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013e0c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013e10:	edd5 6a07 	vldr	s13, [r5, #28]
 8013e14:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013e18:	440b      	add	r3, r1
 8013e1a:	68e9      	ldr	r1, [r5, #12]
 8013e1c:	612b      	str	r3, [r5, #16]
 8013e1e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013e22:	428b      	cmp	r3, r1
 8013e24:	edc5 6a07 	vstr	s13, [r5, #28]
 8013e28:	db15      	blt.n	8013e56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013e2a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013e2e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013e32:	3201      	adds	r2, #1
 8013e34:	edc5 6a07 	vstr	s13, [r5, #28]
 8013e38:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013e3c:	602a      	str	r2, [r5, #0]
 8013e3e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013e42:	1a5b      	subs	r3, r3, r1
 8013e44:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013e48:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013e4c:	612b      	str	r3, [r5, #16]
 8013e4e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013e52:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013e56:	3f01      	subs	r7, #1
 8013e58:	e757      	b.n	8013d0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013e5a:	ad39      	add	r5, sp, #228	; 0xe4
 8013e5c:	ac19      	add	r4, sp, #100	; 0x64
 8013e5e:	e72d      	b.n	8013cbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013e60:	4613      	mov	r3, r2
 8013e62:	e744      	b.n	8013cee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013e64:	4613      	mov	r3, r2
 8013e66:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8013e6a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8013e6c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8013e70:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8013e74:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8013e78:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8013e7c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8013e80:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8013e84:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8013e88:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8013e8a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8013e8e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013e92:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013e96:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8013e9a:	960e      	str	r6, [sp, #56]	; 0x38
 8013e9c:	469e      	mov	lr, r3
 8013e9e:	461f      	mov	r7, r3
 8013ea0:	f04f 0900 	mov.w	r9, #0
 8013ea4:	2f00      	cmp	r7, #0
 8013ea6:	d146      	bne.n	8013f36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013ea8:	449c      	add	ip, r3
 8013eaa:	1ad7      	subs	r7, r2, r3
 8013eac:	f1b9 0f00 	cmp.w	r9, #0
 8013eb0:	d009      	beq.n	8013ec6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013eb2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013eb6:	9039      	str	r0, [sp, #228]	; 0xe4
 8013eb8:	913d      	str	r1, [sp, #244]	; 0xf4
 8013eba:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013ebe:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013ec2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013ec6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013ec8:	910e      	str	r1, [sp, #56]	; 0x38
 8013eca:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013ece:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013ed2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013ed6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013eda:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013ede:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013ee2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013ee6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013eea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013eee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013ef2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013ef6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013efa:	f04f 0800 	mov.w	r8, #0
 8013efe:	f1be 0f00 	cmp.w	lr, #0
 8013f02:	d030      	beq.n	8013f66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013f04:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013f06:	4431      	add	r1, r6
 8013f08:	4549      	cmp	r1, r9
 8013f0a:	4450      	add	r0, sl
 8013f0c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013f10:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013f14:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013f18:	db08      	blt.n	8013f2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013f1a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013f1e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013f22:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013f26:	3001      	adds	r0, #1
 8013f28:	eba1 0109 	sub.w	r1, r1, r9
 8013f2c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013f30:	f04f 0801 	mov.w	r8, #1
 8013f34:	e7e3      	b.n	8013efe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013f36:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013f38:	4431      	add	r1, r6
 8013f3a:	4541      	cmp	r1, r8
 8013f3c:	4450      	add	r0, sl
 8013f3e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013f42:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013f46:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013f4a:	db08      	blt.n	8013f5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013f4c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013f50:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013f54:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013f58:	3001      	adds	r0, #1
 8013f5a:	eba1 0108 	sub.w	r1, r1, r8
 8013f5e:	3f01      	subs	r7, #1
 8013f60:	f04f 0901 	mov.w	r9, #1
 8013f64:	e79e      	b.n	8013ea4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013f66:	449c      	add	ip, r3
 8013f68:	1aff      	subs	r7, r7, r3
 8013f6a:	f1b8 0f00 	cmp.w	r8, #0
 8013f6e:	d009      	beq.n	8013f84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013f70:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013f74:	9019      	str	r0, [sp, #100]	; 0x64
 8013f76:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013f7a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013f7e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013f82:	911d      	str	r1, [sp, #116]	; 0x74
 8013f84:	1ad2      	subs	r2, r2, r3
 8013f86:	e6b5      	b.n	8013cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013f88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013f8a:	681b      	ldr	r3, [r3, #0]
 8013f8c:	b923      	cbnz	r3, 8013f98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013f8e:	4b04      	ldr	r3, [pc, #16]	; (8013fa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013f90:	6818      	ldr	r0, [r3, #0]
 8013f92:	6803      	ldr	r3, [r0, #0]
 8013f94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f96:	4798      	blx	r3
 8013f98:	b05b      	add	sp, #364	; 0x16c
 8013f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f9e:	bf00      	nop
 8013fa0:	20012e7c 	.word	0x20012e7c

08013fa4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013fa4:	b570      	push	{r4, r5, r6, lr}
 8013fa6:	4604      	mov	r4, r0
 8013fa8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013fac:	9805      	ldr	r0, [sp, #20]
 8013fae:	6061      	str	r1, [r4, #4]
 8013fb0:	2500      	movs	r5, #0
 8013fb2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013fb6:	8263      	strh	r3, [r4, #18]
 8013fb8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013fbc:	8025      	strh	r5, [r4, #0]
 8013fbe:	7221      	strb	r1, [r4, #8]
 8013fc0:	7266      	strb	r6, [r4, #9]
 8013fc2:	60e0      	str	r0, [r4, #12]
 8013fc4:	8222      	strh	r2, [r4, #16]
 8013fc6:	82a3      	strh	r3, [r4, #20]
 8013fc8:	82e5      	strh	r5, [r4, #22]
 8013fca:	8325      	strh	r5, [r4, #24]
 8013fcc:	8365      	strh	r5, [r4, #26]
 8013fce:	83a5      	strh	r5, [r4, #28]
 8013fd0:	83e5      	strh	r5, [r4, #30]
 8013fd2:	8425      	strh	r5, [r4, #32]
 8013fd4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013fd8:	b32e      	cbz	r6, 8014026 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013fda:	6803      	ldr	r3, [r0, #0]
 8013fdc:	695b      	ldr	r3, [r3, #20]
 8013fde:	4798      	blx	r3
 8013fe0:	4606      	mov	r6, r0
 8013fe2:	b300      	cbz	r0, 8014026 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013fe4:	68e0      	ldr	r0, [r4, #12]
 8013fe6:	6803      	ldr	r3, [r0, #0]
 8013fe8:	4631      	mov	r1, r6
 8013fea:	68db      	ldr	r3, [r3, #12]
 8013fec:	4798      	blx	r3
 8013fee:	4605      	mov	r5, r0
 8013ff0:	b1c8      	cbz	r0, 8014026 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013ff2:	7b43      	ldrb	r3, [r0, #13]
 8013ff4:	7a82      	ldrb	r2, [r0, #10]
 8013ff6:	005b      	lsls	r3, r3, #1
 8013ff8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013ffc:	4313      	orrs	r3, r2
 8013ffe:	8423      	strh	r3, [r4, #32]
 8014000:	7a63      	ldrb	r3, [r4, #9]
 8014002:	2b06      	cmp	r3, #6
 8014004:	d10f      	bne.n	8014026 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014006:	68e0      	ldr	r0, [r4, #12]
 8014008:	6803      	ldr	r3, [r0, #0]
 801400a:	462a      	mov	r2, r5
 801400c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801400e:	4631      	mov	r1, r6
 8014010:	4798      	blx	r3
 8014012:	7b6b      	ldrb	r3, [r5, #13]
 8014014:	005b      	lsls	r3, r3, #1
 8014016:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801401a:	7aab      	ldrb	r3, [r5, #10]
 801401c:	4313      	orrs	r3, r2
 801401e:	4418      	add	r0, r3
 8014020:	8c23      	ldrh	r3, [r4, #32]
 8014022:	4418      	add	r0, r3
 8014024:	8420      	strh	r0, [r4, #32]
 8014026:	4620      	mov	r0, r4
 8014028:	bd70      	pop	{r4, r5, r6, pc}

0801402a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801402a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801402e:	2400      	movs	r4, #0
 8014030:	b085      	sub	sp, #20
 8014032:	4681      	mov	r9, r0
 8014034:	4688      	mov	r8, r1
 8014036:	4692      	mov	sl, r2
 8014038:	469b      	mov	fp, r3
 801403a:	4627      	mov	r7, r4
 801403c:	4625      	mov	r5, r4
 801403e:	4626      	mov	r6, r4
 8014040:	4554      	cmp	r4, sl
 8014042:	da2a      	bge.n	801409a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014044:	2300      	movs	r3, #0
 8014046:	9303      	str	r3, [sp, #12]
 8014048:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801404c:	429d      	cmp	r5, r3
 801404e:	d004      	beq.n	801405a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014050:	f242 030b 	movw	r3, #8203	; 0x200b
 8014054:	429d      	cmp	r5, r3
 8014056:	bf18      	it	ne
 8014058:	462f      	movne	r7, r5
 801405a:	ab03      	add	r3, sp, #12
 801405c:	4642      	mov	r2, r8
 801405e:	4659      	mov	r1, fp
 8014060:	4648      	mov	r0, r9
 8014062:	f003 f965 	bl	8017330 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014066:	4605      	mov	r5, r0
 8014068:	b1b8      	cbz	r0, 801409a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801406a:	280a      	cmp	r0, #10
 801406c:	d015      	beq.n	801409a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801406e:	9a03      	ldr	r2, [sp, #12]
 8014070:	b18a      	cbz	r2, 8014096 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014072:	7b50      	ldrb	r0, [r2, #13]
 8014074:	7a93      	ldrb	r3, [r2, #10]
 8014076:	8895      	ldrh	r5, [r2, #4]
 8014078:	0040      	lsls	r0, r0, #1
 801407a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801407e:	4303      	orrs	r3, r0
 8014080:	9301      	str	r3, [sp, #4]
 8014082:	f8d8 3000 	ldr.w	r3, [r8]
 8014086:	4639      	mov	r1, r7
 8014088:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801408a:	4640      	mov	r0, r8
 801408c:	4798      	blx	r3
 801408e:	9b01      	ldr	r3, [sp, #4]
 8014090:	4418      	add	r0, r3
 8014092:	4406      	add	r6, r0
 8014094:	b2b6      	uxth	r6, r6
 8014096:	3401      	adds	r4, #1
 8014098:	e7d2      	b.n	8014040 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801409a:	4630      	mov	r0, r6
 801409c:	b005      	add	sp, #20
 801409e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080140a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80140a2:	2a02      	cmp	r2, #2
 80140a4:	b530      	push	{r4, r5, lr}
 80140a6:	d011      	beq.n	80140cc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80140a8:	2a03      	cmp	r2, #3
 80140aa:	d01c      	beq.n	80140e6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80140ac:	2a01      	cmp	r2, #1
 80140ae:	d10c      	bne.n	80140ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80140b0:	888b      	ldrh	r3, [r1, #4]
 80140b2:	8801      	ldrh	r1, [r0, #0]
 80140b4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80140b8:	8844      	ldrh	r4, [r0, #2]
 80140ba:	8004      	strh	r4, [r0, #0]
 80140bc:	1a5b      	subs	r3, r3, r1
 80140be:	1a9b      	subs	r3, r3, r2
 80140c0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80140c4:	8043      	strh	r3, [r0, #2]
 80140c6:	8081      	strh	r1, [r0, #4]
 80140c8:	80c2      	strh	r2, [r0, #6]
 80140ca:	bd30      	pop	{r4, r5, pc}
 80140cc:	88cb      	ldrh	r3, [r1, #6]
 80140ce:	8842      	ldrh	r2, [r0, #2]
 80140d0:	1a9b      	subs	r3, r3, r2
 80140d2:	88c2      	ldrh	r2, [r0, #6]
 80140d4:	1a9b      	subs	r3, r3, r2
 80140d6:	888a      	ldrh	r2, [r1, #4]
 80140d8:	8801      	ldrh	r1, [r0, #0]
 80140da:	8043      	strh	r3, [r0, #2]
 80140dc:	1a52      	subs	r2, r2, r1
 80140de:	8881      	ldrh	r1, [r0, #4]
 80140e0:	1a52      	subs	r2, r2, r1
 80140e2:	8002      	strh	r2, [r0, #0]
 80140e4:	e7f1      	b.n	80140ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80140e6:	88cb      	ldrh	r3, [r1, #6]
 80140e8:	8841      	ldrh	r1, [r0, #2]
 80140ea:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80140ee:	f9b0 5000 	ldrsh.w	r5, [r0]
 80140f2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80140f6:	8045      	strh	r5, [r0, #2]
 80140f8:	1a5b      	subs	r3, r3, r1
 80140fa:	1a9b      	subs	r3, r3, r2
 80140fc:	8003      	strh	r3, [r0, #0]
 80140fe:	8082      	strh	r2, [r0, #4]
 8014100:	80c4      	strh	r4, [r0, #6]
 8014102:	e7e2      	b.n	80140ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014108:	b09f      	sub	sp, #124	; 0x7c
 801410a:	9116      	str	r1, [sp, #88]	; 0x58
 801410c:	9317      	str	r3, [sp, #92]	; 0x5c
 801410e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014110:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014112:	8809      	ldrh	r1, [r1, #0]
 8014114:	889b      	ldrh	r3, [r3, #4]
 8014116:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801411a:	9212      	str	r2, [sp, #72]	; 0x48
 801411c:	440b      	add	r3, r1
 801411e:	b21b      	sxth	r3, r3
 8014120:	9310      	str	r3, [sp, #64]	; 0x40
 8014122:	f8d8 3000 	ldr.w	r3, [r8]
 8014126:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801412a:	7b19      	ldrb	r1, [r3, #12]
 801412c:	7adb      	ldrb	r3, [r3, #11]
 801412e:	9011      	str	r0, [sp, #68]	; 0x44
 8014130:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014134:	9114      	str	r1, [sp, #80]	; 0x50
 8014136:	9315      	str	r3, [sp, #84]	; 0x54
 8014138:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801413c:	2a00      	cmp	r2, #0
 801413e:	d06a      	beq.n	8014216 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014140:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014144:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014146:	2b06      	cmp	r3, #6
 8014148:	bf14      	ite	ne
 801414a:	2301      	movne	r3, #1
 801414c:	2302      	moveq	r3, #2
 801414e:	4413      	add	r3, r2
 8014150:	f04f 0900 	mov.w	r9, #0
 8014154:	930f      	str	r3, [sp, #60]	; 0x3c
 8014156:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801415a:	464c      	mov	r4, r9
 801415c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014160:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014164:	4293      	cmp	r3, r2
 8014166:	f280 808f 	bge.w	8014288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801416a:	2300      	movs	r3, #0
 801416c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014170:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014174:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014178:	429c      	cmp	r4, r3
 801417a:	d006      	beq.n	801418a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801417c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801417e:	f242 020b 	movw	r2, #8203	; 0x200b
 8014182:	4294      	cmp	r4, r2
 8014184:	bf18      	it	ne
 8014186:	4623      	movne	r3, r4
 8014188:	930d      	str	r3, [sp, #52]	; 0x34
 801418a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801418c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801418e:	f8d8 2000 	ldr.w	r2, [r8]
 8014192:	428b      	cmp	r3, r1
 8014194:	db41      	blt.n	801421a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014196:	6813      	ldr	r3, [r2, #0]
 8014198:	4610      	mov	r0, r2
 801419a:	695b      	ldr	r3, [r3, #20]
 801419c:	4798      	blx	r3
 801419e:	4604      	mov	r4, r0
 80141a0:	f8d8 0000 	ldr.w	r0, [r8]
 80141a4:	6803      	ldr	r3, [r0, #0]
 80141a6:	aa1d      	add	r2, sp, #116	; 0x74
 80141a8:	689d      	ldr	r5, [r3, #8]
 80141aa:	4621      	mov	r1, r4
 80141ac:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80141b0:	47a8      	blx	r5
 80141b2:	901c      	str	r0, [sp, #112]	; 0x70
 80141b4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80141b8:	429c      	cmp	r4, r3
 80141ba:	f000 80eb 	beq.w	8014394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80141be:	f242 030b 	movw	r3, #8203	; 0x200b
 80141c2:	429c      	cmp	r4, r3
 80141c4:	f000 80e6 	beq.w	8014394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80141c8:	2c00      	cmp	r4, #0
 80141ca:	f000 80f8 	beq.w	80143be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80141ce:	2c0a      	cmp	r4, #10
 80141d0:	d060      	beq.n	8014294 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80141d2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80141d4:	b36a      	cbz	r2, 8014232 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80141d6:	8894      	ldrh	r4, [r2, #4]
 80141d8:	f1bb 0f00 	cmp.w	fp, #0
 80141dc:	d03b      	beq.n	8014256 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80141de:	f892 900d 	ldrb.w	r9, [r2, #13]
 80141e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80141e6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80141ea:	f892 900a 	ldrb.w	r9, [r2, #10]
 80141ee:	f1bb 0f01 	cmp.w	fp, #1
 80141f2:	ea49 0903 	orr.w	r9, r9, r3
 80141f6:	d134      	bne.n	8014262 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80141f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141fa:	eba6 0609 	sub.w	r6, r6, r9
 80141fe:	2b00      	cmp	r3, #0
 8014200:	d14f      	bne.n	80142a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014202:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014204:	eb09 0306 	add.w	r3, r9, r6
 8014208:	4413      	add	r3, r2
 801420a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801420c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014210:	4293      	cmp	r3, r2
 8014212:	da51      	bge.n	80142b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014214:	e038      	b.n	8014288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014216:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014218:	e79a      	b.n	8014150 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801421a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801421e:	9301      	str	r3, [sp, #4]
 8014220:	ab1d      	add	r3, sp, #116	; 0x74
 8014222:	9300      	str	r3, [sp, #0]
 8014224:	4659      	mov	r1, fp
 8014226:	ab1c      	add	r3, sp, #112	; 0x70
 8014228:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801422a:	f003 f8ca 	bl	80173c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801422e:	4604      	mov	r4, r0
 8014230:	e7c0      	b.n	80141b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014232:	f8d8 0000 	ldr.w	r0, [r8]
 8014236:	6803      	ldr	r3, [r0, #0]
 8014238:	691b      	ldr	r3, [r3, #16]
 801423a:	4798      	blx	r3
 801423c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014240:	4298      	cmp	r0, r3
 8014242:	f000 80a7 	beq.w	8014394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014246:	f242 030b 	movw	r3, #8203	; 0x200b
 801424a:	4298      	cmp	r0, r3
 801424c:	f000 80a2 	beq.w	8014394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014250:	f1bb 0f00 	cmp.w	fp, #0
 8014254:	d100      	bne.n	8014258 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014256:	444e      	add	r6, r9
 8014258:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801425a:	2a00      	cmp	r2, #0
 801425c:	d1bf      	bne.n	80141de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801425e:	4691      	mov	r9, r2
 8014260:	e098      	b.n	8014394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014262:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014264:	2b00      	cmp	r3, #0
 8014266:	f000 80ac 	beq.w	80143c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801426a:	f1bb 0f00 	cmp.w	fp, #0
 801426e:	d118      	bne.n	80142a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014270:	f8d8 0000 	ldr.w	r0, [r8]
 8014274:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014276:	6803      	ldr	r3, [r0, #0]
 8014278:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801427a:	4798      	blx	r3
 801427c:	4406      	add	r6, r0
 801427e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014280:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014282:	1af3      	subs	r3, r6, r3
 8014284:	4293      	cmp	r3, r2
 8014286:	dd17      	ble.n	80142b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014288:	2c00      	cmp	r4, #0
 801428a:	f000 8098 	beq.w	80143be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801428e:	2c0a      	cmp	r4, #10
 8014290:	f040 8086 	bne.w	80143a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8014294:	240a      	movs	r4, #10
 8014296:	fab4 f084 	clz	r0, r4
 801429a:	0940      	lsrs	r0, r0, #5
 801429c:	b01f      	add	sp, #124	; 0x7c
 801429e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80142a2:	f8d8 0000 	ldr.w	r0, [r8]
 80142a6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80142a8:	6803      	ldr	r3, [r0, #0]
 80142aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80142ac:	4798      	blx	r3
 80142ae:	f1bb 0f01 	cmp.w	fp, #1
 80142b2:	eba6 0600 	sub.w	r6, r6, r0
 80142b6:	d0a4      	beq.n	8014202 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80142b8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80142ba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80142bc:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80142c0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80142c4:	7b43      	ldrb	r3, [r0, #13]
 80142c6:	015b      	lsls	r3, r3, #5
 80142c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80142cc:	7983      	ldrb	r3, [r0, #6]
 80142ce:	4431      	add	r1, r6
 80142d0:	4313      	orrs	r3, r2
 80142d2:	440b      	add	r3, r1
 80142d4:	42bb      	cmp	r3, r7
 80142d6:	db5d      	blt.n	8014394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80142d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142da:	4299      	cmp	r1, r3
 80142dc:	da5a      	bge.n	8014394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80142de:	f8d8 0000 	ldr.w	r0, [r8]
 80142e2:	6803      	ldr	r3, [r0, #0]
 80142e4:	42b7      	cmp	r7, r6
 80142e6:	bfc8      	it	gt
 80142e8:	1bbf      	subgt	r7, r7, r6
 80142ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80142ec:	bfcc      	ite	gt
 80142ee:	b2bf      	uxthgt	r7, r7
 80142f0:	2700      	movle	r7, #0
 80142f2:	4798      	blx	r3
 80142f4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80142f6:	7b5a      	ldrb	r2, [r3, #13]
 80142f8:	00d1      	lsls	r1, r2, #3
 80142fa:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80142fe:	7a19      	ldrb	r1, [r3, #8]
 8014300:	4329      	orrs	r1, r5
 8014302:	0655      	lsls	r5, r2, #25
 8014304:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014306:	bf44      	itt	mi
 8014308:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801430c:	b209      	sxthmi	r1, r1
 801430e:	1945      	adds	r5, r0, r5
 8014310:	1a6d      	subs	r5, r5, r1
 8014312:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014314:	b2ad      	uxth	r5, r5
 8014316:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801431a:	fa0f fa85 	sxth.w	sl, r5
 801431e:	4551      	cmp	r1, sl
 8014320:	dd3c      	ble.n	801439c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014322:	0112      	lsls	r2, r2, #4
 8014324:	79d8      	ldrb	r0, [r3, #7]
 8014326:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801432a:	4302      	orrs	r2, r0
 801432c:	4492      	add	sl, r2
 801432e:	4551      	cmp	r1, sl
 8014330:	dc30      	bgt.n	8014394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014332:	1b4d      	subs	r5, r1, r5
 8014334:	b22d      	sxth	r5, r5
 8014336:	468a      	mov	sl, r1
 8014338:	9319      	str	r3, [sp, #100]	; 0x64
 801433a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801433c:	f8d8 0000 	ldr.w	r0, [r8]
 8014340:	681a      	ldr	r2, [r3, #0]
 8014342:	6801      	ldr	r1, [r0, #0]
 8014344:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014346:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014348:	9313      	str	r3, [sp, #76]	; 0x4c
 801434a:	9218      	str	r2, [sp, #96]	; 0x60
 801434c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801434e:	4788      	blx	r1
 8014350:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014354:	910b      	str	r1, [sp, #44]	; 0x2c
 8014356:	f898 100e 	ldrb.w	r1, [r8, #14]
 801435a:	910a      	str	r1, [sp, #40]	; 0x28
 801435c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014360:	9109      	str	r1, [sp, #36]	; 0x24
 8014362:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014366:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014368:	9305      	str	r3, [sp, #20]
 801436a:	b2ad      	uxth	r5, r5
 801436c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8014370:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8014374:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014376:	9304      	str	r3, [sp, #16]
 8014378:	4437      	add	r7, r6
 801437a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801437c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801437e:	9206      	str	r2, [sp, #24]
 8014380:	b23f      	sxth	r7, r7
 8014382:	f8cd a004 	str.w	sl, [sp, #4]
 8014386:	9700      	str	r7, [sp, #0]
 8014388:	681a      	ldr	r2, [r3, #0]
 801438a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801438c:	685b      	ldr	r3, [r3, #4]
 801438e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014390:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014392:	47a8      	blx	r5
 8014394:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014396:	3301      	adds	r3, #1
 8014398:	930e      	str	r3, [sp, #56]	; 0x38
 801439a:	e6e1      	b.n	8014160 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801439c:	2500      	movs	r5, #0
 801439e:	e7cb      	b.n	8014338 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80143a0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80143a2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80143a4:	3501      	adds	r5, #1
 80143a6:	429d      	cmp	r5, r3
 80143a8:	f6bf af75 	bge.w	8014296 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80143ac:	4659      	mov	r1, fp
 80143ae:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80143b0:	f7f3 fdcc 	bl	8007f4c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80143b4:	4604      	mov	r4, r0
 80143b6:	b110      	cbz	r0, 80143be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80143b8:	280a      	cmp	r0, #10
 80143ba:	d1f2      	bne.n	80143a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80143bc:	e76a      	b.n	8014294 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80143be:	2400      	movs	r4, #0
 80143c0:	e769      	b.n	8014296 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80143c2:	f1bb 0f00 	cmp.w	fp, #0
 80143c6:	f43f af5a 	beq.w	801427e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80143ca:	e775      	b.n	80142b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080143cc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80143cc:	b530      	push	{r4, r5, lr}
 80143ce:	8ac4      	ldrh	r4, [r0, #22]
 80143d0:	8b45      	ldrh	r5, [r0, #26]
 80143d2:	8343      	strh	r3, [r0, #26]
 80143d4:	442c      	add	r4, r5
 80143d6:	1ae4      	subs	r4, r4, r3
 80143d8:	82c4      	strh	r4, [r0, #22]
 80143da:	8b83      	ldrh	r3, [r0, #28]
 80143dc:	8b04      	ldrh	r4, [r0, #24]
 80143de:	4422      	add	r2, r4
 80143e0:	440c      	add	r4, r1
 80143e2:	1a59      	subs	r1, r3, r1
 80143e4:	83c2      	strh	r2, [r0, #30]
 80143e6:	8304      	strh	r4, [r0, #24]
 80143e8:	8381      	strh	r1, [r0, #28]
 80143ea:	bd30      	pop	{r4, r5, pc}

080143ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80143ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143f0:	4604      	mov	r4, r0
 80143f2:	8a47      	ldrh	r7, [r0, #18]
 80143f4:	68c0      	ldr	r0, [r0, #12]
 80143f6:	6803      	ldr	r3, [r0, #0]
 80143f8:	b085      	sub	sp, #20
 80143fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80143fc:	4798      	blx	r3
 80143fe:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014402:	7a63      	ldrb	r3, [r4, #9]
 8014404:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014408:	42b7      	cmp	r7, r6
 801440a:	f103 33ff 	add.w	r3, r3, #4294967295
 801440e:	bfac      	ite	ge
 8014410:	f04f 0900 	movge.w	r9, #0
 8014414:	f04f 0901 	movlt.w	r9, #1
 8014418:	2b05      	cmp	r3, #5
 801441a:	d804      	bhi.n	8014426 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801441c:	e8df f003 	tbb	[pc, r3]
 8014420:	470e0854 	.word	0x470e0854
 8014424:	4c4c      	.short	0x4c4c
 8014426:	2500      	movs	r5, #0
 8014428:	46a9      	mov	r9, r5
 801442a:	462e      	mov	r6, r5
 801442c:	462f      	mov	r7, r5
 801442e:	e00d      	b.n	801444c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014430:	42b7      	cmp	r7, r6
 8014432:	bfb4      	ite	lt
 8014434:	2600      	movlt	r6, #0
 8014436:	2601      	movge	r6, #1
 8014438:	2500      	movs	r5, #0
 801443a:	e7f7      	b.n	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801443c:	42b7      	cmp	r7, r6
 801443e:	464d      	mov	r5, r9
 8014440:	f04f 0900 	mov.w	r9, #0
 8014444:	bfb4      	ite	lt
 8014446:	2600      	movlt	r6, #0
 8014448:	2601      	movge	r6, #1
 801444a:	464f      	mov	r7, r9
 801444c:	f04f 0800 	mov.w	r8, #0
 8014450:	f8a4 8016 	strh.w	r8, [r4, #22]
 8014454:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014458:	f8cd 8004 	str.w	r8, [sp, #4]
 801445c:	2300      	movs	r3, #0
 801445e:	9303      	str	r3, [sp, #12]
 8014460:	8823      	ldrh	r3, [r4, #0]
 8014462:	2b20      	cmp	r3, #32
 8014464:	d034      	beq.n	80144d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8014466:	f242 010b 	movw	r1, #8203	; 0x200b
 801446a:	1a5a      	subs	r2, r3, r1
 801446c:	f1d2 0a00 	rsbs	sl, r2, #0
 8014470:	eb4a 0a02 	adc.w	sl, sl, r2
 8014474:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8014478:	4293      	cmp	r3, r2
 801447a:	d009      	beq.n	8014490 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801447c:	428b      	cmp	r3, r1
 801447e:	9a01      	ldr	r2, [sp, #4]
 8014480:	bf18      	it	ne
 8014482:	461a      	movne	r2, r3
 8014484:	9201      	str	r2, [sp, #4]
 8014486:	bf0c      	ite	eq
 8014488:	f04f 0a01 	moveq.w	sl, #1
 801448c:	f04f 0a00 	movne.w	sl, #0
 8014490:	ab03      	add	r3, sp, #12
 8014492:	68e2      	ldr	r2, [r4, #12]
 8014494:	7a21      	ldrb	r1, [r4, #8]
 8014496:	6860      	ldr	r0, [r4, #4]
 8014498:	f002 ff4a 	bl	8017330 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801449c:	8020      	strh	r0, [r4, #0]
 801449e:	b9d8      	cbnz	r0, 80144d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80144a0:	8ba2      	ldrh	r2, [r4, #28]
 80144a2:	2300      	movs	r3, #0
 80144a4:	4611      	mov	r1, r2
 80144a6:	4620      	mov	r0, r4
 80144a8:	f7ff ff90 	bl	80143cc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80144ac:	e06e      	b.n	801458c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80144ae:	2500      	movs	r5, #0
 80144b0:	46a9      	mov	r9, r5
 80144b2:	462e      	mov	r6, r5
 80144b4:	2701      	movs	r7, #1
 80144b6:	e7c9      	b.n	801444c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80144b8:	42b7      	cmp	r7, r6
 80144ba:	f04f 0500 	mov.w	r5, #0
 80144be:	bfb4      	ite	lt
 80144c0:	2700      	movlt	r7, #0
 80144c2:	2701      	movge	r7, #1
 80144c4:	462e      	mov	r6, r5
 80144c6:	e7c1      	b.n	801444c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80144c8:	2500      	movs	r5, #0
 80144ca:	46a9      	mov	r9, r5
 80144cc:	2601      	movs	r6, #1
 80144ce:	e7ad      	b.n	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80144d0:	9301      	str	r3, [sp, #4]
 80144d2:	f04f 0a01 	mov.w	sl, #1
 80144d6:	e7db      	b.n	8014490 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80144d8:	8b63      	ldrh	r3, [r4, #26]
 80144da:	280a      	cmp	r0, #10
 80144dc:	f103 0301 	add.w	r3, r3, #1
 80144e0:	8363      	strh	r3, [r4, #26]
 80144e2:	d0dd      	beq.n	80144a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80144e4:	9a03      	ldr	r2, [sp, #12]
 80144e6:	bb62      	cbnz	r2, 8014542 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80144e8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80144ec:	4298      	cmp	r0, r3
 80144ee:	d003      	beq.n	80144f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80144f0:	f242 030b 	movw	r3, #8203	; 0x200b
 80144f4:	4298      	cmp	r0, r3
 80144f6:	d1b1      	bne.n	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144f8:	8823      	ldrh	r3, [r4, #0]
 80144fa:	8ba1      	ldrh	r1, [r4, #28]
 80144fc:	2b20      	cmp	r3, #32
 80144fe:	d003      	beq.n	8014508 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014500:	f242 000b 	movw	r0, #8203	; 0x200b
 8014504:	4283      	cmp	r3, r0
 8014506:	d131      	bne.n	801456c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014508:	f1ba 0f00 	cmp.w	sl, #0
 801450c:	bf0a      	itet	eq
 801450e:	4688      	moveq	r8, r1
 8014510:	4650      	movne	r0, sl
 8014512:	2001      	moveq	r0, #1
 8014514:	440a      	add	r2, r1
 8014516:	8b23      	ldrh	r3, [r4, #24]
 8014518:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801451c:	b292      	uxth	r2, r2
 801451e:	83a2      	strh	r2, [r4, #28]
 8014520:	4413      	add	r3, r2
 8014522:	f1b9 0f00 	cmp.w	r9, #0
 8014526:	d102      	bne.n	801452e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014528:	2d00      	cmp	r5, #0
 801452a:	d042      	beq.n	80145b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801452c:	b300      	cbz	r0, 8014570 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801452e:	8c21      	ldrh	r1, [r4, #32]
 8014530:	4419      	add	r1, r3
 8014532:	458c      	cmp	ip, r1
 8014534:	da37      	bge.n	80145a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014536:	8ae1      	ldrh	r1, [r4, #22]
 8014538:	2900      	cmp	r1, #0
 801453a:	d034      	beq.n	80145a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801453c:	4563      	cmp	r3, ip
 801453e:	dd8d      	ble.n	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014540:	e01d      	b.n	801457e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014542:	8893      	ldrh	r3, [r2, #4]
 8014544:	8023      	strh	r3, [r4, #0]
 8014546:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801454a:	9901      	ldr	r1, [sp, #4]
 801454c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014550:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014554:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014558:	ea4b 0b00 	orr.w	fp, fp, r0
 801455c:	68e0      	ldr	r0, [r4, #12]
 801455e:	6803      	ldr	r3, [r0, #0]
 8014560:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014562:	4798      	blx	r3
 8014564:	eb0b 0200 	add.w	r2, fp, r0
 8014568:	b292      	uxth	r2, r2
 801456a:	e7c5      	b.n	80144f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801456c:	2000      	movs	r0, #0
 801456e:	e7d1      	b.n	8014514 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8014570:	4563      	cmp	r3, ip
 8014572:	f77f af73 	ble.w	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014576:	8ae3      	ldrh	r3, [r4, #22]
 8014578:	2b00      	cmp	r3, #0
 801457a:	f43f af6f 	beq.w	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801457e:	2301      	movs	r3, #1
 8014580:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8014584:	8c22      	ldrh	r2, [r4, #32]
 8014586:	8be3      	ldrh	r3, [r4, #30]
 8014588:	4413      	add	r3, r2
 801458a:	83e3      	strh	r3, [r4, #30]
 801458c:	68e0      	ldr	r0, [r4, #12]
 801458e:	6803      	ldr	r3, [r0, #0]
 8014590:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014592:	4798      	blx	r3
 8014594:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014598:	4418      	add	r0, r3
 801459a:	8a63      	ldrh	r3, [r4, #18]
 801459c:	1a18      	subs	r0, r3, r0
 801459e:	8260      	strh	r0, [r4, #18]
 80145a0:	b005      	add	sp, #20
 80145a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145a6:	2300      	movs	r3, #0
 80145a8:	4611      	mov	r1, r2
 80145aa:	4620      	mov	r0, r4
 80145ac:	f7ff ff0e 	bl	80143cc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80145b0:	e754      	b.n	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80145b2:	4563      	cmp	r3, ip
 80145b4:	dd14      	ble.n	80145e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80145b6:	b117      	cbz	r7, 80145be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80145b8:	2301      	movs	r3, #1
 80145ba:	460a      	mov	r2, r1
 80145bc:	e772      	b.n	80144a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80145be:	2e00      	cmp	r6, #0
 80145c0:	f43f af4c 	beq.w	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80145c4:	2800      	cmp	r0, #0
 80145c6:	f47f af49 	bne.w	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80145ca:	f1ba 0f00 	cmp.w	sl, #0
 80145ce:	d002      	beq.n	80145d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80145d0:	2301      	movs	r3, #1
 80145d2:	4642      	mov	r2, r8
 80145d4:	e767      	b.n	80144a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80145d6:	8ae3      	ldrh	r3, [r4, #22]
 80145d8:	2b00      	cmp	r3, #0
 80145da:	f43f af3f 	beq.w	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80145de:	e7d5      	b.n	801458c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80145e0:	2800      	cmp	r0, #0
 80145e2:	f47f af3b 	bne.w	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80145e6:	f1ba 0f00 	cmp.w	sl, #0
 80145ea:	f43f af37 	beq.w	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80145ee:	2301      	movs	r3, #1
 80145f0:	4642      	mov	r2, r8
 80145f2:	e7da      	b.n	80145aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080145f4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80145f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80145f6:	4605      	mov	r5, r0
 80145f8:	b08f      	sub	sp, #60	; 0x3c
 80145fa:	4617      	mov	r7, r2
 80145fc:	461c      	mov	r4, r3
 80145fe:	460e      	mov	r6, r1
 8014600:	b1d1      	cbz	r1, 8014638 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014602:	681b      	ldr	r3, [r3, #0]
 8014604:	4620      	mov	r0, r4
 8014606:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014608:	4798      	blx	r3
 801460a:	4240      	negs	r0, r0
 801460c:	b200      	sxth	r0, r0
 801460e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014612:	9603      	str	r6, [sp, #12]
 8014614:	9700      	str	r7, [sp, #0]
 8014616:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801461a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801461e:	4629      	mov	r1, r5
 8014620:	a805      	add	r0, sp, #20
 8014622:	f7ff fcbf 	bl	8013fa4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014626:	2401      	movs	r4, #1
 8014628:	a805      	add	r0, sp, #20
 801462a:	f7ff fedf 	bl	80143ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801462e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014632:	b163      	cbz	r3, 801464e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014634:	3401      	adds	r4, #1
 8014636:	e7f7      	b.n	8014628 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014638:	f002 ff48 	bl	80174cc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801463c:	2401      	movs	r4, #1
 801463e:	280a      	cmp	r0, #10
 8014640:	4628      	mov	r0, r5
 8014642:	bf08      	it	eq
 8014644:	3401      	addeq	r4, #1
 8014646:	f002 ff41 	bl	80174cc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801464a:	2800      	cmp	r0, #0
 801464c:	d1f7      	bne.n	801463e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801464e:	b2a0      	uxth	r0, r4
 8014650:	b00f      	add	sp, #60	; 0x3c
 8014652:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014654 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014658:	b0e3      	sub	sp, #396	; 0x18c
 801465a:	461c      	mov	r4, r3
 801465c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801465e:	4683      	mov	fp, r0
 8014660:	4688      	mov	r8, r1
 8014662:	2b00      	cmp	r3, #0
 8014664:	f000 8112 	beq.w	801488c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014668:	6823      	ldr	r3, [r4, #0]
 801466a:	2b00      	cmp	r3, #0
 801466c:	f000 810e 	beq.w	801488c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014670:	7ba3      	ldrb	r3, [r4, #14]
 8014672:	2b00      	cmp	r3, #0
 8014674:	f000 810a 	beq.w	801488c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014678:	6810      	ldr	r0, [r2, #0]
 801467a:	6851      	ldr	r1, [r2, #4]
 801467c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8014680:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014684:	ad0a      	add	r5, sp, #40	; 0x28
 8014686:	462b      	mov	r3, r5
 8014688:	c303      	stmia	r3!, {r0, r1}
 801468a:	2100      	movs	r1, #0
 801468c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014690:	910c      	str	r1, [sp, #48]	; 0x30
 8014692:	79a2      	ldrb	r2, [r4, #6]
 8014694:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014698:	a90c      	add	r1, sp, #48	; 0x30
 801469a:	4628      	mov	r0, r5
 801469c:	f7ff fd01 	bl	80140a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80146a0:	a90c      	add	r1, sp, #48	; 0x30
 80146a2:	4608      	mov	r0, r1
 80146a4:	79a2      	ldrb	r2, [r4, #6]
 80146a6:	f7ff fcfc 	bl	80140a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80146aa:	a817      	add	r0, sp, #92	; 0x5c
 80146ac:	f002 fae2 	bl	8016c74 <_ZN8touchgfx12TextProviderC1Ev>
 80146b0:	6820      	ldr	r0, [r4, #0]
 80146b2:	6803      	ldr	r3, [r0, #0]
 80146b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80146b6:	4798      	blx	r3
 80146b8:	4606      	mov	r6, r0
 80146ba:	6820      	ldr	r0, [r4, #0]
 80146bc:	6803      	ldr	r3, [r0, #0]
 80146be:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80146c0:	4798      	blx	r3
 80146c2:	4633      	mov	r3, r6
 80146c4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80146c6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80146c8:	9000      	str	r0, [sp, #0]
 80146ca:	a817      	add	r0, sp, #92	; 0x5c
 80146cc:	f002 fb2d 	bl	8016d2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80146d0:	6820      	ldr	r0, [r4, #0]
 80146d2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80146d6:	6803      	ldr	r3, [r0, #0]
 80146d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80146da:	4798      	blx	r3
 80146dc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80146e0:	6823      	ldr	r3, [r4, #0]
 80146e2:	4607      	mov	r7, r0
 80146e4:	4406      	add	r6, r0
 80146e6:	a830      	add	r0, sp, #192	; 0xc0
 80146e8:	f893 9009 	ldrb.w	r9, [r3, #9]
 80146ec:	f002 fac2 	bl	8016c74 <_ZN8touchgfx12TextProviderC1Ev>
 80146f0:	7c23      	ldrb	r3, [r4, #16]
 80146f2:	b17b      	cbz	r3, 8014714 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80146f4:	6820      	ldr	r0, [r4, #0]
 80146f6:	6803      	ldr	r3, [r0, #0]
 80146f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80146fa:	4798      	blx	r3
 80146fc:	9009      	str	r0, [sp, #36]	; 0x24
 80146fe:	6820      	ldr	r0, [r4, #0]
 8014700:	6802      	ldr	r2, [r0, #0]
 8014702:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014704:	4790      	blx	r2
 8014706:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014708:	9000      	str	r0, [sp, #0]
 801470a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801470c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801470e:	a830      	add	r0, sp, #192	; 0xc0
 8014710:	f002 fb0b 	bl	8016d2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014714:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014718:	7be2      	ldrb	r2, [r4, #15]
 801471a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801471e:	1a8a      	subs	r2, r1, r2
 8014720:	7c21      	ldrb	r1, [r4, #16]
 8014722:	9103      	str	r1, [sp, #12]
 8014724:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014728:	9102      	str	r1, [sp, #8]
 801472a:	6821      	ldr	r1, [r4, #0]
 801472c:	9101      	str	r1, [sp, #4]
 801472e:	7961      	ldrb	r1, [r4, #5]
 8014730:	9100      	str	r1, [sp, #0]
 8014732:	b292      	uxth	r2, r2
 8014734:	a930      	add	r1, sp, #192	; 0xc0
 8014736:	a80e      	add	r0, sp, #56	; 0x38
 8014738:	f7ff fc34 	bl	8013fa4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801473c:	2e00      	cmp	r6, #0
 801473e:	dc5b      	bgt.n	80147f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014740:	af17      	add	r7, sp, #92	; 0x5c
 8014742:	f04f 0900 	mov.w	r9, #0
 8014746:	7c23      	ldrb	r3, [r4, #16]
 8014748:	2b00      	cmp	r3, #0
 801474a:	f000 80b1 	beq.w	80148b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801474e:	a80e      	add	r0, sp, #56	; 0x38
 8014750:	f7ff fe4c 	bl	80143ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014754:	f1ba 0f00 	cmp.w	sl, #0
 8014758:	f000 80a5 	beq.w	80148a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801475c:	7c23      	ldrb	r3, [r4, #16]
 801475e:	9309      	str	r3, [sp, #36]	; 0x24
 8014760:	2264      	movs	r2, #100	; 0x64
 8014762:	4639      	mov	r1, r7
 8014764:	a849      	add	r0, sp, #292	; 0x124
 8014766:	f015 fda8 	bl	802a2ba <memcpy>
 801476a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801476c:	2b00      	cmp	r3, #0
 801476e:	f000 80a7 	beq.w	80148c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014772:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014776:	7922      	ldrb	r2, [r4, #4]
 8014778:	2a01      	cmp	r2, #1
 801477a:	f040 808a 	bne.w	8014892 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801477e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8014782:	1ac0      	subs	r0, r0, r3
 8014784:	2302      	movs	r3, #2
 8014786:	fb90 f0f3 	sdiv	r0, r0, r3
 801478a:	b200      	sxth	r0, r0
 801478c:	7c23      	ldrb	r3, [r4, #16]
 801478e:	2b00      	cmp	r3, #0
 8014790:	f000 808b 	beq.w	80148aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014794:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014798:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801479c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80147a0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80147a4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80147a8:	4410      	add	r0, r2
 80147aa:	b200      	sxth	r0, r0
 80147ac:	9000      	str	r0, [sp, #0]
 80147ae:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80147b2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80147b6:	4642      	mov	r2, r8
 80147b8:	2100      	movs	r1, #0
 80147ba:	4658      	mov	r0, fp
 80147bc:	f7ff fca2 	bl	8014104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80147c0:	2800      	cmp	r0, #0
 80147c2:	d163      	bne.n	801488c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80147c4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80147c8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80147cc:	b2b2      	uxth	r2, r6
 80147ce:	4413      	add	r3, r2
 80147d0:	1a8a      	subs	r2, r1, r2
 80147d2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80147d6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80147da:	b21b      	sxth	r3, r3
 80147dc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80147e0:	2a00      	cmp	r2, #0
 80147e2:	d153      	bne.n	801488c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80147e4:	6822      	ldr	r2, [r4, #0]
 80147e6:	8869      	ldrh	r1, [r5, #2]
 80147e8:	7a12      	ldrb	r2, [r2, #8]
 80147ea:	1a9b      	subs	r3, r3, r2
 80147ec:	88ea      	ldrh	r2, [r5, #6]
 80147ee:	440a      	add	r2, r1
 80147f0:	b212      	sxth	r2, r2
 80147f2:	4293      	cmp	r3, r2
 80147f4:	dda7      	ble.n	8014746 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80147f6:	e049      	b.n	801488c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80147f8:	7c23      	ldrb	r3, [r4, #16]
 80147fa:	444f      	add	r7, r9
 80147fc:	b1c3      	cbz	r3, 8014830 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80147fe:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014802:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014806:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801480a:	443b      	add	r3, r7
 801480c:	4293      	cmp	r3, r2
 801480e:	da97      	bge.n	8014740 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014810:	a80e      	add	r0, sp, #56	; 0x38
 8014812:	f7ff fdeb 	bl	80143ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014816:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801481a:	3b01      	subs	r3, #1
 801481c:	b29b      	uxth	r3, r3
 801481e:	454b      	cmp	r3, r9
 8014820:	9309      	str	r3, [sp, #36]	; 0x24
 8014822:	d021      	beq.n	8014868 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014824:	7961      	ldrb	r1, [r4, #5]
 8014826:	a817      	add	r0, sp, #92	; 0x5c
 8014828:	f7f3 fb90 	bl	8007f4c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801482c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801482e:	e7f4      	b.n	801481a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014830:	fa1f f986 	uxth.w	r9, r6
 8014834:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014838:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801483c:	443b      	add	r3, r7
 801483e:	4293      	cmp	r3, r2
 8014840:	f6bf af7e 	bge.w	8014740 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014844:	a817      	add	r0, sp, #92	; 0x5c
 8014846:	f002 fe41 	bl	80174cc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801484a:	b1f8      	cbz	r0, 801488c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801484c:	280a      	cmp	r0, #10
 801484e:	d1f1      	bne.n	8014834 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014850:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014854:	444b      	add	r3, r9
 8014856:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801485a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801485e:	eba3 0309 	sub.w	r3, r3, r9
 8014862:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014866:	e7e5      	b.n	8014834 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014868:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801486c:	b2b3      	uxth	r3, r6
 801486e:	441a      	add	r2, r3
 8014870:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014874:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014878:	1ad3      	subs	r3, r2, r3
 801487a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801487e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014882:	b11b      	cbz	r3, 801488c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014884:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014888:	2b00      	cmp	r3, #0
 801488a:	d0ba      	beq.n	8014802 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801488c:	b063      	add	sp, #396	; 0x18c
 801488e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014892:	2a02      	cmp	r2, #2
 8014894:	d105      	bne.n	80148a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014896:	7be2      	ldrb	r2, [r4, #15]
 8014898:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801489c:	1a80      	subs	r0, r0, r2
 801489e:	1ac0      	subs	r0, r0, r3
 80148a0:	e773      	b.n	801478a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80148a2:	2000      	movs	r0, #0
 80148a4:	e772      	b.n	801478c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80148a6:	7be0      	ldrb	r0, [r4, #15]
 80148a8:	e770      	b.n	801478c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80148aa:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80148ae:	e773      	b.n	8014798 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80148b0:	f1ba 0f00 	cmp.w	sl, #0
 80148b4:	d0f7      	beq.n	80148a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80148b6:	2264      	movs	r2, #100	; 0x64
 80148b8:	4639      	mov	r1, r7
 80148ba:	a849      	add	r0, sp, #292	; 0x124
 80148bc:	f015 fcfd 	bl	802a2ba <memcpy>
 80148c0:	2300      	movs	r3, #0
 80148c2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80148c6:	6821      	ldr	r1, [r4, #0]
 80148c8:	a849      	add	r0, sp, #292	; 0x124
 80148ca:	f7ff fbae 	bl	801402a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80148ce:	b203      	sxth	r3, r0
 80148d0:	e751      	b.n	8014776 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080148d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80148d2:	2b03      	cmp	r3, #3
 80148d4:	d818      	bhi.n	8014908 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80148d6:	e8df f003 	tbb	[pc, r3]
 80148da:	0602      	.short	0x0602
 80148dc:	130d      	.short	0x130d
 80148de:	f9b0 2000 	ldrsh.w	r2, [r0]
 80148e2:	1850      	adds	r0, r2, r1
 80148e4:	4770      	bx	lr
 80148e6:	8803      	ldrh	r3, [r0, #0]
 80148e8:	8880      	ldrh	r0, [r0, #4]
 80148ea:	4418      	add	r0, r3
 80148ec:	b200      	sxth	r0, r0
 80148ee:	1a80      	subs	r0, r0, r2
 80148f0:	3801      	subs	r0, #1
 80148f2:	4770      	bx	lr
 80148f4:	8803      	ldrh	r3, [r0, #0]
 80148f6:	8880      	ldrh	r0, [r0, #4]
 80148f8:	4418      	add	r0, r3
 80148fa:	b200      	sxth	r0, r0
 80148fc:	1a40      	subs	r0, r0, r1
 80148fe:	e7f7      	b.n	80148f0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014900:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014904:	4410      	add	r0, r2
 8014906:	4770      	bx	lr
 8014908:	2000      	movs	r0, #0
 801490a:	4770      	bx	lr

0801490c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801490c:	2b03      	cmp	r3, #3
 801490e:	d817      	bhi.n	8014940 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014910:	e8df f003 	tbb	[pc, r3]
 8014914:	10090602 	.word	0x10090602
 8014918:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801491c:	1850      	adds	r0, r2, r1
 801491e:	4770      	bx	lr
 8014920:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014924:	e7fa      	b.n	801491c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014926:	8843      	ldrh	r3, [r0, #2]
 8014928:	88c0      	ldrh	r0, [r0, #6]
 801492a:	4418      	add	r0, r3
 801492c:	b200      	sxth	r0, r0
 801492e:	1a80      	subs	r0, r0, r2
 8014930:	3801      	subs	r0, #1
 8014932:	4770      	bx	lr
 8014934:	8843      	ldrh	r3, [r0, #2]
 8014936:	88c0      	ldrh	r0, [r0, #6]
 8014938:	4418      	add	r0, r3
 801493a:	b200      	sxth	r0, r0
 801493c:	1a40      	subs	r0, r0, r1
 801493e:	e7f7      	b.n	8014930 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014940:	2000      	movs	r0, #0
 8014942:	4770      	bx	lr

08014944 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014944:	4b01      	ldr	r3, [pc, #4]	; (801494c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014946:	2200      	movs	r2, #0
 8014948:	601a      	str	r2, [r3, #0]
 801494a:	4770      	bx	lr
 801494c:	20012e8c 	.word	0x20012e8c

08014950 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014950:	4603      	mov	r3, r0
 8014952:	b1c8      	cbz	r0, 8014988 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014954:	0c02      	lsrs	r2, r0, #16
 8014956:	0412      	lsls	r2, r2, #16
 8014958:	b9a2      	cbnz	r2, 8014984 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801495a:	0403      	lsls	r3, r0, #16
 801495c:	2010      	movs	r0, #16
 801495e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014962:	bf04      	itt	eq
 8014964:	021b      	lsleq	r3, r3, #8
 8014966:	3008      	addeq	r0, #8
 8014968:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801496c:	bf04      	itt	eq
 801496e:	011b      	lsleq	r3, r3, #4
 8014970:	3004      	addeq	r0, #4
 8014972:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014976:	bf04      	itt	eq
 8014978:	009b      	lsleq	r3, r3, #2
 801497a:	3002      	addeq	r0, #2
 801497c:	2b00      	cmp	r3, #0
 801497e:	db04      	blt.n	801498a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014980:	3001      	adds	r0, #1
 8014982:	4770      	bx	lr
 8014984:	2000      	movs	r0, #0
 8014986:	e7ea      	b.n	801495e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014988:	2020      	movs	r0, #32
 801498a:	4770      	bx	lr

0801498c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801498c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014990:	b087      	sub	sp, #28
 8014992:	460d      	mov	r5, r1
 8014994:	4616      	mov	r6, r2
 8014996:	4698      	mov	r8, r3
 8014998:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801499c:	4601      	mov	r1, r0
 801499e:	b120      	cbz	r0, 80149aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80149a0:	b11a      	cbz	r2, 80149aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80149a2:	2d1f      	cmp	r5, #31
 80149a4:	d801      	bhi.n	80149aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80149a6:	2b1f      	cmp	r3, #31
 80149a8:	d904      	bls.n	80149b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80149aa:	2000      	movs	r0, #0
 80149ac:	6038      	str	r0, [r7, #0]
 80149ae:	b007      	add	sp, #28
 80149b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149b4:	b97d      	cbnz	r5, 80149d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80149b6:	b143      	cbz	r3, 80149ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80149b8:	4602      	mov	r2, r0
 80149ba:	e9cd 4700 	strd	r4, r7, [sp]
 80149be:	462b      	mov	r3, r5
 80149c0:	4641      	mov	r1, r8
 80149c2:	4630      	mov	r0, r6
 80149c4:	f7ff ffe2 	bl	801498c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80149c8:	e7f1      	b.n	80149ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80149ca:	f04f 33ff 	mov.w	r3, #4294967295
 80149ce:	603b      	str	r3, [r7, #0]
 80149d0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80149d4:	e7eb      	b.n	80149ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80149d6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80149da:	d106      	bne.n	80149ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80149dc:	4346      	muls	r6, r0
 80149de:	fbb6 f0f4 	udiv	r0, r6, r4
 80149e2:	fb04 6610 	mls	r6, r4, r0, r6
 80149e6:	603e      	str	r6, [r7, #0]
 80149e8:	e7e1      	b.n	80149ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80149ea:	2201      	movs	r2, #1
 80149ec:	40aa      	lsls	r2, r5
 80149ee:	3a01      	subs	r2, #1
 80149f0:	4016      	ands	r6, r2
 80149f2:	fa00 fb05 	lsl.w	fp, r0, r5
 80149f6:	4630      	mov	r0, r6
 80149f8:	fbbb f9f4 	udiv	r9, fp, r4
 80149fc:	fb0a f309 	mul.w	r3, sl, r9
 8014a00:	9303      	str	r3, [sp, #12]
 8014a02:	f7ff ffa5 	bl	8014950 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014a06:	462b      	mov	r3, r5
 8014a08:	460a      	mov	r2, r1
 8014a0a:	e9cd 4700 	strd	r4, r7, [sp]
 8014a0e:	4601      	mov	r1, r0
 8014a10:	4630      	mov	r0, r6
 8014a12:	f7ff ffbb 	bl	801498c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014a16:	fb04 b919 	mls	r9, r4, r9, fp
 8014a1a:	4606      	mov	r6, r0
 8014a1c:	4648      	mov	r0, r9
 8014a1e:	eb05 0108 	add.w	r1, r5, r8
 8014a22:	f7ff ff95 	bl	8014950 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014a26:	ab05      	add	r3, sp, #20
 8014a28:	e9cd 4300 	strd	r4, r3, [sp]
 8014a2c:	464a      	mov	r2, r9
 8014a2e:	4603      	mov	r3, r0
 8014a30:	4650      	mov	r0, sl
 8014a32:	f7ff ffab 	bl	801498c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014a36:	6839      	ldr	r1, [r7, #0]
 8014a38:	9a05      	ldr	r2, [sp, #20]
 8014a3a:	9b03      	ldr	r3, [sp, #12]
 8014a3c:	4411      	add	r1, r2
 8014a3e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014a42:	18d3      	adds	r3, r2, r3
 8014a44:	441e      	add	r6, r3
 8014a46:	fb04 1412 	mls	r4, r4, r2, r1
 8014a4a:	4430      	add	r0, r6
 8014a4c:	603c      	str	r4, [r7, #0]
 8014a4e:	e7ae      	b.n	80149ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014a50 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014a50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014a54:	b085      	sub	sp, #20
 8014a56:	f1b0 0900 	subs.w	r9, r0, #0
 8014a5a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014a5c:	461d      	mov	r5, r3
 8014a5e:	bfbf      	itttt	lt
 8014a60:	6823      	ldrlt	r3, [r4, #0]
 8014a62:	425b      	neglt	r3, r3
 8014a64:	f1c9 0900 	rsblt	r9, r9, #0
 8014a68:	6023      	strlt	r3, [r4, #0]
 8014a6a:	bfb4      	ite	lt
 8014a6c:	f04f 36ff 	movlt.w	r6, #4294967295
 8014a70:	2601      	movge	r6, #1
 8014a72:	2a00      	cmp	r2, #0
 8014a74:	4617      	mov	r7, r2
 8014a76:	da04      	bge.n	8014a82 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014a78:	6823      	ldr	r3, [r4, #0]
 8014a7a:	425b      	negs	r3, r3
 8014a7c:	4257      	negs	r7, r2
 8014a7e:	4276      	negs	r6, r6
 8014a80:	6023      	str	r3, [r4, #0]
 8014a82:	2d00      	cmp	r5, #0
 8014a84:	4638      	mov	r0, r7
 8014a86:	bfba      	itte	lt
 8014a88:	426d      	neglt	r5, r5
 8014a8a:	f04f 38ff 	movlt.w	r8, #4294967295
 8014a8e:	f04f 0801 	movge.w	r8, #1
 8014a92:	f7ff ff5d 	bl	8014950 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014a96:	ab03      	add	r3, sp, #12
 8014a98:	e9cd 5300 	strd	r5, r3, [sp]
 8014a9c:	463a      	mov	r2, r7
 8014a9e:	4603      	mov	r3, r0
 8014aa0:	4648      	mov	r0, r9
 8014aa2:	f7ff ff73 	bl	801498c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014aa6:	6823      	ldr	r3, [r4, #0]
 8014aa8:	9a03      	ldr	r2, [sp, #12]
 8014aaa:	4546      	cmp	r6, r8
 8014aac:	441a      	add	r2, r3
 8014aae:	fb92 f3f5 	sdiv	r3, r2, r5
 8014ab2:	4418      	add	r0, r3
 8014ab4:	bf18      	it	ne
 8014ab6:	4240      	negne	r0, r0
 8014ab8:	fb05 2313 	mls	r3, r5, r3, r2
 8014abc:	1c72      	adds	r2, r6, #1
 8014abe:	6023      	str	r3, [r4, #0]
 8014ac0:	d105      	bne.n	8014ace <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014ac2:	2b00      	cmp	r3, #0
 8014ac4:	f1c3 0200 	rsb	r2, r3, #0
 8014ac8:	db0b      	blt.n	8014ae2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014aca:	6022      	str	r2, [r4, #0]
 8014acc:	e006      	b.n	8014adc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014ace:	2e01      	cmp	r6, #1
 8014ad0:	d104      	bne.n	8014adc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014ad2:	2b00      	cmp	r3, #0
 8014ad4:	da02      	bge.n	8014adc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014ad6:	442b      	add	r3, r5
 8014ad8:	3801      	subs	r0, #1
 8014ada:	6023      	str	r3, [r4, #0]
 8014adc:	b005      	add	sp, #20
 8014ade:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014ae2:	3801      	subs	r0, #1
 8014ae4:	1b52      	subs	r2, r2, r5
 8014ae6:	e7f0      	b.n	8014aca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014ae8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014ae8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014aec:	4c1c      	ldr	r4, [pc, #112]	; (8014b60 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014aee:	6807      	ldr	r7, [r0, #0]
 8014af0:	69a3      	ldr	r3, [r4, #24]
 8014af2:	4605      	mov	r5, r0
 8014af4:	b92b      	cbnz	r3, 8014b02 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014af6:	6840      	ldr	r0, [r0, #4]
 8014af8:	e9c5 7000 	strd	r7, r0, [r5]
 8014afc:	b004      	add	sp, #16
 8014afe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014b02:	68a2      	ldr	r2, [r4, #8]
 8014b04:	6820      	ldr	r0, [r4, #0]
 8014b06:	ae04      	add	r6, sp, #16
 8014b08:	f04f 0802 	mov.w	r8, #2
 8014b0c:	fb93 f1f8 	sdiv	r1, r3, r8
 8014b10:	440a      	add	r2, r1
 8014b12:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014b16:	69e1      	ldr	r1, [r4, #28]
 8014b18:	9600      	str	r6, [sp, #0]
 8014b1a:	463a      	mov	r2, r7
 8014b1c:	f7ff ff98 	bl	8014a50 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014b20:	69a3      	ldr	r3, [r4, #24]
 8014b22:	686a      	ldr	r2, [r5, #4]
 8014b24:	6a21      	ldr	r1, [r4, #32]
 8014b26:	9600      	str	r6, [sp, #0]
 8014b28:	4607      	mov	r7, r0
 8014b2a:	6860      	ldr	r0, [r4, #4]
 8014b2c:	f7ff ff90 	bl	8014a50 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014b30:	6962      	ldr	r2, [r4, #20]
 8014b32:	69a3      	ldr	r3, [r4, #24]
 8014b34:	fb93 f8f8 	sdiv	r8, r3, r8
 8014b38:	4442      	add	r2, r8
 8014b3a:	9203      	str	r2, [sp, #12]
 8014b3c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014b3e:	682a      	ldr	r2, [r5, #0]
 8014b40:	9600      	str	r6, [sp, #0]
 8014b42:	4407      	add	r7, r0
 8014b44:	68e0      	ldr	r0, [r4, #12]
 8014b46:	f7ff ff83 	bl	8014a50 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014b4a:	9600      	str	r6, [sp, #0]
 8014b4c:	4680      	mov	r8, r0
 8014b4e:	69a3      	ldr	r3, [r4, #24]
 8014b50:	686a      	ldr	r2, [r5, #4]
 8014b52:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014b54:	6920      	ldr	r0, [r4, #16]
 8014b56:	f7ff ff7b 	bl	8014a50 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014b5a:	4440      	add	r0, r8
 8014b5c:	e7cc      	b.n	8014af8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014b5e:	bf00      	nop
 8014b60:	20012e90 	.word	0x20012e90

08014b64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014b64:	4b07      	ldr	r3, [pc, #28]	; (8014b84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014b66:	781b      	ldrb	r3, [r3, #0]
 8014b68:	2b01      	cmp	r3, #1
 8014b6a:	d109      	bne.n	8014b80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014b6c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014b70:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014b74:	8003      	strh	r3, [r0, #0]
 8014b76:	4b04      	ldr	r3, [pc, #16]	; (8014b88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014b78:	881b      	ldrh	r3, [r3, #0]
 8014b7a:	3b01      	subs	r3, #1
 8014b7c:	1a9b      	subs	r3, r3, r2
 8014b7e:	800b      	strh	r3, [r1, #0]
 8014b80:	4770      	bx	lr
 8014b82:	bf00      	nop
 8014b84:	20012e74 	.word	0x20012e74
 8014b88:	20012e70 	.word	0x20012e70

08014b8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014b8c:	b510      	push	{r4, lr}
 8014b8e:	4b07      	ldr	r3, [pc, #28]	; (8014bac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014b90:	781b      	ldrb	r3, [r3, #0]
 8014b92:	2b01      	cmp	r3, #1
 8014b94:	d108      	bne.n	8014ba8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014b96:	4b06      	ldr	r3, [pc, #24]	; (8014bb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014b98:	880c      	ldrh	r4, [r1, #0]
 8014b9a:	881b      	ldrh	r3, [r3, #0]
 8014b9c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014ba0:	3b01      	subs	r3, #1
 8014ba2:	1b1b      	subs	r3, r3, r4
 8014ba4:	8003      	strh	r3, [r0, #0]
 8014ba6:	800a      	strh	r2, [r1, #0]
 8014ba8:	bd10      	pop	{r4, pc}
 8014baa:	bf00      	nop
 8014bac:	20012e74 	.word	0x20012e74
 8014bb0:	20012e70 	.word	0x20012e70

08014bb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014bb4:	b510      	push	{r4, lr}
 8014bb6:	4b0a      	ldr	r3, [pc, #40]	; (8014be0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014bb8:	781b      	ldrb	r3, [r3, #0]
 8014bba:	2b01      	cmp	r3, #1
 8014bbc:	d10e      	bne.n	8014bdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014bbe:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014bc2:	8843      	ldrh	r3, [r0, #2]
 8014bc4:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014bc8:	8044      	strh	r4, [r0, #2]
 8014bca:	18ca      	adds	r2, r1, r3
 8014bcc:	4b05      	ldr	r3, [pc, #20]	; (8014be4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014bce:	881b      	ldrh	r3, [r3, #0]
 8014bd0:	1a9b      	subs	r3, r3, r2
 8014bd2:	8003      	strh	r3, [r0, #0]
 8014bd4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014bd8:	80c3      	strh	r3, [r0, #6]
 8014bda:	8081      	strh	r1, [r0, #4]
 8014bdc:	bd10      	pop	{r4, pc}
 8014bde:	bf00      	nop
 8014be0:	20012e74 	.word	0x20012e74
 8014be4:	20012e70 	.word	0x20012e70

08014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014be8:	4b08      	ldr	r3, [pc, #32]	; (8014c0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014bea:	781b      	ldrb	r3, [r3, #0]
 8014bec:	2b01      	cmp	r3, #1
 8014bee:	d10c      	bne.n	8014c0a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014bf0:	8803      	ldrh	r3, [r0, #0]
 8014bf2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014bf6:	8842      	ldrh	r2, [r0, #2]
 8014bf8:	8002      	strh	r2, [r0, #0]
 8014bfa:	185a      	adds	r2, r3, r1
 8014bfc:	4b04      	ldr	r3, [pc, #16]	; (8014c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8014bfe:	881b      	ldrh	r3, [r3, #0]
 8014c00:	1a9b      	subs	r3, r3, r2
 8014c02:	8043      	strh	r3, [r0, #2]
 8014c04:	88c3      	ldrh	r3, [r0, #6]
 8014c06:	8083      	strh	r3, [r0, #4]
 8014c08:	80c1      	strh	r1, [r0, #6]
 8014c0a:	4770      	bx	lr
 8014c0c:	20012e74 	.word	0x20012e74
 8014c10:	20012e70 	.word	0x20012e70

08014c14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014c14:	b510      	push	{r4, lr}
 8014c16:	4b07      	ldr	r3, [pc, #28]	; (8014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014c18:	781b      	ldrb	r3, [r3, #0]
 8014c1a:	2b01      	cmp	r3, #1
 8014c1c:	d108      	bne.n	8014c30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8014c1e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014c22:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014c26:	8003      	strh	r3, [r0, #0]
 8014c28:	8893      	ldrh	r3, [r2, #4]
 8014c2a:	3b01      	subs	r3, #1
 8014c2c:	1b1b      	subs	r3, r3, r4
 8014c2e:	800b      	strh	r3, [r1, #0]
 8014c30:	bd10      	pop	{r4, pc}
 8014c32:	bf00      	nop
 8014c34:	20012e74 	.word	0x20012e74

08014c38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014c38:	4b0b      	ldr	r3, [pc, #44]	; (8014c68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8014c3a:	781b      	ldrb	r3, [r3, #0]
 8014c3c:	2b01      	cmp	r3, #1
 8014c3e:	d111      	bne.n	8014c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014c40:	680b      	ldr	r3, [r1, #0]
 8014c42:	ed90 7a00 	vldr	s14, [r0]
 8014c46:	6003      	str	r3, [r0, #0]
 8014c48:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8014c4c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8014c6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014c50:	ee07 3a90 	vmov	s15, r3
 8014c54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014c58:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014c5c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014c60:	edc1 7a00 	vstr	s15, [r1]
 8014c64:	4770      	bx	lr
 8014c66:	bf00      	nop
 8014c68:	20012e74 	.word	0x20012e74
 8014c6c:	38d1b717 	.word	0x38d1b717

08014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014c70:	b510      	push	{r4, lr}
 8014c72:	4b0a      	ldr	r3, [pc, #40]	; (8014c9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014c74:	781b      	ldrb	r3, [r3, #0]
 8014c76:	2b01      	cmp	r3, #1
 8014c78:	460a      	mov	r2, r1
 8014c7a:	d10d      	bne.n	8014c98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014c7c:	8881      	ldrh	r1, [r0, #4]
 8014c7e:	8803      	ldrh	r3, [r0, #0]
 8014c80:	440b      	add	r3, r1
 8014c82:	4601      	mov	r1, r0
 8014c84:	3b01      	subs	r3, #1
 8014c86:	f821 3b02 	strh.w	r3, [r1], #2
 8014c8a:	f7ff ffc3 	bl	8014c14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014c8e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014c92:	88c2      	ldrh	r2, [r0, #6]
 8014c94:	8082      	strh	r2, [r0, #4]
 8014c96:	80c3      	strh	r3, [r0, #6]
 8014c98:	bd10      	pop	{r4, pc}
 8014c9a:	bf00      	nop
 8014c9c:	20012e74 	.word	0x20012e74

08014ca0 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014ca0:	4b06      	ldr	r3, [pc, #24]	; (8014cbc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014ca2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ca6:	4b06      	ldr	r3, [pc, #24]	; (8014cc0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014ca8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8014cac:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014cb0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014cb4:	2100      	movs	r1, #0
 8014cb6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8014cba:	4770      	bx	lr
 8014cbc:	20012e70 	.word	0x20012e70
 8014cc0:	20012e72 	.word	0x20012e72

08014cc4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014cc4:	4b03      	ldr	r3, [pc, #12]	; (8014cd4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014cc6:	6818      	ldr	r0, [r3, #0]
 8014cc8:	b110      	cbz	r0, 8014cd0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014cca:	6803      	ldr	r3, [r0, #0]
 8014ccc:	699b      	ldr	r3, [r3, #24]
 8014cce:	4718      	bx	r3
 8014cd0:	4770      	bx	lr
 8014cd2:	bf00      	nop
 8014cd4:	20012ec0 	.word	0x20012ec0

08014cd8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014cd8:	4770      	bx	lr
	...

08014cdc <_ZN8touchgfx11Application4drawEv>:
 8014cdc:	b507      	push	{r0, r1, r2, lr}
 8014cde:	4b09      	ldr	r3, [pc, #36]	; (8014d04 <_ZN8touchgfx11Application4drawEv+0x28>)
 8014ce0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ce4:	4b08      	ldr	r3, [pc, #32]	; (8014d08 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014ce6:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014cea:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014cee:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014cf2:	6803      	ldr	r3, [r0, #0]
 8014cf4:	2100      	movs	r1, #0
 8014cf6:	9100      	str	r1, [sp, #0]
 8014cf8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014cfa:	4669      	mov	r1, sp
 8014cfc:	4798      	blx	r3
 8014cfe:	b003      	add	sp, #12
 8014d00:	f85d fb04 	ldr.w	pc, [sp], #4
 8014d04:	20012e70 	.word	0x20012e70
 8014d08:	20012e72 	.word	0x20012e72

08014d0c <_ZN8touchgfx11Application10invalidateEv>:
 8014d0c:	4b09      	ldr	r3, [pc, #36]	; (8014d34 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8014d0e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014d12:	4b09      	ldr	r3, [pc, #36]	; (8014d38 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014d14:	b082      	sub	sp, #8
 8014d16:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014d1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014d1e:	2100      	movs	r1, #0
 8014d20:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014d24:	9100      	str	r1, [sp, #0]
 8014d26:	6803      	ldr	r3, [r0, #0]
 8014d28:	aa02      	add	r2, sp, #8
 8014d2a:	e912 0006 	ldmdb	r2, {r1, r2}
 8014d2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014d30:	b002      	add	sp, #8
 8014d32:	4718      	bx	r3
 8014d34:	20012e70 	.word	0x20012e70
 8014d38:	20012e72 	.word	0x20012e72

08014d3c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014d3c:	4b03      	ldr	r3, [pc, #12]	; (8014d4c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014d3e:	6818      	ldr	r0, [r3, #0]
 8014d40:	b110      	cbz	r0, 8014d48 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014d42:	6803      	ldr	r3, [r0, #0]
 8014d44:	69db      	ldr	r3, [r3, #28]
 8014d46:	4718      	bx	r3
 8014d48:	4770      	bx	lr
 8014d4a:	bf00      	nop
 8014d4c:	20012ec0 	.word	0x20012ec0

08014d50 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014d50:	4b03      	ldr	r3, [pc, #12]	; (8014d60 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014d52:	6818      	ldr	r0, [r3, #0]
 8014d54:	b110      	cbz	r0, 8014d5c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8014d56:	6803      	ldr	r3, [r0, #0]
 8014d58:	6a1b      	ldr	r3, [r3, #32]
 8014d5a:	4718      	bx	r3
 8014d5c:	4770      	bx	lr
 8014d5e:	bf00      	nop
 8014d60:	20012ec0 	.word	0x20012ec0

08014d64 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014d64:	2300      	movs	r3, #0
 8014d66:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8014d6a:	4770      	bx	lr

08014d6c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014d6c:	4b03      	ldr	r3, [pc, #12]	; (8014d7c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014d6e:	6818      	ldr	r0, [r3, #0]
 8014d70:	b110      	cbz	r0, 8014d78 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014d72:	6803      	ldr	r3, [r0, #0]
 8014d74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014d76:	4718      	bx	r3
 8014d78:	4770      	bx	lr
 8014d7a:	bf00      	nop
 8014d7c:	20012ec0 	.word	0x20012ec0

08014d80 <_ZN8touchgfx11ApplicationD1Ev>:
 8014d80:	4770      	bx	lr

08014d82 <_ZN8touchgfx11ApplicationD0Ev>:
 8014d82:	b510      	push	{r4, lr}
 8014d84:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8014d88:	4604      	mov	r4, r0
 8014d8a:	f014 f958 	bl	802903e <_ZdlPvj>
 8014d8e:	4620      	mov	r0, r4
 8014d90:	bd10      	pop	{r4, pc}

08014d92 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014d92:	b510      	push	{r4, lr}
 8014d94:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014d98:	888a      	ldrh	r2, [r1, #4]
 8014d9a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014d9e:	4422      	add	r2, r4
 8014da0:	b212      	sxth	r2, r2
 8014da2:	4293      	cmp	r3, r2
 8014da4:	da15      	bge.n	8014dd2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014da6:	8882      	ldrh	r2, [r0, #4]
 8014da8:	4413      	add	r3, r2
 8014daa:	b21b      	sxth	r3, r3
 8014dac:	429c      	cmp	r4, r3
 8014dae:	da10      	bge.n	8014dd2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014db0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014db4:	88c9      	ldrh	r1, [r1, #6]
 8014db6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014dba:	4419      	add	r1, r3
 8014dbc:	b209      	sxth	r1, r1
 8014dbe:	428a      	cmp	r2, r1
 8014dc0:	da07      	bge.n	8014dd2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014dc2:	88c0      	ldrh	r0, [r0, #6]
 8014dc4:	4410      	add	r0, r2
 8014dc6:	b200      	sxth	r0, r0
 8014dc8:	4283      	cmp	r3, r0
 8014dca:	bfac      	ite	ge
 8014dcc:	2000      	movge	r0, #0
 8014dce:	2001      	movlt	r0, #1
 8014dd0:	bd10      	pop	{r4, pc}
 8014dd2:	2000      	movs	r0, #0
 8014dd4:	e7fc      	b.n	8014dd0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014dd6 <_ZN8touchgfx4Rect10restrictToEss>:
 8014dd6:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014dda:	2b00      	cmp	r3, #0
 8014ddc:	b510      	push	{r4, lr}
 8014dde:	da04      	bge.n	8014dea <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014de0:	8884      	ldrh	r4, [r0, #4]
 8014de2:	4423      	add	r3, r4
 8014de4:	8083      	strh	r3, [r0, #4]
 8014de6:	2300      	movs	r3, #0
 8014de8:	8003      	strh	r3, [r0, #0]
 8014dea:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014dee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014df2:	1b09      	subs	r1, r1, r4
 8014df4:	428b      	cmp	r3, r1
 8014df6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014dfa:	bfc8      	it	gt
 8014dfc:	8081      	strhgt	r1, [r0, #4]
 8014dfe:	2b00      	cmp	r3, #0
 8014e00:	da04      	bge.n	8014e0c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014e02:	88c1      	ldrh	r1, [r0, #6]
 8014e04:	440b      	add	r3, r1
 8014e06:	80c3      	strh	r3, [r0, #6]
 8014e08:	2300      	movs	r3, #0
 8014e0a:	8043      	strh	r3, [r0, #2]
 8014e0c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014e10:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014e14:	1a52      	subs	r2, r2, r1
 8014e16:	4293      	cmp	r3, r2
 8014e18:	bfc8      	it	gt
 8014e1a:	80c2      	strhgt	r2, [r0, #6]
 8014e1c:	bd10      	pop	{r4, pc}
	...

08014e20 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014e20:	b510      	push	{r4, lr}
 8014e22:	4b10      	ldr	r3, [pc, #64]	; (8014e64 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014e24:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014e28:	4b0f      	ldr	r3, [pc, #60]	; (8014e68 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8014e2a:	460c      	mov	r4, r1
 8014e2c:	4620      	mov	r0, r4
 8014e2e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014e32:	f7ff ffd0 	bl	8014dd6 <_ZN8touchgfx4Rect10restrictToEss>
 8014e36:	4b0d      	ldr	r3, [pc, #52]	; (8014e6c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014e38:	6818      	ldr	r0, [r3, #0]
 8014e3a:	b190      	cbz	r0, 8014e62 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014e3c:	6803      	ldr	r3, [r0, #0]
 8014e3e:	4621      	mov	r1, r4
 8014e40:	689b      	ldr	r3, [r3, #8]
 8014e42:	4798      	blx	r3
 8014e44:	4b0a      	ldr	r3, [pc, #40]	; (8014e70 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014e46:	6818      	ldr	r0, [r3, #0]
 8014e48:	b118      	cbz	r0, 8014e52 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8014e4a:	6803      	ldr	r3, [r0, #0]
 8014e4c:	4621      	mov	r1, r4
 8014e4e:	689b      	ldr	r3, [r3, #8]
 8014e50:	4798      	blx	r3
 8014e52:	4b08      	ldr	r3, [pc, #32]	; (8014e74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014e54:	6818      	ldr	r0, [r3, #0]
 8014e56:	6803      	ldr	r3, [r0, #0]
 8014e58:	4621      	mov	r1, r4
 8014e5a:	69db      	ldr	r3, [r3, #28]
 8014e5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014e60:	4718      	bx	r3
 8014e62:	bd10      	pop	{r4, pc}
 8014e64:	20012e72 	.word	0x20012e72
 8014e68:	20012e70 	.word	0x20012e70
 8014e6c:	20012ec0 	.word	0x20012ec0
 8014e70:	20012ebc 	.word	0x20012ebc
 8014e74:	20012e7c 	.word	0x20012e7c

08014e78 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e7a:	4606      	mov	r6, r0
 8014e7c:	4608      	mov	r0, r1
 8014e7e:	460f      	mov	r7, r1
 8014e80:	f7fa ff97 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e84:	b9e8      	cbnz	r0, 8014ec2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014e86:	f9b7 5000 	ldrsh.w	r5, [r7]
 8014e8a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014e8e:	42a5      	cmp	r5, r4
 8014e90:	db17      	blt.n	8014ec2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014e92:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014e96:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014e9a:	429a      	cmp	r2, r3
 8014e9c:	db11      	blt.n	8014ec2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014e9e:	88b9      	ldrh	r1, [r7, #4]
 8014ea0:	440d      	add	r5, r1
 8014ea2:	88b1      	ldrh	r1, [r6, #4]
 8014ea4:	440c      	add	r4, r1
 8014ea6:	b22d      	sxth	r5, r5
 8014ea8:	b224      	sxth	r4, r4
 8014eaa:	42a5      	cmp	r5, r4
 8014eac:	dc09      	bgt.n	8014ec2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014eae:	88f8      	ldrh	r0, [r7, #6]
 8014eb0:	4410      	add	r0, r2
 8014eb2:	88f2      	ldrh	r2, [r6, #6]
 8014eb4:	4413      	add	r3, r2
 8014eb6:	b200      	sxth	r0, r0
 8014eb8:	b21b      	sxth	r3, r3
 8014eba:	4298      	cmp	r0, r3
 8014ebc:	bfcc      	ite	gt
 8014ebe:	2000      	movgt	r0, #0
 8014ec0:	2001      	movle	r0, #1
 8014ec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014ec4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014ec6:	4604      	mov	r4, r0
 8014ec8:	4608      	mov	r0, r1
 8014eca:	460d      	mov	r5, r1
 8014ecc:	f7fa ff71 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ed0:	b978      	cbnz	r0, 8014ef2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014ed2:	4620      	mov	r0, r4
 8014ed4:	f7fa ff6d 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ed8:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014edc:	b150      	cbz	r0, 8014ef4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014ede:	8026      	strh	r6, [r4, #0]
 8014ee0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014ee4:	8063      	strh	r3, [r4, #2]
 8014ee6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014eea:	80a3      	strh	r3, [r4, #4]
 8014eec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014ef0:	80e3      	strh	r3, [r4, #6]
 8014ef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014ef4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014ef8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014efc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014f00:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014f04:	88ed      	ldrh	r5, [r5, #6]
 8014f06:	42b1      	cmp	r1, r6
 8014f08:	460f      	mov	r7, r1
 8014f0a:	bfa8      	it	ge
 8014f0c:	4637      	movge	r7, r6
 8014f0e:	4293      	cmp	r3, r2
 8014f10:	4618      	mov	r0, r3
 8014f12:	4466      	add	r6, ip
 8014f14:	bfa8      	it	ge
 8014f16:	4610      	movge	r0, r2
 8014f18:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014f1c:	8027      	strh	r7, [r4, #0]
 8014f1e:	442a      	add	r2, r5
 8014f20:	88e5      	ldrh	r5, [r4, #6]
 8014f22:	8060      	strh	r0, [r4, #2]
 8014f24:	4461      	add	r1, ip
 8014f26:	442b      	add	r3, r5
 8014f28:	b236      	sxth	r6, r6
 8014f2a:	b209      	sxth	r1, r1
 8014f2c:	b212      	sxth	r2, r2
 8014f2e:	b21b      	sxth	r3, r3
 8014f30:	428e      	cmp	r6, r1
 8014f32:	bfac      	ite	ge
 8014f34:	ebc7 0106 	rsbge	r1, r7, r6
 8014f38:	ebc7 0101 	rsblt	r1, r7, r1
 8014f3c:	429a      	cmp	r2, r3
 8014f3e:	bfac      	ite	ge
 8014f40:	ebc0 0202 	rsbge	r2, r0, r2
 8014f44:	ebc0 0203 	rsblt	r2, r0, r3
 8014f48:	80a1      	strh	r1, [r4, #4]
 8014f4a:	80e2      	strh	r2, [r4, #6]
 8014f4c:	e7d1      	b.n	8014ef2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014f50 <_ZN8touchgfx11Application11getInstanceEv>:
 8014f50:	4b01      	ldr	r3, [pc, #4]	; (8014f58 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014f52:	6818      	ldr	r0, [r3, #0]
 8014f54:	4770      	bx	lr
 8014f56:	bf00      	nop
 8014f58:	20012ed0 	.word	0x20012ed0

08014f5c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014f5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014f5e:	4b10      	ldr	r3, [pc, #64]	; (8014fa0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014f60:	781b      	ldrb	r3, [r3, #0]
 8014f62:	4605      	mov	r5, r0
 8014f64:	b1d3      	cbz	r3, 8014f9c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014f66:	4b0f      	ldr	r3, [pc, #60]	; (8014fa4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014f68:	4f0f      	ldr	r7, [pc, #60]	; (8014fa8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014f6a:	881c      	ldrh	r4, [r3, #0]
 8014f6c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014f70:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014f74:	42a3      	cmp	r3, r4
 8014f76:	d90e      	bls.n	8014f96 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014f78:	683b      	ldr	r3, [r7, #0]
 8014f7a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014f7e:	b10a      	cbz	r2, 8014f84 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014f80:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014f82:	b900      	cbnz	r0, 8014f86 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014f84:	6898      	ldr	r0, [r3, #8]
 8014f86:	6803      	ldr	r3, [r0, #0]
 8014f88:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014f8c:	69db      	ldr	r3, [r3, #28]
 8014f8e:	3401      	adds	r4, #1
 8014f90:	4798      	blx	r3
 8014f92:	b2a4      	uxth	r4, r4
 8014f94:	e7ec      	b.n	8014f70 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014f96:	2300      	movs	r3, #0
 8014f98:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014f9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014f9e:	bf00      	nop
 8014fa0:	20012e7a 	.word	0x20012e7a
 8014fa4:	20000088 	.word	0x20000088
 8014fa8:	20012e7c 	.word	0x20012e7c

08014fac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014fac:	b510      	push	{r4, lr}
 8014fae:	2300      	movs	r3, #0
 8014fb0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014fb4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014fb8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014fbc:	4604      	mov	r4, r0
 8014fbe:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014fc2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014fc6:	429a      	cmp	r2, r3
 8014fc8:	d90e      	bls.n	8014fe8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014fca:	18e2      	adds	r2, r4, r3
 8014fcc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014fd0:	b122      	cbz	r2, 8014fdc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014fd2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014fd6:	6803      	ldr	r3, [r0, #0]
 8014fd8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014fda:	4798      	blx	r3
 8014fdc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014fe0:	3301      	adds	r3, #1
 8014fe2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014fe6:	e7ea      	b.n	8014fbe <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014fe8:	bd10      	pop	{r4, pc}

08014fea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014fea:	b530      	push	{r4, r5, lr}
 8014fec:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014ff0:	2200      	movs	r2, #0
 8014ff2:	b293      	uxth	r3, r2
 8014ff4:	429d      	cmp	r5, r3
 8014ff6:	d90e      	bls.n	8015016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014ff8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014ffc:	428b      	cmp	r3, r1
 8014ffe:	d10b      	bne.n	8015018 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015000:	1884      	adds	r4, r0, r2
 8015002:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015006:	b13b      	cbz	r3, 8015018 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015008:	3b01      	subs	r3, #1
 801500a:	b2db      	uxtb	r3, r3
 801500c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015010:	b90b      	cbnz	r3, 8015016 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015012:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015016:	bd30      	pop	{r4, r5, pc}
 8015018:	3201      	adds	r2, #1
 801501a:	e7ea      	b.n	8014ff2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801501c:	2300      	movs	r3, #0
 801501e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015022:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015026:	30a4      	adds	r0, #164	; 0xa4
 8015028:	f802 3b01 	strb.w	r3, [r2], #1
 801502c:	4282      	cmp	r2, r0
 801502e:	d1fb      	bne.n	8015028 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015030:	4770      	bx	lr
	...

08015034 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015034:	b570      	push	{r4, r5, r6, lr}
 8015036:	4c0b      	ldr	r4, [pc, #44]	; (8015064 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015038:	4605      	mov	r5, r0
 801503a:	6820      	ldr	r0, [r4, #0]
 801503c:	460e      	mov	r6, r1
 801503e:	b110      	cbz	r0, 8015046 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015040:	6803      	ldr	r3, [r0, #0]
 8015042:	695b      	ldr	r3, [r3, #20]
 8015044:	4798      	blx	r3
 8015046:	1d28      	adds	r0, r5, #4
 8015048:	f7ff ffe8 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801504c:	6026      	str	r6, [r4, #0]
 801504e:	6833      	ldr	r3, [r6, #0]
 8015050:	4630      	mov	r0, r6
 8015052:	68db      	ldr	r3, [r3, #12]
 8015054:	4798      	blx	r3
 8015056:	682b      	ldr	r3, [r5, #0]
 8015058:	4628      	mov	r0, r5
 801505a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801505c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015060:	4718      	bx	r3
 8015062:	bf00      	nop
 8015064:	20012ec0 	.word	0x20012ec0

08015068 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015068:	2300      	movs	r3, #0
 801506a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801506e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015072:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015074:	461a      	mov	r2, r3
 8015076:	461c      	mov	r4, r3
 8015078:	461d      	mov	r5, r3
 801507a:	459c      	cmp	ip, r3
 801507c:	dd1a      	ble.n	80150b4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801507e:	18c6      	adds	r6, r0, r3
 8015080:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015084:	b16e      	cbz	r6, 80150a2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015086:	429a      	cmp	r2, r3
 8015088:	d008      	beq.n	801509c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801508a:	fa1f fe82 	uxth.w	lr, r2
 801508e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015092:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015096:	1887      	adds	r7, r0, r2
 8015098:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 801509c:	3201      	adds	r2, #1
 801509e:	3301      	adds	r3, #1
 80150a0:	e7eb      	b.n	801507a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80150a2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80150a6:	4299      	cmp	r1, r3
 80150a8:	bfa8      	it	ge
 80150aa:	3501      	addge	r5, #1
 80150ac:	429e      	cmp	r6, r3
 80150ae:	bfc8      	it	gt
 80150b0:	3401      	addgt	r4, #1
 80150b2:	e7f4      	b.n	801509e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80150b4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80150b8:	1b49      	subs	r1, r1, r5
 80150ba:	1b1b      	subs	r3, r3, r4
 80150bc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80150c0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80150c4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80150c8:	4293      	cmp	r3, r2
 80150ca:	dd03      	ble.n	80150d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80150cc:	3b01      	subs	r3, #1
 80150ce:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80150d2:	e7f7      	b.n	80150c4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80150d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080150d8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80150d8:	b570      	push	{r4, r5, r6, lr}
 80150da:	4d16      	ldr	r5, [pc, #88]	; (8015134 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80150dc:	4604      	mov	r4, r0
 80150de:	6828      	ldr	r0, [r5, #0]
 80150e0:	b140      	cbz	r0, 80150f4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80150e2:	7a03      	ldrb	r3, [r0, #8]
 80150e4:	b933      	cbnz	r3, 80150f4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80150e6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80150ea:	6803      	ldr	r3, [r0, #0]
 80150ec:	689b      	ldr	r3, [r3, #8]
 80150ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80150f2:	4718      	bx	r3
 80150f4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80150f8:	4e0f      	ldr	r6, [pc, #60]	; (8015138 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80150fa:	b973      	cbnz	r3, 801511a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80150fc:	b168      	cbz	r0, 801511a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80150fe:	7a03      	ldrb	r3, [r0, #8]
 8015100:	b15b      	cbz	r3, 801511a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015102:	6830      	ldr	r0, [r6, #0]
 8015104:	b110      	cbz	r0, 801510c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015106:	6803      	ldr	r3, [r0, #0]
 8015108:	691b      	ldr	r3, [r3, #16]
 801510a:	4798      	blx	r3
 801510c:	6828      	ldr	r0, [r5, #0]
 801510e:	6803      	ldr	r3, [r0, #0]
 8015110:	68db      	ldr	r3, [r3, #12]
 8015112:	4798      	blx	r3
 8015114:	2301      	movs	r3, #1
 8015116:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801511a:	3404      	adds	r4, #4
 801511c:	4620      	mov	r0, r4
 801511e:	f7ff ff45 	bl	8014fac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015122:	4620      	mov	r0, r4
 8015124:	f7ff ffa0 	bl	8015068 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015128:	6830      	ldr	r0, [r6, #0]
 801512a:	b110      	cbz	r0, 8015132 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801512c:	6803      	ldr	r3, [r0, #0]
 801512e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015130:	e7dd      	b.n	80150ee <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015132:	bd70      	pop	{r4, r5, r6, pc}
 8015134:	20012ec4 	.word	0x20012ec4
 8015138:	20012ec0 	.word	0x20012ec0

0801513c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801513c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801513e:	2300      	movs	r3, #0
 8015140:	4604      	mov	r4, r0
 8015142:	460d      	mov	r5, r1
 8015144:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015148:	4618      	mov	r0, r3
 801514a:	b29a      	uxth	r2, r3
 801514c:	4291      	cmp	r1, r2
 801514e:	d911      	bls.n	8015174 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015150:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015154:	18e6      	adds	r6, r4, r3
 8015156:	42af      	cmp	r7, r5
 8015158:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801515c:	d105      	bne.n	801516a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801515e:	2aff      	cmp	r2, #255	; 0xff
 8015160:	d002      	beq.n	8015168 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015162:	3201      	adds	r2, #1
 8015164:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015168:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801516a:	2a00      	cmp	r2, #0
 801516c:	bf08      	it	eq
 801516e:	2001      	moveq	r0, #1
 8015170:	3301      	adds	r3, #1
 8015172:	e7ea      	b.n	801514a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015174:	b120      	cbz	r0, 8015180 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015176:	2920      	cmp	r1, #32
 8015178:	d102      	bne.n	8015180 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801517a:	4620      	mov	r0, r4
 801517c:	f7ff ff74 	bl	8015068 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015180:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015184:	2b1f      	cmp	r3, #31
 8015186:	d8ef      	bhi.n	8015168 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015188:	18e2      	adds	r2, r4, r3
 801518a:	2101      	movs	r1, #1
 801518c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015190:	185a      	adds	r2, r3, r1
 8015192:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015196:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801519a:	e7e5      	b.n	8015168 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0801519c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801519c:	4603      	mov	r3, r0
 801519e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80151a2:	2200      	movs	r2, #0
 80151a4:	801a      	strh	r2, [r3, #0]
 80151a6:	805a      	strh	r2, [r3, #2]
 80151a8:	809a      	strh	r2, [r3, #4]
 80151aa:	80da      	strh	r2, [r3, #6]
 80151ac:	3308      	adds	r3, #8
 80151ae:	428b      	cmp	r3, r1
 80151b0:	d1f8      	bne.n	80151a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80151b2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80151b6:	4770      	bx	lr

080151b8 <_ZN8touchgfx11ApplicationC1Ev>:
 80151b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80151ba:	4606      	mov	r6, r0
 80151bc:	4b1c      	ldr	r3, [pc, #112]	; (8015230 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80151be:	f846 3b04 	str.w	r3, [r6], #4
 80151c2:	4604      	mov	r4, r0
 80151c4:	2500      	movs	r5, #0
 80151c6:	22a8      	movs	r2, #168	; 0xa8
 80151c8:	2100      	movs	r1, #0
 80151ca:	4630      	mov	r0, r6
 80151cc:	f014 ff4f 	bl	802a06e <memset>
 80151d0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80151d4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80151d8:	f7ff ffe0 	bl	801519c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80151dc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80151e0:	f7ff ffdc 	bl	801519c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80151e4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80151e8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80151ec:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80151f0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80151f4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80151f8:	490e      	ldr	r1, [pc, #56]	; (8015234 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80151fa:	480f      	ldr	r0, [pc, #60]	; (8015238 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80151fc:	4f0f      	ldr	r7, [pc, #60]	; (801523c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80151fe:	f010 fde9 	bl	8025dd4 <CRC_Lock>
 8015202:	4b0f      	ldr	r3, [pc, #60]	; (8015240 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015204:	b158      	cbz	r0, 801521e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015206:	801d      	strh	r5, [r3, #0]
 8015208:	4a0e      	ldr	r2, [pc, #56]	; (8015244 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801520a:	2300      	movs	r3, #0
 801520c:	6013      	str	r3, [r2, #0]
 801520e:	4a0e      	ldr	r2, [pc, #56]	; (8015248 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015210:	603b      	str	r3, [r7, #0]
 8015212:	4630      	mov	r0, r6
 8015214:	6013      	str	r3, [r2, #0]
 8015216:	f7ff ff01 	bl	801501c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801521a:	4620      	mov	r0, r4
 801521c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801521e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015222:	2002      	movs	r0, #2
 8015224:	801a      	strh	r2, [r3, #0]
 8015226:	6038      	str	r0, [r7, #0]
 8015228:	f001 fb4a 	bl	80168c0 <_ZN8touchgfx6Screen4drawEv>
 801522c:	e7ec      	b.n	8015208 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801522e:	bf00      	nop
 8015230:	0802e410 	.word	0x0802e410
 8015234:	b5e8b5cd 	.word	0xb5e8b5cd
 8015238:	f407a5c2 	.word	0xf407a5c2
 801523c:	20012ec0 	.word	0x20012ec0
 8015240:	20000088 	.word	0x20000088
 8015244:	20012ed0 	.word	0x20012ed0
 8015248:	20012ec4 	.word	0x20012ec4

0801524c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801524c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015250:	3b01      	subs	r3, #1
 8015252:	b29b      	uxth	r3, r3
 8015254:	428b      	cmp	r3, r1
 8015256:	b510      	push	{r4, lr}
 8015258:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801525c:	d908      	bls.n	8015270 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801525e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015262:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015266:	681a      	ldr	r2, [r3, #0]
 8015268:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801526c:	685a      	ldr	r2, [r3, #4]
 801526e:	6062      	str	r2, [r4, #4]
 8015270:	bd10      	pop	{r4, pc}
	...

08015274 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015278:	4b8f      	ldr	r3, [pc, #572]	; (80154b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801527a:	b08f      	sub	sp, #60	; 0x3c
 801527c:	ac0a      	add	r4, sp, #40	; 0x28
 801527e:	e884 0006 	stmia.w	r4, {r1, r2}
 8015282:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015286:	4b8d      	ldr	r3, [pc, #564]	; (80154bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8015288:	4683      	mov	fp, r0
 801528a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801528e:	4620      	mov	r0, r4
 8015290:	f7ff fda1 	bl	8014dd6 <_ZN8touchgfx4Rect10restrictToEss>
 8015294:	4620      	mov	r0, r4
 8015296:	f7fa fd8c 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801529a:	2800      	cmp	r0, #0
 801529c:	d16a      	bne.n	8015374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801529e:	9403      	str	r4, [sp, #12]
 80152a0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80152a4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80152a8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80152ac:	35a4      	adds	r5, #164	; 0xa4
 80152ae:	9301      	str	r3, [sp, #4]
 80152b0:	b15c      	cbz	r4, 80152ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80152b2:	4629      	mov	r1, r5
 80152b4:	9803      	ldr	r0, [sp, #12]
 80152b6:	f7ff fddf 	bl	8014e78 <_ZNK8touchgfx4Rect8includesERKS0_>
 80152ba:	3c01      	subs	r4, #1
 80152bc:	b118      	cbz	r0, 80152c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80152be:	b2a1      	uxth	r1, r4
 80152c0:	9801      	ldr	r0, [sp, #4]
 80152c2:	f7ff ffc3 	bl	801524c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80152c6:	3d08      	subs	r5, #8
 80152c8:	e7f2      	b.n	80152b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80152ca:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80152ce:	f8cd a010 	str.w	sl, [sp, #16]
 80152d2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80152d6:	9302      	str	r3, [sp, #8]
 80152d8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80152dc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80152e0:	9306      	str	r3, [sp, #24]
 80152e2:	445c      	add	r4, fp
 80152e4:	2500      	movs	r5, #0
 80152e6:	4626      	mov	r6, r4
 80152e8:	f8cd a014 	str.w	sl, [sp, #20]
 80152ec:	462f      	mov	r7, r5
 80152ee:	9b05      	ldr	r3, [sp, #20]
 80152f0:	2b00      	cmp	r3, #0
 80152f2:	d073      	beq.n	80153dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80152f4:	9903      	ldr	r1, [sp, #12]
 80152f6:	4630      	mov	r0, r6
 80152f8:	f7ff fd4b 	bl	8014d92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80152fc:	b350      	cbz	r0, 8015354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80152fe:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015302:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015306:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801530a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801530e:	45e6      	cmp	lr, ip
 8015310:	db33      	blt.n	801537a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015312:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015316:	88b3      	ldrh	r3, [r6, #4]
 8015318:	4472      	add	r2, lr
 801531a:	4463      	add	r3, ip
 801531c:	b212      	sxth	r2, r2
 801531e:	b21b      	sxth	r3, r3
 8015320:	429a      	cmp	r2, r3
 8015322:	dc2a      	bgt.n	801537a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015324:	88f3      	ldrh	r3, [r6, #6]
 8015326:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801532a:	fa1f f289 	uxth.w	r2, r9
 801532e:	4413      	add	r3, r2
 8015330:	b29b      	uxth	r3, r3
 8015332:	45c8      	cmp	r8, r9
 8015334:	fa1f fc88 	uxth.w	ip, r8
 8015338:	fa0f fe83 	sxth.w	lr, r3
 801533c:	db0f      	blt.n	801535e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801533e:	eba3 030c 	sub.w	r3, r3, ip
 8015342:	1ac9      	subs	r1, r1, r3
 8015344:	b209      	sxth	r1, r1
 8015346:	2900      	cmp	r1, #0
 8015348:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801534c:	dd12      	ble.n	8015374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801534e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015352:	4605      	mov	r5, r0
 8015354:	9b05      	ldr	r3, [sp, #20]
 8015356:	3b01      	subs	r3, #1
 8015358:	9305      	str	r3, [sp, #20]
 801535a:	3e08      	subs	r6, #8
 801535c:	e7c7      	b.n	80152ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801535e:	4461      	add	r1, ip
 8015360:	b209      	sxth	r1, r1
 8015362:	4571      	cmp	r1, lr
 8015364:	dc38      	bgt.n	80153d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015366:	eba2 020c 	sub.w	r2, r2, ip
 801536a:	b212      	sxth	r2, r2
 801536c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8015370:	2a00      	cmp	r2, #0
 8015372:	dcee      	bgt.n	8015352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015374:	b00f      	add	sp, #60	; 0x3c
 8015376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801537a:	45c8      	cmp	r8, r9
 801537c:	db2c      	blt.n	80153d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801537e:	88f3      	ldrh	r3, [r6, #6]
 8015380:	4499      	add	r9, r3
 8015382:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8015386:	4498      	add	r8, r3
 8015388:	fa0f f989 	sxth.w	r9, r9
 801538c:	fa0f f888 	sxth.w	r8, r8
 8015390:	45c1      	cmp	r9, r8
 8015392:	db21      	blt.n	80153d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015394:	88b3      	ldrh	r3, [r6, #4]
 8015396:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801539a:	fa1f f28c 	uxth.w	r2, ip
 801539e:	4413      	add	r3, r2
 80153a0:	b29b      	uxth	r3, r3
 80153a2:	45e6      	cmp	lr, ip
 80153a4:	fa1f f88e 	uxth.w	r8, lr
 80153a8:	fa0f f983 	sxth.w	r9, r3
 80153ac:	db0a      	blt.n	80153c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80153ae:	eba3 0308 	sub.w	r3, r3, r8
 80153b2:	1ac9      	subs	r1, r1, r3
 80153b4:	b209      	sxth	r1, r1
 80153b6:	2900      	cmp	r1, #0
 80153b8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80153bc:	ddda      	ble.n	8015374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80153be:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80153c2:	e7c6      	b.n	8015352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80153c4:	4441      	add	r1, r8
 80153c6:	b209      	sxth	r1, r1
 80153c8:	4549      	cmp	r1, r9
 80153ca:	dc05      	bgt.n	80153d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80153cc:	eba2 0208 	sub.w	r2, r2, r8
 80153d0:	b212      	sxth	r2, r2
 80153d2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80153d6:	e7cb      	b.n	8015370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80153d8:	4607      	mov	r7, r0
 80153da:	e7bb      	b.n	8015354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80153dc:	2d00      	cmp	r5, #0
 80153de:	d181      	bne.n	80152e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80153e0:	2f00      	cmp	r7, #0
 80153e2:	f000 81dd 	beq.w	80157a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80153e6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80153ea:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80153ee:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80153f2:	b2b3      	uxth	r3, r6
 80153f4:	9305      	str	r3, [sp, #20]
 80153f6:	9a05      	ldr	r2, [sp, #20]
 80153f8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80153fc:	4413      	add	r3, r2
 80153fe:	b2ba      	uxth	r2, r7
 8015400:	4492      	add	sl, r2
 8015402:	b29b      	uxth	r3, r3
 8015404:	fa1f fa8a 	uxth.w	sl, sl
 8015408:	fa0f f883 	sxth.w	r8, r3
 801540c:	fa0f f98a 	sxth.w	r9, sl
 8015410:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015414:	9b04      	ldr	r3, [sp, #16]
 8015416:	2b00      	cmp	r3, #0
 8015418:	d052      	beq.n	80154c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801541a:	9903      	ldr	r1, [sp, #12]
 801541c:	4620      	mov	r0, r4
 801541e:	f7ff fcb8 	bl	8014d92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015422:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015426:	b1c0      	cbz	r0, 801545a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015428:	f9b4 e000 	ldrsh.w	lr, [r4]
 801542c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015430:	4576      	cmp	r6, lr
 8015432:	dc22      	bgt.n	801547a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015434:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015438:	44f4      	add	ip, lr
 801543a:	fa0f fc8c 	sxth.w	ip, ip
 801543e:	45e0      	cmp	r8, ip
 8015440:	db1b      	blt.n	801547a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015442:	428f      	cmp	r7, r1
 8015444:	fa1f fc81 	uxth.w	ip, r1
 8015448:	88e1      	ldrh	r1, [r4, #6]
 801544a:	dc0d      	bgt.n	8015468 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801544c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015450:	eba1 010c 	sub.w	r1, r1, ip
 8015454:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015458:	80e1      	strh	r1, [r4, #6]
 801545a:	4628      	mov	r0, r5
 801545c:	9904      	ldr	r1, [sp, #16]
 801545e:	3901      	subs	r1, #1
 8015460:	9104      	str	r1, [sp, #16]
 8015462:	3c08      	subs	r4, #8
 8015464:	4605      	mov	r5, r0
 8015466:	e7d3      	b.n	8015410 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8015468:	4461      	add	r1, ip
 801546a:	b209      	sxth	r1, r1
 801546c:	4549      	cmp	r1, r9
 801546e:	dcf5      	bgt.n	801545c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015470:	eba2 0c0c 	sub.w	ip, r2, ip
 8015474:	f8a4 c006 	strh.w	ip, [r4, #6]
 8015478:	e7ef      	b.n	801545a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801547a:	428f      	cmp	r7, r1
 801547c:	dcee      	bgt.n	801545c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801547e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8015482:	4461      	add	r1, ip
 8015484:	b209      	sxth	r1, r1
 8015486:	4589      	cmp	r9, r1
 8015488:	dbe8      	blt.n	801545c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801548a:	4576      	cmp	r6, lr
 801548c:	fa1f fc8e 	uxth.w	ip, lr
 8015490:	88a1      	ldrh	r1, [r4, #4]
 8015492:	dc07      	bgt.n	80154a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8015494:	eba3 0c0c 	sub.w	ip, r3, ip
 8015498:	eba1 010c 	sub.w	r1, r1, ip
 801549c:	f8a4 8000 	strh.w	r8, [r4]
 80154a0:	80a1      	strh	r1, [r4, #4]
 80154a2:	e7da      	b.n	801545a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80154a4:	4461      	add	r1, ip
 80154a6:	b209      	sxth	r1, r1
 80154a8:	4588      	cmp	r8, r1
 80154aa:	dbd7      	blt.n	801545c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80154ac:	9905      	ldr	r1, [sp, #20]
 80154ae:	eba1 0c0c 	sub.w	ip, r1, ip
 80154b2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80154b6:	e7d0      	b.n	801545a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80154b8:	20012e72 	.word	0x20012e72
 80154bc:	20012e70 	.word	0x20012e70
 80154c0:	2d00      	cmp	r5, #0
 80154c2:	f000 816d 	beq.w	80157a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80154c6:	9b06      	ldr	r3, [sp, #24]
 80154c8:	445b      	add	r3, fp
 80154ca:	461c      	mov	r4, r3
 80154cc:	9b02      	ldr	r3, [sp, #8]
 80154ce:	3301      	adds	r3, #1
 80154d0:	f000 8166 	beq.w	80157a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80154d4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80154d8:	4629      	mov	r1, r5
 80154da:	9803      	ldr	r0, [sp, #12]
 80154dc:	f7ff fccc 	bl	8014e78 <_ZNK8touchgfx4Rect8includesERKS0_>
 80154e0:	b120      	cbz	r0, 80154ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80154e2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80154e6:	9801      	ldr	r0, [sp, #4]
 80154e8:	f7ff feb0 	bl	801524c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80154ec:	9903      	ldr	r1, [sp, #12]
 80154ee:	4628      	mov	r0, r5
 80154f0:	f7ff fc4f 	bl	8014d92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80154f4:	2800      	cmp	r0, #0
 80154f6:	f000 809c 	beq.w	8015632 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80154fa:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80154fe:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015502:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015506:	9309      	str	r3, [sp, #36]	; 0x24
 8015508:	fa1f f189 	uxth.w	r1, r9
 801550c:	eb01 0c03 	add.w	ip, r1, r3
 8015510:	fa1f fa8c 	uxth.w	sl, ip
 8015514:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015518:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801551c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015520:	b283      	uxth	r3, r0
 8015522:	eb03 050c 	add.w	r5, r3, ip
 8015526:	b2ad      	uxth	r5, r5
 8015528:	9505      	str	r5, [sp, #20]
 801552a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801552e:	9504      	str	r5, [sp, #16]
 8015530:	4548      	cmp	r0, r9
 8015532:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015536:	f340 8099 	ble.w	801566c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801553a:	1a5b      	subs	r3, r3, r1
 801553c:	b29b      	uxth	r3, r3
 801553e:	4596      	cmp	lr, r2
 8015540:	fa0f f08a 	sxth.w	r0, sl
 8015544:	b21e      	sxth	r6, r3
 8015546:	dd2e      	ble.n	80155a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015548:	9f02      	ldr	r7, [sp, #8]
 801554a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801554e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015552:	9f04      	ldr	r7, [sp, #16]
 8015554:	1a3f      	subs	r7, r7, r0
 8015556:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801555a:	fa1f fe8e 	uxth.w	lr, lr
 801555e:	b292      	uxth	r2, r2
 8015560:	ebae 0102 	sub.w	r1, lr, r2
 8015564:	44a6      	add	lr, r4
 8015566:	4402      	add	r2, r0
 8015568:	b289      	uxth	r1, r1
 801556a:	fa0f fe8e 	sxth.w	lr, lr
 801556e:	b212      	sxth	r2, r2
 8015570:	b20d      	sxth	r5, r1
 8015572:	ebae 0202 	sub.w	r2, lr, r2
 8015576:	436f      	muls	r7, r5
 8015578:	4372      	muls	r2, r6
 801557a:	4297      	cmp	r7, r2
 801557c:	db09      	blt.n	8015592 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801557e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8015582:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8015586:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801558a:	449c      	add	ip, r3
 801558c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015590:	e686      	b.n	80152a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015592:	4421      	add	r1, r4
 8015594:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8015598:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801559c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80155a0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80155a4:	e67c      	b.n	80152a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80155a6:	9f04      	ldr	r7, [sp, #16]
 80155a8:	42b8      	cmp	r0, r7
 80155aa:	da27      	bge.n	80155fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80155ac:	9902      	ldr	r1, [sp, #8]
 80155ae:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80155b2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80155b6:	eb05 010e 	add.w	r1, r5, lr
 80155ba:	fa1f f881 	uxth.w	r8, r1
 80155be:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80155c2:	4411      	add	r1, r2
 80155c4:	eba1 0108 	sub.w	r1, r1, r8
 80155c8:	b289      	uxth	r1, r1
 80155ca:	fa0f f988 	sxth.w	r9, r8
 80155ce:	eba2 020e 	sub.w	r2, r2, lr
 80155d2:	fa0f f881 	sxth.w	r8, r1
 80155d6:	1a3f      	subs	r7, r7, r0
 80155d8:	4372      	muls	r2, r6
 80155da:	fb08 f707 	mul.w	r7, r8, r7
 80155de:	42ba      	cmp	r2, r7
 80155e0:	dc06      	bgt.n	80155f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80155e2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80155e6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80155ea:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80155ee:	e7ca      	b.n	8015586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80155f0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80155f4:	4429      	add	r1, r5
 80155f6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80155fa:	e651      	b.n	80152a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80155fc:	9805      	ldr	r0, [sp, #20]
 80155fe:	ebaa 0000 	sub.w	r0, sl, r0
 8015602:	b280      	uxth	r0, r0
 8015604:	2d06      	cmp	r5, #6
 8015606:	fa0f fe80 	sxth.w	lr, r0
 801560a:	d817      	bhi.n	801563c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801560c:	9b04      	ldr	r3, [sp, #16]
 801560e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015612:	1c6b      	adds	r3, r5, #1
 8015614:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015618:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801561c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015620:	9b01      	ldr	r3, [sp, #4]
 8015622:	9801      	ldr	r0, [sp, #4]
 8015624:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015628:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801562c:	805a      	strh	r2, [r3, #2]
 801562e:	809e      	strh	r6, [r3, #4]
 8015630:	80d9      	strh	r1, [r3, #6]
 8015632:	9b02      	ldr	r3, [sp, #8]
 8015634:	3b01      	subs	r3, #1
 8015636:	9302      	str	r3, [sp, #8]
 8015638:	3c08      	subs	r4, #8
 801563a:	e747      	b.n	80154cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801563c:	9a02      	ldr	r2, [sp, #8]
 801563e:	45b6      	cmp	lr, r6
 8015640:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015644:	db0d      	blt.n	8015662 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015646:	449c      	add	ip, r3
 8015648:	fa1f fc8c 	uxth.w	ip, ip
 801564c:	445a      	add	r2, fp
 801564e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015652:	448c      	add	ip, r1
 8015654:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015658:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801565c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015660:	e61e      	b.n	80152a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015662:	445a      	add	r2, fp
 8015664:	4484      	add	ip, r0
 8015666:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801566a:	e78f      	b.n	801558c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801566c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015670:	fa1f f18e 	uxth.w	r1, lr
 8015674:	eb01 0806 	add.w	r8, r1, r6
 8015678:	b293      	uxth	r3, r2
 801567a:	fa1f f888 	uxth.w	r8, r8
 801567e:	9306      	str	r3, [sp, #24]
 8015680:	fa0f f388 	sxth.w	r3, r8
 8015684:	9307      	str	r3, [sp, #28]
 8015686:	9f06      	ldr	r7, [sp, #24]
 8015688:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801568c:	443b      	add	r3, r7
 801568e:	b29b      	uxth	r3, r3
 8015690:	4596      	cmp	lr, r2
 8015692:	9308      	str	r3, [sp, #32]
 8015694:	da24      	bge.n	80156e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8015696:	9905      	ldr	r1, [sp, #20]
 8015698:	eba3 0308 	sub.w	r3, r3, r8
 801569c:	ebaa 0401 	sub.w	r4, sl, r1
 80156a0:	b2a4      	uxth	r4, r4
 80156a2:	b29b      	uxth	r3, r3
 80156a4:	b225      	sxth	r5, r4
 80156a6:	b219      	sxth	r1, r3
 80156a8:	eba2 020e 	sub.w	r2, r2, lr
 80156ac:	eba9 0000 	sub.w	r0, r9, r0
 80156b0:	436a      	muls	r2, r5
 80156b2:	4348      	muls	r0, r1
 80156b4:	4282      	cmp	r2, r0
 80156b6:	9a02      	ldr	r2, [sp, #8]
 80156b8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80156bc:	445a      	add	r2, fp
 80156be:	dc06      	bgt.n	80156ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80156c0:	9b07      	ldr	r3, [sp, #28]
 80156c2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80156c6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80156ca:	44a4      	add	ip, r4
 80156cc:	e75e      	b.n	801558c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80156ce:	9904      	ldr	r1, [sp, #16]
 80156d0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80156d4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80156d8:	4433      	add	r3, r6
 80156da:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80156de:	e5df      	b.n	80152a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80156e0:	9f06      	ldr	r7, [sp, #24]
 80156e2:	9b04      	ldr	r3, [sp, #16]
 80156e4:	1bc9      	subs	r1, r1, r7
 80156e6:	fa0f f78a 	sxth.w	r7, sl
 80156ea:	b289      	uxth	r1, r1
 80156ec:	429f      	cmp	r7, r3
 80156ee:	fa0f fe81 	sxth.w	lr, r1
 80156f2:	dd23      	ble.n	801573c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80156f4:	9a05      	ldr	r2, [sp, #20]
 80156f6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80156fa:	9d07      	ldr	r5, [sp, #28]
 80156fc:	ebaa 0202 	sub.w	r2, sl, r2
 8015700:	b292      	uxth	r2, r2
 8015702:	eba5 0a03 	sub.w	sl, r5, r3
 8015706:	b214      	sxth	r4, r2
 8015708:	eba9 0000 	sub.w	r0, r9, r0
 801570c:	9b02      	ldr	r3, [sp, #8]
 801570e:	fb0e f000 	mul.w	r0, lr, r0
 8015712:	fb04 fa0a 	mul.w	sl, r4, sl
 8015716:	00db      	lsls	r3, r3, #3
 8015718:	4550      	cmp	r0, sl
 801571a:	445b      	add	r3, fp
 801571c:	db03      	blt.n	8015726 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801571e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015722:	4494      	add	ip, r2
 8015724:	e732      	b.n	801558c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015726:	9a04      	ldr	r2, [sp, #16]
 8015728:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801572c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015730:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015734:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015738:	4431      	add	r1, r6
 801573a:	e75c      	b.n	80155f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801573c:	9b08      	ldr	r3, [sp, #32]
 801573e:	eba3 0308 	sub.w	r3, r3, r8
 8015742:	b29b      	uxth	r3, r3
 8015744:	2d06      	cmp	r5, #6
 8015746:	b218      	sxth	r0, r3
 8015748:	d813      	bhi.n	8015772 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801574a:	9b07      	ldr	r3, [sp, #28]
 801574c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015750:	1c6b      	adds	r3, r5, #1
 8015752:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015756:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801575a:	9b01      	ldr	r3, [sp, #4]
 801575c:	9901      	ldr	r1, [sp, #4]
 801575e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015762:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015766:	805a      	strh	r2, [r3, #2]
 8015768:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801576a:	809a      	strh	r2, [r3, #4]
 801576c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015770:	e75f      	b.n	8015632 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015772:	9c02      	ldr	r4, [sp, #8]
 8015774:	4570      	cmp	r0, lr
 8015776:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801577a:	db0d      	blt.n	8015798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801577c:	4431      	add	r1, r6
 801577e:	9b06      	ldr	r3, [sp, #24]
 8015780:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015784:	b289      	uxth	r1, r1
 8015786:	445c      	add	r4, fp
 8015788:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801578c:	4419      	add	r1, r3
 801578e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015792:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015796:	e583      	b.n	80152a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015798:	445c      	add	r4, fp
 801579a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801579e:	e79b      	b.n	80156d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80157a0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80157a4:	1e65      	subs	r5, r4, #1
 80157a6:	b2ad      	uxth	r5, r5
 80157a8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80157ac:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80157b0:	42b5      	cmp	r5, r6
 80157b2:	d044      	beq.n	801583e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80157b4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80157b8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80157bc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80157c0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80157c4:	4282      	cmp	r2, r0
 80157c6:	d11f      	bne.n	8015808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80157c8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80157cc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80157d0:	459c      	cmp	ip, r3
 80157d2:	d119      	bne.n	8015808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80157d4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80157d8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80157dc:	19d8      	adds	r0, r3, r7
 80157de:	b200      	sxth	r0, r0
 80157e0:	4288      	cmp	r0, r1
 80157e2:	d109      	bne.n	80157f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80157e4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80157e8:	4413      	add	r3, r2
 80157ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80157ee:	4629      	mov	r1, r5
 80157f0:	9801      	ldr	r0, [sp, #4]
 80157f2:	f7ff fd2b 	bl	801524c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80157f6:	e003      	b.n	8015800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80157f8:	4411      	add	r1, r2
 80157fa:	b209      	sxth	r1, r1
 80157fc:	42b9      	cmp	r1, r7
 80157fe:	d0f3      	beq.n	80157e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015800:	3d01      	subs	r5, #1
 8015802:	b2ad      	uxth	r5, r5
 8015804:	3c08      	subs	r4, #8
 8015806:	e7d3      	b.n	80157b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015808:	42b9      	cmp	r1, r7
 801580a:	d1f9      	bne.n	8015800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801580c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015810:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015814:	4299      	cmp	r1, r3
 8015816:	d1f3      	bne.n	8015800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015818:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801581c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015820:	181f      	adds	r7, r3, r0
 8015822:	b23f      	sxth	r7, r7
 8015824:	42ba      	cmp	r2, r7
 8015826:	d105      	bne.n	8015834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015828:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801582c:	440b      	add	r3, r1
 801582e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015832:	e7dc      	b.n	80157ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015834:	440a      	add	r2, r1
 8015836:	b212      	sxth	r2, r2
 8015838:	4290      	cmp	r0, r2
 801583a:	d1e1      	bne.n	8015800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801583c:	e7f6      	b.n	801582c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801583e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015842:	2e07      	cmp	r6, #7
 8015844:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015848:	d812      	bhi.n	8015870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801584a:	1c75      	adds	r5, r6, #1
 801584c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015850:	9d01      	ldr	r5, [sp, #4]
 8015852:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015856:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801585a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801585e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015862:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015866:	442c      	add	r4, r5
 8015868:	8061      	strh	r1, [r4, #2]
 801586a:	80a2      	strh	r2, [r4, #4]
 801586c:	80e3      	strh	r3, [r4, #6]
 801586e:	e581      	b.n	8015374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015870:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015874:	3e01      	subs	r6, #1
 8015876:	445c      	add	r4, fp
 8015878:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801587c:	f04f 37ff 	mov.w	r7, #4294967295
 8015880:	2500      	movs	r5, #0
 8015882:	9305      	str	r3, [sp, #20]
 8015884:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015888:	9302      	str	r3, [sp, #8]
 801588a:	1e72      	subs	r2, r6, #1
 801588c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015890:	9304      	str	r3, [sp, #16]
 8015892:	4691      	mov	r9, r2
 8015894:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015898:	f1b9 3fff 	cmp.w	r9, #4294967295
 801589c:	bf14      	ite	ne
 801589e:	9905      	ldrne	r1, [sp, #20]
 80158a0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80158a4:	6818      	ldr	r0, [r3, #0]
 80158a6:	9207      	str	r2, [sp, #28]
 80158a8:	bf18      	it	ne
 80158aa:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80158ae:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80158b2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80158b6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80158ba:	9306      	str	r3, [sp, #24]
 80158bc:	fb18 f801 	smulbb	r8, r8, r1
 80158c0:	6859      	ldr	r1, [r3, #4]
 80158c2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80158c6:	4671      	mov	r1, lr
 80158c8:	a80c      	add	r0, sp, #48	; 0x30
 80158ca:	f7ff fafb 	bl	8014ec4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80158ce:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80158d2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80158d6:	9b04      	ldr	r3, [sp, #16]
 80158d8:	9a02      	ldr	r2, [sp, #8]
 80158da:	fb10 f001 	smulbb	r0, r0, r1
 80158de:	fb02 8803 	mla	r8, r2, r3, r8
 80158e2:	eba0 0108 	sub.w	r1, r0, r8
 80158e6:	f04f 0c08 	mov.w	ip, #8
 80158ea:	fb90 f0fc 	sdiv	r0, r0, ip
 80158ee:	4288      	cmp	r0, r1
 80158f0:	dc20      	bgt.n	8015934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80158f2:	4551      	cmp	r1, sl
 80158f4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80158f8:	da03      	bge.n	8015902 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80158fa:	b1d9      	cbz	r1, 8015934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80158fc:	468a      	mov	sl, r1
 80158fe:	464f      	mov	r7, r9
 8015900:	4635      	mov	r5, r6
 8015902:	f109 39ff 	add.w	r9, r9, #4294967295
 8015906:	f119 0f02 	cmn.w	r9, #2
 801590a:	d1c5      	bne.n	8015898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801590c:	4616      	mov	r6, r2
 801590e:	3201      	adds	r2, #1
 8015910:	f1a4 0408 	sub.w	r4, r4, #8
 8015914:	d1b6      	bne.n	8015884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015916:	9b01      	ldr	r3, [sp, #4]
 8015918:	b2ac      	uxth	r4, r5
 801591a:	00ed      	lsls	r5, r5, #3
 801591c:	1958      	adds	r0, r3, r5
 801591e:	1c7b      	adds	r3, r7, #1
 8015920:	d10b      	bne.n	801593a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015922:	4601      	mov	r1, r0
 8015924:	9803      	ldr	r0, [sp, #12]
 8015926:	f7ff facd 	bl	8014ec4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801592a:	4621      	mov	r1, r4
 801592c:	9801      	ldr	r0, [sp, #4]
 801592e:	f7ff fc8d 	bl	801524c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015932:	e4b5      	b.n	80152a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015934:	464f      	mov	r7, r9
 8015936:	4635      	mov	r5, r6
 8015938:	e7ed      	b.n	8015916 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801593a:	9b01      	ldr	r3, [sp, #4]
 801593c:	00ff      	lsls	r7, r7, #3
 801593e:	19d9      	adds	r1, r3, r7
 8015940:	f7ff fac0 	bl	8014ec4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015944:	9b03      	ldr	r3, [sp, #12]
 8015946:	cb03      	ldmia	r3!, {r0, r1}
 8015948:	445f      	add	r7, fp
 801594a:	445d      	add	r5, fp
 801594c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015950:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015954:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015958:	9b03      	ldr	r3, [sp, #12]
 801595a:	6869      	ldr	r1, [r5, #4]
 801595c:	c303      	stmia	r3!, {r0, r1}
 801595e:	e7e4      	b.n	801592a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08015960 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015964:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015968:	b09b      	sub	sp, #108	; 0x6c
 801596a:	4604      	mov	r4, r0
 801596c:	4630      	mov	r0, r6
 801596e:	f7fa fa20 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015972:	4605      	mov	r5, r0
 8015974:	b948      	cbnz	r0, 801598a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015976:	6823      	ldr	r3, [r4, #0]
 8015978:	e896 0006 	ldmia.w	r6, {r1, r2}
 801597c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801597e:	4620      	mov	r0, r4
 8015980:	4798      	blx	r3
 8015982:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015986:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801598a:	4bc6      	ldr	r3, [pc, #792]	; (8015ca4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801598c:	681b      	ldr	r3, [r3, #0]
 801598e:	2b00      	cmp	r3, #0
 8015990:	d03f      	beq.n	8015a12 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015992:	4dc5      	ldr	r5, [pc, #788]	; (8015ca8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015994:	4628      	mov	r0, r5
 8015996:	f7fa fa0c 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801599a:	4606      	mov	r6, r0
 801599c:	2800      	cmp	r0, #0
 801599e:	d138      	bne.n	8015a12 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80159a0:	4628      	mov	r0, r5
 80159a2:	f7ff f907 	bl	8014bb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80159a6:	6823      	ldr	r3, [r4, #0]
 80159a8:	6829      	ldr	r1, [r5, #0]
 80159aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80159ac:	686a      	ldr	r2, [r5, #4]
 80159ae:	4620      	mov	r0, r4
 80159b0:	4798      	blx	r3
 80159b2:	802e      	strh	r6, [r5, #0]
 80159b4:	806e      	strh	r6, [r5, #2]
 80159b6:	80ae      	strh	r6, [r5, #4]
 80159b8:	80ee      	strh	r6, [r5, #6]
 80159ba:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80159be:	4dbb      	ldr	r5, [pc, #748]	; (8015cac <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80159c0:	4640      	mov	r0, r8
 80159c2:	f7ff fbeb 	bl	801519c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80159c6:	882e      	ldrh	r6, [r5, #0]
 80159c8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80159cc:	4633      	mov	r3, r6
 80159ce:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80159d2:	42bb      	cmp	r3, r7
 80159d4:	d224      	bcs.n	8015a20 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80159d6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80159da:	2907      	cmp	r1, #7
 80159dc:	d816      	bhi.n	8015a0c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80159de:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80159e2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80159e6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80159ea:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80159ee:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80159f2:	1c4a      	adds	r2, r1, #1
 80159f4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80159f8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80159fc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015a00:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015a04:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015a08:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015a0c:	3301      	adds	r3, #1
 8015a0e:	b29b      	uxth	r3, r3
 8015a10:	e7df      	b.n	80159d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015a12:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015a16:	2b00      	cmp	r3, #0
 8015a18:	d1cf      	bne.n	80159ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015a1a:	b01b      	add	sp, #108	; 0x6c
 8015a1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a20:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015a24:	42b3      	cmp	r3, r6
 8015a26:	d90c      	bls.n	8015a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015a28:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015a2c:	6822      	ldr	r2, [r4, #0]
 8015a2e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015a32:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015a34:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015a38:	4620      	mov	r0, r4
 8015a3a:	3601      	adds	r6, #1
 8015a3c:	47b8      	blx	r7
 8015a3e:	b2b6      	uxth	r6, r6
 8015a40:	e7ee      	b.n	8015a20 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015a42:	4a9b      	ldr	r2, [pc, #620]	; (8015cb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015a44:	6813      	ldr	r3, [r2, #0]
 8015a46:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015a4a:	2b01      	cmp	r3, #1
 8015a4c:	4691      	mov	r9, r2
 8015a4e:	f040 80e2 	bne.w	8015c16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015a52:	8829      	ldrh	r1, [r5, #0]
 8015a54:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015a58:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8015a5c:	33ae      	adds	r3, #174	; 0xae
 8015a5e:	2600      	movs	r6, #0
 8015a60:	428f      	cmp	r7, r1
 8015a62:	f103 0308 	add.w	r3, r3, #8
 8015a66:	dd0a      	ble.n	8015a7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015a68:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8015a6c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015a70:	4402      	add	r2, r0
 8015a72:	b212      	sxth	r2, r2
 8015a74:	4296      	cmp	r6, r2
 8015a76:	bfb8      	it	lt
 8015a78:	4616      	movlt	r6, r2
 8015a7a:	3101      	adds	r1, #1
 8015a7c:	e7f0      	b.n	8015a60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8015a7e:	4b8d      	ldr	r3, [pc, #564]	; (8015cb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015a80:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015cb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8015a84:	881b      	ldrh	r3, [r3, #0]
 8015a86:	2b0f      	cmp	r3, #15
 8015a88:	bf88      	it	hi
 8015a8a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8015a8e:	f04f 0300 	mov.w	r3, #0
 8015a92:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015a96:	bf98      	it	ls
 8015a98:	f04f 0b01 	movls.w	fp, #1
 8015a9c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015aa0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015aa4:	4b82      	ldr	r3, [pc, #520]	; (8015cb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015aa6:	4438      	add	r0, r7
 8015aa8:	b207      	sxth	r7, r0
 8015aaa:	6818      	ldr	r0, [r3, #0]
 8015aac:	42b7      	cmp	r7, r6
 8015aae:	6803      	ldr	r3, [r0, #0]
 8015ab0:	f280 8083 	bge.w	8015bba <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015ab4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015ab8:	4798      	blx	r3
 8015aba:	eb07 030b 	add.w	r3, r7, fp
 8015abe:	4298      	cmp	r0, r3
 8015ac0:	da07      	bge.n	8015ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015ac2:	42b0      	cmp	r0, r6
 8015ac4:	da05      	bge.n	8015ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015ac6:	4287      	cmp	r7, r0
 8015ac8:	dd6c      	ble.n	8015ba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015aca:	2f00      	cmp	r7, #0
 8015acc:	dd6a      	ble.n	8015ba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015ace:	4630      	mov	r0, r6
 8015ad0:	e004      	b.n	8015adc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015ad2:	4287      	cmp	r7, r0
 8015ad4:	dcfb      	bgt.n	8015ace <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015ad6:	42b0      	cmp	r0, r6
 8015ad8:	bfa8      	it	ge
 8015ada:	4630      	movge	r0, r6
 8015adc:	4b76      	ldr	r3, [pc, #472]	; (8015cb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015ade:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015ae2:	1bc0      	subs	r0, r0, r7
 8015ae4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015ae8:	882f      	ldrh	r7, [r5, #0]
 8015aea:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015aee:	2200      	movs	r2, #0
 8015af0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015af4:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015af8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015afc:	42bb      	cmp	r3, r7
 8015afe:	d9cd      	bls.n	8015a9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015b00:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015b04:	ab07      	add	r3, sp, #28
 8015b06:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015b0a:	6851      	ldr	r1, [r2, #4]
 8015b0c:	c303      	stmia	r3!, {r0, r1}
 8015b0e:	a905      	add	r1, sp, #20
 8015b10:	a807      	add	r0, sp, #28
 8015b12:	f7ff f93e 	bl	8014d92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015b16:	2800      	cmp	r0, #0
 8015b18:	d04c      	beq.n	8015bb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015b1a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015b1e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015b22:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015b26:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015b2a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015b2e:	9302      	str	r3, [sp, #8]
 8015b30:	4686      	mov	lr, r0
 8015b32:	4290      	cmp	r0, r2
 8015b34:	4450      	add	r0, sl
 8015b36:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015b3a:	bfb8      	it	lt
 8015b3c:	4696      	movlt	lr, r2
 8015b3e:	4452      	add	r2, sl
 8015b40:	4299      	cmp	r1, r3
 8015b42:	b280      	uxth	r0, r0
 8015b44:	b292      	uxth	r2, r2
 8015b46:	468c      	mov	ip, r1
 8015b48:	fa0f fa82 	sxth.w	sl, r2
 8015b4c:	bfb8      	it	lt
 8015b4e:	469c      	movlt	ip, r3
 8015b50:	b203      	sxth	r3, r0
 8015b52:	4553      	cmp	r3, sl
 8015b54:	bfb8      	it	lt
 8015b56:	4602      	movlt	r2, r0
 8015b58:	eba2 020e 	sub.w	r2, r2, lr
 8015b5c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015b60:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015b64:	9b02      	ldr	r3, [sp, #8]
 8015b66:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015b6a:	4411      	add	r1, r2
 8015b6c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015b70:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015b74:	4413      	add	r3, r2
 8015b76:	b289      	uxth	r1, r1
 8015b78:	b29b      	uxth	r3, r3
 8015b7a:	b208      	sxth	r0, r1
 8015b7c:	b21a      	sxth	r2, r3
 8015b7e:	4290      	cmp	r0, r2
 8015b80:	bfb8      	it	lt
 8015b82:	460b      	movlt	r3, r1
 8015b84:	eba3 030c 	sub.w	r3, r3, ip
 8015b88:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015b8c:	a807      	add	r0, sp, #28
 8015b8e:	f7fa f910 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b92:	b920      	cbnz	r0, 8015b9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015b94:	6823      	ldr	r3, [r4, #0]
 8015b96:	a907      	add	r1, sp, #28
 8015b98:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015b9a:	4620      	mov	r0, r4
 8015b9c:	4798      	blx	r3
 8015b9e:	3701      	adds	r7, #1
 8015ba0:	b2bf      	uxth	r7, r7
 8015ba2:	e7a9      	b.n	8015af8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015ba4:	f8d9 0000 	ldr.w	r0, [r9]
 8015ba8:	6803      	ldr	r3, [r0, #0]
 8015baa:	2101      	movs	r1, #1
 8015bac:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015bb0:	4798      	blx	r3
 8015bb2:	e773      	b.n	8015a9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015bb4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015bb8:	e7e8      	b.n	8015b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015bba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015bbc:	4798      	blx	r3
 8015bbe:	4b3f      	ldr	r3, [pc, #252]	; (8015cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015bc0:	781b      	ldrb	r3, [r3, #0]
 8015bc2:	2b00      	cmp	r3, #0
 8015bc4:	f43f af29 	beq.w	8015a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015bc8:	2300      	movs	r3, #0
 8015bca:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8015bce:	882b      	ldrh	r3, [r5, #0]
 8015bd0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015bd4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015bd8:	42ab      	cmp	r3, r5
 8015bda:	f4bf af1e 	bcs.w	8015a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015bde:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015be2:	2907      	cmp	r1, #7
 8015be4:	d814      	bhi.n	8015c10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015be6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015bea:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015bee:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015bf2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015bf6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8015bfa:	1c4a      	adds	r2, r1, #1
 8015bfc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015c00:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015c04:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015c08:	f8a2 c002 	strh.w	ip, [r2, #2]
 8015c0c:	8097      	strh	r7, [r2, #4]
 8015c0e:	80d6      	strh	r6, [r2, #6]
 8015c10:	3301      	adds	r3, #1
 8015c12:	b29b      	uxth	r3, r3
 8015c14:	e7e0      	b.n	8015bd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015c16:	2b02      	cmp	r3, #2
 8015c18:	f040 8133 	bne.w	8015e82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8015c1c:	4b28      	ldr	r3, [pc, #160]	; (8015cc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8015c1e:	781b      	ldrb	r3, [r3, #0]
 8015c20:	2b01      	cmp	r3, #1
 8015c22:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015c26:	f000 8098 	beq.w	8015d5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015c2a:	882a      	ldrh	r2, [r5, #0]
 8015c2c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015c30:	3201      	adds	r2, #1
 8015c32:	b292      	uxth	r2, r2
 8015c34:	2900      	cmp	r1, #0
 8015c36:	d0c2      	beq.n	8015bbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015c38:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8015c3c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015c40:	441e      	add	r6, r3
 8015c42:	b236      	sxth	r6, r6
 8015c44:	4694      	mov	ip, r2
 8015c46:	f04f 0900 	mov.w	r9, #0
 8015c4a:	fa1f f38c 	uxth.w	r3, ip
 8015c4e:	4299      	cmp	r1, r3
 8015c50:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015c54:	f240 80bf 	bls.w	8015dd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015c58:	4427      	add	r7, r4
 8015c5a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8015c5e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8015c62:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8015c66:	4283      	cmp	r3, r0
 8015c68:	f340 80a1 	ble.w	8015dae <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8015c6c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015c70:	4406      	add	r6, r0
 8015c72:	b236      	sxth	r6, r6
 8015c74:	429e      	cmp	r6, r3
 8015c76:	bfa8      	it	ge
 8015c78:	461e      	movge	r6, r3
 8015c7a:	46e1      	mov	r9, ip
 8015c7c:	f10c 0c01 	add.w	ip, ip, #1
 8015c80:	e7e3      	b.n	8015c4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015c82:	d10a      	bne.n	8015c9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015c84:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015c88:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8015c8c:	4562      	cmp	r2, ip
 8015c8e:	bfb8      	it	lt
 8015c90:	4662      	movlt	r2, ip
 8015c92:	4288      	cmp	r0, r1
 8015c94:	bfb8      	it	lt
 8015c96:	461f      	movlt	r7, r3
 8015c98:	e087      	b.n	8015daa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015c9a:	428a      	cmp	r2, r1
 8015c9c:	bfb8      	it	lt
 8015c9e:	460a      	movlt	r2, r1
 8015ca0:	e083      	b.n	8015daa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015ca2:	bf00      	nop
 8015ca4:	20012ebc 	.word	0x20012ebc
 8015ca8:	20012ec8 	.word	0x20012ec8
 8015cac:	20000088 	.word	0x20000088
 8015cb0:	20012e7c 	.word	0x20012e7c
 8015cb4:	20012e72 	.word	0x20012e72
 8015cb8:	20012e70 	.word	0x20012e70
 8015cbc:	20012e7a 	.word	0x20012e7a
 8015cc0:	20012e74 	.word	0x20012e74
 8015cc4:	19a1      	adds	r1, r4, r6
 8015cc6:	ab07      	add	r3, sp, #28
 8015cc8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8015ccc:	6849      	ldr	r1, [r1, #4]
 8015cce:	c303      	stmia	r3!, {r0, r1}
 8015cd0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015cd4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015cd8:	2b13      	cmp	r3, #19
 8015cda:	bfd8      	it	le
 8015cdc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015ce0:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015ce4:	440b      	add	r3, r1
 8015ce6:	1a9b      	subs	r3, r3, r2
 8015ce8:	a807      	add	r0, sp, #28
 8015cea:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015cee:	f7fe ff7b 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015cf2:	a807      	add	r0, sp, #28
 8015cf4:	f7fa f85d 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015cf8:	bb78      	cbnz	r0, 8015d5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015cfa:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8015cfe:	f8d9 0000 	ldr.w	r0, [r9]
 8015d02:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015d06:	f8d0 e000 	ldr.w	lr, [r0]
 8015d0a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8015d0e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015d12:	f1bc 0f14 	cmp.w	ip, #20
 8015d16:	bfa8      	it	ge
 8015d18:	f04f 0c14 	movge.w	ip, #20
 8015d1c:	fa1f fc8c 	uxth.w	ip, ip
 8015d20:	f8cd c000 	str.w	ip, [sp]
 8015d24:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015d28:	47d8      	blx	fp
 8015d2a:	4683      	mov	fp, r0
 8015d2c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015d30:	a807      	add	r0, sp, #28
 8015d32:	f7fe ff3f 	bl	8014bb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015d36:	6823      	ldr	r3, [r4, #0]
 8015d38:	4426      	add	r6, r4
 8015d3a:	4620      	mov	r0, r4
 8015d3c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015d3e:	a907      	add	r1, sp, #28
 8015d40:	4798      	blx	r3
 8015d42:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015d46:	eba0 000b 	sub.w	r0, r0, fp
 8015d4a:	b200      	sxth	r0, r0
 8015d4c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8015d50:	b918      	cbnz	r0, 8015d5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015d52:	b2b9      	uxth	r1, r7
 8015d54:	4650      	mov	r0, sl
 8015d56:	f7ff fa79 	bl	801524c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015d5a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8015d5e:	f1bb 0f00 	cmp.w	fp, #0
 8015d62:	f43f af2c 	beq.w	8015bbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015d66:	882b      	ldrh	r3, [r5, #0]
 8015d68:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8015d6c:	3301      	adds	r3, #1
 8015d6e:	b29b      	uxth	r3, r3
 8015d70:	2700      	movs	r7, #0
 8015d72:	b299      	uxth	r1, r3
 8015d74:	458b      	cmp	fp, r1
 8015d76:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8015d7a:	d9a3      	bls.n	8015cc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8015d7c:	4426      	add	r6, r4
 8015d7e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015d82:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8015d86:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015d8a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8015d8e:	4408      	add	r0, r1
 8015d90:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015d94:	4461      	add	r1, ip
 8015d96:	b200      	sxth	r0, r0
 8015d98:	b209      	sxth	r1, r1
 8015d9a:	4288      	cmp	r0, r1
 8015d9c:	f6bf af71 	bge.w	8015c82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015da0:	4584      	cmp	ip, r0
 8015da2:	4662      	mov	r2, ip
 8015da4:	461f      	mov	r7, r3
 8015da6:	bfb8      	it	lt
 8015da8:	4602      	movlt	r2, r0
 8015daa:	3301      	adds	r3, #1
 8015dac:	e7e1      	b.n	8015d72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8015dae:	d10e      	bne.n	8015dce <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015db0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015db4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015db8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8015dbc:	4473      	add	r3, lr
 8015dbe:	b21b      	sxth	r3, r3
 8015dc0:	429e      	cmp	r6, r3
 8015dc2:	bfa8      	it	ge
 8015dc4:	461e      	movge	r6, r3
 8015dc6:	4287      	cmp	r7, r0
 8015dc8:	bfb8      	it	lt
 8015dca:	46e1      	movlt	r9, ip
 8015dcc:	e756      	b.n	8015c7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015dce:	4286      	cmp	r6, r0
 8015dd0:	bfa8      	it	ge
 8015dd2:	4606      	movge	r6, r0
 8015dd4:	e752      	b.n	8015c7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015dd6:	eb0a 0007 	add.w	r0, sl, r7
 8015dda:	4427      	add	r7, r4
 8015ddc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015de0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015de4:	f1bb 0f13 	cmp.w	fp, #19
 8015de8:	bfde      	ittt	le
 8015dea:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8015dee:	445e      	addle	r6, fp
 8015df0:	b236      	sxthle	r6, r6
 8015df2:	f7f9 ffde 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015df6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015dfa:	2800      	cmp	r0, #0
 8015dfc:	f47f af1a 	bne.w	8015c34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015e00:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015e04:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015e08:	482a      	ldr	r0, [pc, #168]	; (8015eb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8015e0a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8015e0e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015e12:	6800      	ldr	r0, [r0, #0]
 8015e14:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015e18:	1ab6      	subs	r6, r6, r2
 8015e1a:	2e14      	cmp	r6, #20
 8015e1c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015e20:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015e24:	bfa8      	it	ge
 8015e26:	2614      	movge	r6, #20
 8015e28:	f8d0 c000 	ldr.w	ip, [r0]
 8015e2c:	b2b6      	uxth	r6, r6
 8015e2e:	fa1f fb8b 	uxth.w	fp, fp
 8015e32:	455e      	cmp	r6, fp
 8015e34:	bf94      	ite	ls
 8015e36:	9600      	strls	r6, [sp, #0]
 8015e38:	f8cd b000 	strhi.w	fp, [sp]
 8015e3c:	b292      	uxth	r2, r2
 8015e3e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015e42:	b29b      	uxth	r3, r3
 8015e44:	b289      	uxth	r1, r1
 8015e46:	47b0      	blx	r6
 8015e48:	6823      	ldr	r3, [r4, #0]
 8015e4a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015e4e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015e50:	a907      	add	r1, sp, #28
 8015e52:	4620      	mov	r0, r4
 8015e54:	4798      	blx	r3
 8015e56:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015e5a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8015e5e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8015e62:	1a5b      	subs	r3, r3, r1
 8015e64:	440a      	add	r2, r1
 8015e66:	b21b      	sxth	r3, r3
 8015e68:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8015e6c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8015e70:	2b00      	cmp	r3, #0
 8015e72:	f47f aeda 	bne.w	8015c2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015e76:	fa1f f189 	uxth.w	r1, r9
 8015e7a:	4650      	mov	r0, sl
 8015e7c:	f7ff f9e6 	bl	801524c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015e80:	e6d3      	b.n	8015c2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015e82:	882e      	ldrh	r6, [r5, #0]
 8015e84:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015e88:	42b3      	cmp	r3, r6
 8015e8a:	f67f ae98 	bls.w	8015bbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015e8e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015e92:	ab07      	add	r3, sp, #28
 8015e94:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015e98:	6851      	ldr	r1, [r2, #4]
 8015e9a:	c303      	stmia	r3!, {r0, r1}
 8015e9c:	a807      	add	r0, sp, #28
 8015e9e:	f7f9 ff88 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ea2:	b920      	cbnz	r0, 8015eae <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015ea4:	6823      	ldr	r3, [r4, #0]
 8015ea6:	a907      	add	r1, sp, #28
 8015ea8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015eaa:	4620      	mov	r0, r4
 8015eac:	4798      	blx	r3
 8015eae:	3601      	adds	r6, #1
 8015eb0:	b2b6      	uxth	r6, r6
 8015eb2:	e7e7      	b.n	8015e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015eb4:	20012e7c 	.word	0x20012e7c

08015eb8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015eb8:	4b03      	ldr	r3, [pc, #12]	; (8015ec8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015eba:	2200      	movs	r2, #0
 8015ebc:	801a      	strh	r2, [r3, #0]
 8015ebe:	805a      	strh	r2, [r3, #2]
 8015ec0:	809a      	strh	r2, [r3, #4]
 8015ec2:	80da      	strh	r2, [r3, #6]
 8015ec4:	4770      	bx	lr
 8015ec6:	bf00      	nop
 8015ec8:	20012ec8 	.word	0x20012ec8

08015ecc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015ecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ed0:	4606      	mov	r6, r0
 8015ed2:	b09d      	sub	sp, #116	; 0x74
 8015ed4:	a803      	add	r0, sp, #12
 8015ed6:	4614      	mov	r4, r2
 8015ed8:	468a      	mov	sl, r1
 8015eda:	461d      	mov	r5, r3
 8015edc:	f000 feca 	bl	8016c74 <_ZN8touchgfx12TextProviderC1Ev>
 8015ee0:	6833      	ldr	r3, [r6, #0]
 8015ee2:	4630      	mov	r0, r6
 8015ee4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015ee6:	4798      	blx	r3
 8015ee8:	6833      	ldr	r3, [r6, #0]
 8015eea:	4607      	mov	r7, r0
 8015eec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015eee:	4630      	mov	r0, r6
 8015ef0:	4798      	blx	r3
 8015ef2:	462a      	mov	r2, r5
 8015ef4:	9000      	str	r0, [sp, #0]
 8015ef6:	4621      	mov	r1, r4
 8015ef8:	463b      	mov	r3, r7
 8015efa:	a803      	add	r0, sp, #12
 8015efc:	f000 ff15 	bl	8016d2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015f00:	2500      	movs	r5, #0
 8015f02:	462c      	mov	r4, r5
 8015f04:	46a9      	mov	r9, r5
 8015f06:	46a8      	mov	r8, r5
 8015f08:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015f0c:	2300      	movs	r3, #0
 8015f0e:	9302      	str	r3, [sp, #8]
 8015f10:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015f14:	429c      	cmp	r4, r3
 8015f16:	d002      	beq.n	8015f1e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015f18:	455c      	cmp	r4, fp
 8015f1a:	bf18      	it	ne
 8015f1c:	4625      	movne	r5, r4
 8015f1e:	ab02      	add	r3, sp, #8
 8015f20:	4632      	mov	r2, r6
 8015f22:	4651      	mov	r1, sl
 8015f24:	a803      	add	r0, sp, #12
 8015f26:	f001 fa03 	bl	8017330 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015f2a:	4604      	mov	r4, r0
 8015f2c:	b108      	cbz	r0, 8015f32 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015f2e:	280a      	cmp	r0, #10
 8015f30:	d10a      	bne.n	8015f48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015f32:	45c1      	cmp	r9, r8
 8015f34:	bf38      	it	cc
 8015f36:	46c1      	movcc	r9, r8
 8015f38:	f04f 0800 	mov.w	r8, #0
 8015f3c:	2c00      	cmp	r4, #0
 8015f3e:	d1e5      	bne.n	8015f0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015f40:	4648      	mov	r0, r9
 8015f42:	b01d      	add	sp, #116	; 0x74
 8015f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f48:	9a02      	ldr	r2, [sp, #8]
 8015f4a:	2a00      	cmp	r2, #0
 8015f4c:	d0de      	beq.n	8015f0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015f4e:	7b57      	ldrb	r7, [r2, #13]
 8015f50:	6833      	ldr	r3, [r6, #0]
 8015f52:	8894      	ldrh	r4, [r2, #4]
 8015f54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015f56:	007f      	lsls	r7, r7, #1
 8015f58:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015f5c:	7a97      	ldrb	r7, [r2, #10]
 8015f5e:	4629      	mov	r1, r5
 8015f60:	4307      	orrs	r7, r0
 8015f62:	4630      	mov	r0, r6
 8015f64:	4798      	blx	r3
 8015f66:	4438      	add	r0, r7
 8015f68:	4480      	add	r8, r0
 8015f6a:	fa1f f888 	uxth.w	r8, r8
 8015f6e:	e7e5      	b.n	8015f3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015f70 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015f70:	b508      	push	{r3, lr}
 8015f72:	6803      	ldr	r3, [r0, #0]
 8015f74:	68db      	ldr	r3, [r3, #12]
 8015f76:	4798      	blx	r3
 8015f78:	b128      	cbz	r0, 8015f86 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015f7a:	7b43      	ldrb	r3, [r0, #13]
 8015f7c:	7a80      	ldrb	r0, [r0, #10]
 8015f7e:	005b      	lsls	r3, r3, #1
 8015f80:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015f84:	4318      	orrs	r0, r3
 8015f86:	bd08      	pop	{r3, pc}

08015f88 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015f88:	b40e      	push	{r1, r2, r3}
 8015f8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015f8c:	b09e      	sub	sp, #120	; 0x78
 8015f8e:	ab23      	add	r3, sp, #140	; 0x8c
 8015f90:	4605      	mov	r5, r0
 8015f92:	f853 4b04 	ldr.w	r4, [r3], #4
 8015f96:	9303      	str	r3, [sp, #12]
 8015f98:	a805      	add	r0, sp, #20
 8015f9a:	f000 fe6b 	bl	8016c74 <_ZN8touchgfx12TextProviderC1Ev>
 8015f9e:	682b      	ldr	r3, [r5, #0]
 8015fa0:	4628      	mov	r0, r5
 8015fa2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015fa4:	4798      	blx	r3
 8015fa6:	682b      	ldr	r3, [r5, #0]
 8015fa8:	4606      	mov	r6, r0
 8015faa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015fac:	4628      	mov	r0, r5
 8015fae:	4798      	blx	r3
 8015fb0:	4633      	mov	r3, r6
 8015fb2:	ae1e      	add	r6, sp, #120	; 0x78
 8015fb4:	4621      	mov	r1, r4
 8015fb6:	9000      	str	r0, [sp, #0]
 8015fb8:	9a03      	ldr	r2, [sp, #12]
 8015fba:	2400      	movs	r4, #0
 8015fbc:	a805      	add	r0, sp, #20
 8015fbe:	f000 feb4 	bl	8016d2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015fc2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015fc6:	462a      	mov	r2, r5
 8015fc8:	4633      	mov	r3, r6
 8015fca:	4621      	mov	r1, r4
 8015fcc:	a805      	add	r0, sp, #20
 8015fce:	f001 f9af 	bl	8017330 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015fd2:	b1f0      	cbz	r0, 8016012 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015fd4:	280a      	cmp	r0, #10
 8015fd6:	d018      	beq.n	801600a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015fd8:	9f04      	ldr	r7, [sp, #16]
 8015fda:	b1b7      	cbz	r7, 801600a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015fdc:	7b78      	ldrb	r0, [r7, #13]
 8015fde:	7a3b      	ldrb	r3, [r7, #8]
 8015fe0:	88ea      	ldrh	r2, [r5, #6]
 8015fe2:	00c1      	lsls	r1, r0, #3
 8015fe4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015fe8:	4319      	orrs	r1, r3
 8015fea:	0643      	lsls	r3, r0, #25
 8015fec:	bf44      	itt	mi
 8015fee:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015ff2:	b219      	sxthmi	r1, r3
 8015ff4:	0100      	lsls	r0, r0, #4
 8015ff6:	79fb      	ldrb	r3, [r7, #7]
 8015ff8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015ffc:	4303      	orrs	r3, r0
 8015ffe:	4413      	add	r3, r2
 8016000:	1a5b      	subs	r3, r3, r1
 8016002:	b21b      	sxth	r3, r3
 8016004:	429c      	cmp	r4, r3
 8016006:	bfb8      	it	lt
 8016008:	461c      	movlt	r4, r3
 801600a:	4633      	mov	r3, r6
 801600c:	462a      	mov	r2, r5
 801600e:	2100      	movs	r1, #0
 8016010:	e7dc      	b.n	8015fcc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016012:	b2a0      	uxth	r0, r4
 8016014:	b01e      	add	sp, #120	; 0x78
 8016016:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801601a:	b003      	add	sp, #12
 801601c:	4770      	bx	lr

0801601e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801601e:	7a43      	ldrb	r3, [r0, #9]
 8016020:	8880      	ldrh	r0, [r0, #4]
 8016022:	4418      	add	r0, r3
 8016024:	b280      	uxth	r0, r0
 8016026:	4770      	bx	lr

08016028 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016028:	6803      	ldr	r3, [r0, #0]
 801602a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801602c:	4718      	bx	r3

0801602e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801602e:	b40e      	push	{r1, r2, r3}
 8016030:	b570      	push	{r4, r5, r6, lr}
 8016032:	b09d      	sub	sp, #116	; 0x74
 8016034:	ab21      	add	r3, sp, #132	; 0x84
 8016036:	4604      	mov	r4, r0
 8016038:	f853 5b04 	ldr.w	r5, [r3], #4
 801603c:	9302      	str	r3, [sp, #8]
 801603e:	a803      	add	r0, sp, #12
 8016040:	f000 fe18 	bl	8016c74 <_ZN8touchgfx12TextProviderC1Ev>
 8016044:	6823      	ldr	r3, [r4, #0]
 8016046:	4620      	mov	r0, r4
 8016048:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801604a:	4798      	blx	r3
 801604c:	6823      	ldr	r3, [r4, #0]
 801604e:	4606      	mov	r6, r0
 8016050:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016052:	4620      	mov	r0, r4
 8016054:	4798      	blx	r3
 8016056:	4633      	mov	r3, r6
 8016058:	9000      	str	r0, [sp, #0]
 801605a:	9a02      	ldr	r2, [sp, #8]
 801605c:	4629      	mov	r1, r5
 801605e:	a803      	add	r0, sp, #12
 8016060:	f000 fe63 	bl	8016d2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016064:	a803      	add	r0, sp, #12
 8016066:	f001 fa31 	bl	80174cc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801606a:	2401      	movs	r4, #1
 801606c:	b2a3      	uxth	r3, r4
 801606e:	b140      	cbz	r0, 8016082 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016070:	280a      	cmp	r0, #10
 8016072:	bf08      	it	eq
 8016074:	3301      	addeq	r3, #1
 8016076:	a803      	add	r0, sp, #12
 8016078:	bf08      	it	eq
 801607a:	b21c      	sxtheq	r4, r3
 801607c:	f001 fa26 	bl	80174cc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016080:	e7f4      	b.n	801606c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016082:	4618      	mov	r0, r3
 8016084:	b01d      	add	sp, #116	; 0x74
 8016086:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801608a:	b003      	add	sp, #12
 801608c:	4770      	bx	lr

0801608e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801608e:	b40e      	push	{r1, r2, r3}
 8016090:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016092:	b09e      	sub	sp, #120	; 0x78
 8016094:	ab23      	add	r3, sp, #140	; 0x8c
 8016096:	4604      	mov	r4, r0
 8016098:	f853 5b04 	ldr.w	r5, [r3], #4
 801609c:	9303      	str	r3, [sp, #12]
 801609e:	a805      	add	r0, sp, #20
 80160a0:	f000 fde8 	bl	8016c74 <_ZN8touchgfx12TextProviderC1Ev>
 80160a4:	6823      	ldr	r3, [r4, #0]
 80160a6:	4620      	mov	r0, r4
 80160a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80160aa:	4798      	blx	r3
 80160ac:	6823      	ldr	r3, [r4, #0]
 80160ae:	4606      	mov	r6, r0
 80160b0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80160b2:	4620      	mov	r0, r4
 80160b4:	4798      	blx	r3
 80160b6:	4633      	mov	r3, r6
 80160b8:	4629      	mov	r1, r5
 80160ba:	9000      	str	r0, [sp, #0]
 80160bc:	9a03      	ldr	r2, [sp, #12]
 80160be:	a805      	add	r0, sp, #20
 80160c0:	ad1e      	add	r5, sp, #120	; 0x78
 80160c2:	f000 fe32 	bl	8016d2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80160c6:	2100      	movs	r1, #0
 80160c8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80160cc:	4622      	mov	r2, r4
 80160ce:	462b      	mov	r3, r5
 80160d0:	a805      	add	r0, sp, #20
 80160d2:	f001 f92d 	bl	8017330 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80160d6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80160da:	b1d8      	cbz	r0, 8016114 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80160dc:	280a      	cmp	r0, #10
 80160de:	d012      	beq.n	8016106 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80160e0:	9804      	ldr	r0, [sp, #16]
 80160e2:	b180      	cbz	r0, 8016106 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80160e4:	7b47      	ldrb	r7, [r0, #13]
 80160e6:	88e2      	ldrh	r2, [r4, #6]
 80160e8:	00fb      	lsls	r3, r7, #3
 80160ea:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80160ee:	7a03      	ldrb	r3, [r0, #8]
 80160f0:	430b      	orrs	r3, r1
 80160f2:	0679      	lsls	r1, r7, #25
 80160f4:	bf44      	itt	mi
 80160f6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80160fa:	b21b      	sxthmi	r3, r3
 80160fc:	1ad3      	subs	r3, r2, r3
 80160fe:	b21b      	sxth	r3, r3
 8016100:	429e      	cmp	r6, r3
 8016102:	bfa8      	it	ge
 8016104:	461e      	movge	r6, r3
 8016106:	462b      	mov	r3, r5
 8016108:	4622      	mov	r2, r4
 801610a:	2100      	movs	r1, #0
 801610c:	a805      	add	r0, sp, #20
 801610e:	f001 f90f 	bl	8017330 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016112:	e7e2      	b.n	80160da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016114:	4630      	mov	r0, r6
 8016116:	b01e      	add	sp, #120	; 0x78
 8016118:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801611c:	b003      	add	sp, #12
 801611e:	4770      	bx	lr

08016120 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016120:	b513      	push	{r0, r1, r4, lr}
 8016122:	6803      	ldr	r3, [r0, #0]
 8016124:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016128:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801612c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016130:	2400      	movs	r4, #0
 8016132:	9400      	str	r4, [sp, #0]
 8016134:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016138:	691b      	ldr	r3, [r3, #16]
 801613a:	4669      	mov	r1, sp
 801613c:	4798      	blx	r3
 801613e:	b002      	add	sp, #8
 8016140:	bd10      	pop	{r4, pc}

08016142 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016142:	b538      	push	{r3, r4, r5, lr}
 8016144:	680b      	ldr	r3, [r1, #0]
 8016146:	460c      	mov	r4, r1
 8016148:	68db      	ldr	r3, [r3, #12]
 801614a:	4605      	mov	r5, r0
 801614c:	4798      	blx	r3
 801614e:	6823      	ldr	r3, [r4, #0]
 8016150:	4620      	mov	r0, r4
 8016152:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016154:	4629      	mov	r1, r5
 8016156:	4798      	blx	r3
 8016158:	4628      	mov	r0, r5
 801615a:	bd38      	pop	{r3, r4, r5, pc}

0801615c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801615c:	b410      	push	{r4}
 801615e:	880a      	ldrh	r2, [r1, #0]
 8016160:	8884      	ldrh	r4, [r0, #4]
 8016162:	4422      	add	r2, r4
 8016164:	800a      	strh	r2, [r1, #0]
 8016166:	88c4      	ldrh	r4, [r0, #6]
 8016168:	884a      	ldrh	r2, [r1, #2]
 801616a:	4422      	add	r2, r4
 801616c:	804a      	strh	r2, [r1, #2]
 801616e:	6940      	ldr	r0, [r0, #20]
 8016170:	b120      	cbz	r0, 801617c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016172:	6803      	ldr	r3, [r0, #0]
 8016174:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016178:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801617a:	4718      	bx	r3
 801617c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016180:	4770      	bx	lr

08016182 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016182:	b570      	push	{r4, r5, r6, lr}
 8016184:	8882      	ldrh	r2, [r0, #4]
 8016186:	880b      	ldrh	r3, [r1, #0]
 8016188:	4413      	add	r3, r2
 801618a:	800b      	strh	r3, [r1, #0]
 801618c:	88c2      	ldrh	r2, [r0, #6]
 801618e:	884b      	ldrh	r3, [r1, #2]
 8016190:	460c      	mov	r4, r1
 8016192:	4413      	add	r3, r2
 8016194:	804b      	strh	r3, [r1, #2]
 8016196:	4605      	mov	r5, r0
 8016198:	1d01      	adds	r1, r0, #4
 801619a:	4620      	mov	r0, r4
 801619c:	f7f9 fdc6 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 80161a0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80161a4:	2b00      	cmp	r3, #0
 80161a6:	dd0b      	ble.n	80161c0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80161a8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80161ac:	2b00      	cmp	r3, #0
 80161ae:	dd07      	ble.n	80161c0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80161b0:	6968      	ldr	r0, [r5, #20]
 80161b2:	b128      	cbz	r0, 80161c0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80161b4:	6803      	ldr	r3, [r0, #0]
 80161b6:	4621      	mov	r1, r4
 80161b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80161ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80161be:	4718      	bx	r3
 80161c0:	bd70      	pop	{r4, r5, r6, pc}
	...

080161c4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80161c4:	b570      	push	{r4, r5, r6, lr}
 80161c6:	8882      	ldrh	r2, [r0, #4]
 80161c8:	880b      	ldrh	r3, [r1, #0]
 80161ca:	4413      	add	r3, r2
 80161cc:	800b      	strh	r3, [r1, #0]
 80161ce:	88c2      	ldrh	r2, [r0, #6]
 80161d0:	884b      	ldrh	r3, [r1, #2]
 80161d2:	460c      	mov	r4, r1
 80161d4:	4413      	add	r3, r2
 80161d6:	804b      	strh	r3, [r1, #2]
 80161d8:	4605      	mov	r5, r0
 80161da:	1d01      	adds	r1, r0, #4
 80161dc:	4620      	mov	r0, r4
 80161de:	f7f9 fda5 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 80161e2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80161e6:	2b00      	cmp	r3, #0
 80161e8:	dd19      	ble.n	801621e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80161ea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80161ee:	2b00      	cmp	r3, #0
 80161f0:	dd15      	ble.n	801621e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80161f2:	6968      	ldr	r0, [r5, #20]
 80161f4:	b128      	cbz	r0, 8016202 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80161f6:	6803      	ldr	r3, [r0, #0]
 80161f8:	4621      	mov	r1, r4
 80161fa:	691b      	ldr	r3, [r3, #16]
 80161fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016200:	4718      	bx	r3
 8016202:	4b07      	ldr	r3, [pc, #28]	; (8016220 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016204:	681b      	ldr	r3, [r3, #0]
 8016206:	3304      	adds	r3, #4
 8016208:	429d      	cmp	r5, r3
 801620a:	d108      	bne.n	801621e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801620c:	f7fe fea0 	bl	8014f50 <_ZN8touchgfx11Application11getInstanceEv>
 8016210:	6803      	ldr	r3, [r0, #0]
 8016212:	6821      	ldr	r1, [r4, #0]
 8016214:	6862      	ldr	r2, [r4, #4]
 8016216:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016218:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801621c:	4718      	bx	r3
 801621e:	bd70      	pop	{r4, r5, r6, pc}
 8016220:	20012ec0 	.word	0x20012ec0

08016224 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016224:	b570      	push	{r4, r5, r6, lr}
 8016226:	4604      	mov	r4, r0
 8016228:	4616      	mov	r6, r2
 801622a:	460d      	mov	r5, r1
 801622c:	b901      	cbnz	r1, 8016230 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801622e:	b192      	cbz	r2, 8016256 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016230:	6823      	ldr	r3, [r4, #0]
 8016232:	4620      	mov	r0, r4
 8016234:	699b      	ldr	r3, [r3, #24]
 8016236:	4798      	blx	r3
 8016238:	88e2      	ldrh	r2, [r4, #6]
 801623a:	88a1      	ldrh	r1, [r4, #4]
 801623c:	4432      	add	r2, r6
 801623e:	4429      	add	r1, r5
 8016240:	4620      	mov	r0, r4
 8016242:	b212      	sxth	r2, r2
 8016244:	b209      	sxth	r1, r1
 8016246:	f7ec fa10 	bl	800266a <_ZN8touchgfx8Drawable5setXYEss>
 801624a:	6823      	ldr	r3, [r4, #0]
 801624c:	4620      	mov	r0, r4
 801624e:	699b      	ldr	r3, [r3, #24]
 8016250:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016254:	4718      	bx	r3
 8016256:	bd70      	pop	{r4, r5, r6, pc}

08016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016258:	b510      	push	{r4, lr}
 801625a:	4604      	mov	r4, r0
 801625c:	4608      	mov	r0, r1
 801625e:	2300      	movs	r3, #0
 8016260:	8023      	strh	r3, [r4, #0]
 8016262:	8063      	strh	r3, [r4, #2]
 8016264:	6803      	ldr	r3, [r0, #0]
 8016266:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801626a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801626e:	80a1      	strh	r1, [r4, #4]
 8016270:	80e2      	strh	r2, [r4, #6]
 8016272:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016274:	4621      	mov	r1, r4
 8016276:	4798      	blx	r3
 8016278:	4620      	mov	r0, r4
 801627a:	bd10      	pop	{r4, pc}

0801627c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801627c:	b530      	push	{r4, r5, lr}
 801627e:	8083      	strh	r3, [r0, #4]
 8016280:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8016284:	80c3      	strh	r3, [r0, #6]
 8016286:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801628a:	7203      	strb	r3, [r0, #8]
 801628c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016290:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8016294:	7243      	strb	r3, [r0, #9]
 8016296:	7a83      	ldrb	r3, [r0, #10]
 8016298:	6141      	str	r1, [r0, #20]
 801629a:	f365 0306 	bfi	r3, r5, #0, #7
 801629e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80162a2:	8302      	strh	r2, [r0, #24]
 80162a4:	f365 13c7 	bfi	r3, r5, #7, #1
 80162a8:	7283      	strb	r3, [r0, #10]
 80162aa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80162ae:	72c3      	strb	r3, [r0, #11]
 80162b0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80162b4:	7303      	strb	r3, [r0, #12]
 80162b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80162ba:	81c3      	strh	r3, [r0, #14]
 80162bc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80162c0:	8203      	strh	r3, [r0, #16]
 80162c2:	4b01      	ldr	r3, [pc, #4]	; (80162c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80162c4:	6003      	str	r3, [r0, #0]
 80162c6:	bd30      	pop	{r4, r5, pc}
 80162c8:	0802e4cc 	.word	0x0802e4cc

080162cc <_ZNK8touchgfx9ConstFont4findEt>:
 80162cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80162ce:	6944      	ldr	r4, [r0, #20]
 80162d0:	b3bc      	cbz	r4, 8016342 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80162d2:	88a3      	ldrh	r3, [r4, #4]
 80162d4:	8b02      	ldrh	r2, [r0, #24]
 80162d6:	1acb      	subs	r3, r1, r3
 80162d8:	f102 32ff 	add.w	r2, r2, #4294967295
 80162dc:	d431      	bmi.n	8016342 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80162de:	4293      	cmp	r3, r2
 80162e0:	dd0c      	ble.n	80162fc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80162e2:	230e      	movs	r3, #14
 80162e4:	fb03 4302 	mla	r3, r3, r2, r4
 80162e8:	889b      	ldrh	r3, [r3, #4]
 80162ea:	1a5b      	subs	r3, r3, r1
 80162ec:	1ad3      	subs	r3, r2, r3
 80162ee:	429a      	cmp	r2, r3
 80162f0:	db27      	blt.n	8016342 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80162f2:	2b00      	cmp	r3, #0
 80162f4:	bfbc      	itt	lt
 80162f6:	2302      	movlt	r3, #2
 80162f8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80162fc:	2500      	movs	r5, #0
 80162fe:	260e      	movs	r6, #14
 8016300:	4295      	cmp	r5, r2
 8016302:	dc1e      	bgt.n	8016342 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016304:	fb06 4003 	mla	r0, r6, r3, r4
 8016308:	8887      	ldrh	r7, [r0, #4]
 801630a:	42b9      	cmp	r1, r7
 801630c:	d01a      	beq.n	8016344 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801630e:	d20d      	bcs.n	801632c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016310:	1e5a      	subs	r2, r3, #1
 8016312:	4295      	cmp	r5, r2
 8016314:	dc15      	bgt.n	8016342 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016316:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801631a:	1a5b      	subs	r3, r3, r1
 801631c:	1ad3      	subs	r3, r2, r3
 801631e:	429a      	cmp	r2, r3
 8016320:	db0f      	blt.n	8016342 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016322:	429d      	cmp	r5, r3
 8016324:	ddec      	ble.n	8016300 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016326:	1953      	adds	r3, r2, r5
 8016328:	105b      	asrs	r3, r3, #1
 801632a:	e7e9      	b.n	8016300 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801632c:	1c5d      	adds	r5, r3, #1
 801632e:	42aa      	cmp	r2, r5
 8016330:	db07      	blt.n	8016342 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016332:	8a43      	ldrh	r3, [r0, #18]
 8016334:	1acb      	subs	r3, r1, r3
 8016336:	442b      	add	r3, r5
 8016338:	429d      	cmp	r5, r3
 801633a:	dc02      	bgt.n	8016342 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801633c:	429a      	cmp	r2, r3
 801633e:	dadf      	bge.n	8016300 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016340:	e7f1      	b.n	8016326 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016342:	2000      	movs	r0, #0
 8016344:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016346 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016346:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016348:	4604      	mov	r4, r0
 801634a:	4617      	mov	r7, r2
 801634c:	461e      	mov	r6, r3
 801634e:	b911      	cbnz	r1, 8016356 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016350:	2500      	movs	r5, #0
 8016352:	4628      	mov	r0, r5
 8016354:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016356:	290a      	cmp	r1, #10
 8016358:	d0fa      	beq.n	8016350 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801635a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801635e:	4291      	cmp	r1, r2
 8016360:	d0f6      	beq.n	8016350 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016362:	f242 020b 	movw	r2, #8203	; 0x200b
 8016366:	4291      	cmp	r1, r2
 8016368:	d0f2      	beq.n	8016350 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801636a:	f7ff ffaf 	bl	80162cc <_ZNK8touchgfx9ConstFont4findEt>
 801636e:	4605      	mov	r5, r0
 8016370:	b950      	cbnz	r0, 8016388 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8016372:	6823      	ldr	r3, [r4, #0]
 8016374:	4620      	mov	r0, r4
 8016376:	691b      	ldr	r3, [r3, #16]
 8016378:	4798      	blx	r3
 801637a:	4601      	mov	r1, r0
 801637c:	4620      	mov	r0, r4
 801637e:	f7ff ffa5 	bl	80162cc <_ZNK8touchgfx9ConstFont4findEt>
 8016382:	4605      	mov	r5, r0
 8016384:	2800      	cmp	r0, #0
 8016386:	d0e3      	beq.n	8016350 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016388:	6823      	ldr	r3, [r4, #0]
 801638a:	4629      	mov	r1, r5
 801638c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801638e:	4620      	mov	r0, r4
 8016390:	4798      	blx	r3
 8016392:	6038      	str	r0, [r7, #0]
 8016394:	6823      	ldr	r3, [r4, #0]
 8016396:	4620      	mov	r0, r4
 8016398:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801639a:	4798      	blx	r3
 801639c:	7030      	strb	r0, [r6, #0]
 801639e:	e7d8      	b.n	8016352 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080163a0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80163a0:	b538      	push	{r3, r4, r5, lr}
 80163a2:	4605      	mov	r5, r0
 80163a4:	f002 fb56 	bl	8018a54 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80163a8:	4604      	mov	r4, r0
 80163aa:	4628      	mov	r0, r5
 80163ac:	f002 fa96 	bl	80188dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80163b0:	2800      	cmp	r0, #0
 80163b2:	bf14      	ite	ne
 80163b4:	2002      	movne	r0, #2
 80163b6:	2000      	moveq	r0, #0
 80163b8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80163bc:	b280      	uxth	r0, r0
 80163be:	bd38      	pop	{r3, r4, r5, pc}

080163c0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80163c0:	b538      	push	{r3, r4, r5, lr}
 80163c2:	4605      	mov	r5, r0
 80163c4:	f002 fb46 	bl	8018a54 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80163c8:	4604      	mov	r4, r0
 80163ca:	4628      	mov	r0, r5
 80163cc:	f002 fa86 	bl	80188dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80163d0:	2800      	cmp	r0, #0
 80163d2:	bf14      	ite	ne
 80163d4:	2002      	movne	r0, #2
 80163d6:	2000      	moveq	r0, #0
 80163d8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80163dc:	f040 0001 	orr.w	r0, r0, #1
 80163e0:	b280      	uxth	r0, r0
 80163e2:	bd38      	pop	{r3, r4, r5, pc}

080163e4 <_ZN8touchgfx4clzuEm>:
 80163e4:	4603      	mov	r3, r0
 80163e6:	b1c8      	cbz	r0, 801641c <_ZN8touchgfx4clzuEm+0x38>
 80163e8:	0c02      	lsrs	r2, r0, #16
 80163ea:	0412      	lsls	r2, r2, #16
 80163ec:	b9a2      	cbnz	r2, 8016418 <_ZN8touchgfx4clzuEm+0x34>
 80163ee:	0403      	lsls	r3, r0, #16
 80163f0:	2010      	movs	r0, #16
 80163f2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80163f6:	bf04      	itt	eq
 80163f8:	021b      	lsleq	r3, r3, #8
 80163fa:	3008      	addeq	r0, #8
 80163fc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016400:	bf04      	itt	eq
 8016402:	011b      	lsleq	r3, r3, #4
 8016404:	3004      	addeq	r0, #4
 8016406:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801640a:	bf04      	itt	eq
 801640c:	009b      	lsleq	r3, r3, #2
 801640e:	3002      	addeq	r0, #2
 8016410:	2b00      	cmp	r3, #0
 8016412:	db04      	blt.n	801641e <_ZN8touchgfx4clzuEm+0x3a>
 8016414:	3001      	adds	r0, #1
 8016416:	4770      	bx	lr
 8016418:	2000      	movs	r0, #0
 801641a:	e7ea      	b.n	80163f2 <_ZN8touchgfx4clzuEm+0xe>
 801641c:	2020      	movs	r0, #32
 801641e:	4770      	bx	lr

08016420 <_ZN8touchgfx7muldivuEmmmRm>:
 8016420:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016424:	460f      	mov	r7, r1
 8016426:	4615      	mov	r5, r2
 8016428:	461e      	mov	r6, r3
 801642a:	4601      	mov	r1, r0
 801642c:	b100      	cbz	r0, 8016430 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801642e:	b927      	cbnz	r7, 801643a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016430:	2000      	movs	r0, #0
 8016432:	6030      	str	r0, [r6, #0]
 8016434:	b002      	add	sp, #8
 8016436:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801643a:	f7ff ffd3 	bl	80163e4 <_ZN8touchgfx4clzuEm>
 801643e:	b980      	cbnz	r0, 8016462 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016440:	4638      	mov	r0, r7
 8016442:	f7ff ffcf 	bl	80163e4 <_ZN8touchgfx4clzuEm>
 8016446:	2800      	cmp	r0, #0
 8016448:	dd05      	ble.n	8016456 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801644a:	4633      	mov	r3, r6
 801644c:	462a      	mov	r2, r5
 801644e:	4638      	mov	r0, r7
 8016450:	f7ff ffe6 	bl	8016420 <_ZN8touchgfx7muldivuEmmmRm>
 8016454:	e7ee      	b.n	8016434 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016456:	f04f 33ff 	mov.w	r3, #4294967295
 801645a:	6033      	str	r3, [r6, #0]
 801645c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016460:	e7e8      	b.n	8016434 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016462:	fa37 f800 	lsrs.w	r8, r7, r0
 8016466:	fb07 f301 	mul.w	r3, r7, r1
 801646a:	d105      	bne.n	8016478 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801646c:	fbb3 f0f5 	udiv	r0, r3, r5
 8016470:	fb05 3510 	mls	r5, r5, r0, r3
 8016474:	6035      	str	r5, [r6, #0]
 8016476:	e7dd      	b.n	8016434 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016478:	2301      	movs	r3, #1
 801647a:	fa01 fa00 	lsl.w	sl, r1, r0
 801647e:	fa03 f000 	lsl.w	r0, r3, r0
 8016482:	3801      	subs	r0, #1
 8016484:	462a      	mov	r2, r5
 8016486:	4633      	mov	r3, r6
 8016488:	4038      	ands	r0, r7
 801648a:	f7ff ffc9 	bl	8016420 <_ZN8touchgfx7muldivuEmmmRm>
 801648e:	fbba f9f5 	udiv	r9, sl, r5
 8016492:	462a      	mov	r2, r5
 8016494:	4607      	mov	r7, r0
 8016496:	ab01      	add	r3, sp, #4
 8016498:	fb05 a119 	mls	r1, r5, r9, sl
 801649c:	4640      	mov	r0, r8
 801649e:	f7ff ffbf 	bl	8016420 <_ZN8touchgfx7muldivuEmmmRm>
 80164a2:	9b01      	ldr	r3, [sp, #4]
 80164a4:	6832      	ldr	r2, [r6, #0]
 80164a6:	fb08 f409 	mul.w	r4, r8, r9
 80164aa:	441a      	add	r2, r3
 80164ac:	fbb2 f3f5 	udiv	r3, r2, r5
 80164b0:	441c      	add	r4, r3
 80164b2:	443c      	add	r4, r7
 80164b4:	4420      	add	r0, r4
 80164b6:	fb05 2513 	mls	r5, r5, r3, r2
 80164ba:	e7db      	b.n	8016474 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080164bc <_ZN8touchgfx6muldivElllRl>:
 80164bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80164be:	2800      	cmp	r0, #0
 80164c0:	bfba      	itte	lt
 80164c2:	4240      	neglt	r0, r0
 80164c4:	f04f 34ff 	movlt.w	r4, #4294967295
 80164c8:	2401      	movge	r4, #1
 80164ca:	2900      	cmp	r1, #0
 80164cc:	bfbc      	itt	lt
 80164ce:	4249      	neglt	r1, r1
 80164d0:	4264      	neglt	r4, r4
 80164d2:	2a00      	cmp	r2, #0
 80164d4:	bfb6      	itet	lt
 80164d6:	4265      	neglt	r5, r4
 80164d8:	4625      	movge	r5, r4
 80164da:	4252      	neglt	r2, r2
 80164dc:	4288      	cmp	r0, r1
 80164de:	461e      	mov	r6, r3
 80164e0:	bfc2      	ittt	gt
 80164e2:	4603      	movgt	r3, r0
 80164e4:	4608      	movgt	r0, r1
 80164e6:	4619      	movgt	r1, r3
 80164e8:	ab01      	add	r3, sp, #4
 80164ea:	f7ff ff99 	bl	8016420 <_ZN8touchgfx7muldivuEmmmRm>
 80164ee:	9b01      	ldr	r3, [sp, #4]
 80164f0:	4368      	muls	r0, r5
 80164f2:	435c      	muls	r4, r3
 80164f4:	6034      	str	r4, [r6, #0]
 80164f6:	b002      	add	sp, #8
 80164f8:	bd70      	pop	{r4, r5, r6, pc}

080164fa <_ZN8touchgfx6muldivElll>:
 80164fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80164fc:	4606      	mov	r6, r0
 80164fe:	ab01      	add	r3, sp, #4
 8016500:	460d      	mov	r5, r1
 8016502:	4614      	mov	r4, r2
 8016504:	f7ff ffda 	bl	80164bc <_ZN8touchgfx6muldivElllRl>
 8016508:	2e00      	cmp	r6, #0
 801650a:	db20      	blt.n	801654e <_ZN8touchgfx6muldivElll+0x54>
 801650c:	bf14      	ite	ne
 801650e:	2301      	movne	r3, #1
 8016510:	2300      	moveq	r3, #0
 8016512:	2d00      	cmp	r5, #0
 8016514:	db1e      	blt.n	8016554 <_ZN8touchgfx6muldivElll+0x5a>
 8016516:	bf14      	ite	ne
 8016518:	2201      	movne	r2, #1
 801651a:	2200      	moveq	r2, #0
 801651c:	2c00      	cmp	r4, #0
 801651e:	fb03 f202 	mul.w	r2, r3, r2
 8016522:	db1a      	blt.n	801655a <_ZN8touchgfx6muldivElll+0x60>
 8016524:	bf14      	ite	ne
 8016526:	2301      	movne	r3, #1
 8016528:	2300      	moveq	r3, #0
 801652a:	4353      	muls	r3, r2
 801652c:	2b01      	cmp	r3, #1
 801652e:	d117      	bne.n	8016560 <_ZN8touchgfx6muldivElll+0x66>
 8016530:	9b01      	ldr	r3, [sp, #4]
 8016532:	2c00      	cmp	r4, #0
 8016534:	bfb8      	it	lt
 8016536:	4264      	neglt	r4, r4
 8016538:	2b00      	cmp	r3, #0
 801653a:	f104 0401 	add.w	r4, r4, #1
 801653e:	bfb8      	it	lt
 8016540:	425b      	neglt	r3, r3
 8016542:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016546:	db00      	blt.n	801654a <_ZN8touchgfx6muldivElll+0x50>
 8016548:	3001      	adds	r0, #1
 801654a:	b002      	add	sp, #8
 801654c:	bd70      	pop	{r4, r5, r6, pc}
 801654e:	f04f 33ff 	mov.w	r3, #4294967295
 8016552:	e7de      	b.n	8016512 <_ZN8touchgfx6muldivElll+0x18>
 8016554:	f04f 32ff 	mov.w	r2, #4294967295
 8016558:	e7e0      	b.n	801651c <_ZN8touchgfx6muldivElll+0x22>
 801655a:	f04f 33ff 	mov.w	r3, #4294967295
 801655e:	e7e4      	b.n	801652a <_ZN8touchgfx6muldivElll+0x30>
 8016560:	3301      	adds	r3, #1
 8016562:	d1f2      	bne.n	801654a <_ZN8touchgfx6muldivElll+0x50>
 8016564:	9b01      	ldr	r3, [sp, #4]
 8016566:	2c00      	cmp	r4, #0
 8016568:	bfb8      	it	lt
 801656a:	4264      	neglt	r4, r4
 801656c:	2b00      	cmp	r3, #0
 801656e:	bfb8      	it	lt
 8016570:	425b      	neglt	r3, r3
 8016572:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016576:	bfc8      	it	gt
 8016578:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801657c:	e7e5      	b.n	801654a <_ZN8touchgfx6muldivElll+0x50>

0801657e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801657e:	2000      	movs	r0, #0
 8016580:	4770      	bx	lr

08016582 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8016582:	2001      	movs	r0, #1
 8016584:	4770      	bx	lr

08016586 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8016586:	2002      	movs	r0, #2
 8016588:	4770      	bx	lr

0801658a <_ZN8touchgfx6ScreenD1Ev>:
 801658a:	4770      	bx	lr

0801658c <_ZN8touchgfx12GestureEventD1Ev>:
 801658c:	4770      	bx	lr

0801658e <_ZN8touchgfx9DragEventD1Ev>:
 801658e:	4770      	bx	lr

08016590 <_ZN8touchgfx10ClickEventD1Ev>:
 8016590:	4770      	bx	lr

08016592 <_ZN8touchgfx10ClickEventD0Ev>:
 8016592:	b510      	push	{r4, lr}
 8016594:	210c      	movs	r1, #12
 8016596:	4604      	mov	r4, r0
 8016598:	f012 fd51 	bl	802903e <_ZdlPvj>
 801659c:	4620      	mov	r0, r4
 801659e:	bd10      	pop	{r4, pc}

080165a0 <_ZN8touchgfx9DragEventD0Ev>:
 80165a0:	b510      	push	{r4, lr}
 80165a2:	2110      	movs	r1, #16
 80165a4:	4604      	mov	r4, r0
 80165a6:	f012 fd4a 	bl	802903e <_ZdlPvj>
 80165aa:	4620      	mov	r0, r4
 80165ac:	bd10      	pop	{r4, pc}

080165ae <_ZN8touchgfx12GestureEventD0Ev>:
 80165ae:	b510      	push	{r4, lr}
 80165b0:	210c      	movs	r1, #12
 80165b2:	4604      	mov	r4, r0
 80165b4:	f012 fd43 	bl	802903e <_ZdlPvj>
 80165b8:	4620      	mov	r0, r4
 80165ba:	bd10      	pop	{r4, pc}

080165bc <_ZN8touchgfx6ScreenD0Ev>:
 80165bc:	b510      	push	{r4, lr}
 80165be:	213c      	movs	r1, #60	; 0x3c
 80165c0:	4604      	mov	r4, r0
 80165c2:	f012 fd3c 	bl	802903e <_ZdlPvj>
 80165c6:	4620      	mov	r0, r4
 80165c8:	bd10      	pop	{r4, pc}
	...

080165cc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80165cc:	b530      	push	{r4, r5, lr}
 80165ce:	460d      	mov	r5, r1
 80165d0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80165d2:	b087      	sub	sp, #28
 80165d4:	4604      	mov	r4, r0
 80165d6:	b301      	cbz	r1, 801661a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80165d8:	a801      	add	r0, sp, #4
 80165da:	f7ff fe3d 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80165de:	892a      	ldrh	r2, [r5, #8]
 80165e0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80165e4:	7928      	ldrb	r0, [r5, #4]
 80165e6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80165ea:	f88d 0010 	strb.w	r0, [sp, #16]
 80165ee:	1ad2      	subs	r2, r2, r3
 80165f0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80165f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80165f4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80165f8:	441a      	add	r2, r3
 80165fa:	896b      	ldrh	r3, [r5, #10]
 80165fc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016600:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016604:	1b5b      	subs	r3, r3, r5
 8016606:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016608:	442b      	add	r3, r5
 801660a:	4d05      	ldr	r5, [pc, #20]	; (8016620 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801660c:	9503      	str	r5, [sp, #12]
 801660e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016612:	6803      	ldr	r3, [r0, #0]
 8016614:	a903      	add	r1, sp, #12
 8016616:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016618:	4798      	blx	r3
 801661a:	b007      	add	sp, #28
 801661c:	bd30      	pop	{r4, r5, pc}
 801661e:	bf00      	nop
 8016620:	0802e554 	.word	0x0802e554

08016624 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016628:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801662a:	b08a      	sub	sp, #40	; 0x28
 801662c:	4604      	mov	r4, r0
 801662e:	460d      	mov	r5, r1
 8016630:	b113      	cbz	r3, 8016638 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016632:	790b      	ldrb	r3, [r1, #4]
 8016634:	2b00      	cmp	r3, #0
 8016636:	d044      	beq.n	80166c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016638:	f104 0804 	add.w	r8, r4, #4
 801663c:	4641      	mov	r1, r8
 801663e:	a803      	add	r0, sp, #12
 8016640:	f7ff fe0a 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016644:	792b      	ldrb	r3, [r5, #4]
 8016646:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801664a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801664e:	b983      	cbnz	r3, 8016672 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016650:	892a      	ldrh	r2, [r5, #8]
 8016652:	88e9      	ldrh	r1, [r5, #6]
 8016654:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016658:	1b92      	subs	r2, r2, r6
 801665a:	1bc9      	subs	r1, r1, r7
 801665c:	9301      	str	r3, [sp, #4]
 801665e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016662:	9300      	str	r3, [sp, #0]
 8016664:	b212      	sxth	r2, r2
 8016666:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801666a:	b209      	sxth	r1, r1
 801666c:	4640      	mov	r0, r8
 801666e:	f7f9 fa79 	bl	800fb64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016672:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016674:	b329      	cbz	r1, 80166c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016676:	a805      	add	r0, sp, #20
 8016678:	f7ff fdee 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801667c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016680:	792b      	ldrb	r3, [r5, #4]
 8016682:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016684:	f88d 3020 	strb.w	r3, [sp, #32]
 8016688:	1abf      	subs	r7, r7, r2
 801668a:	88ea      	ldrh	r2, [r5, #6]
 801668c:	4417      	add	r7, r2
 801668e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016690:	4417      	add	r7, r2
 8016692:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016696:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801669a:	1ab6      	subs	r6, r6, r2
 801669c:	892a      	ldrh	r2, [r5, #8]
 801669e:	4416      	add	r6, r2
 80166a0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80166a2:	4416      	add	r6, r2
 80166a4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80166a8:	4a07      	ldr	r2, [pc, #28]	; (80166c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80166aa:	9207      	str	r2, [sp, #28]
 80166ac:	2600      	movs	r6, #0
 80166ae:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80166b2:	6803      	ldr	r3, [r0, #0]
 80166b4:	a907      	add	r1, sp, #28
 80166b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80166b8:	4798      	blx	r3
 80166ba:	792b      	ldrb	r3, [r5, #4]
 80166bc:	b10b      	cbz	r3, 80166c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80166be:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80166c2:	b00a      	add	sp, #40	; 0x28
 80166c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80166c8:	0802e52c 	.word	0x0802e52c

080166cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80166cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80166d0:	460c      	mov	r4, r1
 80166d2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80166d4:	b088      	sub	sp, #32
 80166d6:	4605      	mov	r5, r0
 80166d8:	2900      	cmp	r1, #0
 80166da:	d06d      	beq.n	80167b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80166dc:	4668      	mov	r0, sp
 80166de:	f7ff fdbb 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80166e2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80166e4:	88e3      	ldrh	r3, [r4, #6]
 80166e6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80166ea:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80166ee:	440b      	add	r3, r1
 80166f0:	b21b      	sxth	r3, r3
 80166f2:	4543      	cmp	r3, r8
 80166f4:	db31      	blt.n	801675a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80166f6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80166fa:	44c4      	add	ip, r8
 80166fc:	fa0f fc8c 	sxth.w	ip, ip
 8016700:	4563      	cmp	r3, ip
 8016702:	da2a      	bge.n	801675a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016704:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016706:	8926      	ldrh	r6, [r4, #8]
 8016708:	4416      	add	r6, r2
 801670a:	b236      	sxth	r6, r6
 801670c:	42be      	cmp	r6, r7
 801670e:	db24      	blt.n	801675a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016710:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016714:	4438      	add	r0, r7
 8016716:	b200      	sxth	r0, r0
 8016718:	4286      	cmp	r6, r0
 801671a:	da1e      	bge.n	801675a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801671c:	8963      	ldrh	r3, [r4, #10]
 801671e:	4419      	add	r1, r3
 8016720:	b209      	sxth	r1, r1
 8016722:	4541      	cmp	r1, r8
 8016724:	db08      	blt.n	8016738 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016726:	4561      	cmp	r1, ip
 8016728:	da06      	bge.n	8016738 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801672a:	89a3      	ldrh	r3, [r4, #12]
 801672c:	441a      	add	r2, r3
 801672e:	b212      	sxth	r2, r2
 8016730:	42ba      	cmp	r2, r7
 8016732:	db01      	blt.n	8016738 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016734:	4282      	cmp	r2, r0
 8016736:	db10      	blt.n	801675a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016738:	4b21      	ldr	r3, [pc, #132]	; (80167c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801673a:	9304      	str	r3, [sp, #16]
 801673c:	2302      	movs	r3, #2
 801673e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016742:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016744:	2300      	movs	r3, #0
 8016746:	f8ad 3016 	strh.w	r3, [sp, #22]
 801674a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801674e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016752:	6803      	ldr	r3, [r0, #0]
 8016754:	a904      	add	r1, sp, #16
 8016756:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016758:	4798      	blx	r3
 801675a:	1d29      	adds	r1, r5, #4
 801675c:	a802      	add	r0, sp, #8
 801675e:	f7ff fd7b 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016762:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016766:	88e0      	ldrh	r0, [r4, #6]
 8016768:	7921      	ldrb	r1, [r4, #4]
 801676a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801676e:	8922      	ldrh	r2, [r4, #8]
 8016770:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016772:	f88d 1014 	strb.w	r1, [sp, #20]
 8016776:	eba3 0808 	sub.w	r8, r3, r8
 801677a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801677e:	1bdf      	subs	r7, r3, r7
 8016780:	b2bb      	uxth	r3, r7
 8016782:	fa1f f888 	uxth.w	r8, r8
 8016786:	8967      	ldrh	r7, [r4, #10]
 8016788:	89a4      	ldrh	r4, [r4, #12]
 801678a:	4440      	add	r0, r8
 801678c:	4460      	add	r0, ip
 801678e:	441a      	add	r2, r3
 8016790:	44b8      	add	r8, r7
 8016792:	4423      	add	r3, r4
 8016794:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016798:	4433      	add	r3, r6
 801679a:	4432      	add	r2, r6
 801679c:	44e0      	add	r8, ip
 801679e:	4c09      	ldr	r4, [pc, #36]	; (80167c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80167a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80167a2:	9404      	str	r4, [sp, #16]
 80167a4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80167a8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80167ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 80167b0:	6803      	ldr	r3, [r0, #0]
 80167b2:	a904      	add	r1, sp, #16
 80167b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80167b6:	4798      	blx	r3
 80167b8:	b008      	add	sp, #32
 80167ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80167be:	bf00      	nop
 80167c0:	0802e52c 	.word	0x0802e52c
 80167c4:	0802e540 	.word	0x0802e540

080167c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80167c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80167ca:	4604      	mov	r4, r0
 80167cc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80167d0:	3201      	adds	r2, #1
 80167d2:	d112      	bne.n	80167fa <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80167d4:	6803      	ldr	r3, [r0, #0]
 80167d6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80167da:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80167de:	f8ad 1004 	strh.w	r1, [sp, #4]
 80167e2:	2500      	movs	r5, #0
 80167e4:	9500      	str	r5, [sp, #0]
 80167e6:	466d      	mov	r5, sp
 80167e8:	4629      	mov	r1, r5
 80167ea:	f8ad 2006 	strh.w	r2, [sp, #6]
 80167ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80167f0:	4798      	blx	r3
 80167f2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80167f6:	e884 0003 	stmia.w	r4, {r0, r1}
 80167fa:	4620      	mov	r0, r4
 80167fc:	b003      	add	sp, #12
 80167fe:	bd30      	pop	{r4, r5, pc}

08016800 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016800:	b513      	push	{r0, r1, r4, lr}
 8016802:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016806:	3301      	adds	r3, #1
 8016808:	4604      	mov	r4, r0
 801680a:	d109      	bne.n	8016820 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801680c:	4601      	mov	r1, r0
 801680e:	4668      	mov	r0, sp
 8016810:	f7ff fd22 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016814:	f8bd 3000 	ldrh.w	r3, [sp]
 8016818:	8423      	strh	r3, [r4, #32]
 801681a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801681e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016820:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016824:	b002      	add	sp, #8
 8016826:	bd10      	pop	{r4, pc}

08016828 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016828:	b513      	push	{r0, r1, r4, lr}
 801682a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801682e:	3301      	adds	r3, #1
 8016830:	4604      	mov	r4, r0
 8016832:	d109      	bne.n	8016848 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016834:	4601      	mov	r1, r0
 8016836:	4668      	mov	r0, sp
 8016838:	f7ff fd0e 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801683c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016840:	8423      	strh	r3, [r4, #32]
 8016842:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016846:	8463      	strh	r3, [r4, #34]	; 0x22
 8016848:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801684c:	b002      	add	sp, #8
 801684e:	bd10      	pop	{r4, pc}

08016850 <_ZN8touchgfx6ScreenC1Ev>:
 8016850:	b570      	push	{r4, r5, r6, lr}
 8016852:	4605      	mov	r5, r0
 8016854:	4b16      	ldr	r3, [pc, #88]	; (80168b0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016856:	f845 3b04 	str.w	r3, [r5], #4
 801685a:	2300      	movs	r3, #0
 801685c:	8103      	strh	r3, [r0, #8]
 801685e:	8143      	strh	r3, [r0, #10]
 8016860:	8183      	strh	r3, [r0, #12]
 8016862:	81c3      	strh	r3, [r0, #14]
 8016864:	8203      	strh	r3, [r0, #16]
 8016866:	8243      	strh	r3, [r0, #18]
 8016868:	8283      	strh	r3, [r0, #20]
 801686a:	82c3      	strh	r3, [r0, #22]
 801686c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016870:	6203      	str	r3, [r0, #32]
 8016872:	8483      	strh	r3, [r0, #36]	; 0x24
 8016874:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016876:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801687a:	4a0e      	ldr	r2, [pc, #56]	; (80168b4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801687c:	6343      	str	r3, [r0, #52]	; 0x34
 801687e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016882:	4b0d      	ldr	r3, [pc, #52]	; (80168b8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016884:	6042      	str	r2, [r0, #4]
 8016886:	f9b3 6000 	ldrsh.w	r6, [r3]
 801688a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801688c:	4a0b      	ldr	r2, [pc, #44]	; (80168bc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801688e:	4604      	mov	r4, r0
 8016890:	2101      	movs	r1, #1
 8016892:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016896:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801689a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801689e:	4628      	mov	r0, r5
 80168a0:	4798      	blx	r3
 80168a2:	6863      	ldr	r3, [r4, #4]
 80168a4:	4628      	mov	r0, r5
 80168a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80168a8:	4631      	mov	r1, r6
 80168aa:	4798      	blx	r3
 80168ac:	4620      	mov	r0, r4
 80168ae:	bd70      	pop	{r4, r5, r6, pc}
 80168b0:	0802e568 	.word	0x0802e568
 80168b4:	0802ddcc 	.word	0x0802ddcc
 80168b8:	20012e72 	.word	0x20012e72
 80168bc:	20012e70 	.word	0x20012e70

080168c0 <_ZN8touchgfx6Screen4drawEv>:
 80168c0:	b507      	push	{r0, r1, r2, lr}
 80168c2:	4b09      	ldr	r3, [pc, #36]	; (80168e8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80168c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80168c8:	4b08      	ldr	r3, [pc, #32]	; (80168ec <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80168ca:	f8ad 2004 	strh.w	r2, [sp, #4]
 80168ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 80168d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80168d6:	6803      	ldr	r3, [r0, #0]
 80168d8:	2100      	movs	r1, #0
 80168da:	9100      	str	r1, [sp, #0]
 80168dc:	689b      	ldr	r3, [r3, #8]
 80168de:	4669      	mov	r1, sp
 80168e0:	4798      	blx	r3
 80168e2:	b003      	add	sp, #12
 80168e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80168e8:	20012e70 	.word	0x20012e70
 80168ec:	20012e72 	.word	0x20012e72

080168f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80168f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168f4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80168f8:	2b00      	cmp	r3, #0
 80168fa:	b089      	sub	sp, #36	; 0x24
 80168fc:	4680      	mov	r8, r0
 80168fe:	460c      	mov	r4, r1
 8016900:	4615      	mov	r5, r2
 8016902:	dd0e      	ble.n	8016922 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016904:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016908:	2b00      	cmp	r3, #0
 801690a:	dd0a      	ble.n	8016922 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801690c:	4628      	mov	r0, r5
 801690e:	f7ff ff5b 	bl	80167c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016912:	4621      	mov	r1, r4
 8016914:	f7fe fa3d 	bl	8014d92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016918:	69eb      	ldr	r3, [r5, #28]
 801691a:	b928      	cbnz	r0, 8016928 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801691c:	461d      	mov	r5, r3
 801691e:	2b00      	cmp	r3, #0
 8016920:	d1f4      	bne.n	801690c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016922:	b009      	add	sp, #36	; 0x24
 8016924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016928:	ae04      	add	r6, sp, #16
 801692a:	2b00      	cmp	r3, #0
 801692c:	f000 80b5 	beq.w	8016a9a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016930:	682b      	ldr	r3, [r5, #0]
 8016932:	4629      	mov	r1, r5
 8016934:	68db      	ldr	r3, [r3, #12]
 8016936:	a802      	add	r0, sp, #8
 8016938:	4798      	blx	r3
 801693a:	4628      	mov	r0, r5
 801693c:	f7ff ff60 	bl	8016800 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016940:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016944:	4407      	add	r7, r0
 8016946:	4628      	mov	r0, r5
 8016948:	f7ff ff6e 	bl	8016828 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801694c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016950:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016954:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016958:	4418      	add	r0, r3
 801695a:	4621      	mov	r1, r4
 801695c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016960:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016964:	b23f      	sxth	r7, r7
 8016966:	4630      	mov	r0, r6
 8016968:	f8ad 3016 	strh.w	r3, [sp, #22]
 801696c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016970:	f7f9 f9dc 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 8016974:	4628      	mov	r0, r5
 8016976:	f7ff ff27 	bl	80167c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801697a:	4602      	mov	r2, r0
 801697c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016980:	ab06      	add	r3, sp, #24
 8016982:	e883 0003 	stmia.w	r3, {r0, r1}
 8016986:	4611      	mov	r1, r2
 8016988:	4618      	mov	r0, r3
 801698a:	f7f9 f9cf 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 801698e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016992:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016996:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801699a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801699e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80169a2:	4299      	cmp	r1, r3
 80169a4:	d10b      	bne.n	80169be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80169a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80169aa:	4552      	cmp	r2, sl
 80169ac:	d107      	bne.n	80169be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80169ae:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80169b2:	455a      	cmp	r2, fp
 80169b4:	d103      	bne.n	80169be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80169b6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80169ba:	454a      	cmp	r2, r9
 80169bc:	d06d      	beq.n	8016a9a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80169be:	f1bb 0f00 	cmp.w	fp, #0
 80169c2:	dd65      	ble.n	8016a90 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80169c4:	f1b9 0f00 	cmp.w	r9, #0
 80169c8:	dd62      	ble.n	8016a90 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80169ca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80169ce:	fa1f f08a 	uxth.w	r0, sl
 80169d2:	4552      	cmp	r2, sl
 80169d4:	9000      	str	r0, [sp, #0]
 80169d6:	da12      	bge.n	80169fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80169d8:	9301      	str	r3, [sp, #4]
 80169da:	9b00      	ldr	r3, [sp, #0]
 80169dc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80169e0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80169e4:	1a9a      	subs	r2, r3, r2
 80169e6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80169ea:	f8ad 0014 	strh.w	r0, [sp, #20]
 80169ee:	f8ad 2016 	strh.w	r2, [sp, #22]
 80169f2:	69ea      	ldr	r2, [r5, #28]
 80169f4:	4631      	mov	r1, r6
 80169f6:	4640      	mov	r0, r8
 80169f8:	f7ff ff7a 	bl	80168f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80169fc:	9b01      	ldr	r3, [sp, #4]
 80169fe:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016a02:	429a      	cmp	r2, r3
 8016a04:	b29f      	uxth	r7, r3
 8016a06:	da0d      	bge.n	8016a24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016a08:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016a0c:	1aba      	subs	r2, r7, r2
 8016a0e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016a12:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016a16:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016a1a:	69ea      	ldr	r2, [r5, #28]
 8016a1c:	4631      	mov	r1, r6
 8016a1e:	4640      	mov	r0, r8
 8016a20:	f7ff ff66 	bl	80168f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a24:	8822      	ldrh	r2, [r4, #0]
 8016a26:	88a3      	ldrh	r3, [r4, #4]
 8016a28:	445f      	add	r7, fp
 8016a2a:	4413      	add	r3, r2
 8016a2c:	b29b      	uxth	r3, r3
 8016a2e:	b2bf      	uxth	r7, r7
 8016a30:	b23a      	sxth	r2, r7
 8016a32:	b219      	sxth	r1, r3
 8016a34:	4291      	cmp	r1, r2
 8016a36:	dd0d      	ble.n	8016a54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016a38:	1bdb      	subs	r3, r3, r7
 8016a3a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016a3e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016a42:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016a46:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016a4a:	69ea      	ldr	r2, [r5, #28]
 8016a4c:	4631      	mov	r1, r6
 8016a4e:	4640      	mov	r0, r8
 8016a50:	f7ff ff4e 	bl	80168f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a54:	88e2      	ldrh	r2, [r4, #6]
 8016a56:	8863      	ldrh	r3, [r4, #2]
 8016a58:	4413      	add	r3, r2
 8016a5a:	9a00      	ldr	r2, [sp, #0]
 8016a5c:	444a      	add	r2, r9
 8016a5e:	b29b      	uxth	r3, r3
 8016a60:	fa1f f982 	uxth.w	r9, r2
 8016a64:	fa0f f289 	sxth.w	r2, r9
 8016a68:	b219      	sxth	r1, r3
 8016a6a:	428a      	cmp	r2, r1
 8016a6c:	da15      	bge.n	8016a9a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016a6e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016a72:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016a76:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016a7a:	eba3 0309 	sub.w	r3, r3, r9
 8016a7e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016a82:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016a86:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016a8a:	69ea      	ldr	r2, [r5, #28]
 8016a8c:	4631      	mov	r1, r6
 8016a8e:	e001      	b.n	8016a94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016a90:	69ea      	ldr	r2, [r5, #28]
 8016a92:	4621      	mov	r1, r4
 8016a94:	4640      	mov	r0, r8
 8016a96:	f7ff ff2b 	bl	80168f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a9a:	4628      	mov	r0, r5
 8016a9c:	f7ff fe94 	bl	80167c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016aa0:	6861      	ldr	r1, [r4, #4]
 8016aa2:	4602      	mov	r2, r0
 8016aa4:	6820      	ldr	r0, [r4, #0]
 8016aa6:	4633      	mov	r3, r6
 8016aa8:	c303      	stmia	r3!, {r0, r1}
 8016aaa:	4611      	mov	r1, r2
 8016aac:	4630      	mov	r0, r6
 8016aae:	f7f9 f93d 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 8016ab2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016ab6:	2b00      	cmp	r3, #0
 8016ab8:	f77f af33 	ble.w	8016922 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016abc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016ac0:	2b00      	cmp	r3, #0
 8016ac2:	f77f af2e 	ble.w	8016922 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016ac6:	4628      	mov	r0, r5
 8016ac8:	f7ff fe9a 	bl	8016800 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016acc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016ad0:	1a18      	subs	r0, r3, r0
 8016ad2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016ad6:	4628      	mov	r0, r5
 8016ad8:	f7ff fea6 	bl	8016828 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016adc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016ae0:	1a18      	subs	r0, r3, r0
 8016ae2:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016ae6:	682b      	ldr	r3, [r5, #0]
 8016ae8:	4631      	mov	r1, r6
 8016aea:	689b      	ldr	r3, [r3, #8]
 8016aec:	4628      	mov	r0, r5
 8016aee:	4798      	blx	r3
 8016af0:	e717      	b.n	8016922 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016af2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016af2:	b570      	push	{r4, r5, r6, lr}
 8016af4:	460c      	mov	r4, r1
 8016af6:	b086      	sub	sp, #24
 8016af8:	1d06      	adds	r6, r0, #4
 8016afa:	2300      	movs	r3, #0
 8016afc:	4631      	mov	r1, r6
 8016afe:	4605      	mov	r5, r0
 8016b00:	a802      	add	r0, sp, #8
 8016b02:	9301      	str	r3, [sp, #4]
 8016b04:	f7ff fba8 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b08:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016b0c:	8822      	ldrh	r2, [r4, #0]
 8016b0e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016b12:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016b16:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016b1a:	1ad2      	subs	r2, r2, r3
 8016b1c:	8863      	ldrh	r3, [r4, #2]
 8016b1e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016b22:	1a5b      	subs	r3, r3, r1
 8016b24:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016b28:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016b2c:	aa01      	add	r2, sp, #4
 8016b2e:	a904      	add	r1, sp, #16
 8016b30:	4630      	mov	r0, r6
 8016b32:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016b36:	f7f9 f9d1 	bl	800fedc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016b3a:	9a01      	ldr	r2, [sp, #4]
 8016b3c:	b11a      	cbz	r2, 8016b46 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016b3e:	4621      	mov	r1, r4
 8016b40:	4628      	mov	r0, r5
 8016b42:	f7ff fed5 	bl	80168f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016b46:	b006      	add	sp, #24
 8016b48:	bd70      	pop	{r4, r5, r6, pc}

08016b4a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016b4a:	b530      	push	{r4, r5, lr}
 8016b4c:	4602      	mov	r2, r0
 8016b4e:	4604      	mov	r4, r0
 8016b50:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016b54:	b085      	sub	sp, #20
 8016b56:	460d      	mov	r5, r1
 8016b58:	6851      	ldr	r1, [r2, #4]
 8016b5a:	466b      	mov	r3, sp
 8016b5c:	c303      	stmia	r3!, {r0, r1}
 8016b5e:	4629      	mov	r1, r5
 8016b60:	4668      	mov	r0, sp
 8016b62:	f7f9 f8e3 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 8016b66:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016b6a:	b12b      	cbz	r3, 8016b78 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016b6c:	4669      	mov	r1, sp
 8016b6e:	4620      	mov	r0, r4
 8016b70:	f7ff ffbf 	bl	8016af2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016b74:	b005      	add	sp, #20
 8016b76:	bd30      	pop	{r4, r5, pc}
 8016b78:	3404      	adds	r4, #4
 8016b7a:	4621      	mov	r1, r4
 8016b7c:	a802      	add	r0, sp, #8
 8016b7e:	f7ff fb6b 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b82:	f8bd 3000 	ldrh.w	r3, [sp]
 8016b86:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016b8a:	1a9b      	subs	r3, r3, r2
 8016b8c:	f8ad 3000 	strh.w	r3, [sp]
 8016b90:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016b94:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016b98:	4669      	mov	r1, sp
 8016b9a:	1a9b      	subs	r3, r3, r2
 8016b9c:	4620      	mov	r0, r4
 8016b9e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016ba2:	f7f9 f962 	bl	800fe6a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016ba6:	e7e5      	b.n	8016b74 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016ba8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016ba8:	680a      	ldr	r2, [r1, #0]
 8016baa:	460b      	mov	r3, r1
 8016bac:	6992      	ldr	r2, [r2, #24]
 8016bae:	1d01      	adds	r1, r0, #4
 8016bb0:	4618      	mov	r0, r3
 8016bb2:	4710      	bx	r2

08016bb4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016bb4:	4298      	cmp	r0, r3
 8016bb6:	d200      	bcs.n	8016bba <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016bb8:	b913      	cbnz	r3, 8016bc0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016bba:	440a      	add	r2, r1
 8016bbc:	b210      	sxth	r0, r2
 8016bbe:	4770      	bx	lr
 8016bc0:	ee07 0a90 	vmov	s15, r0
 8016bc4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016bc8:	ee07 3a90 	vmov	s15, r3
 8016bcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016bd0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016bd4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016bd8:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016bdc:	ee07 2a90 	vmov	s15, r2
 8016be0:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016be4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016be8:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016bec:	ee07 1a90 	vmov	s15, r1
 8016bf0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016bf4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016bf8:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016bfc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c04:	bfcc      	ite	gt
 8016c06:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016c0a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016c0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016c12:	ee17 3a90 	vmov	r3, s15
 8016c16:	b218      	sxth	r0, r3
 8016c18:	4770      	bx	lr

08016c1a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016c1a:	4298      	cmp	r0, r3
 8016c1c:	d200      	bcs.n	8016c20 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8016c1e:	b913      	cbnz	r3, 8016c26 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016c20:	440a      	add	r2, r1
 8016c22:	b210      	sxth	r0, r2
 8016c24:	4770      	bx	lr
 8016c26:	ee07 2a90 	vmov	s15, r2
 8016c2a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8016c2e:	ee07 0a90 	vmov	s15, r0
 8016c32:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016c36:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016c3a:	ee07 3a10 	vmov	s14, r3
 8016c3e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016c42:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016c46:	ee07 1a90 	vmov	s15, r1
 8016c4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016c4e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016c52:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016c56:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c5e:	bfcc      	ite	gt
 8016c60:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016c64:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016c68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016c6c:	ee17 3a90 	vmov	r3, s15
 8016c70:	b218      	sxth	r0, r3
 8016c72:	4770      	bx	lr

08016c74 <_ZN8touchgfx12TextProviderC1Ev>:
 8016c74:	b538      	push	{r3, r4, r5, lr}
 8016c76:	2500      	movs	r5, #0
 8016c78:	2302      	movs	r3, #2
 8016c7a:	4604      	mov	r4, r0
 8016c7c:	e9c0 5500 	strd	r5, r5, [r0]
 8016c80:	7403      	strb	r3, [r0, #16]
 8016c82:	6145      	str	r5, [r0, #20]
 8016c84:	7605      	strb	r5, [r0, #24]
 8016c86:	83c5      	strh	r5, [r0, #30]
 8016c88:	8405      	strh	r5, [r0, #32]
 8016c8a:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016c8c:	8705      	strh	r5, [r0, #56]	; 0x38
 8016c8e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016c90:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016c94:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016c98:	220e      	movs	r2, #14
 8016c9a:	4629      	mov	r1, r5
 8016c9c:	304c      	adds	r0, #76	; 0x4c
 8016c9e:	f013 f9e6 	bl	802a06e <memset>
 8016ca2:	2301      	movs	r3, #1
 8016ca4:	4620      	mov	r0, r4
 8016ca6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016caa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016cae:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016cb2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016cb6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016cba:	f7f1 f989 	bl	8007fd0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016cbe:	4620      	mov	r0, r4
 8016cc0:	bd38      	pop	{r3, r4, r5, pc}

08016cc2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016cc2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016cc4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016cc8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016cca:	fab0 f080 	clz	r0, r0
 8016cce:	0940      	lsrs	r0, r0, #5
 8016cd0:	4770      	bx	lr

08016cd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016cd2:	b530      	push	{r4, r5, lr}
 8016cd4:	2500      	movs	r5, #0
 8016cd6:	2401      	movs	r4, #1
 8016cd8:	6843      	ldr	r3, [r0, #4]
 8016cda:	b913      	cbnz	r3, 8016ce2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016cdc:	6803      	ldr	r3, [r0, #0]
 8016cde:	b313      	cbz	r3, 8016d26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016ce0:	6043      	str	r3, [r0, #4]
 8016ce2:	7e03      	ldrb	r3, [r0, #24]
 8016ce4:	b143      	cbz	r3, 8016cf8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016ce6:	6943      	ldr	r3, [r0, #20]
 8016ce8:	b12b      	cbz	r3, 8016cf6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016cea:	881a      	ldrh	r2, [r3, #0]
 8016cec:	b11a      	cbz	r2, 8016cf6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016cee:	1c9a      	adds	r2, r3, #2
 8016cf0:	6142      	str	r2, [r0, #20]
 8016cf2:	8818      	ldrh	r0, [r3, #0]
 8016cf4:	bd30      	pop	{r4, r5, pc}
 8016cf6:	7605      	strb	r5, [r0, #24]
 8016cf8:	6843      	ldr	r3, [r0, #4]
 8016cfa:	8819      	ldrh	r1, [r3, #0]
 8016cfc:	b199      	cbz	r1, 8016d26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016cfe:	1c9a      	adds	r2, r3, #2
 8016d00:	2902      	cmp	r1, #2
 8016d02:	6042      	str	r2, [r0, #4]
 8016d04:	d1f5      	bne.n	8016cf2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016d06:	7c03      	ldrb	r3, [r0, #16]
 8016d08:	2b01      	cmp	r3, #1
 8016d0a:	d8e5      	bhi.n	8016cd8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016d0c:	1c5a      	adds	r2, r3, #1
 8016d0e:	3302      	adds	r3, #2
 8016d10:	7402      	strb	r2, [r0, #16]
 8016d12:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016d16:	6143      	str	r3, [r0, #20]
 8016d18:	2b00      	cmp	r3, #0
 8016d1a:	d0dd      	beq.n	8016cd8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016d1c:	881b      	ldrh	r3, [r3, #0]
 8016d1e:	2b00      	cmp	r3, #0
 8016d20:	d0da      	beq.n	8016cd8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016d22:	7604      	strb	r4, [r0, #24]
 8016d24:	e7d8      	b.n	8016cd8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016d26:	2000      	movs	r0, #0
 8016d28:	e7e4      	b.n	8016cf4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016d2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016d2a:	b430      	push	{r4, r5}
 8016d2c:	6001      	str	r1, [r0, #0]
 8016d2e:	2100      	movs	r1, #0
 8016d30:	6041      	str	r1, [r0, #4]
 8016d32:	6815      	ldr	r5, [r2, #0]
 8016d34:	6085      	str	r5, [r0, #8]
 8016d36:	6852      	ldr	r2, [r2, #4]
 8016d38:	6443      	str	r3, [r0, #68]	; 0x44
 8016d3a:	9b02      	ldr	r3, [sp, #8]
 8016d3c:	60c2      	str	r2, [r0, #12]
 8016d3e:	7401      	strb	r1, [r0, #16]
 8016d40:	6141      	str	r1, [r0, #20]
 8016d42:	7601      	strb	r1, [r0, #24]
 8016d44:	8701      	strh	r1, [r0, #56]	; 0x38
 8016d46:	8401      	strh	r1, [r0, #32]
 8016d48:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8016d4c:	6483      	str	r3, [r0, #72]	; 0x48
 8016d4e:	bc30      	pop	{r4, r5}
 8016d50:	f7f1 b93e 	b.w	8007fd0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016d54 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016d54:	b408      	push	{r3}
 8016d56:	b510      	push	{r4, lr}
 8016d58:	b085      	sub	sp, #20
 8016d5a:	ac07      	add	r4, sp, #28
 8016d5c:	f854 3b04 	ldr.w	r3, [r4], #4
 8016d60:	9300      	str	r3, [sp, #0]
 8016d62:	4613      	mov	r3, r2
 8016d64:	4622      	mov	r2, r4
 8016d66:	9403      	str	r4, [sp, #12]
 8016d68:	f7ff ffdf 	bl	8016d2a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016d6c:	b005      	add	sp, #20
 8016d6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016d72:	b001      	add	sp, #4
 8016d74:	4770      	bx	lr

08016d76 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016d76:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016d78:	4605      	mov	r5, r0
 8016d7a:	4608      	mov	r0, r1
 8016d7c:	b1e9      	cbz	r1, 8016dba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016d7e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016d82:	460b      	mov	r3, r1
 8016d84:	f101 0708 	add.w	r7, r1, #8
 8016d88:	4622      	mov	r2, r4
 8016d8a:	6818      	ldr	r0, [r3, #0]
 8016d8c:	6859      	ldr	r1, [r3, #4]
 8016d8e:	4626      	mov	r6, r4
 8016d90:	c603      	stmia	r6!, {r0, r1}
 8016d92:	3308      	adds	r3, #8
 8016d94:	42bb      	cmp	r3, r7
 8016d96:	4634      	mov	r4, r6
 8016d98:	d1f7      	bne.n	8016d8a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016d9a:	6818      	ldr	r0, [r3, #0]
 8016d9c:	6030      	str	r0, [r6, #0]
 8016d9e:	889b      	ldrh	r3, [r3, #4]
 8016da0:	80b3      	strh	r3, [r6, #4]
 8016da2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016da6:	015b      	lsls	r3, r3, #5
 8016da8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016dac:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016db0:	430b      	orrs	r3, r1
 8016db2:	425b      	negs	r3, r3
 8016db4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016db8:	4610      	mov	r0, r2
 8016dba:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016dbc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016dbc:	b538      	push	{r3, r4, r5, lr}
 8016dbe:	460c      	mov	r4, r1
 8016dc0:	6811      	ldr	r1, [r2, #0]
 8016dc2:	4610      	mov	r0, r2
 8016dc4:	68cd      	ldr	r5, [r1, #12]
 8016dc6:	4619      	mov	r1, r3
 8016dc8:	47a8      	blx	r5
 8016dca:	2800      	cmp	r0, #0
 8016dcc:	bf08      	it	eq
 8016dce:	4620      	moveq	r0, r4
 8016dd0:	bd38      	pop	{r3, r4, r5, pc}
	...

08016dd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016dd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016dd6:	4604      	mov	r4, r0
 8016dd8:	4615      	mov	r5, r2
 8016dda:	4608      	mov	r0, r1
 8016ddc:	b93a      	cbnz	r2, 8016dee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016dde:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016de2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016de6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016dea:	4628      	mov	r0, r5
 8016dec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016dee:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016df2:	8893      	ldrh	r3, [r2, #4]
 8016df4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016df8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016dfc:	79ee      	ldrb	r6, [r5, #7]
 8016dfe:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016e02:	4316      	orrs	r6, r2
 8016e04:	19da      	adds	r2, r3, r7
 8016e06:	b291      	uxth	r1, r2
 8016e08:	291d      	cmp	r1, #29
 8016e0a:	b2b7      	uxth	r7, r6
 8016e0c:	d87a      	bhi.n	8016f04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016e0e:	2201      	movs	r2, #1
 8016e10:	408a      	lsls	r2, r1
 8016e12:	4975      	ldr	r1, [pc, #468]	; (8016fe8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016e14:	420a      	tst	r2, r1
 8016e16:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016e1a:	d12d      	bne.n	8016e78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016e1c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016e20:	d070      	beq.n	8016f04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016e22:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016e26:	462b      	mov	r3, r5
 8016e28:	f105 0e08 	add.w	lr, r5, #8
 8016e2c:	4615      	mov	r5, r2
 8016e2e:	6818      	ldr	r0, [r3, #0]
 8016e30:	6859      	ldr	r1, [r3, #4]
 8016e32:	4694      	mov	ip, r2
 8016e34:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016e38:	3308      	adds	r3, #8
 8016e3a:	4573      	cmp	r3, lr
 8016e3c:	4662      	mov	r2, ip
 8016e3e:	d1f6      	bne.n	8016e2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016e40:	6818      	ldr	r0, [r3, #0]
 8016e42:	f8cc 0000 	str.w	r0, [ip]
 8016e46:	889b      	ldrh	r3, [r3, #4]
 8016e48:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016e4c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016e50:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016e54:	b2b3      	uxth	r3, r6
 8016e56:	1aca      	subs	r2, r1, r3
 8016e58:	b292      	uxth	r2, r2
 8016e5a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016e5e:	10d2      	asrs	r2, r2, #3
 8016e60:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016e64:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016e68:	4302      	orrs	r2, r0
 8016e6a:	1bcf      	subs	r7, r1, r7
 8016e6c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016e70:	1afb      	subs	r3, r7, r3
 8016e72:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016e76:	e7b8      	b.n	8016dea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016e78:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016e7a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016e7e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016e80:	f640 6333 	movw	r3, #3635	; 0xe33
 8016e84:	4299      	cmp	r1, r3
 8016e86:	d110      	bne.n	8016eaa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016e88:	6803      	ldr	r3, [r0, #0]
 8016e8a:	68db      	ldr	r3, [r3, #12]
 8016e8c:	4798      	blx	r3
 8016e8e:	7b41      	ldrb	r1, [r0, #13]
 8016e90:	00cb      	lsls	r3, r1, #3
 8016e92:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e96:	7a03      	ldrb	r3, [r0, #8]
 8016e98:	0648      	lsls	r0, r1, #25
 8016e9a:	ea43 0302 	orr.w	r3, r3, r2
 8016e9e:	bf44      	itt	mi
 8016ea0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016ea4:	b21b      	sxthmi	r3, r3
 8016ea6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016eaa:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016eae:	443b      	add	r3, r7
 8016eb0:	4433      	add	r3, r6
 8016eb2:	b29b      	uxth	r3, r3
 8016eb4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016eb8:	462a      	mov	r2, r5
 8016eba:	f105 0c08 	add.w	ip, r5, #8
 8016ebe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016ec2:	4635      	mov	r5, r6
 8016ec4:	6810      	ldr	r0, [r2, #0]
 8016ec6:	6851      	ldr	r1, [r2, #4]
 8016ec8:	4637      	mov	r7, r6
 8016eca:	c703      	stmia	r7!, {r0, r1}
 8016ecc:	3208      	adds	r2, #8
 8016ece:	4562      	cmp	r2, ip
 8016ed0:	463e      	mov	r6, r7
 8016ed2:	d1f7      	bne.n	8016ec4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016ed4:	6810      	ldr	r0, [r2, #0]
 8016ed6:	6038      	str	r0, [r7, #0]
 8016ed8:	8892      	ldrh	r2, [r2, #4]
 8016eda:	80ba      	strh	r2, [r7, #4]
 8016edc:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016ee0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016ee4:	10db      	asrs	r3, r3, #3
 8016ee6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016eea:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016eee:	4313      	orrs	r3, r2
 8016ef0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016ef4:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016ef8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016efc:	1a9b      	subs	r3, r3, r2
 8016efe:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016f02:	e772      	b.n	8016dea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016f04:	f023 0204 	bic.w	r2, r3, #4
 8016f08:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016f0c:	428a      	cmp	r2, r1
 8016f0e:	d003      	beq.n	8016f18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016f10:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016f14:	4293      	cmp	r3, r2
 8016f16:	d120      	bne.n	8016f5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016f18:	3b01      	subs	r3, #1
 8016f1a:	4602      	mov	r2, r0
 8016f1c:	b29b      	uxth	r3, r3
 8016f1e:	4629      	mov	r1, r5
 8016f20:	4620      	mov	r0, r4
 8016f22:	f7ff ff4b 	bl	8016dbc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016f26:	7b41      	ldrb	r1, [r0, #13]
 8016f28:	00cb      	lsls	r3, r1, #3
 8016f2a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016f2e:	7a03      	ldrb	r3, [r0, #8]
 8016f30:	0649      	lsls	r1, r1, #25
 8016f32:	ea43 0302 	orr.w	r3, r3, r2
 8016f36:	bf44      	itt	mi
 8016f38:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f3c:	b21b      	sxthmi	r3, r3
 8016f3e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016f42:	7b6b      	ldrb	r3, [r5, #13]
 8016f44:	7aaa      	ldrb	r2, [r5, #10]
 8016f46:	005b      	lsls	r3, r3, #1
 8016f48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016f4c:	4313      	orrs	r3, r2
 8016f4e:	115a      	asrs	r2, r3, #5
 8016f50:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016f54:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016f58:	e036      	b.n	8016fc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016f5a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016f5e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016f62:	7a2a      	ldrb	r2, [r5, #8]
 8016f64:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016f68:	ea42 0201 	orr.w	r2, r2, r1
 8016f6c:	bf1c      	itt	ne
 8016f6e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016f72:	b212      	sxthne	r2, r2
 8016f74:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016f78:	f640 6109 	movw	r1, #3593	; 0xe09
 8016f7c:	f023 0210 	bic.w	r2, r3, #16
 8016f80:	428a      	cmp	r2, r1
 8016f82:	d003      	beq.n	8016f8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016f84:	f640 6213 	movw	r2, #3603	; 0xe13
 8016f88:	4293      	cmp	r3, r2
 8016f8a:	d12a      	bne.n	8016fe2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016f8c:	7b6e      	ldrb	r6, [r5, #13]
 8016f8e:	0076      	lsls	r6, r6, #1
 8016f90:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016f94:	7aae      	ldrb	r6, [r5, #10]
 8016f96:	4316      	orrs	r6, r2
 8016f98:	f640 6213 	movw	r2, #3603	; 0xe13
 8016f9c:	4293      	cmp	r3, r2
 8016f9e:	bf18      	it	ne
 8016fa0:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016fa4:	4602      	mov	r2, r0
 8016fa6:	bf14      	ite	ne
 8016fa8:	b29b      	uxthne	r3, r3
 8016faa:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016fae:	4629      	mov	r1, r5
 8016fb0:	4620      	mov	r0, r4
 8016fb2:	f7ff ff03 	bl	8016dbc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016fb6:	7b43      	ldrb	r3, [r0, #13]
 8016fb8:	7a82      	ldrb	r2, [r0, #10]
 8016fba:	005b      	lsls	r3, r3, #1
 8016fbc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016fc0:	4313      	orrs	r3, r2
 8016fc2:	1af6      	subs	r6, r6, r3
 8016fc4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016fc8:	7b69      	ldrb	r1, [r5, #13]
 8016fca:	00cb      	lsls	r3, r1, #3
 8016fcc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016fd0:	7a2b      	ldrb	r3, [r5, #8]
 8016fd2:	4313      	orrs	r3, r2
 8016fd4:	064a      	lsls	r2, r1, #25
 8016fd6:	bf44      	itt	mi
 8016fd8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016fdc:	b21b      	sxthmi	r3, r3
 8016fde:	1bdb      	subs	r3, r3, r7
 8016fe0:	e747      	b.n	8016e72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016fe2:	2300      	movs	r3, #0
 8016fe4:	e7b6      	b.n	8016f54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016fe6:	bf00      	nop
 8016fe8:	3fc00079 	.word	0x3fc00079

08016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016fec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016ff0:	4604      	mov	r4, r0
 8016ff2:	b942      	cbnz	r2, 8017006 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016ff4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016ff8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016ffc:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017000:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017004:	e047      	b.n	8017096 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017006:	7b51      	ldrb	r1, [r2, #13]
 8017008:	8893      	ldrh	r3, [r2, #4]
 801700a:	010d      	lsls	r5, r1, #4
 801700c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017010:	79d5      	ldrb	r5, [r2, #7]
 8017012:	4305      	orrs	r5, r0
 8017014:	2d04      	cmp	r5, #4
 8017016:	bfcc      	ite	gt
 8017018:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801701c:	f04f 0e01 	movle.w	lr, #1
 8017020:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017024:	f200 80ab 	bhi.w	801717e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017028:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801702c:	4283      	cmp	r3, r0
 801702e:	d216      	bcs.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017030:	f240 605b 	movw	r0, #1627	; 0x65b
 8017034:	4283      	cmp	r3, r0
 8017036:	d859      	bhi.n	80170ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017038:	f240 6057 	movw	r0, #1623	; 0x657
 801703c:	4283      	cmp	r3, r0
 801703e:	d20e      	bcs.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017040:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017044:	d24a      	bcs.n	80170dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017046:	f240 604e 	movw	r0, #1614	; 0x64e
 801704a:	4283      	cmp	r3, r0
 801704c:	d207      	bcs.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801704e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017052:	4283      	cmp	r3, r0
 8017054:	d02a      	beq.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017056:	d821      	bhi.n	801709c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017058:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801705c:	d35b      	bcc.n	8017116 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801705e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017062:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017066:	f040 80d0 	bne.w	801720a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801706a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801706e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017072:	f040 80ca 	bne.w	801720a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017076:	00cb      	lsls	r3, r1, #3
 8017078:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801707c:	7a13      	ldrb	r3, [r2, #8]
 801707e:	0649      	lsls	r1, r1, #25
 8017080:	ea43 0300 	orr.w	r3, r3, r0
 8017084:	bf44      	itt	mi
 8017086:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801708a:	b21b      	sxthmi	r3, r3
 801708c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017090:	1b5d      	subs	r5, r3, r5
 8017092:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017096:	4610      	mov	r0, r2
 8017098:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801709c:	f240 604b 	movw	r0, #1611	; 0x64b
 80170a0:	4283      	cmp	r3, r0
 80170a2:	d338      	bcc.n	8017116 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80170a4:	f240 604c 	movw	r0, #1612	; 0x64c
 80170a8:	4283      	cmp	r3, r0
 80170aa:	d9d8      	bls.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170ac:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80170b0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80170b4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80170b8:	f040 80f2 	bne.w	80172a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80170bc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80170c0:	f040 80ee 	bne.w	80172a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80170c4:	00cb      	lsls	r3, r1, #3
 80170c6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80170ca:	7a13      	ldrb	r3, [r2, #8]
 80170cc:	064e      	lsls	r6, r1, #25
 80170ce:	ea43 0300 	orr.w	r3, r3, r0
 80170d2:	bf44      	itt	mi
 80170d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80170d8:	b21b      	sxthmi	r3, r3
 80170da:	e7d9      	b.n	8017090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80170dc:	f240 6054 	movw	r0, #1620	; 0x654
 80170e0:	4283      	cmp	r3, r0
 80170e2:	d8e3      	bhi.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170e4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80170e8:	d9e0      	bls.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170ea:	e7b8      	b.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170ec:	f240 6074 	movw	r0, #1652	; 0x674
 80170f0:	4283      	cmp	r3, r0
 80170f2:	d0b4      	beq.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170f4:	d82d      	bhi.n	8017152 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80170f6:	f240 605e 	movw	r0, #1630	; 0x65e
 80170fa:	4283      	cmp	r3, r0
 80170fc:	d804      	bhi.n	8017108 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80170fe:	f240 605d 	movw	r0, #1629	; 0x65d
 8017102:	4283      	cmp	r3, r0
 8017104:	d3d2      	bcc.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017106:	e7aa      	b.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017108:	f240 605f 	movw	r0, #1631	; 0x65f
 801710c:	4283      	cmp	r3, r0
 801710e:	d0cd      	beq.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017110:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017114:	d0a3      	beq.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017116:	00cb      	lsls	r3, r1, #3
 8017118:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801711c:	7a13      	ldrb	r3, [r2, #8]
 801711e:	0649      	lsls	r1, r1, #25
 8017120:	ea43 0300 	orr.w	r3, r3, r0
 8017124:	bf44      	itt	mi
 8017126:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801712a:	b21b      	sxthmi	r3, r3
 801712c:	1b5d      	subs	r5, r3, r5
 801712e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017132:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017136:	7b53      	ldrb	r3, [r2, #13]
 8017138:	015b      	lsls	r3, r3, #5
 801713a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801713e:	7993      	ldrb	r3, [r2, #6]
 8017140:	430b      	orrs	r3, r1
 8017142:	005b      	lsls	r3, r3, #1
 8017144:	2105      	movs	r1, #5
 8017146:	fb93 f3f1 	sdiv	r3, r3, r1
 801714a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801714e:	440b      	add	r3, r1
 8017150:	e756      	b.n	8017000 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017152:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017156:	4283      	cmp	r3, r0
 8017158:	d809      	bhi.n	801716e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801715a:	f240 60df 	movw	r0, #1759	; 0x6df
 801715e:	4283      	cmp	r3, r0
 8017160:	f4bf af7d 	bcs.w	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017164:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017168:	2b05      	cmp	r3, #5
 801716a:	d8d4      	bhi.n	8017116 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801716c:	e777      	b.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801716e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017172:	4283      	cmp	r3, r0
 8017174:	d09a      	beq.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017176:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801717a:	4283      	cmp	r3, r0
 801717c:	e7ca      	b.n	8017114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801717e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017182:	d22b      	bcs.n	80171dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017184:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017188:	4283      	cmp	r3, r0
 801718a:	d28f      	bcs.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801718c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017190:	4283      	cmp	r3, r0
 8017192:	d816      	bhi.n	80171c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017194:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017198:	4283      	cmp	r3, r0
 801719a:	f4bf af60 	bcs.w	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801719e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80171a2:	4283      	cmp	r3, r0
 80171a4:	d80a      	bhi.n	80171bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80171a6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80171aa:	4283      	cmp	r3, r0
 80171ac:	f4bf af57 	bcs.w	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80171b0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80171b4:	4283      	cmp	r3, r0
 80171b6:	f43f af79 	beq.w	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80171ba:	e7ac      	b.n	8017116 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80171bc:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80171c0:	e7f8      	b.n	80171b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80171c2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80171c6:	4283      	cmp	r3, r0
 80171c8:	d802      	bhi.n	80171d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80171ca:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80171ce:	e798      	b.n	8017102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80171d0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80171d4:	4283      	cmp	r3, r0
 80171d6:	f47f af42 	bne.w	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80171da:	e767      	b.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80171dc:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80171e0:	4283      	cmp	r3, r0
 80171e2:	f43f af63 	beq.w	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80171e6:	d802      	bhi.n	80171ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80171e8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80171ec:	e7f2      	b.n	80171d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80171ee:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80171f2:	4283      	cmp	r3, r0
 80171f4:	d805      	bhi.n	8017202 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80171f6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80171fa:	4283      	cmp	r3, r0
 80171fc:	f4ff af2f 	bcc.w	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017200:	e754      	b.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017202:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017206:	4283      	cmp	r3, r0
 8017208:	e7af      	b.n	801716a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801720a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801720e:	4617      	mov	r7, r2
 8017210:	f102 0808 	add.w	r8, r2, #8
 8017214:	4666      	mov	r6, ip
 8017216:	6838      	ldr	r0, [r7, #0]
 8017218:	6879      	ldr	r1, [r7, #4]
 801721a:	46e6      	mov	lr, ip
 801721c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017220:	3708      	adds	r7, #8
 8017222:	4547      	cmp	r7, r8
 8017224:	46f4      	mov	ip, lr
 8017226:	d1f6      	bne.n	8017216 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017228:	6838      	ldr	r0, [r7, #0]
 801722a:	f8ce 0000 	str.w	r0, [lr]
 801722e:	88b9      	ldrh	r1, [r7, #4]
 8017230:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017234:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017238:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801723c:	d009      	beq.n	8017252 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801723e:	7b51      	ldrb	r1, [r2, #13]
 8017240:	7992      	ldrb	r2, [r2, #6]
 8017242:	0149      	lsls	r1, r1, #5
 8017244:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017248:	4311      	orrs	r1, r2
 801724a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801724e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017252:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017256:	b2ad      	uxth	r5, r5
 8017258:	d00d      	beq.n	8017276 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801725a:	442b      	add	r3, r5
 801725c:	b29b      	uxth	r3, r3
 801725e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017262:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017266:	10db      	asrs	r3, r3, #3
 8017268:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801726c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017270:	4313      	orrs	r3, r2
 8017272:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017276:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801727a:	00cb      	lsls	r3, r1, #3
 801727c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017280:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017284:	064f      	lsls	r7, r1, #25
 8017286:	ea43 0302 	orr.w	r3, r3, r2
 801728a:	bf44      	itt	mi
 801728c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017290:	b21b      	sxthmi	r3, r3
 8017292:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017296:	1b5b      	subs	r3, r3, r5
 8017298:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801729c:	4632      	mov	r2, r6
 801729e:	e6fa      	b.n	8017096 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80172a0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80172a4:	4617      	mov	r7, r2
 80172a6:	f102 0908 	add.w	r9, r2, #8
 80172aa:	4666      	mov	r6, ip
 80172ac:	6838      	ldr	r0, [r7, #0]
 80172ae:	6879      	ldr	r1, [r7, #4]
 80172b0:	46e0      	mov	r8, ip
 80172b2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80172b6:	3708      	adds	r7, #8
 80172b8:	454f      	cmp	r7, r9
 80172ba:	46c4      	mov	ip, r8
 80172bc:	d1f6      	bne.n	80172ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80172be:	6838      	ldr	r0, [r7, #0]
 80172c0:	f8c8 0000 	str.w	r0, [r8]
 80172c4:	88b9      	ldrh	r1, [r7, #4]
 80172c6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80172ca:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80172ce:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80172d2:	d009      	beq.n	80172e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80172d4:	7b51      	ldrb	r1, [r2, #13]
 80172d6:	7992      	ldrb	r2, [r2, #6]
 80172d8:	0149      	lsls	r1, r1, #5
 80172da:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80172de:	4311      	orrs	r1, r2
 80172e0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80172e4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80172e8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80172ec:	d00e      	beq.n	801730c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80172ee:	eba3 030e 	sub.w	r3, r3, lr
 80172f2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80172f6:	b29b      	uxth	r3, r3
 80172f8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80172fc:	10db      	asrs	r3, r3, #3
 80172fe:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017302:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017306:	4313      	orrs	r3, r2
 8017308:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801730c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017310:	00cb      	lsls	r3, r1, #3
 8017312:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017316:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801731a:	0648      	lsls	r0, r1, #25
 801731c:	ea43 0302 	orr.w	r3, r3, r2
 8017320:	bf44      	itt	mi
 8017322:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017326:	b21b      	sxthmi	r3, r3
 8017328:	1b5d      	subs	r5, r3, r5
 801732a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801732e:	e7b5      	b.n	801729c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017330 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017334:	461e      	mov	r6, r3
 8017336:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017338:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801733c:	4604      	mov	r4, r0
 801733e:	4617      	mov	r7, r2
 8017340:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017344:	f7f0 fe02 	bl	8007f4c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017348:	4605      	mov	r5, r0
 801734a:	b918      	cbnz	r0, 8017354 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801734c:	6030      	str	r0, [r6, #0]
 801734e:	4628      	mov	r0, r5
 8017350:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017354:	683b      	ldr	r3, [r7, #0]
 8017356:	4601      	mov	r1, r0
 8017358:	68db      	ldr	r3, [r3, #12]
 801735a:	4638      	mov	r0, r7
 801735c:	4798      	blx	r3
 801735e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017362:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017366:	4602      	mov	r2, r0
 8017368:	6030      	str	r0, [r6, #0]
 801736a:	d213      	bcs.n	8017394 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801736c:	4643      	mov	r3, r8
 801736e:	4639      	mov	r1, r7
 8017370:	4620      	mov	r0, r4
 8017372:	f7ff fe3b 	bl	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017376:	6030      	str	r0, [r6, #0]
 8017378:	6833      	ldr	r3, [r6, #0]
 801737a:	b143      	cbz	r3, 801738e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801737c:	7b5a      	ldrb	r2, [r3, #13]
 801737e:	7a9b      	ldrb	r3, [r3, #10]
 8017380:	0052      	lsls	r2, r2, #1
 8017382:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017386:	4313      	orrs	r3, r2
 8017388:	bf0c      	ite	eq
 801738a:	2301      	moveq	r3, #1
 801738c:	2300      	movne	r3, #0
 801738e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017392:	e7dc      	b.n	801734e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8017394:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017398:	b29b      	uxth	r3, r3
 801739a:	2b7f      	cmp	r3, #127	; 0x7f
 801739c:	d804      	bhi.n	80173a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801739e:	4639      	mov	r1, r7
 80173a0:	4620      	mov	r0, r4
 80173a2:	f7ff fd17 	bl	8016dd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80173a6:	e7e6      	b.n	8017376 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80173a8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80173ac:	2b00      	cmp	r3, #0
 80173ae:	d0e3      	beq.n	8017378 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80173b0:	f640 1302 	movw	r3, #2306	; 0x902
 80173b4:	429d      	cmp	r5, r3
 80173b6:	d1df      	bne.n	8017378 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80173b8:	4601      	mov	r1, r0
 80173ba:	4620      	mov	r0, r4
 80173bc:	f7ff fcdb 	bl	8016d76 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80173c0:	e7d9      	b.n	8017376 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080173c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80173c2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80173c6:	461e      	mov	r6, r3
 80173c8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80173ca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80173ce:	4604      	mov	r4, r0
 80173d0:	4617      	mov	r7, r2
 80173d2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80173d6:	f7f0 fdb9 	bl	8007f4c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80173da:	4605      	mov	r5, r0
 80173dc:	b918      	cbnz	r0, 80173e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80173de:	6030      	str	r0, [r6, #0]
 80173e0:	4628      	mov	r0, r5
 80173e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80173e6:	683b      	ldr	r3, [r7, #0]
 80173e8:	4601      	mov	r1, r0
 80173ea:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80173ee:	4638      	mov	r0, r7
 80173f0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80173f4:	47c8      	blx	r9
 80173f6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80173fa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80173fe:	4602      	mov	r2, r0
 8017400:	6030      	str	r0, [r6, #0]
 8017402:	d213      	bcs.n	801742c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8017404:	4643      	mov	r3, r8
 8017406:	4639      	mov	r1, r7
 8017408:	4620      	mov	r0, r4
 801740a:	f7ff fdef 	bl	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801740e:	6030      	str	r0, [r6, #0]
 8017410:	6833      	ldr	r3, [r6, #0]
 8017412:	b143      	cbz	r3, 8017426 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017414:	7b5a      	ldrb	r2, [r3, #13]
 8017416:	7a9b      	ldrb	r3, [r3, #10]
 8017418:	0052      	lsls	r2, r2, #1
 801741a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801741e:	4313      	orrs	r3, r2
 8017420:	bf0c      	ite	eq
 8017422:	2301      	moveq	r3, #1
 8017424:	2300      	movne	r3, #0
 8017426:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801742a:	e7d9      	b.n	80173e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801742c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017430:	b29b      	uxth	r3, r3
 8017432:	2b7f      	cmp	r3, #127	; 0x7f
 8017434:	d804      	bhi.n	8017440 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017436:	4639      	mov	r1, r7
 8017438:	4620      	mov	r0, r4
 801743a:	f7ff fccb 	bl	8016dd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801743e:	e7e6      	b.n	801740e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017440:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017444:	2b00      	cmp	r3, #0
 8017446:	d0e3      	beq.n	8017410 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017448:	f640 1302 	movw	r3, #2306	; 0x902
 801744c:	429d      	cmp	r5, r3
 801744e:	d1df      	bne.n	8017410 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017450:	4601      	mov	r1, r0
 8017452:	4620      	mov	r0, r4
 8017454:	f7ff fc8f 	bl	8016d76 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017458:	e7d9      	b.n	801740e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801745a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801745a:	b510      	push	{r4, lr}
 801745c:	4604      	mov	r4, r0
 801745e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017462:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017464:	b1f1      	cbz	r1, 80174a4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017466:	2b0a      	cmp	r3, #10
 8017468:	d02f      	beq.n	80174ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801746a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801746c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017470:	3901      	subs	r1, #1
 8017472:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8017474:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8017478:	1c51      	adds	r1, r2, #1
 801747a:	b289      	uxth	r1, r1
 801747c:	2901      	cmp	r1, #1
 801747e:	bf84      	itt	hi
 8017480:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8017484:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8017486:	f103 0201 	add.w	r2, r3, #1
 801748a:	8722      	strh	r2, [r4, #56]	; 0x38
 801748c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801748e:	bf98      	it	ls
 8017490:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8017492:	4413      	add	r3, r2
 8017494:	b29b      	uxth	r3, r3
 8017496:	2b09      	cmp	r3, #9
 8017498:	bf88      	it	hi
 801749a:	3b0a      	subhi	r3, #10
 801749c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80174a0:	8458      	strh	r0, [r3, #34]	; 0x22
 80174a2:	e7dc      	b.n	801745e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80174a4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80174a6:	2b0a      	cmp	r3, #10
 80174a8:	d00f      	beq.n	80174ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80174aa:	4620      	mov	r0, r4
 80174ac:	f7ff fc11 	bl	8016cd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80174b0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80174b2:	1c5a      	adds	r2, r3, #1
 80174b4:	8722      	strh	r2, [r4, #56]	; 0x38
 80174b6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80174b8:	4413      	add	r3, r2
 80174ba:	b29b      	uxth	r3, r3
 80174bc:	2b09      	cmp	r3, #9
 80174be:	bf88      	it	hi
 80174c0:	3b0a      	subhi	r3, #10
 80174c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80174c6:	8458      	strh	r0, [r3, #34]	; 0x22
 80174c8:	e7ec      	b.n	80174a4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80174ca:	bd10      	pop	{r4, pc}

080174cc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80174cc:	b538      	push	{r3, r4, r5, lr}
 80174ce:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80174d0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80174d4:	4604      	mov	r4, r0
 80174d6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80174d8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80174da:	3a01      	subs	r2, #1
 80174dc:	8702      	strh	r2, [r0, #56]	; 0x38
 80174de:	1c5a      	adds	r2, r3, #1
 80174e0:	b292      	uxth	r2, r2
 80174e2:	2a09      	cmp	r2, #9
 80174e4:	bf86      	itte	hi
 80174e6:	3b09      	subhi	r3, #9
 80174e8:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80174ea:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80174ec:	f7ff ffb5 	bl	801745a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80174f0:	8c23      	ldrh	r3, [r4, #32]
 80174f2:	2b01      	cmp	r3, #1
 80174f4:	bf9c      	itt	ls
 80174f6:	3301      	addls	r3, #1
 80174f8:	8423      	strhls	r3, [r4, #32]
 80174fa:	8be3      	ldrh	r3, [r4, #30]
 80174fc:	b90b      	cbnz	r3, 8017502 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80174fe:	2302      	movs	r3, #2
 8017500:	83e3      	strh	r3, [r4, #30]
 8017502:	8be3      	ldrh	r3, [r4, #30]
 8017504:	3b01      	subs	r3, #1
 8017506:	b29b      	uxth	r3, r3
 8017508:	83e3      	strh	r3, [r4, #30]
 801750a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801750e:	4628      	mov	r0, r5
 8017510:	8365      	strh	r5, [r4, #26]
 8017512:	bd38      	pop	{r3, r4, r5, pc}

08017514 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017514:	428a      	cmp	r2, r1
 8017516:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801751a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801751c:	d931      	bls.n	8017582 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801751e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017520:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017524:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017528:	19ee      	adds	r6, r5, r7
 801752a:	1a54      	subs	r4, r2, r1
 801752c:	3e01      	subs	r6, #1
 801752e:	fa1f fe84 	uxth.w	lr, r4
 8017532:	b2b4      	uxth	r4, r6
 8017534:	eba4 090e 	sub.w	r9, r4, lr
 8017538:	fa1f f989 	uxth.w	r9, r9
 801753c:	2c09      	cmp	r4, #9
 801753e:	4626      	mov	r6, r4
 8017540:	bf88      	it	hi
 8017542:	f1a4 060a 	subhi.w	r6, r4, #10
 8017546:	f1bc 0f00 	cmp.w	ip, #0
 801754a:	bf08      	it	eq
 801754c:	f04f 0c02 	moveq.w	ip, #2
 8017550:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017554:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017558:	fa1f fc8c 	uxth.w	ip, ip
 801755c:	3c01      	subs	r4, #1
 801755e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8017562:	b2a4      	uxth	r4, r4
 8017564:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017568:	454c      	cmp	r4, r9
 801756a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801756e:	d1e5      	bne.n	801753c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017570:	eba5 050e 	sub.w	r5, r5, lr
 8017574:	eb0e 0408 	add.w	r4, lr, r8
 8017578:	8705      	strh	r5, [r0, #56]	; 0x38
 801757a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801757e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8017582:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8017584:	1a64      	subs	r4, r4, r1
 8017586:	4439      	add	r1, r7
 8017588:	b289      	uxth	r1, r1
 801758a:	2909      	cmp	r1, #9
 801758c:	bf88      	it	hi
 801758e:	390a      	subhi	r1, #10
 8017590:	8704      	strh	r4, [r0, #56]	; 0x38
 8017592:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017594:	250a      	movs	r5, #10
 8017596:	b18a      	cbz	r2, 80175bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8017598:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801759a:	3a01      	subs	r2, #1
 801759c:	b292      	uxth	r2, r2
 801759e:	3101      	adds	r1, #1
 80175a0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80175a4:	8701      	strh	r1, [r0, #56]	; 0x38
 80175a6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80175a8:	b901      	cbnz	r1, 80175ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80175aa:	86c5      	strh	r5, [r0, #54]	; 0x36
 80175ac:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80175ae:	3901      	subs	r1, #1
 80175b0:	b289      	uxth	r1, r1
 80175b2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80175b4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80175b8:	844c      	strh	r4, [r1, #34]	; 0x22
 80175ba:	e7ec      	b.n	8017596 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80175bc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80175c0:	f7ff bf4b 	b.w	801745a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080175c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80175c4:	b570      	push	{r4, r5, r6, lr}
 80175c6:	2500      	movs	r5, #0
 80175c8:	4295      	cmp	r5, r2
 80175ca:	d011      	beq.n	80175f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80175cc:	8bc4      	ldrh	r4, [r0, #30]
 80175ce:	f831 6b02 	ldrh.w	r6, [r1], #2
 80175d2:	4414      	add	r4, r2
 80175d4:	3c01      	subs	r4, #1
 80175d6:	1b64      	subs	r4, r4, r5
 80175d8:	b2a4      	uxth	r4, r4
 80175da:	2c01      	cmp	r4, #1
 80175dc:	bf88      	it	hi
 80175de:	3c02      	subhi	r4, #2
 80175e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80175e4:	8b64      	ldrh	r4, [r4, #26]
 80175e6:	42b4      	cmp	r4, r6
 80175e8:	d117      	bne.n	801761a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80175ea:	3501      	adds	r5, #1
 80175ec:	b2ad      	uxth	r5, r5
 80175ee:	e7eb      	b.n	80175c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80175f0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80175f4:	2400      	movs	r4, #0
 80175f6:	4413      	add	r3, r2
 80175f8:	b2a2      	uxth	r2, r4
 80175fa:	429a      	cmp	r2, r3
 80175fc:	da0f      	bge.n	801761e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80175fe:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017600:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017604:	4432      	add	r2, r6
 8017606:	b292      	uxth	r2, r2
 8017608:	2a09      	cmp	r2, #9
 801760a:	bf88      	it	hi
 801760c:	3a0a      	subhi	r2, #10
 801760e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017612:	3401      	adds	r4, #1
 8017614:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017616:	42aa      	cmp	r2, r5
 8017618:	d0ee      	beq.n	80175f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801761a:	2000      	movs	r0, #0
 801761c:	bd70      	pop	{r4, r5, r6, pc}
 801761e:	2001      	movs	r0, #1
 8017620:	e7fc      	b.n	801761c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017622 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017622:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017626:	4605      	mov	r5, r0
 8017628:	4616      	mov	r6, r2
 801762a:	1c8c      	adds	r4, r1, #2
 801762c:	8809      	ldrh	r1, [r1, #0]
 801762e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017632:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017636:	42b3      	cmp	r3, r6
 8017638:	d124      	bne.n	8017684 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801763a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801763e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017642:	f001 070f 	and.w	r7, r1, #15
 8017646:	f8cd 8000 	str.w	r8, [sp]
 801764a:	464b      	mov	r3, r9
 801764c:	4652      	mov	r2, sl
 801764e:	4621      	mov	r1, r4
 8017650:	4628      	mov	r0, r5
 8017652:	f7ff ffb7 	bl	80175c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017656:	4683      	mov	fp, r0
 8017658:	b168      	cbz	r0, 8017676 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801765a:	eb0a 0109 	add.w	r1, sl, r9
 801765e:	4441      	add	r1, r8
 8017660:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017664:	463a      	mov	r2, r7
 8017666:	4649      	mov	r1, r9
 8017668:	4628      	mov	r0, r5
 801766a:	f7ff ff53 	bl	8017514 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801766e:	4658      	mov	r0, fp
 8017670:	b003      	add	sp, #12
 8017672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017676:	eb07 010a 	add.w	r1, r7, sl
 801767a:	4449      	add	r1, r9
 801767c:	4441      	add	r1, r8
 801767e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8017682:	e7d2      	b.n	801762a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8017684:	f04f 0b00 	mov.w	fp, #0
 8017688:	e7f1      	b.n	801766e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801768a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801768a:	b570      	push	{r4, r5, r6, lr}
 801768c:	8810      	ldrh	r0, [r2, #0]
 801768e:	4298      	cmp	r0, r3
 8017690:	d817      	bhi.n	80176c2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017692:	1e48      	subs	r0, r1, #1
 8017694:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017698:	4298      	cmp	r0, r3
 801769a:	d312      	bcc.n	80176c2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801769c:	2400      	movs	r4, #0
 801769e:	428c      	cmp	r4, r1
 80176a0:	d20f      	bcs.n	80176c2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80176a2:	1860      	adds	r0, r4, r1
 80176a4:	1040      	asrs	r0, r0, #1
 80176a6:	0085      	lsls	r5, r0, #2
 80176a8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80176ac:	42b3      	cmp	r3, r6
 80176ae:	d902      	bls.n	80176b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80176b0:	3001      	adds	r0, #1
 80176b2:	b284      	uxth	r4, r0
 80176b4:	e7f3      	b.n	801769e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80176b6:	d201      	bcs.n	80176bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80176b8:	b281      	uxth	r1, r0
 80176ba:	e7f0      	b.n	801769e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80176bc:	442a      	add	r2, r5
 80176be:	8850      	ldrh	r0, [r2, #2]
 80176c0:	bd70      	pop	{r4, r5, r6, pc}
 80176c2:	2000      	movs	r0, #0
 80176c4:	e7fc      	b.n	80176c0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080176c6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80176c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80176ca:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80176cc:	886f      	ldrh	r7, [r5, #2]
 80176ce:	4604      	mov	r4, r0
 80176d0:	087f      	lsrs	r7, r7, #1
 80176d2:	260b      	movs	r6, #11
 80176d4:	3e01      	subs	r6, #1
 80176d6:	d013      	beq.n	8017700 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80176d8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80176da:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80176de:	462a      	mov	r2, r5
 80176e0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80176e4:	4639      	mov	r1, r7
 80176e6:	4643      	mov	r3, r8
 80176e8:	4620      	mov	r0, r4
 80176ea:	f7ff ffce 	bl	801768a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80176ee:	b138      	cbz	r0, 8017700 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80176f0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80176f4:	4642      	mov	r2, r8
 80176f6:	4620      	mov	r0, r4
 80176f8:	f7ff ff93 	bl	8017622 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80176fc:	2800      	cmp	r0, #0
 80176fe:	d1e9      	bne.n	80176d4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017700:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017704 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017704:	b570      	push	{r4, r5, r6, lr}
 8017706:	694a      	ldr	r2, [r1, #20]
 8017708:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801770a:	684b      	ldr	r3, [r1, #4]
 801770c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801770e:	1b54      	subs	r4, r2, r5
 8017710:	f000 8106 	beq.w	8017920 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017714:	1b9b      	subs	r3, r3, r6
 8017716:	d003      	beq.n	8017720 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017718:	4363      	muls	r3, r4
 801771a:	2210      	movs	r2, #16
 801771c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017720:	680c      	ldr	r4, [r1, #0]
 8017722:	698a      	ldr	r2, [r1, #24]
 8017724:	1b65      	subs	r5, r4, r5
 8017726:	f000 80fd 	beq.w	8017924 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801772a:	1b92      	subs	r2, r2, r6
 801772c:	d003      	beq.n	8017736 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801772e:	436a      	muls	r2, r5
 8017730:	2410      	movs	r4, #16
 8017732:	fb92 f2f4 	sdiv	r2, r2, r4
 8017736:	1a9b      	subs	r3, r3, r2
 8017738:	ee07 3a90 	vmov	s15, r3
 801773c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017960 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017740:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017744:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017748:	ee67 7a84 	vmul.f32	s15, s15, s8
 801774c:	460a      	mov	r2, r1
 801774e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017752:	4603      	mov	r3, r0
 8017754:	f100 040c 	add.w	r4, r0, #12
 8017758:	eeb1 6a43 	vneg.f32	s12, s6
 801775c:	edd2 7a02 	vldr	s15, [r2, #8]
 8017760:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017764:	3214      	adds	r2, #20
 8017766:	ece3 6a01 	vstmia	r3!, {s13}
 801776a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801776e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017772:	429c      	cmp	r4, r3
 8017774:	edc3 7a02 	vstr	s15, [r3, #8]
 8017778:	ed52 7a01 	vldr	s15, [r2, #-4]
 801777c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017780:	edc3 7a05 	vstr	s15, [r3, #20]
 8017784:	d1ea      	bne.n	801775c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017786:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017788:	698b      	ldr	r3, [r1, #24]
 801778a:	edd0 4a02 	vldr	s9, [r0, #8]
 801778e:	edd0 3a00 	vldr	s7, [r0]
 8017792:	edd0 6a01 	vldr	s13, [r0, #4]
 8017796:	ed90 5a05 	vldr	s10, [r0, #20]
 801779a:	ed90 2a03 	vldr	s4, [r0, #12]
 801779e:	edd0 5a04 	vldr	s11, [r0, #16]
 80177a2:	ed90 1a07 	vldr	s2, [r0, #28]
 80177a6:	edd0 2a06 	vldr	s5, [r0, #24]
 80177aa:	1a9b      	subs	r3, r3, r2
 80177ac:	ee07 3a90 	vmov	s15, r3
 80177b0:	684b      	ldr	r3, [r1, #4]
 80177b2:	1a9b      	subs	r3, r3, r2
 80177b4:	ee07 3a10 	vmov	s14, r3
 80177b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80177bc:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80177c0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80177c4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80177c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177cc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80177d0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177d4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80177d8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80177dc:	ee32 5a45 	vsub.f32	s10, s4, s10
 80177e0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80177e4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80177e8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80177ea:	694a      	ldr	r2, [r1, #20]
 80177ec:	1b13      	subs	r3, r2, r4
 80177ee:	ee07 3a10 	vmov	s14, r3
 80177f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177f6:	680b      	ldr	r3, [r1, #0]
 80177f8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177fc:	1b1b      	subs	r3, r3, r4
 80177fe:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017802:	ee07 3a10 	vmov	s14, r3
 8017806:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801780a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801780e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017812:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017816:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801781a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801781c:	698b      	ldr	r3, [r1, #24]
 801781e:	1a9b      	subs	r3, r3, r2
 8017820:	ee06 3a90 	vmov	s13, r3
 8017824:	684b      	ldr	r3, [r1, #4]
 8017826:	1a9b      	subs	r3, r3, r2
 8017828:	ee07 3a10 	vmov	s14, r3
 801782c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017830:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017834:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017838:	ee27 7a04 	vmul.f32	s14, s14, s8
 801783c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017840:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017844:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017848:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801784c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801784e:	694a      	ldr	r2, [r1, #20]
 8017850:	1b13      	subs	r3, r2, r4
 8017852:	ee07 3a10 	vmov	s14, r3
 8017856:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801785a:	680b      	ldr	r3, [r1, #0]
 801785c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017860:	1b1b      	subs	r3, r3, r4
 8017862:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017866:	ee07 3a10 	vmov	s14, r3
 801786a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801786e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017872:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017876:	edd0 5a08 	vldr	s11, [r0, #32]
 801787a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801787e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017882:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017886:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017888:	698b      	ldr	r3, [r1, #24]
 801788a:	1a9b      	subs	r3, r3, r2
 801788c:	ee07 3a10 	vmov	s14, r3
 8017890:	684b      	ldr	r3, [r1, #4]
 8017892:	1a9b      	subs	r3, r3, r2
 8017894:	ee01 3a90 	vmov	s3, r3
 8017898:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801789c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80178a0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80178a4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80178a8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80178ac:	ee61 1a84 	vmul.f32	s3, s3, s8
 80178b0:	eea1 7a21 	vfma.f32	s14, s2, s3
 80178b4:	ee27 7a03 	vmul.f32	s14, s14, s6
 80178b8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80178bc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80178be:	694a      	ldr	r2, [r1, #20]
 80178c0:	1b13      	subs	r3, r2, r4
 80178c2:	ee03 3a10 	vmov	s6, r3
 80178c6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80178ca:	680b      	ldr	r3, [r1, #0]
 80178cc:	ee23 3a04 	vmul.f32	s6, s6, s8
 80178d0:	1b1b      	subs	r3, r3, r4
 80178d2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80178d6:	ee03 3a10 	vmov	s6, r3
 80178da:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80178de:	ee23 4a04 	vmul.f32	s8, s6, s8
 80178e2:	eee1 5a04 	vfma.f32	s11, s2, s8
 80178e6:	ee25 6a86 	vmul.f32	s12, s11, s12
 80178ea:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80178ee:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80178f2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80178f6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80178fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178fe:	dd13      	ble.n	8017928 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017900:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017904:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017908:	63c3      	str	r3, [r0, #60]	; 0x3c
 801790a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801790e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017916:	dd15      	ble.n	8017944 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017918:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801791c:	6403      	str	r3, [r0, #64]	; 0x40
 801791e:	bd70      	pop	{r4, r5, r6, pc}
 8017920:	4623      	mov	r3, r4
 8017922:	e6fd      	b.n	8017720 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017924:	462a      	mov	r2, r5
 8017926:	e706      	b.n	8017736 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017928:	d502      	bpl.n	8017930 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801792a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801792e:	e7e9      	b.n	8017904 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017930:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017934:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017938:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801793c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017940:	dade      	bge.n	8017900 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017942:	e7f2      	b.n	801792a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017944:	d502      	bpl.n	801794c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017946:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801794a:	e7e7      	b.n	801791c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801794c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017950:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017954:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017958:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801795c:	dadc      	bge.n	8017918 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801795e:	e7f2      	b.n	8017946 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017960:	3d800000 	.word	0x3d800000

08017964 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017964:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017968:	2714      	movs	r7, #20
 801796a:	435f      	muls	r7, r3
 801796c:	eb02 0c07 	add.w	ip, r2, r7
 8017970:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017974:	f115 0e0f 	adds.w	lr, r5, #15
 8017978:	f100 80a2 	bmi.w	8017ac0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801797c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017980:	9c08      	ldr	r4, [sp, #32]
 8017982:	f8c0 e014 	str.w	lr, [r0, #20]
 8017986:	2614      	movs	r6, #20
 8017988:	4366      	muls	r6, r4
 801798a:	eb02 0806 	add.w	r8, r2, r6
 801798e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017992:	f115 040f 	adds.w	r4, r5, #15
 8017996:	f100 809f 	bmi.w	8017ad8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801799a:	1124      	asrs	r4, r4, #4
 801799c:	eba4 040e 	sub.w	r4, r4, lr
 80179a0:	6184      	str	r4, [r0, #24]
 80179a2:	2c00      	cmp	r4, #0
 80179a4:	f000 808a 	beq.w	8017abc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80179a8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80179ac:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80179b0:	5995      	ldr	r5, [r2, r6]
 80179b2:	eba4 0809 	sub.w	r8, r4, r9
 80179b6:	59d4      	ldr	r4, [r2, r7]
 80179b8:	eba5 0a04 	sub.w	sl, r5, r4
 80179bc:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80179c0:	fb0e fe05 	mul.w	lr, lr, r5
 80179c4:	fb0a ee19 	mls	lr, sl, r9, lr
 80179c8:	fb08 e404 	mla	r4, r8, r4, lr
 80179cc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80179d0:	3c01      	subs	r4, #1
 80179d2:	19a4      	adds	r4, r4, r6
 80179d4:	f100 808c 	bmi.w	8017af0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80179d8:	fb94 fef6 	sdiv	lr, r4, r6
 80179dc:	f8c0 e000 	str.w	lr, [r0]
 80179e0:	fb06 441e 	mls	r4, r6, lr, r4
 80179e4:	6104      	str	r4, [r0, #16]
 80179e6:	2d00      	cmp	r5, #0
 80179e8:	f2c0 8095 	blt.w	8017b16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80179ec:	fb95 f4f6 	sdiv	r4, r5, r6
 80179f0:	6044      	str	r4, [r0, #4]
 80179f2:	fb06 5514 	mls	r5, r6, r4, r5
 80179f6:	6085      	str	r5, [r0, #8]
 80179f8:	60c6      	str	r6, [r0, #12]
 80179fa:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80179fe:	6945      	ldr	r5, [r0, #20]
 8017a00:	59d2      	ldr	r2, [r2, r7]
 8017a02:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017b38 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017a06:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017a0a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017a0e:	ee07 4a10 	vmov	s14, r4
 8017a12:	6804      	ldr	r4, [r0, #0]
 8017a14:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017a18:	ee07 2a90 	vmov	s15, r2
 8017a1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a24:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017a28:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017a2c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017a30:	edd3 6a00 	vldr	s13, [r3]
 8017a34:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017a38:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017a3c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017a40:	edc0 6a07 	vstr	s13, [r0, #28]
 8017a44:	edd0 6a01 	vldr	s13, [r0, #4]
 8017a48:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017a4c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017a50:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017a54:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017a58:	ed80 6a08 	vstr	s12, [r0, #32]
 8017a5c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017a5e:	6242      	str	r2, [r0, #36]	; 0x24
 8017a60:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017a64:	ed93 6a03 	vldr	s12, [r3, #12]
 8017a68:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017a6c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017a70:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017a74:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017a78:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017a7c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017a80:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017a84:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017a88:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017a8a:	6302      	str	r2, [r0, #48]	; 0x30
 8017a8c:	ed93 6a06 	vldr	s12, [r3, #24]
 8017a90:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017a94:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017a98:	eeb0 7a46 	vmov.f32	s14, s12
 8017a9c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017aa0:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017aa4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017aa8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017aac:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017ab0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017ab4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017ab8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017aba:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017abc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ac0:	f1c5 0501 	rsb	r5, r5, #1
 8017ac4:	f015 050f 	ands.w	r5, r5, #15
 8017ac8:	bf18      	it	ne
 8017aca:	2501      	movne	r5, #1
 8017acc:	2410      	movs	r4, #16
 8017ace:	fb9e fef4 	sdiv	lr, lr, r4
 8017ad2:	ebae 0e05 	sub.w	lr, lr, r5
 8017ad6:	e753      	b.n	8017980 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017ad8:	f1c5 0501 	rsb	r5, r5, #1
 8017adc:	f015 050f 	ands.w	r5, r5, #15
 8017ae0:	bf18      	it	ne
 8017ae2:	2501      	movne	r5, #1
 8017ae4:	f04f 0910 	mov.w	r9, #16
 8017ae8:	fb94 f4f9 	sdiv	r4, r4, r9
 8017aec:	1b64      	subs	r4, r4, r5
 8017aee:	e755      	b.n	801799c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017af0:	4264      	negs	r4, r4
 8017af2:	fb94 fef6 	sdiv	lr, r4, r6
 8017af6:	f1ce 0800 	rsb	r8, lr, #0
 8017afa:	fb06 441e 	mls	r4, r6, lr, r4
 8017afe:	f8c0 8000 	str.w	r8, [r0]
 8017b02:	6104      	str	r4, [r0, #16]
 8017b04:	2c00      	cmp	r4, #0
 8017b06:	f43f af6e 	beq.w	80179e6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017b0a:	ea6f 0e0e 	mvn.w	lr, lr
 8017b0e:	f8c0 e000 	str.w	lr, [r0]
 8017b12:	1b34      	subs	r4, r6, r4
 8017b14:	e766      	b.n	80179e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017b16:	426d      	negs	r5, r5
 8017b18:	fb95 f4f6 	sdiv	r4, r5, r6
 8017b1c:	f1c4 0e00 	rsb	lr, r4, #0
 8017b20:	fb06 5514 	mls	r5, r6, r4, r5
 8017b24:	f8c0 e004 	str.w	lr, [r0, #4]
 8017b28:	6085      	str	r5, [r0, #8]
 8017b2a:	2d00      	cmp	r5, #0
 8017b2c:	f43f af64 	beq.w	80179f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017b30:	43e4      	mvns	r4, r4
 8017b32:	6044      	str	r4, [r0, #4]
 8017b34:	1b75      	subs	r5, r6, r5
 8017b36:	e75e      	b.n	80179f6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017b38:	3d800000 	.word	0x3d800000

08017b3c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017b3c:	4602      	mov	r2, r0
 8017b3e:	b148      	cbz	r0, 8017b54 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017b40:	2300      	movs	r3, #0
 8017b42:	b298      	uxth	r0, r3
 8017b44:	3301      	adds	r3, #1
 8017b46:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017b4a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017b4e:	2900      	cmp	r1, #0
 8017b50:	d1f7      	bne.n	8017b42 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017b52:	4770      	bx	lr
 8017b54:	4770      	bx	lr

08017b56 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017b56:	b530      	push	{r4, r5, lr}
 8017b58:	4604      	mov	r4, r0
 8017b5a:	b159      	cbz	r1, 8017b74 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017b5c:	b148      	cbz	r0, 8017b72 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017b5e:	2300      	movs	r3, #0
 8017b60:	b298      	uxth	r0, r3
 8017b62:	4282      	cmp	r2, r0
 8017b64:	d905      	bls.n	8017b72 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017b66:	5ccd      	ldrb	r5, [r1, r3]
 8017b68:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017b6c:	3301      	adds	r3, #1
 8017b6e:	2d00      	cmp	r5, #0
 8017b70:	d1f6      	bne.n	8017b60 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017b72:	bd30      	pop	{r4, r5, pc}
 8017b74:	4608      	mov	r0, r1
 8017b76:	e7fc      	b.n	8017b72 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017b78 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017b78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b7a:	b08b      	sub	sp, #44	; 0x2c
 8017b7c:	468c      	mov	ip, r1
 8017b7e:	2100      	movs	r1, #0
 8017b80:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017b84:	4604      	mov	r4, r0
 8017b86:	261f      	movs	r6, #31
 8017b88:	af01      	add	r7, sp, #4
 8017b8a:	fb94 fef3 	sdiv	lr, r4, r3
 8017b8e:	fb03 441e 	mls	r4, r3, lr, r4
 8017b92:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017b96:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017b9a:	b2ec      	uxtb	r4, r5
 8017b9c:	2d09      	cmp	r5, #9
 8017b9e:	bfd4      	ite	le
 8017ba0:	3430      	addle	r4, #48	; 0x30
 8017ba2:	3457      	addgt	r4, #87	; 0x57
 8017ba4:	b2e4      	uxtb	r4, r4
 8017ba6:	55bc      	strb	r4, [r7, r6]
 8017ba8:	4674      	mov	r4, lr
 8017baa:	1e71      	subs	r1, r6, #1
 8017bac:	b974      	cbnz	r4, 8017bcc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017bae:	2800      	cmp	r0, #0
 8017bb0:	da05      	bge.n	8017bbe <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017bb2:	ab0a      	add	r3, sp, #40	; 0x28
 8017bb4:	4419      	add	r1, r3
 8017bb6:	232d      	movs	r3, #45	; 0x2d
 8017bb8:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017bbc:	1eb1      	subs	r1, r6, #2
 8017bbe:	3101      	adds	r1, #1
 8017bc0:	4439      	add	r1, r7
 8017bc2:	4660      	mov	r0, ip
 8017bc4:	f7ff ffc7 	bl	8017b56 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017bc8:	b00b      	add	sp, #44	; 0x2c
 8017bca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017bcc:	460e      	mov	r6, r1
 8017bce:	e7dc      	b.n	8017b8a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017bd0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017bd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017bd2:	b08b      	sub	sp, #44	; 0x2c
 8017bd4:	468c      	mov	ip, r1
 8017bd6:	2100      	movs	r1, #0
 8017bd8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017bdc:	ae01      	add	r6, sp, #4
 8017bde:	211f      	movs	r1, #31
 8017be0:	fbb0 f7f3 	udiv	r7, r0, r3
 8017be4:	fb03 0517 	mls	r5, r3, r7, r0
 8017be8:	b2ec      	uxtb	r4, r5
 8017bea:	2d09      	cmp	r5, #9
 8017bec:	bfd4      	ite	le
 8017bee:	3430      	addle	r4, #48	; 0x30
 8017bf0:	3457      	addgt	r4, #87	; 0x57
 8017bf2:	b2e4      	uxtb	r4, r4
 8017bf4:	558c      	strb	r4, [r1, r6]
 8017bf6:	4638      	mov	r0, r7
 8017bf8:	1e4c      	subs	r4, r1, #1
 8017bfa:	b92f      	cbnz	r7, 8017c08 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8017bfc:	4431      	add	r1, r6
 8017bfe:	4660      	mov	r0, ip
 8017c00:	f7ff ffa9 	bl	8017b56 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017c04:	b00b      	add	sp, #44	; 0x2c
 8017c06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017c08:	4621      	mov	r1, r4
 8017c0a:	e7e9      	b.n	8017be0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017c0c <_ZN8touchgfx7Unicode4itoaElPtti>:
 8017c0c:	b410      	push	{r4}
 8017c0e:	b131      	cbz	r1, 8017c1e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017c10:	1e9c      	subs	r4, r3, #2
 8017c12:	2c22      	cmp	r4, #34	; 0x22
 8017c14:	d803      	bhi.n	8017c1e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017c16:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017c1a:	f7ff bfad 	b.w	8017b78 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017c1e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017c22:	4770      	bx	lr

08017c24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c28:	4691      	mov	r9, r2
 8017c2a:	b085      	sub	sp, #20
 8017c2c:	6802      	ldr	r2, [r0, #0]
 8017c2e:	9201      	str	r2, [sp, #4]
 8017c30:	4688      	mov	r8, r1
 8017c32:	4683      	mov	fp, r0
 8017c34:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017c38:	9103      	str	r1, [sp, #12]
 8017c3a:	4610      	mov	r0, r2
 8017c3c:	461c      	mov	r4, r3
 8017c3e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017c42:	9302      	str	r3, [sp, #8]
 8017c44:	f7ff ff7a 	bl	8017b3c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017c48:	f1b8 0f00 	cmp.w	r8, #0
 8017c4c:	bf0c      	ite	eq
 8017c4e:	4684      	moveq	ip, r0
 8017c50:	f100 0c01 	addne.w	ip, r0, #1
 8017c54:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017c58:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017c5c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017c5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017c60:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017c64:	9903      	ldr	r1, [sp, #12]
 8017c66:	fa1f fc8c 	uxth.w	ip, ip
 8017c6a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017c6e:	d041      	beq.n	8017cf4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017c70:	d834      	bhi.n	8017cdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017c72:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017c76:	d059      	beq.n	8017d2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017c78:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017c7c:	d03a      	beq.n	8017cf4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017c7e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017c82:	d034      	beq.n	8017cee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017c84:	2400      	movs	r4, #0
 8017c86:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017c8a:	3a01      	subs	r2, #1
 8017c8c:	b169      	cbz	r1, 8017caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c8e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017c90:	458c      	cmp	ip, r1
 8017c92:	da09      	bge.n	8017ca8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017c94:	eba1 010c 	sub.w	r1, r1, ip
 8017c98:	b289      	uxth	r1, r1
 8017c9a:	b933      	cbnz	r3, 8017caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c9c:	2e00      	cmp	r6, #0
 8017c9e:	d051      	beq.n	8017d44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017ca0:	2800      	cmp	r0, #0
 8017ca2:	d04f      	beq.n	8017d44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017ca4:	440c      	add	r4, r1
 8017ca6:	b2a4      	uxth	r4, r4
 8017ca8:	2100      	movs	r1, #0
 8017caa:	682b      	ldr	r3, [r5, #0]
 8017cac:	4293      	cmp	r3, r2
 8017cae:	da07      	bge.n	8017cc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017cb0:	f1b8 0f00 	cmp.w	r8, #0
 8017cb4:	d004      	beq.n	8017cc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017cb6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017cba:	682b      	ldr	r3, [r5, #0]
 8017cbc:	3301      	adds	r3, #1
 8017cbe:	602b      	str	r3, [r5, #0]
 8017cc0:	2730      	movs	r7, #48	; 0x30
 8017cc2:	2c00      	cmp	r4, #0
 8017cc4:	d04e      	beq.n	8017d64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017cc6:	682e      	ldr	r6, [r5, #0]
 8017cc8:	3c01      	subs	r4, #1
 8017cca:	42b2      	cmp	r2, r6
 8017ccc:	b2a4      	uxth	r4, r4
 8017cce:	dd49      	ble.n	8017d64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017cd0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017cd4:	682b      	ldr	r3, [r5, #0]
 8017cd6:	3301      	adds	r3, #1
 8017cd8:	602b      	str	r3, [r5, #0]
 8017cda:	e7f2      	b.n	8017cc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017cdc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017ce0:	d01d      	beq.n	8017d1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017ce2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017ce6:	d002      	beq.n	8017cee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017ce8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017cec:	e7c9      	b.n	8017c82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017cee:	4684      	mov	ip, r0
 8017cf0:	f04f 0800 	mov.w	r8, #0
 8017cf4:	2c00      	cmp	r4, #0
 8017cf6:	d0c6      	beq.n	8017c86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017cf8:	b947      	cbnz	r7, 8017d0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017cfa:	2801      	cmp	r0, #1
 8017cfc:	d106      	bne.n	8017d0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017cfe:	8814      	ldrh	r4, [r2, #0]
 8017d00:	2c30      	cmp	r4, #48	; 0x30
 8017d02:	bf02      	ittt	eq
 8017d04:	3202      	addeq	r2, #2
 8017d06:	f8cb 2000 	streq.w	r2, [fp]
 8017d0a:	4638      	moveq	r0, r7
 8017d0c:	45bc      	cmp	ip, r7
 8017d0e:	da14      	bge.n	8017d3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017d10:	b2bf      	uxth	r7, r7
 8017d12:	eba7 040c 	sub.w	r4, r7, ip
 8017d16:	b2a4      	uxth	r4, r4
 8017d18:	46bc      	mov	ip, r7
 8017d1a:	2600      	movs	r6, #0
 8017d1c:	e7b3      	b.n	8017c86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017d1e:	4684      	mov	ip, r0
 8017d20:	b16c      	cbz	r4, 8017d3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017d22:	42b8      	cmp	r0, r7
 8017d24:	dd00      	ble.n	8017d28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017d26:	b2b8      	uxth	r0, r7
 8017d28:	2400      	movs	r4, #0
 8017d2a:	e003      	b.n	8017d34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017d2c:	f04f 0c01 	mov.w	ip, #1
 8017d30:	2400      	movs	r4, #0
 8017d32:	4660      	mov	r0, ip
 8017d34:	4626      	mov	r6, r4
 8017d36:	46a0      	mov	r8, r4
 8017d38:	e7a5      	b.n	8017c86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017d3a:	2400      	movs	r4, #0
 8017d3c:	e7ed      	b.n	8017d1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017d3e:	4626      	mov	r6, r4
 8017d40:	46a0      	mov	r8, r4
 8017d42:	e7a0      	b.n	8017c86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017d44:	2900      	cmp	r1, #0
 8017d46:	d0b0      	beq.n	8017caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017d48:	2720      	movs	r7, #32
 8017d4a:	682e      	ldr	r6, [r5, #0]
 8017d4c:	2900      	cmp	r1, #0
 8017d4e:	d0ac      	beq.n	8017caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017d50:	3901      	subs	r1, #1
 8017d52:	4296      	cmp	r6, r2
 8017d54:	b289      	uxth	r1, r1
 8017d56:	daa7      	bge.n	8017ca8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017d58:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017d5c:	682b      	ldr	r3, [r5, #0]
 8017d5e:	3301      	adds	r3, #1
 8017d60:	602b      	str	r3, [r5, #0]
 8017d62:	e7f2      	b.n	8017d4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017d64:	b188      	cbz	r0, 8017d8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017d66:	682b      	ldr	r3, [r5, #0]
 8017d68:	3801      	subs	r0, #1
 8017d6a:	429a      	cmp	r2, r3
 8017d6c:	b280      	uxth	r0, r0
 8017d6e:	dd0c      	ble.n	8017d8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017d70:	f8db 3000 	ldr.w	r3, [fp]
 8017d74:	1c9c      	adds	r4, r3, #2
 8017d76:	f8cb 4000 	str.w	r4, [fp]
 8017d7a:	881c      	ldrh	r4, [r3, #0]
 8017d7c:	682b      	ldr	r3, [r5, #0]
 8017d7e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017d82:	682b      	ldr	r3, [r5, #0]
 8017d84:	3301      	adds	r3, #1
 8017d86:	602b      	str	r3, [r5, #0]
 8017d88:	e7ec      	b.n	8017d64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017d8a:	2620      	movs	r6, #32
 8017d8c:	b151      	cbz	r1, 8017da4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017d8e:	6828      	ldr	r0, [r5, #0]
 8017d90:	3901      	subs	r1, #1
 8017d92:	4282      	cmp	r2, r0
 8017d94:	b289      	uxth	r1, r1
 8017d96:	dd05      	ble.n	8017da4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017d98:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017d9c:	682b      	ldr	r3, [r5, #0]
 8017d9e:	3301      	adds	r3, #1
 8017da0:	602b      	str	r3, [r5, #0]
 8017da2:	e7f3      	b.n	8017d8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017da4:	b005      	add	sp, #20
 8017da6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017daa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017daa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017dae:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017db2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017db6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017dba:	2400      	movs	r4, #0
 8017dbc:	8014      	strh	r4, [r2, #0]
 8017dbe:	701c      	strb	r4, [r3, #0]
 8017dc0:	f888 4000 	strb.w	r4, [r8]
 8017dc4:	f88c 4000 	strb.w	r4, [ip]
 8017dc8:	f88e 4000 	strb.w	r4, [lr]
 8017dcc:	703c      	strb	r4, [r7, #0]
 8017dce:	6804      	ldr	r4, [r0, #0]
 8017dd0:	b1a4      	cbz	r4, 8017dfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017dd2:	8824      	ldrh	r4, [r4, #0]
 8017dd4:	f04f 0901 	mov.w	r9, #1
 8017dd8:	b314      	cbz	r4, 8017e20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017dda:	2c2b      	cmp	r4, #43	; 0x2b
 8017ddc:	d001      	beq.n	8017de2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017dde:	2c20      	cmp	r4, #32
 8017de0:	d110      	bne.n	8017e04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017de2:	8014      	strh	r4, [r2, #0]
 8017de4:	6804      	ldr	r4, [r0, #0]
 8017de6:	b10c      	cbz	r4, 8017dec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017de8:	3402      	adds	r4, #2
 8017dea:	6004      	str	r4, [r0, #0]
 8017dec:	680c      	ldr	r4, [r1, #0]
 8017dee:	b10c      	cbz	r4, 8017df4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017df0:	3401      	adds	r4, #1
 8017df2:	600c      	str	r4, [r1, #0]
 8017df4:	6804      	ldr	r4, [r0, #0]
 8017df6:	b17c      	cbz	r4, 8017e18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017df8:	8824      	ldrh	r4, [r4, #0]
 8017dfa:	e7ed      	b.n	8017dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017dfc:	680c      	ldr	r4, [r1, #0]
 8017dfe:	b17c      	cbz	r4, 8017e20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017e00:	7824      	ldrb	r4, [r4, #0]
 8017e02:	e7e7      	b.n	8017dd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017e04:	2c2d      	cmp	r4, #45	; 0x2d
 8017e06:	d102      	bne.n	8017e0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017e08:	f883 9000 	strb.w	r9, [r3]
 8017e0c:	e7ea      	b.n	8017de4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017e0e:	2c23      	cmp	r4, #35	; 0x23
 8017e10:	d107      	bne.n	8017e22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017e12:	f888 9000 	strb.w	r9, [r8]
 8017e16:	e7e5      	b.n	8017de4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017e18:	680c      	ldr	r4, [r1, #0]
 8017e1a:	b10c      	cbz	r4, 8017e20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017e1c:	7824      	ldrb	r4, [r4, #0]
 8017e1e:	e7db      	b.n	8017dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017e20:	2400      	movs	r4, #0
 8017e22:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017e26:	2b09      	cmp	r3, #9
 8017e28:	d901      	bls.n	8017e2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017e2a:	2c2a      	cmp	r4, #42	; 0x2a
 8017e2c:	d122      	bne.n	8017e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017e2e:	2301      	movs	r3, #1
 8017e30:	2c30      	cmp	r4, #48	; 0x30
 8017e32:	f88e 3000 	strb.w	r3, [lr]
 8017e36:	d10d      	bne.n	8017e54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017e38:	f88c 3000 	strb.w	r3, [ip]
 8017e3c:	6803      	ldr	r3, [r0, #0]
 8017e3e:	b10b      	cbz	r3, 8017e44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017e40:	3302      	adds	r3, #2
 8017e42:	6003      	str	r3, [r0, #0]
 8017e44:	680b      	ldr	r3, [r1, #0]
 8017e46:	b10b      	cbz	r3, 8017e4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017e48:	3301      	adds	r3, #1
 8017e4a:	600b      	str	r3, [r1, #0]
 8017e4c:	6803      	ldr	r3, [r0, #0]
 8017e4e:	2b00      	cmp	r3, #0
 8017e50:	d02f      	beq.n	8017eb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017e52:	881c      	ldrh	r4, [r3, #0]
 8017e54:	2c2a      	cmp	r4, #42	; 0x2a
 8017e56:	d135      	bne.n	8017ec4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017e58:	f04f 33ff 	mov.w	r3, #4294967295
 8017e5c:	6033      	str	r3, [r6, #0]
 8017e5e:	6803      	ldr	r3, [r0, #0]
 8017e60:	b10b      	cbz	r3, 8017e66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017e62:	3302      	adds	r3, #2
 8017e64:	6003      	str	r3, [r0, #0]
 8017e66:	680b      	ldr	r3, [r1, #0]
 8017e68:	b10b      	cbz	r3, 8017e6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017e6a:	3301      	adds	r3, #1
 8017e6c:	600b      	str	r3, [r1, #0]
 8017e6e:	6803      	ldr	r3, [r0, #0]
 8017e70:	b31b      	cbz	r3, 8017eba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017e72:	881c      	ldrh	r4, [r3, #0]
 8017e74:	2c2e      	cmp	r4, #46	; 0x2e
 8017e76:	d11a      	bne.n	8017eae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017e78:	2301      	movs	r3, #1
 8017e7a:	703b      	strb	r3, [r7, #0]
 8017e7c:	6803      	ldr	r3, [r0, #0]
 8017e7e:	b10b      	cbz	r3, 8017e84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017e80:	3302      	adds	r3, #2
 8017e82:	6003      	str	r3, [r0, #0]
 8017e84:	680b      	ldr	r3, [r1, #0]
 8017e86:	b10b      	cbz	r3, 8017e8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017e88:	3301      	adds	r3, #1
 8017e8a:	600b      	str	r3, [r1, #0]
 8017e8c:	6803      	ldr	r3, [r0, #0]
 8017e8e:	2b00      	cmp	r3, #0
 8017e90:	d036      	beq.n	8017f00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017e92:	881b      	ldrh	r3, [r3, #0]
 8017e94:	2b2a      	cmp	r3, #42	; 0x2a
 8017e96:	d137      	bne.n	8017f08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017e98:	f04f 33ff 	mov.w	r3, #4294967295
 8017e9c:	602b      	str	r3, [r5, #0]
 8017e9e:	6803      	ldr	r3, [r0, #0]
 8017ea0:	b10b      	cbz	r3, 8017ea6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017ea2:	3302      	adds	r3, #2
 8017ea4:	6003      	str	r3, [r0, #0]
 8017ea6:	680b      	ldr	r3, [r1, #0]
 8017ea8:	b10b      	cbz	r3, 8017eae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017eaa:	3301      	adds	r3, #1
 8017eac:	600b      	str	r3, [r1, #0]
 8017eae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017eb2:	680c      	ldr	r4, [r1, #0]
 8017eb4:	b134      	cbz	r4, 8017ec4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017eb6:	7824      	ldrb	r4, [r4, #0]
 8017eb8:	e7cc      	b.n	8017e54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017eba:	680b      	ldr	r3, [r1, #0]
 8017ebc:	2b00      	cmp	r3, #0
 8017ebe:	d0f6      	beq.n	8017eae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017ec0:	781c      	ldrb	r4, [r3, #0]
 8017ec2:	e7d7      	b.n	8017e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017ec4:	2300      	movs	r3, #0
 8017ec6:	6033      	str	r3, [r6, #0]
 8017ec8:	220a      	movs	r2, #10
 8017eca:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017ece:	fa1f f38c 	uxth.w	r3, ip
 8017ed2:	2b09      	cmp	r3, #9
 8017ed4:	d8ce      	bhi.n	8017e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017ed6:	6833      	ldr	r3, [r6, #0]
 8017ed8:	fb02 c303 	mla	r3, r2, r3, ip
 8017edc:	6033      	str	r3, [r6, #0]
 8017ede:	6803      	ldr	r3, [r0, #0]
 8017ee0:	b10b      	cbz	r3, 8017ee6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017ee2:	3302      	adds	r3, #2
 8017ee4:	6003      	str	r3, [r0, #0]
 8017ee6:	680b      	ldr	r3, [r1, #0]
 8017ee8:	b10b      	cbz	r3, 8017eee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017eea:	3301      	adds	r3, #1
 8017eec:	600b      	str	r3, [r1, #0]
 8017eee:	6803      	ldr	r3, [r0, #0]
 8017ef0:	b10b      	cbz	r3, 8017ef6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017ef2:	881c      	ldrh	r4, [r3, #0]
 8017ef4:	e7e9      	b.n	8017eca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017ef6:	680c      	ldr	r4, [r1, #0]
 8017ef8:	2c00      	cmp	r4, #0
 8017efa:	d0e6      	beq.n	8017eca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017efc:	7824      	ldrb	r4, [r4, #0]
 8017efe:	e7e4      	b.n	8017eca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017f00:	680b      	ldr	r3, [r1, #0]
 8017f02:	b10b      	cbz	r3, 8017f08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017f04:	781b      	ldrb	r3, [r3, #0]
 8017f06:	e7c5      	b.n	8017e94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017f08:	2200      	movs	r2, #0
 8017f0a:	602a      	str	r2, [r5, #0]
 8017f0c:	240a      	movs	r4, #10
 8017f0e:	3b30      	subs	r3, #48	; 0x30
 8017f10:	b29e      	uxth	r6, r3
 8017f12:	2e09      	cmp	r6, #9
 8017f14:	682a      	ldr	r2, [r5, #0]
 8017f16:	d813      	bhi.n	8017f40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017f18:	fb04 3302 	mla	r3, r4, r2, r3
 8017f1c:	602b      	str	r3, [r5, #0]
 8017f1e:	6803      	ldr	r3, [r0, #0]
 8017f20:	b10b      	cbz	r3, 8017f26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017f22:	3302      	adds	r3, #2
 8017f24:	6003      	str	r3, [r0, #0]
 8017f26:	680b      	ldr	r3, [r1, #0]
 8017f28:	b10b      	cbz	r3, 8017f2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017f2a:	3301      	adds	r3, #1
 8017f2c:	600b      	str	r3, [r1, #0]
 8017f2e:	6803      	ldr	r3, [r0, #0]
 8017f30:	b10b      	cbz	r3, 8017f36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017f32:	881b      	ldrh	r3, [r3, #0]
 8017f34:	e7eb      	b.n	8017f0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017f36:	680b      	ldr	r3, [r1, #0]
 8017f38:	2b00      	cmp	r3, #0
 8017f3a:	d0e8      	beq.n	8017f0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017f3c:	781b      	ldrb	r3, [r3, #0]
 8017f3e:	e7e6      	b.n	8017f0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017f40:	2a06      	cmp	r2, #6
 8017f42:	bfa8      	it	ge
 8017f44:	2206      	movge	r2, #6
 8017f46:	602a      	str	r2, [r5, #0]
 8017f48:	e7b1      	b.n	8017eae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017f4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f4e:	b0a3      	sub	sp, #140	; 0x8c
 8017f50:	2600      	movs	r6, #0
 8017f52:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017f56:	4607      	mov	r7, r0
 8017f58:	4688      	mov	r8, r1
 8017f5a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017f5e:	4631      	mov	r1, r6
 8017f60:	2242      	movs	r2, #66	; 0x42
 8017f62:	4648      	mov	r0, r9
 8017f64:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017f66:	960d      	str	r6, [sp, #52]	; 0x34
 8017f68:	f012 f881 	bl	802a06e <memset>
 8017f6c:	b15f      	cbz	r7, 8017f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017f6e:	f108 3aff 	add.w	sl, r8, #4294967295
 8017f72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017f74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f76:	b152      	cbz	r2, 8017f8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017f78:	8812      	ldrh	r2, [r2, #0]
 8017f7a:	b10a      	cbz	r2, 8017f80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017f7c:	459a      	cmp	sl, r3
 8017f7e:	dc2e      	bgt.n	8017fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017f80:	2200      	movs	r2, #0
 8017f82:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017f86:	4638      	mov	r0, r7
 8017f88:	b023      	add	sp, #140	; 0x8c
 8017f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f8e:	9a08      	ldr	r2, [sp, #32]
 8017f90:	2a00      	cmp	r2, #0
 8017f92:	d0f5      	beq.n	8017f80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017f94:	7812      	ldrb	r2, [r2, #0]
 8017f96:	e7f0      	b.n	8017f7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017f98:	2d00      	cmp	r5, #0
 8017f9a:	d0ea      	beq.n	8017f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f9c:	782a      	ldrb	r2, [r5, #0]
 8017f9e:	b142      	cbz	r2, 8017fb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017fa0:	2a25      	cmp	r2, #37	; 0x25
 8017fa2:	d001      	beq.n	8017fa8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017fa4:	459a      	cmp	sl, r3
 8017fa6:	dc08      	bgt.n	8017fba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017fa8:	f1bb 0f00 	cmp.w	fp, #0
 8017fac:	d121      	bne.n	8017ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017fae:	2d00      	cmp	r5, #0
 8017fb0:	d0df      	beq.n	8017f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017fb2:	782a      	ldrb	r2, [r5, #0]
 8017fb4:	f04f 0b00 	mov.w	fp, #0
 8017fb8:	e01d      	b.n	8017ff6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017fba:	f1bb 0f00 	cmp.w	fp, #0
 8017fbe:	d078      	beq.n	80180b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017fc0:	f8bb 2000 	ldrh.w	r2, [fp]
 8017fc4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017fc8:	f1bb 0f00 	cmp.w	fp, #0
 8017fcc:	d002      	beq.n	8017fd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017fce:	f10b 0202 	add.w	r2, fp, #2
 8017fd2:	9209      	str	r2, [sp, #36]	; 0x24
 8017fd4:	b10d      	cbz	r5, 8017fda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017fd6:	3501      	adds	r5, #1
 8017fd8:	9508      	str	r5, [sp, #32]
 8017fda:	3301      	adds	r3, #1
 8017fdc:	930d      	str	r3, [sp, #52]	; 0x34
 8017fde:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017fe2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017fe4:	f1bb 0f00 	cmp.w	fp, #0
 8017fe8:	d0d6      	beq.n	8017f98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017fea:	f8bb 2000 	ldrh.w	r2, [fp]
 8017fee:	2a00      	cmp	r2, #0
 8017ff0:	d1d6      	bne.n	8017fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017ff2:	f8bb 2000 	ldrh.w	r2, [fp]
 8017ff6:	2a00      	cmp	r2, #0
 8017ff8:	d0bb      	beq.n	8017f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ffa:	459a      	cmp	sl, r3
 8017ffc:	ddb9      	ble.n	8017f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ffe:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018002:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018006:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801800a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801800e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018012:	960e      	str	r6, [sp, #56]	; 0x38
 8018014:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018018:	960f      	str	r6, [sp, #60]	; 0x3c
 801801a:	f1bb 0f00 	cmp.w	fp, #0
 801801e:	d002      	beq.n	8018026 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018020:	f10b 0302 	add.w	r3, fp, #2
 8018024:	9309      	str	r3, [sp, #36]	; 0x24
 8018026:	b10d      	cbz	r5, 801802c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018028:	1c6b      	adds	r3, r5, #1
 801802a:	9308      	str	r3, [sp, #32]
 801802c:	ab0f      	add	r3, sp, #60	; 0x3c
 801802e:	9305      	str	r3, [sp, #20]
 8018030:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018034:	9304      	str	r3, [sp, #16]
 8018036:	ab0e      	add	r3, sp, #56	; 0x38
 8018038:	9303      	str	r3, [sp, #12]
 801803a:	ab0c      	add	r3, sp, #48	; 0x30
 801803c:	9302      	str	r3, [sp, #8]
 801803e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018042:	9301      	str	r3, [sp, #4]
 8018044:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018048:	9300      	str	r3, [sp, #0]
 801804a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801804e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018052:	a908      	add	r1, sp, #32
 8018054:	a809      	add	r0, sp, #36	; 0x24
 8018056:	f7ff fea8 	bl	8017daa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801805a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801805c:	2b00      	cmp	r3, #0
 801805e:	bfbe      	ittt	lt
 8018060:	6823      	ldrlt	r3, [r4, #0]
 8018062:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018066:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018068:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801806a:	bfb8      	it	lt
 801806c:	3404      	addlt	r4, #4
 801806e:	2b00      	cmp	r3, #0
 8018070:	bfb8      	it	lt
 8018072:	6823      	ldrlt	r3, [r4, #0]
 8018074:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018078:	bfbe      	ittt	lt
 801807a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801807e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018080:	3404      	addlt	r4, #4
 8018082:	b1d9      	cbz	r1, 80180bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018084:	880b      	ldrh	r3, [r1, #0]
 8018086:	2b69      	cmp	r3, #105	; 0x69
 8018088:	d01f      	beq.n	80180ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801808a:	d82f      	bhi.n	80180ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801808c:	2b58      	cmp	r3, #88	; 0x58
 801808e:	d01c      	beq.n	80180ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018090:	d818      	bhi.n	80180c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018092:	2b25      	cmp	r3, #37	; 0x25
 8018094:	d034      	beq.n	8018100 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018096:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801809a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801809c:	f1bb 0f00 	cmp.w	fp, #0
 80180a0:	f000 80b8 	beq.w	8018214 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80180a4:	f8bb 5000 	ldrh.w	r5, [fp]
 80180a8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80180ac:	3301      	adds	r3, #1
 80180ae:	930d      	str	r3, [sp, #52]	; 0x34
 80180b0:	e029      	b.n	8018106 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80180b2:	b10d      	cbz	r5, 80180b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80180b4:	782a      	ldrb	r2, [r5, #0]
 80180b6:	e785      	b.n	8017fc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80180b8:	462a      	mov	r2, r5
 80180ba:	e783      	b.n	8017fc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80180bc:	2a00      	cmp	r2, #0
 80180be:	d0ea      	beq.n	8018096 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80180c0:	7813      	ldrb	r3, [r2, #0]
 80180c2:	e7e0      	b.n	8018086 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80180c4:	3b63      	subs	r3, #99	; 0x63
 80180c6:	2b01      	cmp	r3, #1
 80180c8:	d8e5      	bhi.n	8018096 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80180ca:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80180ce:	b329      	cbz	r1, 801811c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80180d0:	880b      	ldrh	r3, [r1, #0]
 80180d2:	2b69      	cmp	r3, #105	; 0x69
 80180d4:	d063      	beq.n	801819e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80180d6:	d825      	bhi.n	8018124 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80180d8:	2b63      	cmp	r3, #99	; 0x63
 80180da:	d038      	beq.n	801814e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80180dc:	2b64      	cmp	r3, #100	; 0x64
 80180de:	d05e      	beq.n	801819e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80180e0:	2b58      	cmp	r3, #88	; 0x58
 80180e2:	d07b      	beq.n	80181dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80180e4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80180e8:	4625      	mov	r5, r4
 80180ea:	e036      	b.n	801815a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80180ec:	2b73      	cmp	r3, #115	; 0x73
 80180ee:	d0ec      	beq.n	80180ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80180f0:	d802      	bhi.n	80180f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80180f2:	2b6f      	cmp	r3, #111	; 0x6f
 80180f4:	d1cf      	bne.n	8018096 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80180f6:	e7e8      	b.n	80180ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80180f8:	2b75      	cmp	r3, #117	; 0x75
 80180fa:	d0e6      	beq.n	80180ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80180fc:	2b78      	cmp	r3, #120	; 0x78
 80180fe:	e7f9      	b.n	80180f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018100:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018102:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018106:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018108:	b10b      	cbz	r3, 801810e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801810a:	3302      	adds	r3, #2
 801810c:	9309      	str	r3, [sp, #36]	; 0x24
 801810e:	9b08      	ldr	r3, [sp, #32]
 8018110:	2b00      	cmp	r3, #0
 8018112:	f43f af2e 	beq.w	8017f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018116:	3301      	adds	r3, #1
 8018118:	9308      	str	r3, [sp, #32]
 801811a:	e72a      	b.n	8017f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801811c:	2a00      	cmp	r2, #0
 801811e:	d0e1      	beq.n	80180e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018120:	7813      	ldrb	r3, [r2, #0]
 8018122:	e7d6      	b.n	80180d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018124:	2b73      	cmp	r3, #115	; 0x73
 8018126:	d036      	beq.n	8018196 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018128:	d807      	bhi.n	801813a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801812a:	2b6f      	cmp	r3, #111	; 0x6f
 801812c:	d1da      	bne.n	80180e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801812e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018130:	1d25      	adds	r5, r4, #4
 8018132:	eba8 0202 	sub.w	r2, r8, r2
 8018136:	2308      	movs	r3, #8
 8018138:	e04a      	b.n	80181d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801813a:	2b75      	cmp	r3, #117	; 0x75
 801813c:	d043      	beq.n	80181c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801813e:	2b78      	cmp	r3, #120	; 0x78
 8018140:	d1d0      	bne.n	80180e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018142:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018144:	1d25      	adds	r5, r4, #4
 8018146:	eba8 0202 	sub.w	r2, r8, r2
 801814a:	2310      	movs	r3, #16
 801814c:	e040      	b.n	80181d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801814e:	6823      	ldr	r3, [r4, #0]
 8018150:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018154:	1d25      	adds	r5, r4, #4
 8018156:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801815a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801815c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018160:	2b00      	cmp	r3, #0
 8018162:	d052      	beq.n	801820a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018164:	881a      	ldrh	r2, [r3, #0]
 8018166:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801816a:	a80d      	add	r0, sp, #52	; 0x34
 801816c:	9005      	str	r0, [sp, #20]
 801816e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018172:	9004      	str	r0, [sp, #16]
 8018174:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018176:	9003      	str	r0, [sp, #12]
 8018178:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801817c:	9002      	str	r0, [sp, #8]
 801817e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018180:	9001      	str	r0, [sp, #4]
 8018182:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018186:	9000      	str	r0, [sp, #0]
 8018188:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801818c:	a810      	add	r0, sp, #64	; 0x40
 801818e:	f7ff fd49 	bl	8017c24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018192:	462c      	mov	r4, r5
 8018194:	e7b7      	b.n	8018106 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018196:	6823      	ldr	r3, [r4, #0]
 8018198:	1d25      	adds	r5, r4, #4
 801819a:	9310      	str	r3, [sp, #64]	; 0x40
 801819c:	e7dd      	b.n	801815a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801819e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80181a0:	6820      	ldr	r0, [r4, #0]
 80181a2:	eba8 0202 	sub.w	r2, r8, r2
 80181a6:	230a      	movs	r3, #10
 80181a8:	b292      	uxth	r2, r2
 80181aa:	4649      	mov	r1, r9
 80181ac:	f7ff fce4 	bl	8017b78 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80181b0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80181b4:	2b2d      	cmp	r3, #45	; 0x2d
 80181b6:	f104 0504 	add.w	r5, r4, #4
 80181ba:	d1ce      	bne.n	801815a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80181bc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80181c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80181c2:	3302      	adds	r3, #2
 80181c4:	e7e9      	b.n	801819a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80181c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80181c8:	1d25      	adds	r5, r4, #4
 80181ca:	eba8 0202 	sub.w	r2, r8, r2
 80181ce:	230a      	movs	r3, #10
 80181d0:	b292      	uxth	r2, r2
 80181d2:	4649      	mov	r1, r9
 80181d4:	6820      	ldr	r0, [r4, #0]
 80181d6:	f7ff fcfb 	bl	8017bd0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80181da:	e7be      	b.n	801815a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80181dc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80181de:	6820      	ldr	r0, [r4, #0]
 80181e0:	eba8 0202 	sub.w	r2, r8, r2
 80181e4:	b292      	uxth	r2, r2
 80181e6:	2310      	movs	r3, #16
 80181e8:	4649      	mov	r1, r9
 80181ea:	f7ff fcf1 	bl	8017bd0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80181ee:	1d25      	adds	r5, r4, #4
 80181f0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80181f4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80181f8:	2b00      	cmp	r3, #0
 80181fa:	d0ae      	beq.n	801815a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80181fc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018200:	2919      	cmp	r1, #25
 8018202:	d8f7      	bhi.n	80181f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018204:	3b20      	subs	r3, #32
 8018206:	8013      	strh	r3, [r2, #0]
 8018208:	e7f4      	b.n	80181f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801820a:	9a08      	ldr	r2, [sp, #32]
 801820c:	2a00      	cmp	r2, #0
 801820e:	d0aa      	beq.n	8018166 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018210:	7812      	ldrb	r2, [r2, #0]
 8018212:	e7a8      	b.n	8018166 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018214:	2d00      	cmp	r5, #0
 8018216:	f43f af47 	beq.w	80180a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801821a:	782d      	ldrb	r5, [r5, #0]
 801821c:	e744      	b.n	80180a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801821e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801821e:	b507      	push	{r0, r1, r2, lr}
 8018220:	9300      	str	r3, [sp, #0]
 8018222:	4613      	mov	r3, r2
 8018224:	2200      	movs	r2, #0
 8018226:	f7ff fe90 	bl	8017f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801822a:	b003      	add	sp, #12
 801822c:	f85d fb04 	ldr.w	pc, [sp], #4

08018230 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018230:	b40c      	push	{r2, r3}
 8018232:	b507      	push	{r0, r1, r2, lr}
 8018234:	ab04      	add	r3, sp, #16
 8018236:	f853 2b04 	ldr.w	r2, [r3], #4
 801823a:	9301      	str	r3, [sp, #4]
 801823c:	f7ff ffef 	bl	801821e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018240:	b003      	add	sp, #12
 8018242:	f85d eb04 	ldr.w	lr, [sp], #4
 8018246:	b002      	add	sp, #8
 8018248:	4770      	bx	lr
	...

0801824c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801824c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018250:	b0c5      	sub	sp, #276	; 0x114
 8018252:	2400      	movs	r4, #0
 8018254:	af11      	add	r7, sp, #68	; 0x44
 8018256:	4606      	mov	r6, r0
 8018258:	468a      	mov	sl, r1
 801825a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801825e:	4621      	mov	r1, r4
 8018260:	22c8      	movs	r2, #200	; 0xc8
 8018262:	4638      	mov	r0, r7
 8018264:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8018268:	940d      	str	r4, [sp, #52]	; 0x34
 801826a:	f011 ff00 	bl	802a06e <memset>
 801826e:	b16e      	cbz	r6, 801828c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8018270:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8018514 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8018274:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018276:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018278:	b162      	cbz	r2, 8018294 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801827a:	8812      	ldrh	r2, [r2, #0]
 801827c:	b11a      	cbz	r2, 8018286 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801827e:	f10a 31ff 	add.w	r1, sl, #4294967295
 8018282:	4299      	cmp	r1, r3
 8018284:	dc2e      	bgt.n	80182e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8018286:	2200      	movs	r2, #0
 8018288:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801828c:	4630      	mov	r0, r6
 801828e:	b045      	add	sp, #276	; 0x114
 8018290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018294:	9a08      	ldr	r2, [sp, #32]
 8018296:	2a00      	cmp	r2, #0
 8018298:	d0f5      	beq.n	8018286 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801829a:	7812      	ldrb	r2, [r2, #0]
 801829c:	e7ee      	b.n	801827c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801829e:	2d00      	cmp	r5, #0
 80182a0:	d0e8      	beq.n	8018274 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80182a2:	782a      	ldrb	r2, [r5, #0]
 80182a4:	b142      	cbz	r2, 80182b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 80182a6:	2a25      	cmp	r2, #37	; 0x25
 80182a8:	d001      	beq.n	80182ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 80182aa:	4299      	cmp	r1, r3
 80182ac:	dc08      	bgt.n	80182c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80182ae:	f1b8 0f00 	cmp.w	r8, #0
 80182b2:	d121      	bne.n	80182f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 80182b4:	2d00      	cmp	r5, #0
 80182b6:	d0dd      	beq.n	8018274 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80182b8:	782a      	ldrb	r2, [r5, #0]
 80182ba:	f04f 0800 	mov.w	r8, #0
 80182be:	e01d      	b.n	80182fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 80182c0:	f1b8 0f00 	cmp.w	r8, #0
 80182c4:	d07f      	beq.n	80183c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 80182c6:	f8b8 2000 	ldrh.w	r2, [r8]
 80182ca:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80182ce:	f1b8 0f00 	cmp.w	r8, #0
 80182d2:	d002      	beq.n	80182da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 80182d4:	f108 0202 	add.w	r2, r8, #2
 80182d8:	9209      	str	r2, [sp, #36]	; 0x24
 80182da:	b10d      	cbz	r5, 80182e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 80182dc:	3501      	adds	r5, #1
 80182de:	9508      	str	r5, [sp, #32]
 80182e0:	3301      	adds	r3, #1
 80182e2:	930d      	str	r3, [sp, #52]	; 0x34
 80182e4:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 80182e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80182ea:	f1b8 0f00 	cmp.w	r8, #0
 80182ee:	d0d6      	beq.n	801829e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 80182f0:	f8b8 2000 	ldrh.w	r2, [r8]
 80182f4:	2a00      	cmp	r2, #0
 80182f6:	d1d6      	bne.n	80182a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 80182f8:	f8b8 2000 	ldrh.w	r2, [r8]
 80182fc:	2a00      	cmp	r2, #0
 80182fe:	d0b9      	beq.n	8018274 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018300:	4299      	cmp	r1, r3
 8018302:	ddb7      	ble.n	8018274 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018304:	2300      	movs	r3, #0
 8018306:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801830a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801830e:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8018312:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8018316:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801831a:	930e      	str	r3, [sp, #56]	; 0x38
 801831c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018320:	930f      	str	r3, [sp, #60]	; 0x3c
 8018322:	f1b8 0f00 	cmp.w	r8, #0
 8018326:	d002      	beq.n	801832e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018328:	f108 0302 	add.w	r3, r8, #2
 801832c:	9309      	str	r3, [sp, #36]	; 0x24
 801832e:	b10d      	cbz	r5, 8018334 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018330:	1c6b      	adds	r3, r5, #1
 8018332:	9308      	str	r3, [sp, #32]
 8018334:	ab0f      	add	r3, sp, #60	; 0x3c
 8018336:	9305      	str	r3, [sp, #20]
 8018338:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801833c:	9304      	str	r3, [sp, #16]
 801833e:	ab0e      	add	r3, sp, #56	; 0x38
 8018340:	9303      	str	r3, [sp, #12]
 8018342:	ab0c      	add	r3, sp, #48	; 0x30
 8018344:	9302      	str	r3, [sp, #8]
 8018346:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801834a:	9301      	str	r3, [sp, #4]
 801834c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018350:	9300      	str	r3, [sp, #0]
 8018352:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018356:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801835a:	a908      	add	r1, sp, #32
 801835c:	a809      	add	r0, sp, #36	; 0x24
 801835e:	f7ff fd24 	bl	8017daa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018362:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018364:	2b00      	cmp	r3, #0
 8018366:	da0b      	bge.n	8018380 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8018368:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801836c:	edd3 7a00 	vldr	s15, [r3]
 8018370:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018374:	3401      	adds	r4, #1
 8018376:	ee17 3a90 	vmov	r3, s15
 801837a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801837e:	930e      	str	r3, [sp, #56]	; 0x38
 8018380:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018382:	2b00      	cmp	r3, #0
 8018384:	da0b      	bge.n	801839e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8018386:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801838a:	edd3 7a00 	vldr	s15, [r3]
 801838e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018392:	3401      	adds	r4, #1
 8018394:	ee17 3a90 	vmov	r3, s15
 8018398:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801839c:	930f      	str	r3, [sp, #60]	; 0x3c
 801839e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80183a0:	b1b3      	cbz	r3, 80183d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80183a2:	881a      	ldrh	r2, [r3, #0]
 80183a4:	2a25      	cmp	r2, #37	; 0x25
 80183a6:	d018      	beq.n	80183da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 80183a8:	2a66      	cmp	r2, #102	; 0x66
 80183aa:	d01c      	beq.n	80183e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 80183ac:	e9cd 5808 	strd	r5, r8, [sp, #32]
 80183b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80183b2:	f1b8 0f00 	cmp.w	r8, #0
 80183b6:	f000 8121 	beq.w	80185fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 80183ba:	f8b8 5000 	ldrh.w	r5, [r8]
 80183be:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 80183c2:	3301      	adds	r3, #1
 80183c4:	e00d      	b.n	80183e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 80183c6:	b10d      	cbz	r5, 80183cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80183c8:	782a      	ldrb	r2, [r5, #0]
 80183ca:	e77e      	b.n	80182ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80183cc:	462a      	mov	r2, r5
 80183ce:	e77c      	b.n	80182ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80183d0:	9b08      	ldr	r3, [sp, #32]
 80183d2:	2b00      	cmp	r3, #0
 80183d4:	d0ea      	beq.n	80183ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80183d6:	781a      	ldrb	r2, [r3, #0]
 80183d8:	e7e4      	b.n	80183a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80183da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80183dc:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80183e0:	3302      	adds	r3, #2
 80183e2:	930d      	str	r3, [sp, #52]	; 0x34
 80183e4:	e041      	b.n	801846a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 80183e6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80183ea:	edd3 7a00 	vldr	s15, [r3]
 80183ee:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80183f2:	9710      	str	r7, [sp, #64]	; 0x40
 80183f4:	3401      	adds	r4, #1
 80183f6:	b923      	cbnz	r3, 8018402 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80183f8:	2301      	movs	r3, #1
 80183fa:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80183fe:	2306      	movs	r3, #6
 8018400:	930f      	str	r3, [sp, #60]	; 0x3c
 8018402:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801840a:	bf48      	it	mi
 801840c:	eef1 7a67 	vnegmi.f32	s15, s15
 8018410:	eeb0 7ae7 	vabs.f32	s14, s15
 8018414:	bf48      	it	mi
 8018416:	232d      	movmi	r3, #45	; 0x2d
 8018418:	eeb4 7a45 	vcmp.f32	s14, s10
 801841c:	bf48      	it	mi
 801841e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8018422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018426:	dd2b      	ble.n	8018480 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018428:	4b3b      	ldr	r3, [pc, #236]	; (8018518 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801842a:	9311      	str	r3, [sp, #68]	; 0x44
 801842c:	2366      	movs	r3, #102	; 0x66
 801842e:	9312      	str	r3, [sp, #72]	; 0x48
 8018430:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018432:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018436:	2b00      	cmp	r3, #0
 8018438:	f000 80da 	beq.w	80185f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801843c:	881a      	ldrh	r2, [r3, #0]
 801843e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018442:	a80d      	add	r0, sp, #52	; 0x34
 8018444:	9005      	str	r0, [sp, #20]
 8018446:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801844a:	9004      	str	r0, [sp, #16]
 801844c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801844e:	9003      	str	r0, [sp, #12]
 8018450:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018454:	9002      	str	r0, [sp, #8]
 8018456:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018458:	9001      	str	r0, [sp, #4]
 801845a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801845e:	9000      	str	r0, [sp, #0]
 8018460:	e9cd a606 	strd	sl, r6, [sp, #24]
 8018464:	a810      	add	r0, sp, #64	; 0x40
 8018466:	f7ff fbdd 	bl	8017c24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801846a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801846c:	b10b      	cbz	r3, 8018472 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801846e:	3302      	adds	r3, #2
 8018470:	9309      	str	r3, [sp, #36]	; 0x24
 8018472:	9b08      	ldr	r3, [sp, #32]
 8018474:	2b00      	cmp	r3, #0
 8018476:	f43f aefd 	beq.w	8018274 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801847a:	3301      	adds	r3, #1
 801847c:	9308      	str	r3, [sp, #32]
 801847e:	e6f9      	b.n	8018274 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018480:	eef4 7a67 	vcmp.f32	s15, s15
 8018484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018488:	d63a      	bvs.n	8018500 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801848a:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801848e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8018492:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8018496:	eeb0 6a67 	vmov.f32	s12, s15
 801849a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801849e:	eef0 5a47 	vmov.f32	s11, s14
 80184a2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80184a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80184aa:	da2d      	bge.n	8018508 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80184ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80184ae:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80184b2:	2100      	movs	r1, #0
 80184b4:	eef0 4a46 	vmov.f32	s9, s12
 80184b8:	ebaa 0202 	sub.w	r2, sl, r2
 80184bc:	eef4 6ac6 	vcmpe.f32	s13, s12
 80184c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80184c4:	b28d      	uxth	r5, r1
 80184c6:	db2c      	blt.n	8018522 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80184c8:	1a53      	subs	r3, r2, r1
 80184ca:	2b00      	cmp	r3, #0
 80184cc:	dd29      	ble.n	8018522 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80184ce:	3101      	adds	r1, #1
 80184d0:	2964      	cmp	r1, #100	; 0x64
 80184d2:	d025      	beq.n	8018520 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 80184d4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80184d8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80184dc:	ee17 3a10 	vmov	r3, s14
 80184e0:	2b09      	cmp	r3, #9
 80184e2:	bfa8      	it	ge
 80184e4:	2309      	movge	r3, #9
 80184e6:	ee07 3a10 	vmov	s14, r3
 80184ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80184ee:	f103 0030 	add.w	r0, r3, #48	; 0x30
 80184f2:	eee7 7a66 	vfms.f32	s15, s14, s13
 80184f6:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80184fa:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80184fe:	e7dd      	b.n	80184bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8018500:	4b06      	ldr	r3, [pc, #24]	; (801851c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8018502:	9311      	str	r3, [sp, #68]	; 0x44
 8018504:	236e      	movs	r3, #110	; 0x6e
 8018506:	e792      	b.n	801842e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8018508:	ee66 6a87 	vmul.f32	s13, s13, s14
 801850c:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8018510:	e7c7      	b.n	80184a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8018512:	bf00      	nop
 8018514:	7f7fffff 	.word	0x7f7fffff
 8018518:	006e0069 	.word	0x006e0069
 801851c:	0061006e 	.word	0x0061006e
 8018520:	2563      	movs	r5, #99	; 0x63
 8018522:	2a63      	cmp	r2, #99	; 0x63
 8018524:	bfd4      	ite	le
 8018526:	ebc5 0202 	rsble	r2, r5, r2
 801852a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801852e:	2a00      	cmp	r2, #0
 8018530:	dd43      	ble.n	80185ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018532:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018534:	2b00      	cmp	r3, #0
 8018536:	dd40      	ble.n	80185ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018538:	f04f 0901 	mov.w	r9, #1
 801853c:	210a      	movs	r1, #10
 801853e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8018542:	d30c      	bcc.n	801855e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8018544:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8018548:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801854c:	ee17 0a10 	vmov	r0, s14
 8018550:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018554:	fb01 0909 	mla	r9, r1, r9, r0
 8018558:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801855c:	e7ef      	b.n	801853e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801855e:	3501      	adds	r5, #1
 8018560:	930f      	str	r3, [sp, #60]	; 0x3c
 8018562:	b292      	uxth	r2, r2
 8018564:	230a      	movs	r3, #10
 8018566:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801856a:	4648      	mov	r0, r9
 801856c:	f7ff fb4e 	bl	8017c0c <_ZN8touchgfx7Unicode4itoaElPtti>
 8018570:	f1b9 0f01 	cmp.w	r9, #1
 8018574:	dc1f      	bgt.n	80185b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8018576:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801857a:	2b00      	cmp	r3, #0
 801857c:	bf0c      	ite	eq
 801857e:	2300      	moveq	r3, #0
 8018580:	232e      	movne	r3, #46	; 0x2e
 8018582:	aa44      	add	r2, sp, #272	; 0x110
 8018584:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018588:	eef4 7ae4 	vcmpe.f32	s15, s9
 801858c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018590:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8018594:	f6ff af4c 	blt.w	8018430 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018598:	2300      	movs	r3, #0
 801859a:	f838 2b02 	ldrh.w	r2, [r8], #2
 801859e:	1c59      	adds	r1, r3, #1
 80185a0:	b98a      	cbnz	r2, 80185c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80185a2:	b29b      	uxth	r3, r3
 80185a4:	2130      	movs	r1, #48	; 0x30
 80185a6:	b983      	cbnz	r3, 80185ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80185a8:	2331      	movs	r3, #49	; 0x31
 80185aa:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80185ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80185b0:	3b02      	subs	r3, #2
 80185b2:	9310      	str	r3, [sp, #64]	; 0x40
 80185b4:	e73c      	b.n	8018430 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80185b6:	232e      	movs	r3, #46	; 0x2e
 80185b8:	e7e3      	b.n	8018582 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 80185ba:	ab44      	add	r3, sp, #272	; 0x110
 80185bc:	3501      	adds	r5, #1
 80185be:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80185c2:	2300      	movs	r3, #0
 80185c4:	e7e0      	b.n	8018588 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80185c6:	460b      	mov	r3, r1
 80185c8:	e7e7      	b.n	801859a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 80185ca:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 80185ce:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 80185d2:	2808      	cmp	r0, #8
 80185d4:	d806      	bhi.n	80185e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 80185d6:	a944      	add	r1, sp, #272	; 0x110
 80185d8:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80185dc:	3201      	adds	r2, #1
 80185de:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80185e2:	e725      	b.n	8018430 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80185e4:	2a39      	cmp	r2, #57	; 0x39
 80185e6:	bf08      	it	eq
 80185e8:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 80185ec:	3b01      	subs	r3, #1
 80185ee:	e7da      	b.n	80185a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 80185f0:	9a08      	ldr	r2, [sp, #32]
 80185f2:	2a00      	cmp	r2, #0
 80185f4:	f43f af23 	beq.w	801843e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80185f8:	7812      	ldrb	r2, [r2, #0]
 80185fa:	e720      	b.n	801843e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80185fc:	2d00      	cmp	r5, #0
 80185fe:	f43f aede 	beq.w	80183be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018602:	782d      	ldrb	r5, [r5, #0]
 8018604:	e6db      	b.n	80183be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018606:	bf00      	nop

08018608 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8018608:	b507      	push	{r0, r1, r2, lr}
 801860a:	9300      	str	r3, [sp, #0]
 801860c:	4613      	mov	r3, r2
 801860e:	2200      	movs	r2, #0
 8018610:	f7ff fe1c 	bl	801824c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8018614:	b003      	add	sp, #12
 8018616:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801861c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801861c:	4b01      	ldr	r3, [pc, #4]	; (8018624 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801861e:	6018      	str	r0, [r3, #0]
 8018620:	4770      	bx	lr
 8018622:	bf00      	nop
 8018624:	20012ee4 	.word	0x20012ee4

08018628 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018628:	4b06      	ldr	r3, [pc, #24]	; (8018644 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801862a:	881a      	ldrh	r2, [r3, #0]
 801862c:	4282      	cmp	r2, r0
 801862e:	d807      	bhi.n	8018640 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018630:	4b05      	ldr	r3, [pc, #20]	; (8018648 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8018632:	881b      	ldrh	r3, [r3, #0]
 8018634:	4413      	add	r3, r2
 8018636:	4298      	cmp	r0, r3
 8018638:	bfac      	ite	ge
 801863a:	2000      	movge	r0, #0
 801863c:	2001      	movlt	r0, #1
 801863e:	4770      	bx	lr
 8018640:	2000      	movs	r0, #0
 8018642:	4770      	bx	lr
 8018644:	20012f04 	.word	0x20012f04
 8018648:	20012f08 	.word	0x20012f08

0801864c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801864c:	b508      	push	{r3, lr}
 801864e:	4601      	mov	r1, r0
 8018650:	f7ff ffea 	bl	8018628 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8018654:	b118      	cbz	r0, 801865e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8018656:	4b02      	ldr	r3, [pc, #8]	; (8018660 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018658:	681b      	ldr	r3, [r3, #0]
 801865a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801865e:	bd08      	pop	{r3, pc}
 8018660:	20012ee8 	.word	0x20012ee8

08018664 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8018664:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018666:	4c24      	ldr	r4, [pc, #144]	; (80186f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018668:	6823      	ldr	r3, [r4, #0]
 801866a:	2b00      	cmp	r3, #0
 801866c:	d042      	beq.n	80186f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801866e:	4a23      	ldr	r2, [pc, #140]	; (80186fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018670:	4d23      	ldr	r5, [pc, #140]	; (8018700 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8018672:	8811      	ldrh	r1, [r2, #0]
 8018674:	f8b5 c000 	ldrh.w	ip, [r5]
 8018678:	4822      	ldr	r0, [pc, #136]	; (8018704 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801867a:	4461      	add	r1, ip
 801867c:	1c4a      	adds	r2, r1, #1
 801867e:	f022 0201 	bic.w	r2, r2, #1
 8018682:	008f      	lsls	r7, r1, #2
 8018684:	0412      	lsls	r2, r2, #16
 8018686:	19de      	adds	r6, r3, r7
 8018688:	0c12      	lsrs	r2, r2, #16
 801868a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801868e:	6006      	str	r6, [r0, #0]
 8018690:	4e1d      	ldr	r6, [pc, #116]	; (8018708 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8018692:	19da      	adds	r2, r3, r7
 8018694:	6032      	str	r2, [r6, #0]
 8018696:	220e      	movs	r2, #14
 8018698:	fb02 f20c 	mul.w	r2, r2, ip
 801869c:	3203      	adds	r2, #3
 801869e:	f022 0203 	bic.w	r2, r2, #3
 80186a2:	443a      	add	r2, r7
 80186a4:	4f19      	ldr	r7, [pc, #100]	; (801870c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80186a6:	4413      	add	r3, r2
 80186a8:	603b      	str	r3, [r7, #0]
 80186aa:	4f19      	ldr	r7, [pc, #100]	; (8018710 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80186ac:	2300      	movs	r3, #0
 80186ae:	803b      	strh	r3, [r7, #0]
 80186b0:	4f18      	ldr	r7, [pc, #96]	; (8018714 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80186b2:	683f      	ldr	r7, [r7, #0]
 80186b4:	1aba      	subs	r2, r7, r2
 80186b6:	4f18      	ldr	r7, [pc, #96]	; (8018718 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80186b8:	603a      	str	r2, [r7, #0]
 80186ba:	4a18      	ldr	r2, [pc, #96]	; (801871c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80186bc:	469c      	mov	ip, r3
 80186be:	8013      	strh	r3, [r2, #0]
 80186c0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80186c4:	428b      	cmp	r3, r1
 80186c6:	d10d      	bne.n	80186e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80186c8:	882d      	ldrh	r5, [r5, #0]
 80186ca:	6830      	ldr	r0, [r6, #0]
 80186cc:	2300      	movs	r3, #0
 80186ce:	240e      	movs	r4, #14
 80186d0:	429d      	cmp	r5, r3
 80186d2:	d90f      	bls.n	80186f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80186d4:	fb04 0203 	mla	r2, r4, r3, r0
 80186d8:	3301      	adds	r3, #1
 80186da:	7b11      	ldrb	r1, [r2, #12]
 80186dc:	f36f 1145 	bfc	r1, #5, #1
 80186e0:	7311      	strb	r1, [r2, #12]
 80186e2:	e7f5      	b.n	80186d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80186e4:	6822      	ldr	r2, [r4, #0]
 80186e6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80186ea:	6802      	ldr	r2, [r0, #0]
 80186ec:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80186f0:	3301      	adds	r3, #1
 80186f2:	e7e7      	b.n	80186c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80186f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80186f6:	bf00      	nop
 80186f8:	20012ee8 	.word	0x20012ee8
 80186fc:	20012f04 	.word	0x20012f04
 8018700:	20012f08 	.word	0x20012f08
 8018704:	20012efc 	.word	0x20012efc
 8018708:	20012eec 	.word	0x20012eec
 801870c:	20012ef4 	.word	0x20012ef4
 8018710:	20012f06 	.word	0x20012f06
 8018714:	20012ef0 	.word	0x20012ef0
 8018718:	20012f00 	.word	0x20012f00
 801871c:	20012ef8 	.word	0x20012ef8

08018720 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018720:	4b06      	ldr	r3, [pc, #24]	; (801873c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8018722:	681b      	ldr	r3, [r3, #0]
 8018724:	b943      	cbnz	r3, 8018738 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018726:	b139      	cbz	r1, 8018738 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018728:	4b05      	ldr	r3, [pc, #20]	; (8018740 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801872a:	801a      	strh	r2, [r3, #0]
 801872c:	4b05      	ldr	r3, [pc, #20]	; (8018744 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801872e:	6019      	str	r1, [r3, #0]
 8018730:	4b05      	ldr	r3, [pc, #20]	; (8018748 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018732:	6018      	str	r0, [r3, #0]
 8018734:	f7ff bf96 	b.w	8018664 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018738:	4770      	bx	lr
 801873a:	bf00      	nop
 801873c:	20012ef4 	.word	0x20012ef4
 8018740:	20012f08 	.word	0x20012f08
 8018744:	20012ef0 	.word	0x20012ef0
 8018748:	20012ee8 	.word	0x20012ee8

0801874c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801874c:	b470      	push	{r4, r5, r6}
 801874e:	4c07      	ldr	r4, [pc, #28]	; (801876c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018750:	6826      	ldr	r6, [r4, #0]
 8018752:	4605      	mov	r5, r0
 8018754:	4610      	mov	r0, r2
 8018756:	9a03      	ldr	r2, [sp, #12]
 8018758:	b936      	cbnz	r6, 8018768 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801875a:	6025      	str	r5, [r4, #0]
 801875c:	4c04      	ldr	r4, [pc, #16]	; (8018770 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801875e:	8021      	strh	r1, [r4, #0]
 8018760:	bc70      	pop	{r4, r5, r6}
 8018762:	4619      	mov	r1, r3
 8018764:	f7ff bfdc 	b.w	8018720 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018768:	bc70      	pop	{r4, r5, r6}
 801876a:	4770      	bx	lr
 801876c:	20012f0c 	.word	0x20012f0c
 8018770:	20012f04 	.word	0x20012f04

08018774 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018774:	4a12      	ldr	r2, [pc, #72]	; (80187c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8018776:	8803      	ldrh	r3, [r0, #0]
 8018778:	8812      	ldrh	r2, [r2, #0]
 801877a:	4293      	cmp	r3, r2
 801877c:	d207      	bcs.n	801878e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801877e:	4a11      	ldr	r2, [pc, #68]	; (80187c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018780:	6812      	ldr	r2, [r2, #0]
 8018782:	2114      	movs	r1, #20
 8018784:	fb01 2303 	mla	r3, r1, r3, r2
 8018788:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801878c:	4770      	bx	lr
 801878e:	490e      	ldr	r1, [pc, #56]	; (80187c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018790:	8809      	ldrh	r1, [r1, #0]
 8018792:	4411      	add	r1, r2
 8018794:	428b      	cmp	r3, r1
 8018796:	da04      	bge.n	80187a2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8018798:	1a9b      	subs	r3, r3, r2
 801879a:	4a0c      	ldr	r2, [pc, #48]	; (80187cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801879c:	210e      	movs	r1, #14
 801879e:	6812      	ldr	r2, [r2, #0]
 80187a0:	e7f0      	b.n	8018784 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80187a2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80187a6:	4293      	cmp	r3, r2
 80187a8:	d108      	bne.n	80187bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80187aa:	4b09      	ldr	r3, [pc, #36]	; (80187d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80187ac:	781b      	ldrb	r3, [r3, #0]
 80187ae:	b91b      	cbnz	r3, 80187b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80187b0:	4b08      	ldr	r3, [pc, #32]	; (80187d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80187b2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80187b6:	4770      	bx	lr
 80187b8:	4b07      	ldr	r3, [pc, #28]	; (80187d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80187ba:	e7fa      	b.n	80187b2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80187bc:	2000      	movs	r0, #0
 80187be:	4770      	bx	lr
 80187c0:	20012f04 	.word	0x20012f04
 80187c4:	20012f0c 	.word	0x20012f0c
 80187c8:	20012f08 	.word	0x20012f08
 80187cc:	20012eec 	.word	0x20012eec
 80187d0:	20012e74 	.word	0x20012e74
 80187d4:	20012e76 	.word	0x20012e76
 80187d8:	20012e78 	.word	0x20012e78

080187dc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80187dc:	4a12      	ldr	r2, [pc, #72]	; (8018828 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80187de:	8803      	ldrh	r3, [r0, #0]
 80187e0:	8812      	ldrh	r2, [r2, #0]
 80187e2:	4293      	cmp	r3, r2
 80187e4:	d207      	bcs.n	80187f6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80187e6:	4a11      	ldr	r2, [pc, #68]	; (801882c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80187e8:	6812      	ldr	r2, [r2, #0]
 80187ea:	2114      	movs	r1, #20
 80187ec:	fb01 2303 	mla	r3, r1, r3, r2
 80187f0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80187f4:	4770      	bx	lr
 80187f6:	490e      	ldr	r1, [pc, #56]	; (8018830 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80187f8:	8809      	ldrh	r1, [r1, #0]
 80187fa:	4411      	add	r1, r2
 80187fc:	428b      	cmp	r3, r1
 80187fe:	da04      	bge.n	801880a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018800:	1a9b      	subs	r3, r3, r2
 8018802:	4a0c      	ldr	r2, [pc, #48]	; (8018834 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8018804:	210e      	movs	r1, #14
 8018806:	6812      	ldr	r2, [r2, #0]
 8018808:	e7f0      	b.n	80187ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801880a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801880e:	4293      	cmp	r3, r2
 8018810:	d108      	bne.n	8018824 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8018812:	4b09      	ldr	r3, [pc, #36]	; (8018838 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8018814:	781b      	ldrb	r3, [r3, #0]
 8018816:	b91b      	cbnz	r3, 8018820 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018818:	4b08      	ldr	r3, [pc, #32]	; (801883c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801881a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801881e:	4770      	bx	lr
 8018820:	4b07      	ldr	r3, [pc, #28]	; (8018840 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8018822:	e7fa      	b.n	801881a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8018824:	2000      	movs	r0, #0
 8018826:	4770      	bx	lr
 8018828:	20012f04 	.word	0x20012f04
 801882c:	20012f0c 	.word	0x20012f0c
 8018830:	20012f08 	.word	0x20012f08
 8018834:	20012eec 	.word	0x20012eec
 8018838:	20012e74 	.word	0x20012e74
 801883c:	20012e78 	.word	0x20012e78
 8018840:	20012e76 	.word	0x20012e76

08018844 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018844:	b510      	push	{r4, lr}
 8018846:	4a1f      	ldr	r2, [pc, #124]	; (80188c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018848:	880b      	ldrh	r3, [r1, #0]
 801884a:	8812      	ldrh	r2, [r2, #0]
 801884c:	4293      	cmp	r3, r2
 801884e:	d213      	bcs.n	8018878 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018850:	4a1d      	ldr	r2, [pc, #116]	; (80188c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8018852:	6812      	ldr	r2, [r2, #0]
 8018854:	2114      	movs	r1, #20
 8018856:	fb01 2303 	mla	r3, r1, r3, r2
 801885a:	8a1a      	ldrh	r2, [r3, #16]
 801885c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018860:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018864:	8a5b      	ldrh	r3, [r3, #18]
 8018866:	8004      	strh	r4, [r0, #0]
 8018868:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801886c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018870:	8041      	strh	r1, [r0, #2]
 8018872:	8082      	strh	r2, [r0, #4]
 8018874:	80c3      	strh	r3, [r0, #6]
 8018876:	e00e      	b.n	8018896 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018878:	4914      	ldr	r1, [pc, #80]	; (80188cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801887a:	8809      	ldrh	r1, [r1, #0]
 801887c:	4411      	add	r1, r2
 801887e:	428b      	cmp	r3, r1
 8018880:	da0a      	bge.n	8018898 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8018882:	1a9b      	subs	r3, r3, r2
 8018884:	4a12      	ldr	r2, [pc, #72]	; (80188d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8018886:	6812      	ldr	r2, [r2, #0]
 8018888:	210e      	movs	r1, #14
 801888a:	fb01 2303 	mla	r3, r1, r3, r2
 801888e:	681a      	ldr	r2, [r3, #0]
 8018890:	6002      	str	r2, [r0, #0]
 8018892:	685a      	ldr	r2, [r3, #4]
 8018894:	6042      	str	r2, [r0, #4]
 8018896:	bd10      	pop	{r4, pc}
 8018898:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801889c:	4293      	cmp	r3, r2
 801889e:	d10b      	bne.n	80188b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80188a0:	4b0c      	ldr	r3, [pc, #48]	; (80188d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80188a2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80188a6:	4b0c      	ldr	r3, [pc, #48]	; (80188d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80188a8:	8081      	strh	r1, [r0, #4]
 80188aa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80188ae:	80c2      	strh	r2, [r0, #6]
 80188b0:	2300      	movs	r3, #0
 80188b2:	8003      	strh	r3, [r0, #0]
 80188b4:	8043      	strh	r3, [r0, #2]
 80188b6:	e7ee      	b.n	8018896 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80188b8:	2300      	movs	r3, #0
 80188ba:	8003      	strh	r3, [r0, #0]
 80188bc:	8043      	strh	r3, [r0, #2]
 80188be:	8083      	strh	r3, [r0, #4]
 80188c0:	e7d8      	b.n	8018874 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80188c2:	bf00      	nop
 80188c4:	20012f04 	.word	0x20012f04
 80188c8:	20012f0c 	.word	0x20012f0c
 80188cc:	20012f08 	.word	0x20012f08
 80188d0:	20012eec 	.word	0x20012eec
 80188d4:	20012e70 	.word	0x20012e70
 80188d8:	20012e72 	.word	0x20012e72

080188dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80188dc:	4a17      	ldr	r2, [pc, #92]	; (801893c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80188de:	8803      	ldrh	r3, [r0, #0]
 80188e0:	8812      	ldrh	r2, [r2, #0]
 80188e2:	4293      	cmp	r3, r2
 80188e4:	d213      	bcs.n	801890e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80188e6:	4a16      	ldr	r2, [pc, #88]	; (8018940 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80188e8:	6812      	ldr	r2, [r2, #0]
 80188ea:	2114      	movs	r1, #20
 80188ec:	fb01 2303 	mla	r3, r1, r3, r2
 80188f0:	8a1a      	ldrh	r2, [r3, #16]
 80188f2:	8919      	ldrh	r1, [r3, #8]
 80188f4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80188f8:	428a      	cmp	r2, r1
 80188fa:	db1d      	blt.n	8018938 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80188fc:	8a58      	ldrh	r0, [r3, #18]
 80188fe:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8018902:	895b      	ldrh	r3, [r3, #10]
 8018904:	4298      	cmp	r0, r3
 8018906:	bfac      	ite	ge
 8018908:	2000      	movge	r0, #0
 801890a:	2001      	movlt	r0, #1
 801890c:	4770      	bx	lr
 801890e:	490d      	ldr	r1, [pc, #52]	; (8018944 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018910:	8809      	ldrh	r1, [r1, #0]
 8018912:	4411      	add	r1, r2
 8018914:	428b      	cmp	r3, r1
 8018916:	da0d      	bge.n	8018934 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018918:	1a9b      	subs	r3, r3, r2
 801891a:	4a0b      	ldr	r2, [pc, #44]	; (8018948 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801891c:	6812      	ldr	r2, [r2, #0]
 801891e:	210e      	movs	r1, #14
 8018920:	fb01 2303 	mla	r3, r1, r3, r2
 8018924:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018928:	891a      	ldrh	r2, [r3, #8]
 801892a:	4291      	cmp	r1, r2
 801892c:	db04      	blt.n	8018938 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801892e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018932:	e7e6      	b.n	8018902 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018934:	2000      	movs	r0, #0
 8018936:	4770      	bx	lr
 8018938:	2001      	movs	r0, #1
 801893a:	4770      	bx	lr
 801893c:	20012f04 	.word	0x20012f04
 8018940:	20012f0c 	.word	0x20012f0c
 8018944:	20012f08 	.word	0x20012f08
 8018948:	20012eec 	.word	0x20012eec

0801894c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801894c:	4a12      	ldr	r2, [pc, #72]	; (8018998 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801894e:	8803      	ldrh	r3, [r0, #0]
 8018950:	8811      	ldrh	r1, [r2, #0]
 8018952:	428b      	cmp	r3, r1
 8018954:	d20b      	bcs.n	801896e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8018956:	4a11      	ldr	r2, [pc, #68]	; (801899c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018958:	6812      	ldr	r2, [r2, #0]
 801895a:	b112      	cbz	r2, 8018962 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801895c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018960:	b9c0      	cbnz	r0, 8018994 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8018962:	4a0f      	ldr	r2, [pc, #60]	; (80189a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8018964:	6811      	ldr	r1, [r2, #0]
 8018966:	2214      	movs	r2, #20
 8018968:	4353      	muls	r3, r2
 801896a:	58c8      	ldr	r0, [r1, r3]
 801896c:	4770      	bx	lr
 801896e:	4a0d      	ldr	r2, [pc, #52]	; (80189a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018970:	8812      	ldrh	r2, [r2, #0]
 8018972:	440a      	add	r2, r1
 8018974:	4293      	cmp	r3, r2
 8018976:	da04      	bge.n	8018982 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018978:	4a08      	ldr	r2, [pc, #32]	; (801899c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801897a:	6812      	ldr	r2, [r2, #0]
 801897c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018980:	4770      	bx	lr
 8018982:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018986:	4293      	cmp	r3, r2
 8018988:	d103      	bne.n	8018992 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801898a:	4b07      	ldr	r3, [pc, #28]	; (80189a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801898c:	681b      	ldr	r3, [r3, #0]
 801898e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018990:	4770      	bx	lr
 8018992:	2000      	movs	r0, #0
 8018994:	4770      	bx	lr
 8018996:	bf00      	nop
 8018998:	20012f04 	.word	0x20012f04
 801899c:	20012ee8 	.word	0x20012ee8
 80189a0:	20012f0c 	.word	0x20012f0c
 80189a4:	20012f08 	.word	0x20012f08
 80189a8:	20012e7c 	.word	0x20012e7c

080189ac <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80189ac:	4b24      	ldr	r3, [pc, #144]	; (8018a40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80189ae:	8802      	ldrh	r2, [r0, #0]
 80189b0:	8818      	ldrh	r0, [r3, #0]
 80189b2:	4282      	cmp	r2, r0
 80189b4:	d221      	bcs.n	80189fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80189b6:	4b23      	ldr	r3, [pc, #140]	; (8018a44 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80189b8:	6819      	ldr	r1, [r3, #0]
 80189ba:	2314      	movs	r3, #20
 80189bc:	fb03 1302 	mla	r3, r3, r2, r1
 80189c0:	6858      	ldr	r0, [r3, #4]
 80189c2:	2800      	cmp	r0, #0
 80189c4:	d03a      	beq.n	8018a3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80189c6:	4920      	ldr	r1, [pc, #128]	; (8018a48 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80189c8:	6809      	ldr	r1, [r1, #0]
 80189ca:	2900      	cmp	r1, #0
 80189cc:	d036      	beq.n	8018a3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80189ce:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80189d2:	2900      	cmp	r1, #0
 80189d4:	d032      	beq.n	8018a3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80189d6:	891a      	ldrh	r2, [r3, #8]
 80189d8:	8958      	ldrh	r0, [r3, #10]
 80189da:	4350      	muls	r0, r2
 80189dc:	7c5a      	ldrb	r2, [r3, #17]
 80189de:	7cdb      	ldrb	r3, [r3, #19]
 80189e0:	0952      	lsrs	r2, r2, #5
 80189e2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80189e6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80189ea:	2b0b      	cmp	r3, #11
 80189ec:	bf18      	it	ne
 80189ee:	0040      	lslne	r0, r0, #1
 80189f0:	3003      	adds	r0, #3
 80189f2:	f020 0003 	bic.w	r0, r0, #3
 80189f6:	4408      	add	r0, r1
 80189f8:	4770      	bx	lr
 80189fa:	4b14      	ldr	r3, [pc, #80]	; (8018a4c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80189fc:	881b      	ldrh	r3, [r3, #0]
 80189fe:	4403      	add	r3, r0
 8018a00:	429a      	cmp	r2, r3
 8018a02:	da1a      	bge.n	8018a3a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018a04:	4b12      	ldr	r3, [pc, #72]	; (8018a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8018a06:	681b      	ldr	r3, [r3, #0]
 8018a08:	1a10      	subs	r0, r2, r0
 8018a0a:	210e      	movs	r1, #14
 8018a0c:	fb01 3000 	mla	r0, r1, r0, r3
 8018a10:	7b03      	ldrb	r3, [r0, #12]
 8018a12:	f003 031f 	and.w	r3, r3, #31
 8018a16:	2b0b      	cmp	r3, #11
 8018a18:	d10b      	bne.n	8018a32 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018a1a:	8903      	ldrh	r3, [r0, #8]
 8018a1c:	8940      	ldrh	r0, [r0, #10]
 8018a1e:	4358      	muls	r0, r3
 8018a20:	4b09      	ldr	r3, [pc, #36]	; (8018a48 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018a22:	6819      	ldr	r1, [r3, #0]
 8018a24:	3003      	adds	r0, #3
 8018a26:	f020 0303 	bic.w	r3, r0, #3
 8018a2a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018a2e:	4418      	add	r0, r3
 8018a30:	4770      	bx	lr
 8018a32:	2b0d      	cmp	r3, #13
 8018a34:	d101      	bne.n	8018a3a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018a36:	300d      	adds	r0, #13
 8018a38:	4770      	bx	lr
 8018a3a:	2000      	movs	r0, #0
 8018a3c:	4770      	bx	lr
 8018a3e:	bf00      	nop
 8018a40:	20012f04 	.word	0x20012f04
 8018a44:	20012f0c 	.word	0x20012f0c
 8018a48:	20012ee8 	.word	0x20012ee8
 8018a4c:	20012f08 	.word	0x20012f08
 8018a50:	20012eec 	.word	0x20012eec

08018a54 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018a54:	b510      	push	{r4, lr}
 8018a56:	4a17      	ldr	r2, [pc, #92]	; (8018ab4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018a58:	8803      	ldrh	r3, [r0, #0]
 8018a5a:	8812      	ldrh	r2, [r2, #0]
 8018a5c:	4293      	cmp	r3, r2
 8018a5e:	d20c      	bcs.n	8018a7a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018a60:	4a15      	ldr	r2, [pc, #84]	; (8018ab8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8018a62:	6812      	ldr	r2, [r2, #0]
 8018a64:	2114      	movs	r1, #20
 8018a66:	fb01 2303 	mla	r3, r1, r3, r2
 8018a6a:	7c58      	ldrb	r0, [r3, #17]
 8018a6c:	0942      	lsrs	r2, r0, #5
 8018a6e:	7cd8      	ldrb	r0, [r3, #19]
 8018a70:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8018a74:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018a78:	bd10      	pop	{r4, pc}
 8018a7a:	4910      	ldr	r1, [pc, #64]	; (8018abc <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018a7c:	8809      	ldrh	r1, [r1, #0]
 8018a7e:	4411      	add	r1, r2
 8018a80:	428b      	cmp	r3, r1
 8018a82:	da09      	bge.n	8018a98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8018a84:	1a9b      	subs	r3, r3, r2
 8018a86:	4a0e      	ldr	r2, [pc, #56]	; (8018ac0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018a88:	6812      	ldr	r2, [r2, #0]
 8018a8a:	210e      	movs	r1, #14
 8018a8c:	fb01 2303 	mla	r3, r1, r3, r2
 8018a90:	7b18      	ldrb	r0, [r3, #12]
 8018a92:	f000 001f 	and.w	r0, r0, #31
 8018a96:	e7ef      	b.n	8018a78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018a98:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018a9c:	4293      	cmp	r3, r2
 8018a9e:	d106      	bne.n	8018aae <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018aa0:	f7ea fe9e 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 8018aa4:	6803      	ldr	r3, [r0, #0]
 8018aa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018aaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018aac:	4718      	bx	r3
 8018aae:	2000      	movs	r0, #0
 8018ab0:	e7e2      	b.n	8018a78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018ab2:	bf00      	nop
 8018ab4:	20012f04 	.word	0x20012f04
 8018ab8:	20012f0c 	.word	0x20012f0c
 8018abc:	20012f08 	.word	0x20012f08
 8018ac0:	20012eec 	.word	0x20012eec

08018ac4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018ac4:	2010      	movs	r0, #16
 8018ac6:	4770      	bx	lr

08018ac8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018ac8:	2000      	movs	r0, #0
 8018aca:	4770      	bx	lr

08018acc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018acc:	4b02      	ldr	r3, [pc, #8]	; (8018ad8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018ace:	8818      	ldrh	r0, [r3, #0]
 8018ad0:	0040      	lsls	r0, r0, #1
 8018ad2:	b280      	uxth	r0, r0
 8018ad4:	4770      	bx	lr
 8018ad6:	bf00      	nop
 8018ad8:	20012e76 	.word	0x20012e76

08018adc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018adc:	2bff      	cmp	r3, #255	; 0xff
 8018ade:	d050      	beq.n	8018b82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018ae0:	2a0b      	cmp	r2, #11
 8018ae2:	d04a      	beq.n	8018b7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018ae4:	d80e      	bhi.n	8018b04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018ae6:	2a03      	cmp	r2, #3
 8018ae8:	d03f      	beq.n	8018b6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018aea:	d804      	bhi.n	8018af6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018aec:	2a01      	cmp	r2, #1
 8018aee:	d03e      	beq.n	8018b6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018af0:	d93f      	bls.n	8018b72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8018af2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018af4:	4770      	bx	lr
 8018af6:	2a09      	cmp	r2, #9
 8018af8:	d03f      	beq.n	8018b7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018afa:	d83c      	bhi.n	8018b76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018afc:	2a08      	cmp	r2, #8
 8018afe:	d03a      	beq.n	8018b76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018b00:	2000      	movs	r0, #0
 8018b02:	4770      	bx	lr
 8018b04:	2a2f      	cmp	r2, #47	; 0x2f
 8018b06:	d024      	beq.n	8018b52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018b08:	d80d      	bhi.n	8018b26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018b0a:	2a2d      	cmp	r2, #45	; 0x2d
 8018b0c:	d014      	beq.n	8018b38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018b0e:	d826      	bhi.n	8018b5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018b10:	2a2c      	cmp	r2, #44	; 0x2c
 8018b12:	d1f5      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b14:	684b      	ldr	r3, [r1, #4]
 8018b16:	781b      	ldrb	r3, [r3, #0]
 8018b18:	2b01      	cmp	r3, #1
 8018b1a:	d018      	beq.n	8018b4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018b1c:	d323      	bcc.n	8018b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018b1e:	2b02      	cmp	r3, #2
 8018b20:	d1ee      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b22:	6880      	ldr	r0, [r0, #8]
 8018b24:	4770      	bx	lr
 8018b26:	2a31      	cmp	r2, #49	; 0x31
 8018b28:	d004      	beq.n	8018b34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018b2a:	d328      	bcc.n	8018b7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018b2c:	2a32      	cmp	r2, #50	; 0x32
 8018b2e:	d026      	beq.n	8018b7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018b30:	2a33      	cmp	r2, #51	; 0x33
 8018b32:	d1e5      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b34:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018b36:	4770      	bx	lr
 8018b38:	684b      	ldr	r3, [r1, #4]
 8018b3a:	781b      	ldrb	r3, [r3, #0]
 8018b3c:	2b01      	cmp	r3, #1
 8018b3e:	d004      	beq.n	8018b4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018b40:	d30b      	bcc.n	8018b5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018b42:	2b02      	cmp	r3, #2
 8018b44:	d1dc      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b46:	6900      	ldr	r0, [r0, #16]
 8018b48:	4770      	bx	lr
 8018b4a:	6a00      	ldr	r0, [r0, #32]
 8018b4c:	4770      	bx	lr
 8018b4e:	6980      	ldr	r0, [r0, #24]
 8018b50:	4770      	bx	lr
 8018b52:	684b      	ldr	r3, [r1, #4]
 8018b54:	781b      	ldrb	r3, [r3, #0]
 8018b56:	2b00      	cmp	r3, #0
 8018b58:	d1d2      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b5a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018b5c:	4770      	bx	lr
 8018b5e:	684b      	ldr	r3, [r1, #4]
 8018b60:	781b      	ldrb	r3, [r3, #0]
 8018b62:	2b00      	cmp	r3, #0
 8018b64:	d1cc      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b66:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018b68:	4770      	bx	lr
 8018b6a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018b6c:	4770      	bx	lr
 8018b6e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018b70:	4770      	bx	lr
 8018b72:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018b74:	4770      	bx	lr
 8018b76:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018b78:	4770      	bx	lr
 8018b7a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018b7c:	4770      	bx	lr
 8018b7e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018b80:	4770      	bx	lr
 8018b82:	2a0b      	cmp	r2, #11
 8018b84:	d049      	beq.n	8018c1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018b86:	d80e      	bhi.n	8018ba6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018b88:	2a03      	cmp	r2, #3
 8018b8a:	d040      	beq.n	8018c0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018b8c:	d804      	bhi.n	8018b98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018b8e:	2a01      	cmp	r2, #1
 8018b90:	d03f      	beq.n	8018c12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018b92:	d940      	bls.n	8018c16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018b94:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8018b96:	4770      	bx	lr
 8018b98:	2a09      	cmp	r2, #9
 8018b9a:	d03e      	beq.n	8018c1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018b9c:	d801      	bhi.n	8018ba2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018b9e:	2a08      	cmp	r2, #8
 8018ba0:	d1ae      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018ba2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8018ba4:	4770      	bx	lr
 8018ba6:	2a2f      	cmp	r2, #47	; 0x2f
 8018ba8:	d024      	beq.n	8018bf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018baa:	d80d      	bhi.n	8018bc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018bac:	2a2d      	cmp	r2, #45	; 0x2d
 8018bae:	d014      	beq.n	8018bda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018bb0:	d826      	bhi.n	8018c00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8018bb2:	2a2c      	cmp	r2, #44	; 0x2c
 8018bb4:	d1a4      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018bb6:	684b      	ldr	r3, [r1, #4]
 8018bb8:	781b      	ldrb	r3, [r3, #0]
 8018bba:	2b01      	cmp	r3, #1
 8018bbc:	d018      	beq.n	8018bf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018bbe:	d324      	bcc.n	8018c0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018bc0:	2b02      	cmp	r3, #2
 8018bc2:	d19d      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018bc4:	68c0      	ldr	r0, [r0, #12]
 8018bc6:	4770      	bx	lr
 8018bc8:	2a31      	cmp	r2, #49	; 0x31
 8018bca:	d004      	beq.n	8018bd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018bcc:	d327      	bcc.n	8018c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018bce:	2a32      	cmp	r2, #50	; 0x32
 8018bd0:	d025      	beq.n	8018c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018bd2:	2a33      	cmp	r2, #51	; 0x33
 8018bd4:	d194      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018bd6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018bd8:	4770      	bx	lr
 8018bda:	684b      	ldr	r3, [r1, #4]
 8018bdc:	781b      	ldrb	r3, [r3, #0]
 8018bde:	2b01      	cmp	r3, #1
 8018be0:	d004      	beq.n	8018bec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018be2:	d30b      	bcc.n	8018bfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8018be4:	2b02      	cmp	r3, #2
 8018be6:	d18b      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018be8:	6940      	ldr	r0, [r0, #20]
 8018bea:	4770      	bx	lr
 8018bec:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018bee:	4770      	bx	lr
 8018bf0:	69c0      	ldr	r0, [r0, #28]
 8018bf2:	4770      	bx	lr
 8018bf4:	684b      	ldr	r3, [r1, #4]
 8018bf6:	781b      	ldrb	r3, [r3, #0]
 8018bf8:	2b00      	cmp	r3, #0
 8018bfa:	d181      	bne.n	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018bfc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018bfe:	4770      	bx	lr
 8018c00:	684b      	ldr	r3, [r1, #4]
 8018c02:	781b      	ldrb	r3, [r3, #0]
 8018c04:	2b00      	cmp	r3, #0
 8018c06:	f47f af7b 	bne.w	8018b00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018c0a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018c0c:	4770      	bx	lr
 8018c0e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018c10:	4770      	bx	lr
 8018c12:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018c14:	4770      	bx	lr
 8018c16:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018c18:	4770      	bx	lr
 8018c1a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018c1c:	4770      	bx	lr
 8018c1e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018c20:	4770      	bx	lr

08018c22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c26:	b087      	sub	sp, #28
 8018c28:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018c2a:	9205      	str	r2, [sp, #20]
 8018c2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018c30:	9202      	str	r2, [sp, #8]
 8018c32:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018c36:	9101      	str	r1, [sp, #4]
 8018c38:	6841      	ldr	r1, [r0, #4]
 8018c3a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018c3e:	fb01 2404 	mla	r4, r1, r4, r2
 8018c42:	6802      	ldr	r2, [r0, #0]
 8018c44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018c48:	f8de 2000 	ldr.w	r2, [lr]
 8018c4c:	9203      	str	r2, [sp, #12]
 8018c4e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018c52:	3204      	adds	r2, #4
 8018c54:	9204      	str	r2, [sp, #16]
 8018c56:	9a02      	ldr	r2, [sp, #8]
 8018c58:	43d6      	mvns	r6, r2
 8018c5a:	b2f6      	uxtb	r6, r6
 8018c5c:	9a01      	ldr	r2, [sp, #4]
 8018c5e:	2a00      	cmp	r2, #0
 8018c60:	dc03      	bgt.n	8018c6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018c62:	9a05      	ldr	r2, [sp, #20]
 8018c64:	2a00      	cmp	r2, #0
 8018c66:	f340 8129 	ble.w	8018ebc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018c6a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018c6c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018c70:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018c74:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018c78:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018c7a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018c7e:	2b00      	cmp	r3, #0
 8018c80:	dd0e      	ble.n	8018ca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018c82:	1408      	asrs	r0, r1, #16
 8018c84:	d405      	bmi.n	8018c92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018c86:	4560      	cmp	r0, ip
 8018c88:	da03      	bge.n	8018c92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018c8a:	1410      	asrs	r0, r2, #16
 8018c8c:	d401      	bmi.n	8018c92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018c8e:	42b8      	cmp	r0, r7
 8018c90:	db07      	blt.n	8018ca2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018c92:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018c94:	4401      	add	r1, r0
 8018c96:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018c98:	3b01      	subs	r3, #1
 8018c9a:	4402      	add	r2, r0
 8018c9c:	3402      	adds	r4, #2
 8018c9e:	e7ee      	b.n	8018c7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018ca0:	d071      	beq.n	8018d86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018ca2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018ca4:	1e58      	subs	r0, r3, #1
 8018ca6:	fb05 1500 	mla	r5, r5, r0, r1
 8018caa:	142d      	asrs	r5, r5, #16
 8018cac:	d45f      	bmi.n	8018d6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018cae:	4565      	cmp	r5, ip
 8018cb0:	da5d      	bge.n	8018d6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018cb2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018cb4:	fb05 2000 	mla	r0, r5, r0, r2
 8018cb8:	1400      	asrs	r0, r0, #16
 8018cba:	d458      	bmi.n	8018d6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018cbc:	42b8      	cmp	r0, r7
 8018cbe:	da56      	bge.n	8018d6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018cc0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018cc4:	4699      	mov	r9, r3
 8018cc6:	46a2      	mov	sl, r4
 8018cc8:	f1b9 0f00 	cmp.w	r9, #0
 8018ccc:	dd57      	ble.n	8018d7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018cce:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018cd2:	9803      	ldr	r0, [sp, #12]
 8018cd4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018cd8:	140d      	asrs	r5, r1, #16
 8018cda:	fb07 000c 	mla	r0, r7, ip, r0
 8018cde:	f109 39ff 	add.w	r9, r9, #4294967295
 8018ce2:	5d40      	ldrb	r0, [r0, r5]
 8018ce4:	9d04      	ldr	r5, [sp, #16]
 8018ce6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018cea:	f8ba 5000 	ldrh.w	r5, [sl]
 8018cee:	122f      	asrs	r7, r5, #8
 8018cf0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018cf4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018cf8:	fb17 f706 	smulbb	r7, r7, r6
 8018cfc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018d00:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018d04:	00ed      	lsls	r5, r5, #3
 8018d06:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018d0a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018d0e:	10c7      	asrs	r7, r0, #3
 8018d10:	b2ed      	uxtb	r5, r5
 8018d12:	00c0      	lsls	r0, r0, #3
 8018d14:	fb18 f806 	smulbb	r8, r8, r6
 8018d18:	fb15 f506 	smulbb	r5, r5, r6
 8018d1c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018d20:	b2c0      	uxtb	r0, r0
 8018d22:	fa1f fc8c 	uxth.w	ip, ip
 8018d26:	fb07 870b 	mla	r7, r7, fp, r8
 8018d2a:	fb00 500b 	mla	r0, r0, fp, r5
 8018d2e:	b280      	uxth	r0, r0
 8018d30:	b2bf      	uxth	r7, r7
 8018d32:	f10c 0501 	add.w	r5, ip, #1
 8018d36:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018d3a:	f107 0801 	add.w	r8, r7, #1
 8018d3e:	1c45      	adds	r5, r0, #1
 8018d40:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018d44:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018d48:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018d4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018d4e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018d52:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018d56:	ea45 0c0c 	orr.w	ip, r5, ip
 8018d5a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018d5e:	4401      	add	r1, r0
 8018d60:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018d62:	ea4c 0c08 	orr.w	ip, ip, r8
 8018d66:	f82a cb02 	strh.w	ip, [sl], #2
 8018d6a:	4402      	add	r2, r0
 8018d6c:	e7ac      	b.n	8018cc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018d6e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018d72:	f04f 0800 	mov.w	r8, #0
 8018d76:	eb03 0008 	add.w	r0, r3, r8
 8018d7a:	2800      	cmp	r0, #0
 8018d7c:	dc41      	bgt.n	8018e02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018d7e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018d82:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018d86:	9b01      	ldr	r3, [sp, #4]
 8018d88:	2b00      	cmp	r3, #0
 8018d8a:	f340 8097 	ble.w	8018ebc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018d8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018d92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018d96:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018d9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018da0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018da4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018da8:	eef0 6a62 	vmov.f32	s13, s5
 8018dac:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018db0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018db4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018db8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018dbc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018dc0:	eef0 6a43 	vmov.f32	s13, s6
 8018dc4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018dc8:	ee12 2a90 	vmov	r2, s5
 8018dcc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018dd0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018dd4:	ee13 2a10 	vmov	r2, s6
 8018dd8:	9313      	str	r3, [sp, #76]	; 0x4c
 8018dda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ddc:	fb92 f3f3 	sdiv	r3, r2, r3
 8018de0:	9314      	str	r3, [sp, #80]	; 0x50
 8018de2:	9b01      	ldr	r3, [sp, #4]
 8018de4:	9a05      	ldr	r2, [sp, #20]
 8018de6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018dea:	3b01      	subs	r3, #1
 8018dec:	9301      	str	r3, [sp, #4]
 8018dee:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018df2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018df4:	eeb0 3a67 	vmov.f32	s6, s15
 8018df8:	bf08      	it	eq
 8018dfa:	4613      	moveq	r3, r2
 8018dfc:	eef0 2a47 	vmov.f32	s5, s14
 8018e00:	e72c      	b.n	8018c5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018e02:	140f      	asrs	r7, r1, #16
 8018e04:	d453      	bmi.n	8018eae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018e06:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018e0a:	42bd      	cmp	r5, r7
 8018e0c:	dd4f      	ble.n	8018eae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018e0e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018e12:	d44c      	bmi.n	8018eae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018e14:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018e18:	4560      	cmp	r0, ip
 8018e1a:	dd48      	ble.n	8018eae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018e1c:	9803      	ldr	r0, [sp, #12]
 8018e1e:	b22d      	sxth	r5, r5
 8018e20:	fb0c 0505 	mla	r5, ip, r5, r0
 8018e24:	5de8      	ldrb	r0, [r5, r7]
 8018e26:	9d04      	ldr	r5, [sp, #16]
 8018e28:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018e2c:	f06f 0501 	mvn.w	r5, #1
 8018e30:	fb05 fb08 	mul.w	fp, r5, r8
 8018e34:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018e38:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018e3c:	122f      	asrs	r7, r5, #8
 8018e3e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018e42:	fb17 f706 	smulbb	r7, r7, r6
 8018e46:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018e4a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018e4e:	00ed      	lsls	r5, r5, #3
 8018e50:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018e54:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018e58:	10c7      	asrs	r7, r0, #3
 8018e5a:	b2ed      	uxtb	r5, r5
 8018e5c:	00c0      	lsls	r0, r0, #3
 8018e5e:	fb19 f906 	smulbb	r9, r9, r6
 8018e62:	fb15 f506 	smulbb	r5, r5, r6
 8018e66:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018e6a:	b2c0      	uxtb	r0, r0
 8018e6c:	fa1f fc8c 	uxth.w	ip, ip
 8018e70:	fb07 970a 	mla	r7, r7, sl, r9
 8018e74:	fb00 500a 	mla	r0, r0, sl, r5
 8018e78:	b2bf      	uxth	r7, r7
 8018e7a:	b280      	uxth	r0, r0
 8018e7c:	f10c 0501 	add.w	r5, ip, #1
 8018e80:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018e84:	f107 0901 	add.w	r9, r7, #1
 8018e88:	1c45      	adds	r5, r0, #1
 8018e8a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018e8e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018e92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018e96:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018e9a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018e9e:	ea45 0c0c 	orr.w	ip, r5, ip
 8018ea2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018ea6:	ea4c 0c09 	orr.w	ip, ip, r9
 8018eaa:	f824 c00b 	strh.w	ip, [r4, fp]
 8018eae:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018eb0:	4401      	add	r1, r0
 8018eb2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018eb4:	f108 38ff 	add.w	r8, r8, #4294967295
 8018eb8:	4402      	add	r2, r0
 8018eba:	e75c      	b.n	8018d76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018ebc:	b007      	add	sp, #28
 8018ebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ec2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ec6:	b085      	sub	sp, #20
 8018ec8:	4693      	mov	fp, r2
 8018eca:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018ecc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018ece:	6870      	ldr	r0, [r6, #4]
 8018ed0:	9100      	str	r1, [sp, #0]
 8018ed2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018ed6:	fb00 2404 	mla	r4, r0, r4, r2
 8018eda:	6832      	ldr	r2, [r6, #0]
 8018edc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018ee0:	682a      	ldr	r2, [r5, #0]
 8018ee2:	9201      	str	r2, [sp, #4]
 8018ee4:	686a      	ldr	r2, [r5, #4]
 8018ee6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018eea:	3204      	adds	r2, #4
 8018eec:	9202      	str	r2, [sp, #8]
 8018eee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018ef2:	9a00      	ldr	r2, [sp, #0]
 8018ef4:	2a00      	cmp	r2, #0
 8018ef6:	dc03      	bgt.n	8018f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018ef8:	f1bb 0f00 	cmp.w	fp, #0
 8018efc:	f340 80a0 	ble.w	8019040 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018f00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018f02:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018f06:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018f0a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018f0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018f10:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018f14:	2b00      	cmp	r3, #0
 8018f16:	dd0c      	ble.n	8018f32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018f18:	1406      	asrs	r6, r0, #16
 8018f1a:	d405      	bmi.n	8018f28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018f1c:	454e      	cmp	r6, r9
 8018f1e:	da03      	bge.n	8018f28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018f20:	1416      	asrs	r6, r2, #16
 8018f22:	d401      	bmi.n	8018f28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018f24:	4546      	cmp	r6, r8
 8018f26:	db05      	blt.n	8018f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018f28:	4470      	add	r0, lr
 8018f2a:	4462      	add	r2, ip
 8018f2c:	3b01      	subs	r3, #1
 8018f2e:	3402      	adds	r4, #2
 8018f30:	e7f0      	b.n	8018f14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018f32:	d00f      	beq.n	8018f54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018f34:	1e5e      	subs	r6, r3, #1
 8018f36:	fb0e 0706 	mla	r7, lr, r6, r0
 8018f3a:	143f      	asrs	r7, r7, #16
 8018f3c:	d541      	bpl.n	8018fc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018f3e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018f42:	4698      	mov	r8, r3
 8018f44:	9603      	str	r6, [sp, #12]
 8018f46:	f1b8 0f00 	cmp.w	r8, #0
 8018f4a:	dc59      	bgt.n	8019000 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018f4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018f50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018f54:	9b00      	ldr	r3, [sp, #0]
 8018f56:	2b00      	cmp	r3, #0
 8018f58:	dd72      	ble.n	8019040 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018f5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018f5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018f62:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018f66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018f68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018f6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018f70:	eeb0 6a62 	vmov.f32	s12, s5
 8018f74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018f78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018f80:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018f84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018f88:	eeb0 6a43 	vmov.f32	s12, s6
 8018f8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018f90:	ee12 2a90 	vmov	r2, s5
 8018f94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018f98:	fb92 fef3 	sdiv	lr, r2, r3
 8018f9c:	ee13 2a10 	vmov	r2, s6
 8018fa0:	fb92 fcf3 	sdiv	ip, r2, r3
 8018fa4:	9b00      	ldr	r3, [sp, #0]
 8018fa6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018faa:	3b01      	subs	r3, #1
 8018fac:	9300      	str	r3, [sp, #0]
 8018fae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018fb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018fb4:	eeb0 3a67 	vmov.f32	s6, s15
 8018fb8:	bf08      	it	eq
 8018fba:	465b      	moveq	r3, fp
 8018fbc:	eef0 2a47 	vmov.f32	s5, s14
 8018fc0:	e797      	b.n	8018ef2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018fc2:	454f      	cmp	r7, r9
 8018fc4:	dabb      	bge.n	8018f3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018fc6:	fb0c 2606 	mla	r6, ip, r6, r2
 8018fca:	1436      	asrs	r6, r6, #16
 8018fcc:	d4b7      	bmi.n	8018f3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018fce:	4546      	cmp	r6, r8
 8018fd0:	dab5      	bge.n	8018f3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018fd2:	461e      	mov	r6, r3
 8018fd4:	46a0      	mov	r8, r4
 8018fd6:	2e00      	cmp	r6, #0
 8018fd8:	ddb8      	ble.n	8018f4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018fda:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018fde:	9901      	ldr	r1, [sp, #4]
 8018fe0:	1417      	asrs	r7, r2, #16
 8018fe2:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018fe6:	fb0a 1707 	mla	r7, sl, r7, r1
 8018fea:	9902      	ldr	r1, [sp, #8]
 8018fec:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018ff0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018ff4:	f828 7b02 	strh.w	r7, [r8], #2
 8018ff8:	4470      	add	r0, lr
 8018ffa:	4462      	add	r2, ip
 8018ffc:	3e01      	subs	r6, #1
 8018ffe:	e7ea      	b.n	8018fd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019000:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019004:	d417      	bmi.n	8019036 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019006:	68ae      	ldr	r6, [r5, #8]
 8019008:	454e      	cmp	r6, r9
 801900a:	dd14      	ble.n	8019036 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801900c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019010:	d411      	bmi.n	8019036 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019012:	68ef      	ldr	r7, [r5, #12]
 8019014:	4557      	cmp	r7, sl
 8019016:	dd0e      	ble.n	8019036 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019018:	9f01      	ldr	r7, [sp, #4]
 801901a:	b236      	sxth	r6, r6
 801901c:	fb0a 7606 	mla	r6, sl, r6, r7
 8019020:	9f02      	ldr	r7, [sp, #8]
 8019022:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019026:	f06f 0101 	mvn.w	r1, #1
 801902a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801902e:	fb01 f608 	mul.w	r6, r1, r8
 8019032:	9903      	ldr	r1, [sp, #12]
 8019034:	538f      	strh	r7, [r1, r6]
 8019036:	4470      	add	r0, lr
 8019038:	4462      	add	r2, ip
 801903a:	f108 38ff 	add.w	r8, r8, #4294967295
 801903e:	e782      	b.n	8018f46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019040:	b005      	add	sp, #20
 8019042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019046 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019046:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801904a:	b087      	sub	sp, #28
 801904c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801904e:	9205      	str	r2, [sp, #20]
 8019050:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019054:	9203      	str	r2, [sp, #12]
 8019056:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801905a:	9102      	str	r1, [sp, #8]
 801905c:	6861      	ldr	r1, [r4, #4]
 801905e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019062:	fb01 2000 	mla	r0, r1, r0, r2
 8019066:	6822      	ldr	r2, [r4, #0]
 8019068:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801906c:	9200      	str	r2, [sp, #0]
 801906e:	f8dc 2000 	ldr.w	r2, [ip]
 8019072:	9204      	str	r2, [sp, #16]
 8019074:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019078:	3204      	adds	r2, #4
 801907a:	9201      	str	r2, [sp, #4]
 801907c:	9a03      	ldr	r2, [sp, #12]
 801907e:	43d5      	mvns	r5, r2
 8019080:	b2ed      	uxtb	r5, r5
 8019082:	9a02      	ldr	r2, [sp, #8]
 8019084:	2a00      	cmp	r2, #0
 8019086:	dc03      	bgt.n	8019090 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019088:	9a05      	ldr	r2, [sp, #20]
 801908a:	2a00      	cmp	r2, #0
 801908c:	f340 812c 	ble.w	80192e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019090:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019092:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019096:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801909a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801909e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80190a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80190a4:	2b00      	cmp	r3, #0
 80190a6:	dd10      	ble.n	80190ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80190a8:	140c      	asrs	r4, r1, #16
 80190aa:	d405      	bmi.n	80190b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80190ac:	4574      	cmp	r4, lr
 80190ae:	da03      	bge.n	80190b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80190b0:	1414      	asrs	r4, r2, #16
 80190b2:	d401      	bmi.n	80190b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80190b4:	42bc      	cmp	r4, r7
 80190b6:	db09      	blt.n	80190cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80190b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80190ba:	9800      	ldr	r0, [sp, #0]
 80190bc:	4421      	add	r1, r4
 80190be:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80190c0:	3002      	adds	r0, #2
 80190c2:	4422      	add	r2, r4
 80190c4:	3b01      	subs	r3, #1
 80190c6:	9000      	str	r0, [sp, #0]
 80190c8:	e7ec      	b.n	80190a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80190ca:	d071      	beq.n	80191b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80190cc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80190ce:	1e5c      	subs	r4, r3, #1
 80190d0:	fb06 1604 	mla	r6, r6, r4, r1
 80190d4:	1436      	asrs	r6, r6, #16
 80190d6:	d45d      	bmi.n	8019194 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80190d8:	4576      	cmp	r6, lr
 80190da:	da5b      	bge.n	8019194 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80190dc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80190de:	fb06 2404 	mla	r4, r6, r4, r2
 80190e2:	1424      	asrs	r4, r4, #16
 80190e4:	d456      	bmi.n	8019194 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80190e6:	42bc      	cmp	r4, r7
 80190e8:	da54      	bge.n	8019194 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80190ea:	f8dd 9000 	ldr.w	r9, [sp]
 80190ee:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80190f2:	4698      	mov	r8, r3
 80190f4:	f1b8 0f00 	cmp.w	r8, #0
 80190f8:	dd54      	ble.n	80191a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80190fa:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80190fe:	9804      	ldr	r0, [sp, #16]
 8019100:	1414      	asrs	r4, r2, #16
 8019102:	fb07 0404 	mla	r4, r7, r4, r0
 8019106:	140e      	asrs	r6, r1, #16
 8019108:	9801      	ldr	r0, [sp, #4]
 801910a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801910e:	f8b9 4000 	ldrh.w	r4, [r9]
 8019112:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019116:	eb00 0b0e 	add.w	fp, r0, lr
 801911a:	1227      	asrs	r7, r4, #8
 801911c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019120:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019124:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019128:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801912a:	fb16 f60a 	smulbb	r6, r6, sl
 801912e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019132:	fb07 6705 	mla	r7, r7, r5, r6
 8019136:	10e6      	asrs	r6, r4, #3
 8019138:	00e4      	lsls	r4, r4, #3
 801913a:	b2e4      	uxtb	r4, r4
 801913c:	fb1b fb0a 	smulbb	fp, fp, sl
 8019140:	fb14 f405 	smulbb	r4, r4, r5
 8019144:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019148:	b2bf      	uxth	r7, r7
 801914a:	fb06 b605 	mla	r6, r6, r5, fp
 801914e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019152:	b2b6      	uxth	r6, r6
 8019154:	fa1f fe8e 	uxth.w	lr, lr
 8019158:	1c7c      	adds	r4, r7, #1
 801915a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801915e:	f106 0b01 	add.w	fp, r6, #1
 8019162:	f10e 0401 	add.w	r4, lr, #1
 8019166:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801916a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801916e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019172:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019176:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801917a:	4327      	orrs	r7, r4
 801917c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019180:	4401      	add	r1, r0
 8019182:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019184:	ea47 070b 	orr.w	r7, r7, fp
 8019188:	f829 7b02 	strh.w	r7, [r9], #2
 801918c:	4402      	add	r2, r0
 801918e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019192:	e7af      	b.n	80190f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019194:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019198:	f04f 0e00 	mov.w	lr, #0
 801919c:	eb03 040e 	add.w	r4, r3, lr
 80191a0:	2c00      	cmp	r4, #0
 80191a2:	dc43      	bgt.n	801922c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80191a4:	9a00      	ldr	r2, [sp, #0]
 80191a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80191ae:	9300      	str	r3, [sp, #0]
 80191b0:	9b02      	ldr	r3, [sp, #8]
 80191b2:	2b00      	cmp	r3, #0
 80191b4:	f340 8098 	ble.w	80192e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80191b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80191bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80191c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80191c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80191ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80191ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80191d2:	eef0 6a62 	vmov.f32	s13, s5
 80191d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80191da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80191de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80191e2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80191e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191ea:	eef0 6a43 	vmov.f32	s13, s6
 80191ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191f2:	ee12 2a90 	vmov	r2, s5
 80191f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80191fe:	ee13 2a10 	vmov	r2, s6
 8019202:	9313      	str	r3, [sp, #76]	; 0x4c
 8019204:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019206:	fb92 f3f3 	sdiv	r3, r2, r3
 801920a:	9314      	str	r3, [sp, #80]	; 0x50
 801920c:	9b02      	ldr	r3, [sp, #8]
 801920e:	9a05      	ldr	r2, [sp, #20]
 8019210:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019214:	3b01      	subs	r3, #1
 8019216:	9302      	str	r3, [sp, #8]
 8019218:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801921c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801921e:	eeb0 3a67 	vmov.f32	s6, s15
 8019222:	bf08      	it	eq
 8019224:	4613      	moveq	r3, r2
 8019226:	eef0 2a47 	vmov.f32	s5, s14
 801922a:	e72a      	b.n	8019082 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801922c:	140f      	asrs	r7, r1, #16
 801922e:	d454      	bmi.n	80192da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019230:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019234:	42be      	cmp	r6, r7
 8019236:	dd50      	ble.n	80192da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019238:	ea5f 4822 	movs.w	r8, r2, asr #16
 801923c:	d44d      	bmi.n	80192da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801923e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019242:	4544      	cmp	r4, r8
 8019244:	dd49      	ble.n	80192da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019246:	9c04      	ldr	r4, [sp, #16]
 8019248:	b236      	sxth	r6, r6
 801924a:	fb08 4606 	mla	r6, r8, r6, r4
 801924e:	f06f 0001 	mvn.w	r0, #1
 8019252:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019256:	9c01      	ldr	r4, [sp, #4]
 8019258:	fb00 fa0e 	mul.w	sl, r0, lr
 801925c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019260:	9800      	ldr	r0, [sp, #0]
 8019262:	eb04 0b08 	add.w	fp, r4, r8
 8019266:	f830 400a 	ldrh.w	r4, [r0, sl]
 801926a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801926e:	9801      	ldr	r0, [sp, #4]
 8019270:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019274:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019278:	9800      	ldr	r0, [sp, #0]
 801927a:	1227      	asrs	r7, r4, #8
 801927c:	fb16 f609 	smulbb	r6, r6, r9
 8019280:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019284:	fb07 6705 	mla	r7, r7, r5, r6
 8019288:	10e6      	asrs	r6, r4, #3
 801928a:	00e4      	lsls	r4, r4, #3
 801928c:	b2e4      	uxtb	r4, r4
 801928e:	fb1b fb09 	smulbb	fp, fp, r9
 8019292:	fb14 f405 	smulbb	r4, r4, r5
 8019296:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801929a:	b2bf      	uxth	r7, r7
 801929c:	fb06 b605 	mla	r6, r6, r5, fp
 80192a0:	fb08 4809 	mla	r8, r8, r9, r4
 80192a4:	b2b6      	uxth	r6, r6
 80192a6:	fa1f f888 	uxth.w	r8, r8
 80192aa:	1c7c      	adds	r4, r7, #1
 80192ac:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80192b0:	f106 0b01 	add.w	fp, r6, #1
 80192b4:	f108 0401 	add.w	r4, r8, #1
 80192b8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80192bc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80192c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80192c4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80192c8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80192cc:	4327      	orrs	r7, r4
 80192ce:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80192d2:	ea47 070b 	orr.w	r7, r7, fp
 80192d6:	f820 700a 	strh.w	r7, [r0, sl]
 80192da:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80192dc:	4401      	add	r1, r0
 80192de:	9814      	ldr	r0, [sp, #80]	; 0x50
 80192e0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80192e4:	4402      	add	r2, r0
 80192e6:	e759      	b.n	801919c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80192e8:	b007      	add	sp, #28
 80192ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080192f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80192f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192f4:	b085      	sub	sp, #20
 80192f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80192fa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80192fc:	9203      	str	r2, [sp, #12]
 80192fe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019302:	6870      	ldr	r0, [r6, #4]
 8019304:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019306:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801930a:	686f      	ldr	r7, [r5, #4]
 801930c:	9101      	str	r1, [sp, #4]
 801930e:	fb00 2404 	mla	r4, r0, r4, r2
 8019312:	6832      	ldr	r2, [r6, #0]
 8019314:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019318:	682a      	ldr	r2, [r5, #0]
 801931a:	9202      	str	r2, [sp, #8]
 801931c:	3704      	adds	r7, #4
 801931e:	9a01      	ldr	r2, [sp, #4]
 8019320:	2a00      	cmp	r2, #0
 8019322:	dc03      	bgt.n	801932c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019324:	9a03      	ldr	r2, [sp, #12]
 8019326:	2a00      	cmp	r2, #0
 8019328:	f340 80cc 	ble.w	80194c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801932c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801932e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019332:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019336:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801933a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801933c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019340:	2b00      	cmp	r3, #0
 8019342:	dd0d      	ble.n	8019360 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019344:	1406      	asrs	r6, r0, #16
 8019346:	d405      	bmi.n	8019354 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019348:	454e      	cmp	r6, r9
 801934a:	da03      	bge.n	8019354 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801934c:	1416      	asrs	r6, r2, #16
 801934e:	d401      	bmi.n	8019354 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019350:	4546      	cmp	r6, r8
 8019352:	db06      	blt.n	8019362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019354:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8019356:	4460      	add	r0, ip
 8019358:	4432      	add	r2, r6
 801935a:	3b01      	subs	r3, #1
 801935c:	3402      	adds	r4, #2
 801935e:	e7ef      	b.n	8019340 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019360:	d00f      	beq.n	8019382 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019362:	1e5e      	subs	r6, r3, #1
 8019364:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019368:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801936c:	d543      	bpl.n	80193f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801936e:	4698      	mov	r8, r3
 8019370:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8019374:	f1b8 0f00 	cmp.w	r8, #0
 8019378:	dc71      	bgt.n	801945e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801937a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801937e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019382:	9b01      	ldr	r3, [sp, #4]
 8019384:	2b00      	cmp	r3, #0
 8019386:	f340 809d 	ble.w	80194c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801938a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801938e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019392:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019396:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019398:	ee31 1a05 	vadd.f32	s2, s2, s10
 801939c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80193a0:	eeb0 6a62 	vmov.f32	s12, s5
 80193a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80193a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 80193b0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80193b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80193b8:	eeb0 6a43 	vmov.f32	s12, s6
 80193bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80193c0:	ee12 2a90 	vmov	r2, s5
 80193c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80193c8:	fb92 fcf3 	sdiv	ip, r2, r3
 80193cc:	ee13 2a10 	vmov	r2, s6
 80193d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80193d4:	9312      	str	r3, [sp, #72]	; 0x48
 80193d6:	9b01      	ldr	r3, [sp, #4]
 80193d8:	9a03      	ldr	r2, [sp, #12]
 80193da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193de:	3b01      	subs	r3, #1
 80193e0:	9301      	str	r3, [sp, #4]
 80193e2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80193e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80193e8:	eeb0 3a67 	vmov.f32	s6, s15
 80193ec:	bf08      	it	eq
 80193ee:	4613      	moveq	r3, r2
 80193f0:	eef0 2a47 	vmov.f32	s5, s14
 80193f4:	e793      	b.n	801931e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80193f6:	45ce      	cmp	lr, r9
 80193f8:	dab9      	bge.n	801936e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80193fa:	9912      	ldr	r1, [sp, #72]	; 0x48
 80193fc:	fb01 2606 	mla	r6, r1, r6, r2
 8019400:	1436      	asrs	r6, r6, #16
 8019402:	d4b4      	bmi.n	801936e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019404:	4546      	cmp	r6, r8
 8019406:	dab2      	bge.n	801936e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019408:	4698      	mov	r8, r3
 801940a:	46a2      	mov	sl, r4
 801940c:	f1b8 0f00 	cmp.w	r8, #0
 8019410:	ddb3      	ble.n	801937a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019412:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019416:	9902      	ldr	r1, [sp, #8]
 8019418:	1416      	asrs	r6, r2, #16
 801941a:	fb09 1606 	mla	r6, r9, r6, r1
 801941e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019422:	492a      	ldr	r1, [pc, #168]	; (80194cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019424:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019428:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801942c:	eb07 0b0e 	add.w	fp, r7, lr
 8019430:	4460      	add	r0, ip
 8019432:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8019436:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801943a:	00f6      	lsls	r6, r6, #3
 801943c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019440:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019444:	ea49 0606 	orr.w	r6, r9, r6
 8019448:	f817 900e 	ldrb.w	r9, [r7, lr]
 801944c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801944e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8019452:	f82a 6b02 	strh.w	r6, [sl], #2
 8019456:	440a      	add	r2, r1
 8019458:	f108 38ff 	add.w	r8, r8, #4294967295
 801945c:	e7d6      	b.n	801940c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801945e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019462:	d429      	bmi.n	80194b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019464:	68ae      	ldr	r6, [r5, #8]
 8019466:	454e      	cmp	r6, r9
 8019468:	dd26      	ble.n	80194b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801946a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801946e:	d423      	bmi.n	80194b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019470:	68e9      	ldr	r1, [r5, #12]
 8019472:	4559      	cmp	r1, fp
 8019474:	dd20      	ble.n	80194b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019476:	9902      	ldr	r1, [sp, #8]
 8019478:	fa0f fe86 	sxth.w	lr, r6
 801947c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8019480:	f06f 0101 	mvn.w	r1, #1
 8019484:	f81e e009 	ldrb.w	lr, [lr, r9]
 8019488:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801948c:	eb07 060e 	add.w	r6, r7, lr
 8019490:	fb01 f908 	mul.w	r9, r1, r8
 8019494:	f896 b002 	ldrb.w	fp, [r6, #2]
 8019498:	7876      	ldrb	r6, [r6, #1]
 801949a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801949e:	00f6      	lsls	r6, r6, #3
 80194a0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80194a4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80194a8:	ea4b 0606 	orr.w	r6, fp, r6
 80194ac:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80194b0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80194b4:	f82a 6009 	strh.w	r6, [sl, r9]
 80194b8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80194ba:	4460      	add	r0, ip
 80194bc:	440a      	add	r2, r1
 80194be:	f108 38ff 	add.w	r8, r8, #4294967295
 80194c2:	e757      	b.n	8019374 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80194c4:	b005      	add	sp, #20
 80194c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194ca:	bf00      	nop
 80194cc:	fffff800 	.word	0xfffff800

080194d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194d4:	b087      	sub	sp, #28
 80194d6:	468b      	mov	fp, r1
 80194d8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80194da:	9204      	str	r2, [sp, #16]
 80194dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80194e0:	9205      	str	r2, [sp, #20]
 80194e2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80194e6:	6841      	ldr	r1, [r0, #4]
 80194e8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80194ec:	fb01 2404 	mla	r4, r1, r4, r2
 80194f0:	6802      	ldr	r2, [r0, #0]
 80194f2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80194f6:	f8dc 2000 	ldr.w	r2, [ip]
 80194fa:	9201      	str	r2, [sp, #4]
 80194fc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019500:	3204      	adds	r2, #4
 8019502:	9202      	str	r2, [sp, #8]
 8019504:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019508:	f1bb 0f00 	cmp.w	fp, #0
 801950c:	dc03      	bgt.n	8019516 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801950e:	9a04      	ldr	r2, [sp, #16]
 8019510:	2a00      	cmp	r2, #0
 8019512:	f340 8138 	ble.w	8019786 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019516:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019518:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801951c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019520:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019524:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019526:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801952a:	2b00      	cmp	r3, #0
 801952c:	dd0e      	ble.n	801954c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801952e:	1402      	asrs	r2, r0, #16
 8019530:	d405      	bmi.n	801953e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019532:	42ba      	cmp	r2, r7
 8019534:	da03      	bge.n	801953e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019536:	140a      	asrs	r2, r1, #16
 8019538:	d401      	bmi.n	801953e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801953a:	42b2      	cmp	r2, r6
 801953c:	db07      	blt.n	801954e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801953e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019540:	4410      	add	r0, r2
 8019542:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019544:	3b01      	subs	r3, #1
 8019546:	4411      	add	r1, r2
 8019548:	3402      	adds	r4, #2
 801954a:	e7ee      	b.n	801952a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801954c:	d019      	beq.n	8019582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801954e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019550:	1e5a      	subs	r2, r3, #1
 8019552:	fb05 0502 	mla	r5, r5, r2, r0
 8019556:	142d      	asrs	r5, r5, #16
 8019558:	d409      	bmi.n	801956e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801955a:	42bd      	cmp	r5, r7
 801955c:	da07      	bge.n	801956e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801955e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019560:	fb05 1202 	mla	r2, r5, r2, r1
 8019564:	1412      	asrs	r2, r2, #16
 8019566:	d402      	bmi.n	801956e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019568:	42b2      	cmp	r2, r6
 801956a:	f2c0 80ac 	blt.w	80196c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801956e:	f04f 0e00 	mov.w	lr, #0
 8019572:	eb03 020e 	add.w	r2, r3, lr
 8019576:	2a00      	cmp	r2, #0
 8019578:	dc3e      	bgt.n	80195f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801957a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801957e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019582:	f1bb 0f00 	cmp.w	fp, #0
 8019586:	f340 80fe 	ble.w	8019786 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801958a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801958e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019592:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019596:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019598:	f1bb 0b01 	subs.w	fp, fp, #1
 801959c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80195a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80195a4:	eeb0 6a62 	vmov.f32	s12, s5
 80195a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80195ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80195b4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80195b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80195bc:	eeb0 6a43 	vmov.f32	s12, s6
 80195c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80195c4:	ee12 2a90 	vmov	r2, s5
 80195c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80195cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80195d0:	ee13 2a10 	vmov	r2, s6
 80195d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195d8:	9313      	str	r3, [sp, #76]	; 0x4c
 80195da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80195e0:	9a04      	ldr	r2, [sp, #16]
 80195e2:	9314      	str	r3, [sp, #80]	; 0x50
 80195e4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80195e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195ea:	eeb0 3a67 	vmov.f32	s6, s15
 80195ee:	bf08      	it	eq
 80195f0:	4613      	moveq	r3, r2
 80195f2:	eef0 2a47 	vmov.f32	s5, s14
 80195f6:	e787      	b.n	8019508 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80195f8:	1406      	asrs	r6, r0, #16
 80195fa:	d45d      	bmi.n	80196b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80195fc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019600:	42b5      	cmp	r5, r6
 8019602:	dd59      	ble.n	80196b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019604:	140f      	asrs	r7, r1, #16
 8019606:	d457      	bmi.n	80196b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019608:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801960c:	42ba      	cmp	r2, r7
 801960e:	dd53      	ble.n	80196b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019610:	9a01      	ldr	r2, [sp, #4]
 8019612:	b22d      	sxth	r5, r5
 8019614:	fb07 2505 	mla	r5, r7, r5, r2
 8019618:	5daa      	ldrb	r2, [r5, r6]
 801961a:	9d02      	ldr	r5, [sp, #8]
 801961c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019620:	0e2e      	lsrs	r6, r5, #24
 8019622:	d049      	beq.n	80196b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019624:	f06f 0201 	mvn.w	r2, #1
 8019628:	fb02 f20e 	mul.w	r2, r2, lr
 801962c:	9203      	str	r2, [sp, #12]
 801962e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019632:	9a05      	ldr	r2, [sp, #20]
 8019634:	4356      	muls	r6, r2
 8019636:	1c72      	adds	r2, r6, #1
 8019638:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801963c:	1212      	asrs	r2, r2, #8
 801963e:	fa1f f982 	uxth.w	r9, r2
 8019642:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019646:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801964a:	43d2      	mvns	r2, r2
 801964c:	b2d2      	uxtb	r2, r2
 801964e:	fb16 f609 	smulbb	r6, r6, r9
 8019652:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019656:	fb07 6702 	mla	r7, r7, r2, r6
 801965a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801965e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019662:	b2ed      	uxtb	r5, r5
 8019664:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019668:	fa5f f888 	uxtb.w	r8, r8
 801966c:	fb15 f509 	smulbb	r5, r5, r9
 8019670:	fb08 5502 	mla	r5, r8, r2, r5
 8019674:	b2bf      	uxth	r7, r7
 8019676:	fb1a fa09 	smulbb	sl, sl, r9
 801967a:	b2ad      	uxth	r5, r5
 801967c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019680:	fb06 a602 	mla	r6, r6, r2, sl
 8019684:	1c7a      	adds	r2, r7, #1
 8019686:	f105 0a01 	add.w	sl, r5, #1
 801968a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801968e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019692:	b2b6      	uxth	r6, r6
 8019694:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019698:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801969c:	ea4a 0707 	orr.w	r7, sl, r7
 80196a0:	f106 0a01 	add.w	sl, r6, #1
 80196a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80196a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80196ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196b0:	9a03      	ldr	r2, [sp, #12]
 80196b2:	ea47 070a 	orr.w	r7, r7, sl
 80196b6:	52a7      	strh	r7, [r4, r2]
 80196b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80196ba:	4410      	add	r0, r2
 80196bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80196be:	f10e 3eff 	add.w	lr, lr, #4294967295
 80196c2:	4411      	add	r1, r2
 80196c4:	e755      	b.n	8019572 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80196c6:	f04f 0800 	mov.w	r8, #0
 80196ca:	eba3 0208 	sub.w	r2, r3, r8
 80196ce:	2a00      	cmp	r2, #0
 80196d0:	f77f af53 	ble.w	801957a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80196d4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80196d8:	9f01      	ldr	r7, [sp, #4]
 80196da:	140a      	asrs	r2, r1, #16
 80196dc:	1405      	asrs	r5, r0, #16
 80196de:	fb06 7202 	mla	r2, r6, r2, r7
 80196e2:	5d52      	ldrb	r2, [r2, r5]
 80196e4:	9d02      	ldr	r5, [sp, #8]
 80196e6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80196ea:	0e2e      	lsrs	r6, r5, #24
 80196ec:	d044      	beq.n	8019778 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80196ee:	9a05      	ldr	r2, [sp, #20]
 80196f0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80196f4:	4356      	muls	r6, r2
 80196f6:	1c72      	adds	r2, r6, #1
 80196f8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80196fc:	1212      	asrs	r2, r2, #8
 80196fe:	fa1f f982 	uxth.w	r9, r2
 8019702:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019706:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801970a:	43d2      	mvns	r2, r2
 801970c:	b2d2      	uxtb	r2, r2
 801970e:	fb16 f609 	smulbb	r6, r6, r9
 8019712:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019716:	fb07 6702 	mla	r7, r7, r2, r6
 801971a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801971e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019722:	b2ed      	uxtb	r5, r5
 8019724:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019728:	fa5f fe8e 	uxtb.w	lr, lr
 801972c:	fb15 f509 	smulbb	r5, r5, r9
 8019730:	fb0e 5502 	mla	r5, lr, r2, r5
 8019734:	b2bf      	uxth	r7, r7
 8019736:	fb1a fa09 	smulbb	sl, sl, r9
 801973a:	b2ad      	uxth	r5, r5
 801973c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019740:	fb06 a602 	mla	r6, r6, r2, sl
 8019744:	1c7a      	adds	r2, r7, #1
 8019746:	f105 0a01 	add.w	sl, r5, #1
 801974a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801974e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019752:	b2b6      	uxth	r6, r6
 8019754:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019758:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801975c:	ea4a 0707 	orr.w	r7, sl, r7
 8019760:	f106 0a01 	add.w	sl, r6, #1
 8019764:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019768:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801976c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019770:	ea47 070a 	orr.w	r7, r7, sl
 8019774:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019778:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801977a:	4410      	add	r0, r2
 801977c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801977e:	f108 0801 	add.w	r8, r8, #1
 8019782:	4411      	add	r1, r2
 8019784:	e7a1      	b.n	80196ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019786:	b007      	add	sp, #28
 8019788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801978c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801978c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019790:	b085      	sub	sp, #20
 8019792:	468b      	mov	fp, r1
 8019794:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019796:	9203      	str	r2, [sp, #12]
 8019798:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801979c:	6841      	ldr	r1, [r0, #4]
 801979e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80197a2:	fb01 2404 	mla	r4, r1, r4, r2
 80197a6:	6802      	ldr	r2, [r0, #0]
 80197a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80197ac:	f8de 2000 	ldr.w	r2, [lr]
 80197b0:	9200      	str	r2, [sp, #0]
 80197b2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80197b6:	3204      	adds	r2, #4
 80197b8:	9201      	str	r2, [sp, #4]
 80197ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80197be:	f1bb 0f00 	cmp.w	fp, #0
 80197c2:	dc03      	bgt.n	80197cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80197c4:	9a03      	ldr	r2, [sp, #12]
 80197c6:	2a00      	cmp	r2, #0
 80197c8:	f340 8153 	ble.w	8019a72 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80197cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80197ce:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80197d2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80197d6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80197da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80197dc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80197e0:	2b00      	cmp	r3, #0
 80197e2:	dd0e      	ble.n	8019802 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80197e4:	1408      	asrs	r0, r1, #16
 80197e6:	d405      	bmi.n	80197f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80197e8:	42b8      	cmp	r0, r7
 80197ea:	da03      	bge.n	80197f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80197ec:	1410      	asrs	r0, r2, #16
 80197ee:	d401      	bmi.n	80197f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80197f0:	42b0      	cmp	r0, r6
 80197f2:	db07      	blt.n	8019804 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80197f4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80197f6:	4401      	add	r1, r0
 80197f8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80197fa:	3b01      	subs	r3, #1
 80197fc:	4402      	add	r2, r0
 80197fe:	3402      	adds	r4, #2
 8019800:	e7ee      	b.n	80197e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019802:	d017      	beq.n	8019834 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019804:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019806:	1e58      	subs	r0, r3, #1
 8019808:	fb05 1500 	mla	r5, r5, r0, r1
 801980c:	142d      	asrs	r5, r5, #16
 801980e:	d409      	bmi.n	8019824 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019810:	42bd      	cmp	r5, r7
 8019812:	da07      	bge.n	8019824 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019814:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019816:	fb05 2000 	mla	r0, r5, r0, r2
 801981a:	1400      	asrs	r0, r0, #16
 801981c:	d402      	bmi.n	8019824 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801981e:	42b0      	cmp	r0, r6
 8019820:	f2c0 80bc 	blt.w	801999c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019824:	2600      	movs	r6, #0
 8019826:	1998      	adds	r0, r3, r6
 8019828:	2800      	cmp	r0, #0
 801982a:	dc3e      	bgt.n	80198aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801982c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019830:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019834:	f1bb 0f00 	cmp.w	fp, #0
 8019838:	f340 811b 	ble.w	8019a72 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801983c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019840:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019844:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019848:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801984a:	f1bb 0b01 	subs.w	fp, fp, #1
 801984e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019852:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019856:	eeb0 6a62 	vmov.f32	s12, s5
 801985a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801985e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019862:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019866:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801986a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801986e:	eeb0 6a43 	vmov.f32	s12, s6
 8019872:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019876:	ee12 2a90 	vmov	r2, s5
 801987a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801987e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019882:	ee13 2a10 	vmov	r2, s6
 8019886:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801988a:	9311      	str	r3, [sp, #68]	; 0x44
 801988c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801988e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019892:	9a03      	ldr	r2, [sp, #12]
 8019894:	9312      	str	r3, [sp, #72]	; 0x48
 8019896:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801989a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801989c:	eeb0 3a67 	vmov.f32	s6, s15
 80198a0:	bf08      	it	eq
 80198a2:	4613      	moveq	r3, r2
 80198a4:	eef0 2a47 	vmov.f32	s5, s14
 80198a8:	e789      	b.n	80197be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80198aa:	140f      	asrs	r7, r1, #16
 80198ac:	d426      	bmi.n	80198fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80198ae:	f8de 5008 	ldr.w	r5, [lr, #8]
 80198b2:	42bd      	cmp	r5, r7
 80198b4:	dd22      	ble.n	80198fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80198b6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80198ba:	d41f      	bmi.n	80198fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80198bc:	f8de 000c 	ldr.w	r0, [lr, #12]
 80198c0:	4560      	cmp	r0, ip
 80198c2:	dd1b      	ble.n	80198fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80198c4:	9800      	ldr	r0, [sp, #0]
 80198c6:	b22d      	sxth	r5, r5
 80198c8:	fb0c 0505 	mla	r5, ip, r5, r0
 80198cc:	5de8      	ldrb	r0, [r5, r7]
 80198ce:	9d01      	ldr	r5, [sp, #4]
 80198d0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80198d4:	0e07      	lsrs	r7, r0, #24
 80198d6:	2fff      	cmp	r7, #255	; 0xff
 80198d8:	d116      	bne.n	8019908 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80198da:	f06f 0501 	mvn.w	r5, #1
 80198de:	fb05 f706 	mul.w	r7, r5, r6
 80198e2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80198e6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80198ea:	0945      	lsrs	r5, r0, #5
 80198ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80198f0:	ea4c 0505 	orr.w	r5, ip, r5
 80198f4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80198f8:	4305      	orrs	r5, r0
 80198fa:	53e5      	strh	r5, [r4, r7]
 80198fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80198fe:	4401      	add	r1, r0
 8019900:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019902:	3e01      	subs	r6, #1
 8019904:	4402      	add	r2, r0
 8019906:	e78e      	b.n	8019826 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019908:	b2fd      	uxtb	r5, r7
 801990a:	2f00      	cmp	r7, #0
 801990c:	d0f6      	beq.n	80198fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801990e:	f06f 0701 	mvn.w	r7, #1
 8019912:	4377      	muls	r7, r6
 8019914:	fa1f f985 	uxth.w	r9, r5
 8019918:	f834 8007 	ldrh.w	r8, [r4, r7]
 801991c:	9702      	str	r7, [sp, #8]
 801991e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019922:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019926:	43ed      	mvns	r5, r5
 8019928:	b2ed      	uxtb	r5, r5
 801992a:	fb17 f709 	smulbb	r7, r7, r9
 801992e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019932:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019936:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801993a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801993e:	b2c0      	uxtb	r0, r0
 8019940:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019944:	fa5f f888 	uxtb.w	r8, r8
 8019948:	fb10 f009 	smulbb	r0, r0, r9
 801994c:	fb08 0005 	mla	r0, r8, r5, r0
 8019950:	b280      	uxth	r0, r0
 8019952:	fa1f fc8c 	uxth.w	ip, ip
 8019956:	fb1a fa09 	smulbb	sl, sl, r9
 801995a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801995e:	fb07 a705 	mla	r7, r7, r5, sl
 8019962:	f100 0a01 	add.w	sl, r0, #1
 8019966:	f10c 0501 	add.w	r5, ip, #1
 801996a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801996e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019972:	b2bf      	uxth	r7, r7
 8019974:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019978:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801997c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019980:	f107 0a01 	add.w	sl, r7, #1
 8019984:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019988:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801998c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019990:	9802      	ldr	r0, [sp, #8]
 8019992:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019996:	f824 c000 	strh.w	ip, [r4, r0]
 801999a:	e7af      	b.n	80198fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801999c:	f04f 0800 	mov.w	r8, #0
 80199a0:	eba3 0008 	sub.w	r0, r3, r8
 80199a4:	2800      	cmp	r0, #0
 80199a6:	f77f af41 	ble.w	801982c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80199aa:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80199ae:	9f00      	ldr	r7, [sp, #0]
 80199b0:	1410      	asrs	r0, r2, #16
 80199b2:	140d      	asrs	r5, r1, #16
 80199b4:	fb06 7000 	mla	r0, r6, r0, r7
 80199b8:	5d40      	ldrb	r0, [r0, r5]
 80199ba:	9d01      	ldr	r5, [sp, #4]
 80199bc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80199c0:	0e2e      	lsrs	r6, r5, #24
 80199c2:	2eff      	cmp	r6, #255	; 0xff
 80199c4:	d112      	bne.n	80199ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80199c6:	482c      	ldr	r0, [pc, #176]	; (8019a78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80199c8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80199cc:	0968      	lsrs	r0, r5, #5
 80199ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80199d2:	4330      	orrs	r0, r6
 80199d4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80199d8:	4328      	orrs	r0, r5
 80199da:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80199de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80199e0:	4401      	add	r1, r0
 80199e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80199e4:	f108 0801 	add.w	r8, r8, #1
 80199e8:	4402      	add	r2, r0
 80199ea:	e7d9      	b.n	80199a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80199ec:	b2f0      	uxtb	r0, r6
 80199ee:	2e00      	cmp	r6, #0
 80199f0:	d0f5      	beq.n	80199de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80199f2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80199f6:	fa1f f980 	uxth.w	r9, r0
 80199fa:	ea4f 272c 	mov.w	r7, ip, asr #8
 80199fe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019a02:	43c0      	mvns	r0, r0
 8019a04:	b2c0      	uxtb	r0, r0
 8019a06:	fb16 f609 	smulbb	r6, r6, r9
 8019a0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019a0e:	fb07 6700 	mla	r7, r7, r0, r6
 8019a12:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019a16:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019a1a:	b2ed      	uxtb	r5, r5
 8019a1c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019a20:	fa5f fc8c 	uxtb.w	ip, ip
 8019a24:	fb15 f509 	smulbb	r5, r5, r9
 8019a28:	fb0c 5500 	mla	r5, ip, r0, r5
 8019a2c:	b2bf      	uxth	r7, r7
 8019a2e:	fb1a fa09 	smulbb	sl, sl, r9
 8019a32:	b2ad      	uxth	r5, r5
 8019a34:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019a38:	fb06 a600 	mla	r6, r6, r0, sl
 8019a3c:	1c78      	adds	r0, r7, #1
 8019a3e:	f105 0a01 	add.w	sl, r5, #1
 8019a42:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019a46:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019a4a:	b2b6      	uxth	r6, r6
 8019a4c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019a50:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019a54:	ea4a 0707 	orr.w	r7, sl, r7
 8019a58:	f106 0a01 	add.w	sl, r6, #1
 8019a5c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019a60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a64:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019a68:	ea47 070a 	orr.w	r7, r7, sl
 8019a6c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019a70:	e7b5      	b.n	80199de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019a72:	b005      	add	sp, #20
 8019a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a78:	fffff800 	.word	0xfffff800

08019a7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a80:	b087      	sub	sp, #28
 8019a82:	468b      	mov	fp, r1
 8019a84:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019a86:	9204      	str	r2, [sp, #16]
 8019a88:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019a8c:	9205      	str	r2, [sp, #20]
 8019a8e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019a92:	6861      	ldr	r1, [r4, #4]
 8019a94:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019a98:	fb01 2000 	mla	r0, r1, r0, r2
 8019a9c:	6822      	ldr	r2, [r4, #0]
 8019a9e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019aa2:	f8de 2000 	ldr.w	r2, [lr]
 8019aa6:	9201      	str	r2, [sp, #4]
 8019aa8:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019aac:	9202      	str	r2, [sp, #8]
 8019aae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019ab2:	f1bb 0f00 	cmp.w	fp, #0
 8019ab6:	dc03      	bgt.n	8019ac0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019ab8:	9a04      	ldr	r2, [sp, #16]
 8019aba:	2a00      	cmp	r2, #0
 8019abc:	f340 8142 	ble.w	8019d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019ac0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019ac2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019ac6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019aca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019ace:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019ad0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ad4:	2b00      	cmp	r3, #0
 8019ad6:	dd0e      	ble.n	8019af6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019ad8:	140c      	asrs	r4, r1, #16
 8019ada:	d405      	bmi.n	8019ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019adc:	42bc      	cmp	r4, r7
 8019ade:	da03      	bge.n	8019ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019ae0:	1414      	asrs	r4, r2, #16
 8019ae2:	d401      	bmi.n	8019ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019ae4:	42b4      	cmp	r4, r6
 8019ae6:	db07      	blt.n	8019af8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019ae8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019aea:	4421      	add	r1, r4
 8019aec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019aee:	3b01      	subs	r3, #1
 8019af0:	4422      	add	r2, r4
 8019af2:	3002      	adds	r0, #2
 8019af4:	e7ee      	b.n	8019ad4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019af6:	d019      	beq.n	8019b2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019af8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019afa:	1e5c      	subs	r4, r3, #1
 8019afc:	fb05 1504 	mla	r5, r5, r4, r1
 8019b00:	142d      	asrs	r5, r5, #16
 8019b02:	d409      	bmi.n	8019b18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019b04:	42bd      	cmp	r5, r7
 8019b06:	da07      	bge.n	8019b18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019b08:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b0a:	fb05 2404 	mla	r4, r5, r4, r2
 8019b0e:	1424      	asrs	r4, r4, #16
 8019b10:	d402      	bmi.n	8019b18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019b12:	42b4      	cmp	r4, r6
 8019b14:	f2c0 80b1 	blt.w	8019c7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019b18:	f04f 0800 	mov.w	r8, #0
 8019b1c:	eb03 0408 	add.w	r4, r3, r8
 8019b20:	2c00      	cmp	r4, #0
 8019b22:	dc3e      	bgt.n	8019ba2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019b24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019b28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019b2c:	f1bb 0f00 	cmp.w	fp, #0
 8019b30:	f340 8108 	ble.w	8019d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019b34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b3c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019b40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b42:	f1bb 0b01 	subs.w	fp, fp, #1
 8019b46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b4e:	eeb0 6a62 	vmov.f32	s12, s5
 8019b52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b5e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019b62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b66:	eeb0 6a43 	vmov.f32	s12, s6
 8019b6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b6e:	ee12 2a90 	vmov	r2, s5
 8019b72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b76:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b7a:	ee13 2a10 	vmov	r2, s6
 8019b7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b82:	9313      	str	r3, [sp, #76]	; 0x4c
 8019b84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b86:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b8a:	9a04      	ldr	r2, [sp, #16]
 8019b8c:	9314      	str	r3, [sp, #80]	; 0x50
 8019b8e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019b92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b94:	eeb0 3a67 	vmov.f32	s6, s15
 8019b98:	bf08      	it	eq
 8019b9a:	4613      	moveq	r3, r2
 8019b9c:	eef0 2a47 	vmov.f32	s5, s14
 8019ba0:	e787      	b.n	8019ab2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8019ba2:	140e      	asrs	r6, r1, #16
 8019ba4:	d462      	bmi.n	8019c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019ba6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019baa:	42b5      	cmp	r5, r6
 8019bac:	dd5e      	ble.n	8019c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019bae:	1417      	asrs	r7, r2, #16
 8019bb0:	d45c      	bmi.n	8019c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019bb2:	f8de 400c 	ldr.w	r4, [lr, #12]
 8019bb6:	42bc      	cmp	r4, r7
 8019bb8:	dd58      	ble.n	8019c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019bba:	b22d      	sxth	r5, r5
 8019bbc:	fb07 6505 	mla	r5, r7, r5, r6
 8019bc0:	9c02      	ldr	r4, [sp, #8]
 8019bc2:	5d66      	ldrb	r6, [r4, r5]
 8019bc4:	2e00      	cmp	r6, #0
 8019bc6:	d051      	beq.n	8019c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019bc8:	9c01      	ldr	r4, [sp, #4]
 8019bca:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019bce:	f06f 0401 	mvn.w	r4, #1
 8019bd2:	fb04 f408 	mul.w	r4, r4, r8
 8019bd6:	9403      	str	r4, [sp, #12]
 8019bd8:	5b05      	ldrh	r5, [r0, r4]
 8019bda:	9c05      	ldr	r4, [sp, #20]
 8019bdc:	4366      	muls	r6, r4
 8019bde:	1c74      	adds	r4, r6, #1
 8019be0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019be4:	1224      	asrs	r4, r4, #8
 8019be6:	b2a7      	uxth	r7, r4
 8019be8:	122e      	asrs	r6, r5, #8
 8019bea:	43e4      	mvns	r4, r4
 8019bec:	b2e4      	uxtb	r4, r4
 8019bee:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8019bf2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019bf6:	fb16 f604 	smulbb	r6, r6, r4
 8019bfa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019bfe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c02:	00ed      	lsls	r5, r5, #3
 8019c04:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019c08:	b2ed      	uxtb	r5, r5
 8019c0a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019c0e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019c12:	fb15 f504 	smulbb	r5, r5, r4
 8019c16:	fa5f f989 	uxtb.w	r9, r9
 8019c1a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019c1e:	fb09 5507 	mla	r5, r9, r7, r5
 8019c22:	fb1a fa04 	smulbb	sl, sl, r4
 8019c26:	fa1f fc8c 	uxth.w	ip, ip
 8019c2a:	b2ad      	uxth	r5, r5
 8019c2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019c30:	fb06 a607 	mla	r6, r6, r7, sl
 8019c34:	f10c 0401 	add.w	r4, ip, #1
 8019c38:	f105 0a01 	add.w	sl, r5, #1
 8019c3c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019c40:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c44:	b2b6      	uxth	r6, r6
 8019c46:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c4e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019c52:	f106 0a01 	add.w	sl, r6, #1
 8019c56:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019c5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c62:	9c03      	ldr	r4, [sp, #12]
 8019c64:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019c68:	f820 c004 	strh.w	ip, [r0, r4]
 8019c6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c6e:	4421      	add	r1, r4
 8019c70:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019c72:	f108 38ff 	add.w	r8, r8, #4294967295
 8019c76:	4422      	add	r2, r4
 8019c78:	e750      	b.n	8019b1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019c7a:	f04f 0900 	mov.w	r9, #0
 8019c7e:	eba3 0409 	sub.w	r4, r3, r9
 8019c82:	2c00      	cmp	r4, #0
 8019c84:	f77f af4e 	ble.w	8019b24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019c88:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019c8c:	140d      	asrs	r5, r1, #16
 8019c8e:	1414      	asrs	r4, r2, #16
 8019c90:	fb06 5404 	mla	r4, r6, r4, r5
 8019c94:	9d02      	ldr	r5, [sp, #8]
 8019c96:	5d2e      	ldrb	r6, [r5, r4]
 8019c98:	2e00      	cmp	r6, #0
 8019c9a:	d04c      	beq.n	8019d36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019c9c:	9d01      	ldr	r5, [sp, #4]
 8019c9e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8019ca2:	9c05      	ldr	r4, [sp, #20]
 8019ca4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019ca8:	4366      	muls	r6, r4
 8019caa:	1c74      	adds	r4, r6, #1
 8019cac:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019cb0:	1224      	asrs	r4, r4, #8
 8019cb2:	b2a7      	uxth	r7, r4
 8019cb4:	122e      	asrs	r6, r5, #8
 8019cb6:	43e4      	mvns	r4, r4
 8019cb8:	b2e4      	uxtb	r4, r4
 8019cba:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019cbe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019cc2:	fb16 f604 	smulbb	r6, r6, r4
 8019cc6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019cca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019cce:	00ed      	lsls	r5, r5, #3
 8019cd0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019cd4:	b2ed      	uxtb	r5, r5
 8019cd6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019cda:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019cde:	fb15 f504 	smulbb	r5, r5, r4
 8019ce2:	fa5f f888 	uxtb.w	r8, r8
 8019ce6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019cea:	fb08 5507 	mla	r5, r8, r7, r5
 8019cee:	fb1a fa04 	smulbb	sl, sl, r4
 8019cf2:	fa1f fc8c 	uxth.w	ip, ip
 8019cf6:	b2ad      	uxth	r5, r5
 8019cf8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019cfc:	fb06 a607 	mla	r6, r6, r7, sl
 8019d00:	f10c 0401 	add.w	r4, ip, #1
 8019d04:	f105 0a01 	add.w	sl, r5, #1
 8019d08:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019d0c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019d10:	b2b6      	uxth	r6, r6
 8019d12:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019d16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019d1a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019d1e:	f106 0a01 	add.w	sl, r6, #1
 8019d22:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019d26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019d2a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019d2e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019d32:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019d36:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019d38:	4421      	add	r1, r4
 8019d3a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019d3c:	f109 0901 	add.w	r9, r9, #1
 8019d40:	4422      	add	r2, r4
 8019d42:	e79c      	b.n	8019c7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019d44:	b007      	add	sp, #28
 8019d46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d4e:	b085      	sub	sp, #20
 8019d50:	468b      	mov	fp, r1
 8019d52:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019d54:	9203      	str	r2, [sp, #12]
 8019d56:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019d5a:	6861      	ldr	r1, [r4, #4]
 8019d5c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019d60:	fb01 2000 	mla	r0, r1, r0, r2
 8019d64:	6822      	ldr	r2, [r4, #0]
 8019d66:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019d6a:	f8d8 2000 	ldr.w	r2, [r8]
 8019d6e:	9200      	str	r2, [sp, #0]
 8019d70:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019d74:	9201      	str	r2, [sp, #4]
 8019d76:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019d7a:	f1bb 0f00 	cmp.w	fp, #0
 8019d7e:	dc03      	bgt.n	8019d88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019d80:	9a03      	ldr	r2, [sp, #12]
 8019d82:	2a00      	cmp	r2, #0
 8019d84:	f340 8146 	ble.w	801a014 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019d88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019d8a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019d8e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019d92:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019d96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019d98:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019d9c:	2b00      	cmp	r3, #0
 8019d9e:	dd0e      	ble.n	8019dbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019da0:	140c      	asrs	r4, r1, #16
 8019da2:	d405      	bmi.n	8019db0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019da4:	42bc      	cmp	r4, r7
 8019da6:	da03      	bge.n	8019db0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019da8:	1414      	asrs	r4, r2, #16
 8019daa:	d401      	bmi.n	8019db0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019dac:	42b4      	cmp	r4, r6
 8019dae:	db07      	blt.n	8019dc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019db0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019db2:	4421      	add	r1, r4
 8019db4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019db6:	3b01      	subs	r3, #1
 8019db8:	4422      	add	r2, r4
 8019dba:	3002      	adds	r0, #2
 8019dbc:	e7ee      	b.n	8019d9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019dbe:	d017      	beq.n	8019df0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019dc0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019dc2:	1e5c      	subs	r4, r3, #1
 8019dc4:	fb05 1504 	mla	r5, r5, r4, r1
 8019dc8:	142d      	asrs	r5, r5, #16
 8019dca:	d409      	bmi.n	8019de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019dcc:	42bd      	cmp	r5, r7
 8019dce:	da07      	bge.n	8019de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019dd0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019dd2:	fb05 2404 	mla	r4, r5, r4, r2
 8019dd6:	1424      	asrs	r4, r4, #16
 8019dd8:	d402      	bmi.n	8019de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019dda:	42b4      	cmp	r4, r6
 8019ddc:	f2c0 80b3 	blt.w	8019f46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019de0:	2600      	movs	r6, #0
 8019de2:	199c      	adds	r4, r3, r6
 8019de4:	2c00      	cmp	r4, #0
 8019de6:	dc3e      	bgt.n	8019e66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019de8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019dec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019df0:	f1bb 0f00 	cmp.w	fp, #0
 8019df4:	f340 810e 	ble.w	801a014 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019df8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019dfc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e00:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019e04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e06:	f1bb 0b01 	subs.w	fp, fp, #1
 8019e0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e12:	eeb0 6a62 	vmov.f32	s12, s5
 8019e16:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019e1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e22:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019e26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e2a:	eeb0 6a43 	vmov.f32	s12, s6
 8019e2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e32:	ee12 2a90 	vmov	r2, s5
 8019e36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e3e:	ee13 2a10 	vmov	r2, s6
 8019e42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019e46:	9311      	str	r3, [sp, #68]	; 0x44
 8019e48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e4e:	9a03      	ldr	r2, [sp, #12]
 8019e50:	9312      	str	r3, [sp, #72]	; 0x48
 8019e52:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019e56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e58:	eeb0 3a67 	vmov.f32	s6, s15
 8019e5c:	bf08      	it	eq
 8019e5e:	4613      	moveq	r3, r2
 8019e60:	eef0 2a47 	vmov.f32	s5, s14
 8019e64:	e789      	b.n	8019d7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019e66:	140f      	asrs	r7, r1, #16
 8019e68:	d418      	bmi.n	8019e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019e6a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019e6e:	42bd      	cmp	r5, r7
 8019e70:	dd14      	ble.n	8019e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019e72:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019e76:	d411      	bmi.n	8019e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019e78:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019e7c:	4564      	cmp	r4, ip
 8019e7e:	dd0d      	ble.n	8019e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019e80:	b22d      	sxth	r5, r5
 8019e82:	fb0c 7505 	mla	r5, ip, r5, r7
 8019e86:	9c01      	ldr	r4, [sp, #4]
 8019e88:	5d64      	ldrb	r4, [r4, r5]
 8019e8a:	2cff      	cmp	r4, #255	; 0xff
 8019e8c:	d10c      	bne.n	8019ea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019e8e:	9c00      	ldr	r4, [sp, #0]
 8019e90:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019e94:	f06f 0401 	mvn.w	r4, #1
 8019e98:	4374      	muls	r4, r6
 8019e9a:	5305      	strh	r5, [r0, r4]
 8019e9c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019e9e:	4421      	add	r1, r4
 8019ea0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019ea2:	3e01      	subs	r6, #1
 8019ea4:	4422      	add	r2, r4
 8019ea6:	e79c      	b.n	8019de2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019ea8:	2c00      	cmp	r4, #0
 8019eaa:	d0f7      	beq.n	8019e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019eac:	9f00      	ldr	r7, [sp, #0]
 8019eae:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019eb2:	f06f 0501 	mvn.w	r5, #1
 8019eb6:	4375      	muls	r5, r6
 8019eb8:	9502      	str	r5, [sp, #8]
 8019eba:	5b45      	ldrh	r5, [r0, r5]
 8019ebc:	fa1f fc84 	uxth.w	ip, r4
 8019ec0:	122f      	asrs	r7, r5, #8
 8019ec2:	43e4      	mvns	r4, r4
 8019ec4:	b2e4      	uxtb	r4, r4
 8019ec6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019eca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019ece:	fb17 f704 	smulbb	r7, r7, r4
 8019ed2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019ed6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019eda:	00ed      	lsls	r5, r5, #3
 8019edc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019ee0:	b2ed      	uxtb	r5, r5
 8019ee2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019ee6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019eea:	fb15 f504 	smulbb	r5, r5, r4
 8019eee:	fa5f f989 	uxtb.w	r9, r9
 8019ef2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019ef6:	fb09 550c 	mla	r5, r9, ip, r5
 8019efa:	fb1a fa04 	smulbb	sl, sl, r4
 8019efe:	fa1f fe8e 	uxth.w	lr, lr
 8019f02:	b2ad      	uxth	r5, r5
 8019f04:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019f08:	fb07 a70c 	mla	r7, r7, ip, sl
 8019f0c:	f10e 0401 	add.w	r4, lr, #1
 8019f10:	f105 0a01 	add.w	sl, r5, #1
 8019f14:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019f18:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019f1c:	b2bf      	uxth	r7, r7
 8019f1e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019f22:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019f26:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019f2a:	f107 0a01 	add.w	sl, r7, #1
 8019f2e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019f32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019f3a:	9c02      	ldr	r4, [sp, #8]
 8019f3c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019f40:	f820 e004 	strh.w	lr, [r0, r4]
 8019f44:	e7aa      	b.n	8019e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019f46:	f04f 0900 	mov.w	r9, #0
 8019f4a:	eba3 0409 	sub.w	r4, r3, r9
 8019f4e:	2c00      	cmp	r4, #0
 8019f50:	f77f af4a 	ble.w	8019de8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019f54:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019f58:	1414      	asrs	r4, r2, #16
 8019f5a:	140d      	asrs	r5, r1, #16
 8019f5c:	fb06 5504 	mla	r5, r6, r4, r5
 8019f60:	9c01      	ldr	r4, [sp, #4]
 8019f62:	5d64      	ldrb	r4, [r4, r5]
 8019f64:	2cff      	cmp	r4, #255	; 0xff
 8019f66:	d10b      	bne.n	8019f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019f68:	9c00      	ldr	r4, [sp, #0]
 8019f6a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019f6e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019f72:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019f74:	4421      	add	r1, r4
 8019f76:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019f78:	f109 0901 	add.w	r9, r9, #1
 8019f7c:	4422      	add	r2, r4
 8019f7e:	e7e4      	b.n	8019f4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019f80:	2c00      	cmp	r4, #0
 8019f82:	d0f6      	beq.n	8019f72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019f84:	9e00      	ldr	r6, [sp, #0]
 8019f86:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019f8a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019f8e:	b2a7      	uxth	r7, r4
 8019f90:	122e      	asrs	r6, r5, #8
 8019f92:	43e4      	mvns	r4, r4
 8019f94:	b2e4      	uxtb	r4, r4
 8019f96:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019f9a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019f9e:	fb16 f604 	smulbb	r6, r6, r4
 8019fa2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019fa6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019faa:	00ed      	lsls	r5, r5, #3
 8019fac:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019fb0:	b2ed      	uxtb	r5, r5
 8019fb2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019fb6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019fba:	fb15 f504 	smulbb	r5, r5, r4
 8019fbe:	fa5f fe8e 	uxtb.w	lr, lr
 8019fc2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019fc6:	fb0e 5507 	mla	r5, lr, r7, r5
 8019fca:	fb1a fa04 	smulbb	sl, sl, r4
 8019fce:	fa1f fc8c 	uxth.w	ip, ip
 8019fd2:	b2ad      	uxth	r5, r5
 8019fd4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019fd8:	fb06 a607 	mla	r6, r6, r7, sl
 8019fdc:	f10c 0401 	add.w	r4, ip, #1
 8019fe0:	f105 0a01 	add.w	sl, r5, #1
 8019fe4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019fe8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019fec:	b2b6      	uxth	r6, r6
 8019fee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019ff2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019ff6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019ffa:	f106 0a01 	add.w	sl, r6, #1
 8019ffe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a002:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a006:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a00a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a00e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a012:	e7ae      	b.n	8019f72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a014:	b005      	add	sp, #20
 801a016:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a01a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a01a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a01e:	b085      	sub	sp, #20
 801a020:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a022:	9203      	str	r2, [sp, #12]
 801a024:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801a028:	9201      	str	r2, [sp, #4]
 801a02a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a02e:	9100      	str	r1, [sp, #0]
 801a030:	6841      	ldr	r1, [r0, #4]
 801a032:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a036:	fb01 2404 	mla	r4, r1, r4, r2
 801a03a:	6802      	ldr	r2, [r0, #0]
 801a03c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a040:	f8de 2000 	ldr.w	r2, [lr]
 801a044:	9202      	str	r2, [sp, #8]
 801a046:	9a01      	ldr	r2, [sp, #4]
 801a048:	43d6      	mvns	r6, r2
 801a04a:	b2f6      	uxtb	r6, r6
 801a04c:	9a00      	ldr	r2, [sp, #0]
 801a04e:	2a00      	cmp	r2, #0
 801a050:	dc03      	bgt.n	801a05a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a052:	9a03      	ldr	r2, [sp, #12]
 801a054:	2a00      	cmp	r2, #0
 801a056:	f340 8124 	ble.w	801a2a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a05a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a05c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a060:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a064:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a068:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a06a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a06e:	2b00      	cmp	r3, #0
 801a070:	dd0e      	ble.n	801a090 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a072:	1408      	asrs	r0, r1, #16
 801a074:	d405      	bmi.n	801a082 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a076:	4560      	cmp	r0, ip
 801a078:	da03      	bge.n	801a082 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a07a:	1410      	asrs	r0, r2, #16
 801a07c:	d401      	bmi.n	801a082 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a07e:	42b8      	cmp	r0, r7
 801a080:	db07      	blt.n	801a092 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a082:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a084:	4401      	add	r1, r0
 801a086:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a088:	3b01      	subs	r3, #1
 801a08a:	4402      	add	r2, r0
 801a08c:	3402      	adds	r4, #2
 801a08e:	e7ee      	b.n	801a06e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a090:	d06e      	beq.n	801a170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a092:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a094:	1e58      	subs	r0, r3, #1
 801a096:	fb05 1500 	mla	r5, r5, r0, r1
 801a09a:	142d      	asrs	r5, r5, #16
 801a09c:	d45c      	bmi.n	801a158 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a09e:	4565      	cmp	r5, ip
 801a0a0:	da5a      	bge.n	801a158 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a0a2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a0a4:	fb05 2000 	mla	r0, r5, r0, r2
 801a0a8:	1400      	asrs	r0, r0, #16
 801a0aa:	d455      	bmi.n	801a158 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a0ac:	42b8      	cmp	r0, r7
 801a0ae:	da53      	bge.n	801a158 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a0b0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801a0b4:	4699      	mov	r9, r3
 801a0b6:	46a2      	mov	sl, r4
 801a0b8:	f1b9 0f00 	cmp.w	r9, #0
 801a0bc:	dd54      	ble.n	801a168 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a0be:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a0c2:	140d      	asrs	r5, r1, #16
 801a0c4:	1410      	asrs	r0, r2, #16
 801a0c6:	fb07 5000 	mla	r0, r7, r0, r5
 801a0ca:	9d02      	ldr	r5, [sp, #8]
 801a0cc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a0d0:	f8ba 5000 	ldrh.w	r5, [sl]
 801a0d4:	122f      	asrs	r7, r5, #8
 801a0d6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a0da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a0de:	fb17 f706 	smulbb	r7, r7, r6
 801a0e2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a0e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a0ea:	00ed      	lsls	r5, r5, #3
 801a0ec:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a0f0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a0f4:	10c7      	asrs	r7, r0, #3
 801a0f6:	b2ed      	uxtb	r5, r5
 801a0f8:	00c0      	lsls	r0, r0, #3
 801a0fa:	fb18 f806 	smulbb	r8, r8, r6
 801a0fe:	fb15 f506 	smulbb	r5, r5, r6
 801a102:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a106:	b2c0      	uxtb	r0, r0
 801a108:	fa1f fc8c 	uxth.w	ip, ip
 801a10c:	fb07 870b 	mla	r7, r7, fp, r8
 801a110:	fb00 500b 	mla	r0, r0, fp, r5
 801a114:	b280      	uxth	r0, r0
 801a116:	b2bf      	uxth	r7, r7
 801a118:	f10c 0501 	add.w	r5, ip, #1
 801a11c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a120:	f107 0801 	add.w	r8, r7, #1
 801a124:	1c45      	adds	r5, r0, #1
 801a126:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a12a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a12e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a130:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a134:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a138:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a13c:	ea45 0c0c 	orr.w	ip, r5, ip
 801a140:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a144:	4401      	add	r1, r0
 801a146:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a148:	ea4c 0c08 	orr.w	ip, ip, r8
 801a14c:	f82a cb02 	strh.w	ip, [sl], #2
 801a150:	4402      	add	r2, r0
 801a152:	f109 39ff 	add.w	r9, r9, #4294967295
 801a156:	e7af      	b.n	801a0b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a158:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a15c:	f04f 0800 	mov.w	r8, #0
 801a160:	eb03 0008 	add.w	r0, r3, r8
 801a164:	2800      	cmp	r0, #0
 801a166:	dc41      	bgt.n	801a1ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a168:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a16c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a170:	9b00      	ldr	r3, [sp, #0]
 801a172:	2b00      	cmp	r3, #0
 801a174:	f340 8095 	ble.w	801a2a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a178:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a17c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a180:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a184:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a186:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a18a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a18e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a192:	eef0 6a62 	vmov.f32	s13, s5
 801a196:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a19a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a19e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a1a2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801a1a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a1aa:	eef0 6a43 	vmov.f32	s13, s6
 801a1ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a1b2:	ee12 2a90 	vmov	r2, s5
 801a1b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a1ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1be:	ee13 2a10 	vmov	r2, s6
 801a1c2:	9311      	str	r3, [sp, #68]	; 0x44
 801a1c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1ca:	9312      	str	r3, [sp, #72]	; 0x48
 801a1cc:	9b00      	ldr	r3, [sp, #0]
 801a1ce:	9a03      	ldr	r2, [sp, #12]
 801a1d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1d4:	3b01      	subs	r3, #1
 801a1d6:	9300      	str	r3, [sp, #0]
 801a1d8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801a1dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1de:	eeb0 3a67 	vmov.f32	s6, s15
 801a1e2:	bf08      	it	eq
 801a1e4:	4613      	moveq	r3, r2
 801a1e6:	eef0 2a47 	vmov.f32	s5, s14
 801a1ea:	e72f      	b.n	801a04c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a1ec:	140f      	asrs	r7, r1, #16
 801a1ee:	d451      	bmi.n	801a294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a1f0:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a1f4:	42bd      	cmp	r5, r7
 801a1f6:	dd4d      	ble.n	801a294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a1f8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a1fc:	d44a      	bmi.n	801a294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a1fe:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a202:	4560      	cmp	r0, ip
 801a204:	dd46      	ble.n	801a294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a206:	b22d      	sxth	r5, r5
 801a208:	fb0c 7505 	mla	r5, ip, r5, r7
 801a20c:	9802      	ldr	r0, [sp, #8]
 801a20e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a212:	f06f 0501 	mvn.w	r5, #1
 801a216:	fb05 fb08 	mul.w	fp, r5, r8
 801a21a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a21e:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a222:	122f      	asrs	r7, r5, #8
 801a224:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a228:	fb17 f706 	smulbb	r7, r7, r6
 801a22c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a230:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a234:	00ed      	lsls	r5, r5, #3
 801a236:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a23a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a23e:	10c7      	asrs	r7, r0, #3
 801a240:	b2ed      	uxtb	r5, r5
 801a242:	00c0      	lsls	r0, r0, #3
 801a244:	fb19 f906 	smulbb	r9, r9, r6
 801a248:	fb15 f506 	smulbb	r5, r5, r6
 801a24c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a250:	b2c0      	uxtb	r0, r0
 801a252:	fa1f fc8c 	uxth.w	ip, ip
 801a256:	fb07 970a 	mla	r7, r7, sl, r9
 801a25a:	fb00 500a 	mla	r0, r0, sl, r5
 801a25e:	b2bf      	uxth	r7, r7
 801a260:	b280      	uxth	r0, r0
 801a262:	f10c 0501 	add.w	r5, ip, #1
 801a266:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a26a:	f107 0901 	add.w	r9, r7, #1
 801a26e:	1c45      	adds	r5, r0, #1
 801a270:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a274:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a278:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a27c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a280:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a284:	ea45 0c0c 	orr.w	ip, r5, ip
 801a288:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a28c:	ea4c 0c09 	orr.w	ip, ip, r9
 801a290:	f824 c00b 	strh.w	ip, [r4, fp]
 801a294:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a296:	4401      	add	r1, r0
 801a298:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a29a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a29e:	4402      	add	r2, r0
 801a2a0:	e75e      	b.n	801a160 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a2a2:	b005      	add	sp, #20
 801a2a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a2a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a2a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2ac:	b085      	sub	sp, #20
 801a2ae:	4693      	mov	fp, r2
 801a2b0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a2b2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a2b4:	6870      	ldr	r0, [r6, #4]
 801a2b6:	9101      	str	r1, [sp, #4]
 801a2b8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a2bc:	fb00 2404 	mla	r4, r0, r4, r2
 801a2c0:	6832      	ldr	r2, [r6, #0]
 801a2c2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a2c6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a2ca:	682a      	ldr	r2, [r5, #0]
 801a2cc:	9202      	str	r2, [sp, #8]
 801a2ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a2d2:	9a01      	ldr	r2, [sp, #4]
 801a2d4:	2a00      	cmp	r2, #0
 801a2d6:	dc03      	bgt.n	801a2e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a2d8:	f1bb 0f00 	cmp.w	fp, #0
 801a2dc:	f340 809a 	ble.w	801a414 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a2e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a2e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a2e6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a2ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a2ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a2f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a2f4:	2b00      	cmp	r3, #0
 801a2f6:	dd0c      	ble.n	801a312 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a2f8:	1406      	asrs	r6, r0, #16
 801a2fa:	d405      	bmi.n	801a308 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a2fc:	454e      	cmp	r6, r9
 801a2fe:	da03      	bge.n	801a308 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a300:	1416      	asrs	r6, r2, #16
 801a302:	d401      	bmi.n	801a308 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a304:	4546      	cmp	r6, r8
 801a306:	db05      	blt.n	801a314 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a308:	4470      	add	r0, lr
 801a30a:	4462      	add	r2, ip
 801a30c:	3b01      	subs	r3, #1
 801a30e:	3402      	adds	r4, #2
 801a310:	e7f0      	b.n	801a2f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a312:	d00f      	beq.n	801a334 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a314:	1e5e      	subs	r6, r3, #1
 801a316:	fb0e 0706 	mla	r7, lr, r6, r0
 801a31a:	143f      	asrs	r7, r7, #16
 801a31c:	d541      	bpl.n	801a3a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a31e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a322:	4698      	mov	r8, r3
 801a324:	9603      	str	r6, [sp, #12]
 801a326:	f1b8 0f00 	cmp.w	r8, #0
 801a32a:	dc56      	bgt.n	801a3da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a32c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a330:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a334:	9b01      	ldr	r3, [sp, #4]
 801a336:	2b00      	cmp	r3, #0
 801a338:	dd6c      	ble.n	801a414 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a33a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a33e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a342:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a346:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a348:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a34c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a350:	eeb0 6a62 	vmov.f32	s12, s5
 801a354:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a358:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a35c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a360:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a364:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a368:	eeb0 6a43 	vmov.f32	s12, s6
 801a36c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a370:	ee12 2a90 	vmov	r2, s5
 801a374:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a378:	fb92 fef3 	sdiv	lr, r2, r3
 801a37c:	ee13 2a10 	vmov	r2, s6
 801a380:	fb92 fcf3 	sdiv	ip, r2, r3
 801a384:	9b01      	ldr	r3, [sp, #4]
 801a386:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a38a:	3b01      	subs	r3, #1
 801a38c:	9301      	str	r3, [sp, #4]
 801a38e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a392:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a394:	eeb0 3a67 	vmov.f32	s6, s15
 801a398:	bf08      	it	eq
 801a39a:	465b      	moveq	r3, fp
 801a39c:	eef0 2a47 	vmov.f32	s5, s14
 801a3a0:	e797      	b.n	801a2d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a3a2:	454f      	cmp	r7, r9
 801a3a4:	dabb      	bge.n	801a31e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a3a6:	fb0c 2606 	mla	r6, ip, r6, r2
 801a3aa:	1436      	asrs	r6, r6, #16
 801a3ac:	d4b7      	bmi.n	801a31e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a3ae:	4546      	cmp	r6, r8
 801a3b0:	dab5      	bge.n	801a31e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a3b2:	461e      	mov	r6, r3
 801a3b4:	46a0      	mov	r8, r4
 801a3b6:	2e00      	cmp	r6, #0
 801a3b8:	ddb8      	ble.n	801a32c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a3ba:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a3be:	9902      	ldr	r1, [sp, #8]
 801a3c0:	1417      	asrs	r7, r2, #16
 801a3c2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a3c6:	fb0a 9707 	mla	r7, sl, r7, r9
 801a3ca:	4470      	add	r0, lr
 801a3cc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a3d0:	f828 7b02 	strh.w	r7, [r8], #2
 801a3d4:	4462      	add	r2, ip
 801a3d6:	3e01      	subs	r6, #1
 801a3d8:	e7ed      	b.n	801a3b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a3da:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a3de:	d414      	bmi.n	801a40a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a3e0:	68ae      	ldr	r6, [r5, #8]
 801a3e2:	454e      	cmp	r6, r9
 801a3e4:	dd11      	ble.n	801a40a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a3e6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a3ea:	d40e      	bmi.n	801a40a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a3ec:	68ef      	ldr	r7, [r5, #12]
 801a3ee:	4557      	cmp	r7, sl
 801a3f0:	dd0b      	ble.n	801a40a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a3f2:	b236      	sxth	r6, r6
 801a3f4:	fb0a 9606 	mla	r6, sl, r6, r9
 801a3f8:	9f02      	ldr	r7, [sp, #8]
 801a3fa:	f06f 0101 	mvn.w	r1, #1
 801a3fe:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a402:	fb01 f608 	mul.w	r6, r1, r8
 801a406:	9903      	ldr	r1, [sp, #12]
 801a408:	538f      	strh	r7, [r1, r6]
 801a40a:	4470      	add	r0, lr
 801a40c:	4462      	add	r2, ip
 801a40e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a412:	e788      	b.n	801a326 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a414:	b005      	add	sp, #20
 801a416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a41a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a41a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a41e:	b087      	sub	sp, #28
 801a420:	468b      	mov	fp, r1
 801a422:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a424:	9203      	str	r2, [sp, #12]
 801a426:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a42a:	9204      	str	r2, [sp, #16]
 801a42c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a430:	6841      	ldr	r1, [r0, #4]
 801a432:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a436:	fb01 2505 	mla	r5, r1, r5, r2
 801a43a:	6802      	ldr	r2, [r0, #0]
 801a43c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a440:	f8d9 2000 	ldr.w	r2, [r9]
 801a444:	9201      	str	r2, [sp, #4]
 801a446:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a44a:	f1bb 0f00 	cmp.w	fp, #0
 801a44e:	dc03      	bgt.n	801a458 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a450:	9a03      	ldr	r2, [sp, #12]
 801a452:	2a00      	cmp	r2, #0
 801a454:	f340 8159 	ble.w	801a70a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a458:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a45a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a45e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a462:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a466:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a468:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a46c:	2b00      	cmp	r3, #0
 801a46e:	dd0e      	ble.n	801a48e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a470:	1402      	asrs	r2, r0, #16
 801a472:	d405      	bmi.n	801a480 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a474:	42ba      	cmp	r2, r7
 801a476:	da03      	bge.n	801a480 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a478:	140a      	asrs	r2, r1, #16
 801a47a:	d401      	bmi.n	801a480 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a47c:	42b2      	cmp	r2, r6
 801a47e:	db07      	blt.n	801a490 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a480:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a482:	4410      	add	r0, r2
 801a484:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a486:	3b01      	subs	r3, #1
 801a488:	4411      	add	r1, r2
 801a48a:	3502      	adds	r5, #2
 801a48c:	e7ee      	b.n	801a46c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a48e:	d017      	beq.n	801a4c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a490:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a492:	1e5a      	subs	r2, r3, #1
 801a494:	fb04 0402 	mla	r4, r4, r2, r0
 801a498:	1424      	asrs	r4, r4, #16
 801a49a:	d409      	bmi.n	801a4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a49c:	42bc      	cmp	r4, r7
 801a49e:	da07      	bge.n	801a4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a4a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a4a2:	fb04 1202 	mla	r2, r4, r2, r1
 801a4a6:	1412      	asrs	r2, r2, #16
 801a4a8:	d402      	bmi.n	801a4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a4aa:	42b2      	cmp	r2, r6
 801a4ac:	f2c0 80bf 	blt.w	801a62e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a4b0:	2700      	movs	r7, #0
 801a4b2:	19da      	adds	r2, r3, r7
 801a4b4:	2a00      	cmp	r2, #0
 801a4b6:	dc3e      	bgt.n	801a536 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a4b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a4bc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a4c0:	f1bb 0f00 	cmp.w	fp, #0
 801a4c4:	f340 8121 	ble.w	801a70a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a4c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a4cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a4d0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a4d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4d6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a4da:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a4de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a4e2:	eeb0 6a62 	vmov.f32	s12, s5
 801a4e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a4ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a4ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a4f2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a4f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a4fa:	eeb0 6a43 	vmov.f32	s12, s6
 801a4fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a502:	ee12 2a90 	vmov	r2, s5
 801a506:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a50a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a50e:	ee13 2a10 	vmov	r2, s6
 801a512:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a516:	9313      	str	r3, [sp, #76]	; 0x4c
 801a518:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a51a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a51e:	9a03      	ldr	r2, [sp, #12]
 801a520:	9314      	str	r3, [sp, #80]	; 0x50
 801a522:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a526:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a528:	eeb0 3a67 	vmov.f32	s6, s15
 801a52c:	bf08      	it	eq
 801a52e:	4613      	moveq	r3, r2
 801a530:	eef0 2a47 	vmov.f32	s5, s14
 801a534:	e789      	b.n	801a44a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a536:	1406      	asrs	r6, r0, #16
 801a538:	d42d      	bmi.n	801a596 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a53a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a53e:	42b4      	cmp	r4, r6
 801a540:	dd29      	ble.n	801a596 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a542:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a546:	d426      	bmi.n	801a596 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a548:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a54c:	4562      	cmp	r2, ip
 801a54e:	dd22      	ble.n	801a596 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a550:	b224      	sxth	r4, r4
 801a552:	9a01      	ldr	r2, [sp, #4]
 801a554:	fb0c 6404 	mla	r4, ip, r4, r6
 801a558:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a55c:	0e22      	lsrs	r2, r4, #24
 801a55e:	d01a      	beq.n	801a596 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a560:	9e04      	ldr	r6, [sp, #16]
 801a562:	4372      	muls	r2, r6
 801a564:	1c56      	adds	r6, r2, #1
 801a566:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a56a:	1212      	asrs	r2, r2, #8
 801a56c:	0a26      	lsrs	r6, r4, #8
 801a56e:	2aff      	cmp	r2, #255	; 0xff
 801a570:	9605      	str	r6, [sp, #20]
 801a572:	d116      	bne.n	801a5a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a574:	f06f 0201 	mvn.w	r2, #1
 801a578:	fb02 fc07 	mul.w	ip, r2, r7
 801a57c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a580:	0962      	lsrs	r2, r4, #5
 801a582:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a586:	f026 0607 	bic.w	r6, r6, #7
 801a58a:	4316      	orrs	r6, r2
 801a58c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a590:	4326      	orrs	r6, r4
 801a592:	f825 600c 	strh.w	r6, [r5, ip]
 801a596:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a598:	4410      	add	r0, r2
 801a59a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a59c:	3f01      	subs	r7, #1
 801a59e:	4411      	add	r1, r2
 801a5a0:	e787      	b.n	801a4b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a5a2:	f06f 0601 	mvn.w	r6, #1
 801a5a6:	437e      	muls	r6, r7
 801a5a8:	fa1f fa82 	uxth.w	sl, r2
 801a5ac:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a5b0:	9602      	str	r6, [sp, #8]
 801a5b2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a5b6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a5ba:	43d2      	mvns	r2, r2
 801a5bc:	b2d2      	uxtb	r2, r2
 801a5be:	fb1c fc0a 	smulbb	ip, ip, sl
 801a5c2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a5c6:	fb0e ce02 	mla	lr, lr, r2, ip
 801a5ca:	b2e4      	uxtb	r4, r4
 801a5cc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a5d0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a5d4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a5d8:	fa5f f888 	uxtb.w	r8, r8
 801a5dc:	fb14 f40a 	smulbb	r4, r4, sl
 801a5e0:	fb08 4402 	mla	r4, r8, r2, r4
 801a5e4:	fa1f fe8e 	uxth.w	lr, lr
 801a5e8:	fb16 f60a 	smulbb	r6, r6, sl
 801a5ec:	b2a4      	uxth	r4, r4
 801a5ee:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a5f2:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a5f6:	f10e 0201 	add.w	r2, lr, #1
 801a5fa:	1c66      	adds	r6, r4, #1
 801a5fc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a600:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a604:	fa1f fc8c 	uxth.w	ip, ip
 801a608:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a60c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a610:	ea46 0e0e 	orr.w	lr, r6, lr
 801a614:	f10c 0601 	add.w	r6, ip, #1
 801a618:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a61c:	0976      	lsrs	r6, r6, #5
 801a61e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a622:	9a02      	ldr	r2, [sp, #8]
 801a624:	ea4e 0e06 	orr.w	lr, lr, r6
 801a628:	f825 e002 	strh.w	lr, [r5, r2]
 801a62c:	e7b3      	b.n	801a596 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a62e:	f04f 0800 	mov.w	r8, #0
 801a632:	eba3 0208 	sub.w	r2, r3, r8
 801a636:	2a00      	cmp	r2, #0
 801a638:	f77f af3e 	ble.w	801a4b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a63c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a640:	1404      	asrs	r4, r0, #16
 801a642:	140a      	asrs	r2, r1, #16
 801a644:	fb06 4202 	mla	r2, r6, r2, r4
 801a648:	9c01      	ldr	r4, [sp, #4]
 801a64a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a64e:	0e22      	lsrs	r2, r4, #24
 801a650:	d016      	beq.n	801a680 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a652:	9e04      	ldr	r6, [sp, #16]
 801a654:	4372      	muls	r2, r6
 801a656:	1c56      	adds	r6, r2, #1
 801a658:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a65c:	1212      	asrs	r2, r2, #8
 801a65e:	2aff      	cmp	r2, #255	; 0xff
 801a660:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a664:	d113      	bne.n	801a68e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a666:	0962      	lsrs	r2, r4, #5
 801a668:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a66c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a670:	f026 0607 	bic.w	r6, r6, #7
 801a674:	4316      	orrs	r6, r2
 801a676:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a67a:	4326      	orrs	r6, r4
 801a67c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a680:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a682:	4410      	add	r0, r2
 801a684:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a686:	f108 0801 	add.w	r8, r8, #1
 801a68a:	4411      	add	r1, r2
 801a68c:	e7d1      	b.n	801a632 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a68e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a692:	fa1f fa82 	uxth.w	sl, r2
 801a696:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a69a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a69e:	43d2      	mvns	r2, r2
 801a6a0:	b2d2      	uxtb	r2, r2
 801a6a2:	fb17 f70a 	smulbb	r7, r7, sl
 801a6a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a6aa:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a6ae:	b2e4      	uxtb	r4, r4
 801a6b0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a6b4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a6b8:	fa5f fe8e 	uxtb.w	lr, lr
 801a6bc:	fb14 f40a 	smulbb	r4, r4, sl
 801a6c0:	fb0e 4402 	mla	r4, lr, r2, r4
 801a6c4:	b2f6      	uxtb	r6, r6
 801a6c6:	fa1f fc8c 	uxth.w	ip, ip
 801a6ca:	fb16 f60a 	smulbb	r6, r6, sl
 801a6ce:	b2a4      	uxth	r4, r4
 801a6d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a6d4:	fb07 6702 	mla	r7, r7, r2, r6
 801a6d8:	f10c 0201 	add.w	r2, ip, #1
 801a6dc:	1c66      	adds	r6, r4, #1
 801a6de:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a6e2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a6e6:	b2bf      	uxth	r7, r7
 801a6e8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a6ec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a6f0:	ea46 0c0c 	orr.w	ip, r6, ip
 801a6f4:	1c7e      	adds	r6, r7, #1
 801a6f6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a6fa:	0976      	lsrs	r6, r6, #5
 801a6fc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a700:	ea4c 0c06 	orr.w	ip, ip, r6
 801a704:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a708:	e7ba      	b.n	801a680 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a70a:	b007      	add	sp, #28
 801a70c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a710 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a714:	b085      	sub	sp, #20
 801a716:	468b      	mov	fp, r1
 801a718:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a71a:	9203      	str	r2, [sp, #12]
 801a71c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a720:	6841      	ldr	r1, [r0, #4]
 801a722:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a726:	fb01 2404 	mla	r4, r1, r4, r2
 801a72a:	6802      	ldr	r2, [r0, #0]
 801a72c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a730:	f8d8 2000 	ldr.w	r2, [r8]
 801a734:	9201      	str	r2, [sp, #4]
 801a736:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a73a:	f1bb 0f00 	cmp.w	fp, #0
 801a73e:	dc03      	bgt.n	801a748 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a740:	9a03      	ldr	r2, [sp, #12]
 801a742:	2a00      	cmp	r2, #0
 801a744:	f340 814f 	ble.w	801a9e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a748:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a74a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a74e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a752:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a756:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a758:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a75c:	2b00      	cmp	r3, #0
 801a75e:	dd0e      	ble.n	801a77e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a760:	1408      	asrs	r0, r1, #16
 801a762:	d405      	bmi.n	801a770 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a764:	42b8      	cmp	r0, r7
 801a766:	da03      	bge.n	801a770 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a768:	1410      	asrs	r0, r2, #16
 801a76a:	d401      	bmi.n	801a770 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a76c:	42b0      	cmp	r0, r6
 801a76e:	db07      	blt.n	801a780 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a770:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a772:	4401      	add	r1, r0
 801a774:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a776:	3b01      	subs	r3, #1
 801a778:	4402      	add	r2, r0
 801a77a:	3402      	adds	r4, #2
 801a77c:	e7ee      	b.n	801a75c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a77e:	d017      	beq.n	801a7b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a780:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a782:	1e58      	subs	r0, r3, #1
 801a784:	fb05 1500 	mla	r5, r5, r0, r1
 801a788:	142d      	asrs	r5, r5, #16
 801a78a:	d409      	bmi.n	801a7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a78c:	42bd      	cmp	r5, r7
 801a78e:	da07      	bge.n	801a7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a790:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a792:	fb05 2000 	mla	r0, r5, r0, r2
 801a796:	1400      	asrs	r0, r0, #16
 801a798:	d402      	bmi.n	801a7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a79a:	42b0      	cmp	r0, r6
 801a79c:	f2c0 80ba 	blt.w	801a914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a7a0:	2600      	movs	r6, #0
 801a7a2:	1998      	adds	r0, r3, r6
 801a7a4:	2800      	cmp	r0, #0
 801a7a6:	dc3e      	bgt.n	801a826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a7a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a7ac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a7b0:	f1bb 0f00 	cmp.w	fp, #0
 801a7b4:	f340 8117 	ble.w	801a9e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a7b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a7bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a7c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a7c6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a7ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7d2:	eeb0 6a62 	vmov.f32	s12, s5
 801a7d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7e2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a7e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a7ea:	eeb0 6a43 	vmov.f32	s12, s6
 801a7ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a7f2:	ee12 2a90 	vmov	r2, s5
 801a7f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a7fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7fe:	ee13 2a10 	vmov	r2, s6
 801a802:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a806:	9311      	str	r3, [sp, #68]	; 0x44
 801a808:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a80a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a80e:	9a03      	ldr	r2, [sp, #12]
 801a810:	9312      	str	r3, [sp, #72]	; 0x48
 801a812:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a816:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a818:	eeb0 3a67 	vmov.f32	s6, s15
 801a81c:	bf08      	it	eq
 801a81e:	4613      	moveq	r3, r2
 801a820:	eef0 2a47 	vmov.f32	s5, s14
 801a824:	e789      	b.n	801a73a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a826:	140f      	asrs	r7, r1, #16
 801a828:	d424      	bmi.n	801a874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a82a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a82e:	42bd      	cmp	r5, r7
 801a830:	dd20      	ble.n	801a874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a832:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a836:	d41d      	bmi.n	801a874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a838:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a83c:	4560      	cmp	r0, ip
 801a83e:	dd19      	ble.n	801a874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a840:	b22d      	sxth	r5, r5
 801a842:	fb0c 7505 	mla	r5, ip, r5, r7
 801a846:	9801      	ldr	r0, [sp, #4]
 801a848:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a84c:	0e07      	lsrs	r7, r0, #24
 801a84e:	2fff      	cmp	r7, #255	; 0xff
 801a850:	d116      	bne.n	801a880 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a852:	f06f 0501 	mvn.w	r5, #1
 801a856:	fb05 f706 	mul.w	r7, r5, r6
 801a85a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a85e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a862:	0945      	lsrs	r5, r0, #5
 801a864:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a868:	ea4c 0505 	orr.w	r5, ip, r5
 801a86c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a870:	4305      	orrs	r5, r0
 801a872:	53e5      	strh	r5, [r4, r7]
 801a874:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a876:	4401      	add	r1, r0
 801a878:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a87a:	3e01      	subs	r6, #1
 801a87c:	4402      	add	r2, r0
 801a87e:	e790      	b.n	801a7a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a880:	b2fd      	uxtb	r5, r7
 801a882:	2f00      	cmp	r7, #0
 801a884:	d0f6      	beq.n	801a874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a886:	f06f 0701 	mvn.w	r7, #1
 801a88a:	4377      	muls	r7, r6
 801a88c:	fa1f f985 	uxth.w	r9, r5
 801a890:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a894:	9702      	str	r7, [sp, #8]
 801a896:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a89a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a89e:	43ed      	mvns	r5, r5
 801a8a0:	b2ed      	uxtb	r5, r5
 801a8a2:	fb17 f709 	smulbb	r7, r7, r9
 801a8a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8aa:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a8ae:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a8b2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a8b6:	b2c0      	uxtb	r0, r0
 801a8b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a8bc:	fa5f fe8e 	uxtb.w	lr, lr
 801a8c0:	fb10 f009 	smulbb	r0, r0, r9
 801a8c4:	fb0e 0005 	mla	r0, lr, r5, r0
 801a8c8:	b280      	uxth	r0, r0
 801a8ca:	fa1f fc8c 	uxth.w	ip, ip
 801a8ce:	fb1a fa09 	smulbb	sl, sl, r9
 801a8d2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a8d6:	fb07 a705 	mla	r7, r7, r5, sl
 801a8da:	f100 0a01 	add.w	sl, r0, #1
 801a8de:	f10c 0501 	add.w	r5, ip, #1
 801a8e2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a8e6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a8ea:	b2bf      	uxth	r7, r7
 801a8ec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a8f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a8f4:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a8f8:	f107 0a01 	add.w	sl, r7, #1
 801a8fc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a900:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a904:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a908:	9802      	ldr	r0, [sp, #8]
 801a90a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a90e:	f824 c000 	strh.w	ip, [r4, r0]
 801a912:	e7af      	b.n	801a874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a914:	f04f 0e00 	mov.w	lr, #0
 801a918:	eba3 000e 	sub.w	r0, r3, lr
 801a91c:	2800      	cmp	r0, #0
 801a91e:	f77f af43 	ble.w	801a7a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a922:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a926:	140d      	asrs	r5, r1, #16
 801a928:	1410      	asrs	r0, r2, #16
 801a92a:	fb06 5000 	mla	r0, r6, r0, r5
 801a92e:	9d01      	ldr	r5, [sp, #4]
 801a930:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a934:	0e2e      	lsrs	r6, r5, #24
 801a936:	2eff      	cmp	r6, #255	; 0xff
 801a938:	d112      	bne.n	801a960 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a93a:	482c      	ldr	r0, [pc, #176]	; (801a9ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a93c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a940:	0968      	lsrs	r0, r5, #5
 801a942:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a946:	4330      	orrs	r0, r6
 801a948:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a94c:	4328      	orrs	r0, r5
 801a94e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a952:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a954:	4401      	add	r1, r0
 801a956:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a958:	f10e 0e01 	add.w	lr, lr, #1
 801a95c:	4402      	add	r2, r0
 801a95e:	e7db      	b.n	801a918 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a960:	b2f0      	uxtb	r0, r6
 801a962:	2e00      	cmp	r6, #0
 801a964:	d0f5      	beq.n	801a952 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a966:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a96a:	fa1f f980 	uxth.w	r9, r0
 801a96e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a972:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a976:	43c0      	mvns	r0, r0
 801a978:	b2c0      	uxtb	r0, r0
 801a97a:	fb16 f609 	smulbb	r6, r6, r9
 801a97e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a982:	fb07 6700 	mla	r7, r7, r0, r6
 801a986:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a98a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a98e:	b2ed      	uxtb	r5, r5
 801a990:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a994:	fa5f fc8c 	uxtb.w	ip, ip
 801a998:	fb15 f509 	smulbb	r5, r5, r9
 801a99c:	fb0c 5500 	mla	r5, ip, r0, r5
 801a9a0:	b2bf      	uxth	r7, r7
 801a9a2:	fb1a fa09 	smulbb	sl, sl, r9
 801a9a6:	b2ad      	uxth	r5, r5
 801a9a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a9ac:	fb06 a600 	mla	r6, r6, r0, sl
 801a9b0:	1c78      	adds	r0, r7, #1
 801a9b2:	f105 0a01 	add.w	sl, r5, #1
 801a9b6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a9ba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a9be:	b2b6      	uxth	r6, r6
 801a9c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a9c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a9c8:	ea4a 0707 	orr.w	r7, sl, r7
 801a9cc:	f106 0a01 	add.w	sl, r6, #1
 801a9d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a9d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a9d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a9dc:	ea47 070a 	orr.w	r7, r7, sl
 801a9e0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a9e4:	e7b5      	b.n	801a952 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a9e6:	b005      	add	sp, #20
 801a9e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9ec:	fffff800 	.word	0xfffff800

0801a9f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a9f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9f4:	b087      	sub	sp, #28
 801a9f6:	468b      	mov	fp, r1
 801a9f8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a9fa:	9203      	str	r2, [sp, #12]
 801a9fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801aa00:	9204      	str	r2, [sp, #16]
 801aa02:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801aa06:	6841      	ldr	r1, [r0, #4]
 801aa08:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801aa0c:	fb01 2404 	mla	r4, r1, r4, r2
 801aa10:	6802      	ldr	r2, [r0, #0]
 801aa12:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aa16:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801aa1a:	3201      	adds	r2, #1
 801aa1c:	f022 0201 	bic.w	r2, r2, #1
 801aa20:	9200      	str	r2, [sp, #0]
 801aa22:	f8d9 2000 	ldr.w	r2, [r9]
 801aa26:	9201      	str	r2, [sp, #4]
 801aa28:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aa2c:	f1bb 0f00 	cmp.w	fp, #0
 801aa30:	dc03      	bgt.n	801aa3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aa32:	9a03      	ldr	r2, [sp, #12]
 801aa34:	2a00      	cmp	r2, #0
 801aa36:	f340 8169 	ble.w	801ad0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801aa3a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa3c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801aa40:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801aa44:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801aa48:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa4a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa4e:	2b00      	cmp	r3, #0
 801aa50:	dd0e      	ble.n	801aa70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801aa52:	1402      	asrs	r2, r0, #16
 801aa54:	d405      	bmi.n	801aa62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aa56:	42ba      	cmp	r2, r7
 801aa58:	da03      	bge.n	801aa62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aa5a:	140a      	asrs	r2, r1, #16
 801aa5c:	d401      	bmi.n	801aa62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aa5e:	42b2      	cmp	r2, r6
 801aa60:	db07      	blt.n	801aa72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801aa62:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa64:	4410      	add	r0, r2
 801aa66:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa68:	3b01      	subs	r3, #1
 801aa6a:	4411      	add	r1, r2
 801aa6c:	3402      	adds	r4, #2
 801aa6e:	e7ee      	b.n	801aa4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801aa70:	d017      	beq.n	801aaa2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801aa72:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aa74:	1e5a      	subs	r2, r3, #1
 801aa76:	fb05 0502 	mla	r5, r5, r2, r0
 801aa7a:	142d      	asrs	r5, r5, #16
 801aa7c:	d409      	bmi.n	801aa92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aa7e:	42bd      	cmp	r5, r7
 801aa80:	da07      	bge.n	801aa92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aa82:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aa84:	fb05 1202 	mla	r2, r5, r2, r1
 801aa88:	1412      	asrs	r2, r2, #16
 801aa8a:	d402      	bmi.n	801aa92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aa8c:	42b2      	cmp	r2, r6
 801aa8e:	f2c0 80c7 	blt.w	801ac20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801aa92:	2700      	movs	r7, #0
 801aa94:	19da      	adds	r2, r3, r7
 801aa96:	2a00      	cmp	r2, #0
 801aa98:	dc3e      	bgt.n	801ab18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801aa9a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aaa2:	f1bb 0f00 	cmp.w	fp, #0
 801aaa6:	f340 8131 	ble.w	801ad0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801aaaa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aaae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aab2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aab6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aab8:	f1bb 0b01 	subs.w	fp, fp, #1
 801aabc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aac0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aac4:	eeb0 6a62 	vmov.f32	s12, s5
 801aac8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aacc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aad0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aad4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aad8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aadc:	eeb0 6a43 	vmov.f32	s12, s6
 801aae0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aae4:	ee12 2a90 	vmov	r2, s5
 801aae8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aaec:	fb92 f3f3 	sdiv	r3, r2, r3
 801aaf0:	ee13 2a10 	vmov	r2, s6
 801aaf4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aaf8:	9313      	str	r3, [sp, #76]	; 0x4c
 801aafa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aafc:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab00:	9a03      	ldr	r2, [sp, #12]
 801ab02:	9314      	str	r3, [sp, #80]	; 0x50
 801ab04:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ab08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab0a:	eeb0 3a67 	vmov.f32	s6, s15
 801ab0e:	bf08      	it	eq
 801ab10:	4613      	moveq	r3, r2
 801ab12:	eef0 2a47 	vmov.f32	s5, s14
 801ab16:	e789      	b.n	801aa2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ab18:	1405      	asrs	r5, r0, #16
 801ab1a:	d435      	bmi.n	801ab88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab1c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ab20:	42aa      	cmp	r2, r5
 801ab22:	dd31      	ble.n	801ab88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab24:	140e      	asrs	r6, r1, #16
 801ab26:	d42f      	bmi.n	801ab88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab28:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ab2c:	42b2      	cmp	r2, r6
 801ab2e:	dd2b      	ble.n	801ab88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab30:	9a00      	ldr	r2, [sp, #0]
 801ab32:	fb06 5502 	mla	r5, r6, r2, r5
 801ab36:	086a      	lsrs	r2, r5, #1
 801ab38:	9e01      	ldr	r6, [sp, #4]
 801ab3a:	5cb2      	ldrb	r2, [r6, r2]
 801ab3c:	07ee      	lsls	r6, r5, #31
 801ab3e:	bf54      	ite	pl
 801ab40:	f002 020f 	andpl.w	r2, r2, #15
 801ab44:	1112      	asrmi	r2, r2, #4
 801ab46:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ab4a:	b2d2      	uxtb	r2, r2
 801ab4c:	b1e2      	cbz	r2, 801ab88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab4e:	9d04      	ldr	r5, [sp, #16]
 801ab50:	436a      	muls	r2, r5
 801ab52:	1c55      	adds	r5, r2, #1
 801ab54:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ab58:	4d6e      	ldr	r5, [pc, #440]	; (801ad14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ab5a:	682d      	ldr	r5, [r5, #0]
 801ab5c:	1212      	asrs	r2, r2, #8
 801ab5e:	0a2e      	lsrs	r6, r5, #8
 801ab60:	2aff      	cmp	r2, #255	; 0xff
 801ab62:	9605      	str	r6, [sp, #20]
 801ab64:	d116      	bne.n	801ab94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ab66:	f06f 0201 	mvn.w	r2, #1
 801ab6a:	fb02 fc07 	mul.w	ip, r2, r7
 801ab6e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801ab72:	096a      	lsrs	r2, r5, #5
 801ab74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab78:	f026 0607 	bic.w	r6, r6, #7
 801ab7c:	4316      	orrs	r6, r2
 801ab7e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ab82:	432e      	orrs	r6, r5
 801ab84:	f824 600c 	strh.w	r6, [r4, ip]
 801ab88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ab8a:	4410      	add	r0, r2
 801ab8c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ab8e:	3f01      	subs	r7, #1
 801ab90:	4411      	add	r1, r2
 801ab92:	e77f      	b.n	801aa94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801ab94:	f06f 0601 	mvn.w	r6, #1
 801ab98:	437e      	muls	r6, r7
 801ab9a:	fa1f fa82 	uxth.w	sl, r2
 801ab9e:	f834 8006 	ldrh.w	r8, [r4, r6]
 801aba2:	9602      	str	r6, [sp, #8]
 801aba4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801aba8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801abac:	43d2      	mvns	r2, r2
 801abae:	b2d2      	uxtb	r2, r2
 801abb0:	fb1c fc0a 	smulbb	ip, ip, sl
 801abb4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801abb8:	fb0e ce02 	mla	lr, lr, r2, ip
 801abbc:	b2ed      	uxtb	r5, r5
 801abbe:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801abc2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801abc6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801abca:	fa5f f888 	uxtb.w	r8, r8
 801abce:	fb15 f50a 	smulbb	r5, r5, sl
 801abd2:	fb08 5502 	mla	r5, r8, r2, r5
 801abd6:	fa1f fe8e 	uxth.w	lr, lr
 801abda:	fb16 f60a 	smulbb	r6, r6, sl
 801abde:	b2ad      	uxth	r5, r5
 801abe0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801abe4:	fb0c 6c02 	mla	ip, ip, r2, r6
 801abe8:	f10e 0201 	add.w	r2, lr, #1
 801abec:	1c6e      	adds	r6, r5, #1
 801abee:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801abf2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801abf6:	fa1f fc8c 	uxth.w	ip, ip
 801abfa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801abfe:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ac02:	ea46 0e0e 	orr.w	lr, r6, lr
 801ac06:	f10c 0601 	add.w	r6, ip, #1
 801ac0a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ac0e:	0976      	lsrs	r6, r6, #5
 801ac10:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ac14:	9a02      	ldr	r2, [sp, #8]
 801ac16:	ea4e 0e06 	orr.w	lr, lr, r6
 801ac1a:	f824 e002 	strh.w	lr, [r4, r2]
 801ac1e:	e7b3      	b.n	801ab88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ac20:	f04f 0800 	mov.w	r8, #0
 801ac24:	eba3 0208 	sub.w	r2, r3, r8
 801ac28:	2a00      	cmp	r2, #0
 801ac2a:	f77f af36 	ble.w	801aa9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ac2e:	9e00      	ldr	r6, [sp, #0]
 801ac30:	1402      	asrs	r2, r0, #16
 801ac32:	140d      	asrs	r5, r1, #16
 801ac34:	fb06 2505 	mla	r5, r6, r5, r2
 801ac38:	086a      	lsrs	r2, r5, #1
 801ac3a:	9e01      	ldr	r6, [sp, #4]
 801ac3c:	5cb2      	ldrb	r2, [r6, r2]
 801ac3e:	07ed      	lsls	r5, r5, #31
 801ac40:	bf54      	ite	pl
 801ac42:	f002 020f 	andpl.w	r2, r2, #15
 801ac46:	1112      	asrmi	r2, r2, #4
 801ac48:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ac4c:	b2d2      	uxtb	r2, r2
 801ac4e:	b1c2      	cbz	r2, 801ac82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ac50:	9d04      	ldr	r5, [sp, #16]
 801ac52:	436a      	muls	r2, r5
 801ac54:	1c55      	adds	r5, r2, #1
 801ac56:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ac5a:	4d2e      	ldr	r5, [pc, #184]	; (801ad14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ac5c:	1212      	asrs	r2, r2, #8
 801ac5e:	682e      	ldr	r6, [r5, #0]
 801ac60:	2aff      	cmp	r2, #255	; 0xff
 801ac62:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ac66:	d113      	bne.n	801ac90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ac68:	0972      	lsrs	r2, r6, #5
 801ac6a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ac6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ac72:	f025 0507 	bic.w	r5, r5, #7
 801ac76:	4315      	orrs	r5, r2
 801ac78:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ac7c:	4335      	orrs	r5, r6
 801ac7e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ac82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ac84:	4410      	add	r0, r2
 801ac86:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ac88:	f108 0801 	add.w	r8, r8, #1
 801ac8c:	4411      	add	r1, r2
 801ac8e:	e7c9      	b.n	801ac24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ac90:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ac94:	fa1f fa82 	uxth.w	sl, r2
 801ac98:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ac9c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801aca0:	43d2      	mvns	r2, r2
 801aca2:	b2d2      	uxtb	r2, r2
 801aca4:	fb17 f70a 	smulbb	r7, r7, sl
 801aca8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801acac:	fb0c 7c02 	mla	ip, ip, r2, r7
 801acb0:	b2f6      	uxtb	r6, r6
 801acb2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801acb6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801acba:	fa5f fe8e 	uxtb.w	lr, lr
 801acbe:	fb16 f60a 	smulbb	r6, r6, sl
 801acc2:	fb0e 6602 	mla	r6, lr, r2, r6
 801acc6:	b2ed      	uxtb	r5, r5
 801acc8:	fa1f fc8c 	uxth.w	ip, ip
 801accc:	fb15 f50a 	smulbb	r5, r5, sl
 801acd0:	b2b6      	uxth	r6, r6
 801acd2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801acd6:	fb07 5702 	mla	r7, r7, r2, r5
 801acda:	f10c 0201 	add.w	r2, ip, #1
 801acde:	1c75      	adds	r5, r6, #1
 801ace0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ace4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ace8:	b2bf      	uxth	r7, r7
 801acea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801acee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801acf2:	ea45 0c0c 	orr.w	ip, r5, ip
 801acf6:	1c7d      	adds	r5, r7, #1
 801acf8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801acfc:	096d      	lsrs	r5, r5, #5
 801acfe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ad02:	ea4c 0c05 	orr.w	ip, ip, r5
 801ad06:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ad0a:	e7ba      	b.n	801ac82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ad0c:	b007      	add	sp, #28
 801ad0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad12:	bf00      	nop
 801ad14:	20012e8c 	.word	0x20012e8c

0801ad18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad1c:	b087      	sub	sp, #28
 801ad1e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801b02c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801ad22:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ad24:	9205      	str	r2, [sp, #20]
 801ad26:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ad2a:	9101      	str	r1, [sp, #4]
 801ad2c:	6841      	ldr	r1, [r0, #4]
 801ad2e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ad32:	fb01 2404 	mla	r4, r1, r4, r2
 801ad36:	6802      	ldr	r2, [r0, #0]
 801ad38:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ad3c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ad40:	3201      	adds	r2, #1
 801ad42:	f022 0201 	bic.w	r2, r2, #1
 801ad46:	9202      	str	r2, [sp, #8]
 801ad48:	f8db 2000 	ldr.w	r2, [fp]
 801ad4c:	9203      	str	r2, [sp, #12]
 801ad4e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ad52:	9a01      	ldr	r2, [sp, #4]
 801ad54:	2a00      	cmp	r2, #0
 801ad56:	dc03      	bgt.n	801ad60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ad58:	9a05      	ldr	r2, [sp, #20]
 801ad5a:	2a00      	cmp	r2, #0
 801ad5c:	f340 8162 	ble.w	801b024 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ad60:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ad62:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ad66:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ad6a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ad6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ad70:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ad74:	2b00      	cmp	r3, #0
 801ad76:	dd0e      	ble.n	801ad96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ad78:	1402      	asrs	r2, r0, #16
 801ad7a:	d405      	bmi.n	801ad88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ad7c:	42ba      	cmp	r2, r7
 801ad7e:	da03      	bge.n	801ad88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ad80:	140a      	asrs	r2, r1, #16
 801ad82:	d401      	bmi.n	801ad88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ad84:	42b2      	cmp	r2, r6
 801ad86:	db07      	blt.n	801ad98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ad88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ad8a:	4410      	add	r0, r2
 801ad8c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ad8e:	3b01      	subs	r3, #1
 801ad90:	4411      	add	r1, r2
 801ad92:	3402      	adds	r4, #2
 801ad94:	e7ee      	b.n	801ad74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ad96:	d017      	beq.n	801adc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ad98:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ad9a:	1e5a      	subs	r2, r3, #1
 801ad9c:	fb05 0502 	mla	r5, r5, r2, r0
 801ada0:	142d      	asrs	r5, r5, #16
 801ada2:	d409      	bmi.n	801adb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ada4:	42bd      	cmp	r5, r7
 801ada6:	da07      	bge.n	801adb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ada8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801adaa:	fb05 1202 	mla	r2, r5, r2, r1
 801adae:	1412      	asrs	r2, r2, #16
 801adb0:	d402      	bmi.n	801adb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801adb2:	42b2      	cmp	r2, r6
 801adb4:	f2c0 80c3 	blt.w	801af3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801adb8:	2500      	movs	r5, #0
 801adba:	195a      	adds	r2, r3, r5
 801adbc:	2a00      	cmp	r2, #0
 801adbe:	dc3f      	bgt.n	801ae40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801adc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801adc4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801adc8:	9b01      	ldr	r3, [sp, #4]
 801adca:	2b00      	cmp	r3, #0
 801adcc:	f340 812a 	ble.w	801b024 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801add0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801add4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801add8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801addc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801adde:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ade2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ade6:	eeb0 6a62 	vmov.f32	s12, s5
 801adea:	ee61 7a27 	vmul.f32	s15, s2, s15
 801adee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801adf2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801adf6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801adfa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801adfe:	eeb0 6a43 	vmov.f32	s12, s6
 801ae02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae06:	ee12 2a90 	vmov	r2, s5
 801ae0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae0e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae12:	ee13 2a10 	vmov	r2, s6
 801ae16:	9313      	str	r3, [sp, #76]	; 0x4c
 801ae18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae1e:	9314      	str	r3, [sp, #80]	; 0x50
 801ae20:	9b01      	ldr	r3, [sp, #4]
 801ae22:	9a05      	ldr	r2, [sp, #20]
 801ae24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae28:	3b01      	subs	r3, #1
 801ae2a:	9301      	str	r3, [sp, #4]
 801ae2c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ae30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae32:	eeb0 3a67 	vmov.f32	s6, s15
 801ae36:	bf08      	it	eq
 801ae38:	4613      	moveq	r3, r2
 801ae3a:	eef0 2a47 	vmov.f32	s5, s14
 801ae3e:	e788      	b.n	801ad52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ae40:	1406      	asrs	r6, r0, #16
 801ae42:	d42c      	bmi.n	801ae9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae44:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ae48:	42b2      	cmp	r2, r6
 801ae4a:	dd28      	ble.n	801ae9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae4c:	140f      	asrs	r7, r1, #16
 801ae4e:	d426      	bmi.n	801ae9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae50:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ae54:	42ba      	cmp	r2, r7
 801ae56:	dd22      	ble.n	801ae9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae58:	9a02      	ldr	r2, [sp, #8]
 801ae5a:	fb07 6602 	mla	r6, r7, r2, r6
 801ae5e:	0872      	lsrs	r2, r6, #1
 801ae60:	9f03      	ldr	r7, [sp, #12]
 801ae62:	5cba      	ldrb	r2, [r7, r2]
 801ae64:	07f6      	lsls	r6, r6, #31
 801ae66:	bf54      	ite	pl
 801ae68:	f002 020f 	andpl.w	r2, r2, #15
 801ae6c:	1112      	asrmi	r2, r2, #4
 801ae6e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ae72:	b2d2      	uxtb	r2, r2
 801ae74:	2aff      	cmp	r2, #255	; 0xff
 801ae76:	d118      	bne.n	801aeaa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ae78:	f8d8 2000 	ldr.w	r2, [r8]
 801ae7c:	f06f 0601 	mvn.w	r6, #1
 801ae80:	fb06 f705 	mul.w	r7, r6, r5
 801ae84:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ae88:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ae8c:	0956      	lsrs	r6, r2, #5
 801ae8e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ae92:	ea4c 0606 	orr.w	r6, ip, r6
 801ae96:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ae9a:	4316      	orrs	r6, r2
 801ae9c:	53e6      	strh	r6, [r4, r7]
 801ae9e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aea0:	4410      	add	r0, r2
 801aea2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aea4:	3d01      	subs	r5, #1
 801aea6:	4411      	add	r1, r2
 801aea8:	e787      	b.n	801adba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aeaa:	2a00      	cmp	r2, #0
 801aeac:	d0f7      	beq.n	801ae9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aeae:	f06f 0601 	mvn.w	r6, #1
 801aeb2:	436e      	muls	r6, r5
 801aeb4:	f8d8 c000 	ldr.w	ip, [r8]
 801aeb8:	f834 e006 	ldrh.w	lr, [r4, r6]
 801aebc:	9604      	str	r6, [sp, #16]
 801aebe:	fa1f f982 	uxth.w	r9, r2
 801aec2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801aec6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801aeca:	43d2      	mvns	r2, r2
 801aecc:	b2d2      	uxtb	r2, r2
 801aece:	fb16 f609 	smulbb	r6, r6, r9
 801aed2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aed6:	fb07 6702 	mla	r7, r7, r2, r6
 801aeda:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801aede:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801aee2:	fa5f fc8c 	uxtb.w	ip, ip
 801aee6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aeea:	fa5f fe8e 	uxtb.w	lr, lr
 801aeee:	fb1c fc09 	smulbb	ip, ip, r9
 801aef2:	fb0e cc02 	mla	ip, lr, r2, ip
 801aef6:	b2bf      	uxth	r7, r7
 801aef8:	fb1a fa09 	smulbb	sl, sl, r9
 801aefc:	fa1f fc8c 	uxth.w	ip, ip
 801af00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af04:	fb06 a602 	mla	r6, r6, r2, sl
 801af08:	1c7a      	adds	r2, r7, #1
 801af0a:	f10c 0a01 	add.w	sl, ip, #1
 801af0e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801af12:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801af16:	b2b6      	uxth	r6, r6
 801af18:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af1c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801af20:	ea4a 0707 	orr.w	r7, sl, r7
 801af24:	f106 0a01 	add.w	sl, r6, #1
 801af28:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801af2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af30:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af34:	9a04      	ldr	r2, [sp, #16]
 801af36:	ea47 070a 	orr.w	r7, r7, sl
 801af3a:	52a7      	strh	r7, [r4, r2]
 801af3c:	e7af      	b.n	801ae9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801af3e:	f04f 0e00 	mov.w	lr, #0
 801af42:	eba3 020e 	sub.w	r2, r3, lr
 801af46:	2a00      	cmp	r2, #0
 801af48:	f77f af3a 	ble.w	801adc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801af4c:	9e02      	ldr	r6, [sp, #8]
 801af4e:	1402      	asrs	r2, r0, #16
 801af50:	140d      	asrs	r5, r1, #16
 801af52:	fb06 2505 	mla	r5, r6, r5, r2
 801af56:	086a      	lsrs	r2, r5, #1
 801af58:	9e03      	ldr	r6, [sp, #12]
 801af5a:	5cb2      	ldrb	r2, [r6, r2]
 801af5c:	07ed      	lsls	r5, r5, #31
 801af5e:	bf54      	ite	pl
 801af60:	f002 020f 	andpl.w	r2, r2, #15
 801af64:	1112      	asrmi	r2, r2, #4
 801af66:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801af6a:	b2d2      	uxtb	r2, r2
 801af6c:	2aff      	cmp	r2, #255	; 0xff
 801af6e:	d115      	bne.n	801af9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801af70:	f8d8 5000 	ldr.w	r5, [r8]
 801af74:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801af78:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801af7c:	096a      	lsrs	r2, r5, #5
 801af7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801af82:	4332      	orrs	r2, r6
 801af84:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801af88:	432a      	orrs	r2, r5
 801af8a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801af8e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801af90:	4410      	add	r0, r2
 801af92:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801af94:	f10e 0e01 	add.w	lr, lr, #1
 801af98:	4411      	add	r1, r2
 801af9a:	e7d2      	b.n	801af42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801af9c:	2a00      	cmp	r2, #0
 801af9e:	d0f6      	beq.n	801af8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801afa0:	f8d8 7000 	ldr.w	r7, [r8]
 801afa4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801afa8:	fa1f f982 	uxth.w	r9, r2
 801afac:	ea4f 262c 	mov.w	r6, ip, asr #8
 801afb0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801afb4:	43d2      	mvns	r2, r2
 801afb6:	b2d2      	uxtb	r2, r2
 801afb8:	fb15 f509 	smulbb	r5, r5, r9
 801afbc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801afc0:	fb06 5602 	mla	r6, r6, r2, r5
 801afc4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801afc8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801afcc:	b2ff      	uxtb	r7, r7
 801afce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801afd2:	fa5f fc8c 	uxtb.w	ip, ip
 801afd6:	fb17 f709 	smulbb	r7, r7, r9
 801afda:	fb0c 7702 	mla	r7, ip, r2, r7
 801afde:	b2b6      	uxth	r6, r6
 801afe0:	fb1a fa09 	smulbb	sl, sl, r9
 801afe4:	b2bf      	uxth	r7, r7
 801afe6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801afea:	fb05 a502 	mla	r5, r5, r2, sl
 801afee:	1c72      	adds	r2, r6, #1
 801aff0:	f107 0a01 	add.w	sl, r7, #1
 801aff4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801aff8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801affc:	b2ad      	uxth	r5, r5
 801affe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b002:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b006:	ea4a 0606 	orr.w	r6, sl, r6
 801b00a:	f105 0a01 	add.w	sl, r5, #1
 801b00e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b012:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b016:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b01a:	ea46 060a 	orr.w	r6, r6, sl
 801b01e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801b022:	e7b4      	b.n	801af8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b024:	b007      	add	sp, #28
 801b026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b02a:	bf00      	nop
 801b02c:	20012e8c 	.word	0x20012e8c

0801b030 <_ZN8touchgfx8LCD16bppD1Ev>:
 801b030:	4770      	bx	lr

0801b032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801b032:	4770      	bx	lr

0801b034 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801b034:	4770      	bx	lr

0801b036 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801b036:	4770      	bx	lr

0801b038 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801b038:	4770      	bx	lr

0801b03a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801b03a:	4770      	bx	lr

0801b03c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801b03c:	4770      	bx	lr

0801b03e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801b03e:	4770      	bx	lr

0801b040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b040:	4770      	bx	lr

0801b042 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b042:	4770      	bx	lr

0801b044 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b044:	4770      	bx	lr

0801b046 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b046:	4770      	bx	lr

0801b048 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b048:	4770      	bx	lr

0801b04a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b04a:	4770      	bx	lr

0801b04c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b04c:	4770      	bx	lr

0801b04e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b04e:	4770      	bx	lr

0801b050 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b050:	4770      	bx	lr

0801b052 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b052:	4770      	bx	lr

0801b054 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b054:	4770      	bx	lr

0801b056 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b056:	4770      	bx	lr

0801b058 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b058:	4770      	bx	lr

0801b05a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b05a:	4770      	bx	lr

0801b05c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b05c:	4770      	bx	lr

0801b05e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b05e:	4770      	bx	lr

0801b060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b060:	4770      	bx	lr

0801b062 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801b062:	4770      	bx	lr

0801b064 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b064:	4770      	bx	lr

0801b066 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801b066:	4770      	bx	lr

0801b068 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b068:	4770      	bx	lr

0801b06a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b06a:	4770      	bx	lr

0801b06c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b06c:	4770      	bx	lr

0801b06e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b06e:	4770      	bx	lr

0801b070 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801b070:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b074:	b088      	sub	sp, #32
 801b076:	ac08      	add	r4, sp, #32
 801b078:	4606      	mov	r6, r0
 801b07a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801b07e:	4620      	mov	r0, r4
 801b080:	4688      	mov	r8, r1
 801b082:	4691      	mov	r9, r2
 801b084:	f7fd fc62 	bl	801894c <_ZNK8touchgfx6Bitmap7getDataEv>
 801b088:	6833      	ldr	r3, [r6, #0]
 801b08a:	4605      	mov	r5, r0
 801b08c:	4620      	mov	r0, r4
 801b08e:	699f      	ldr	r7, [r3, #24]
 801b090:	f7fd fb70 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b094:	4682      	mov	sl, r0
 801b096:	4620      	mov	r0, r4
 801b098:	f7fd fba0 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b09c:	9500      	str	r5, [sp, #0]
 801b09e:	e9cd a001 	strd	sl, r0, [sp, #4]
 801b0a2:	464b      	mov	r3, r9
 801b0a4:	a806      	add	r0, sp, #24
 801b0a6:	4642      	mov	r2, r8
 801b0a8:	4631      	mov	r1, r6
 801b0aa:	47b8      	blx	r7
 801b0ac:	4628      	mov	r0, r5
 801b0ae:	b008      	add	sp, #32
 801b0b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801b0b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801b0b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b0b8:	2300      	movs	r3, #0
 801b0ba:	9300      	str	r3, [sp, #0]
 801b0bc:	4b3d      	ldr	r3, [pc, #244]	; (801b1b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801b0be:	781b      	ldrb	r3, [r3, #0]
 801b0c0:	2b00      	cmp	r3, #0
 801b0c2:	d137      	bne.n	801b134 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801b0c4:	4a3c      	ldr	r2, [pc, #240]	; (801b1b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b0c6:	f9b2 2000 	ldrsh.w	r2, [r2]
 801b0ca:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b0ce:	2b00      	cmp	r3, #0
 801b0d0:	d132      	bne.n	801b138 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801b0d2:	4b3a      	ldr	r3, [pc, #232]	; (801b1bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b0d4:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b0d8:	6808      	ldr	r0, [r1, #0]
 801b0da:	6849      	ldr	r1, [r1, #4]
 801b0dc:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b0e0:	ac02      	add	r4, sp, #8
 801b0e2:	ab02      	add	r3, sp, #8
 801b0e4:	c303      	stmia	r3!, {r0, r1}
 801b0e6:	4669      	mov	r1, sp
 801b0e8:	4620      	mov	r0, r4
 801b0ea:	f7f9 fdc1 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b0ee:	4668      	mov	r0, sp
 801b0f0:	f7f9 fd7a 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b0f4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801b0f8:	f8bd 2000 	ldrh.w	r2, [sp]
 801b0fc:	4d30      	ldr	r5, [pc, #192]	; (801b1c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801b0fe:	4413      	add	r3, r2
 801b100:	f8ad 3008 	strh.w	r3, [sp, #8]
 801b104:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b108:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801b10c:	6828      	ldr	r0, [r5, #0]
 801b10e:	4413      	add	r3, r2
 801b110:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b114:	6803      	ldr	r3, [r0, #0]
 801b116:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b118:	4798      	blx	r3
 801b11a:	f010 0f01 	tst.w	r0, #1
 801b11e:	462f      	mov	r7, r5
 801b120:	d00c      	beq.n	801b13c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801b122:	6828      	ldr	r0, [r5, #0]
 801b124:	6803      	ldr	r3, [r0, #0]
 801b126:	e894 0006 	ldmia.w	r4, {r1, r2}
 801b12a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b12c:	4798      	blx	r3
 801b12e:	b004      	add	sp, #16
 801b130:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b134:	4a21      	ldr	r2, [pc, #132]	; (801b1bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b136:	e7c6      	b.n	801b0c6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b138:	4b1f      	ldr	r3, [pc, #124]	; (801b1b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b13a:	e7cb      	b.n	801b0d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b13c:	6838      	ldr	r0, [r7, #0]
 801b13e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b142:	6803      	ldr	r3, [r0, #0]
 801b144:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b148:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b14a:	4798      	blx	r3
 801b14c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b150:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b154:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b158:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b15c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b160:	6838      	ldr	r0, [r7, #0]
 801b162:	6803      	ldr	r3, [r0, #0]
 801b164:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b166:	4798      	blx	r3
 801b168:	4a13      	ldr	r2, [pc, #76]	; (801b1b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b16a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b16e:	8813      	ldrh	r3, [r2, #0]
 801b170:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b174:	fb03 1404 	mla	r4, r3, r4, r1
 801b178:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b17c:	435d      	muls	r5, r3
 801b17e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b182:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b186:	4691      	mov	r9, r2
 801b188:	6838      	ldr	r0, [r7, #0]
 801b18a:	42ac      	cmp	r4, r5
 801b18c:	6803      	ldr	r3, [r0, #0]
 801b18e:	d20e      	bcs.n	801b1ae <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b190:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801b194:	4632      	mov	r2, r6
 801b196:	4643      	mov	r3, r8
 801b198:	4621      	mov	r1, r4
 801b19a:	47d0      	blx	sl
 801b19c:	f8b9 3000 	ldrh.w	r3, [r9]
 801b1a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b1a4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b1a8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b1ac:	e7ec      	b.n	801b188 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b1ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b1b0:	4798      	blx	r3
 801b1b2:	e7bc      	b.n	801b12e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b1b4:	20012e74 	.word	0x20012e74
 801b1b8:	20012e76 	.word	0x20012e76
 801b1bc:	20012e78 	.word	0x20012e78
 801b1c0:	20012e7c 	.word	0x20012e7c

0801b1c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b1c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1c8:	b08b      	sub	sp, #44	; 0x2c
 801b1ca:	460f      	mov	r7, r1
 801b1cc:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801b1d0:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801b1d4:	4616      	mov	r6, r2
 801b1d6:	f1bb 0f00 	cmp.w	fp, #0
 801b1da:	d04a      	beq.n	801b272 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b1dc:	6810      	ldr	r0, [r2, #0]
 801b1de:	6851      	ldr	r1, [r2, #4]
 801b1e0:	ad06      	add	r5, sp, #24
 801b1e2:	c503      	stmia	r5!, {r0, r1}
 801b1e4:	6818      	ldr	r0, [r3, #0]
 801b1e6:	6859      	ldr	r1, [r3, #4]
 801b1e8:	ad08      	add	r5, sp, #32
 801b1ea:	c503      	stmia	r5!, {r0, r1}
 801b1ec:	a806      	add	r0, sp, #24
 801b1ee:	f7f9 fcfb 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b1f2:	4631      	mov	r1, r6
 801b1f4:	a808      	add	r0, sp, #32
 801b1f6:	f7f9 fd3b 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b1fa:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b1fe:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b202:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b206:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b20a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b20e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b212:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b216:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b21a:	4f5f      	ldr	r7, [pc, #380]	; (801b398 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b21c:	440a      	add	r2, r1
 801b21e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b222:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b226:	6838      	ldr	r0, [r7, #0]
 801b228:	4413      	add	r3, r2
 801b22a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b22e:	6803      	ldr	r3, [r0, #0]
 801b230:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b232:	4798      	blx	r3
 801b234:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b238:	46b9      	mov	r9, r7
 801b23a:	d11d      	bne.n	801b278 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b23c:	b9fc      	cbnz	r4, 801b27e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b23e:	f010 0f01 	tst.w	r0, #1
 801b242:	d01c      	beq.n	801b27e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b244:	f8d9 0000 	ldr.w	r0, [r9]
 801b248:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b24c:	6801      	ldr	r1, [r0, #0]
 801b24e:	f8cd b00c 	str.w	fp, [sp, #12]
 801b252:	2700      	movs	r7, #0
 801b254:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b258:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b25c:	9402      	str	r4, [sp, #8]
 801b25e:	b2ad      	uxth	r5, r5
 801b260:	fa1f f488 	uxth.w	r4, r8
 801b264:	9501      	str	r5, [sp, #4]
 801b266:	9400      	str	r4, [sp, #0]
 801b268:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b26a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b26e:	4631      	mov	r1, r6
 801b270:	47a0      	blx	r4
 801b272:	b00b      	add	sp, #44	; 0x2c
 801b274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b278:	f010 0f04 	tst.w	r0, #4
 801b27c:	e7e1      	b.n	801b242 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801b27e:	f8d9 0000 	ldr.w	r0, [r9]
 801b282:	6803      	ldr	r3, [r0, #0]
 801b284:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b286:	4798      	blx	r3
 801b288:	4b44      	ldr	r3, [pc, #272]	; (801b39c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b28a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b28e:	881a      	ldrh	r2, [r3, #0]
 801b290:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b294:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b298:	fb02 1404 	mla	r4, r2, r4, r1
 801b29c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b2a0:	469a      	mov	sl, r3
 801b2a2:	fb05 f502 	mul.w	r5, r5, r2
 801b2a6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b2aa:	d059      	beq.n	801b360 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b2ac:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b2b0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b2b4:	fa1f f28b 	uxth.w	r2, fp
 801b2b8:	fa1f f989 	uxth.w	r9, r9
 801b2bc:	469e      	mov	lr, r3
 801b2be:	42ac      	cmp	r4, r5
 801b2c0:	d264      	bcs.n	801b38c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b2c2:	eb04 0a07 	add.w	sl, r4, r7
 801b2c6:	4554      	cmp	r4, sl
 801b2c8:	d23d      	bcs.n	801b346 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b2ca:	8821      	ldrh	r1, [r4, #0]
 801b2cc:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b2d0:	1208      	asrs	r0, r1, #8
 801b2d2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b2d6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b2da:	fb10 f009 	smulbb	r0, r0, r9
 801b2de:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b2e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b2e6:	00c9      	lsls	r1, r1, #3
 801b2e8:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b2ec:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b2f0:	10d8      	asrs	r0, r3, #3
 801b2f2:	b2c9      	uxtb	r1, r1
 801b2f4:	00db      	lsls	r3, r3, #3
 801b2f6:	fa1f fc8c 	uxth.w	ip, ip
 801b2fa:	fb1b fb09 	smulbb	fp, fp, r9
 801b2fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b302:	b2db      	uxtb	r3, r3
 801b304:	fb11 f109 	smulbb	r1, r1, r9
 801b308:	fb00 b002 	mla	r0, r0, r2, fp
 801b30c:	fb03 1302 	mla	r3, r3, r2, r1
 801b310:	f10c 0b01 	add.w	fp, ip, #1
 801b314:	b29b      	uxth	r3, r3
 801b316:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b31a:	b280      	uxth	r0, r0
 801b31c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b320:	f103 0c01 	add.w	ip, r3, #1
 801b324:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b328:	1c43      	adds	r3, r0, #1
 801b32a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b32e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b332:	0940      	lsrs	r0, r0, #5
 801b334:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b338:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b33c:	ea4c 0c00 	orr.w	ip, ip, r0
 801b340:	f824 cb02 	strh.w	ip, [r4], #2
 801b344:	e7bf      	b.n	801b2c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b346:	f8be 3000 	ldrh.w	r3, [lr]
 801b34a:	eba3 0308 	sub.w	r3, r3, r8
 801b34e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b352:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b356:	eba3 0308 	sub.w	r3, r3, r8
 801b35a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b35e:	e7ae      	b.n	801b2be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b360:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b364:	f8d9 0000 	ldr.w	r0, [r9]
 801b368:	42ac      	cmp	r4, r5
 801b36a:	6803      	ldr	r3, [r0, #0]
 801b36c:	d20e      	bcs.n	801b38c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b36e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b372:	4632      	mov	r2, r6
 801b374:	463b      	mov	r3, r7
 801b376:	4621      	mov	r1, r4
 801b378:	47c0      	blx	r8
 801b37a:	f8ba 3000 	ldrh.w	r3, [sl]
 801b37e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b382:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b386:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b38a:	e7eb      	b.n	801b364 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b38c:	4b02      	ldr	r3, [pc, #8]	; (801b398 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b38e:	6818      	ldr	r0, [r3, #0]
 801b390:	6803      	ldr	r3, [r0, #0]
 801b392:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b394:	4798      	blx	r3
 801b396:	e76c      	b.n	801b272 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b398:	20012e7c 	.word	0x20012e7c
 801b39c:	20012e76 	.word	0x20012e76

0801b3a0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b3a0:	b510      	push	{r4, lr}
 801b3a2:	2184      	movs	r1, #132	; 0x84
 801b3a4:	4604      	mov	r4, r0
 801b3a6:	f00d fe4a 	bl	802903e <_ZdlPvj>
 801b3aa:	4620      	mov	r0, r4
 801b3ac:	bd10      	pop	{r4, pc}

0801b3ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b3ae:	b510      	push	{r4, lr}
 801b3b0:	2104      	movs	r1, #4
 801b3b2:	4604      	mov	r4, r0
 801b3b4:	f00d fe43 	bl	802903e <_ZdlPvj>
 801b3b8:	4620      	mov	r0, r4
 801b3ba:	bd10      	pop	{r4, pc}

0801b3bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b3bc:	b510      	push	{r4, lr}
 801b3be:	2104      	movs	r1, #4
 801b3c0:	4604      	mov	r4, r0
 801b3c2:	f00d fe3c 	bl	802903e <_ZdlPvj>
 801b3c6:	4620      	mov	r0, r4
 801b3c8:	bd10      	pop	{r4, pc}

0801b3ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b3ca:	b510      	push	{r4, lr}
 801b3cc:	f640 0144 	movw	r1, #2116	; 0x844
 801b3d0:	4604      	mov	r4, r0
 801b3d2:	f00d fe34 	bl	802903e <_ZdlPvj>
 801b3d6:	4620      	mov	r0, r4
 801b3d8:	bd10      	pop	{r4, pc}

0801b3da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b3da:	b510      	push	{r4, lr}
 801b3dc:	2104      	movs	r1, #4
 801b3de:	4604      	mov	r4, r0
 801b3e0:	f00d fe2d 	bl	802903e <_ZdlPvj>
 801b3e4:	4620      	mov	r0, r4
 801b3e6:	bd10      	pop	{r4, pc}

0801b3e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b3e8:	b510      	push	{r4, lr}
 801b3ea:	2104      	movs	r1, #4
 801b3ec:	4604      	mov	r4, r0
 801b3ee:	f00d fe26 	bl	802903e <_ZdlPvj>
 801b3f2:	4620      	mov	r0, r4
 801b3f4:	bd10      	pop	{r4, pc}

0801b3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b3f6:	b510      	push	{r4, lr}
 801b3f8:	2104      	movs	r1, #4
 801b3fa:	4604      	mov	r4, r0
 801b3fc:	f00d fe1f 	bl	802903e <_ZdlPvj>
 801b400:	4620      	mov	r0, r4
 801b402:	bd10      	pop	{r4, pc}

0801b404 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b404:	b510      	push	{r4, lr}
 801b406:	2104      	movs	r1, #4
 801b408:	4604      	mov	r4, r0
 801b40a:	f00d fe18 	bl	802903e <_ZdlPvj>
 801b40e:	4620      	mov	r0, r4
 801b410:	bd10      	pop	{r4, pc}

0801b412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b412:	b510      	push	{r4, lr}
 801b414:	2104      	movs	r1, #4
 801b416:	4604      	mov	r4, r0
 801b418:	f00d fe11 	bl	802903e <_ZdlPvj>
 801b41c:	4620      	mov	r0, r4
 801b41e:	bd10      	pop	{r4, pc}

0801b420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b420:	b510      	push	{r4, lr}
 801b422:	2104      	movs	r1, #4
 801b424:	4604      	mov	r4, r0
 801b426:	f00d fe0a 	bl	802903e <_ZdlPvj>
 801b42a:	4620      	mov	r0, r4
 801b42c:	bd10      	pop	{r4, pc}

0801b42e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b42e:	b510      	push	{r4, lr}
 801b430:	2104      	movs	r1, #4
 801b432:	4604      	mov	r4, r0
 801b434:	f00d fe03 	bl	802903e <_ZdlPvj>
 801b438:	4620      	mov	r0, r4
 801b43a:	bd10      	pop	{r4, pc}

0801b43c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b43c:	b510      	push	{r4, lr}
 801b43e:	2104      	movs	r1, #4
 801b440:	4604      	mov	r4, r0
 801b442:	f00d fdfc 	bl	802903e <_ZdlPvj>
 801b446:	4620      	mov	r0, r4
 801b448:	bd10      	pop	{r4, pc}

0801b44a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b44a:	b510      	push	{r4, lr}
 801b44c:	2104      	movs	r1, #4
 801b44e:	4604      	mov	r4, r0
 801b450:	f00d fdf5 	bl	802903e <_ZdlPvj>
 801b454:	4620      	mov	r0, r4
 801b456:	bd10      	pop	{r4, pc}

0801b458 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b458:	b510      	push	{r4, lr}
 801b45a:	2104      	movs	r1, #4
 801b45c:	4604      	mov	r4, r0
 801b45e:	f00d fdee 	bl	802903e <_ZdlPvj>
 801b462:	4620      	mov	r0, r4
 801b464:	bd10      	pop	{r4, pc}

0801b466 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b466:	b510      	push	{r4, lr}
 801b468:	2104      	movs	r1, #4
 801b46a:	4604      	mov	r4, r0
 801b46c:	f00d fde7 	bl	802903e <_ZdlPvj>
 801b470:	4620      	mov	r0, r4
 801b472:	bd10      	pop	{r4, pc}

0801b474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b474:	b510      	push	{r4, lr}
 801b476:	2104      	movs	r1, #4
 801b478:	4604      	mov	r4, r0
 801b47a:	f00d fde0 	bl	802903e <_ZdlPvj>
 801b47e:	4620      	mov	r0, r4
 801b480:	bd10      	pop	{r4, pc}

0801b482 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b482:	b510      	push	{r4, lr}
 801b484:	2104      	movs	r1, #4
 801b486:	4604      	mov	r4, r0
 801b488:	f00d fdd9 	bl	802903e <_ZdlPvj>
 801b48c:	4620      	mov	r0, r4
 801b48e:	bd10      	pop	{r4, pc}

0801b490 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b490:	b510      	push	{r4, lr}
 801b492:	2104      	movs	r1, #4
 801b494:	4604      	mov	r4, r0
 801b496:	f00d fdd2 	bl	802903e <_ZdlPvj>
 801b49a:	4620      	mov	r0, r4
 801b49c:	bd10      	pop	{r4, pc}

0801b49e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b49e:	b510      	push	{r4, lr}
 801b4a0:	2104      	movs	r1, #4
 801b4a2:	4604      	mov	r4, r0
 801b4a4:	f00d fdcb 	bl	802903e <_ZdlPvj>
 801b4a8:	4620      	mov	r0, r4
 801b4aa:	bd10      	pop	{r4, pc}

0801b4ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b4ac:	b510      	push	{r4, lr}
 801b4ae:	2104      	movs	r1, #4
 801b4b0:	4604      	mov	r4, r0
 801b4b2:	f00d fdc4 	bl	802903e <_ZdlPvj>
 801b4b6:	4620      	mov	r0, r4
 801b4b8:	bd10      	pop	{r4, pc}

0801b4ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b4ba:	b510      	push	{r4, lr}
 801b4bc:	2104      	movs	r1, #4
 801b4be:	4604      	mov	r4, r0
 801b4c0:	f00d fdbd 	bl	802903e <_ZdlPvj>
 801b4c4:	4620      	mov	r0, r4
 801b4c6:	bd10      	pop	{r4, pc}

0801b4c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b4c8:	b510      	push	{r4, lr}
 801b4ca:	2104      	movs	r1, #4
 801b4cc:	4604      	mov	r4, r0
 801b4ce:	f00d fdb6 	bl	802903e <_ZdlPvj>
 801b4d2:	4620      	mov	r0, r4
 801b4d4:	bd10      	pop	{r4, pc}

0801b4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b4d6:	b510      	push	{r4, lr}
 801b4d8:	2104      	movs	r1, #4
 801b4da:	4604      	mov	r4, r0
 801b4dc:	f00d fdaf 	bl	802903e <_ZdlPvj>
 801b4e0:	4620      	mov	r0, r4
 801b4e2:	bd10      	pop	{r4, pc}

0801b4e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b4e4:	b510      	push	{r4, lr}
 801b4e6:	2104      	movs	r1, #4
 801b4e8:	4604      	mov	r4, r0
 801b4ea:	f00d fda8 	bl	802903e <_ZdlPvj>
 801b4ee:	4620      	mov	r0, r4
 801b4f0:	bd10      	pop	{r4, pc}

0801b4f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b4f2:	b510      	push	{r4, lr}
 801b4f4:	2104      	movs	r1, #4
 801b4f6:	4604      	mov	r4, r0
 801b4f8:	f00d fda1 	bl	802903e <_ZdlPvj>
 801b4fc:	4620      	mov	r0, r4
 801b4fe:	bd10      	pop	{r4, pc}

0801b500 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b500:	b510      	push	{r4, lr}
 801b502:	2104      	movs	r1, #4
 801b504:	4604      	mov	r4, r0
 801b506:	f00d fd9a 	bl	802903e <_ZdlPvj>
 801b50a:	4620      	mov	r0, r4
 801b50c:	bd10      	pop	{r4, pc}

0801b50e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b50e:	b510      	push	{r4, lr}
 801b510:	2104      	movs	r1, #4
 801b512:	4604      	mov	r4, r0
 801b514:	f00d fd93 	bl	802903e <_ZdlPvj>
 801b518:	4620      	mov	r0, r4
 801b51a:	bd10      	pop	{r4, pc}

0801b51c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b51c:	b510      	push	{r4, lr}
 801b51e:	2104      	movs	r1, #4
 801b520:	4604      	mov	r4, r0
 801b522:	f00d fd8c 	bl	802903e <_ZdlPvj>
 801b526:	4620      	mov	r0, r4
 801b528:	bd10      	pop	{r4, pc}

0801b52a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b52a:	b510      	push	{r4, lr}
 801b52c:	2104      	movs	r1, #4
 801b52e:	4604      	mov	r4, r0
 801b530:	f00d fd85 	bl	802903e <_ZdlPvj>
 801b534:	4620      	mov	r0, r4
 801b536:	bd10      	pop	{r4, pc}

0801b538 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b538:	b510      	push	{r4, lr}
 801b53a:	2104      	movs	r1, #4
 801b53c:	4604      	mov	r4, r0
 801b53e:	f00d fd7e 	bl	802903e <_ZdlPvj>
 801b542:	4620      	mov	r0, r4
 801b544:	bd10      	pop	{r4, pc}

0801b546 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b546:	b510      	push	{r4, lr}
 801b548:	2104      	movs	r1, #4
 801b54a:	4604      	mov	r4, r0
 801b54c:	f00d fd77 	bl	802903e <_ZdlPvj>
 801b550:	4620      	mov	r0, r4
 801b552:	bd10      	pop	{r4, pc}

0801b554 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b554:	b510      	push	{r4, lr}
 801b556:	2104      	movs	r1, #4
 801b558:	4604      	mov	r4, r0
 801b55a:	f00d fd70 	bl	802903e <_ZdlPvj>
 801b55e:	4620      	mov	r0, r4
 801b560:	bd10      	pop	{r4, pc}
	...

0801b564 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b568:	b08f      	sub	sp, #60	; 0x3c
 801b56a:	461c      	mov	r4, r3
 801b56c:	9205      	str	r2, [sp, #20]
 801b56e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b572:	9100      	str	r1, [sp, #0]
 801b574:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b576:	9201      	str	r2, [sp, #4]
 801b578:	2a00      	cmp	r2, #0
 801b57a:	f000 8115 	beq.w	801b7a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b57e:	6820      	ldr	r0, [r4, #0]
 801b580:	6861      	ldr	r1, [r4, #4]
 801b582:	aa0a      	add	r2, sp, #40	; 0x28
 801b584:	c203      	stmia	r2!, {r0, r1}
 801b586:	6818      	ldr	r0, [r3, #0]
 801b588:	6859      	ldr	r1, [r3, #4]
 801b58a:	aa0c      	add	r2, sp, #48	; 0x30
 801b58c:	c203      	stmia	r2!, {r0, r1}
 801b58e:	a80a      	add	r0, sp, #40	; 0x28
 801b590:	f7f9 fb2a 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b594:	4621      	mov	r1, r4
 801b596:	a80c      	add	r0, sp, #48	; 0x30
 801b598:	f7f9 fb6a 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b59c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b5a0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b5a4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b5a8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b5ac:	bfde      	ittt	le
 801b5ae:	b2b3      	uxthle	r3, r6
 801b5b0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b5b4:	fb92 f3f3 	sdivle	r3, r2, r3
 801b5b8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b5bc:	bfc8      	it	gt
 801b5be:	2301      	movgt	r3, #1
 801b5c0:	fb92 f1f3 	sdiv	r1, r2, r3
 801b5c4:	fa1f fc81 	uxth.w	ip, r1
 801b5c8:	fb0c 2413 	mls	r4, ip, r3, r2
 801b5cc:	fb14 f406 	smulbb	r4, r4, r6
 801b5d0:	441d      	add	r5, r3
 801b5d2:	4404      	add	r4, r0
 801b5d4:	4661      	mov	r1, ip
 801b5d6:	3d01      	subs	r5, #1
 801b5d8:	b2a4      	uxth	r4, r4
 801b5da:	fb95 f5f3 	sdiv	r5, r5, r3
 801b5de:	b131      	cbz	r1, 801b5ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b5e0:	9b05      	ldr	r3, [sp, #20]
 801b5e2:	9900      	ldr	r1, [sp, #0]
 801b5e4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b5e8:	ba1b      	rev	r3, r3
 801b5ea:	4419      	add	r1, r3
 801b5ec:	9100      	str	r1, [sp, #0]
 801b5ee:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b5f2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b5f6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b5fa:	4418      	add	r0, r3
 801b5fc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b600:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b604:	441a      	add	r2, r3
 801b606:	4b6a      	ldr	r3, [pc, #424]	; (801b7b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b608:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b60c:	6818      	ldr	r0, [r3, #0]
 801b60e:	6803      	ldr	r3, [r0, #0]
 801b610:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b612:	4798      	blx	r3
 801b614:	4967      	ldr	r1, [pc, #412]	; (801b7b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b616:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b61a:	880b      	ldrh	r3, [r1, #0]
 801b61c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b620:	9109      	str	r1, [sp, #36]	; 0x24
 801b622:	fb03 c202 	mla	r2, r3, r2, ip
 801b626:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b62a:	4373      	muls	r3, r6
 801b62c:	b2ad      	uxth	r5, r5
 801b62e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b632:	00ad      	lsls	r5, r5, #2
 801b634:	9306      	str	r3, [sp, #24]
 801b636:	1d2b      	adds	r3, r5, #4
 801b638:	9307      	str	r3, [sp, #28]
 801b63a:	9b01      	ldr	r3, [sp, #4]
 801b63c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b640:	9103      	str	r1, [sp, #12]
 801b642:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b646:	2c00      	cmp	r4, #0
 801b648:	bf0c      	ite	eq
 801b64a:	46c6      	moveq	lr, r8
 801b64c:	f04f 0e00 	movne.w	lr, #0
 801b650:	2300      	movs	r3, #0
 801b652:	b292      	uxth	r2, r2
 801b654:	fa1f fe8e 	uxth.w	lr, lr
 801b658:	9302      	str	r3, [sp, #8]
 801b65a:	9204      	str	r2, [sp, #16]
 801b65c:	9a06      	ldr	r2, [sp, #24]
 801b65e:	4282      	cmp	r2, r0
 801b660:	f240 809d 	bls.w	801b79e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b664:	b963      	cbnz	r3, 801b680 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b666:	9b00      	ldr	r3, [sp, #0]
 801b668:	781a      	ldrb	r2, [r3, #0]
 801b66a:	0993      	lsrs	r3, r2, #6
 801b66c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b670:	9202      	str	r2, [sp, #8]
 801b672:	1e5a      	subs	r2, r3, #1
 801b674:	2a02      	cmp	r2, #2
 801b676:	d815      	bhi.n	801b6a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b678:	9a00      	ldr	r2, [sp, #0]
 801b67a:	3201      	adds	r2, #1
 801b67c:	9200      	str	r2, [sp, #0]
 801b67e:	b29b      	uxth	r3, r3
 801b680:	b1b4      	cbz	r4, 801b6b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b682:	429c      	cmp	r4, r3
 801b684:	bf95      	itete	ls
 801b686:	1b1c      	subls	r4, r3, r4
 801b688:	1ae4      	subhi	r4, r4, r3
 801b68a:	fa1f fa84 	uxthls.w	sl, r4
 801b68e:	b2a4      	uxthhi	r4, r4
 801b690:	bf87      	ittee	hi
 801b692:	4671      	movhi	r1, lr
 801b694:	f04f 0a00 	movhi.w	sl, #0
 801b698:	fa1f f188 	uxthls.w	r1, r8
 801b69c:	2400      	movls	r4, #0
 801b69e:	4653      	mov	r3, sl
 801b6a0:	468e      	mov	lr, r1
 801b6a2:	e7db      	b.n	801b65c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b6a4:	9a00      	ldr	r2, [sp, #0]
 801b6a6:	9b00      	ldr	r3, [sp, #0]
 801b6a8:	3202      	adds	r2, #2
 801b6aa:	785b      	ldrb	r3, [r3, #1]
 801b6ac:	9200      	str	r2, [sp, #0]
 801b6ae:	e7e7      	b.n	801b680 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b6b0:	2202      	movs	r2, #2
 801b6b2:	4615      	mov	r5, r2
 801b6b4:	9907      	ldr	r1, [sp, #28]
 801b6b6:	9a02      	ldr	r2, [sp, #8]
 801b6b8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b6bc:	9905      	ldr	r1, [sp, #20]
 801b6be:	4573      	cmp	r3, lr
 801b6c0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b6c4:	9a01      	ldr	r2, [sp, #4]
 801b6c6:	bf2b      	itete	cs
 801b6c8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b6cc:	ebae 0103 	subcc.w	r1, lr, r3
 801b6d0:	46f1      	movcs	r9, lr
 801b6d2:	4699      	movcc	r9, r3
 801b6d4:	bf27      	ittee	cs
 801b6d6:	fa1f fa8a 	uxthcs.w	sl, sl
 801b6da:	4621      	movcs	r1, r4
 801b6dc:	b289      	uxthcc	r1, r1
 801b6de:	46a2      	movcc	sl, r4
 801b6e0:	2aff      	cmp	r2, #255	; 0xff
 801b6e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b6e6:	d105      	bne.n	801b6f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b6e8:	4481      	add	r9, r0
 801b6ea:	4581      	cmp	r9, r0
 801b6ec:	d045      	beq.n	801b77a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b6ee:	f820 cb02 	strh.w	ip, [r0], #2
 801b6f2:	e7fa      	b.n	801b6ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b6f4:	9d03      	ldr	r5, [sp, #12]
 801b6f6:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b6fa:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b6fe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b702:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b706:	436a      	muls	r2, r5
 801b708:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b70c:	fa5f fc8c 	uxtb.w	ip, ip
 801b710:	9208      	str	r2, [sp, #32]
 801b712:	fb0b fb05 	mul.w	fp, fp, r5
 801b716:	fb0c fc05 	mul.w	ip, ip, r5
 801b71a:	4481      	add	r9, r0
 801b71c:	4581      	cmp	r9, r0
 801b71e:	d02c      	beq.n	801b77a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b720:	8802      	ldrh	r2, [r0, #0]
 801b722:	9d04      	ldr	r5, [sp, #16]
 801b724:	9f04      	ldr	r7, [sp, #16]
 801b726:	1216      	asrs	r6, r2, #8
 801b728:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b72c:	fb16 f605 	smulbb	r6, r6, r5
 801b730:	9d08      	ldr	r5, [sp, #32]
 801b732:	442e      	add	r6, r5
 801b734:	10d5      	asrs	r5, r2, #3
 801b736:	00d2      	lsls	r2, r2, #3
 801b738:	b2d2      	uxtb	r2, r2
 801b73a:	fb12 f207 	smulbb	r2, r2, r7
 801b73e:	b2b6      	uxth	r6, r6
 801b740:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b744:	4462      	add	r2, ip
 801b746:	fb15 f507 	smulbb	r5, r5, r7
 801b74a:	b292      	uxth	r2, r2
 801b74c:	1c77      	adds	r7, r6, #1
 801b74e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b752:	1c57      	adds	r7, r2, #1
 801b754:	445d      	add	r5, fp
 801b756:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b75a:	b2ad      	uxth	r5, r5
 801b75c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b760:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b764:	4316      	orrs	r6, r2
 801b766:	1c6a      	adds	r2, r5, #1
 801b768:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b76c:	096d      	lsrs	r5, r5, #5
 801b76e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b772:	432e      	orrs	r6, r5
 801b774:	f820 6b02 	strh.w	r6, [r0], #2
 801b778:	e7d0      	b.n	801b71c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b77a:	4573      	cmp	r3, lr
 801b77c:	d38f      	bcc.n	801b69e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b77e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b782:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b784:	fa1f f188 	uxth.w	r1, r8
 801b788:	1a64      	subs	r4, r4, r1
 801b78a:	881b      	ldrh	r3, [r3, #0]
 801b78c:	b2a4      	uxth	r4, r4
 801b78e:	2c00      	cmp	r4, #0
 801b790:	eba3 0308 	sub.w	r3, r3, r8
 801b794:	bf18      	it	ne
 801b796:	2100      	movne	r1, #0
 801b798:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b79c:	e77f      	b.n	801b69e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b79e:	4b04      	ldr	r3, [pc, #16]	; (801b7b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b7a0:	6818      	ldr	r0, [r3, #0]
 801b7a2:	6803      	ldr	r3, [r0, #0]
 801b7a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b7a6:	4798      	blx	r3
 801b7a8:	b00f      	add	sp, #60	; 0x3c
 801b7aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7ae:	bf00      	nop
 801b7b0:	20012e7c 	.word	0x20012e7c
 801b7b4:	20012e76 	.word	0x20012e76

0801b7b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7bc:	b09f      	sub	sp, #124	; 0x7c
 801b7be:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b7c2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b7c6:	9209      	str	r2, [sp, #36]	; 0x24
 801b7c8:	461d      	mov	r5, r3
 801b7ca:	4604      	mov	r4, r0
 801b7cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b7ce:	2a00      	cmp	r2, #0
 801b7d0:	f000 81eb 	beq.w	801bbaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b7d4:	6828      	ldr	r0, [r5, #0]
 801b7d6:	6869      	ldr	r1, [r5, #4]
 801b7d8:	aa1a      	add	r2, sp, #104	; 0x68
 801b7da:	c203      	stmia	r2!, {r0, r1}
 801b7dc:	6818      	ldr	r0, [r3, #0]
 801b7de:	6859      	ldr	r1, [r3, #4]
 801b7e0:	aa1c      	add	r2, sp, #112	; 0x70
 801b7e2:	c203      	stmia	r2!, {r0, r1}
 801b7e4:	a81a      	add	r0, sp, #104	; 0x68
 801b7e6:	f7f9 f9ff 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b7ea:	4629      	mov	r1, r5
 801b7ec:	a81c      	add	r0, sp, #112	; 0x70
 801b7ee:	f7f9 fa3f 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b7f2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b7f6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b7fa:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b7fe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b802:	bfd7      	itett	le
 801b804:	b29a      	uxthle	r2, r3
 801b806:	2201      	movgt	r2, #1
 801b808:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b80c:	fb91 f2f2 	sdivle	r2, r1, r2
 801b810:	9202      	str	r2, [sp, #8]
 801b812:	9802      	ldr	r0, [sp, #8]
 801b814:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b818:	fb92 f0f0 	sdiv	r0, r2, r0
 801b81c:	b280      	uxth	r0, r0
 801b81e:	9010      	str	r0, [sp, #64]	; 0x40
 801b820:	9902      	ldr	r1, [sp, #8]
 801b822:	9802      	ldr	r0, [sp, #8]
 801b824:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b826:	4488      	add	r8, r1
 801b828:	fb05 2510 	mls	r5, r5, r0, r2
 801b82c:	fb15 f503 	smulbb	r5, r5, r3
 801b830:	f108 38ff 	add.w	r8, r8, #4294967295
 801b834:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b838:	fb98 f8f1 	sdiv	r8, r8, r1
 801b83c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b840:	440d      	add	r5, r1
 801b842:	4419      	add	r1, r3
 801b844:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b848:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b84c:	441a      	add	r2, r3
 801b84e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b852:	9304      	str	r3, [sp, #16]
 801b854:	4b95      	ldr	r3, [pc, #596]	; (801baac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b856:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b85a:	6818      	ldr	r0, [r3, #0]
 801b85c:	6803      	ldr	r3, [r0, #0]
 801b85e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b860:	4798      	blx	r3
 801b862:	4b93      	ldr	r3, [pc, #588]	; (801bab0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b864:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b868:	881a      	ldrh	r2, [r3, #0]
 801b86a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b86e:	9318      	str	r3, [sp, #96]	; 0x60
 801b870:	fb02 7101 	mla	r1, r2, r1, r7
 801b874:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b878:	4356      	muls	r6, r2
 801b87a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b87e:	f108 0801 	add.w	r8, r8, #1
 801b882:	920a      	str	r2, [sp, #40]	; 0x28
 801b884:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b886:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b88a:	930f      	str	r3, [sp, #60]	; 0x3c
 801b88c:	fa1f f888 	uxth.w	r8, r8
 801b890:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b894:	f108 0204 	add.w	r2, r8, #4
 801b898:	9211      	str	r2, [sp, #68]	; 0x44
 801b89a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b89c:	4b85      	ldr	r3, [pc, #532]	; (801bab4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b89e:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b8a2:	b2ad      	uxth	r5, r5
 801b8a4:	9215      	str	r2, [sp, #84]	; 0x54
 801b8a6:	2d00      	cmp	r5, #0
 801b8a8:	9a04      	ldr	r2, [sp, #16]
 801b8aa:	f04f 0100 	mov.w	r1, #0
 801b8ae:	bf18      	it	ne
 801b8b0:	2200      	movne	r2, #0
 801b8b2:	1b1b      	subs	r3, r3, r4
 801b8b4:	b292      	uxth	r2, r2
 801b8b6:	910d      	str	r1, [sp, #52]	; 0x34
 801b8b8:	9319      	str	r3, [sp, #100]	; 0x64
 801b8ba:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b8bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b8be:	fa11 f383 	uxtah	r3, r1, r3
 801b8c2:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b8c4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b8c8:	3304      	adds	r3, #4
 801b8ca:	9306      	str	r3, [sp, #24]
 801b8cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b8ce:	4283      	cmp	r3, r0
 801b8d0:	f240 8166 	bls.w	801bba0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b8d4:	9902      	ldr	r1, [sp, #8]
 801b8d6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b8da:	fbb5 f3f3 	udiv	r3, r5, r3
 801b8de:	1acb      	subs	r3, r1, r3
 801b8e0:	b29b      	uxth	r3, r3
 801b8e2:	9316      	str	r3, [sp, #88]	; 0x58
 801b8e4:	9b06      	ldr	r3, [sp, #24]
 801b8e6:	9e06      	ldr	r6, [sp, #24]
 801b8e8:	7859      	ldrb	r1, [r3, #1]
 801b8ea:	789b      	ldrb	r3, [r3, #2]
 801b8ec:	7836      	ldrb	r6, [r6, #0]
 801b8ee:	9612      	str	r6, [sp, #72]	; 0x48
 801b8f0:	021b      	lsls	r3, r3, #8
 801b8f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b8f6:	9906      	ldr	r1, [sp, #24]
 801b8f8:	78c9      	ldrb	r1, [r1, #3]
 801b8fa:	430b      	orrs	r3, r1
 801b8fc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b8fe:	3601      	adds	r6, #1
 801b900:	4419      	add	r1, r3
 801b902:	9605      	str	r6, [sp, #20]
 801b904:	1c4e      	adds	r6, r1, #1
 801b906:	9603      	str	r6, [sp, #12]
 801b908:	7849      	ldrb	r1, [r1, #1]
 801b90a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b90c:	0209      	lsls	r1, r1, #8
 801b90e:	5cf3      	ldrb	r3, [r6, r3]
 801b910:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b914:	4319      	orrs	r1, r3
 801b916:	b28b      	uxth	r3, r1
 801b918:	930c      	str	r3, [sp, #48]	; 0x30
 801b91a:	2300      	movs	r3, #0
 801b91c:	f04f 0a01 	mov.w	sl, #1
 801b920:	9307      	str	r3, [sp, #28]
 801b922:	469c      	mov	ip, r3
 801b924:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b928:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b92c:	46d3      	mov	fp, sl
 801b92e:	4657      	mov	r7, sl
 801b930:	930e      	str	r3, [sp, #56]	; 0x38
 801b932:	2d00      	cmp	r5, #0
 801b934:	d07e      	beq.n	801ba34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b936:	42af      	cmp	r7, r5
 801b938:	d26e      	bcs.n	801ba18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b93a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b93c:	9201      	str	r2, [sp, #4]
 801b93e:	1bed      	subs	r5, r5, r7
 801b940:	4283      	cmp	r3, r0
 801b942:	b2ad      	uxth	r5, r5
 801b944:	d802      	bhi.n	801b94c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b946:	e073      	b.n	801ba30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b948:	2b00      	cmp	r3, #0
 801b94a:	d15f      	bne.n	801ba0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b94c:	9b03      	ldr	r3, [sp, #12]
 801b94e:	785b      	ldrb	r3, [r3, #1]
 801b950:	f1cb 0207 	rsb	r2, fp, #7
 801b954:	4093      	lsls	r3, r2
 801b956:	005b      	lsls	r3, r3, #1
 801b958:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b95c:	9b03      	ldr	r3, [sp, #12]
 801b95e:	781b      	ldrb	r3, [r3, #0]
 801b960:	fa43 f30b 	asr.w	r3, r3, fp
 801b964:	b2db      	uxtb	r3, r3
 801b966:	4313      	orrs	r3, r2
 801b968:	f10b 0201 	add.w	r2, fp, #1
 801b96c:	fa5f fb82 	uxtb.w	fp, r2
 801b970:	9a03      	ldr	r2, [sp, #12]
 801b972:	f1bb 0f08 	cmp.w	fp, #8
 801b976:	bf15      	itete	ne
 801b978:	3201      	addne	r2, #1
 801b97a:	3202      	addeq	r2, #2
 801b97c:	9203      	strne	r2, [sp, #12]
 801b97e:	9203      	streq	r2, [sp, #12]
 801b980:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b982:	b29f      	uxth	r7, r3
 801b984:	bf08      	it	eq
 801b986:	f04f 0b00 	moveq.w	fp, #0
 801b98a:	42ba      	cmp	r2, r7
 801b98c:	d309      	bcc.n	801b9a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b98e:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b992:	2301      	movs	r3, #1
 801b994:	9a05      	ldr	r2, [sp, #20]
 801b996:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b99a:	d30e      	bcc.n	801b9ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b99c:	469a      	mov	sl, r3
 801b99e:	2600      	movs	r6, #0
 801b9a0:	e035      	b.n	801ba0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b9a2:	9b05      	ldr	r3, [sp, #20]
 801b9a4:	429f      	cmp	r7, r3
 801b9a6:	d318      	bcc.n	801b9da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b9a8:	eb04 030a 	add.w	r3, r4, sl
 801b9ac:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b9b0:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b9b4:	f10a 0301 	add.w	r3, sl, #1
 801b9b8:	b29b      	uxth	r3, r3
 801b9ba:	9a05      	ldr	r2, [sp, #20]
 801b9bc:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b9c0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b9c2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b9c6:	7116      	strb	r6, [r2, #4]
 801b9c8:	f10a 0601 	add.w	r6, sl, #1
 801b9cc:	80d1      	strh	r1, [r2, #6]
 801b9ce:	7156      	strb	r6, [r2, #5]
 801b9d0:	9a05      	ldr	r2, [sp, #20]
 801b9d2:	3201      	adds	r2, #1
 801b9d4:	b292      	uxth	r2, r2
 801b9d6:	9205      	str	r2, [sp, #20]
 801b9d8:	e7e0      	b.n	801b99c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b9da:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b9de:	463a      	mov	r2, r7
 801b9e0:	795b      	ldrb	r3, [r3, #5]
 801b9e2:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b9e6:	4426      	add	r6, r4
 801b9e8:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b9ea:	eb01 0c06 	add.w	ip, r1, r6
 801b9ee:	f1bc 0f00 	cmp.w	ip, #0
 801b9f2:	dd07      	ble.n	801ba04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b9f4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b9f8:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b9fc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801ba00:	88d2      	ldrh	r2, [r2, #6]
 801ba02:	e7f1      	b.n	801b9e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801ba04:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801ba08:	b29b      	uxth	r3, r3
 801ba0a:	e7c3      	b.n	801b994 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801ba0c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ba0e:	970c      	str	r7, [sp, #48]	; 0x30
 801ba10:	9a01      	ldr	r2, [sp, #4]
 801ba12:	46b4      	mov	ip, r6
 801ba14:	461f      	mov	r7, r3
 801ba16:	e78c      	b.n	801b932 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801ba18:	1b7b      	subs	r3, r7, r5
 801ba1a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ba1e:	9201      	str	r2, [sp, #4]
 801ba20:	eb0c 0605 	add.w	r6, ip, r5
 801ba24:	b29b      	uxth	r3, r3
 801ba26:	b2b6      	uxth	r6, r6
 801ba28:	2500      	movs	r5, #0
 801ba2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ba2c:	4282      	cmp	r2, r0
 801ba2e:	d88b      	bhi.n	801b948 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801ba30:	9a01      	ldr	r2, [sp, #4]
 801ba32:	e74b      	b.n	801b8cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801ba34:	4297      	cmp	r7, r2
 801ba36:	d332      	bcc.n	801ba9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801ba38:	1abb      	subs	r3, r7, r2
 801ba3a:	b29b      	uxth	r3, r3
 801ba3c:	9208      	str	r2, [sp, #32]
 801ba3e:	9501      	str	r5, [sp, #4]
 801ba40:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ba42:	29ff      	cmp	r1, #255	; 0xff
 801ba44:	9908      	ldr	r1, [sp, #32]
 801ba46:	eb0c 0601 	add.w	r6, ip, r1
 801ba4a:	d135      	bne.n	801bab8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801ba4c:	f1a0 0e02 	sub.w	lr, r0, #2
 801ba50:	b2b6      	uxth	r6, r6
 801ba52:	45b4      	cmp	ip, r6
 801ba54:	f040 808c 	bne.w	801bb70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801ba58:	9908      	ldr	r1, [sp, #32]
 801ba5a:	4297      	cmp	r7, r2
 801ba5c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ba60:	d3e2      	bcc.n	801ba28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801ba62:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ba64:	9904      	ldr	r1, [sp, #16]
 801ba66:	8812      	ldrh	r2, [r2, #0]
 801ba68:	1a52      	subs	r2, r2, r1
 801ba6a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ba6e:	9a07      	ldr	r2, [sp, #28]
 801ba70:	9916      	ldr	r1, [sp, #88]	; 0x58
 801ba72:	3201      	adds	r2, #1
 801ba74:	428a      	cmp	r2, r1
 801ba76:	9207      	str	r2, [sp, #28]
 801ba78:	f040 8087 	bne.w	801bb8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801ba7c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801ba80:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801ba84:	9b04      	ldr	r3, [sp, #16]
 801ba86:	1bed      	subs	r5, r5, r7
 801ba88:	b2ad      	uxth	r5, r5
 801ba8a:	2d00      	cmp	r5, #0
 801ba8c:	bf08      	it	eq
 801ba8e:	461a      	moveq	r2, r3
 801ba90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ba92:	bf18      	it	ne
 801ba94:	2200      	movne	r2, #0
 801ba96:	3301      	adds	r3, #1
 801ba98:	930d      	str	r3, [sp, #52]	; 0x34
 801ba9a:	b292      	uxth	r2, r2
 801ba9c:	e70d      	b.n	801b8ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801ba9e:	1bd1      	subs	r1, r2, r7
 801baa0:	b28b      	uxth	r3, r1
 801baa2:	9301      	str	r3, [sp, #4]
 801baa4:	9708      	str	r7, [sp, #32]
 801baa6:	462b      	mov	r3, r5
 801baa8:	e7ca      	b.n	801ba40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801baaa:	bf00      	nop
 801baac:	20012e7c 	.word	0x20012e7c
 801bab0:	20012e76 	.word	0x20012e76
 801bab4:	fffff7fb 	.word	0xfffff7fb
 801bab8:	b2b6      	uxth	r6, r6
 801baba:	900b      	str	r0, [sp, #44]	; 0x2c
 801babc:	45b4      	cmp	ip, r6
 801babe:	d0cb      	beq.n	801ba58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801bac0:	f10c 0101 	add.w	r1, ip, #1
 801bac4:	44a4      	add	ip, r4
 801bac6:	9117      	str	r1, [sp, #92]	; 0x5c
 801bac8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bacc:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bace:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bad2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801bad4:	f8b1 c000 	ldrh.w	ip, [r1]
 801bad8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bada:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801bade:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bae2:	fb1e fe01 	smulbb	lr, lr, r1
 801bae6:	ea4f 2825 	mov.w	r8, r5, asr #8
 801baea:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801baec:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801baf0:	fb08 e801 	mla	r8, r8, r1, lr
 801baf4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801baf8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bafa:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bafe:	fb19 f901 	smulbb	r9, r9, r1
 801bb02:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801bb06:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bb08:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801bb0c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801bb10:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bb14:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bb16:	fa5f fc8c 	uxtb.w	ip, ip
 801bb1a:	fb1c fc01 	smulbb	ip, ip, r1
 801bb1e:	00ed      	lsls	r5, r5, #3
 801bb20:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801bb22:	b2ed      	uxtb	r5, r5
 801bb24:	fb05 c501 	mla	r5, r5, r1, ip
 801bb28:	fa1f f888 	uxth.w	r8, r8
 801bb2c:	fa1f fe8e 	uxth.w	lr, lr
 801bb30:	b2ad      	uxth	r5, r5
 801bb32:	f108 0c01 	add.w	ip, r8, #1
 801bb36:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801bb3a:	f10e 0901 	add.w	r9, lr, #1
 801bb3e:	f105 0c01 	add.w	ip, r5, #1
 801bb42:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801bb46:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801bb4a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bb4e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801bb52:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bb56:	ea4c 0808 	orr.w	r8, ip, r8
 801bb5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801bb5c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801bb60:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bb64:	ea48 0809 	orr.w	r8, r8, r9
 801bb68:	f821 8b02 	strh.w	r8, [r1], #2
 801bb6c:	910b      	str	r1, [sp, #44]	; 0x2c
 801bb6e:	e7a5      	b.n	801babc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801bb70:	f10c 0801 	add.w	r8, ip, #1
 801bb74:	44a4      	add	ip, r4
 801bb76:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bb78:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bb7c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bb80:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801bb84:	fa1f fc88 	uxth.w	ip, r8
 801bb88:	e763      	b.n	801ba52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801bb8a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bb8e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801bb92:	1aad      	subs	r5, r5, r2
 801bb94:	b2ad      	uxth	r5, r5
 801bb96:	2d00      	cmp	r5, #0
 801bb98:	bf18      	it	ne
 801bb9a:	2200      	movne	r2, #0
 801bb9c:	9201      	str	r2, [sp, #4]
 801bb9e:	e744      	b.n	801ba2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801bba0:	4b03      	ldr	r3, [pc, #12]	; (801bbb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801bba2:	6818      	ldr	r0, [r3, #0]
 801bba4:	6803      	ldr	r3, [r0, #0]
 801bba6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bba8:	4798      	blx	r3
 801bbaa:	b01f      	add	sp, #124	; 0x7c
 801bbac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbb0:	20012e7c 	.word	0x20012e7c

0801bbb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bbb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bbb8:	b08f      	sub	sp, #60	; 0x3c
 801bbba:	461c      	mov	r4, r3
 801bbbc:	9203      	str	r2, [sp, #12]
 801bbbe:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bbc2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bbc4:	9202      	str	r2, [sp, #8]
 801bbc6:	460f      	mov	r7, r1
 801bbc8:	2a00      	cmp	r2, #0
 801bbca:	f000 8128 	beq.w	801be1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801bbce:	6820      	ldr	r0, [r4, #0]
 801bbd0:	6861      	ldr	r1, [r4, #4]
 801bbd2:	aa0a      	add	r2, sp, #40	; 0x28
 801bbd4:	c203      	stmia	r2!, {r0, r1}
 801bbd6:	6818      	ldr	r0, [r3, #0]
 801bbd8:	6859      	ldr	r1, [r3, #4]
 801bbda:	aa0c      	add	r2, sp, #48	; 0x30
 801bbdc:	c203      	stmia	r2!, {r0, r1}
 801bbde:	a80a      	add	r0, sp, #40	; 0x28
 801bbe0:	f7f9 f802 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bbe4:	4621      	mov	r1, r4
 801bbe6:	a80c      	add	r0, sp, #48	; 0x30
 801bbe8:	f7f9 f842 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bbec:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801bbf0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801bbf4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801bbf8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bbfc:	bfde      	ittt	le
 801bbfe:	b2b3      	uxthle	r3, r6
 801bc00:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bc04:	fb92 f3f3 	sdivle	r3, r2, r3
 801bc08:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801bc0c:	bfc8      	it	gt
 801bc0e:	2301      	movgt	r3, #1
 801bc10:	fb92 f1f3 	sdiv	r1, r2, r3
 801bc14:	fa1f fc81 	uxth.w	ip, r1
 801bc18:	fb0c 2413 	mls	r4, ip, r3, r2
 801bc1c:	fb14 f406 	smulbb	r4, r4, r6
 801bc20:	441d      	add	r5, r3
 801bc22:	4404      	add	r4, r0
 801bc24:	4661      	mov	r1, ip
 801bc26:	3d01      	subs	r5, #1
 801bc28:	b2a4      	uxth	r4, r4
 801bc2a:	fb95 f5f3 	sdiv	r5, r5, r3
 801bc2e:	b121      	cbz	r1, 801bc3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801bc30:	9b03      	ldr	r3, [sp, #12]
 801bc32:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bc36:	ba1b      	rev	r3, r3
 801bc38:	441f      	add	r7, r3
 801bc3a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801bc3e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801bc42:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801bc46:	4418      	add	r0, r3
 801bc48:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801bc4c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801bc50:	441a      	add	r2, r3
 801bc52:	4b74      	ldr	r3, [pc, #464]	; (801be24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bc54:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801bc58:	6818      	ldr	r0, [r3, #0]
 801bc5a:	6803      	ldr	r3, [r0, #0]
 801bc5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bc5e:	4798      	blx	r3
 801bc60:	4a71      	ldr	r2, [pc, #452]	; (801be28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801bc62:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801bc66:	8813      	ldrh	r3, [r2, #0]
 801bc68:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801bc6c:	9209      	str	r2, [sp, #36]	; 0x24
 801bc6e:	fb03 c101 	mla	r1, r3, r1, ip
 801bc72:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bc76:	4373      	muls	r3, r6
 801bc78:	b2ad      	uxth	r5, r5
 801bc7a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bc7e:	00ad      	lsls	r5, r5, #2
 801bc80:	2c00      	cmp	r4, #0
 801bc82:	9304      	str	r3, [sp, #16]
 801bc84:	f105 0304 	add.w	r3, r5, #4
 801bc88:	9305      	str	r3, [sp, #20]
 801bc8a:	bf0c      	ite	eq
 801bc8c:	46c8      	moveq	r8, r9
 801bc8e:	f04f 0800 	movne.w	r8, #0
 801bc92:	2300      	movs	r3, #0
 801bc94:	fa1f f888 	uxth.w	r8, r8
 801bc98:	9301      	str	r3, [sp, #4]
 801bc9a:	9a04      	ldr	r2, [sp, #16]
 801bc9c:	4282      	cmp	r2, r0
 801bc9e:	f240 80b9 	bls.w	801be14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801bca2:	b95b      	cbnz	r3, 801bcbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801bca4:	783a      	ldrb	r2, [r7, #0]
 801bca6:	0993      	lsrs	r3, r2, #6
 801bca8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bcac:	9201      	str	r2, [sp, #4]
 801bcae:	1e5a      	subs	r2, r3, #1
 801bcb0:	2a02      	cmp	r2, #2
 801bcb2:	bf8d      	iteet	hi
 801bcb4:	787b      	ldrbhi	r3, [r7, #1]
 801bcb6:	3701      	addls	r7, #1
 801bcb8:	b29b      	uxthls	r3, r3
 801bcba:	3702      	addhi	r7, #2
 801bcbc:	b184      	cbz	r4, 801bce0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801bcbe:	429c      	cmp	r4, r3
 801bcc0:	bf95      	itete	ls
 801bcc2:	1b1c      	subls	r4, r3, r4
 801bcc4:	1ae4      	subhi	r4, r4, r3
 801bcc6:	fa1f fa84 	uxthls.w	sl, r4
 801bcca:	b2a4      	uxthhi	r4, r4
 801bccc:	bf87      	ittee	hi
 801bcce:	46c4      	movhi	ip, r8
 801bcd0:	f04f 0a00 	movhi.w	sl, #0
 801bcd4:	fa1f fc89 	uxthls.w	ip, r9
 801bcd8:	2400      	movls	r4, #0
 801bcda:	4653      	mov	r3, sl
 801bcdc:	46e0      	mov	r8, ip
 801bcde:	e7dc      	b.n	801bc9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801bce0:	2204      	movs	r2, #4
 801bce2:	4615      	mov	r5, r2
 801bce4:	9905      	ldr	r1, [sp, #20]
 801bce6:	9a01      	ldr	r2, [sp, #4]
 801bce8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bcec:	9903      	ldr	r1, [sp, #12]
 801bcee:	588a      	ldr	r2, [r1, r2]
 801bcf0:	4543      	cmp	r3, r8
 801bcf2:	bf27      	ittee	cs
 801bcf4:	eba3 0a08 	subcs.w	sl, r3, r8
 801bcf8:	46c6      	movcs	lr, r8
 801bcfa:	eba8 0c03 	subcc.w	ip, r8, r3
 801bcfe:	469e      	movcc	lr, r3
 801bd00:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801bd04:	bf27      	ittee	cs
 801bd06:	fa1f fa8a 	uxthcs.w	sl, sl
 801bd0a:	46a4      	movcs	ip, r4
 801bd0c:	fa1f fc8c 	uxthcc.w	ip, ip
 801bd10:	46a2      	movcc	sl, r4
 801bd12:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801bd16:	2900      	cmp	r1, #0
 801bd18:	d066      	beq.n	801bde8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801bd1a:	29ff      	cmp	r1, #255	; 0xff
 801bd1c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bd20:	d114      	bne.n	801bd4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bd22:	9d02      	ldr	r5, [sp, #8]
 801bd24:	2dff      	cmp	r5, #255	; 0xff
 801bd26:	d111      	bne.n	801bd4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bd28:	0951      	lsrs	r1, r2, #5
 801bd2a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bd2e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bd32:	f026 0607 	bic.w	r6, r6, #7
 801bd36:	430e      	orrs	r6, r1
 801bd38:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bd3c:	4316      	orrs	r6, r2
 801bd3e:	b2b6      	uxth	r6, r6
 801bd40:	4486      	add	lr, r0
 801bd42:	4586      	cmp	lr, r0
 801bd44:	d051      	beq.n	801bdea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bd46:	f820 6b02 	strh.w	r6, [r0], #2
 801bd4a:	e7fa      	b.n	801bd42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801bd4c:	9d02      	ldr	r5, [sp, #8]
 801bd4e:	4369      	muls	r1, r5
 801bd50:	1c4d      	adds	r5, r1, #1
 801bd52:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801bd56:	122d      	asrs	r5, r5, #8
 801bd58:	ea6f 0b05 	mvn.w	fp, r5
 801bd5c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bd60:	b2ad      	uxth	r5, r5
 801bd62:	b2f6      	uxtb	r6, r6
 801bd64:	b2d2      	uxtb	r2, r2
 801bd66:	fb11 f105 	smulbb	r1, r1, r5
 801bd6a:	fb16 f605 	smulbb	r6, r6, r5
 801bd6e:	fb12 f205 	smulbb	r2, r2, r5
 801bd72:	b289      	uxth	r1, r1
 801bd74:	b2b6      	uxth	r6, r6
 801bd76:	b292      	uxth	r2, r2
 801bd78:	9106      	str	r1, [sp, #24]
 801bd7a:	9607      	str	r6, [sp, #28]
 801bd7c:	9208      	str	r2, [sp, #32]
 801bd7e:	4486      	add	lr, r0
 801bd80:	fa5f fb8b 	uxtb.w	fp, fp
 801bd84:	4586      	cmp	lr, r0
 801bd86:	d030      	beq.n	801bdea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bd88:	8802      	ldrh	r2, [r0, #0]
 801bd8a:	9906      	ldr	r1, [sp, #24]
 801bd8c:	1216      	asrs	r6, r2, #8
 801bd8e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bd92:	10d5      	asrs	r5, r2, #3
 801bd94:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bd98:	fb06 160b 	mla	r6, r6, fp, r1
 801bd9c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bda0:	9907      	ldr	r1, [sp, #28]
 801bda2:	00d2      	lsls	r2, r2, #3
 801bda4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bda8:	fb05 150b 	mla	r5, r5, fp, r1
 801bdac:	b2d2      	uxtb	r2, r2
 801bdae:	9908      	ldr	r1, [sp, #32]
 801bdb0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bdb4:	b2b6      	uxth	r6, r6
 801bdb6:	fb02 120b 	mla	r2, r2, fp, r1
 801bdba:	b292      	uxth	r2, r2
 801bdbc:	1c71      	adds	r1, r6, #1
 801bdbe:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801bdc2:	1c51      	adds	r1, r2, #1
 801bdc4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bdc8:	b2ad      	uxth	r5, r5
 801bdca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bdce:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bdd2:	4316      	orrs	r6, r2
 801bdd4:	1c6a      	adds	r2, r5, #1
 801bdd6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801bdda:	096d      	lsrs	r5, r5, #5
 801bddc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bde0:	432e      	orrs	r6, r5
 801bde2:	f820 6b02 	strh.w	r6, [r0], #2
 801bde6:	e7cd      	b.n	801bd84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801bde8:	4470      	add	r0, lr
 801bdea:	4543      	cmp	r3, r8
 801bdec:	f4ff af75 	bcc.w	801bcda <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801bdf0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801bdf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bdf6:	fa1f fc89 	uxth.w	ip, r9
 801bdfa:	eba4 040c 	sub.w	r4, r4, ip
 801bdfe:	881b      	ldrh	r3, [r3, #0]
 801be00:	b2a4      	uxth	r4, r4
 801be02:	2c00      	cmp	r4, #0
 801be04:	eba3 0309 	sub.w	r3, r3, r9
 801be08:	bf18      	it	ne
 801be0a:	f04f 0c00 	movne.w	ip, #0
 801be0e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801be12:	e762      	b.n	801bcda <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801be14:	4b03      	ldr	r3, [pc, #12]	; (801be24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801be16:	6818      	ldr	r0, [r3, #0]
 801be18:	6803      	ldr	r3, [r0, #0]
 801be1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801be1c:	4798      	blx	r3
 801be1e:	b00f      	add	sp, #60	; 0x3c
 801be20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be24:	20012e7c 	.word	0x20012e7c
 801be28:	20012e76 	.word	0x20012e76

0801be2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801be2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be30:	b093      	sub	sp, #76	; 0x4c
 801be32:	461c      	mov	r4, r3
 801be34:	9205      	str	r2, [sp, #20]
 801be36:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801be3a:	9101      	str	r1, [sp, #4]
 801be3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801be3e:	9202      	str	r2, [sp, #8]
 801be40:	2a00      	cmp	r2, #0
 801be42:	f000 812c 	beq.w	801c09e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801be46:	6820      	ldr	r0, [r4, #0]
 801be48:	6861      	ldr	r1, [r4, #4]
 801be4a:	aa0e      	add	r2, sp, #56	; 0x38
 801be4c:	c203      	stmia	r2!, {r0, r1}
 801be4e:	6818      	ldr	r0, [r3, #0]
 801be50:	6859      	ldr	r1, [r3, #4]
 801be52:	aa10      	add	r2, sp, #64	; 0x40
 801be54:	c203      	stmia	r2!, {r0, r1}
 801be56:	a80e      	add	r0, sp, #56	; 0x38
 801be58:	f7f8 fec6 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be5c:	4621      	mov	r1, r4
 801be5e:	a810      	add	r0, sp, #64	; 0x40
 801be60:	f7f8 ff06 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be64:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801be68:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801be6c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801be70:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801be74:	bfde      	ittt	le
 801be76:	b2b3      	uxthle	r3, r6
 801be78:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801be7c:	fb92 f3f3 	sdivle	r3, r2, r3
 801be80:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801be84:	bfc8      	it	gt
 801be86:	2301      	movgt	r3, #1
 801be88:	fb92 f1f3 	sdiv	r1, r2, r3
 801be8c:	fa1f fc81 	uxth.w	ip, r1
 801be90:	fb0c 2413 	mls	r4, ip, r3, r2
 801be94:	fb14 f406 	smulbb	r4, r4, r6
 801be98:	441d      	add	r5, r3
 801be9a:	4404      	add	r4, r0
 801be9c:	4661      	mov	r1, ip
 801be9e:	3d01      	subs	r5, #1
 801bea0:	b2a4      	uxth	r4, r4
 801bea2:	fb95 f5f3 	sdiv	r5, r5, r3
 801bea6:	b131      	cbz	r1, 801beb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801bea8:	9b05      	ldr	r3, [sp, #20]
 801beaa:	9901      	ldr	r1, [sp, #4]
 801beac:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801beb0:	ba1b      	rev	r3, r3
 801beb2:	4419      	add	r1, r3
 801beb4:	9101      	str	r1, [sp, #4]
 801beb6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801beba:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801bebe:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801bec2:	4418      	add	r0, r3
 801bec4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801bec8:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801becc:	441a      	add	r2, r3
 801bece:	4b75      	ldr	r3, [pc, #468]	; (801c0a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bed0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801bed4:	6818      	ldr	r0, [r3, #0]
 801bed6:	6803      	ldr	r3, [r0, #0]
 801bed8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801beda:	4798      	blx	r3
 801bedc:	4972      	ldr	r1, [pc, #456]	; (801c0a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801bede:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801bee2:	880b      	ldrh	r3, [r1, #0]
 801bee4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bee8:	910d      	str	r1, [sp, #52]	; 0x34
 801beea:	fb03 c202 	mla	r2, r3, r2, ip
 801beee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bef2:	4373      	muls	r3, r6
 801bef4:	b2ad      	uxth	r5, r5
 801bef6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801befa:	00ad      	lsls	r5, r5, #2
 801befc:	9308      	str	r3, [sp, #32]
 801befe:	1d2b      	adds	r3, r5, #4
 801bf00:	9309      	str	r3, [sp, #36]	; 0x24
 801bf02:	9b02      	ldr	r3, [sp, #8]
 801bf04:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bf08:	9106      	str	r1, [sp, #24]
 801bf0a:	43da      	mvns	r2, r3
 801bf0c:	2c00      	cmp	r4, #0
 801bf0e:	bf0c      	ite	eq
 801bf10:	46dc      	moveq	ip, fp
 801bf12:	f04f 0c00 	movne.w	ip, #0
 801bf16:	2300      	movs	r3, #0
 801bf18:	b2d2      	uxtb	r2, r2
 801bf1a:	fa1f fc8c 	uxth.w	ip, ip
 801bf1e:	9303      	str	r3, [sp, #12]
 801bf20:	9207      	str	r2, [sp, #28]
 801bf22:	9a08      	ldr	r2, [sp, #32]
 801bf24:	4282      	cmp	r2, r0
 801bf26:	f240 80b5 	bls.w	801c094 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801bf2a:	b963      	cbnz	r3, 801bf46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bf2c:	9b01      	ldr	r3, [sp, #4]
 801bf2e:	781a      	ldrb	r2, [r3, #0]
 801bf30:	0993      	lsrs	r3, r2, #6
 801bf32:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bf36:	9203      	str	r2, [sp, #12]
 801bf38:	1e5a      	subs	r2, r3, #1
 801bf3a:	2a02      	cmp	r2, #2
 801bf3c:	d815      	bhi.n	801bf6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801bf3e:	9a01      	ldr	r2, [sp, #4]
 801bf40:	3201      	adds	r2, #1
 801bf42:	9201      	str	r2, [sp, #4]
 801bf44:	b29b      	uxth	r3, r3
 801bf46:	b1b4      	cbz	r4, 801bf76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801bf48:	429c      	cmp	r4, r3
 801bf4a:	bf95      	itete	ls
 801bf4c:	1b1c      	subls	r4, r3, r4
 801bf4e:	1ae4      	subhi	r4, r4, r3
 801bf50:	fa1f f884 	uxthls.w	r8, r4
 801bf54:	b2a4      	uxthhi	r4, r4
 801bf56:	bf87      	ittee	hi
 801bf58:	4666      	movhi	r6, ip
 801bf5a:	f04f 0800 	movhi.w	r8, #0
 801bf5e:	fa1f f68b 	uxthls.w	r6, fp
 801bf62:	2400      	movls	r4, #0
 801bf64:	4643      	mov	r3, r8
 801bf66:	46b4      	mov	ip, r6
 801bf68:	e7db      	b.n	801bf22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801bf6a:	9a01      	ldr	r2, [sp, #4]
 801bf6c:	9b01      	ldr	r3, [sp, #4]
 801bf6e:	3202      	adds	r2, #2
 801bf70:	785b      	ldrb	r3, [r3, #1]
 801bf72:	9201      	str	r2, [sp, #4]
 801bf74:	e7e7      	b.n	801bf46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bf76:	2203      	movs	r2, #3
 801bf78:	4615      	mov	r5, r2
 801bf7a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bf7c:	9a03      	ldr	r2, [sp, #12]
 801bf7e:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bf82:	9905      	ldr	r1, [sp, #20]
 801bf84:	4563      	cmp	r3, ip
 801bf86:	eb01 0502 	add.w	r5, r1, r2
 801bf8a:	9902      	ldr	r1, [sp, #8]
 801bf8c:	bf29      	itett	cs
 801bf8e:	eba3 080c 	subcs.w	r8, r3, ip
 801bf92:	ebac 0603 	subcc.w	r6, ip, r3
 801bf96:	fa1f f888 	uxthcs.w	r8, r8
 801bf9a:	46e1      	movcs	r9, ip
 801bf9c:	bf2f      	iteee	cs
 801bf9e:	4626      	movcs	r6, r4
 801bfa0:	b2b6      	uxthcc	r6, r6
 801bfa2:	4699      	movcc	r9, r3
 801bfa4:	46a0      	movcc	r8, r4
 801bfa6:	29ff      	cmp	r1, #255	; 0xff
 801bfa8:	d04a      	beq.n	801c040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bfaa:	9f06      	ldr	r7, [sp, #24]
 801bfac:	78a9      	ldrb	r1, [r5, #2]
 801bfae:	9004      	str	r0, [sp, #16]
 801bfb0:	4379      	muls	r1, r7
 801bfb2:	910a      	str	r1, [sp, #40]	; 0x28
 801bfb4:	7869      	ldrb	r1, [r5, #1]
 801bfb6:	4379      	muls	r1, r7
 801bfb8:	910b      	str	r1, [sp, #44]	; 0x2c
 801bfba:	9905      	ldr	r1, [sp, #20]
 801bfbc:	5c8a      	ldrb	r2, [r1, r2]
 801bfbe:	437a      	muls	r2, r7
 801bfc0:	920c      	str	r2, [sp, #48]	; 0x30
 801bfc2:	46ca      	mov	sl, r9
 801bfc4:	f1ba 0f00 	cmp.w	sl, #0
 801bfc8:	d03d      	beq.n	801c046 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bfca:	9a04      	ldr	r2, [sp, #16]
 801bfcc:	9f07      	ldr	r7, [sp, #28]
 801bfce:	8812      	ldrh	r2, [r2, #0]
 801bfd0:	1215      	asrs	r5, r2, #8
 801bfd2:	46be      	mov	lr, r7
 801bfd4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bfd8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bfda:	10d1      	asrs	r1, r2, #3
 801bfdc:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bfe0:	fb05 750e 	mla	r5, r5, lr, r7
 801bfe4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bfe8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bfea:	00d2      	lsls	r2, r2, #3
 801bfec:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bff0:	fb01 710e 	mla	r1, r1, lr, r7
 801bff4:	b2d2      	uxtb	r2, r2
 801bff6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bff8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bffc:	b2ad      	uxth	r5, r5
 801bffe:	fb02 720e 	mla	r2, r2, lr, r7
 801c002:	b292      	uxth	r2, r2
 801c004:	f105 0e01 	add.w	lr, r5, #1
 801c008:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c00c:	f102 0e01 	add.w	lr, r2, #1
 801c010:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c014:	b289      	uxth	r1, r1
 801c016:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c01a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c01e:	4315      	orrs	r5, r2
 801c020:	1c4a      	adds	r2, r1, #1
 801c022:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c026:	0949      	lsrs	r1, r1, #5
 801c028:	9a04      	ldr	r2, [sp, #16]
 801c02a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c02e:	430d      	orrs	r5, r1
 801c030:	f822 5b02 	strh.w	r5, [r2], #2
 801c034:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c038:	9204      	str	r2, [sp, #16]
 801c03a:	fa1f fa8a 	uxth.w	sl, sl
 801c03e:	e7c1      	b.n	801bfc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801c040:	4649      	mov	r1, r9
 801c042:	4686      	mov	lr, r0
 801c044:	b999      	cbnz	r1, 801c06e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c046:	4563      	cmp	r3, ip
 801c048:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801c04c:	d38a      	bcc.n	801bf64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c04e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801c052:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c054:	fa1f f68b 	uxth.w	r6, fp
 801c058:	1ba4      	subs	r4, r4, r6
 801c05a:	881b      	ldrh	r3, [r3, #0]
 801c05c:	b2a4      	uxth	r4, r4
 801c05e:	2c00      	cmp	r4, #0
 801c060:	eba3 030b 	sub.w	r3, r3, fp
 801c064:	bf18      	it	ne
 801c066:	2600      	movne	r6, #0
 801c068:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c06c:	e77a      	b.n	801bf64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c06e:	78aa      	ldrb	r2, [r5, #2]
 801c070:	4f0e      	ldr	r7, [pc, #56]	; (801c0ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801c072:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801c076:	786a      	ldrb	r2, [r5, #1]
 801c078:	00d2      	lsls	r2, r2, #3
 801c07a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c07e:	ea4a 0202 	orr.w	r2, sl, r2
 801c082:	f895 a000 	ldrb.w	sl, [r5]
 801c086:	3901      	subs	r1, #1
 801c088:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801c08c:	f82e 2b02 	strh.w	r2, [lr], #2
 801c090:	b289      	uxth	r1, r1
 801c092:	e7d7      	b.n	801c044 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801c094:	4b03      	ldr	r3, [pc, #12]	; (801c0a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c096:	6818      	ldr	r0, [r3, #0]
 801c098:	6803      	ldr	r3, [r0, #0]
 801c09a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c09c:	4798      	blx	r3
 801c09e:	b013      	add	sp, #76	; 0x4c
 801c0a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0a4:	20012e7c 	.word	0x20012e7c
 801c0a8:	20012e76 	.word	0x20012e76
 801c0ac:	fffff800 	.word	0xfffff800

0801c0b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0b4:	b09d      	sub	sp, #116	; 0x74
 801c0b6:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801c0ba:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801c0be:	920e      	str	r2, [sp, #56]	; 0x38
 801c0c0:	461c      	mov	r4, r3
 801c0c2:	4683      	mov	fp, r0
 801c0c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c0c6:	2a00      	cmp	r2, #0
 801c0c8:	f000 81e0 	beq.w	801c48c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c0cc:	6820      	ldr	r0, [r4, #0]
 801c0ce:	6861      	ldr	r1, [r4, #4]
 801c0d0:	aa18      	add	r2, sp, #96	; 0x60
 801c0d2:	c203      	stmia	r2!, {r0, r1}
 801c0d4:	6818      	ldr	r0, [r3, #0]
 801c0d6:	6859      	ldr	r1, [r3, #4]
 801c0d8:	aa1a      	add	r2, sp, #104	; 0x68
 801c0da:	c203      	stmia	r2!, {r0, r1}
 801c0dc:	a818      	add	r0, sp, #96	; 0x60
 801c0de:	f7f8 fd83 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c0e2:	4621      	mov	r1, r4
 801c0e4:	a81a      	add	r0, sp, #104	; 0x68
 801c0e6:	f7f8 fdc3 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c0ea:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801c0ee:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801c0f2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c0f6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c0fa:	bfd7      	itett	le
 801c0fc:	b29a      	uxthle	r2, r3
 801c0fe:	2201      	movgt	r2, #1
 801c100:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c104:	fb91 f2f2 	sdivle	r2, r1, r2
 801c108:	9202      	str	r2, [sp, #8]
 801c10a:	9802      	ldr	r0, [sp, #8]
 801c10c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801c110:	fb92 f0f0 	sdiv	r0, r2, r0
 801c114:	b280      	uxth	r0, r0
 801c116:	900f      	str	r0, [sp, #60]	; 0x3c
 801c118:	9902      	ldr	r1, [sp, #8]
 801c11a:	9802      	ldr	r0, [sp, #8]
 801c11c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c11e:	440c      	add	r4, r1
 801c120:	fb05 2510 	mls	r5, r5, r0, r2
 801c124:	fb15 f503 	smulbb	r5, r5, r3
 801c128:	3c01      	subs	r4, #1
 801c12a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801c12e:	fb94 f4f1 	sdiv	r4, r4, r1
 801c132:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801c136:	440d      	add	r5, r1
 801c138:	4419      	add	r1, r3
 801c13a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801c13e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801c142:	441a      	add	r2, r3
 801c144:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c148:	9306      	str	r3, [sp, #24]
 801c14a:	4bb3      	ldr	r3, [pc, #716]	; (801c418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c14c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801c150:	6818      	ldr	r0, [r3, #0]
 801c152:	6803      	ldr	r3, [r0, #0]
 801c154:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c156:	4798      	blx	r3
 801c158:	4bb0      	ldr	r3, [pc, #704]	; (801c41c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c15a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801c15e:	881a      	ldrh	r2, [r3, #0]
 801c160:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801c164:	9316      	str	r3, [sp, #88]	; 0x58
 801c166:	fb02 7101 	mla	r1, r2, r1, r7
 801c16a:	3401      	adds	r4, #1
 801c16c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c170:	b2a4      	uxth	r4, r4
 801c172:	4356      	muls	r6, r2
 801c174:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c178:	00a4      	lsls	r4, r4, #2
 801c17a:	920a      	str	r2, [sp, #40]	; 0x28
 801c17c:	1d22      	adds	r2, r4, #4
 801c17e:	b2ad      	uxth	r5, r5
 801c180:	9213      	str	r2, [sp, #76]	; 0x4c
 801c182:	4ba7      	ldr	r3, [pc, #668]	; (801c420 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c184:	9a06      	ldr	r2, [sp, #24]
 801c186:	2d00      	cmp	r5, #0
 801c188:	bf0c      	ite	eq
 801c18a:	4611      	moveq	r1, r2
 801c18c:	2100      	movne	r1, #0
 801c18e:	2200      	movs	r2, #0
 801c190:	eba3 030b 	sub.w	r3, r3, fp
 801c194:	b289      	uxth	r1, r1
 801c196:	920d      	str	r2, [sp, #52]	; 0x34
 801c198:	9317      	str	r3, [sp, #92]	; 0x5c
 801c19a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c19c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c19e:	fa12 f383 	uxtah	r3, r2, r3
 801c1a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c1a4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c1a8:	3304      	adds	r3, #4
 801c1aa:	9308      	str	r3, [sp, #32]
 801c1ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c1ae:	4543      	cmp	r3, r8
 801c1b0:	f240 8167 	bls.w	801c482 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c1b4:	9a02      	ldr	r2, [sp, #8]
 801c1b6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801c1ba:	fbb5 f3f3 	udiv	r3, r5, r3
 801c1be:	1ad3      	subs	r3, r2, r3
 801c1c0:	b29b      	uxth	r3, r3
 801c1c2:	9314      	str	r3, [sp, #80]	; 0x50
 801c1c4:	9b08      	ldr	r3, [sp, #32]
 801c1c6:	9808      	ldr	r0, [sp, #32]
 801c1c8:	785a      	ldrb	r2, [r3, #1]
 801c1ca:	789b      	ldrb	r3, [r3, #2]
 801c1cc:	7800      	ldrb	r0, [r0, #0]
 801c1ce:	9010      	str	r0, [sp, #64]	; 0x40
 801c1d0:	021b      	lsls	r3, r3, #8
 801c1d2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c1d6:	9a08      	ldr	r2, [sp, #32]
 801c1d8:	78d2      	ldrb	r2, [r2, #3]
 801c1da:	4313      	orrs	r3, r2
 801c1dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c1de:	3001      	adds	r0, #1
 801c1e0:	441a      	add	r2, r3
 801c1e2:	9007      	str	r0, [sp, #28]
 801c1e4:	1c50      	adds	r0, r2, #1
 801c1e6:	9005      	str	r0, [sp, #20]
 801c1e8:	7852      	ldrb	r2, [r2, #1]
 801c1ea:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c1ec:	0212      	lsls	r2, r2, #8
 801c1ee:	5cc3      	ldrb	r3, [r0, r3]
 801c1f0:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c1f4:	431a      	orrs	r2, r3
 801c1f6:	b293      	uxth	r3, r2
 801c1f8:	930b      	str	r3, [sp, #44]	; 0x2c
 801c1fa:	2300      	movs	r3, #0
 801c1fc:	9309      	str	r3, [sp, #36]	; 0x24
 801c1fe:	2301      	movs	r3, #1
 801c200:	9301      	str	r3, [sp, #4]
 801c202:	9304      	str	r3, [sp, #16]
 801c204:	2300      	movs	r3, #0
 801c206:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801c20a:	9303      	str	r3, [sp, #12]
 801c20c:	f04f 0e01 	mov.w	lr, #1
 801c210:	2d00      	cmp	r5, #0
 801c212:	d07c      	beq.n	801c30e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c214:	45ae      	cmp	lr, r5
 801c216:	d26b      	bcs.n	801c2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c218:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c21a:	eba5 050e 	sub.w	r5, r5, lr
 801c21e:	4543      	cmp	r3, r8
 801c220:	b2ad      	uxth	r5, r5
 801c222:	460c      	mov	r4, r1
 801c224:	d802      	bhi.n	801c22c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c226:	e070      	b.n	801c30a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c228:	2b00      	cmp	r3, #0
 801c22a:	d15c      	bne.n	801c2e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c22c:	9b05      	ldr	r3, [sp, #20]
 801c22e:	9a04      	ldr	r2, [sp, #16]
 801c230:	785b      	ldrb	r3, [r3, #1]
 801c232:	9904      	ldr	r1, [sp, #16]
 801c234:	f1c2 0207 	rsb	r2, r2, #7
 801c238:	4093      	lsls	r3, r2
 801c23a:	005b      	lsls	r3, r3, #1
 801c23c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c240:	9b05      	ldr	r3, [sp, #20]
 801c242:	781b      	ldrb	r3, [r3, #0]
 801c244:	410b      	asrs	r3, r1
 801c246:	3101      	adds	r1, #1
 801c248:	b2c9      	uxtb	r1, r1
 801c24a:	2908      	cmp	r1, #8
 801c24c:	9104      	str	r1, [sp, #16]
 801c24e:	9905      	ldr	r1, [sp, #20]
 801c250:	bf0a      	itet	eq
 801c252:	3102      	addeq	r1, #2
 801c254:	3101      	addne	r1, #1
 801c256:	9105      	streq	r1, [sp, #20]
 801c258:	b2db      	uxtb	r3, r3
 801c25a:	bf0a      	itet	eq
 801c25c:	2100      	moveq	r1, #0
 801c25e:	9105      	strne	r1, [sp, #20]
 801c260:	9104      	streq	r1, [sp, #16]
 801c262:	4313      	orrs	r3, r2
 801c264:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c266:	b29a      	uxth	r2, r3
 801c268:	4291      	cmp	r1, r2
 801c26a:	d30a      	bcc.n	801c282 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c26c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801c270:	2301      	movs	r3, #1
 801c272:	9907      	ldr	r1, [sp, #28]
 801c274:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c278:	d30f      	bcc.n	801c29a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c27a:	2100      	movs	r1, #0
 801c27c:	9301      	str	r3, [sp, #4]
 801c27e:	9103      	str	r1, [sp, #12]
 801c280:	e032      	b.n	801c2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c282:	9b07      	ldr	r3, [sp, #28]
 801c284:	429a      	cmp	r2, r3
 801c286:	d318      	bcc.n	801c2ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c288:	9b01      	ldr	r3, [sp, #4]
 801c28a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801c28e:	445b      	add	r3, fp
 801c290:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c294:	9b01      	ldr	r3, [sp, #4]
 801c296:	3301      	adds	r3, #1
 801c298:	b29b      	uxth	r3, r3
 801c29a:	9907      	ldr	r1, [sp, #28]
 801c29c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801c2a0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c2a4:	7108      	strb	r0, [r1, #4]
 801c2a6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c2a8:	80c8      	strh	r0, [r1, #6]
 801c2aa:	9801      	ldr	r0, [sp, #4]
 801c2ac:	3001      	adds	r0, #1
 801c2ae:	7148      	strb	r0, [r1, #5]
 801c2b0:	9907      	ldr	r1, [sp, #28]
 801c2b2:	3101      	adds	r1, #1
 801c2b4:	b289      	uxth	r1, r1
 801c2b6:	9107      	str	r1, [sp, #28]
 801c2b8:	e7df      	b.n	801c27a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c2ba:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c2be:	4611      	mov	r1, r2
 801c2c0:	795b      	ldrb	r3, [r3, #5]
 801c2c2:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801c2c6:	4458      	add	r0, fp
 801c2c8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c2ca:	4406      	add	r6, r0
 801c2cc:	2e00      	cmp	r6, #0
 801c2ce:	dd06      	ble.n	801c2de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c2d0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c2d4:	790e      	ldrb	r6, [r1, #4]
 801c2d6:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c2da:	88c9      	ldrh	r1, [r1, #6]
 801c2dc:	e7f4      	b.n	801c2c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c2de:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801c2e2:	b29b      	uxth	r3, r3
 801c2e4:	e7c5      	b.n	801c272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c2e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c2e8:	920b      	str	r2, [sp, #44]	; 0x2c
 801c2ea:	4621      	mov	r1, r4
 801c2ec:	469e      	mov	lr, r3
 801c2ee:	e78f      	b.n	801c210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c2f0:	9a03      	ldr	r2, [sp, #12]
 801c2f2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c2f6:	442a      	add	r2, r5
 801c2f8:	ebae 0305 	sub.w	r3, lr, r5
 801c2fc:	b292      	uxth	r2, r2
 801c2fe:	b29b      	uxth	r3, r3
 801c300:	9203      	str	r2, [sp, #12]
 801c302:	2500      	movs	r5, #0
 801c304:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c306:	4542      	cmp	r2, r8
 801c308:	d88e      	bhi.n	801c228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c30a:	4621      	mov	r1, r4
 801c30c:	e74e      	b.n	801c1ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c30e:	458e      	cmp	lr, r1
 801c310:	bf29      	itett	cs
 801c312:	ebae 0301 	subcs.w	r3, lr, r1
 801c316:	eba1 040e 	subcc.w	r4, r1, lr
 801c31a:	b29b      	uxthcs	r3, r3
 801c31c:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c31e:	bf2f      	iteee	cs
 801c320:	462c      	movcs	r4, r5
 801c322:	b2a4      	uxthcc	r4, r4
 801c324:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c328:	462b      	movcc	r3, r5
 801c32a:	f04f 0900 	mov.w	r9, #0
 801c32e:	9a03      	ldr	r2, [sp, #12]
 801c330:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c332:	444a      	add	r2, r9
 801c334:	4548      	cmp	r0, r9
 801c336:	b292      	uxth	r2, r2
 801c338:	d074      	beq.n	801c424 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c33a:	445a      	add	r2, fp
 801c33c:	2004      	movs	r0, #4
 801c33e:	4605      	mov	r5, r0
 801c340:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c344:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c346:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c34a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c34c:	5880      	ldr	r0, [r0, r2]
 801c34e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c352:	d014      	beq.n	801c37e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c354:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c358:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c35c:	d112      	bne.n	801c384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c35e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c360:	2aff      	cmp	r2, #255	; 0xff
 801c362:	d10f      	bne.n	801c384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c364:	0942      	lsrs	r2, r0, #5
 801c366:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c36a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c36e:	f025 0507 	bic.w	r5, r5, #7
 801c372:	4315      	orrs	r5, r2
 801c374:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c378:	4305      	orrs	r5, r0
 801c37a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c37e:	f109 0901 	add.w	r9, r9, #1
 801c382:	e7d4      	b.n	801c32e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c384:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c388:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c38c:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c390:	9215      	str	r2, [sp, #84]	; 0x54
 801c392:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c394:	fb02 fa0a 	mul.w	sl, r2, sl
 801c398:	f10a 0201 	add.w	r2, sl, #1
 801c39c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c3a0:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c3a4:	1212      	asrs	r2, r2, #8
 801c3a6:	fa1f fa82 	uxth.w	sl, r2
 801c3aa:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c3ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c3b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c3b6:	43d2      	mvns	r2, r2
 801c3b8:	b2d2      	uxtb	r2, r2
 801c3ba:	fb16 f60a 	smulbb	r6, r6, sl
 801c3be:	fa5f fc8c 	uxtb.w	ip, ip
 801c3c2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c3c6:	b2c0      	uxtb	r0, r0
 801c3c8:	fb07 6702 	mla	r7, r7, r2, r6
 801c3cc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c3d0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c3d2:	fb10 f00a 	smulbb	r0, r0, sl
 801c3d6:	fb0c 0002 	mla	r0, ip, r2, r0
 801c3da:	b2ed      	uxtb	r5, r5
 801c3dc:	b2bf      	uxth	r7, r7
 801c3de:	fb15 f50a 	smulbb	r5, r5, sl
 801c3e2:	b280      	uxth	r0, r0
 801c3e4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c3e8:	fb06 5602 	mla	r6, r6, r2, r5
 801c3ec:	1c7a      	adds	r2, r7, #1
 801c3ee:	1c45      	adds	r5, r0, #1
 801c3f0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c3f4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c3f8:	b2b6      	uxth	r6, r6
 801c3fa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c3fe:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c402:	432f      	orrs	r7, r5
 801c404:	1c75      	adds	r5, r6, #1
 801c406:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c40a:	096d      	lsrs	r5, r5, #5
 801c40c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c410:	432f      	orrs	r7, r5
 801c412:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c416:	e7b2      	b.n	801c37e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c418:	20012e7c 	.word	0x20012e7c
 801c41c:	20012e76 	.word	0x20012e76
 801c420:	fffff7fb 	.word	0xfffff7fb
 801c424:	9203      	str	r2, [sp, #12]
 801c426:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c428:	458e      	cmp	lr, r1
 801c42a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c42e:	f4ff af68 	bcc.w	801c302 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c432:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c434:	9906      	ldr	r1, [sp, #24]
 801c436:	8812      	ldrh	r2, [r2, #0]
 801c438:	1a52      	subs	r2, r2, r1
 801c43a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c43e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c440:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c442:	3201      	adds	r2, #1
 801c444:	428a      	cmp	r2, r1
 801c446:	9209      	str	r2, [sp, #36]	; 0x24
 801c448:	d111      	bne.n	801c46e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c44a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c44e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c452:	9b06      	ldr	r3, [sp, #24]
 801c454:	eba5 0509 	sub.w	r5, r5, r9
 801c458:	b2ad      	uxth	r5, r5
 801c45a:	2d00      	cmp	r5, #0
 801c45c:	bf08      	it	eq
 801c45e:	4619      	moveq	r1, r3
 801c460:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c462:	bf18      	it	ne
 801c464:	2100      	movne	r1, #0
 801c466:	3301      	adds	r3, #1
 801c468:	930d      	str	r3, [sp, #52]	; 0x34
 801c46a:	b289      	uxth	r1, r1
 801c46c:	e695      	b.n	801c19a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c46e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c472:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c476:	1b2d      	subs	r5, r5, r4
 801c478:	b2ad      	uxth	r5, r5
 801c47a:	2d00      	cmp	r5, #0
 801c47c:	bf18      	it	ne
 801c47e:	2400      	movne	r4, #0
 801c480:	e740      	b.n	801c304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c482:	4b04      	ldr	r3, [pc, #16]	; (801c494 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c484:	6818      	ldr	r0, [r3, #0]
 801c486:	6803      	ldr	r3, [r0, #0]
 801c488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c48a:	4798      	blx	r3
 801c48c:	b01d      	add	sp, #116	; 0x74
 801c48e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c492:	bf00      	nop
 801c494:	20012e7c 	.word	0x20012e7c

0801c498 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c49c:	b09f      	sub	sp, #124	; 0x7c
 801c49e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c4a2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c4a6:	920a      	str	r2, [sp, #40]	; 0x28
 801c4a8:	461d      	mov	r5, r3
 801c4aa:	4604      	mov	r4, r0
 801c4ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c4ae:	2a00      	cmp	r2, #0
 801c4b0:	f000 81fa 	beq.w	801c8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c4b4:	6828      	ldr	r0, [r5, #0]
 801c4b6:	6869      	ldr	r1, [r5, #4]
 801c4b8:	aa1a      	add	r2, sp, #104	; 0x68
 801c4ba:	c203      	stmia	r2!, {r0, r1}
 801c4bc:	6818      	ldr	r0, [r3, #0]
 801c4be:	6859      	ldr	r1, [r3, #4]
 801c4c0:	aa1c      	add	r2, sp, #112	; 0x70
 801c4c2:	c203      	stmia	r2!, {r0, r1}
 801c4c4:	a81a      	add	r0, sp, #104	; 0x68
 801c4c6:	f7f8 fb8f 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c4ca:	4629      	mov	r1, r5
 801c4cc:	a81c      	add	r0, sp, #112	; 0x70
 801c4ce:	f7f8 fbcf 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c4d2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c4d6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c4da:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c4de:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c4e2:	bfd7      	itett	le
 801c4e4:	b29a      	uxthle	r2, r3
 801c4e6:	2201      	movgt	r2, #1
 801c4e8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c4ec:	fb91 f2f2 	sdivle	r2, r1, r2
 801c4f0:	9201      	str	r2, [sp, #4]
 801c4f2:	9801      	ldr	r0, [sp, #4]
 801c4f4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c4f8:	fb92 f0f0 	sdiv	r0, r2, r0
 801c4fc:	b280      	uxth	r0, r0
 801c4fe:	9010      	str	r0, [sp, #64]	; 0x40
 801c500:	9901      	ldr	r1, [sp, #4]
 801c502:	9801      	ldr	r0, [sp, #4]
 801c504:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c506:	440e      	add	r6, r1
 801c508:	fb05 2510 	mls	r5, r5, r0, r2
 801c50c:	fb15 f503 	smulbb	r5, r5, r3
 801c510:	3e01      	subs	r6, #1
 801c512:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c516:	fb96 f6f1 	sdiv	r6, r6, r1
 801c51a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c51e:	440d      	add	r5, r1
 801c520:	4419      	add	r1, r3
 801c522:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c526:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c52a:	441a      	add	r2, r3
 801c52c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c530:	9304      	str	r3, [sp, #16]
 801c532:	4b96      	ldr	r3, [pc, #600]	; (801c78c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c534:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c538:	6818      	ldr	r0, [r3, #0]
 801c53a:	6803      	ldr	r3, [r0, #0]
 801c53c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c53e:	4798      	blx	r3
 801c540:	4b93      	ldr	r3, [pc, #588]	; (801c790 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c542:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c546:	881a      	ldrh	r2, [r3, #0]
 801c548:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c54c:	9318      	str	r3, [sp, #96]	; 0x60
 801c54e:	fb02 c101 	mla	r1, r2, r1, ip
 801c552:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c556:	4357      	muls	r7, r2
 801c558:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c55c:	3601      	adds	r6, #1
 801c55e:	920b      	str	r2, [sp, #44]	; 0x2c
 801c560:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c562:	4b8c      	ldr	r3, [pc, #560]	; (801c794 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c564:	b2b6      	uxth	r6, r6
 801c566:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c56a:	1d32      	adds	r2, r6, #4
 801c56c:	9206      	str	r2, [sp, #24]
 801c56e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c570:	43d2      	mvns	r2, r2
 801c572:	b2d2      	uxtb	r2, r2
 801c574:	b2ad      	uxth	r5, r5
 801c576:	9215      	str	r2, [sp, #84]	; 0x54
 801c578:	9a04      	ldr	r2, [sp, #16]
 801c57a:	2d00      	cmp	r5, #0
 801c57c:	bf0c      	ite	eq
 801c57e:	4611      	moveq	r1, r2
 801c580:	2100      	movne	r1, #0
 801c582:	2200      	movs	r2, #0
 801c584:	1b1b      	subs	r3, r3, r4
 801c586:	b289      	uxth	r1, r1
 801c588:	920d      	str	r2, [sp, #52]	; 0x34
 801c58a:	9319      	str	r3, [sp, #100]	; 0x64
 801c58c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c58e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c590:	fa12 f383 	uxtah	r3, r2, r3
 801c594:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c596:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c59a:	3304      	adds	r3, #4
 801c59c:	9307      	str	r3, [sp, #28]
 801c59e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c5a0:	455b      	cmp	r3, fp
 801c5a2:	f240 817c 	bls.w	801c89e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c5a6:	9a01      	ldr	r2, [sp, #4]
 801c5a8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c5ac:	fbb5 f3f3 	udiv	r3, r5, r3
 801c5b0:	1ad3      	subs	r3, r2, r3
 801c5b2:	b29b      	uxth	r3, r3
 801c5b4:	9316      	str	r3, [sp, #88]	; 0x58
 801c5b6:	9b07      	ldr	r3, [sp, #28]
 801c5b8:	9807      	ldr	r0, [sp, #28]
 801c5ba:	785a      	ldrb	r2, [r3, #1]
 801c5bc:	789b      	ldrb	r3, [r3, #2]
 801c5be:	7800      	ldrb	r0, [r0, #0]
 801c5c0:	9011      	str	r0, [sp, #68]	; 0x44
 801c5c2:	021b      	lsls	r3, r3, #8
 801c5c4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c5c8:	9a07      	ldr	r2, [sp, #28]
 801c5ca:	78d2      	ldrb	r2, [r2, #3]
 801c5cc:	4313      	orrs	r3, r2
 801c5ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c5d0:	3001      	adds	r0, #1
 801c5d2:	441a      	add	r2, r3
 801c5d4:	9005      	str	r0, [sp, #20]
 801c5d6:	1c50      	adds	r0, r2, #1
 801c5d8:	9003      	str	r0, [sp, #12]
 801c5da:	7852      	ldrb	r2, [r2, #1]
 801c5dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c5de:	0212      	lsls	r2, r2, #8
 801c5e0:	5cc3      	ldrb	r3, [r0, r3]
 801c5e2:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c5e6:	431a      	orrs	r2, r3
 801c5e8:	b293      	uxth	r3, r2
 801c5ea:	930c      	str	r3, [sp, #48]	; 0x30
 801c5ec:	2300      	movs	r3, #0
 801c5ee:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c5f2:	9308      	str	r3, [sp, #32]
 801c5f4:	461a      	mov	r2, r3
 801c5f6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c5fa:	930e      	str	r3, [sp, #56]	; 0x38
 801c5fc:	f04f 0801 	mov.w	r8, #1
 801c600:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c604:	f8cd 8008 	str.w	r8, [sp, #8]
 801c608:	46c4      	mov	ip, r8
 801c60a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c60c:	2d00      	cmp	r5, #0
 801c60e:	d07c      	beq.n	801c70a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c610:	45ac      	cmp	ip, r5
 801c612:	d26c      	bcs.n	801c6ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c614:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c616:	eba5 050c 	sub.w	r5, r5, ip
 801c61a:	455b      	cmp	r3, fp
 801c61c:	b2ad      	uxth	r5, r5
 801c61e:	4608      	mov	r0, r1
 801c620:	d802      	bhi.n	801c628 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c622:	e070      	b.n	801c706 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c624:	2b00      	cmp	r3, #0
 801c626:	d15c      	bne.n	801c6e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c628:	9b03      	ldr	r3, [sp, #12]
 801c62a:	9a02      	ldr	r2, [sp, #8]
 801c62c:	785b      	ldrb	r3, [r3, #1]
 801c62e:	9902      	ldr	r1, [sp, #8]
 801c630:	f1c2 0207 	rsb	r2, r2, #7
 801c634:	4093      	lsls	r3, r2
 801c636:	005b      	lsls	r3, r3, #1
 801c638:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c63c:	9b03      	ldr	r3, [sp, #12]
 801c63e:	781b      	ldrb	r3, [r3, #0]
 801c640:	410b      	asrs	r3, r1
 801c642:	3101      	adds	r1, #1
 801c644:	b2c9      	uxtb	r1, r1
 801c646:	2908      	cmp	r1, #8
 801c648:	9102      	str	r1, [sp, #8]
 801c64a:	9903      	ldr	r1, [sp, #12]
 801c64c:	bf0a      	itet	eq
 801c64e:	3102      	addeq	r1, #2
 801c650:	3101      	addne	r1, #1
 801c652:	9103      	streq	r1, [sp, #12]
 801c654:	b2db      	uxtb	r3, r3
 801c656:	bf0a      	itet	eq
 801c658:	2100      	moveq	r1, #0
 801c65a:	9103      	strne	r1, [sp, #12]
 801c65c:	9102      	streq	r1, [sp, #8]
 801c65e:	4313      	orrs	r3, r2
 801c660:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c662:	b29a      	uxth	r2, r3
 801c664:	4291      	cmp	r1, r2
 801c666:	d30a      	bcc.n	801c67e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c668:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c66c:	2301      	movs	r3, #1
 801c66e:	9905      	ldr	r1, [sp, #20]
 801c670:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c674:	d30f      	bcc.n	801c696 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c676:	2100      	movs	r1, #0
 801c678:	4698      	mov	r8, r3
 801c67a:	9100      	str	r1, [sp, #0]
 801c67c:	e032      	b.n	801c6e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c67e:	9b05      	ldr	r3, [sp, #20]
 801c680:	429a      	cmp	r2, r3
 801c682:	d318      	bcc.n	801c6b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c684:	eb04 0308 	add.w	r3, r4, r8
 801c688:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c68c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c690:	f108 0301 	add.w	r3, r8, #1
 801c694:	b29b      	uxth	r3, r3
 801c696:	9905      	ldr	r1, [sp, #20]
 801c698:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c69c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c6a0:	710e      	strb	r6, [r1, #4]
 801c6a2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c6a4:	80ce      	strh	r6, [r1, #6]
 801c6a6:	f108 0601 	add.w	r6, r8, #1
 801c6aa:	714e      	strb	r6, [r1, #5]
 801c6ac:	9905      	ldr	r1, [sp, #20]
 801c6ae:	3101      	adds	r1, #1
 801c6b0:	b289      	uxth	r1, r1
 801c6b2:	9105      	str	r1, [sp, #20]
 801c6b4:	e7df      	b.n	801c676 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c6b6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c6ba:	4611      	mov	r1, r2
 801c6bc:	795b      	ldrb	r3, [r3, #5]
 801c6be:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c6c2:	4426      	add	r6, r4
 801c6c4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c6c6:	4437      	add	r7, r6
 801c6c8:	2f00      	cmp	r7, #0
 801c6ca:	dd06      	ble.n	801c6da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c6cc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c6d0:	790f      	ldrb	r7, [r1, #4]
 801c6d2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c6d6:	88c9      	ldrh	r1, [r1, #6]
 801c6d8:	e7f4      	b.n	801c6c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c6da:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c6de:	b29b      	uxth	r3, r3
 801c6e0:	e7c5      	b.n	801c66e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c6e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c6e4:	920c      	str	r2, [sp, #48]	; 0x30
 801c6e6:	4601      	mov	r1, r0
 801c6e8:	9a00      	ldr	r2, [sp, #0]
 801c6ea:	469c      	mov	ip, r3
 801c6ec:	e78e      	b.n	801c60c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c6ee:	1957      	adds	r7, r2, r5
 801c6f0:	ebac 0305 	sub.w	r3, ip, r5
 801c6f4:	b2ba      	uxth	r2, r7
 801c6f6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c6fa:	9200      	str	r2, [sp, #0]
 801c6fc:	b29b      	uxth	r3, r3
 801c6fe:	2500      	movs	r5, #0
 801c700:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c702:	455a      	cmp	r2, fp
 801c704:	d88e      	bhi.n	801c624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c706:	4601      	mov	r1, r0
 801c708:	e749      	b.n	801c59e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c70a:	458c      	cmp	ip, r1
 801c70c:	bf2c      	ite	cs
 801c70e:	4628      	movcs	r0, r5
 801c710:	462b      	movcc	r3, r5
 801c712:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c714:	bf27      	ittee	cs
 801c716:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c718:	ebac 0301 	subcs.w	r3, ip, r1
 801c71c:	eba1 000c 	subcc.w	r0, r1, ip
 801c720:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c724:	bf2c      	ite	cs
 801c726:	b29b      	uxthcs	r3, r3
 801c728:	b280      	uxthcc	r0, r0
 801c72a:	2dff      	cmp	r5, #255	; 0xff
 801c72c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c72e:	eb02 0705 	add.w	r7, r2, r5
 801c732:	b2bd      	uxth	r5, r7
 801c734:	9500      	str	r5, [sp, #0]
 801c736:	d12f      	bne.n	801c798 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c738:	465e      	mov	r6, fp
 801c73a:	9d00      	ldr	r5, [sp, #0]
 801c73c:	42aa      	cmp	r2, r5
 801c73e:	f040 8084 	bne.w	801c84a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c742:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c744:	458c      	cmp	ip, r1
 801c746:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c74a:	d3d8      	bcc.n	801c6fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c74c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c74e:	9904      	ldr	r1, [sp, #16]
 801c750:	8812      	ldrh	r2, [r2, #0]
 801c752:	1a52      	subs	r2, r2, r1
 801c754:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c758:	9a08      	ldr	r2, [sp, #32]
 801c75a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c75c:	3201      	adds	r2, #1
 801c75e:	428a      	cmp	r2, r1
 801c760:	9208      	str	r2, [sp, #32]
 801c762:	f040 8092 	bne.w	801c88a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c766:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c76a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c76e:	9b04      	ldr	r3, [sp, #16]
 801c770:	eba5 050c 	sub.w	r5, r5, ip
 801c774:	b2ad      	uxth	r5, r5
 801c776:	2d00      	cmp	r5, #0
 801c778:	bf08      	it	eq
 801c77a:	4619      	moveq	r1, r3
 801c77c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c77e:	bf18      	it	ne
 801c780:	2100      	movne	r1, #0
 801c782:	3301      	adds	r3, #1
 801c784:	930d      	str	r3, [sp, #52]	; 0x34
 801c786:	b289      	uxth	r1, r1
 801c788:	e700      	b.n	801c58c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c78a:	bf00      	nop
 801c78c:	20012e7c 	.word	0x20012e7c
 801c790:	20012e76 	.word	0x20012e76
 801c794:	fffff7fb 	.word	0xfffff7fb
 801c798:	46d9      	mov	r9, fp
 801c79a:	9d00      	ldr	r5, [sp, #0]
 801c79c:	42aa      	cmp	r2, r5
 801c79e:	d0d0      	beq.n	801c742 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c7a0:	1c55      	adds	r5, r2, #1
 801c7a2:	4422      	add	r2, r4
 801c7a4:	9517      	str	r5, [sp, #92]	; 0x5c
 801c7a6:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c7aa:	9a06      	ldr	r2, [sp, #24]
 801c7ac:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c7b0:	4472      	add	r2, lr
 801c7b2:	9212      	str	r2, [sp, #72]	; 0x48
 801c7b4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c7b6:	f8b9 2000 	ldrh.w	r2, [r9]
 801c7ba:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c7be:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c7c0:	1216      	asrs	r6, r2, #8
 801c7c2:	fb1a fa07 	smulbb	sl, sl, r7
 801c7c6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c7ca:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c7cc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c7d0:	fb06 a607 	mla	r6, r6, r7, sl
 801c7d4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c7d6:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c7da:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c7dc:	10d5      	asrs	r5, r2, #3
 801c7de:	fb1a fa07 	smulbb	sl, sl, r7
 801c7e2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c7e6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c7e8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c7ec:	fb05 a507 	mla	r5, r5, r7, sl
 801c7f0:	9f06      	ldr	r7, [sp, #24]
 801c7f2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c7f6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c7f8:	00d2      	lsls	r2, r2, #3
 801c7fa:	fb1e fe07 	smulbb	lr, lr, r7
 801c7fe:	b2d2      	uxtb	r2, r2
 801c800:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c802:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c806:	b2b6      	uxth	r6, r6
 801c808:	fb02 e207 	mla	r2, r2, r7, lr
 801c80c:	b292      	uxth	r2, r2
 801c80e:	b2ad      	uxth	r5, r5
 801c810:	f106 0a01 	add.w	sl, r6, #1
 801c814:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c818:	f102 0e01 	add.w	lr, r2, #1
 801c81c:	f105 0a01 	add.w	sl, r5, #1
 801c820:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c824:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c828:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c82c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c830:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c834:	ea4e 0606 	orr.w	r6, lr, r6
 801c838:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c83c:	ea46 060a 	orr.w	r6, r6, sl
 801c840:	f829 6b02 	strh.w	r6, [r9], #2
 801c844:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c848:	e7a7      	b.n	801c79a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c84a:	f102 0e01 	add.w	lr, r2, #1
 801c84e:	4422      	add	r2, r4
 801c850:	9f06      	ldr	r7, [sp, #24]
 801c852:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c856:	9a06      	ldr	r2, [sp, #24]
 801c858:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c85c:	eb02 0a05 	add.w	sl, r2, r5
 801c860:	4a13      	ldr	r2, [pc, #76]	; (801c8b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c862:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c866:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c86a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c86e:	00d2      	lsls	r2, r2, #3
 801c870:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c874:	ea49 0202 	orr.w	r2, r9, r2
 801c878:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c87c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c880:	f826 2b02 	strh.w	r2, [r6], #2
 801c884:	fa1f f28e 	uxth.w	r2, lr
 801c888:	e757      	b.n	801c73a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c88a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c88e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c892:	1a2d      	subs	r5, r5, r0
 801c894:	b2ad      	uxth	r5, r5
 801c896:	2d00      	cmp	r5, #0
 801c898:	bf18      	it	ne
 801c89a:	2000      	movne	r0, #0
 801c89c:	e730      	b.n	801c700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c89e:	4b05      	ldr	r3, [pc, #20]	; (801c8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c8a0:	6818      	ldr	r0, [r3, #0]
 801c8a2:	6803      	ldr	r3, [r0, #0]
 801c8a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c8a6:	4798      	blx	r3
 801c8a8:	b01f      	add	sp, #124	; 0x7c
 801c8aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8ae:	bf00      	nop
 801c8b0:	fffff800 	.word	0xfffff800
 801c8b4:	20012e7c 	.word	0x20012e7c

0801c8b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c8b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8bc:	b091      	sub	sp, #68	; 0x44
 801c8be:	469b      	mov	fp, r3
 801c8c0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c8c4:	4616      	mov	r6, r2
 801c8c6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c8ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c8ce:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c8d2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c8d6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c8da:	4604      	mov	r4, r0
 801c8dc:	460d      	mov	r5, r1
 801c8de:	4640      	mov	r0, r8
 801c8e0:	4659      	mov	r1, fp
 801c8e2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c8e6:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c8ea:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c8ee:	f7f3 fa1d 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 801c8f2:	4631      	mov	r1, r6
 801c8f4:	4640      	mov	r0, r8
 801c8f6:	f7f3 fa19 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 801c8fa:	4b74      	ldr	r3, [pc, #464]	; (801cacc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c8fc:	8818      	ldrh	r0, [r3, #0]
 801c8fe:	4b74      	ldr	r3, [pc, #464]	; (801cad0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c900:	8819      	ldrh	r1, [r3, #0]
 801c902:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c906:	2b00      	cmp	r3, #0
 801c908:	b202      	sxth	r2, r0
 801c90a:	b20e      	sxth	r6, r1
 801c90c:	da07      	bge.n	801c91e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c90e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c912:	4463      	add	r3, ip
 801c914:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c918:	2300      	movs	r3, #0
 801c91a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c91e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c922:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c926:	1ad2      	subs	r2, r2, r3
 801c928:	4594      	cmp	ip, r2
 801c92a:	bfc4      	itt	gt
 801c92c:	1ac2      	subgt	r2, r0, r3
 801c92e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c932:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c936:	2a00      	cmp	r2, #0
 801c938:	da07      	bge.n	801c94a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c93a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c93e:	4462      	add	r2, ip
 801c940:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c944:	2200      	movs	r2, #0
 801c946:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c94a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c94e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c952:	eba6 060a 	sub.w	r6, r6, sl
 801c956:	42b2      	cmp	r2, r6
 801c958:	bfc4      	itt	gt
 801c95a:	eba1 020a 	subgt.w	r2, r1, sl
 801c95e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c962:	4a5c      	ldr	r2, [pc, #368]	; (801cad4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c964:	7812      	ldrb	r2, [r2, #0]
 801c966:	b9a2      	cbnz	r2, 801c992 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c968:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c96c:	4286      	cmp	r6, r0
 801c96e:	4640      	mov	r0, r8
 801c970:	9303      	str	r3, [sp, #12]
 801c972:	bf14      	ite	ne
 801c974:	2600      	movne	r6, #0
 801c976:	2601      	moveq	r6, #1
 801c978:	f7f3 fa1b 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c97c:	9b03      	ldr	r3, [sp, #12]
 801c97e:	b160      	cbz	r0, 801c99a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c980:	2300      	movs	r3, #0
 801c982:	8023      	strh	r3, [r4, #0]
 801c984:	8063      	strh	r3, [r4, #2]
 801c986:	80a3      	strh	r3, [r4, #4]
 801c988:	4620      	mov	r0, r4
 801c98a:	80e3      	strh	r3, [r4, #6]
 801c98c:	b011      	add	sp, #68	; 0x44
 801c98e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c992:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c996:	428e      	cmp	r6, r1
 801c998:	e7e9      	b.n	801c96e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c99a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c99e:	9205      	str	r2, [sp, #20]
 801c9a0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c9a4:	9206      	str	r2, [sp, #24]
 801c9a6:	f8bb 2000 	ldrh.w	r2, [fp]
 801c9aa:	900e      	str	r0, [sp, #56]	; 0x38
 801c9ac:	1a9b      	subs	r3, r3, r2
 801c9ae:	b21b      	sxth	r3, r3
 801c9b0:	9303      	str	r3, [sp, #12]
 801c9b2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c9b6:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c9ba:	ebaa 0a03 	sub.w	sl, sl, r3
 801c9be:	fa0f f38a 	sxth.w	r3, sl
 801c9c2:	9304      	str	r3, [sp, #16]
 801c9c4:	9b03      	ldr	r3, [sp, #12]
 801c9c6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c9ca:	9b04      	ldr	r3, [sp, #16]
 801c9cc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c9d0:	9b05      	ldr	r3, [sp, #20]
 801c9d2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c9d6:	a90e      	add	r1, sp, #56	; 0x38
 801c9d8:	9b06      	ldr	r3, [sp, #24]
 801c9da:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c9de:	a80c      	add	r0, sp, #48	; 0x30
 801c9e0:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c9e4:	f7f8 f944 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c9e8:	4640      	mov	r0, r8
 801c9ea:	f7f8 f8fd 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9ee:	a80e      	add	r0, sp, #56	; 0x38
 801c9f0:	f7f8 f8fa 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9f4:	4b38      	ldr	r3, [pc, #224]	; (801cad8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c9f6:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c9fa:	881b      	ldrh	r3, [r3, #0]
 801c9fc:	9307      	str	r3, [sp, #28]
 801c9fe:	682b      	ldr	r3, [r5, #0]
 801ca00:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801cadc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801ca04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ca06:	4628      	mov	r0, r5
 801ca08:	4798      	blx	r3
 801ca0a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801ca0e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801ca12:	4681      	mov	r9, r0
 801ca14:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801ca18:	f8db 0000 	ldr.w	r0, [fp]
 801ca1c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801ca1e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801ca22:	6803      	ldr	r3, [r0, #0]
 801ca24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ca26:	4798      	blx	r3
 801ca28:	4607      	mov	r7, r0
 801ca2a:	f8db 0000 	ldr.w	r0, [fp]
 801ca2e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801ca32:	6803      	ldr	r3, [r0, #0]
 801ca34:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ca38:	9109      	str	r1, [sp, #36]	; 0x24
 801ca3a:	9208      	str	r2, [sp, #32]
 801ca3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ca3e:	4798      	blx	r3
 801ca40:	f010 0f01 	tst.w	r0, #1
 801ca44:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ca48:	d012      	beq.n	801ca70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801ca4a:	f8db 0000 	ldr.w	r0, [fp]
 801ca4e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801ca52:	6803      	ldr	r3, [r0, #0]
 801ca54:	9200      	str	r2, [sp, #0]
 801ca56:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801ca58:	e898 0006 	ldmia.w	r8, {r1, r2}
 801ca5c:	462b      	mov	r3, r5
 801ca5e:	47b0      	blx	r6
 801ca60:	9b03      	ldr	r3, [sp, #12]
 801ca62:	8023      	strh	r3, [r4, #0]
 801ca64:	9b04      	ldr	r3, [sp, #16]
 801ca66:	8063      	strh	r3, [r4, #2]
 801ca68:	9b05      	ldr	r3, [sp, #20]
 801ca6a:	80a3      	strh	r3, [r4, #4]
 801ca6c:	9b06      	ldr	r3, [sp, #24]
 801ca6e:	e78b      	b.n	801c988 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801ca70:	fb09 f202 	mul.w	r2, r9, r2
 801ca74:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801ca78:	440f      	add	r7, r1
 801ca7a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801ca7e:	b166      	cbz	r6, 801ca9a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801ca80:	9a07      	ldr	r2, [sp, #28]
 801ca82:	4592      	cmp	sl, r2
 801ca84:	d109      	bne.n	801ca9a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801ca86:	f8db 0000 	ldr.w	r0, [fp]
 801ca8a:	6802      	ldr	r2, [r0, #0]
 801ca8c:	fb09 f303 	mul.w	r3, r9, r3
 801ca90:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801ca92:	4629      	mov	r1, r5
 801ca94:	463a      	mov	r2, r7
 801ca96:	47b0      	blx	r6
 801ca98:	e7e2      	b.n	801ca60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801ca9a:	fb0a f303 	mul.w	r3, sl, r3
 801ca9e:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801cadc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801caa2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801caa6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801caaa:	4545      	cmp	r5, r8
 801caac:	d2d8      	bcs.n	801ca60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801caae:	f8db 0000 	ldr.w	r0, [fp]
 801cab2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801cab6:	6802      	ldr	r2, [r0, #0]
 801cab8:	4629      	mov	r1, r5
 801caba:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801cabe:	005b      	lsls	r3, r3, #1
 801cac0:	463a      	mov	r2, r7
 801cac2:	47d0      	blx	sl
 801cac4:	444f      	add	r7, r9
 801cac6:	4435      	add	r5, r6
 801cac8:	e7ef      	b.n	801caaa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801caca:	bf00      	nop
 801cacc:	20012e70 	.word	0x20012e70
 801cad0:	20012e72 	.word	0x20012e72
 801cad4:	20012e74 	.word	0x20012e74
 801cad8:	20012e76 	.word	0x20012e76
 801cadc:	20012e7c 	.word	0x20012e7c

0801cae0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801cae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cae2:	4606      	mov	r6, r0
 801cae4:	b087      	sub	sp, #28
 801cae6:	460c      	mov	r4, r1
 801cae8:	4617      	mov	r7, r2
 801caea:	461d      	mov	r5, r3
 801caec:	b333      	cbz	r3, 801cb3c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801caee:	4608      	mov	r0, r1
 801caf0:	f7f3 f95f 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801caf4:	bb10      	cbnz	r0, 801cb3c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801caf6:	6820      	ldr	r0, [r4, #0]
 801caf8:	6861      	ldr	r1, [r4, #4]
 801cafa:	4c1c      	ldr	r4, [pc, #112]	; (801cb6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801cafc:	ab04      	add	r3, sp, #16
 801cafe:	c303      	stmia	r3!, {r0, r1}
 801cb00:	a804      	add	r0, sp, #16
 801cb02:	f7f8 f871 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb06:	6820      	ldr	r0, [r4, #0]
 801cb08:	6803      	ldr	r3, [r0, #0]
 801cb0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cb0c:	4798      	blx	r3
 801cb0e:	2dff      	cmp	r5, #255	; 0xff
 801cb10:	d016      	beq.n	801cb40 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801cb12:	f010 0f08 	tst.w	r0, #8
 801cb16:	6820      	ldr	r0, [r4, #0]
 801cb18:	d015      	beq.n	801cb46 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801cb1a:	2400      	movs	r4, #0
 801cb1c:	6801      	ldr	r1, [r0, #0]
 801cb1e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801cb22:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cb26:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801cb2a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801cb2e:	9401      	str	r4, [sp, #4]
 801cb30:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801cb34:	9400      	str	r4, [sp, #0]
 801cb36:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801cb38:	4639      	mov	r1, r7
 801cb3a:	47a0      	blx	r4
 801cb3c:	b007      	add	sp, #28
 801cb3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cb40:	f010 0f02 	tst.w	r0, #2
 801cb44:	e7e7      	b.n	801cb16 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801cb46:	6803      	ldr	r3, [r0, #0]
 801cb48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cb4a:	4798      	blx	r3
 801cb4c:	4b08      	ldr	r3, [pc, #32]	; (801cb70 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801cb4e:	881a      	ldrh	r2, [r3, #0]
 801cb50:	6833      	ldr	r3, [r6, #0]
 801cb52:	e9cd 7500 	strd	r7, r5, [sp]
 801cb56:	4601      	mov	r1, r0
 801cb58:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801cb5a:	4630      	mov	r0, r6
 801cb5c:	ab04      	add	r3, sp, #16
 801cb5e:	47a8      	blx	r5
 801cb60:	6820      	ldr	r0, [r4, #0]
 801cb62:	6803      	ldr	r3, [r0, #0]
 801cb64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb66:	4798      	blx	r3
 801cb68:	e7e8      	b.n	801cb3c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cb6a:	bf00      	nop
 801cb6c:	20012e7c 	.word	0x20012e7c
 801cb70:	20012e76 	.word	0x20012e76

0801cb74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cb74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cb78:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801cb7c:	9e08      	ldr	r6, [sp, #32]
 801cb7e:	4688      	mov	r8, r1
 801cb80:	4614      	mov	r4, r2
 801cb82:	461d      	mov	r5, r3
 801cb84:	2f00      	cmp	r7, #0
 801cb86:	f000 80a9 	beq.w	801ccdc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cb8a:	4618      	mov	r0, r3
 801cb8c:	f7f3 f911 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cb90:	2800      	cmp	r0, #0
 801cb92:	f040 80a3 	bne.w	801ccdc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cb96:	f9b5 1000 	ldrsh.w	r1, [r5]
 801cb9a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801cb9e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801cba2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801cba6:	fb04 1303 	mla	r3, r4, r3, r1
 801cbaa:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801cbae:	4365      	muls	r5, r4
 801cbb0:	2fff      	cmp	r7, #255	; 0xff
 801cbb2:	eba4 0200 	sub.w	r2, r4, r0
 801cbb6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801cbba:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801cbbe:	d04a      	beq.n	801cc56 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801cbc0:	b2bc      	uxth	r4, r7
 801cbc2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801cbc6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801cbca:	fa5f f788 	uxtb.w	r7, r8
 801cbce:	b2f3      	uxtb	r3, r6
 801cbd0:	0040      	lsls	r0, r0, #1
 801cbd2:	fb0e fe04 	mul.w	lr, lr, r4
 801cbd6:	4367      	muls	r7, r4
 801cbd8:	4363      	muls	r3, r4
 801cbda:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801cbde:	fa1f fc8c 	uxth.w	ip, ip
 801cbe2:	42a9      	cmp	r1, r5
 801cbe4:	d27a      	bcs.n	801ccdc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cbe6:	eb01 0900 	add.w	r9, r1, r0
 801cbea:	4549      	cmp	r1, r9
 801cbec:	d231      	bcs.n	801cc52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801cbee:	880a      	ldrh	r2, [r1, #0]
 801cbf0:	1214      	asrs	r4, r2, #8
 801cbf2:	10d6      	asrs	r6, r2, #3
 801cbf4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801cbf8:	00d2      	lsls	r2, r2, #3
 801cbfa:	b2d2      	uxtb	r2, r2
 801cbfc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cc00:	fb14 f40c 	smulbb	r4, r4, ip
 801cc04:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc08:	4474      	add	r4, lr
 801cc0a:	fb12 f20c 	smulbb	r2, r2, ip
 801cc0e:	b2a4      	uxth	r4, r4
 801cc10:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cc14:	441a      	add	r2, r3
 801cc16:	b292      	uxth	r2, r2
 801cc18:	f104 0a01 	add.w	sl, r4, #1
 801cc1c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801cc20:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801cc24:	fb16 f60c 	smulbb	r6, r6, ip
 801cc28:	f102 0a01 	add.w	sl, r2, #1
 801cc2c:	443e      	add	r6, r7
 801cc2e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801cc32:	b2b6      	uxth	r6, r6
 801cc34:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801cc38:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cc3c:	4322      	orrs	r2, r4
 801cc3e:	1c74      	adds	r4, r6, #1
 801cc40:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801cc44:	0976      	lsrs	r6, r6, #5
 801cc46:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cc4a:	4332      	orrs	r2, r6
 801cc4c:	f821 2b02 	strh.w	r2, [r1], #2
 801cc50:	e7cb      	b.n	801cbea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801cc52:	4441      	add	r1, r8
 801cc54:	e7c5      	b.n	801cbe2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801cc56:	4f22      	ldr	r7, [pc, #136]	; (801cce0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801cc58:	0973      	lsrs	r3, r6, #5
 801cc5a:	ea08 0707 	and.w	r7, r8, r7
 801cc5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cc62:	433b      	orrs	r3, r7
 801cc64:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801cc68:	4333      	orrs	r3, r6
 801cc6a:	07e7      	lsls	r7, r4, #31
 801cc6c:	b29b      	uxth	r3, r3
 801cc6e:	d50b      	bpl.n	801cc88 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801cc70:	0040      	lsls	r0, r0, #1
 801cc72:	0052      	lsls	r2, r2, #1
 801cc74:	42a9      	cmp	r1, r5
 801cc76:	d231      	bcs.n	801ccdc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cc78:	180c      	adds	r4, r1, r0
 801cc7a:	42a1      	cmp	r1, r4
 801cc7c:	d202      	bcs.n	801cc84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801cc7e:	f821 3b02 	strh.w	r3, [r1], #2
 801cc82:	e7fa      	b.n	801cc7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801cc84:	4411      	add	r1, r2
 801cc86:	e7f5      	b.n	801cc74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801cc88:	078e      	lsls	r6, r1, #30
 801cc8a:	d008      	beq.n	801cc9e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801cc8c:	0066      	lsls	r6, r4, #1
 801cc8e:	460a      	mov	r2, r1
 801cc90:	42aa      	cmp	r2, r5
 801cc92:	d202      	bcs.n	801cc9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801cc94:	8013      	strh	r3, [r2, #0]
 801cc96:	4432      	add	r2, r6
 801cc98:	e7fa      	b.n	801cc90 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801cc9a:	3102      	adds	r1, #2
 801cc9c:	3801      	subs	r0, #1
 801cc9e:	07c2      	lsls	r2, r0, #31
 801cca0:	d50b      	bpl.n	801ccba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801cca2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801cca6:	3a01      	subs	r2, #1
 801cca8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801ccac:	0066      	lsls	r6, r4, #1
 801ccae:	42aa      	cmp	r2, r5
 801ccb0:	d202      	bcs.n	801ccb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801ccb2:	8013      	strh	r3, [r2, #0]
 801ccb4:	4432      	add	r2, r6
 801ccb6:	e7fa      	b.n	801ccae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801ccb8:	3801      	subs	r0, #1
 801ccba:	b178      	cbz	r0, 801ccdc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ccbc:	1040      	asrs	r0, r0, #1
 801ccbe:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801ccc2:	0080      	lsls	r0, r0, #2
 801ccc4:	0064      	lsls	r4, r4, #1
 801ccc6:	42a9      	cmp	r1, r5
 801ccc8:	d208      	bcs.n	801ccdc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ccca:	180e      	adds	r6, r1, r0
 801cccc:	460a      	mov	r2, r1
 801ccce:	42b2      	cmp	r2, r6
 801ccd0:	d202      	bcs.n	801ccd8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801ccd2:	f842 3b04 	str.w	r3, [r2], #4
 801ccd6:	e7fa      	b.n	801ccce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801ccd8:	4421      	add	r1, r4
 801ccda:	e7f4      	b.n	801ccc6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801ccdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cce0:	00fff800 	.word	0x00fff800

0801cce4 <_ZN8touchgfx8LCD16bppC1Ev>:
 801cce4:	2200      	movs	r2, #0
 801cce6:	4912      	ldr	r1, [pc, #72]	; (801cd30 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801cce8:	6042      	str	r2, [r0, #4]
 801ccea:	6001      	str	r1, [r0, #0]
 801ccec:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801ccf0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801ccf4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801ccf8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801ccfc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801cd00:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801cd04:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801cd08:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801cd0c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801cd10:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801cd14:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801cd18:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801cd1c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801cd20:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801cd24:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801cd28:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801cd2c:	4770      	bx	lr
 801cd2e:	bf00      	nop
 801cd30:	0802e820 	.word	0x0802e820

0801cd34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801cd34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd38:	460d      	mov	r5, r1
 801cd3a:	b08d      	sub	sp, #52	; 0x34
 801cd3c:	4604      	mov	r4, r0
 801cd3e:	6808      	ldr	r0, [r1, #0]
 801cd40:	6849      	ldr	r1, [r1, #4]
 801cd42:	4699      	mov	r9, r3
 801cd44:	ab08      	add	r3, sp, #32
 801cd46:	c303      	stmia	r3!, {r0, r1}
 801cd48:	6810      	ldr	r0, [r2, #0]
 801cd4a:	6851      	ldr	r1, [r2, #4]
 801cd4c:	ab0a      	add	r3, sp, #40	; 0x28
 801cd4e:	c303      	stmia	r3!, {r0, r1}
 801cd50:	a808      	add	r0, sp, #32
 801cd52:	f7f7 ff49 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd56:	4629      	mov	r1, r5
 801cd58:	a80a      	add	r0, sp, #40	; 0x28
 801cd5a:	f7f7 ff89 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd5e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801cd62:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801cd66:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801cd6a:	4d63      	ldr	r5, [pc, #396]	; (801cef8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cd6c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801cd70:	6828      	ldr	r0, [r5, #0]
 801cd72:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801cd76:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cd7a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cd7e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801cd82:	440a      	add	r2, r1
 801cd84:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801cd88:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801cd8c:	4413      	add	r3, r2
 801cd8e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801cd92:	6803      	ldr	r3, [r0, #0]
 801cd94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cd96:	4798      	blx	r3
 801cd98:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cd9c:	d119      	bne.n	801cdd2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801cd9e:	f010 0f20 	tst.w	r0, #32
 801cda2:	6828      	ldr	r0, [r5, #0]
 801cda4:	d018      	beq.n	801cdd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801cda6:	2500      	movs	r5, #0
 801cda8:	6801      	ldr	r1, [r0, #0]
 801cdaa:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cdae:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801cdb2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801cdb6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801cdba:	9502      	str	r5, [sp, #8]
 801cdbc:	b2b6      	uxth	r6, r6
 801cdbe:	fa1f f588 	uxth.w	r5, r8
 801cdc2:	9601      	str	r6, [sp, #4]
 801cdc4:	9500      	str	r5, [sp, #0]
 801cdc6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801cdc8:	4621      	mov	r1, r4
 801cdca:	47a8      	blx	r5
 801cdcc:	b00d      	add	sp, #52	; 0x34
 801cdce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdd2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801cdd6:	e7e4      	b.n	801cda2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801cdd8:	6803      	ldr	r3, [r0, #0]
 801cdda:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cddc:	4798      	blx	r3
 801cdde:	4947      	ldr	r1, [pc, #284]	; (801cefc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801cde0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cde4:	880b      	ldrh	r3, [r1, #0]
 801cde6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801cdea:	fb03 5202 	mla	r2, r3, r2, r5
 801cdee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cdf2:	4373      	muls	r3, r6
 801cdf4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cdf8:	9307      	str	r3, [sp, #28]
 801cdfa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801cdfe:	9306      	str	r3, [sp, #24]
 801ce00:	468a      	mov	sl, r1
 801ce02:	9b07      	ldr	r3, [sp, #28]
 801ce04:	4298      	cmp	r0, r3
 801ce06:	d270      	bcs.n	801ceea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ce08:	9b06      	ldr	r3, [sp, #24]
 801ce0a:	4621      	mov	r1, r4
 801ce0c:	eb00 0b03 	add.w	fp, r0, r3
 801ce10:	4558      	cmp	r0, fp
 801ce12:	d25d      	bcs.n	801ced0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ce14:	f851 4b04 	ldr.w	r4, [r1], #4
 801ce18:	0e23      	lsrs	r3, r4, #24
 801ce1a:	d014      	beq.n	801ce46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ce1c:	2bff      	cmp	r3, #255	; 0xff
 801ce1e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ce22:	d112      	bne.n	801ce4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ce24:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ce28:	d10f      	bne.n	801ce4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ce2a:	0963      	lsrs	r3, r4, #5
 801ce2c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ce30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ce34:	f02c 0c07 	bic.w	ip, ip, #7
 801ce38:	ea43 0c0c 	orr.w	ip, r3, ip
 801ce3c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ce40:	ea4c 0404 	orr.w	r4, ip, r4
 801ce44:	8004      	strh	r4, [r0, #0]
 801ce46:	3002      	adds	r0, #2
 801ce48:	e7e2      	b.n	801ce10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ce4a:	fb09 f303 	mul.w	r3, r9, r3
 801ce4e:	8807      	ldrh	r7, [r0, #0]
 801ce50:	1c5a      	adds	r2, r3, #1
 801ce52:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ce56:	1212      	asrs	r2, r2, #8
 801ce58:	123e      	asrs	r6, r7, #8
 801ce5a:	b293      	uxth	r3, r2
 801ce5c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ce60:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ce64:	43d2      	mvns	r2, r2
 801ce66:	b2d2      	uxtb	r2, r2
 801ce68:	10fd      	asrs	r5, r7, #3
 801ce6a:	fb1e fe03 	smulbb	lr, lr, r3
 801ce6e:	00ff      	lsls	r7, r7, #3
 801ce70:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ce74:	fb06 e602 	mla	r6, r6, r2, lr
 801ce78:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ce7c:	b2ff      	uxtb	r7, r7
 801ce7e:	fa5f fc8c 	uxtb.w	ip, ip
 801ce82:	b2e4      	uxtb	r4, r4
 801ce84:	b2b6      	uxth	r6, r6
 801ce86:	fb1c fc03 	smulbb	ip, ip, r3
 801ce8a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ce8e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ce92:	fb14 f403 	smulbb	r4, r4, r3
 801ce96:	fb05 c502 	mla	r5, r5, r2, ip
 801ce9a:	f106 0e01 	add.w	lr, r6, #1
 801ce9e:	fb07 4702 	mla	r7, r7, r2, r4
 801cea2:	b2ad      	uxth	r5, r5
 801cea4:	b2bf      	uxth	r7, r7
 801cea6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ceaa:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ceae:	f105 0c01 	add.w	ip, r5, #1
 801ceb2:	1c7e      	adds	r6, r7, #1
 801ceb4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ceb8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cebc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cec0:	096d      	lsrs	r5, r5, #5
 801cec2:	ea46 060e 	orr.w	r6, r6, lr
 801cec6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ceca:	432e      	orrs	r6, r5
 801cecc:	8006      	strh	r6, [r0, #0]
 801cece:	e7ba      	b.n	801ce46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ced0:	f8ba 3000 	ldrh.w	r3, [sl]
 801ced4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ced8:	eba3 0308 	sub.w	r3, r3, r8
 801cedc:	eba4 0408 	sub.w	r4, r4, r8
 801cee0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cee4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801cee8:	e78b      	b.n	801ce02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ceea:	4b03      	ldr	r3, [pc, #12]	; (801cef8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ceec:	6818      	ldr	r0, [r3, #0]
 801ceee:	6803      	ldr	r3, [r0, #0]
 801cef0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cef2:	4798      	blx	r3
 801cef4:	e76a      	b.n	801cdcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801cef6:	bf00      	nop
 801cef8:	20012e7c 	.word	0x20012e7c
 801cefc:	20012e76 	.word	0x20012e76

0801cf00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801cf00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cf04:	460c      	mov	r4, r1
 801cf06:	b085      	sub	sp, #20
 801cf08:	6810      	ldr	r0, [r2, #0]
 801cf0a:	6851      	ldr	r1, [r2, #4]
 801cf0c:	466d      	mov	r5, sp
 801cf0e:	c503      	stmia	r5!, {r0, r1}
 801cf10:	6818      	ldr	r0, [r3, #0]
 801cf12:	6859      	ldr	r1, [r3, #4]
 801cf14:	4616      	mov	r6, r2
 801cf16:	c503      	stmia	r5!, {r0, r1}
 801cf18:	4668      	mov	r0, sp
 801cf1a:	f7f7 fe65 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf1e:	4631      	mov	r1, r6
 801cf20:	a802      	add	r0, sp, #8
 801cf22:	f7f7 fea5 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf26:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801cf2a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801cf2e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cf32:	4d28      	ldr	r5, [pc, #160]	; (801cfd4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801cf34:	4e28      	ldr	r6, [pc, #160]	; (801cfd8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801cf36:	6828      	ldr	r0, [r5, #0]
 801cf38:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cf3c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801cf40:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cf44:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cf48:	f8bd 1000 	ldrh.w	r1, [sp]
 801cf4c:	440a      	add	r2, r1
 801cf4e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801cf52:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cf56:	4413      	add	r3, r2
 801cf58:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cf5c:	6803      	ldr	r3, [r0, #0]
 801cf5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf60:	4798      	blx	r3
 801cf62:	8833      	ldrh	r3, [r6, #0]
 801cf64:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cf68:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cf6c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cfdc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cf70:	fb03 1202 	mla	r2, r3, r2, r1
 801cf74:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf78:	fb08 f303 	mul.w	r3, r8, r3
 801cf7c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cf80:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cf84:	4298      	cmp	r0, r3
 801cf86:	d21d      	bcs.n	801cfc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cf88:	eb00 080c 	add.w	r8, r0, ip
 801cf8c:	4540      	cmp	r0, r8
 801cf8e:	d20f      	bcs.n	801cfb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cf90:	f854 1b04 	ldr.w	r1, [r4], #4
 801cf94:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cf98:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cf9c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cfa0:	ea42 0209 	orr.w	r2, r2, r9
 801cfa4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cfa8:	430a      	orrs	r2, r1
 801cfaa:	f820 2b02 	strh.w	r2, [r0], #2
 801cfae:	e7ed      	b.n	801cf8c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cfb0:	8832      	ldrh	r2, [r6, #0]
 801cfb2:	1bd2      	subs	r2, r2, r7
 801cfb4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cfb8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cfbc:	1bd2      	subs	r2, r2, r7
 801cfbe:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cfc2:	e7df      	b.n	801cf84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cfc4:	6828      	ldr	r0, [r5, #0]
 801cfc6:	6803      	ldr	r3, [r0, #0]
 801cfc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cfca:	4798      	blx	r3
 801cfcc:	b005      	add	sp, #20
 801cfce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cfd2:	bf00      	nop
 801cfd4:	20012e7c 	.word	0x20012e7c
 801cfd8:	20012e76 	.word	0x20012e76
 801cfdc:	fffff800 	.word	0xfffff800

0801cfe0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cfe0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cfe4:	460e      	mov	r6, r1
 801cfe6:	b08e      	sub	sp, #56	; 0x38
 801cfe8:	4604      	mov	r4, r0
 801cfea:	6808      	ldr	r0, [r1, #0]
 801cfec:	6849      	ldr	r1, [r1, #4]
 801cfee:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d1c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cff2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801d1cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cff6:	461d      	mov	r5, r3
 801cff8:	ab0a      	add	r3, sp, #40	; 0x28
 801cffa:	c303      	stmia	r3!, {r0, r1}
 801cffc:	6810      	ldr	r0, [r2, #0]
 801cffe:	6851      	ldr	r1, [r2, #4]
 801d000:	ab0c      	add	r3, sp, #48	; 0x30
 801d002:	c303      	stmia	r3!, {r0, r1}
 801d004:	a80a      	add	r0, sp, #40	; 0x28
 801d006:	f7f7 fdef 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d00a:	4631      	mov	r1, r6
 801d00c:	a80c      	add	r0, sp, #48	; 0x30
 801d00e:	f7f7 fe2f 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d012:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801d016:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801d01a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d01e:	f8d8 0000 	ldr.w	r0, [r8]
 801d022:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801d026:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d02a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d02e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d032:	440c      	add	r4, r1
 801d034:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801d038:	440a      	add	r2, r1
 801d03a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801d03e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801d042:	4413      	add	r3, r2
 801d044:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d048:	6803      	ldr	r3, [r0, #0]
 801d04a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d04c:	4798      	blx	r3
 801d04e:	2dff      	cmp	r5, #255	; 0xff
 801d050:	d124      	bne.n	801d09c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801d052:	f010 0f01 	tst.w	r0, #1
 801d056:	f8d8 0000 	ldr.w	r0, [r8]
 801d05a:	d022      	beq.n	801d0a2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801d05c:	2100      	movs	r1, #0
 801d05e:	f8d0 c000 	ldr.w	ip, [r0]
 801d062:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801d066:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801d06a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801d06e:	f04f 0e01 	mov.w	lr, #1
 801d072:	f8cd e018 	str.w	lr, [sp, #24]
 801d076:	f8b9 e000 	ldrh.w	lr, [r9]
 801d07a:	9503      	str	r5, [sp, #12]
 801d07c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801d080:	b2b6      	uxth	r6, r6
 801d082:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d086:	9102      	str	r1, [sp, #8]
 801d088:	b2bf      	uxth	r7, r7
 801d08a:	9601      	str	r6, [sp, #4]
 801d08c:	9700      	str	r7, [sp, #0]
 801d08e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801d092:	4621      	mov	r1, r4
 801d094:	47a8      	blx	r5
 801d096:	b00e      	add	sp, #56	; 0x38
 801d098:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d09c:	f010 0f04 	tst.w	r0, #4
 801d0a0:	e7d9      	b.n	801d056 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801d0a2:	6803      	ldr	r3, [r0, #0]
 801d0a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d0a6:	4798      	blx	r3
 801d0a8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d0ac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d0b0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801d0b4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d0b8:	fb03 1202 	mla	r2, r3, r2, r1
 801d0bc:	ebac 0c07 	sub.w	ip, ip, r7
 801d0c0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d0c4:	435e      	muls	r6, r3
 801d0c6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d0ca:	2dff      	cmp	r5, #255	; 0xff
 801d0cc:	eba3 0707 	sub.w	r7, r3, r7
 801d0d0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d0d4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d0d8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d0dc:	d049      	beq.n	801d172 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d0de:	43eb      	mvns	r3, r5
 801d0e0:	fa1f f985 	uxth.w	r9, r5
 801d0e4:	b2db      	uxtb	r3, r3
 801d0e6:	42b0      	cmp	r0, r6
 801d0e8:	d266      	bcs.n	801d1b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d0ea:	eb00 0a0e 	add.w	sl, r0, lr
 801d0ee:	4550      	cmp	r0, sl
 801d0f0:	4621      	mov	r1, r4
 801d0f2:	f104 0403 	add.w	r4, r4, #3
 801d0f6:	d25b      	bcs.n	801d1b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d0f8:	8802      	ldrh	r2, [r0, #0]
 801d0fa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d0fe:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d102:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d106:	fb11 f109 	smulbb	r1, r1, r9
 801d10a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d10e:	10d5      	asrs	r5, r2, #3
 801d110:	fb08 1803 	mla	r8, r8, r3, r1
 801d114:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d118:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d11c:	fb11 f109 	smulbb	r1, r1, r9
 801d120:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d124:	fb05 1503 	mla	r5, r5, r3, r1
 801d128:	00d2      	lsls	r2, r2, #3
 801d12a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d12e:	b2d2      	uxtb	r2, r2
 801d130:	fb11 f109 	smulbb	r1, r1, r9
 801d134:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d138:	fa1f f888 	uxth.w	r8, r8
 801d13c:	fb02 1203 	mla	r2, r2, r3, r1
 801d140:	b292      	uxth	r2, r2
 801d142:	f108 0101 	add.w	r1, r8, #1
 801d146:	b2ad      	uxth	r5, r5
 801d148:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d14c:	1c51      	adds	r1, r2, #1
 801d14e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d152:	1c69      	adds	r1, r5, #1
 801d154:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d158:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d15c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d160:	096d      	lsrs	r5, r5, #5
 801d162:	ea42 0208 	orr.w	r2, r2, r8
 801d166:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d16a:	432a      	orrs	r2, r5
 801d16c:	f820 2b02 	strh.w	r2, [r0], #2
 801d170:	e7bd      	b.n	801d0ee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d172:	4a14      	ldr	r2, [pc, #80]	; (801d1c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d174:	42b0      	cmp	r0, r6
 801d176:	d21f      	bcs.n	801d1b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d178:	eb00 050e 	add.w	r5, r0, lr
 801d17c:	42a8      	cmp	r0, r5
 801d17e:	4621      	mov	r1, r4
 801d180:	f104 0403 	add.w	r4, r4, #3
 801d184:	d210      	bcs.n	801d1a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d186:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d18a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d18e:	00db      	lsls	r3, r3, #3
 801d190:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d194:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d198:	430b      	orrs	r3, r1
 801d19a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d19e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d1a2:	f820 3b02 	strh.w	r3, [r0], #2
 801d1a6:	e7e9      	b.n	801d17c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d1a8:	4438      	add	r0, r7
 801d1aa:	eb01 040c 	add.w	r4, r1, ip
 801d1ae:	e7e1      	b.n	801d174 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d1b0:	4438      	add	r0, r7
 801d1b2:	eb01 040c 	add.w	r4, r1, ip
 801d1b6:	e796      	b.n	801d0e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d1b8:	4b03      	ldr	r3, [pc, #12]	; (801d1c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d1ba:	6818      	ldr	r0, [r3, #0]
 801d1bc:	6803      	ldr	r3, [r0, #0]
 801d1be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d1c0:	4798      	blx	r3
 801d1c2:	e768      	b.n	801d096 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d1c4:	fffff800 	.word	0xfffff800
 801d1c8:	20012e7c 	.word	0x20012e7c
 801d1cc:	20012e76 	.word	0x20012e76

0801d1d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d1d0:	b4f0      	push	{r4, r5, r6, r7}
 801d1d2:	4616      	mov	r6, r2
 801d1d4:	2e01      	cmp	r6, #1
 801d1d6:	461c      	mov	r4, r3
 801d1d8:	460d      	mov	r5, r1
 801d1da:	9a04      	ldr	r2, [sp, #16]
 801d1dc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d1e0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d1e4:	d012      	beq.n	801d20c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d1e6:	d303      	bcc.n	801d1f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d1e8:	2e02      	cmp	r6, #2
 801d1ea:	d00a      	beq.n	801d202 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d1ec:	bcf0      	pop	{r4, r5, r6, r7}
 801d1ee:	4770      	bx	lr
 801d1f0:	6805      	ldr	r5, [r0, #0]
 801d1f2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d1f6:	68ed      	ldr	r5, [r5, #12]
 801d1f8:	4613      	mov	r3, r2
 801d1fa:	46ac      	mov	ip, r5
 801d1fc:	4622      	mov	r2, r4
 801d1fe:	bcf0      	pop	{r4, r5, r6, r7}
 801d200:	4760      	bx	ip
 801d202:	4621      	mov	r1, r4
 801d204:	4628      	mov	r0, r5
 801d206:	bcf0      	pop	{r4, r5, r6, r7}
 801d208:	f7ff bd94 	b.w	801cd34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d20c:	4621      	mov	r1, r4
 801d20e:	4628      	mov	r0, r5
 801d210:	bcf0      	pop	{r4, r5, r6, r7}
 801d212:	f7ff bee5 	b.w	801cfe0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d218 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d21c:	4681      	mov	r9, r0
 801d21e:	b093      	sub	sp, #76	; 0x4c
 801d220:	6810      	ldr	r0, [r2, #0]
 801d222:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d226:	4f6d      	ldr	r7, [pc, #436]	; (801d3dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d228:	4688      	mov	r8, r1
 801d22a:	6851      	ldr	r1, [r2, #4]
 801d22c:	ac0e      	add	r4, sp, #56	; 0x38
 801d22e:	c403      	stmia	r4!, {r0, r1}
 801d230:	6818      	ldr	r0, [r3, #0]
 801d232:	6859      	ldr	r1, [r3, #4]
 801d234:	ac10      	add	r4, sp, #64	; 0x40
 801d236:	4616      	mov	r6, r2
 801d238:	c403      	stmia	r4!, {r0, r1}
 801d23a:	a80e      	add	r0, sp, #56	; 0x38
 801d23c:	f7f7 fcd4 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d240:	4631      	mov	r1, r6
 801d242:	a810      	add	r0, sp, #64	; 0x40
 801d244:	f7f7 fd14 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d248:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d24c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d250:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d254:	4e62      	ldr	r6, [pc, #392]	; (801d3e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d256:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d25a:	6830      	ldr	r0, [r6, #0]
 801d25c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d260:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d264:	4489      	add	r9, r1
 801d266:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d26a:	440a      	add	r2, r1
 801d26c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d270:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d274:	4413      	add	r3, r2
 801d276:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d27a:	6803      	ldr	r3, [r0, #0]
 801d27c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d27e:	4798      	blx	r3
 801d280:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d284:	6830      	ldr	r0, [r6, #0]
 801d286:	d01d      	beq.n	801d2c4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d288:	2200      	movs	r2, #0
 801d28a:	6801      	ldr	r1, [r0, #0]
 801d28c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d290:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d294:	220b      	movs	r2, #11
 801d296:	9207      	str	r2, [sp, #28]
 801d298:	883a      	ldrh	r2, [r7, #0]
 801d29a:	9206      	str	r2, [sp, #24]
 801d29c:	2201      	movs	r2, #1
 801d29e:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d2a2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801d2a6:	9203      	str	r2, [sp, #12]
 801d2a8:	b2a4      	uxth	r4, r4
 801d2aa:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801d2ae:	9200      	str	r2, [sp, #0]
 801d2b0:	b2ad      	uxth	r5, r5
 801d2b2:	9502      	str	r5, [sp, #8]
 801d2b4:	9401      	str	r4, [sp, #4]
 801d2b6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801d2b8:	4642      	mov	r2, r8
 801d2ba:	4649      	mov	r1, r9
 801d2bc:	47a0      	blx	r4
 801d2be:	b013      	add	sp, #76	; 0x4c
 801d2c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2c4:	6803      	ldr	r3, [r0, #0]
 801d2c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d2c8:	4798      	blx	r3
 801d2ca:	883b      	ldrh	r3, [r7, #0]
 801d2cc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d2d0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d2d4:	fb03 1202 	mla	r2, r3, r2, r1
 801d2d8:	435d      	muls	r5, r3
 801d2da:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d2de:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d2e2:	920c      	str	r2, [sp, #48]	; 0x30
 801d2e4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d2e8:	1b12      	subs	r2, r2, r4
 801d2ea:	920d      	str	r2, [sp, #52]	; 0x34
 801d2ec:	0062      	lsls	r2, r4, #1
 801d2ee:	1b1c      	subs	r4, r3, r4
 801d2f0:	0063      	lsls	r3, r4, #1
 801d2f2:	920a      	str	r2, [sp, #40]	; 0x28
 801d2f4:	930b      	str	r3, [sp, #44]	; 0x2c
 801d2f6:	f04f 0e04 	mov.w	lr, #4
 801d2fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d2fc:	4298      	cmp	r0, r3
 801d2fe:	d266      	bcs.n	801d3ce <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d300:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d302:	eb00 0b03 	add.w	fp, r0, r3
 801d306:	4558      	cmp	r0, fp
 801d308:	d25c      	bcs.n	801d3c4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d30a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d30e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d312:	f858 2003 	ldr.w	r2, [r8, r3]
 801d316:	0e11      	lsrs	r1, r2, #24
 801d318:	d012      	beq.n	801d340 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d31a:	29ff      	cmp	r1, #255	; 0xff
 801d31c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d320:	d110      	bne.n	801d344 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d322:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d326:	d10d      	bne.n	801d344 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d328:	0953      	lsrs	r3, r2, #5
 801d32a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d32e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d332:	f027 0707 	bic.w	r7, r7, #7
 801d336:	431f      	orrs	r7, r3
 801d338:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d33c:	433a      	orrs	r2, r7
 801d33e:	8002      	strh	r2, [r0, #0]
 801d340:	3002      	adds	r0, #2
 801d342:	e7e0      	b.n	801d306 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d344:	fb0a f101 	mul.w	r1, sl, r1
 801d348:	8806      	ldrh	r6, [r0, #0]
 801d34a:	1c4b      	adds	r3, r1, #1
 801d34c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d350:	1235      	asrs	r5, r6, #8
 801d352:	10f4      	asrs	r4, r6, #3
 801d354:	121b      	asrs	r3, r3, #8
 801d356:	00f6      	lsls	r6, r6, #3
 801d358:	b299      	uxth	r1, r3
 801d35a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d35e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d362:	b2f6      	uxtb	r6, r6
 801d364:	43db      	mvns	r3, r3
 801d366:	b2d2      	uxtb	r2, r2
 801d368:	b2db      	uxtb	r3, r3
 801d36a:	fb1c fc01 	smulbb	ip, ip, r1
 801d36e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d372:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d376:	fb12 f201 	smulbb	r2, r2, r1
 801d37a:	fb05 c503 	mla	r5, r5, r3, ip
 801d37e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d382:	b2ff      	uxtb	r7, r7
 801d384:	fb06 2203 	mla	r2, r6, r3, r2
 801d388:	b2ad      	uxth	r5, r5
 801d38a:	fb17 f701 	smulbb	r7, r7, r1
 801d38e:	b292      	uxth	r2, r2
 801d390:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d394:	fb04 7403 	mla	r4, r4, r3, r7
 801d398:	f105 0c01 	add.w	ip, r5, #1
 801d39c:	1c57      	adds	r7, r2, #1
 801d39e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d3a2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d3a6:	b2a4      	uxth	r4, r4
 801d3a8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d3ac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d3b0:	433d      	orrs	r5, r7
 801d3b2:	1c67      	adds	r7, r4, #1
 801d3b4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d3b8:	0964      	lsrs	r4, r4, #5
 801d3ba:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d3be:	4325      	orrs	r5, r4
 801d3c0:	8005      	strh	r5, [r0, #0]
 801d3c2:	e7bd      	b.n	801d340 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d3c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3c6:	4418      	add	r0, r3
 801d3c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d3ca:	4499      	add	r9, r3
 801d3cc:	e795      	b.n	801d2fa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d3ce:	4b04      	ldr	r3, [pc, #16]	; (801d3e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d3d0:	6818      	ldr	r0, [r3, #0]
 801d3d2:	6803      	ldr	r3, [r0, #0]
 801d3d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d3d6:	4798      	blx	r3
 801d3d8:	e771      	b.n	801d2be <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d3da:	bf00      	nop
 801d3dc:	20012e76 	.word	0x20012e76
 801d3e0:	20012e7c 	.word	0x20012e7c

0801d3e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d3e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3e8:	b087      	sub	sp, #28
 801d3ea:	4680      	mov	r8, r0
 801d3ec:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d3f0:	460d      	mov	r5, r1
 801d3f2:	4614      	mov	r4, r2
 801d3f4:	2e00      	cmp	r6, #0
 801d3f6:	f000 80b9 	beq.w	801d56c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d3fa:	6810      	ldr	r0, [r2, #0]
 801d3fc:	6851      	ldr	r1, [r2, #4]
 801d3fe:	af02      	add	r7, sp, #8
 801d400:	c703      	stmia	r7!, {r0, r1}
 801d402:	6818      	ldr	r0, [r3, #0]
 801d404:	6859      	ldr	r1, [r3, #4]
 801d406:	af04      	add	r7, sp, #16
 801d408:	c703      	stmia	r7!, {r0, r1}
 801d40a:	a802      	add	r0, sp, #8
 801d40c:	f7f7 fbec 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d410:	4621      	mov	r1, r4
 801d412:	a804      	add	r0, sp, #16
 801d414:	f7f7 fc2c 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d418:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d41c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d420:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d424:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d428:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d42c:	eb08 0401 	add.w	r4, r8, r1
 801d430:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d434:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d438:	440a      	add	r2, r1
 801d43a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d43e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d442:	4413      	add	r3, r2
 801d444:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d448:	4b4a      	ldr	r3, [pc, #296]	; (801d574 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d44a:	6818      	ldr	r0, [r3, #0]
 801d44c:	6803      	ldr	r3, [r0, #0]
 801d44e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d450:	4798      	blx	r3
 801d452:	4b49      	ldr	r3, [pc, #292]	; (801d578 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d454:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d458:	881a      	ldrh	r2, [r3, #0]
 801d45a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d45e:	2eff      	cmp	r6, #255	; 0xff
 801d460:	fb02 c101 	mla	r1, r2, r1, ip
 801d464:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d468:	fb02 f207 	mul.w	r2, r2, r7
 801d46c:	f105 0104 	add.w	r1, r5, #4
 801d470:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d474:	461d      	mov	r5, r3
 801d476:	d05a      	beq.n	801d52e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d478:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d47c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d480:	b2b6      	uxth	r6, r6
 801d482:	fa1f fe8e 	uxth.w	lr, lr
 801d486:	9301      	str	r3, [sp, #4]
 801d488:	4282      	cmp	r2, r0
 801d48a:	d96a      	bls.n	801d562 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d48c:	eb00 0b0a 	add.w	fp, r0, sl
 801d490:	4583      	cmp	fp, r0
 801d492:	d940      	bls.n	801d516 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d494:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d498:	8805      	ldrh	r5, [r0, #0]
 801d49a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d49e:	122f      	asrs	r7, r5, #8
 801d4a0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d4a4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d4a8:	fb17 f70e 	smulbb	r7, r7, lr
 801d4ac:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d4b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d4b4:	00ed      	lsls	r5, r5, #3
 801d4b6:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d4ba:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d4be:	10df      	asrs	r7, r3, #3
 801d4c0:	b2ed      	uxtb	r5, r5
 801d4c2:	00db      	lsls	r3, r3, #3
 801d4c4:	fa1f fc8c 	uxth.w	ip, ip
 801d4c8:	fb19 f90e 	smulbb	r9, r9, lr
 801d4cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d4d0:	b2db      	uxtb	r3, r3
 801d4d2:	fb15 f50e 	smulbb	r5, r5, lr
 801d4d6:	fb07 9706 	mla	r7, r7, r6, r9
 801d4da:	fb03 5306 	mla	r3, r3, r6, r5
 801d4de:	f10c 0901 	add.w	r9, ip, #1
 801d4e2:	b29b      	uxth	r3, r3
 801d4e4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d4e8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d4ec:	f103 0c01 	add.w	ip, r3, #1
 801d4f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d4f4:	b2bf      	uxth	r7, r7
 801d4f6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d4fa:	ea4c 0c09 	orr.w	ip, ip, r9
 801d4fe:	f107 0901 	add.w	r9, r7, #1
 801d502:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d506:	097f      	lsrs	r7, r7, #5
 801d508:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d50c:	ea4c 0c07 	orr.w	ip, ip, r7
 801d510:	f820 cb02 	strh.w	ip, [r0], #2
 801d514:	e7bc      	b.n	801d490 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d516:	9b01      	ldr	r3, [sp, #4]
 801d518:	881b      	ldrh	r3, [r3, #0]
 801d51a:	eba3 0308 	sub.w	r3, r3, r8
 801d51e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d522:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d526:	eba3 0308 	sub.w	r3, r3, r8
 801d52a:	441c      	add	r4, r3
 801d52c:	e7ac      	b.n	801d488 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d52e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d532:	4282      	cmp	r2, r0
 801d534:	d915      	bls.n	801d562 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d536:	eb00 060a 	add.w	r6, r0, sl
 801d53a:	4286      	cmp	r6, r0
 801d53c:	d906      	bls.n	801d54c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d53e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d542:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d546:	f820 3b02 	strh.w	r3, [r0], #2
 801d54a:	e7f6      	b.n	801d53a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d54c:	882b      	ldrh	r3, [r5, #0]
 801d54e:	eba3 0308 	sub.w	r3, r3, r8
 801d552:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d556:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d55a:	eba3 0308 	sub.w	r3, r3, r8
 801d55e:	441c      	add	r4, r3
 801d560:	e7e7      	b.n	801d532 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d562:	4b04      	ldr	r3, [pc, #16]	; (801d574 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d564:	6818      	ldr	r0, [r3, #0]
 801d566:	6803      	ldr	r3, [r0, #0]
 801d568:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d56a:	4798      	blx	r3
 801d56c:	b007      	add	sp, #28
 801d56e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d572:	bf00      	nop
 801d574:	20012e7c 	.word	0x20012e7c
 801d578:	20012e76 	.word	0x20012e76

0801d57c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d57c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d580:	b091      	sub	sp, #68	; 0x44
 801d582:	4680      	mov	r8, r0
 801d584:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d588:	460f      	mov	r7, r1
 801d58a:	4614      	mov	r4, r2
 801d58c:	2d00      	cmp	r5, #0
 801d58e:	d051      	beq.n	801d634 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d590:	6810      	ldr	r0, [r2, #0]
 801d592:	6851      	ldr	r1, [r2, #4]
 801d594:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d798 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d598:	ae0c      	add	r6, sp, #48	; 0x30
 801d59a:	c603      	stmia	r6!, {r0, r1}
 801d59c:	6818      	ldr	r0, [r3, #0]
 801d59e:	6859      	ldr	r1, [r3, #4]
 801d5a0:	ae0e      	add	r6, sp, #56	; 0x38
 801d5a2:	c603      	stmia	r6!, {r0, r1}
 801d5a4:	a80c      	add	r0, sp, #48	; 0x30
 801d5a6:	f7f7 fb1f 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d5aa:	4621      	mov	r1, r4
 801d5ac:	a80e      	add	r0, sp, #56	; 0x38
 801d5ae:	f7f7 fb5f 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d5b2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d5b6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d5ba:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d5be:	f8d9 0000 	ldr.w	r0, [r9]
 801d5c2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d5c6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d5ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d5ce:	eb08 0401 	add.w	r4, r8, r1
 801d5d2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d5d6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d79c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d5da:	440a      	add	r2, r1
 801d5dc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d5e0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d5e4:	4413      	add	r3, r2
 801d5e6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d5ea:	6803      	ldr	r3, [r0, #0]
 801d5ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d5ee:	4798      	blx	r3
 801d5f0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d5f4:	f8d9 0000 	ldr.w	r0, [r9]
 801d5f8:	d01f      	beq.n	801d63a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d5fa:	2200      	movs	r2, #0
 801d5fc:	6801      	ldr	r1, [r0, #0]
 801d5fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d602:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d606:	220b      	movs	r2, #11
 801d608:	9207      	str	r2, [sp, #28]
 801d60a:	f8b8 2000 	ldrh.w	r2, [r8]
 801d60e:	9206      	str	r2, [sp, #24]
 801d610:	2201      	movs	r2, #1
 801d612:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d616:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d61a:	9203      	str	r2, [sp, #12]
 801d61c:	fa1f f28a 	uxth.w	r2, sl
 801d620:	9202      	str	r2, [sp, #8]
 801d622:	b2b6      	uxth	r6, r6
 801d624:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d628:	9200      	str	r2, [sp, #0]
 801d62a:	9601      	str	r6, [sp, #4]
 801d62c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d62e:	463a      	mov	r2, r7
 801d630:	4621      	mov	r1, r4
 801d632:	47a8      	blx	r5
 801d634:	b011      	add	sp, #68	; 0x44
 801d636:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d63a:	6803      	ldr	r3, [r0, #0]
 801d63c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d63e:	4798      	blx	r3
 801d640:	f8b8 2000 	ldrh.w	r2, [r8]
 801d644:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d648:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d64c:	2dff      	cmp	r5, #255	; 0xff
 801d64e:	fb02 1303 	mla	r3, r2, r3, r1
 801d652:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d656:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d65a:	fb0a fa02 	mul.w	sl, sl, r2
 801d65e:	d062      	beq.n	801d726 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d660:	ea6f 0c05 	mvn.w	ip, r5
 801d664:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d668:	930a      	str	r3, [sp, #40]	; 0x28
 801d66a:	b2ad      	uxth	r5, r5
 801d66c:	fa5f fc8c 	uxtb.w	ip, ip
 801d670:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d674:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d676:	4298      	cmp	r0, r3
 801d678:	f080 8085 	bcs.w	801d786 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d67c:	eb00 0b09 	add.w	fp, r0, r9
 801d680:	4558      	cmp	r0, fp
 801d682:	d246      	bcs.n	801d712 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d684:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d688:	2303      	movs	r3, #3
 801d68a:	2204      	movs	r2, #4
 801d68c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d690:	eb07 0a0e 	add.w	sl, r7, lr
 801d694:	8803      	ldrh	r3, [r0, #0]
 801d696:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d69a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d69e:	1219      	asrs	r1, r3, #8
 801d6a0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d6a4:	fb18 f805 	smulbb	r8, r8, r5
 801d6a8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d6ac:	10da      	asrs	r2, r3, #3
 801d6ae:	fb01 810c 	mla	r1, r1, ip, r8
 801d6b2:	00db      	lsls	r3, r3, #3
 801d6b4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d6b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d6bc:	b2db      	uxtb	r3, r3
 801d6be:	fb18 f805 	smulbb	r8, r8, r5
 801d6c2:	fb1e fe05 	smulbb	lr, lr, r5
 801d6c6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d6ca:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d6ce:	b289      	uxth	r1, r1
 801d6d0:	fb02 820c 	mla	r2, r2, ip, r8
 801d6d4:	fb03 e30c 	mla	r3, r3, ip, lr
 801d6d8:	b292      	uxth	r2, r2
 801d6da:	b29b      	uxth	r3, r3
 801d6dc:	f101 0801 	add.w	r8, r1, #1
 801d6e0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d6e4:	f103 0e01 	add.w	lr, r3, #1
 801d6e8:	f102 0801 	add.w	r8, r2, #1
 801d6ec:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d6f0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d6f4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d6f8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d6fc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d700:	ea4e 0101 	orr.w	r1, lr, r1
 801d704:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d708:	ea41 0108 	orr.w	r1, r1, r8
 801d70c:	f820 1b02 	strh.w	r1, [r0], #2
 801d710:	e7b6      	b.n	801d680 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d712:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d714:	881b      	ldrh	r3, [r3, #0]
 801d716:	1b9b      	subs	r3, r3, r6
 801d718:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d71c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d720:	1b9b      	subs	r3, r3, r6
 801d722:	441c      	add	r4, r3
 801d724:	e7a6      	b.n	801d674 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d726:	491b      	ldr	r1, [pc, #108]	; (801d794 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d728:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d72c:	2203      	movs	r2, #3
 801d72e:	2504      	movs	r5, #4
 801d730:	4550      	cmp	r0, sl
 801d732:	d228      	bcs.n	801d786 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d734:	eb00 0c09 	add.w	ip, r0, r9
 801d738:	4560      	cmp	r0, ip
 801d73a:	4623      	mov	r3, r4
 801d73c:	d219      	bcs.n	801d772 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d73e:	f893 e000 	ldrb.w	lr, [r3]
 801d742:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d746:	eb07 0b0e 	add.w	fp, r7, lr
 801d74a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d74e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d752:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d756:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d75a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d75e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d762:	ea43 030b 	orr.w	r3, r3, fp
 801d766:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d76a:	3401      	adds	r4, #1
 801d76c:	f820 3b02 	strh.w	r3, [r0], #2
 801d770:	e7e2      	b.n	801d738 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d772:	f8b8 3000 	ldrh.w	r3, [r8]
 801d776:	1b9b      	subs	r3, r3, r6
 801d778:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d77c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d780:	1b9b      	subs	r3, r3, r6
 801d782:	441c      	add	r4, r3
 801d784:	e7d4      	b.n	801d730 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d786:	4b04      	ldr	r3, [pc, #16]	; (801d798 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d788:	6818      	ldr	r0, [r3, #0]
 801d78a:	6803      	ldr	r3, [r0, #0]
 801d78c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d78e:	4798      	blx	r3
 801d790:	e750      	b.n	801d634 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d792:	bf00      	nop
 801d794:	fffff800 	.word	0xfffff800
 801d798:	20012e7c 	.word	0x20012e7c
 801d79c:	20012e76 	.word	0x20012e76

0801d7a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d7a0:	b4f0      	push	{r4, r5, r6, r7}
 801d7a2:	460c      	mov	r4, r1
 801d7a4:	4611      	mov	r1, r2
 801d7a6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d7aa:	780f      	ldrb	r7, [r1, #0]
 801d7ac:	784e      	ldrb	r6, [r1, #1]
 801d7ae:	2f01      	cmp	r7, #1
 801d7b0:	461a      	mov	r2, r3
 801d7b2:	9b04      	ldr	r3, [sp, #16]
 801d7b4:	d036      	beq.n	801d824 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d7b6:	d31e      	bcc.n	801d7f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d7b8:	2f02      	cmp	r7, #2
 801d7ba:	d14a      	bne.n	801d852 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d7bc:	2e03      	cmp	r6, #3
 801d7be:	d848      	bhi.n	801d852 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d7c0:	e8df f006 	tbb	[pc, r6]
 801d7c4:	16140702 	.word	0x16140702
 801d7c8:	9504      	str	r5, [sp, #16]
 801d7ca:	4620      	mov	r0, r4
 801d7cc:	bcf0      	pop	{r4, r5, r6, r7}
 801d7ce:	f7ff be09 	b.w	801d3e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d7d2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d7d4:	2800      	cmp	r0, #0
 801d7d6:	d03c      	beq.n	801d852 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d7d8:	6806      	ldr	r6, [r0, #0]
 801d7da:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d7de:	68b5      	ldr	r5, [r6, #8]
 801d7e0:	4613      	mov	r3, r2
 801d7e2:	46ac      	mov	ip, r5
 801d7e4:	460a      	mov	r2, r1
 801d7e6:	4621      	mov	r1, r4
 801d7e8:	bcf0      	pop	{r4, r5, r6, r7}
 801d7ea:	4760      	bx	ip
 801d7ec:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d7ee:	e7f1      	b.n	801d7d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d7f0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d7f4:	e7ee      	b.n	801d7d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d7f6:	2e03      	cmp	r6, #3
 801d7f8:	d82b      	bhi.n	801d852 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d7fa:	e8df f006 	tbb	[pc, r6]
 801d7fe:	0702      	.short	0x0702
 801d800:	100e      	.short	0x100e
 801d802:	9504      	str	r5, [sp, #16]
 801d804:	4620      	mov	r0, r4
 801d806:	bcf0      	pop	{r4, r5, r6, r7}
 801d808:	f7ff bd06 	b.w	801d218 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d80c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d80e:	b300      	cbz	r0, 801d852 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d810:	6806      	ldr	r6, [r0, #0]
 801d812:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d816:	68f5      	ldr	r5, [r6, #12]
 801d818:	e7e2      	b.n	801d7e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d81a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d81c:	e7f7      	b.n	801d80e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d81e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d822:	e7f4      	b.n	801d80e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d824:	2e03      	cmp	r6, #3
 801d826:	d814      	bhi.n	801d852 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d828:	e8df f006 	tbb	[pc, r6]
 801d82c:	100e0702 	.word	0x100e0702
 801d830:	9504      	str	r5, [sp, #16]
 801d832:	4620      	mov	r0, r4
 801d834:	bcf0      	pop	{r4, r5, r6, r7}
 801d836:	f7ff bea1 	b.w	801d57c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d83a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d83c:	b148      	cbz	r0, 801d852 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d83e:	6806      	ldr	r6, [r0, #0]
 801d840:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d844:	6935      	ldr	r5, [r6, #16]
 801d846:	e7cb      	b.n	801d7e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d848:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d84a:	e7f7      	b.n	801d83c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d84c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d850:	e7f4      	b.n	801d83c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d852:	bcf0      	pop	{r4, r5, r6, r7}
 801d854:	4770      	bx	lr
	...

0801d858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d85c:	4604      	mov	r4, r0
 801d85e:	b087      	sub	sp, #28
 801d860:	6810      	ldr	r0, [r2, #0]
 801d862:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d866:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801daa0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d86a:	460e      	mov	r6, r1
 801d86c:	6851      	ldr	r1, [r2, #4]
 801d86e:	ad02      	add	r5, sp, #8
 801d870:	c503      	stmia	r5!, {r0, r1}
 801d872:	6818      	ldr	r0, [r3, #0]
 801d874:	6859      	ldr	r1, [r3, #4]
 801d876:	ad04      	add	r5, sp, #16
 801d878:	4617      	mov	r7, r2
 801d87a:	c503      	stmia	r5!, {r0, r1}
 801d87c:	a802      	add	r0, sp, #8
 801d87e:	f7f7 f9b3 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d882:	4639      	mov	r1, r7
 801d884:	a804      	add	r0, sp, #16
 801d886:	f7f7 f9f3 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d88a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d88e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d892:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d896:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d89a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d89e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d8a2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d8a6:	440e      	add	r6, r1
 801d8a8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d8ac:	440a      	add	r2, r1
 801d8ae:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d8b2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d8b6:	4413      	add	r3, r2
 801d8b8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d8bc:	4b77      	ldr	r3, [pc, #476]	; (801da9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d8be:	6818      	ldr	r0, [r3, #0]
 801d8c0:	6803      	ldr	r3, [r0, #0]
 801d8c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d8c4:	4798      	blx	r3
 801d8c6:	f8b9 b000 	ldrh.w	fp, [r9]
 801d8ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d8ce:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d8d2:	fb0b 2303 	mla	r3, fp, r3, r2
 801d8d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d8da:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d8de:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d8e2:	fb05 f50b 	mul.w	r5, r5, fp
 801d8e6:	9300      	str	r3, [sp, #0]
 801d8e8:	d069      	beq.n	801d9be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d8ea:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d8ee:	4558      	cmp	r0, fp
 801d8f0:	f080 80cc 	bcs.w	801da8c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d8f4:	9b00      	ldr	r3, [sp, #0]
 801d8f6:	18c3      	adds	r3, r0, r3
 801d8f8:	9301      	str	r3, [sp, #4]
 801d8fa:	4631      	mov	r1, r6
 801d8fc:	9b01      	ldr	r3, [sp, #4]
 801d8fe:	4298      	cmp	r0, r3
 801d900:	d24f      	bcs.n	801d9a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d902:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d906:	2a00      	cmp	r2, #0
 801d908:	d048      	beq.n	801d99c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d90a:	fb0a f202 	mul.w	r2, sl, r2
 801d90e:	1c53      	adds	r3, r2, #1
 801d910:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d914:	121b      	asrs	r3, r3, #8
 801d916:	d041      	beq.n	801d99c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d918:	8802      	ldrh	r2, [r0, #0]
 801d91a:	f8b4 c000 	ldrh.w	ip, [r4]
 801d91e:	b29e      	uxth	r6, r3
 801d920:	1215      	asrs	r5, r2, #8
 801d922:	43db      	mvns	r3, r3
 801d924:	b2db      	uxtb	r3, r3
 801d926:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d92a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d92e:	fb15 f503 	smulbb	r5, r5, r3
 801d932:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d936:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d93a:	00d2      	lsls	r2, r2, #3
 801d93c:	fb07 5706 	mla	r7, r7, r6, r5
 801d940:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d944:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d948:	b2d2      	uxtb	r2, r2
 801d94a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d94e:	b2bf      	uxth	r7, r7
 801d950:	fb1e fe03 	smulbb	lr, lr, r3
 801d954:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d958:	fa5f fc8c 	uxtb.w	ip, ip
 801d95c:	fb12 f203 	smulbb	r2, r2, r3
 801d960:	fb05 e506 	mla	r5, r5, r6, lr
 801d964:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d968:	f107 0e01 	add.w	lr, r7, #1
 801d96c:	fa1f fc8c 	uxth.w	ip, ip
 801d970:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d974:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d978:	f10c 0701 	add.w	r7, ip, #1
 801d97c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d980:	b2ad      	uxth	r5, r5
 801d982:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d986:	ea47 070e 	orr.w	r7, r7, lr
 801d98a:	f105 0e01 	add.w	lr, r5, #1
 801d98e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d992:	096d      	lsrs	r5, r5, #5
 801d994:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d998:	432f      	orrs	r7, r5
 801d99a:	8007      	strh	r7, [r0, #0]
 801d99c:	3002      	adds	r0, #2
 801d99e:	3402      	adds	r4, #2
 801d9a0:	e7ac      	b.n	801d8fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d9a2:	f8b9 3000 	ldrh.w	r3, [r9]
 801d9a6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d9aa:	eba3 0308 	sub.w	r3, r3, r8
 801d9ae:	eba6 0608 	sub.w	r6, r6, r8
 801d9b2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d9b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d9ba:	440e      	add	r6, r1
 801d9bc:	e797      	b.n	801d8ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d9be:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d9c2:	42a8      	cmp	r0, r5
 801d9c4:	d262      	bcs.n	801da8c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d9c6:	9b00      	ldr	r3, [sp, #0]
 801d9c8:	4631      	mov	r1, r6
 801d9ca:	eb00 0b03 	add.w	fp, r0, r3
 801d9ce:	4558      	cmp	r0, fp
 801d9d0:	d24e      	bcs.n	801da70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d9d2:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d9d6:	b12b      	cbz	r3, 801d9e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d9d8:	2bff      	cmp	r3, #255	; 0xff
 801d9da:	f8b4 e000 	ldrh.w	lr, [r4]
 801d9de:	d104      	bne.n	801d9ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d9e0:	f8a0 e000 	strh.w	lr, [r0]
 801d9e4:	3002      	adds	r0, #2
 801d9e6:	3402      	adds	r4, #2
 801d9e8:	e7f1      	b.n	801d9ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d9ea:	8802      	ldrh	r2, [r0, #0]
 801d9ec:	b29f      	uxth	r7, r3
 801d9ee:	1216      	asrs	r6, r2, #8
 801d9f0:	43db      	mvns	r3, r3
 801d9f2:	b2db      	uxtb	r3, r3
 801d9f4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d9f8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d9fc:	fb16 f603 	smulbb	r6, r6, r3
 801da00:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801da04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da08:	00d2      	lsls	r2, r2, #3
 801da0a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801da0e:	b2d2      	uxtb	r2, r2
 801da10:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801da14:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801da18:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801da1c:	fb1a fa03 	smulbb	sl, sl, r3
 801da20:	fa1f fc8c 	uxth.w	ip, ip
 801da24:	fb12 f303 	smulbb	r3, r2, r3
 801da28:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801da2c:	fa5f fe8e 	uxtb.w	lr, lr
 801da30:	fb06 a607 	mla	r6, r6, r7, sl
 801da34:	f10c 0201 	add.w	r2, ip, #1
 801da38:	fb0e 3307 	mla	r3, lr, r7, r3
 801da3c:	b2b6      	uxth	r6, r6
 801da3e:	b29b      	uxth	r3, r3
 801da40:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801da44:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801da48:	f106 0a01 	add.w	sl, r6, #1
 801da4c:	f103 0c01 	add.w	ip, r3, #1
 801da50:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801da54:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801da58:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801da5c:	0976      	lsrs	r6, r6, #5
 801da5e:	ea4c 0c02 	orr.w	ip, ip, r2
 801da62:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801da66:	ea4c 0c06 	orr.w	ip, ip, r6
 801da6a:	f8a0 c000 	strh.w	ip, [r0]
 801da6e:	e7b9      	b.n	801d9e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801da70:	f8b9 3000 	ldrh.w	r3, [r9]
 801da74:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801da78:	eba3 0308 	sub.w	r3, r3, r8
 801da7c:	eba6 0608 	sub.w	r6, r6, r8
 801da80:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801da84:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801da88:	440e      	add	r6, r1
 801da8a:	e79a      	b.n	801d9c2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801da8c:	4b03      	ldr	r3, [pc, #12]	; (801da9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801da8e:	6818      	ldr	r0, [r3, #0]
 801da90:	6803      	ldr	r3, [r0, #0]
 801da92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801da94:	4798      	blx	r3
 801da96:	b007      	add	sp, #28
 801da98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da9c:	20012e7c 	.word	0x20012e7c
 801daa0:	20012e76 	.word	0x20012e76

0801daa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801daa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801daa8:	b089      	sub	sp, #36	; 0x24
 801daaa:	4682      	mov	sl, r0
 801daac:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801dab0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dab2:	460f      	mov	r7, r1
 801dab4:	4691      	mov	r9, r2
 801dab6:	4698      	mov	r8, r3
 801dab8:	2e00      	cmp	r6, #0
 801daba:	d03d      	beq.n	801db38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dabc:	4608      	mov	r0, r1
 801dabe:	f7fa fe59 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801dac2:	4605      	mov	r5, r0
 801dac4:	4638      	mov	r0, r7
 801dac6:	f7fa fe89 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801daca:	f8ad 000e 	strh.w	r0, [sp, #14]
 801dace:	4638      	mov	r0, r7
 801dad0:	f8ad 9008 	strh.w	r9, [sp, #8]
 801dad4:	f8ad 500c 	strh.w	r5, [sp, #12]
 801dad8:	f8ad 800a 	strh.w	r8, [sp, #10]
 801dadc:	f7fa ff36 	bl	801894c <_ZNK8touchgfx6Bitmap7getDataEv>
 801dae0:	4605      	mov	r5, r0
 801dae2:	4638      	mov	r0, r7
 801dae4:	f7fa ff62 	bl	80189ac <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801dae8:	4681      	mov	r9, r0
 801daea:	4638      	mov	r0, r7
 801daec:	f7fa ffb2 	bl	8018a54 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801daf0:	280b      	cmp	r0, #11
 801daf2:	d821      	bhi.n	801db38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801daf4:	e8df f000 	tbb	[pc, r0]
 801daf8:	2006aebe 	.word	0x2006aebe
 801dafc:	20202020 	.word	0x20202020
 801db00:	b5202020 	.word	0xb5202020
 801db04:	4bb0      	ldr	r3, [pc, #704]	; (801ddc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801db06:	6818      	ldr	r0, [r3, #0]
 801db08:	6803      	ldr	r3, [r0, #0]
 801db0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801db0c:	4798      	blx	r3
 801db0e:	2eff      	cmp	r6, #255	; 0xff
 801db10:	d101      	bne.n	801db16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801db12:	0683      	lsls	r3, r0, #26
 801db14:	d506      	bpl.n	801db24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801db16:	4633      	mov	r3, r6
 801db18:	4622      	mov	r2, r4
 801db1a:	a902      	add	r1, sp, #8
 801db1c:	4628      	mov	r0, r5
 801db1e:	f7ff f909 	bl	801cd34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801db22:	e009      	b.n	801db38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801db24:	4638      	mov	r0, r7
 801db26:	f7fa fed9 	bl	80188dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801db2a:	b940      	cbnz	r0, 801db3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801db2c:	4623      	mov	r3, r4
 801db2e:	aa02      	add	r2, sp, #8
 801db30:	4629      	mov	r1, r5
 801db32:	4650      	mov	r0, sl
 801db34:	f7ff f9e4 	bl	801cf00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801db38:	b009      	add	sp, #36	; 0x24
 801db3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db3e:	f10d 0818 	add.w	r8, sp, #24
 801db42:	4639      	mov	r1, r7
 801db44:	4640      	mov	r0, r8
 801db46:	f7fa fe7d 	bl	8018844 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801db4a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801db4e:	af04      	add	r7, sp, #16
 801db50:	e887 0003 	stmia.w	r7, {r0, r1}
 801db54:	4638      	mov	r0, r7
 801db56:	4621      	mov	r1, r4
 801db58:	f7f2 f8e8 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 801db5c:	4638      	mov	r0, r7
 801db5e:	f7f2 f928 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801db62:	2800      	cmp	r0, #0
 801db64:	d1d7      	bne.n	801db16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801db66:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801db6a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801db6e:	4293      	cmp	r3, r2
 801db70:	dd12      	ble.n	801db98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801db72:	1a9b      	subs	r3, r3, r2
 801db74:	f9b4 0000 	ldrsh.w	r0, [r4]
 801db78:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801db7c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801db80:	f8ad 201a 	strh.w	r2, [sp, #26]
 801db84:	f8ad 101c 	strh.w	r1, [sp, #28]
 801db88:	f8ad 301e 	strh.w	r3, [sp, #30]
 801db8c:	4642      	mov	r2, r8
 801db8e:	4633      	mov	r3, r6
 801db90:	a902      	add	r1, sp, #8
 801db92:	4628      	mov	r0, r5
 801db94:	f7ff f8ce 	bl	801cd34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801db98:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801db9c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dba0:	4293      	cmp	r3, r2
 801dba2:	dd12      	ble.n	801dbca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801dba4:	1a9b      	subs	r3, r3, r2
 801dba6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801dbaa:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801dbae:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dbb2:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dbb6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dbba:	f8ad 101e 	strh.w	r1, [sp, #30]
 801dbbe:	23ff      	movs	r3, #255	; 0xff
 801dbc0:	4642      	mov	r2, r8
 801dbc2:	a902      	add	r1, sp, #8
 801dbc4:	4628      	mov	r0, r5
 801dbc6:	f7ff f8b5 	bl	801cd34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dbca:	463b      	mov	r3, r7
 801dbcc:	aa02      	add	r2, sp, #8
 801dbce:	4629      	mov	r1, r5
 801dbd0:	4650      	mov	r0, sl
 801dbd2:	f7ff f995 	bl	801cf00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801dbd6:	88a2      	ldrh	r2, [r4, #4]
 801dbd8:	8823      	ldrh	r3, [r4, #0]
 801dbda:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801dbde:	4413      	add	r3, r2
 801dbe0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dbe4:	440a      	add	r2, r1
 801dbe6:	b29b      	uxth	r3, r3
 801dbe8:	b292      	uxth	r2, r2
 801dbea:	b211      	sxth	r1, r2
 801dbec:	b218      	sxth	r0, r3
 801dbee:	4288      	cmp	r0, r1
 801dbf0:	dd12      	ble.n	801dc18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801dbf2:	1a9b      	subs	r3, r3, r2
 801dbf4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801dbf8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801dbfc:	f8ad 1018 	strh.w	r1, [sp, #24]
 801dc00:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dc04:	f8ad 001e 	strh.w	r0, [sp, #30]
 801dc08:	23ff      	movs	r3, #255	; 0xff
 801dc0a:	4642      	mov	r2, r8
 801dc0c:	a902      	add	r1, sp, #8
 801dc0e:	4628      	mov	r0, r5
 801dc10:	f8ad 601a 	strh.w	r6, [sp, #26]
 801dc14:	f7ff f88e 	bl	801cd34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dc18:	88e2      	ldrh	r2, [r4, #6]
 801dc1a:	8863      	ldrh	r3, [r4, #2]
 801dc1c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801dc20:	4413      	add	r3, r2
 801dc22:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801dc26:	440a      	add	r2, r1
 801dc28:	b29b      	uxth	r3, r3
 801dc2a:	b292      	uxth	r2, r2
 801dc2c:	b211      	sxth	r1, r2
 801dc2e:	b218      	sxth	r0, r3
 801dc30:	4288      	cmp	r0, r1
 801dc32:	dd81      	ble.n	801db38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dc34:	1a9b      	subs	r3, r3, r2
 801dc36:	f9b4 6000 	ldrsh.w	r6, [r4]
 801dc3a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801dc3e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dc42:	f8ad 6018 	strh.w	r6, [sp, #24]
 801dc46:	f8ad 101a 	strh.w	r1, [sp, #26]
 801dc4a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801dc4e:	23ff      	movs	r3, #255	; 0xff
 801dc50:	4642      	mov	r2, r8
 801dc52:	e762      	b.n	801db1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801dc54:	4633      	mov	r3, r6
 801dc56:	4622      	mov	r2, r4
 801dc58:	a902      	add	r1, sp, #8
 801dc5a:	4628      	mov	r0, r5
 801dc5c:	f7ff f9c0 	bl	801cfe0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801dc60:	e76a      	b.n	801db38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dc62:	e9cd 4600 	strd	r4, r6, [sp]
 801dc66:	ab02      	add	r3, sp, #8
 801dc68:	464a      	mov	r2, r9
 801dc6a:	4629      	mov	r1, r5
 801dc6c:	4650      	mov	r0, sl
 801dc6e:	f7ff fd97 	bl	801d7a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801dc72:	e761      	b.n	801db38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dc74:	4638      	mov	r0, r7
 801dc76:	f7fa fe31 	bl	80188dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801dc7a:	b950      	cbnz	r0, 801dc92 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801dc7c:	e9cd 6000 	strd	r6, r0, [sp]
 801dc80:	f8da 3000 	ldr.w	r3, [sl]
 801dc84:	aa02      	add	r2, sp, #8
 801dc86:	68de      	ldr	r6, [r3, #12]
 801dc88:	4629      	mov	r1, r5
 801dc8a:	4623      	mov	r3, r4
 801dc8c:	4650      	mov	r0, sl
 801dc8e:	47b0      	blx	r6
 801dc90:	e752      	b.n	801db38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dc92:	f10d 0818 	add.w	r8, sp, #24
 801dc96:	4639      	mov	r1, r7
 801dc98:	4640      	mov	r0, r8
 801dc9a:	f7fa fdd3 	bl	8018844 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dc9e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dca2:	af04      	add	r7, sp, #16
 801dca4:	e887 0003 	stmia.w	r7, {r0, r1}
 801dca8:	4638      	mov	r0, r7
 801dcaa:	4621      	mov	r1, r4
 801dcac:	f7f2 f83e 	bl	800fd2c <_ZN8touchgfx4RectaNERKS0_>
 801dcb0:	4638      	mov	r0, r7
 801dcb2:	f7f2 f87e 	bl	800fdb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801dcb6:	b138      	cbz	r0, 801dcc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801dcb8:	9600      	str	r6, [sp, #0]
 801dcba:	4623      	mov	r3, r4
 801dcbc:	aa02      	add	r2, sp, #8
 801dcbe:	4649      	mov	r1, r9
 801dcc0:	4628      	mov	r0, r5
 801dcc2:	f7ff fdc9 	bl	801d858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dcc6:	e737      	b.n	801db38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dcc8:	e9cd 6000 	strd	r6, r0, [sp]
 801dccc:	f8da 3000 	ldr.w	r3, [sl]
 801dcd0:	aa02      	add	r2, sp, #8
 801dcd2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801dcd6:	4629      	mov	r1, r5
 801dcd8:	463b      	mov	r3, r7
 801dcda:	4650      	mov	r0, sl
 801dcdc:	47d8      	blx	fp
 801dcde:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dce2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dce6:	4293      	cmp	r3, r2
 801dce8:	dd13      	ble.n	801dd12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801dcea:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dcee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dcf2:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dcf6:	1a9b      	subs	r3, r3, r2
 801dcf8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dcfc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dd00:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dd04:	9600      	str	r6, [sp, #0]
 801dd06:	4643      	mov	r3, r8
 801dd08:	aa02      	add	r2, sp, #8
 801dd0a:	4649      	mov	r1, r9
 801dd0c:	4628      	mov	r0, r5
 801dd0e:	f7ff fda3 	bl	801d858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dd12:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dd16:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dd1a:	4293      	cmp	r3, r2
 801dd1c:	dd13      	ble.n	801dd46 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801dd1e:	1a9b      	subs	r3, r3, r2
 801dd20:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801dd24:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801dd28:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dd2c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dd30:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dd34:	f8ad 101e 	strh.w	r1, [sp, #30]
 801dd38:	9600      	str	r6, [sp, #0]
 801dd3a:	4643      	mov	r3, r8
 801dd3c:	aa02      	add	r2, sp, #8
 801dd3e:	4649      	mov	r1, r9
 801dd40:	4628      	mov	r0, r5
 801dd42:	f7ff fd89 	bl	801d858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dd46:	88a2      	ldrh	r2, [r4, #4]
 801dd48:	8823      	ldrh	r3, [r4, #0]
 801dd4a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801dd4e:	4413      	add	r3, r2
 801dd50:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dd54:	440a      	add	r2, r1
 801dd56:	b29b      	uxth	r3, r3
 801dd58:	b292      	uxth	r2, r2
 801dd5a:	b211      	sxth	r1, r2
 801dd5c:	b218      	sxth	r0, r3
 801dd5e:	4288      	cmp	r0, r1
 801dd60:	dd13      	ble.n	801dd8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801dd62:	1a9b      	subs	r3, r3, r2
 801dd64:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801dd68:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801dd6c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801dd70:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dd74:	f8ad 001e 	strh.w	r0, [sp, #30]
 801dd78:	9600      	str	r6, [sp, #0]
 801dd7a:	4643      	mov	r3, r8
 801dd7c:	aa02      	add	r2, sp, #8
 801dd7e:	4649      	mov	r1, r9
 801dd80:	4628      	mov	r0, r5
 801dd82:	f8ad 701a 	strh.w	r7, [sp, #26]
 801dd86:	f7ff fd67 	bl	801d858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dd8a:	88e2      	ldrh	r2, [r4, #6]
 801dd8c:	8863      	ldrh	r3, [r4, #2]
 801dd8e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801dd92:	4413      	add	r3, r2
 801dd94:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801dd98:	440a      	add	r2, r1
 801dd9a:	b29b      	uxth	r3, r3
 801dd9c:	b292      	uxth	r2, r2
 801dd9e:	b211      	sxth	r1, r2
 801dda0:	b218      	sxth	r0, r3
 801dda2:	4288      	cmp	r0, r1
 801dda4:	f77f aec8 	ble.w	801db38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dda8:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ddac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ddb0:	f8ad 7018 	strh.w	r7, [sp, #24]
 801ddb4:	1a9b      	subs	r3, r3, r2
 801ddb6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ddba:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ddbe:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ddc2:	9600      	str	r6, [sp, #0]
 801ddc4:	4643      	mov	r3, r8
 801ddc6:	e779      	b.n	801dcbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801ddc8:	20012e7c 	.word	0x20012e7c

0801ddcc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801ddcc:	b180      	cbz	r0, 801ddf0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801ddce:	2903      	cmp	r1, #3
 801ddd0:	d81c      	bhi.n	801de0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ddd2:	e8df f001 	tbb	[pc, r1]
 801ddd6:	1d02      	.short	0x1d02
 801ddd8:	1f08      	.short	0x1f08
 801ddda:	4b10      	ldr	r3, [pc, #64]	; (801de1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dddc:	8818      	ldrh	r0, [r3, #0]
 801ddde:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dde2:	4240      	negs	r0, r0
 801dde4:	4770      	bx	lr
 801dde6:	4b0d      	ldr	r3, [pc, #52]	; (801de1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dde8:	8818      	ldrh	r0, [r3, #0]
 801ddea:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ddee:	4770      	bx	lr
 801ddf0:	2903      	cmp	r1, #3
 801ddf2:	d80b      	bhi.n	801de0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ddf4:	a301      	add	r3, pc, #4	; (adr r3, 801ddfc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ddf6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ddfa:	bf00      	nop
 801ddfc:	0801de11 	.word	0x0801de11
 801de00:	0801dde7 	.word	0x0801dde7
 801de04:	0801de15 	.word	0x0801de15
 801de08:	0801dddb 	.word	0x0801dddb
 801de0c:	2000      	movs	r0, #0
 801de0e:	4770      	bx	lr
 801de10:	2001      	movs	r0, #1
 801de12:	4770      	bx	lr
 801de14:	f04f 30ff 	mov.w	r0, #4294967295
 801de18:	4770      	bx	lr
 801de1a:	bf00      	nop
 801de1c:	20012e76 	.word	0x20012e76

0801de20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801de20:	b180      	cbz	r0, 801de44 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801de22:	2903      	cmp	r1, #3
 801de24:	d81c      	bhi.n	801de60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801de26:	e8df f001 	tbb	[pc, r1]
 801de2a:	021d      	.short	0x021d
 801de2c:	071f      	.short	0x071f
 801de2e:	4b10      	ldr	r3, [pc, #64]	; (801de70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801de30:	8818      	ldrh	r0, [r3, #0]
 801de32:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801de36:	4770      	bx	lr
 801de38:	4b0d      	ldr	r3, [pc, #52]	; (801de70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801de3a:	8818      	ldrh	r0, [r3, #0]
 801de3c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801de40:	4240      	negs	r0, r0
 801de42:	4770      	bx	lr
 801de44:	2903      	cmp	r1, #3
 801de46:	d80b      	bhi.n	801de60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801de48:	a301      	add	r3, pc, #4	; (adr r3, 801de50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801de4a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801de4e:	bf00      	nop
 801de50:	0801de2f 	.word	0x0801de2f
 801de54:	0801de69 	.word	0x0801de69
 801de58:	0801de39 	.word	0x0801de39
 801de5c:	0801de65 	.word	0x0801de65
 801de60:	2000      	movs	r0, #0
 801de62:	4770      	bx	lr
 801de64:	2001      	movs	r0, #1
 801de66:	4770      	bx	lr
 801de68:	f04f 30ff 	mov.w	r0, #4294967295
 801de6c:	4770      	bx	lr
 801de6e:	bf00      	nop
 801de70:	20012e76 	.word	0x20012e76

0801de74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801de74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de78:	b099      	sub	sp, #100	; 0x64
 801de7a:	910b      	str	r1, [sp, #44]	; 0x2c
 801de7c:	a914      	add	r1, sp, #80	; 0x50
 801de7e:	e881 000c 	stmia.w	r1, {r2, r3}
 801de82:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801de86:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801de8a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801de8e:	9309      	str	r3, [sp, #36]	; 0x24
 801de90:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801de94:	9310      	str	r3, [sp, #64]	; 0x40
 801de96:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801de9a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801de9e:	930c      	str	r3, [sp, #48]	; 0x30
 801dea0:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801dea4:	798f      	ldrb	r7, [r1, #6]
 801dea6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801deaa:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801deae:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801deb2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801deb6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801deba:	431f      	orrs	r7, r3
 801debc:	f000 8195 	beq.w	801e1ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dec0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801dec4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801dec8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801decc:	ea59 0903 	orrs.w	r9, r9, r3
 801ded0:	f000 818b 	beq.w	801e1ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ded4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ded8:	b29b      	uxth	r3, r3
 801deda:	2d00      	cmp	r5, #0
 801dedc:	f000 812e 	beq.w	801e13c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801dee0:	1aed      	subs	r5, r5, r3
 801dee2:	b2ad      	uxth	r5, r5
 801dee4:	042b      	lsls	r3, r5, #16
 801dee6:	d502      	bpl.n	801deee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801dee8:	1b64      	subs	r4, r4, r5
 801deea:	b224      	sxth	r4, r4
 801deec:	2500      	movs	r5, #0
 801deee:	f9b2 1000 	ldrsh.w	r1, [r2]
 801def2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801def6:	428c      	cmp	r4, r1
 801def8:	b28b      	uxth	r3, r1
 801defa:	bfbf      	itttt	lt
 801defc:	18ed      	addlt	r5, r5, r3
 801defe:	1b2c      	sublt	r4, r5, r4
 801df00:	b2a5      	uxthlt	r5, r4
 801df02:	460c      	movlt	r4, r1
 801df04:	8891      	ldrh	r1, [r2, #4]
 801df06:	440b      	add	r3, r1
 801df08:	b21b      	sxth	r3, r3
 801df0a:	930f      	str	r3, [sp, #60]	; 0x3c
 801df0c:	88d3      	ldrh	r3, [r2, #6]
 801df0e:	8852      	ldrh	r2, [r2, #2]
 801df10:	4413      	add	r3, r2
 801df12:	b21b      	sxth	r3, r3
 801df14:	930d      	str	r3, [sp, #52]	; 0x34
 801df16:	4bbe      	ldr	r3, [pc, #760]	; (801e210 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801df18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801df1a:	f893 b000 	ldrb.w	fp, [r3]
 801df1e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801df22:	f1dc 0300 	rsbs	r3, ip, #0
 801df26:	eb43 030c 	adc.w	r3, r3, ip
 801df2a:	930e      	str	r3, [sp, #56]	; 0x38
 801df2c:	4621      	mov	r1, r4
 801df2e:	4653      	mov	r3, sl
 801df30:	a814      	add	r0, sp, #80	; 0x50
 801df32:	f7f6 fcce 	bl	80148d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801df36:	4621      	mov	r1, r4
 801df38:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801df3c:	4653      	mov	r3, sl
 801df3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801df40:	a814      	add	r0, sp, #80	; 0x50
 801df42:	f7f6 fce3 	bl	801490c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801df46:	a918      	add	r1, sp, #96	; 0x60
 801df48:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801df4c:	a817      	add	r0, sp, #92	; 0x5c
 801df4e:	f7f6 fe09 	bl	8014b64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801df52:	f1ba 0f00 	cmp.w	sl, #0
 801df56:	f040 80f4 	bne.w	801e142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801df5a:	f1bb 0f01 	cmp.w	fp, #1
 801df5e:	f040 80f8 	bne.w	801e152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801df62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801df64:	2b00      	cmp	r3, #0
 801df66:	f040 8145 	bne.w	801e1f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801df6a:	b2ba      	uxth	r2, r7
 801df6c:	b905      	cbnz	r5, 801df70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801df6e:	b16e      	cbz	r6, 801df8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801df70:	fb06 5302 	mla	r3, r6, r2, r5
 801df74:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801df76:	fb08 f303 	mul.w	r3, r8, r3
 801df7a:	4631      	mov	r1, r6
 801df7c:	f003 0607 	and.w	r6, r3, #7
 801df80:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801df84:	9328      	str	r3, [sp, #160]	; 0xa0
 801df86:	eba9 0301 	sub.w	r3, r9, r1
 801df8a:	930a      	str	r3, [sp, #40]	; 0x28
 801df8c:	4651      	mov	r1, sl
 801df8e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801df90:	f7ff ff1c 	bl	801ddcc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801df94:	4681      	mov	r9, r0
 801df96:	980e      	ldr	r0, [sp, #56]	; 0x38
 801df98:	f7ff ff42 	bl	801de20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801df9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801df9e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dfa0:	eba3 0a01 	sub.w	sl, r3, r1
 801dfa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dfa6:	459a      	cmp	sl, r3
 801dfa8:	bfa8      	it	ge
 801dfaa:	469a      	movge	sl, r3
 801dfac:	f1ba 0f00 	cmp.w	sl, #0
 801dfb0:	4683      	mov	fp, r0
 801dfb2:	f340 811a 	ble.w	801e1ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dfb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dfb8:	1b64      	subs	r4, r4, r5
 801dfba:	1b1c      	subs	r4, r3, r4
 801dfbc:	42bc      	cmp	r4, r7
 801dfbe:	bfd4      	ite	le
 801dfc0:	ebc5 0504 	rsble	r5, r5, r4
 801dfc4:	ebc5 0507 	rsbgt	r5, r5, r7
 801dfc8:	2d00      	cmp	r5, #0
 801dfca:	f340 810e 	ble.w	801e1ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dfce:	1b52      	subs	r2, r2, r5
 801dfd0:	fb08 f302 	mul.w	r3, r8, r2
 801dfd4:	930f      	str	r3, [sp, #60]	; 0x3c
 801dfd6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dfd8:	2b00      	cmp	r3, #0
 801dfda:	f040 8116 	bne.w	801e20a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801dfde:	4b8d      	ldr	r3, [pc, #564]	; (801e214 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801dfe0:	6818      	ldr	r0, [r3, #0]
 801dfe2:	6803      	ldr	r3, [r0, #0]
 801dfe4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dfe6:	4798      	blx	r3
 801dfe8:	2301      	movs	r3, #1
 801dfea:	fa03 f308 	lsl.w	r3, r3, r8
 801dfee:	4a8a      	ldr	r2, [pc, #552]	; (801e218 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801dff0:	3b01      	subs	r3, #1
 801dff2:	b2db      	uxtb	r3, r3
 801dff4:	8811      	ldrh	r1, [r2, #0]
 801dff6:	930e      	str	r3, [sp, #56]	; 0x38
 801dff8:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801dffc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801e000:	fb01 2303 	mla	r3, r1, r3, r2
 801e004:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e008:	930a      	str	r3, [sp, #40]	; 0x28
 801e00a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e00c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801e010:	9313      	str	r3, [sp, #76]	; 0x4c
 801e012:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e014:	0a19      	lsrs	r1, r3, #8
 801e016:	b2cb      	uxtb	r3, r1
 801e018:	9312      	str	r3, [sp, #72]	; 0x48
 801e01a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e01c:	b2db      	uxtb	r3, r3
 801e01e:	9311      	str	r3, [sp, #68]	; 0x44
 801e020:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e022:	095a      	lsrs	r2, r3, #5
 801e024:	4b7d      	ldr	r3, [pc, #500]	; (801e21c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801e026:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e02a:	400b      	ands	r3, r1
 801e02c:	4313      	orrs	r3, r2
 801e02e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e030:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e034:	4313      	orrs	r3, r2
 801e036:	b29b      	uxth	r3, r3
 801e038:	9310      	str	r3, [sp, #64]	; 0x40
 801e03a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e03c:	781a      	ldrb	r2, [r3, #0]
 801e03e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801e042:	4132      	asrs	r2, r6
 801e044:	fb05 b919 	mls	r9, r5, r9, fp
 801e048:	fb03 fb05 	mul.w	fp, r3, r5
 801e04c:	b2d2      	uxtb	r2, r2
 801e04e:	930d      	str	r3, [sp, #52]	; 0x34
 801e050:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801e054:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801e058:	f0c0 80f5 	bcc.w	801e246 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801e05c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801e060:	46ae      	mov	lr, r5
 801e062:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801e066:	f0c0 80dd 	bcc.w	801e224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801e06a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e06c:	4013      	ands	r3, r2
 801e06e:	d055      	beq.n	801e11c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801e070:	20ff      	movs	r0, #255	; 0xff
 801e072:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e074:	fb90 f1f1 	sdiv	r1, r0, r1
 801e078:	434b      	muls	r3, r1
 801e07a:	2bfe      	cmp	r3, #254	; 0xfe
 801e07c:	dd03      	ble.n	801e086 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801e07e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e080:	4281      	cmp	r1, r0
 801e082:	f000 80cd 	beq.w	801e220 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801e086:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e088:	f8bc 4000 	ldrh.w	r4, [ip]
 801e08c:	fb11 f303 	smulbb	r3, r1, r3
 801e090:	b29b      	uxth	r3, r3
 801e092:	1c59      	adds	r1, r3, #1
 801e094:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e098:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e09c:	b29f      	uxth	r7, r3
 801e09e:	43db      	mvns	r3, r3
 801e0a0:	b2db      	uxtb	r3, r3
 801e0a2:	9309      	str	r3, [sp, #36]	; 0x24
 801e0a4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e0a6:	1220      	asrs	r0, r4, #8
 801e0a8:	fb13 f907 	smulbb	r9, r3, r7
 801e0ac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e0b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e0b2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801e0b6:	fb00 9003 	mla	r0, r0, r3, r9
 801e0ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e0bc:	10e1      	asrs	r1, r4, #3
 801e0be:	fb13 f907 	smulbb	r9, r3, r7
 801e0c2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e0c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e0c8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e0cc:	fb01 9103 	mla	r1, r1, r3, r9
 801e0d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e0d2:	00e4      	lsls	r4, r4, #3
 801e0d4:	fb13 f707 	smulbb	r7, r3, r7
 801e0d8:	b2e4      	uxtb	r4, r4
 801e0da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e0dc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e0e0:	fb04 7403 	mla	r4, r4, r3, r7
 801e0e4:	b280      	uxth	r0, r0
 801e0e6:	b2a4      	uxth	r4, r4
 801e0e8:	1c43      	adds	r3, r0, #1
 801e0ea:	f104 0901 	add.w	r9, r4, #1
 801e0ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e0f2:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e0f6:	b289      	uxth	r1, r1
 801e0f8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e0fc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e100:	ea49 0000 	orr.w	r0, r9, r0
 801e104:	f101 0901 	add.w	r9, r1, #1
 801e108:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e10c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e110:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e114:	ea40 0009 	orr.w	r0, r0, r9
 801e118:	f8ac 0000 	strh.w	r0, [ip]
 801e11c:	4446      	add	r6, r8
 801e11e:	b2b6      	uxth	r6, r6
 801e120:	2e07      	cmp	r6, #7
 801e122:	bf81      	itttt	hi
 801e124:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801e126:	785a      	ldrbhi	r2, [r3, #1]
 801e128:	3301      	addhi	r3, #1
 801e12a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801e12c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e12e:	bf9a      	itte	ls
 801e130:	fa42 f208 	asrls.w	r2, r2, r8
 801e134:	b2d2      	uxtbls	r2, r2
 801e136:	2600      	movhi	r6, #0
 801e138:	449c      	add	ip, r3
 801e13a:	e792      	b.n	801e062 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e13c:	441c      	add	r4, r3
 801e13e:	b224      	sxth	r4, r4
 801e140:	e6d5      	b.n	801deee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e142:	f1ba 0f01 	cmp.w	sl, #1
 801e146:	f47f af0c 	bne.w	801df62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e14a:	f1bb 0f01 	cmp.w	fp, #1
 801e14e:	f47f af08 	bne.w	801df62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e152:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801e214 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e156:	f8db 0000 	ldr.w	r0, [fp]
 801e15a:	6803      	ldr	r3, [r0, #0]
 801e15c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e15e:	4798      	blx	r3
 801e160:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801e164:	465a      	mov	r2, fp
 801e166:	d006      	beq.n	801e176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e168:	f1b8 0f04 	cmp.w	r8, #4
 801e16c:	d140      	bne.n	801e1f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e16e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e170:	3300      	adds	r3, #0
 801e172:	bf18      	it	ne
 801e174:	2301      	movne	r3, #1
 801e176:	0580      	lsls	r0, r0, #22
 801e178:	d56e      	bpl.n	801e258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e17a:	f1b8 0f08 	cmp.w	r8, #8
 801e17e:	d16b      	bne.n	801e258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e180:	2b00      	cmp	r3, #0
 801e182:	bf0c      	ite	eq
 801e184:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801e188:	f44f 7180 	movne.w	r1, #256	; 0x100
 801e18c:	2d00      	cmp	r5, #0
 801e18e:	f47f aee8 	bne.w	801df62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e192:	2e00      	cmp	r6, #0
 801e194:	f47f aee5 	bne.w	801df62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e198:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e19a:	19e3      	adds	r3, r4, r7
 801e19c:	4283      	cmp	r3, r0
 801e19e:	f73f aee0 	bgt.w	801df62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e1a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e1a4:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e1a6:	444b      	add	r3, r9
 801e1a8:	4283      	cmp	r3, r0
 801e1aa:	f73f aeda 	bgt.w	801df62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e1ae:	6810      	ldr	r0, [r2, #0]
 801e1b0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801e1b4:	6804      	ldr	r4, [r0, #0]
 801e1b6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e1ba:	b2bf      	uxth	r7, r7
 801e1bc:	f1b8 0f08 	cmp.w	r8, #8
 801e1c0:	f04f 0500 	mov.w	r5, #0
 801e1c4:	bf18      	it	ne
 801e1c6:	3701      	addne	r7, #1
 801e1c8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e1cc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e1ce:	9104      	str	r1, [sp, #16]
 801e1d0:	bf18      	it	ne
 801e1d2:	f027 0701 	bicne.w	r7, r7, #1
 801e1d6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e1d8:	bf18      	it	ne
 801e1da:	b2bf      	uxthne	r7, r7
 801e1dc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e1e0:	e9cd 7900 	strd	r7, r9, [sp]
 801e1e4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e1e6:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801e1e8:	47a0      	blx	r4
 801e1ea:	b019      	add	sp, #100	; 0x64
 801e1ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e1f0:	2300      	movs	r3, #0
 801e1f2:	e7c0      	b.n	801e176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e1f4:	2208      	movs	r2, #8
 801e1f6:	fb92 f3f8 	sdiv	r3, r2, r8
 801e1fa:	1e5a      	subs	r2, r3, #1
 801e1fc:	443a      	add	r2, r7
 801e1fe:	fb92 f2f3 	sdiv	r2, r2, r3
 801e202:	fb12 f203 	smulbb	r2, r2, r3
 801e206:	b292      	uxth	r2, r2
 801e208:	e6b0      	b.n	801df6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e20a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e20c:	e6ec      	b.n	801dfe8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e20e:	bf00      	nop
 801e210:	20012e74 	.word	0x20012e74
 801e214:	20012e7c 	.word	0x20012e7c
 801e218:	20012e76 	.word	0x20012e76
 801e21c:	00fff800 	.word	0x00fff800
 801e220:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e222:	e779      	b.n	801e118 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e224:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e226:	b153      	cbz	r3, 801e23e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e228:	441e      	add	r6, r3
 801e22a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e22c:	b2b6      	uxth	r6, r6
 801e22e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e232:	f006 0607 	and.w	r6, r6, #7
 801e236:	781a      	ldrb	r2, [r3, #0]
 801e238:	9328      	str	r3, [sp, #160]	; 0xa0
 801e23a:	4132      	asrs	r2, r6
 801e23c:	b2d2      	uxtb	r2, r2
 801e23e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e240:	445b      	add	r3, fp
 801e242:	930a      	str	r3, [sp, #40]	; 0x28
 801e244:	e706      	b.n	801e054 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e246:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e248:	2b00      	cmp	r3, #0
 801e24a:	d1ce      	bne.n	801e1ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e24c:	4b05      	ldr	r3, [pc, #20]	; (801e264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e24e:	6818      	ldr	r0, [r3, #0]
 801e250:	6803      	ldr	r3, [r0, #0]
 801e252:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e254:	4798      	blx	r3
 801e256:	e7c8      	b.n	801e1ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e258:	2b00      	cmp	r3, #0
 801e25a:	f43f ae82 	beq.w	801df62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e25e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e262:	e793      	b.n	801e18c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e264:	20012e7c 	.word	0x20012e7c

0801e268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e268:	b538      	push	{r3, r4, r5, lr}
 801e26a:	4c15      	ldr	r4, [pc, #84]	; (801e2c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e26c:	7823      	ldrb	r3, [r4, #0]
 801e26e:	f3bf 8f5b 	dmb	ish
 801e272:	07da      	lsls	r2, r3, #31
 801e274:	4605      	mov	r5, r0
 801e276:	d40b      	bmi.n	801e290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e278:	4620      	mov	r0, r4
 801e27a:	f00a fee2 	bl	8029042 <__cxa_guard_acquire>
 801e27e:	b138      	cbz	r0, 801e290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e280:	4620      	mov	r0, r4
 801e282:	f00a feea 	bl	802905a <__cxa_guard_release>
 801e286:	4a0f      	ldr	r2, [pc, #60]	; (801e2c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e288:	490f      	ldr	r1, [pc, #60]	; (801e2c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e28a:	4810      	ldr	r0, [pc, #64]	; (801e2cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e28c:	f00a fed2 	bl	8029034 <__aeabi_atexit>
 801e290:	4c0f      	ldr	r4, [pc, #60]	; (801e2d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e292:	7823      	ldrb	r3, [r4, #0]
 801e294:	f3bf 8f5b 	dmb	ish
 801e298:	07db      	lsls	r3, r3, #31
 801e29a:	d40b      	bmi.n	801e2b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e29c:	4620      	mov	r0, r4
 801e29e:	f00a fed0 	bl	8029042 <__cxa_guard_acquire>
 801e2a2:	b138      	cbz	r0, 801e2b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e2a4:	4620      	mov	r0, r4
 801e2a6:	f00a fed8 	bl	802905a <__cxa_guard_release>
 801e2aa:	4a06      	ldr	r2, [pc, #24]	; (801e2c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e2ac:	4909      	ldr	r1, [pc, #36]	; (801e2d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e2ae:	480a      	ldr	r0, [pc, #40]	; (801e2d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e2b0:	f00a fec0 	bl	8029034 <__aeabi_atexit>
 801e2b4:	4b05      	ldr	r3, [pc, #20]	; (801e2cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e2b6:	612b      	str	r3, [r5, #16]
 801e2b8:	4b07      	ldr	r3, [pc, #28]	; (801e2d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e2ba:	616b      	str	r3, [r5, #20]
 801e2bc:	bd38      	pop	{r3, r4, r5, pc}
 801e2be:	bf00      	nop
 801e2c0:	20012f5c 	.word	0x20012f5c
 801e2c4:	20000000 	.word	0x20000000
 801e2c8:	0801b06b 	.word	0x0801b06b
 801e2cc:	200000d4 	.word	0x200000d4
 801e2d0:	20012f60 	.word	0x20012f60
 801e2d4:	0801b069 	.word	0x0801b069
 801e2d8:	200000d8 	.word	0x200000d8

0801e2dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e2dc:	b538      	push	{r3, r4, r5, lr}
 801e2de:	4c15      	ldr	r4, [pc, #84]	; (801e334 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e2e0:	7823      	ldrb	r3, [r4, #0]
 801e2e2:	f3bf 8f5b 	dmb	ish
 801e2e6:	07da      	lsls	r2, r3, #31
 801e2e8:	4605      	mov	r5, r0
 801e2ea:	d40b      	bmi.n	801e304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e2ec:	4620      	mov	r0, r4
 801e2ee:	f00a fea8 	bl	8029042 <__cxa_guard_acquire>
 801e2f2:	b138      	cbz	r0, 801e304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e2f4:	4620      	mov	r0, r4
 801e2f6:	f00a feb0 	bl	802905a <__cxa_guard_release>
 801e2fa:	4a0f      	ldr	r2, [pc, #60]	; (801e338 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e2fc:	490f      	ldr	r1, [pc, #60]	; (801e33c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e2fe:	4810      	ldr	r0, [pc, #64]	; (801e340 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e300:	f00a fe98 	bl	8029034 <__aeabi_atexit>
 801e304:	4c0f      	ldr	r4, [pc, #60]	; (801e344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e306:	7823      	ldrb	r3, [r4, #0]
 801e308:	f3bf 8f5b 	dmb	ish
 801e30c:	07db      	lsls	r3, r3, #31
 801e30e:	d40b      	bmi.n	801e328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e310:	4620      	mov	r0, r4
 801e312:	f00a fe96 	bl	8029042 <__cxa_guard_acquire>
 801e316:	b138      	cbz	r0, 801e328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e318:	4620      	mov	r0, r4
 801e31a:	f00a fe9e 	bl	802905a <__cxa_guard_release>
 801e31e:	4a06      	ldr	r2, [pc, #24]	; (801e338 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e320:	4909      	ldr	r1, [pc, #36]	; (801e348 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e322:	480a      	ldr	r0, [pc, #40]	; (801e34c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e324:	f00a fe86 	bl	8029034 <__aeabi_atexit>
 801e328:	4b05      	ldr	r3, [pc, #20]	; (801e340 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e32a:	60ab      	str	r3, [r5, #8]
 801e32c:	4b07      	ldr	r3, [pc, #28]	; (801e34c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e32e:	60eb      	str	r3, [r5, #12]
 801e330:	bd38      	pop	{r3, r4, r5, pc}
 801e332:	bf00      	nop
 801e334:	20012f34 	.word	0x20012f34
 801e338:	20000000 	.word	0x20000000
 801e33c:	0801b06f 	.word	0x0801b06f
 801e340:	200000ac 	.word	0x200000ac
 801e344:	20012f38 	.word	0x20012f38
 801e348:	0801b06d 	.word	0x0801b06d
 801e34c:	200000b0 	.word	0x200000b0

0801e350 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e350:	b510      	push	{r4, lr}
 801e352:	4604      	mov	r4, r0
 801e354:	f7ff ff88 	bl	801e268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e358:	4620      	mov	r0, r4
 801e35a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e35e:	f7ff bfbd 	b.w	801e2dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e364:	b538      	push	{r3, r4, r5, lr}
 801e366:	4c15      	ldr	r4, [pc, #84]	; (801e3bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e368:	7823      	ldrb	r3, [r4, #0]
 801e36a:	f3bf 8f5b 	dmb	ish
 801e36e:	07da      	lsls	r2, r3, #31
 801e370:	4605      	mov	r5, r0
 801e372:	d40b      	bmi.n	801e38c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e374:	4620      	mov	r0, r4
 801e376:	f00a fe64 	bl	8029042 <__cxa_guard_acquire>
 801e37a:	b138      	cbz	r0, 801e38c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e37c:	4620      	mov	r0, r4
 801e37e:	f00a fe6c 	bl	802905a <__cxa_guard_release>
 801e382:	4a0f      	ldr	r2, [pc, #60]	; (801e3c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e384:	490f      	ldr	r1, [pc, #60]	; (801e3c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e386:	4810      	ldr	r0, [pc, #64]	; (801e3c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e388:	f00a fe54 	bl	8029034 <__aeabi_atexit>
 801e38c:	4c0f      	ldr	r4, [pc, #60]	; (801e3cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e38e:	7823      	ldrb	r3, [r4, #0]
 801e390:	f3bf 8f5b 	dmb	ish
 801e394:	07db      	lsls	r3, r3, #31
 801e396:	d40b      	bmi.n	801e3b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e398:	4620      	mov	r0, r4
 801e39a:	f00a fe52 	bl	8029042 <__cxa_guard_acquire>
 801e39e:	b138      	cbz	r0, 801e3b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e3a0:	4620      	mov	r0, r4
 801e3a2:	f00a fe5a 	bl	802905a <__cxa_guard_release>
 801e3a6:	4a06      	ldr	r2, [pc, #24]	; (801e3c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e3a8:	4909      	ldr	r1, [pc, #36]	; (801e3d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e3aa:	480a      	ldr	r0, [pc, #40]	; (801e3d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e3ac:	f00a fe42 	bl	8029034 <__aeabi_atexit>
 801e3b0:	4b05      	ldr	r3, [pc, #20]	; (801e3c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e3b2:	622b      	str	r3, [r5, #32]
 801e3b4:	4b07      	ldr	r3, [pc, #28]	; (801e3d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e3b6:	626b      	str	r3, [r5, #36]	; 0x24
 801e3b8:	bd38      	pop	{r3, r4, r5, pc}
 801e3ba:	bf00      	nop
 801e3bc:	20012f64 	.word	0x20012f64
 801e3c0:	20000000 	.word	0x20000000
 801e3c4:	0801b063 	.word	0x0801b063
 801e3c8:	200000dc 	.word	0x200000dc
 801e3cc:	20012f68 	.word	0x20012f68
 801e3d0:	0801b061 	.word	0x0801b061
 801e3d4:	200000e0 	.word	0x200000e0

0801e3d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e3d8:	b538      	push	{r3, r4, r5, lr}
 801e3da:	4c15      	ldr	r4, [pc, #84]	; (801e430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e3dc:	7823      	ldrb	r3, [r4, #0]
 801e3de:	f3bf 8f5b 	dmb	ish
 801e3e2:	07da      	lsls	r2, r3, #31
 801e3e4:	4605      	mov	r5, r0
 801e3e6:	d40b      	bmi.n	801e400 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e3e8:	4620      	mov	r0, r4
 801e3ea:	f00a fe2a 	bl	8029042 <__cxa_guard_acquire>
 801e3ee:	b138      	cbz	r0, 801e400 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e3f0:	4620      	mov	r0, r4
 801e3f2:	f00a fe32 	bl	802905a <__cxa_guard_release>
 801e3f6:	4a0f      	ldr	r2, [pc, #60]	; (801e434 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e3f8:	490f      	ldr	r1, [pc, #60]	; (801e438 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e3fa:	4810      	ldr	r0, [pc, #64]	; (801e43c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e3fc:	f00a fe1a 	bl	8029034 <__aeabi_atexit>
 801e400:	4c0f      	ldr	r4, [pc, #60]	; (801e440 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e402:	7823      	ldrb	r3, [r4, #0]
 801e404:	f3bf 8f5b 	dmb	ish
 801e408:	07db      	lsls	r3, r3, #31
 801e40a:	d40b      	bmi.n	801e424 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e40c:	4620      	mov	r0, r4
 801e40e:	f00a fe18 	bl	8029042 <__cxa_guard_acquire>
 801e412:	b138      	cbz	r0, 801e424 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e414:	4620      	mov	r0, r4
 801e416:	f00a fe20 	bl	802905a <__cxa_guard_release>
 801e41a:	4a06      	ldr	r2, [pc, #24]	; (801e434 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e41c:	4909      	ldr	r1, [pc, #36]	; (801e444 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e41e:	480a      	ldr	r0, [pc, #40]	; (801e448 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e420:	f00a fe08 	bl	8029034 <__aeabi_atexit>
 801e424:	4b05      	ldr	r3, [pc, #20]	; (801e43c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e426:	61ab      	str	r3, [r5, #24]
 801e428:	4b07      	ldr	r3, [pc, #28]	; (801e448 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e42a:	61eb      	str	r3, [r5, #28]
 801e42c:	bd38      	pop	{r3, r4, r5, pc}
 801e42e:	bf00      	nop
 801e430:	20012f3c 	.word	0x20012f3c
 801e434:	20000000 	.word	0x20000000
 801e438:	0801b067 	.word	0x0801b067
 801e43c:	200000b4 	.word	0x200000b4
 801e440:	20012f40 	.word	0x20012f40
 801e444:	0801b065 	.word	0x0801b065
 801e448:	200000b8 	.word	0x200000b8

0801e44c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e44c:	b510      	push	{r4, lr}
 801e44e:	4604      	mov	r4, r0
 801e450:	f7ff ff88 	bl	801e364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e454:	4620      	mov	r0, r4
 801e456:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e45a:	f7ff bfbd 	b.w	801e3d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e460 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e460:	b538      	push	{r3, r4, r5, lr}
 801e462:	4c15      	ldr	r4, [pc, #84]	; (801e4b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e464:	7823      	ldrb	r3, [r4, #0]
 801e466:	f3bf 8f5b 	dmb	ish
 801e46a:	07da      	lsls	r2, r3, #31
 801e46c:	4605      	mov	r5, r0
 801e46e:	d40b      	bmi.n	801e488 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e470:	4620      	mov	r0, r4
 801e472:	f00a fde6 	bl	8029042 <__cxa_guard_acquire>
 801e476:	b138      	cbz	r0, 801e488 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e478:	4620      	mov	r0, r4
 801e47a:	f00a fdee 	bl	802905a <__cxa_guard_release>
 801e47e:	4a0f      	ldr	r2, [pc, #60]	; (801e4bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e480:	490f      	ldr	r1, [pc, #60]	; (801e4c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e482:	4810      	ldr	r0, [pc, #64]	; (801e4c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e484:	f00a fdd6 	bl	8029034 <__aeabi_atexit>
 801e488:	4c0f      	ldr	r4, [pc, #60]	; (801e4c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e48a:	7823      	ldrb	r3, [r4, #0]
 801e48c:	f3bf 8f5b 	dmb	ish
 801e490:	07db      	lsls	r3, r3, #31
 801e492:	d40b      	bmi.n	801e4ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e494:	4620      	mov	r0, r4
 801e496:	f00a fdd4 	bl	8029042 <__cxa_guard_acquire>
 801e49a:	b138      	cbz	r0, 801e4ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e49c:	4620      	mov	r0, r4
 801e49e:	f00a fddc 	bl	802905a <__cxa_guard_release>
 801e4a2:	4a06      	ldr	r2, [pc, #24]	; (801e4bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e4a4:	4909      	ldr	r1, [pc, #36]	; (801e4cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e4a6:	480a      	ldr	r0, [pc, #40]	; (801e4d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e4a8:	f00a fdc4 	bl	8029034 <__aeabi_atexit>
 801e4ac:	4b05      	ldr	r3, [pc, #20]	; (801e4c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e4ae:	632b      	str	r3, [r5, #48]	; 0x30
 801e4b0:	4b07      	ldr	r3, [pc, #28]	; (801e4d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e4b2:	636b      	str	r3, [r5, #52]	; 0x34
 801e4b4:	bd38      	pop	{r3, r4, r5, pc}
 801e4b6:	bf00      	nop
 801e4b8:	20012f74 	.word	0x20012f74
 801e4bc:	20000000 	.word	0x20000000
 801e4c0:	0801b05b 	.word	0x0801b05b
 801e4c4:	200000ec 	.word	0x200000ec
 801e4c8:	20012f78 	.word	0x20012f78
 801e4cc:	0801b059 	.word	0x0801b059
 801e4d0:	200000f0 	.word	0x200000f0

0801e4d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e4d4:	b538      	push	{r3, r4, r5, lr}
 801e4d6:	4c15      	ldr	r4, [pc, #84]	; (801e52c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e4d8:	7823      	ldrb	r3, [r4, #0]
 801e4da:	f3bf 8f5b 	dmb	ish
 801e4de:	07da      	lsls	r2, r3, #31
 801e4e0:	4605      	mov	r5, r0
 801e4e2:	d40b      	bmi.n	801e4fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e4e4:	4620      	mov	r0, r4
 801e4e6:	f00a fdac 	bl	8029042 <__cxa_guard_acquire>
 801e4ea:	b138      	cbz	r0, 801e4fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e4ec:	4620      	mov	r0, r4
 801e4ee:	f00a fdb4 	bl	802905a <__cxa_guard_release>
 801e4f2:	4a0f      	ldr	r2, [pc, #60]	; (801e530 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e4f4:	490f      	ldr	r1, [pc, #60]	; (801e534 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e4f6:	4810      	ldr	r0, [pc, #64]	; (801e538 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e4f8:	f00a fd9c 	bl	8029034 <__aeabi_atexit>
 801e4fc:	4c0f      	ldr	r4, [pc, #60]	; (801e53c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e4fe:	7823      	ldrb	r3, [r4, #0]
 801e500:	f3bf 8f5b 	dmb	ish
 801e504:	07db      	lsls	r3, r3, #31
 801e506:	d40b      	bmi.n	801e520 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e508:	4620      	mov	r0, r4
 801e50a:	f00a fd9a 	bl	8029042 <__cxa_guard_acquire>
 801e50e:	b138      	cbz	r0, 801e520 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e510:	4620      	mov	r0, r4
 801e512:	f00a fda2 	bl	802905a <__cxa_guard_release>
 801e516:	4a06      	ldr	r2, [pc, #24]	; (801e530 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e518:	4909      	ldr	r1, [pc, #36]	; (801e540 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e51a:	480a      	ldr	r0, [pc, #40]	; (801e544 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e51c:	f00a fd8a 	bl	8029034 <__aeabi_atexit>
 801e520:	4b05      	ldr	r3, [pc, #20]	; (801e538 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e522:	62ab      	str	r3, [r5, #40]	; 0x28
 801e524:	4b07      	ldr	r3, [pc, #28]	; (801e544 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e526:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e528:	bd38      	pop	{r3, r4, r5, pc}
 801e52a:	bf00      	nop
 801e52c:	20012f44 	.word	0x20012f44
 801e530:	20000000 	.word	0x20000000
 801e534:	0801b05f 	.word	0x0801b05f
 801e538:	200000bc 	.word	0x200000bc
 801e53c:	20012f48 	.word	0x20012f48
 801e540:	0801b05d 	.word	0x0801b05d
 801e544:	200000c0 	.word	0x200000c0

0801e548 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e548:	b510      	push	{r4, lr}
 801e54a:	4604      	mov	r4, r0
 801e54c:	f7ff ff88 	bl	801e460 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e550:	4620      	mov	r0, r4
 801e552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e556:	f7ff bfbd 	b.w	801e4d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e55c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e55c:	b538      	push	{r3, r4, r5, lr}
 801e55e:	4c15      	ldr	r4, [pc, #84]	; (801e5b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e560:	7823      	ldrb	r3, [r4, #0]
 801e562:	f3bf 8f5b 	dmb	ish
 801e566:	07da      	lsls	r2, r3, #31
 801e568:	4605      	mov	r5, r0
 801e56a:	d40b      	bmi.n	801e584 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e56c:	4620      	mov	r0, r4
 801e56e:	f00a fd68 	bl	8029042 <__cxa_guard_acquire>
 801e572:	b138      	cbz	r0, 801e584 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e574:	4620      	mov	r0, r4
 801e576:	f00a fd70 	bl	802905a <__cxa_guard_release>
 801e57a:	4a0f      	ldr	r2, [pc, #60]	; (801e5b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e57c:	490f      	ldr	r1, [pc, #60]	; (801e5bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e57e:	4810      	ldr	r0, [pc, #64]	; (801e5c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e580:	f00a fd58 	bl	8029034 <__aeabi_atexit>
 801e584:	4c0f      	ldr	r4, [pc, #60]	; (801e5c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e586:	7823      	ldrb	r3, [r4, #0]
 801e588:	f3bf 8f5b 	dmb	ish
 801e58c:	07db      	lsls	r3, r3, #31
 801e58e:	d40b      	bmi.n	801e5a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e590:	4620      	mov	r0, r4
 801e592:	f00a fd56 	bl	8029042 <__cxa_guard_acquire>
 801e596:	b138      	cbz	r0, 801e5a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e598:	4620      	mov	r0, r4
 801e59a:	f00a fd5e 	bl	802905a <__cxa_guard_release>
 801e59e:	4a06      	ldr	r2, [pc, #24]	; (801e5b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e5a0:	4909      	ldr	r1, [pc, #36]	; (801e5c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e5a2:	480a      	ldr	r0, [pc, #40]	; (801e5cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e5a4:	f00a fd46 	bl	8029034 <__aeabi_atexit>
 801e5a8:	4b05      	ldr	r3, [pc, #20]	; (801e5c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e5aa:	652b      	str	r3, [r5, #80]	; 0x50
 801e5ac:	4b07      	ldr	r3, [pc, #28]	; (801e5cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e5ae:	656b      	str	r3, [r5, #84]	; 0x54
 801e5b0:	bd38      	pop	{r3, r4, r5, pc}
 801e5b2:	bf00      	nop
 801e5b4:	20012f7c 	.word	0x20012f7c
 801e5b8:	20000000 	.word	0x20000000
 801e5bc:	0801b04b 	.word	0x0801b04b
 801e5c0:	200000f4 	.word	0x200000f4
 801e5c4:	20012f80 	.word	0x20012f80
 801e5c8:	0801b049 	.word	0x0801b049
 801e5cc:	200000f8 	.word	0x200000f8

0801e5d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e5d0:	b538      	push	{r3, r4, r5, lr}
 801e5d2:	4c15      	ldr	r4, [pc, #84]	; (801e628 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e5d4:	7823      	ldrb	r3, [r4, #0]
 801e5d6:	f3bf 8f5b 	dmb	ish
 801e5da:	07da      	lsls	r2, r3, #31
 801e5dc:	4605      	mov	r5, r0
 801e5de:	d40b      	bmi.n	801e5f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e5e0:	4620      	mov	r0, r4
 801e5e2:	f00a fd2e 	bl	8029042 <__cxa_guard_acquire>
 801e5e6:	b138      	cbz	r0, 801e5f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e5e8:	4620      	mov	r0, r4
 801e5ea:	f00a fd36 	bl	802905a <__cxa_guard_release>
 801e5ee:	4a0f      	ldr	r2, [pc, #60]	; (801e62c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e5f0:	490f      	ldr	r1, [pc, #60]	; (801e630 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e5f2:	4810      	ldr	r0, [pc, #64]	; (801e634 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e5f4:	f00a fd1e 	bl	8029034 <__aeabi_atexit>
 801e5f8:	4c0f      	ldr	r4, [pc, #60]	; (801e638 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e5fa:	7823      	ldrb	r3, [r4, #0]
 801e5fc:	f3bf 8f5b 	dmb	ish
 801e600:	07db      	lsls	r3, r3, #31
 801e602:	d40b      	bmi.n	801e61c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e604:	4620      	mov	r0, r4
 801e606:	f00a fd1c 	bl	8029042 <__cxa_guard_acquire>
 801e60a:	b138      	cbz	r0, 801e61c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e60c:	4620      	mov	r0, r4
 801e60e:	f00a fd24 	bl	802905a <__cxa_guard_release>
 801e612:	4a06      	ldr	r2, [pc, #24]	; (801e62c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e614:	4909      	ldr	r1, [pc, #36]	; (801e63c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e616:	480a      	ldr	r0, [pc, #40]	; (801e640 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e618:	f00a fd0c 	bl	8029034 <__aeabi_atexit>
 801e61c:	4b05      	ldr	r3, [pc, #20]	; (801e634 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e61e:	64ab      	str	r3, [r5, #72]	; 0x48
 801e620:	4b07      	ldr	r3, [pc, #28]	; (801e640 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e622:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e624:	bd38      	pop	{r3, r4, r5, pc}
 801e626:	bf00      	nop
 801e628:	20012f84 	.word	0x20012f84
 801e62c:	20000000 	.word	0x20000000
 801e630:	0801b04f 	.word	0x0801b04f
 801e634:	200000fc 	.word	0x200000fc
 801e638:	20012f88 	.word	0x20012f88
 801e63c:	0801b04d 	.word	0x0801b04d
 801e640:	20000100 	.word	0x20000100

0801e644 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e644:	b538      	push	{r3, r4, r5, lr}
 801e646:	4c15      	ldr	r4, [pc, #84]	; (801e69c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e648:	7823      	ldrb	r3, [r4, #0]
 801e64a:	f3bf 8f5b 	dmb	ish
 801e64e:	07da      	lsls	r2, r3, #31
 801e650:	4605      	mov	r5, r0
 801e652:	d40b      	bmi.n	801e66c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e654:	4620      	mov	r0, r4
 801e656:	f00a fcf4 	bl	8029042 <__cxa_guard_acquire>
 801e65a:	b138      	cbz	r0, 801e66c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e65c:	4620      	mov	r0, r4
 801e65e:	f00a fcfc 	bl	802905a <__cxa_guard_release>
 801e662:	4a0f      	ldr	r2, [pc, #60]	; (801e6a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e664:	490f      	ldr	r1, [pc, #60]	; (801e6a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e666:	4810      	ldr	r0, [pc, #64]	; (801e6a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e668:	f00a fce4 	bl	8029034 <__aeabi_atexit>
 801e66c:	4c0f      	ldr	r4, [pc, #60]	; (801e6ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e66e:	7823      	ldrb	r3, [r4, #0]
 801e670:	f3bf 8f5b 	dmb	ish
 801e674:	07db      	lsls	r3, r3, #31
 801e676:	d40b      	bmi.n	801e690 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e678:	4620      	mov	r0, r4
 801e67a:	f00a fce2 	bl	8029042 <__cxa_guard_acquire>
 801e67e:	b138      	cbz	r0, 801e690 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e680:	4620      	mov	r0, r4
 801e682:	f00a fcea 	bl	802905a <__cxa_guard_release>
 801e686:	4a06      	ldr	r2, [pc, #24]	; (801e6a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e688:	4909      	ldr	r1, [pc, #36]	; (801e6b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e68a:	480a      	ldr	r0, [pc, #40]	; (801e6b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e68c:	f00a fcd2 	bl	8029034 <__aeabi_atexit>
 801e690:	4b05      	ldr	r3, [pc, #20]	; (801e6a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e692:	642b      	str	r3, [r5, #64]	; 0x40
 801e694:	4b07      	ldr	r3, [pc, #28]	; (801e6b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e696:	646b      	str	r3, [r5, #68]	; 0x44
 801e698:	bd38      	pop	{r3, r4, r5, pc}
 801e69a:	bf00      	nop
 801e69c:	20012f4c 	.word	0x20012f4c
 801e6a0:	20000000 	.word	0x20000000
 801e6a4:	0801b053 	.word	0x0801b053
 801e6a8:	200000c4 	.word	0x200000c4
 801e6ac:	20012f50 	.word	0x20012f50
 801e6b0:	0801b051 	.word	0x0801b051
 801e6b4:	200000c8 	.word	0x200000c8

0801e6b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e6b8:	b538      	push	{r3, r4, r5, lr}
 801e6ba:	4c15      	ldr	r4, [pc, #84]	; (801e710 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e6bc:	7823      	ldrb	r3, [r4, #0]
 801e6be:	f3bf 8f5b 	dmb	ish
 801e6c2:	07da      	lsls	r2, r3, #31
 801e6c4:	4605      	mov	r5, r0
 801e6c6:	d40b      	bmi.n	801e6e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e6c8:	4620      	mov	r0, r4
 801e6ca:	f00a fcba 	bl	8029042 <__cxa_guard_acquire>
 801e6ce:	b138      	cbz	r0, 801e6e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e6d0:	4620      	mov	r0, r4
 801e6d2:	f00a fcc2 	bl	802905a <__cxa_guard_release>
 801e6d6:	4a0f      	ldr	r2, [pc, #60]	; (801e714 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e6d8:	490f      	ldr	r1, [pc, #60]	; (801e718 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e6da:	4810      	ldr	r0, [pc, #64]	; (801e71c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e6dc:	f00a fcaa 	bl	8029034 <__aeabi_atexit>
 801e6e0:	4c0f      	ldr	r4, [pc, #60]	; (801e720 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e6e2:	7823      	ldrb	r3, [r4, #0]
 801e6e4:	f3bf 8f5b 	dmb	ish
 801e6e8:	07db      	lsls	r3, r3, #31
 801e6ea:	d40b      	bmi.n	801e704 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e6ec:	4620      	mov	r0, r4
 801e6ee:	f00a fca8 	bl	8029042 <__cxa_guard_acquire>
 801e6f2:	b138      	cbz	r0, 801e704 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e6f4:	4620      	mov	r0, r4
 801e6f6:	f00a fcb0 	bl	802905a <__cxa_guard_release>
 801e6fa:	4a06      	ldr	r2, [pc, #24]	; (801e714 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e6fc:	4909      	ldr	r1, [pc, #36]	; (801e724 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e6fe:	480a      	ldr	r0, [pc, #40]	; (801e728 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e700:	f00a fc98 	bl	8029034 <__aeabi_atexit>
 801e704:	4b05      	ldr	r3, [pc, #20]	; (801e71c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e706:	63ab      	str	r3, [r5, #56]	; 0x38
 801e708:	4b07      	ldr	r3, [pc, #28]	; (801e728 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e70a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e70c:	bd38      	pop	{r3, r4, r5, pc}
 801e70e:	bf00      	nop
 801e710:	20012f6c 	.word	0x20012f6c
 801e714:	20000000 	.word	0x20000000
 801e718:	0801b057 	.word	0x0801b057
 801e71c:	200000e4 	.word	0x200000e4
 801e720:	20012f70 	.word	0x20012f70
 801e724:	0801b055 	.word	0x0801b055
 801e728:	200000e8 	.word	0x200000e8

0801e72c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e72c:	b510      	push	{r4, lr}
 801e72e:	4604      	mov	r4, r0
 801e730:	f7ff ff14 	bl	801e55c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e734:	4620      	mov	r0, r4
 801e736:	f7ff ff85 	bl	801e644 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e73a:	4620      	mov	r0, r4
 801e73c:	f7ff ff48 	bl	801e5d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e740:	4620      	mov	r0, r4
 801e742:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e746:	f7ff bfb7 	b.w	801e6b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e74c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e74c:	b538      	push	{r3, r4, r5, lr}
 801e74e:	4c15      	ldr	r4, [pc, #84]	; (801e7a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e750:	7823      	ldrb	r3, [r4, #0]
 801e752:	f3bf 8f5b 	dmb	ish
 801e756:	07da      	lsls	r2, r3, #31
 801e758:	4605      	mov	r5, r0
 801e75a:	d40b      	bmi.n	801e774 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e75c:	4620      	mov	r0, r4
 801e75e:	f00a fc70 	bl	8029042 <__cxa_guard_acquire>
 801e762:	b138      	cbz	r0, 801e774 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e764:	4620      	mov	r0, r4
 801e766:	f00a fc78 	bl	802905a <__cxa_guard_release>
 801e76a:	4a0f      	ldr	r2, [pc, #60]	; (801e7a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e76c:	490f      	ldr	r1, [pc, #60]	; (801e7ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e76e:	4810      	ldr	r0, [pc, #64]	; (801e7b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e770:	f00a fc60 	bl	8029034 <__aeabi_atexit>
 801e774:	4c0f      	ldr	r4, [pc, #60]	; (801e7b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e776:	7823      	ldrb	r3, [r4, #0]
 801e778:	f3bf 8f5b 	dmb	ish
 801e77c:	07db      	lsls	r3, r3, #31
 801e77e:	d40b      	bmi.n	801e798 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e780:	4620      	mov	r0, r4
 801e782:	f00a fc5e 	bl	8029042 <__cxa_guard_acquire>
 801e786:	b138      	cbz	r0, 801e798 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e788:	4620      	mov	r0, r4
 801e78a:	f00a fc66 	bl	802905a <__cxa_guard_release>
 801e78e:	4a06      	ldr	r2, [pc, #24]	; (801e7a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e790:	4909      	ldr	r1, [pc, #36]	; (801e7b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e792:	480a      	ldr	r0, [pc, #40]	; (801e7bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e794:	f00a fc4e 	bl	8029034 <__aeabi_atexit>
 801e798:	4b05      	ldr	r3, [pc, #20]	; (801e7b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e79a:	662b      	str	r3, [r5, #96]	; 0x60
 801e79c:	4b07      	ldr	r3, [pc, #28]	; (801e7bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e79e:	666b      	str	r3, [r5, #100]	; 0x64
 801e7a0:	bd38      	pop	{r3, r4, r5, pc}
 801e7a2:	bf00      	nop
 801e7a4:	20012f54 	.word	0x20012f54
 801e7a8:	20000000 	.word	0x20000000
 801e7ac:	0801b043 	.word	0x0801b043
 801e7b0:	200000cc 	.word	0x200000cc
 801e7b4:	20012f58 	.word	0x20012f58
 801e7b8:	0801b041 	.word	0x0801b041
 801e7bc:	200000d0 	.word	0x200000d0

0801e7c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e7c0:	b538      	push	{r3, r4, r5, lr}
 801e7c2:	4c15      	ldr	r4, [pc, #84]	; (801e818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e7c4:	7823      	ldrb	r3, [r4, #0]
 801e7c6:	f3bf 8f5b 	dmb	ish
 801e7ca:	07da      	lsls	r2, r3, #31
 801e7cc:	4605      	mov	r5, r0
 801e7ce:	d40b      	bmi.n	801e7e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e7d0:	4620      	mov	r0, r4
 801e7d2:	f00a fc36 	bl	8029042 <__cxa_guard_acquire>
 801e7d6:	b138      	cbz	r0, 801e7e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e7d8:	4620      	mov	r0, r4
 801e7da:	f00a fc3e 	bl	802905a <__cxa_guard_release>
 801e7de:	4a0f      	ldr	r2, [pc, #60]	; (801e81c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e7e0:	490f      	ldr	r1, [pc, #60]	; (801e820 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e7e2:	4810      	ldr	r0, [pc, #64]	; (801e824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e7e4:	f00a fc26 	bl	8029034 <__aeabi_atexit>
 801e7e8:	4c0f      	ldr	r4, [pc, #60]	; (801e828 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e7ea:	7823      	ldrb	r3, [r4, #0]
 801e7ec:	f3bf 8f5b 	dmb	ish
 801e7f0:	07db      	lsls	r3, r3, #31
 801e7f2:	d40b      	bmi.n	801e80c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e7f4:	4620      	mov	r0, r4
 801e7f6:	f00a fc24 	bl	8029042 <__cxa_guard_acquire>
 801e7fa:	b138      	cbz	r0, 801e80c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e7fc:	4620      	mov	r0, r4
 801e7fe:	f00a fc2c 	bl	802905a <__cxa_guard_release>
 801e802:	4a06      	ldr	r2, [pc, #24]	; (801e81c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e804:	4909      	ldr	r1, [pc, #36]	; (801e82c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e806:	480a      	ldr	r0, [pc, #40]	; (801e830 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e808:	f00a fc14 	bl	8029034 <__aeabi_atexit>
 801e80c:	4b05      	ldr	r3, [pc, #20]	; (801e824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e80e:	65ab      	str	r3, [r5, #88]	; 0x58
 801e810:	4b07      	ldr	r3, [pc, #28]	; (801e830 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e812:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e814:	bd38      	pop	{r3, r4, r5, pc}
 801e816:	bf00      	nop
 801e818:	20012f2c 	.word	0x20012f2c
 801e81c:	20000000 	.word	0x20000000
 801e820:	0801b047 	.word	0x0801b047
 801e824:	200000a4 	.word	0x200000a4
 801e828:	20012f30 	.word	0x20012f30
 801e82c:	0801b045 	.word	0x0801b045
 801e830:	200000a8 	.word	0x200000a8

0801e834 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e834:	b510      	push	{r4, lr}
 801e836:	4604      	mov	r4, r0
 801e838:	f7ff ff88 	bl	801e74c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e83c:	4620      	mov	r0, r4
 801e83e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e842:	f7ff bfbd 	b.w	801e7c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e848:	b538      	push	{r3, r4, r5, lr}
 801e84a:	4c15      	ldr	r4, [pc, #84]	; (801e8a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e84c:	7823      	ldrb	r3, [r4, #0]
 801e84e:	f3bf 8f5b 	dmb	ish
 801e852:	07da      	lsls	r2, r3, #31
 801e854:	4605      	mov	r5, r0
 801e856:	d40b      	bmi.n	801e870 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e858:	4620      	mov	r0, r4
 801e85a:	f00a fbf2 	bl	8029042 <__cxa_guard_acquire>
 801e85e:	b138      	cbz	r0, 801e870 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e860:	4620      	mov	r0, r4
 801e862:	f00a fbfa 	bl	802905a <__cxa_guard_release>
 801e866:	4a0f      	ldr	r2, [pc, #60]	; (801e8a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e868:	490f      	ldr	r1, [pc, #60]	; (801e8a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e86a:	4810      	ldr	r0, [pc, #64]	; (801e8ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e86c:	f00a fbe2 	bl	8029034 <__aeabi_atexit>
 801e870:	4c0f      	ldr	r4, [pc, #60]	; (801e8b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e872:	7823      	ldrb	r3, [r4, #0]
 801e874:	f3bf 8f5b 	dmb	ish
 801e878:	07db      	lsls	r3, r3, #31
 801e87a:	d40b      	bmi.n	801e894 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e87c:	4620      	mov	r0, r4
 801e87e:	f00a fbe0 	bl	8029042 <__cxa_guard_acquire>
 801e882:	b138      	cbz	r0, 801e894 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e884:	4620      	mov	r0, r4
 801e886:	f00a fbe8 	bl	802905a <__cxa_guard_release>
 801e88a:	4a06      	ldr	r2, [pc, #24]	; (801e8a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e88c:	4909      	ldr	r1, [pc, #36]	; (801e8b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e88e:	480a      	ldr	r0, [pc, #40]	; (801e8b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e890:	f00a fbd0 	bl	8029034 <__aeabi_atexit>
 801e894:	4b05      	ldr	r3, [pc, #20]	; (801e8ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e896:	672b      	str	r3, [r5, #112]	; 0x70
 801e898:	4b07      	ldr	r3, [pc, #28]	; (801e8b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e89a:	676b      	str	r3, [r5, #116]	; 0x74
 801e89c:	bd38      	pop	{r3, r4, r5, pc}
 801e89e:	bf00      	nop
 801e8a0:	20012f24 	.word	0x20012f24
 801e8a4:	20000000 	.word	0x20000000
 801e8a8:	0801b03b 	.word	0x0801b03b
 801e8ac:	2000009c 	.word	0x2000009c
 801e8b0:	20012f28 	.word	0x20012f28
 801e8b4:	0801b039 	.word	0x0801b039
 801e8b8:	200000a0 	.word	0x200000a0

0801e8bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e8bc:	b538      	push	{r3, r4, r5, lr}
 801e8be:	4c15      	ldr	r4, [pc, #84]	; (801e914 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e8c0:	7823      	ldrb	r3, [r4, #0]
 801e8c2:	f3bf 8f5b 	dmb	ish
 801e8c6:	07da      	lsls	r2, r3, #31
 801e8c8:	4605      	mov	r5, r0
 801e8ca:	d40b      	bmi.n	801e8e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e8cc:	4620      	mov	r0, r4
 801e8ce:	f00a fbb8 	bl	8029042 <__cxa_guard_acquire>
 801e8d2:	b138      	cbz	r0, 801e8e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e8d4:	4620      	mov	r0, r4
 801e8d6:	f00a fbc0 	bl	802905a <__cxa_guard_release>
 801e8da:	4a0f      	ldr	r2, [pc, #60]	; (801e918 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e8dc:	490f      	ldr	r1, [pc, #60]	; (801e91c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e8de:	4810      	ldr	r0, [pc, #64]	; (801e920 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e8e0:	f00a fba8 	bl	8029034 <__aeabi_atexit>
 801e8e4:	4c0f      	ldr	r4, [pc, #60]	; (801e924 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e8e6:	7823      	ldrb	r3, [r4, #0]
 801e8e8:	f3bf 8f5b 	dmb	ish
 801e8ec:	07db      	lsls	r3, r3, #31
 801e8ee:	d40b      	bmi.n	801e908 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e8f0:	4620      	mov	r0, r4
 801e8f2:	f00a fba6 	bl	8029042 <__cxa_guard_acquire>
 801e8f6:	b138      	cbz	r0, 801e908 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e8f8:	4620      	mov	r0, r4
 801e8fa:	f00a fbae 	bl	802905a <__cxa_guard_release>
 801e8fe:	4a06      	ldr	r2, [pc, #24]	; (801e918 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e900:	4909      	ldr	r1, [pc, #36]	; (801e928 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e902:	480a      	ldr	r0, [pc, #40]	; (801e92c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e904:	f00a fb96 	bl	8029034 <__aeabi_atexit>
 801e908:	4b05      	ldr	r3, [pc, #20]	; (801e920 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e90a:	66ab      	str	r3, [r5, #104]	; 0x68
 801e90c:	4b07      	ldr	r3, [pc, #28]	; (801e92c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e90e:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e910:	bd38      	pop	{r3, r4, r5, pc}
 801e912:	bf00      	nop
 801e914:	20012f1c 	.word	0x20012f1c
 801e918:	20000000 	.word	0x20000000
 801e91c:	0801b03f 	.word	0x0801b03f
 801e920:	20000094 	.word	0x20000094
 801e924:	20012f20 	.word	0x20012f20
 801e928:	0801b03d 	.word	0x0801b03d
 801e92c:	20000098 	.word	0x20000098

0801e930 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e930:	b510      	push	{r4, lr}
 801e932:	4604      	mov	r4, r0
 801e934:	f7ff ff88 	bl	801e848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e938:	4620      	mov	r0, r4
 801e93a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e93e:	f7ff bfbd 	b.w	801e8bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e942 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e942:	b510      	push	{r4, lr}
 801e944:	4604      	mov	r4, r0
 801e946:	f7ff fff3 	bl	801e930 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e94a:	4620      	mov	r0, r4
 801e94c:	f7ff ff72 	bl	801e834 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e950:	4620      	mov	r0, r4
 801e952:	f7ff fdf9 	bl	801e548 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e956:	4620      	mov	r0, r4
 801e958:	f7ff fcfa 	bl	801e350 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e95c:	4620      	mov	r0, r4
 801e95e:	f7ff fd75 	bl	801e44c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e962:	4620      	mov	r0, r4
 801e964:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e968:	f7ff bee0 	b.w	801e72c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e96c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e96c:	b538      	push	{r3, r4, r5, lr}
 801e96e:	4c0b      	ldr	r4, [pc, #44]	; (801e99c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e970:	7823      	ldrb	r3, [r4, #0]
 801e972:	f3bf 8f5b 	dmb	ish
 801e976:	07db      	lsls	r3, r3, #31
 801e978:	4605      	mov	r5, r0
 801e97a:	d40b      	bmi.n	801e994 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e97c:	4620      	mov	r0, r4
 801e97e:	f00a fb60 	bl	8029042 <__cxa_guard_acquire>
 801e982:	b138      	cbz	r0, 801e994 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e984:	4620      	mov	r0, r4
 801e986:	f00a fb68 	bl	802905a <__cxa_guard_release>
 801e98a:	4a05      	ldr	r2, [pc, #20]	; (801e9a0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e98c:	4905      	ldr	r1, [pc, #20]	; (801e9a4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e98e:	4806      	ldr	r0, [pc, #24]	; (801e9a8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e990:	f00a fb50 	bl	8029034 <__aeabi_atexit>
 801e994:	4b04      	ldr	r3, [pc, #16]	; (801e9a8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e996:	67ab      	str	r3, [r5, #120]	; 0x78
 801e998:	bd38      	pop	{r3, r4, r5, pc}
 801e99a:	bf00      	nop
 801e99c:	20012f10 	.word	0x20012f10
 801e9a0:	20000000 	.word	0x20000000
 801e9a4:	0801b037 	.word	0x0801b037
 801e9a8:	2000008c 	.word	0x2000008c

0801e9ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e9ac:	b538      	push	{r3, r4, r5, lr}
 801e9ae:	4c0b      	ldr	r4, [pc, #44]	; (801e9dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e9b0:	7823      	ldrb	r3, [r4, #0]
 801e9b2:	f3bf 8f5b 	dmb	ish
 801e9b6:	07db      	lsls	r3, r3, #31
 801e9b8:	4605      	mov	r5, r0
 801e9ba:	d40b      	bmi.n	801e9d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e9bc:	4620      	mov	r0, r4
 801e9be:	f00a fb40 	bl	8029042 <__cxa_guard_acquire>
 801e9c2:	b138      	cbz	r0, 801e9d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e9c4:	4620      	mov	r0, r4
 801e9c6:	f00a fb48 	bl	802905a <__cxa_guard_release>
 801e9ca:	4a05      	ldr	r2, [pc, #20]	; (801e9e0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e9cc:	4905      	ldr	r1, [pc, #20]	; (801e9e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e9ce:	4806      	ldr	r0, [pc, #24]	; (801e9e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e9d0:	f00a fb30 	bl	8029034 <__aeabi_atexit>
 801e9d4:	4b04      	ldr	r3, [pc, #16]	; (801e9e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e9d6:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e9d8:	bd38      	pop	{r3, r4, r5, pc}
 801e9da:	bf00      	nop
 801e9dc:	20012f14 	.word	0x20012f14
 801e9e0:	20000000 	.word	0x20000000
 801e9e4:	0801b035 	.word	0x0801b035
 801e9e8:	20000090 	.word	0x20000090

0801e9ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e9ec:	b570      	push	{r4, r5, r6, lr}
 801e9ee:	4d0d      	ldr	r5, [pc, #52]	; (801ea24 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e9f0:	4c0d      	ldr	r4, [pc, #52]	; (801ea28 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e9f2:	782b      	ldrb	r3, [r5, #0]
 801e9f4:	f3bf 8f5b 	dmb	ish
 801e9f8:	f013 0f01 	tst.w	r3, #1
 801e9fc:	4606      	mov	r6, r0
 801e9fe:	d10d      	bne.n	801ea1c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ea00:	4628      	mov	r0, r5
 801ea02:	f00a fb1e 	bl	8029042 <__cxa_guard_acquire>
 801ea06:	b148      	cbz	r0, 801ea1c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ea08:	4b08      	ldr	r3, [pc, #32]	; (801ea2c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801ea0a:	6023      	str	r3, [r4, #0]
 801ea0c:	4628      	mov	r0, r5
 801ea0e:	f00a fb24 	bl	802905a <__cxa_guard_release>
 801ea12:	4a07      	ldr	r2, [pc, #28]	; (801ea30 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801ea14:	4907      	ldr	r1, [pc, #28]	; (801ea34 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801ea16:	4620      	mov	r0, r4
 801ea18:	f00a fb0c 	bl	8029034 <__aeabi_atexit>
 801ea1c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801ea20:	bd70      	pop	{r4, r5, r6, pc}
 801ea22:	bf00      	nop
 801ea24:	20012f18 	.word	0x20012f18
 801ea28:	20012f8c 	.word	0x20012f8c
 801ea2c:	0802e5d4 	.word	0x0802e5d4
 801ea30:	20000000 	.word	0x20000000
 801ea34:	0801b033 	.word	0x0801b033

0801ea38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801ea38:	b510      	push	{r4, lr}
 801ea3a:	4604      	mov	r4, r0
 801ea3c:	f7ff ff96 	bl	801e96c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801ea40:	4620      	mov	r0, r4
 801ea42:	f7ff ffb3 	bl	801e9ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801ea46:	4620      	mov	r0, r4
 801ea48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ea4c:	f7ff bfce 	b.w	801e9ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801ea50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801ea50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea54:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801ea58:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801ea5c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801ea60:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801ea64:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801ea68:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801ea6c:	8808      	ldrh	r0, [r1, #0]
 801ea6e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801ea72:	2d00      	cmp	r5, #0
 801ea74:	eb02 0a0c 	add.w	sl, r2, ip
 801ea78:	f2c0 80b0 	blt.w	801ebdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ea7c:	45ab      	cmp	fp, r5
 801ea7e:	f340 80ad 	ble.w	801ebdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ea82:	2c00      	cmp	r4, #0
 801ea84:	f2c0 80a8 	blt.w	801ebd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ea88:	45a6      	cmp	lr, r4
 801ea8a:	f340 80a5 	ble.w	801ebd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ea8e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801ea92:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801ea96:	1c62      	adds	r2, r4, #1
 801ea98:	f100 80a3 	bmi.w	801ebe2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ea9c:	4596      	cmp	lr, r2
 801ea9e:	f340 80a0 	ble.w	801ebe2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801eaa2:	f1b9 0f00 	cmp.w	r9, #0
 801eaa6:	f000 809c 	beq.w	801ebe2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801eaaa:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801eaae:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801eab2:	3501      	adds	r5, #1
 801eab4:	f100 8099 	bmi.w	801ebea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801eab8:	45ab      	cmp	fp, r5
 801eaba:	f340 8096 	ble.w	801ebea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801eabe:	2f00      	cmp	r7, #0
 801eac0:	f000 8093 	beq.w	801ebea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801eac4:	2c00      	cmp	r4, #0
 801eac6:	f2c0 808e 	blt.w	801ebe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801eaca:	45a6      	cmp	lr, r4
 801eacc:	f340 808b 	ble.w	801ebe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ead0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801ead4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801ead8:	3401      	adds	r4, #1
 801eada:	f100 8089 	bmi.w	801ebf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801eade:	45a6      	cmp	lr, r4
 801eae0:	f340 8086 	ble.w	801ebf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801eae4:	f1b9 0f00 	cmp.w	r9, #0
 801eae8:	f000 8082 	beq.w	801ebf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801eaec:	44d6      	add	lr, sl
 801eaee:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801eaf2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801eaf6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801eafa:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801eafe:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801eb02:	fb19 fe07 	smulbb	lr, r9, r7
 801eb06:	ea44 0808 	orr.w	r8, r4, r8
 801eb0a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801eb0e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801eb12:	f1c7 0210 	rsb	r2, r7, #16
 801eb16:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801eb1a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801eb1e:	ea44 0c0c 	orr.w	ip, r4, ip
 801eb22:	eba2 0209 	sub.w	r2, r2, r9
 801eb26:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801eb2a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801eb2e:	fb04 f40c 	mul.w	r4, r4, ip
 801eb32:	fb02 4808 	mla	r8, r2, r8, r4
 801eb36:	041a      	lsls	r2, r3, #16
 801eb38:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801eb3c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eb40:	4313      	orrs	r3, r2
 801eb42:	042a      	lsls	r2, r5, #16
 801eb44:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801eb48:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801eb4c:	fb0e 8303 	mla	r3, lr, r3, r8
 801eb50:	432a      	orrs	r2, r5
 801eb52:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801eb56:	fb07 3202 	mla	r2, r7, r2, r3
 801eb5a:	0d53      	lsrs	r3, r2, #21
 801eb5c:	0952      	lsrs	r2, r2, #5
 801eb5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb62:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eb66:	431a      	orrs	r2, r3
 801eb68:	b293      	uxth	r3, r2
 801eb6a:	b2b4      	uxth	r4, r6
 801eb6c:	1202      	asrs	r2, r0, #8
 801eb6e:	43f6      	mvns	r6, r6
 801eb70:	b2f6      	uxtb	r6, r6
 801eb72:	121d      	asrs	r5, r3, #8
 801eb74:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801eb78:	fb12 f206 	smulbb	r2, r2, r6
 801eb7c:	10c7      	asrs	r7, r0, #3
 801eb7e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eb82:	00c0      	lsls	r0, r0, #3
 801eb84:	fb05 2504 	mla	r5, r5, r4, r2
 801eb88:	b2c0      	uxtb	r0, r0
 801eb8a:	10da      	asrs	r2, r3, #3
 801eb8c:	00db      	lsls	r3, r3, #3
 801eb8e:	b2db      	uxtb	r3, r3
 801eb90:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801eb94:	fb10 f006 	smulbb	r0, r0, r6
 801eb98:	b2ad      	uxth	r5, r5
 801eb9a:	fb03 0004 	mla	r0, r3, r4, r0
 801eb9e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801eba2:	fb17 f706 	smulbb	r7, r7, r6
 801eba6:	b280      	uxth	r0, r0
 801eba8:	1c6b      	adds	r3, r5, #1
 801ebaa:	fb02 7204 	mla	r2, r2, r4, r7
 801ebae:	b292      	uxth	r2, r2
 801ebb0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ebb4:	1c43      	adds	r3, r0, #1
 801ebb6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ebba:	1c50      	adds	r0, r2, #1
 801ebbc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ebc0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ebc4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ebc8:	0952      	lsrs	r2, r2, #5
 801ebca:	432b      	orrs	r3, r5
 801ebcc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ebd0:	4313      	orrs	r3, r2
 801ebd2:	800b      	strh	r3, [r1, #0]
 801ebd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebd8:	4680      	mov	r8, r0
 801ebda:	e75c      	b.n	801ea96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801ebdc:	4684      	mov	ip, r0
 801ebde:	4680      	mov	r8, r0
 801ebe0:	e767      	b.n	801eab2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ebe2:	4684      	mov	ip, r0
 801ebe4:	e765      	b.n	801eab2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ebe6:	4605      	mov	r5, r0
 801ebe8:	e776      	b.n	801ead8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801ebea:	4603      	mov	r3, r0
 801ebec:	4605      	mov	r5, r0
 801ebee:	e782      	b.n	801eaf6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801ebf0:	4603      	mov	r3, r0
 801ebf2:	e780      	b.n	801eaf6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801ebf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ebf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ebf8:	b099      	sub	sp, #100	; 0x64
 801ebfa:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801ebfe:	9215      	str	r2, [sp, #84]	; 0x54
 801ec00:	9309      	str	r3, [sp, #36]	; 0x24
 801ec02:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801ec04:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801ec08:	930d      	str	r3, [sp, #52]	; 0x34
 801ec0a:	910c      	str	r1, [sp, #48]	; 0x30
 801ec0c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801ec10:	9016      	str	r0, [sp, #88]	; 0x58
 801ec12:	6850      	ldr	r0, [r2, #4]
 801ec14:	6812      	ldr	r2, [r2, #0]
 801ec16:	fb00 1303 	mla	r3, r0, r3, r1
 801ec1a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801ec1e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec20:	681b      	ldr	r3, [r3, #0]
 801ec22:	930b      	str	r3, [sp, #44]	; 0x2c
 801ec24:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec26:	685e      	ldr	r6, [r3, #4]
 801ec28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ec2a:	43db      	mvns	r3, r3
 801ec2c:	b2db      	uxtb	r3, r3
 801ec2e:	3604      	adds	r6, #4
 801ec30:	930a      	str	r3, [sp, #40]	; 0x28
 801ec32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ec34:	2b00      	cmp	r3, #0
 801ec36:	dc03      	bgt.n	801ec40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ec38:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801ec3a:	2b00      	cmp	r3, #0
 801ec3c:	f340 8225 	ble.w	801f08a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ec40:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec42:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ec46:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ec4a:	1e48      	subs	r0, r1, #1
 801ec4c:	1e57      	subs	r7, r2, #1
 801ec4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ec50:	2b00      	cmp	r3, #0
 801ec52:	f340 80e3 	ble.w	801ee1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ec56:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801ec5a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ec5e:	d406      	bmi.n	801ec6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ec60:	4584      	cmp	ip, r0
 801ec62:	da04      	bge.n	801ec6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ec64:	2b00      	cmp	r3, #0
 801ec66:	db02      	blt.n	801ec6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ec68:	42bb      	cmp	r3, r7
 801ec6a:	f2c0 80d8 	blt.w	801ee1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ec6e:	f11c 0c01 	adds.w	ip, ip, #1
 801ec72:	f100 80c9 	bmi.w	801ee08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ec76:	4561      	cmp	r1, ip
 801ec78:	f2c0 80c6 	blt.w	801ee08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ec7c:	3301      	adds	r3, #1
 801ec7e:	f100 80c3 	bmi.w	801ee08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ec82:	429a      	cmp	r2, r3
 801ec84:	f2c0 80c0 	blt.w	801ee08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ec88:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ec8c:	4647      	mov	r7, r8
 801ec8e:	f1bb 0f00 	cmp.w	fp, #0
 801ec92:	f340 80e3 	ble.w	801ee5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801ec96:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ec98:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec9a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ec9e:	689b      	ldr	r3, [r3, #8]
 801eca0:	ea5f 422a 	movs.w	r2, sl, asr #16
 801eca4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801eca8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801ecac:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ecb0:	f100 8121 	bmi.w	801eef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ecb4:	f103 39ff 	add.w	r9, r3, #4294967295
 801ecb8:	454a      	cmp	r2, r9
 801ecba:	f280 811c 	bge.w	801eef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ecbe:	f1bc 0f00 	cmp.w	ip, #0
 801ecc2:	f2c0 8118 	blt.w	801eef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ecc6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801ecca:	45cc      	cmp	ip, r9
 801eccc:	f280 8113 	bge.w	801eef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ecd0:	b21b      	sxth	r3, r3
 801ecd2:	fb0c 2203 	mla	r2, ip, r3, r2
 801ecd6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ecd8:	eb04 0902 	add.w	r9, r4, r2
 801ecdc:	5ca2      	ldrb	r2, [r4, r2]
 801ecde:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801ece2:	2800      	cmp	r0, #0
 801ece4:	f000 80fe 	beq.w	801eee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ece8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ecec:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801ecf0:	9211      	str	r2, [sp, #68]	; 0x44
 801ecf2:	b151      	cbz	r1, 801ed0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ecf4:	eb09 0203 	add.w	r2, r9, r3
 801ecf8:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ecfc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ed00:	930f      	str	r3, [sp, #60]	; 0x3c
 801ed02:	7853      	ldrb	r3, [r2, #1]
 801ed04:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ed08:	9312      	str	r3, [sp, #72]	; 0x48
 801ed0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ed0c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ed0e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ed12:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ed16:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ed1a:	ea4c 0c03 	orr.w	ip, ip, r3
 801ed1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ed20:	041b      	lsls	r3, r3, #16
 801ed22:	fb10 f201 	smulbb	r2, r0, r1
 801ed26:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ed2a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ed2e:	10d2      	asrs	r2, r2, #3
 801ed30:	4323      	orrs	r3, r4
 801ed32:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801ed36:	4353      	muls	r3, r2
 801ed38:	fb09 330c 	mla	r3, r9, ip, r3
 801ed3c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ed40:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ed44:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ed48:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ed4c:	f1c1 0c10 	rsb	ip, r1, #16
 801ed50:	ebac 0c00 	sub.w	ip, ip, r0
 801ed54:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ed58:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ed5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ed5e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ed60:	0418      	lsls	r0, r3, #16
 801ed62:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ed66:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ed6a:	4318      	orrs	r0, r3
 801ed6c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ed70:	fb02 c200 	mla	r2, r2, r0, ip
 801ed74:	0d53      	lsrs	r3, r2, #21
 801ed76:	0952      	lsrs	r2, r2, #5
 801ed78:	8838      	ldrh	r0, [r7, #0]
 801ed7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ed7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ed82:	431a      	orrs	r2, r3
 801ed84:	b292      	uxth	r2, r2
 801ed86:	1201      	asrs	r1, r0, #8
 801ed88:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801ed8c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ed90:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ed94:	fb11 f104 	smulbb	r1, r1, r4
 801ed98:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ed9c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801eda0:	00c0      	lsls	r0, r0, #3
 801eda2:	fb0c 1c03 	mla	ip, ip, r3, r1
 801eda6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801edaa:	10d1      	asrs	r1, r2, #3
 801edac:	b2c0      	uxtb	r0, r0
 801edae:	00d2      	lsls	r2, r2, #3
 801edb0:	b2d2      	uxtb	r2, r2
 801edb2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801edb6:	fb1e fe04 	smulbb	lr, lr, r4
 801edba:	fb10 f004 	smulbb	r0, r0, r4
 801edbe:	fa1f fc8c 	uxth.w	ip, ip
 801edc2:	fb01 e103 	mla	r1, r1, r3, lr
 801edc6:	fb02 0303 	mla	r3, r2, r3, r0
 801edca:	b29a      	uxth	r2, r3
 801edcc:	f10c 0301 	add.w	r3, ip, #1
 801edd0:	b289      	uxth	r1, r1
 801edd2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801edd6:	1c53      	adds	r3, r2, #1
 801edd8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eddc:	1c4a      	adds	r2, r1, #1
 801edde:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ede2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ede6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801edea:	0949      	lsrs	r1, r1, #5
 801edec:	ea43 030c 	orr.w	r3, r3, ip
 801edf0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801edf4:	430b      	orrs	r3, r1
 801edf6:	803b      	strh	r3, [r7, #0]
 801edf8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801edfa:	449a      	add	sl, r3
 801edfc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801edfe:	3702      	adds	r7, #2
 801ee00:	441d      	add	r5, r3
 801ee02:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ee06:	e742      	b.n	801ec8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ee08:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ee0a:	449a      	add	sl, r3
 801ee0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ee0e:	441d      	add	r5, r3
 801ee10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee12:	3b01      	subs	r3, #1
 801ee14:	9309      	str	r3, [sp, #36]	; 0x24
 801ee16:	f108 0802 	add.w	r8, r8, #2
 801ee1a:	e718      	b.n	801ec4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ee1c:	d023      	beq.n	801ee66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ee1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee20:	9825      	ldr	r0, [sp, #148]	; 0x94
 801ee22:	3b01      	subs	r3, #1
 801ee24:	fb00 a003 	mla	r0, r0, r3, sl
 801ee28:	1400      	asrs	r0, r0, #16
 801ee2a:	f53f af2d 	bmi.w	801ec88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ee2e:	3901      	subs	r1, #1
 801ee30:	4288      	cmp	r0, r1
 801ee32:	f6bf af29 	bge.w	801ec88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ee36:	9926      	ldr	r1, [sp, #152]	; 0x98
 801ee38:	fb01 5303 	mla	r3, r1, r3, r5
 801ee3c:	141b      	asrs	r3, r3, #16
 801ee3e:	f53f af23 	bmi.w	801ec88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ee42:	3a01      	subs	r2, #1
 801ee44:	4293      	cmp	r3, r2
 801ee46:	f6bf af1f 	bge.w	801ec88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ee4a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ee4e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801ee52:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801ee56:	f1be 0f00 	cmp.w	lr, #0
 801ee5a:	dc6c      	bgt.n	801ef36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ee5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee5e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ee62:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801ee66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee68:	2b00      	cmp	r3, #0
 801ee6a:	f340 810e 	ble.w	801f08a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ee6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ee72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ee76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ee7a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ee7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ee80:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ee84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ee88:	eef0 6a62 	vmov.f32	s13, s5
 801ee8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ee90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee94:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ee98:	ee16 aa90 	vmov	sl, s13
 801ee9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eea0:	eef0 6a43 	vmov.f32	s13, s6
 801eea4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eea8:	ee12 2a90 	vmov	r2, s5
 801eeac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eeb0:	fb92 f3f3 	sdiv	r3, r2, r3
 801eeb4:	ee13 2a10 	vmov	r2, s6
 801eeb8:	9325      	str	r3, [sp, #148]	; 0x94
 801eeba:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eebc:	fb92 f3f3 	sdiv	r3, r2, r3
 801eec0:	9326      	str	r3, [sp, #152]	; 0x98
 801eec2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eec4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801eec6:	3b01      	subs	r3, #1
 801eec8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eecc:	930c      	str	r3, [sp, #48]	; 0x30
 801eece:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eed0:	bf08      	it	eq
 801eed2:	4613      	moveq	r3, r2
 801eed4:	ee16 5a90 	vmov	r5, s13
 801eed8:	9309      	str	r3, [sp, #36]	; 0x24
 801eeda:	eeb0 3a67 	vmov.f32	s6, s15
 801eede:	eef0 2a47 	vmov.f32	s5, s14
 801eee2:	e6a6      	b.n	801ec32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801eee4:	2900      	cmp	r1, #0
 801eee6:	f43f af10 	beq.w	801ed0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801eeea:	f819 3003 	ldrb.w	r3, [r9, r3]
 801eeee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eef2:	930f      	str	r3, [sp, #60]	; 0x3c
 801eef4:	e709      	b.n	801ed0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801eef6:	f112 0901 	adds.w	r9, r2, #1
 801eefa:	f53f af7d 	bmi.w	801edf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eefe:	454b      	cmp	r3, r9
 801ef00:	f6ff af7a 	blt.w	801edf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ef04:	f11c 0901 	adds.w	r9, ip, #1
 801ef08:	f53f af76 	bmi.w	801edf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ef0c:	45ce      	cmp	lr, r9
 801ef0e:	f6ff af73 	blt.w	801edf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ef12:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ef14:	9202      	str	r2, [sp, #8]
 801ef16:	b21b      	sxth	r3, r3
 801ef18:	fa0f f28e 	sxth.w	r2, lr
 801ef1c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ef20:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ef24:	9201      	str	r2, [sp, #4]
 801ef26:	9300      	str	r3, [sp, #0]
 801ef28:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ef2a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ef2c:	4633      	mov	r3, r6
 801ef2e:	4639      	mov	r1, r7
 801ef30:	f7ff fd8e 	bl	801ea50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ef34:	e760      	b.n	801edf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ef36:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ef38:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ef3a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ef3e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ef42:	1429      	asrs	r1, r5, #16
 801ef44:	fb03 2101 	mla	r1, r3, r1, r2
 801ef48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ef4a:	440a      	add	r2, r1
 801ef4c:	5c61      	ldrb	r1, [r4, r1]
 801ef4e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ef52:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ef56:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ef5a:	f1bc 0f00 	cmp.w	ip, #0
 801ef5e:	f000 808c 	beq.w	801f07a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801ef62:	7857      	ldrb	r7, [r2, #1]
 801ef64:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ef68:	9413      	str	r4, [sp, #76]	; 0x4c
 801ef6a:	b140      	cbz	r0, 801ef7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ef6c:	18d7      	adds	r7, r2, r3
 801ef6e:	5cd3      	ldrb	r3, [r2, r3]
 801ef70:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ef74:	9310      	str	r3, [sp, #64]	; 0x40
 801ef76:	787b      	ldrb	r3, [r7, #1]
 801ef78:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ef7c:	9314      	str	r3, [sp, #80]	; 0x50
 801ef7e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ef80:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ef82:	fb1c f200 	smulbb	r2, ip, r0
 801ef86:	041f      	lsls	r7, r3, #16
 801ef88:	10d2      	asrs	r2, r2, #3
 801ef8a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ef8e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ef92:	431f      	orrs	r7, r3
 801ef94:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ef98:	9317      	str	r3, [sp, #92]	; 0x5c
 801ef9a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ef9c:	041b      	lsls	r3, r3, #16
 801ef9e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801efa2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801efa6:	ea43 030b 	orr.w	r3, r3, fp
 801efaa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801efac:	4353      	muls	r3, r2
 801efae:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801efb2:	fb04 3707 	mla	r7, r4, r7, r3
 801efb6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801efba:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801efbe:	ea43 0b01 	orr.w	fp, r3, r1
 801efc2:	f1c0 0110 	rsb	r1, r0, #16
 801efc6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801efc8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801efca:	eba1 0c0c 	sub.w	ip, r1, ip
 801efce:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801efd2:	fb0c 770b 	mla	r7, ip, fp, r7
 801efd6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801efda:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801efde:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801efe2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801efe6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801efea:	fb02 770c 	mla	r7, r2, ip, r7
 801efee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801eff0:	0d79      	lsrs	r1, r7, #21
 801eff2:	097f      	lsrs	r7, r7, #5
 801eff4:	8812      	ldrh	r2, [r2, #0]
 801eff6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801effa:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801effe:	430f      	orrs	r7, r1
 801f000:	b2bb      	uxth	r3, r7
 801f002:	1211      	asrs	r1, r2, #8
 801f004:	1218      	asrs	r0, r3, #8
 801f006:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f00a:	fb11 f104 	smulbb	r1, r1, r4
 801f00e:	10d7      	asrs	r7, r2, #3
 801f010:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f014:	00d2      	lsls	r2, r2, #3
 801f016:	fb00 1009 	mla	r0, r0, r9, r1
 801f01a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f01e:	10d9      	asrs	r1, r3, #3
 801f020:	b2d2      	uxtb	r2, r2
 801f022:	00db      	lsls	r3, r3, #3
 801f024:	fb17 f704 	smulbb	r7, r7, r4
 801f028:	fb12 f204 	smulbb	r2, r2, r4
 801f02c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f030:	b2db      	uxtb	r3, r3
 801f032:	b280      	uxth	r0, r0
 801f034:	fb01 7109 	mla	r1, r1, r9, r7
 801f038:	fb03 2309 	mla	r3, r3, r9, r2
 801f03c:	b29b      	uxth	r3, r3
 801f03e:	b289      	uxth	r1, r1
 801f040:	1c42      	adds	r2, r0, #1
 801f042:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f046:	1c4f      	adds	r7, r1, #1
 801f048:	1c5a      	adds	r2, r3, #1
 801f04a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f04e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f052:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f056:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f05a:	0949      	lsrs	r1, r1, #5
 801f05c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f05e:	4310      	orrs	r0, r2
 801f060:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f064:	4308      	orrs	r0, r1
 801f066:	f823 0b02 	strh.w	r0, [r3], #2
 801f06a:	930e      	str	r3, [sp, #56]	; 0x38
 801f06c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f06e:	449a      	add	sl, r3
 801f070:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f072:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f076:	441d      	add	r5, r3
 801f078:	e6ed      	b.n	801ee56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801f07a:	2800      	cmp	r0, #0
 801f07c:	f43f af7f 	beq.w	801ef7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f080:	5cd3      	ldrb	r3, [r2, r3]
 801f082:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f086:	9310      	str	r3, [sp, #64]	; 0x40
 801f088:	e779      	b.n	801ef7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f08a:	b019      	add	sp, #100	; 0x64
 801f08c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f090 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f090:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f094:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801f098:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801f09c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801f0a0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801f0a4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801f0a8:	8808      	ldrh	r0, [r1, #0]
 801f0aa:	fb08 470e 	mla	r7, r8, lr, r4
 801f0ae:	f1b8 0f00 	cmp.w	r8, #0
 801f0b2:	eb02 0907 	add.w	r9, r2, r7
 801f0b6:	db67      	blt.n	801f188 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f0b8:	45c2      	cmp	sl, r8
 801f0ba:	dd65      	ble.n	801f188 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f0bc:	2c00      	cmp	r4, #0
 801f0be:	db61      	blt.n	801f184 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f0c0:	45a6      	cmp	lr, r4
 801f0c2:	dd5f      	ble.n	801f184 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f0c4:	5dd2      	ldrb	r2, [r2, r7]
 801f0c6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f0ca:	1c62      	adds	r2, r4, #1
 801f0cc:	d45f      	bmi.n	801f18e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f0ce:	4596      	cmp	lr, r2
 801f0d0:	dd5d      	ble.n	801f18e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f0d2:	2d00      	cmp	r5, #0
 801f0d4:	d05b      	beq.n	801f18e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f0d6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f0da:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f0de:	f118 0801 	adds.w	r8, r8, #1
 801f0e2:	d458      	bmi.n	801f196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f0e4:	45c2      	cmp	sl, r8
 801f0e6:	dd56      	ble.n	801f196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f0e8:	2e00      	cmp	r6, #0
 801f0ea:	d054      	beq.n	801f196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f0ec:	2c00      	cmp	r4, #0
 801f0ee:	db50      	blt.n	801f192 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f0f0:	45a6      	cmp	lr, r4
 801f0f2:	dd4e      	ble.n	801f192 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f0f4:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f0f8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f0fc:	3401      	adds	r4, #1
 801f0fe:	d407      	bmi.n	801f110 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f100:	45a6      	cmp	lr, r4
 801f102:	dd05      	ble.n	801f110 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f104:	b125      	cbz	r5, 801f110 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f106:	44ce      	add	lr, r9
 801f108:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f10c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f110:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f114:	fb15 f406 	smulbb	r4, r5, r6
 801f118:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f11c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f120:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f124:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f128:	ea43 0c0c 	orr.w	ip, r3, ip
 801f12c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f130:	f1c6 0310 	rsb	r3, r6, #16
 801f134:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f138:	1b5b      	subs	r3, r3, r5
 801f13a:	ea4e 0707 	orr.w	r7, lr, r7
 801f13e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f142:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f146:	437d      	muls	r5, r7
 801f148:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f14c:	0403      	lsls	r3, r0, #16
 801f14e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f152:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f156:	4318      	orrs	r0, r3
 801f158:	0413      	lsls	r3, r2, #16
 801f15a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f15e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f162:	4313      	orrs	r3, r2
 801f164:	fb04 c000 	mla	r0, r4, r0, ip
 801f168:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f16c:	fb06 0003 	mla	r0, r6, r3, r0
 801f170:	0d43      	lsrs	r3, r0, #21
 801f172:	0940      	lsrs	r0, r0, #5
 801f174:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f178:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f17c:	4318      	orrs	r0, r3
 801f17e:	8008      	strh	r0, [r1, #0]
 801f180:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f184:	4684      	mov	ip, r0
 801f186:	e7a0      	b.n	801f0ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f188:	4607      	mov	r7, r0
 801f18a:	4684      	mov	ip, r0
 801f18c:	e7a7      	b.n	801f0de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f18e:	4607      	mov	r7, r0
 801f190:	e7a5      	b.n	801f0de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f192:	4602      	mov	r2, r0
 801f194:	e7b2      	b.n	801f0fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f196:	4602      	mov	r2, r0
 801f198:	e7ba      	b.n	801f110 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f19a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f19a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f19e:	b093      	sub	sp, #76	; 0x4c
 801f1a0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f1a4:	920f      	str	r2, [sp, #60]	; 0x3c
 801f1a6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f1a8:	9108      	str	r1, [sp, #32]
 801f1aa:	9306      	str	r3, [sp, #24]
 801f1ac:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f1b0:	9010      	str	r0, [sp, #64]	; 0x40
 801f1b2:	6850      	ldr	r0, [r2, #4]
 801f1b4:	6812      	ldr	r2, [r2, #0]
 801f1b6:	fb00 1303 	mla	r3, r0, r3, r1
 801f1ba:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f1be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f1c0:	681b      	ldr	r3, [r3, #0]
 801f1c2:	9307      	str	r3, [sp, #28]
 801f1c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f1c6:	685f      	ldr	r7, [r3, #4]
 801f1c8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f1cc:	3704      	adds	r7, #4
 801f1ce:	9b08      	ldr	r3, [sp, #32]
 801f1d0:	2b00      	cmp	r3, #0
 801f1d2:	dc03      	bgt.n	801f1dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f1d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f1d6:	2b00      	cmp	r3, #0
 801f1d8:	f340 81b2 	ble.w	801f540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f1dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f1de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f1e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f1e6:	1e48      	subs	r0, r1, #1
 801f1e8:	f102 3cff 	add.w	ip, r2, #4294967295
 801f1ec:	9b06      	ldr	r3, [sp, #24]
 801f1ee:	2b00      	cmp	r3, #0
 801f1f0:	f340 80a9 	ble.w	801f346 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f1f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f1f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f1fc:	d406      	bmi.n	801f20c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f1fe:	4586      	cmp	lr, r0
 801f200:	da04      	bge.n	801f20c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f202:	2b00      	cmp	r3, #0
 801f204:	db02      	blt.n	801f20c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f206:	4563      	cmp	r3, ip
 801f208:	f2c0 809e 	blt.w	801f348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f20c:	f11e 0e01 	adds.w	lr, lr, #1
 801f210:	f100 808f 	bmi.w	801f332 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f214:	4571      	cmp	r1, lr
 801f216:	f2c0 808c 	blt.w	801f332 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f21a:	3301      	adds	r3, #1
 801f21c:	f100 8089 	bmi.w	801f332 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f220:	429a      	cmp	r2, r3
 801f222:	f2c0 8086 	blt.w	801f332 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f226:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f22a:	46c8      	mov	r8, r9
 801f22c:	f1bb 0f00 	cmp.w	fp, #0
 801f230:	f340 80a6 	ble.w	801f380 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f234:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801f236:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f238:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f23c:	689b      	ldr	r3, [r3, #8]
 801f23e:	1422      	asrs	r2, r4, #16
 801f240:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f244:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f248:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f24c:	f100 80e3 	bmi.w	801f416 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f250:	f103 3aff 	add.w	sl, r3, #4294967295
 801f254:	4552      	cmp	r2, sl
 801f256:	f280 80de 	bge.w	801f416 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f25a:	f1bc 0f00 	cmp.w	ip, #0
 801f25e:	f2c0 80da 	blt.w	801f416 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f262:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f266:	45d4      	cmp	ip, sl
 801f268:	f280 80d5 	bge.w	801f416 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f26c:	b21b      	sxth	r3, r3
 801f26e:	fb0c 2203 	mla	r2, ip, r3, r2
 801f272:	9d07      	ldr	r5, [sp, #28]
 801f274:	eb05 0a02 	add.w	sl, r5, r2
 801f278:	5caa      	ldrb	r2, [r5, r2]
 801f27a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f27e:	2800      	cmp	r0, #0
 801f280:	f000 80c0 	beq.w	801f404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f284:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f288:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f28c:	920b      	str	r2, [sp, #44]	; 0x2c
 801f28e:	b151      	cbz	r1, 801f2a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f290:	eb0a 0203 	add.w	r2, sl, r3
 801f294:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f298:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f29c:	9309      	str	r3, [sp, #36]	; 0x24
 801f29e:	7853      	ldrb	r3, [r2, #1]
 801f2a0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f2a4:	930c      	str	r3, [sp, #48]	; 0x30
 801f2a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f2a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f2aa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f2ae:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f2b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f2b6:	ea4c 0c03 	orr.w	ip, ip, r3
 801f2ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f2bc:	041b      	lsls	r3, r3, #16
 801f2be:	fb10 f201 	smulbb	r2, r0, r1
 801f2c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f2c6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f2ca:	10d2      	asrs	r2, r2, #3
 801f2cc:	432b      	orrs	r3, r5
 801f2ce:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f2d2:	4353      	muls	r3, r2
 801f2d4:	fb0a 330c 	mla	r3, sl, ip, r3
 801f2d8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f2dc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f2e0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f2e4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f2e8:	f1c1 0c10 	rsb	ip, r1, #16
 801f2ec:	ebac 0c00 	sub.w	ip, ip, r0
 801f2f0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f2f4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f2f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f2fa:	0418      	lsls	r0, r3, #16
 801f2fc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f300:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f304:	4318      	orrs	r0, r3
 801f306:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f30a:	fb02 c200 	mla	r2, r2, r0, ip
 801f30e:	0d53      	lsrs	r3, r2, #21
 801f310:	0952      	lsrs	r2, r2, #5
 801f312:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f316:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f31a:	431a      	orrs	r2, r3
 801f31c:	f8a8 2000 	strh.w	r2, [r8]
 801f320:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f322:	441c      	add	r4, r3
 801f324:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f326:	f108 0802 	add.w	r8, r8, #2
 801f32a:	441e      	add	r6, r3
 801f32c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f330:	e77c      	b.n	801f22c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f332:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f334:	441c      	add	r4, r3
 801f336:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f338:	441e      	add	r6, r3
 801f33a:	9b06      	ldr	r3, [sp, #24]
 801f33c:	3b01      	subs	r3, #1
 801f33e:	9306      	str	r3, [sp, #24]
 801f340:	f109 0902 	add.w	r9, r9, #2
 801f344:	e752      	b.n	801f1ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f346:	d020      	beq.n	801f38a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f348:	9b06      	ldr	r3, [sp, #24]
 801f34a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f34c:	3b01      	subs	r3, #1
 801f34e:	fb00 4003 	mla	r0, r0, r3, r4
 801f352:	1400      	asrs	r0, r0, #16
 801f354:	f53f af67 	bmi.w	801f226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f358:	3901      	subs	r1, #1
 801f35a:	4288      	cmp	r0, r1
 801f35c:	f6bf af63 	bge.w	801f226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f360:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f362:	fb01 6303 	mla	r3, r1, r3, r6
 801f366:	141b      	asrs	r3, r3, #16
 801f368:	f53f af5d 	bmi.w	801f226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f36c:	3a01      	subs	r2, #1
 801f36e:	4293      	cmp	r3, r2
 801f370:	f6bf af59 	bge.w	801f226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f374:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f378:	46ca      	mov	sl, r9
 801f37a:	f1b8 0f00 	cmp.w	r8, #0
 801f37e:	dc67      	bgt.n	801f450 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f380:	9b06      	ldr	r3, [sp, #24]
 801f382:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f386:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f38a:	9b08      	ldr	r3, [sp, #32]
 801f38c:	2b00      	cmp	r3, #0
 801f38e:	f340 80d7 	ble.w	801f540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f392:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f396:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f39a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f39e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f3a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f3a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f3a8:	eeb0 6a62 	vmov.f32	s12, s5
 801f3ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f3b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f3b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f3b8:	ee16 4a10 	vmov	r4, s12
 801f3bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f3c0:	eeb0 6a43 	vmov.f32	s12, s6
 801f3c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f3c8:	ee12 2a90 	vmov	r2, s5
 801f3cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f3d0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3d4:	ee13 2a10 	vmov	r2, s6
 801f3d8:	931f      	str	r3, [sp, #124]	; 0x7c
 801f3da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f3dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3e0:	9320      	str	r3, [sp, #128]	; 0x80
 801f3e2:	9b08      	ldr	r3, [sp, #32]
 801f3e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f3e6:	3b01      	subs	r3, #1
 801f3e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f3ec:	9308      	str	r3, [sp, #32]
 801f3ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f3f0:	bf08      	it	eq
 801f3f2:	4613      	moveq	r3, r2
 801f3f4:	ee16 6a10 	vmov	r6, s12
 801f3f8:	9306      	str	r3, [sp, #24]
 801f3fa:	eeb0 3a67 	vmov.f32	s6, s15
 801f3fe:	eef0 2a47 	vmov.f32	s5, s14
 801f402:	e6e4      	b.n	801f1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f404:	2900      	cmp	r1, #0
 801f406:	f43f af4e 	beq.w	801f2a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f40a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f40e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f412:	9309      	str	r3, [sp, #36]	; 0x24
 801f414:	e747      	b.n	801f2a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f416:	f112 0a01 	adds.w	sl, r2, #1
 801f41a:	d481      	bmi.n	801f320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f41c:	4553      	cmp	r3, sl
 801f41e:	f6ff af7f 	blt.w	801f320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f422:	f11c 0a01 	adds.w	sl, ip, #1
 801f426:	f53f af7b 	bmi.w	801f320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f42a:	45d6      	cmp	lr, sl
 801f42c:	f6ff af78 	blt.w	801f320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f430:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f434:	b21b      	sxth	r3, r3
 801f436:	fa0f f28e 	sxth.w	r2, lr
 801f43a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f43e:	9201      	str	r2, [sp, #4]
 801f440:	9300      	str	r3, [sp, #0]
 801f442:	9a07      	ldr	r2, [sp, #28]
 801f444:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f446:	463b      	mov	r3, r7
 801f448:	4641      	mov	r1, r8
 801f44a:	f7ff fe21 	bl	801f090 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f44e:	e767      	b.n	801f320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f450:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f452:	9d07      	ldr	r5, [sp, #28]
 801f454:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f458:	1422      	asrs	r2, r4, #16
 801f45a:	1431      	asrs	r1, r6, #16
 801f45c:	fb03 2101 	mla	r1, r3, r1, r2
 801f460:	9a07      	ldr	r2, [sp, #28]
 801f462:	440a      	add	r2, r1
 801f464:	5c69      	ldrb	r1, [r5, r1]
 801f466:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f46a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f46e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f472:	f1be 0f00 	cmp.w	lr, #0
 801f476:	d05c      	beq.n	801f532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f478:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f47c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f480:	950d      	str	r5, [sp, #52]	; 0x34
 801f482:	b150      	cbz	r0, 801f49a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f484:	eb02 0c03 	add.w	ip, r2, r3
 801f488:	5cd3      	ldrb	r3, [r2, r3]
 801f48a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f48e:	930a      	str	r3, [sp, #40]	; 0x28
 801f490:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f494:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f498:	930e      	str	r3, [sp, #56]	; 0x38
 801f49a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f49c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f49e:	fb1e f200 	smulbb	r2, lr, r0
 801f4a2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f4a6:	10d2      	asrs	r2, r2, #3
 801f4a8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f4ac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f4b0:	ea4c 0c03 	orr.w	ip, ip, r3
 801f4b4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f4b8:	9311      	str	r3, [sp, #68]	; 0x44
 801f4ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f4bc:	041b      	lsls	r3, r3, #16
 801f4be:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f4c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f4c6:	ea43 030b 	orr.w	r3, r3, fp
 801f4ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f4cc:	4353      	muls	r3, r2
 801f4ce:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f4d2:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f4d6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f4da:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f4de:	ea43 0b01 	orr.w	fp, r3, r1
 801f4e2:	f1c0 0110 	rsb	r1, r0, #16
 801f4e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f4e8:	eba1 0e0e 	sub.w	lr, r1, lr
 801f4ec:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f4f0:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f4f4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f4f8:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f4fc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f500:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f504:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f508:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f50c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f510:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f514:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f518:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f51c:	ea43 0c0c 	orr.w	ip, r3, ip
 801f520:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f522:	f82a cb02 	strh.w	ip, [sl], #2
 801f526:	441c      	add	r4, r3
 801f528:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f52a:	f108 38ff 	add.w	r8, r8, #4294967295
 801f52e:	441e      	add	r6, r3
 801f530:	e723      	b.n	801f37a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f532:	2800      	cmp	r0, #0
 801f534:	d0b1      	beq.n	801f49a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f536:	5cd3      	ldrb	r3, [r2, r3]
 801f538:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f53c:	930a      	str	r3, [sp, #40]	; 0x28
 801f53e:	e7ac      	b.n	801f49a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f540:	b013      	add	sp, #76	; 0x4c
 801f542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f546:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f54a:	880d      	ldrh	r5, [r1, #0]
 801f54c:	b087      	sub	sp, #28
 801f54e:	10ef      	asrs	r7, r5, #3
 801f550:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f554:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f558:	00ed      	lsls	r5, r5, #3
 801f55a:	9701      	str	r7, [sp, #4]
 801f55c:	b2ed      	uxtb	r5, r5
 801f55e:	9502      	str	r5, [sp, #8]
 801f560:	9d01      	ldr	r5, [sp, #4]
 801f562:	9103      	str	r1, [sp, #12]
 801f564:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f568:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f56c:	9902      	ldr	r1, [sp, #8]
 801f56e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f572:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f576:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f57a:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f57e:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f582:	022d      	lsls	r5, r5, #8
 801f584:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f588:	fb06 0709 	mla	r7, r6, r9, r0
 801f58c:	430d      	orrs	r5, r1
 801f58e:	2e00      	cmp	r6, #0
 801f590:	eb02 0c07 	add.w	ip, r2, r7
 801f594:	9505      	str	r5, [sp, #20]
 801f596:	f2c0 80b6 	blt.w	801f706 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f59a:	45b3      	cmp	fp, r6
 801f59c:	f340 80b3 	ble.w	801f706 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f5a0:	2800      	cmp	r0, #0
 801f5a2:	f2c0 80ae 	blt.w	801f702 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f5a6:	4581      	cmp	r9, r0
 801f5a8:	f340 80ab 	ble.w	801f702 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f5ac:	5dd7      	ldrb	r7, [r2, r7]
 801f5ae:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f5b2:	441f      	add	r7, r3
 801f5b4:	1c42      	adds	r2, r0, #1
 801f5b6:	f100 80a9 	bmi.w	801f70c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f5ba:	4591      	cmp	r9, r2
 801f5bc:	f340 80a6 	ble.w	801f70c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f5c0:	2c00      	cmp	r4, #0
 801f5c2:	f000 80a3 	beq.w	801f70c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f5c6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f5ca:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f5ce:	441d      	add	r5, r3
 801f5d0:	3601      	adds	r6, #1
 801f5d2:	f100 809f 	bmi.w	801f714 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f5d6:	45b3      	cmp	fp, r6
 801f5d8:	f340 809c 	ble.w	801f714 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f5dc:	f1be 0f00 	cmp.w	lr, #0
 801f5e0:	f000 8098 	beq.w	801f714 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f5e4:	2800      	cmp	r0, #0
 801f5e6:	f2c0 8093 	blt.w	801f710 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f5ea:	4581      	cmp	r9, r0
 801f5ec:	f340 8090 	ble.w	801f710 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f5f0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f5f4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f5f8:	441e      	add	r6, r3
 801f5fa:	3001      	adds	r0, #1
 801f5fc:	f100 808d 	bmi.w	801f71a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f600:	4581      	cmp	r9, r0
 801f602:	f340 808a 	ble.w	801f71a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f606:	2c00      	cmp	r4, #0
 801f608:	f000 8087 	beq.w	801f71a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f60c:	44e1      	add	r9, ip
 801f60e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f612:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f616:	4413      	add	r3, r2
 801f618:	b2a4      	uxth	r4, r4
 801f61a:	fa1f fe8e 	uxth.w	lr, lr
 801f61e:	fb04 fb0e 	mul.w	fp, r4, lr
 801f622:	0124      	lsls	r4, r4, #4
 801f624:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f628:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f62c:	eba4 040b 	sub.w	r4, r4, fp
 801f630:	fa1f f08e 	uxth.w	r0, lr
 801f634:	b2a2      	uxth	r2, r4
 801f636:	78ac      	ldrb	r4, [r5, #2]
 801f638:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f63c:	9901      	ldr	r1, [sp, #4]
 801f63e:	eba9 0900 	sub.w	r9, r9, r0
 801f642:	fa1f f989 	uxth.w	r9, r9
 801f646:	4354      	muls	r4, r2
 801f648:	fb09 440c 	mla	r4, r9, ip, r4
 801f64c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f650:	fb00 440c 	mla	r4, r0, ip, r4
 801f654:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f658:	fa1f fe88 	uxth.w	lr, r8
 801f65c:	ea6f 0808 	mvn.w	r8, r8
 801f660:	fa5f f888 	uxtb.w	r8, r8
 801f664:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f668:	fb1a fa08 	smulbb	sl, sl, r8
 801f66c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f670:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f674:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f678:	787c      	ldrb	r4, [r7, #1]
 801f67a:	782d      	ldrb	r5, [r5, #0]
 801f67c:	783f      	ldrb	r7, [r7, #0]
 801f67e:	fb02 fa0a 	mul.w	sl, r2, sl
 801f682:	fb09 aa04 	mla	sl, r9, r4, sl
 801f686:	7874      	ldrb	r4, [r6, #1]
 801f688:	436a      	muls	r2, r5
 801f68a:	7835      	ldrb	r5, [r6, #0]
 801f68c:	fb00 aa04 	mla	sl, r0, r4, sl
 801f690:	fb09 2207 	mla	r2, r9, r7, r2
 801f694:	785c      	ldrb	r4, [r3, #1]
 801f696:	781b      	ldrb	r3, [r3, #0]
 801f698:	fb00 2005 	mla	r0, r0, r5, r2
 801f69c:	fb0b a404 	mla	r4, fp, r4, sl
 801f6a0:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f6a4:	9b02      	ldr	r3, [sp, #8]
 801f6a6:	fb11 fa08 	smulbb	sl, r1, r8
 801f6aa:	fa1f fc8c 	uxth.w	ip, ip
 801f6ae:	fb13 f808 	smulbb	r8, r3, r8
 801f6b2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f6b6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f6ba:	fb04 a40e 	mla	r4, r4, lr, sl
 801f6be:	f10c 0301 	add.w	r3, ip, #1
 801f6c2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f6c6:	fa1f fe8e 	uxth.w	lr, lr
 801f6ca:	b2a4      	uxth	r4, r4
 801f6cc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f6d0:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f6d4:	f104 0a01 	add.w	sl, r4, #1
 801f6d8:	f10e 0c01 	add.w	ip, lr, #1
 801f6dc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f6e0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f6e4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f6e8:	0964      	lsrs	r4, r4, #5
 801f6ea:	ea4c 0c03 	orr.w	ip, ip, r3
 801f6ee:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f6f2:	9b03      	ldr	r3, [sp, #12]
 801f6f4:	ea4c 0c04 	orr.w	ip, ip, r4
 801f6f8:	f8a3 c000 	strh.w	ip, [r3]
 801f6fc:	b007      	add	sp, #28
 801f6fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f702:	af05      	add	r7, sp, #20
 801f704:	e756      	b.n	801f5b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f706:	ad05      	add	r5, sp, #20
 801f708:	462f      	mov	r7, r5
 801f70a:	e761      	b.n	801f5d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f70c:	ad05      	add	r5, sp, #20
 801f70e:	e75f      	b.n	801f5d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f710:	ae05      	add	r6, sp, #20
 801f712:	e772      	b.n	801f5fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f714:	ab05      	add	r3, sp, #20
 801f716:	461e      	mov	r6, r3
 801f718:	e77e      	b.n	801f618 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f71a:	ab05      	add	r3, sp, #20
 801f71c:	e77c      	b.n	801f618 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f71e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f71e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f722:	b095      	sub	sp, #84	; 0x54
 801f724:	9212      	str	r2, [sp, #72]	; 0x48
 801f726:	9309      	str	r3, [sp, #36]	; 0x24
 801f728:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f72a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f72e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f730:	910e      	str	r1, [sp, #56]	; 0x38
 801f732:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f736:	9013      	str	r0, [sp, #76]	; 0x4c
 801f738:	6850      	ldr	r0, [r2, #4]
 801f73a:	6812      	ldr	r2, [r2, #0]
 801f73c:	fb00 1303 	mla	r3, r0, r3, r1
 801f740:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f744:	930a      	str	r3, [sp, #40]	; 0x28
 801f746:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f748:	681b      	ldr	r3, [r3, #0]
 801f74a:	930d      	str	r3, [sp, #52]	; 0x34
 801f74c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f74e:	685c      	ldr	r4, [r3, #4]
 801f750:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f752:	43db      	mvns	r3, r3
 801f754:	b2db      	uxtb	r3, r3
 801f756:	3404      	adds	r4, #4
 801f758:	930b      	str	r3, [sp, #44]	; 0x2c
 801f75a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f75c:	2b00      	cmp	r3, #0
 801f75e:	dc03      	bgt.n	801f768 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f760:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f762:	2b00      	cmp	r3, #0
 801f764:	f340 8255 	ble.w	801fc12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f768:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f76a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f76e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f772:	1e48      	subs	r0, r1, #1
 801f774:	1e55      	subs	r5, r2, #1
 801f776:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f778:	2b00      	cmp	r3, #0
 801f77a:	f340 80f9 	ble.w	801f970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f77e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f780:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f782:	1436      	asrs	r6, r6, #16
 801f784:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f788:	d406      	bmi.n	801f798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f78a:	4286      	cmp	r6, r0
 801f78c:	da04      	bge.n	801f798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f78e:	2b00      	cmp	r3, #0
 801f790:	db02      	blt.n	801f798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f792:	42ab      	cmp	r3, r5
 801f794:	f2c0 80ed 	blt.w	801f972 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f798:	3601      	adds	r6, #1
 801f79a:	f100 80da 	bmi.w	801f952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f79e:	42b1      	cmp	r1, r6
 801f7a0:	f2c0 80d7 	blt.w	801f952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f7a4:	3301      	adds	r3, #1
 801f7a6:	f100 80d4 	bmi.w	801f952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f7aa:	429a      	cmp	r2, r3
 801f7ac:	f2c0 80d1 	blt.w	801f952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f7b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7b2:	9311      	str	r3, [sp, #68]	; 0x44
 801f7b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f7b6:	930c      	str	r3, [sp, #48]	; 0x30
 801f7b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f7ba:	2b00      	cmp	r3, #0
 801f7bc:	f340 80fa 	ble.w	801f9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f7c0:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f7c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f7c4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f7c6:	68c6      	ldr	r6, [r0, #12]
 801f7c8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f7ca:	141d      	asrs	r5, r3, #16
 801f7cc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f7d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f7d2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f7d4:	1400      	asrs	r0, r0, #16
 801f7d6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f7da:	6892      	ldr	r2, [r2, #8]
 801f7dc:	f100 813e 	bmi.w	801fa5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f7e0:	1e57      	subs	r7, r2, #1
 801f7e2:	42b8      	cmp	r0, r7
 801f7e4:	f280 813a 	bge.w	801fa5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f7e8:	2d00      	cmp	r5, #0
 801f7ea:	f2c0 8137 	blt.w	801fa5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f7ee:	1e77      	subs	r7, r6, #1
 801f7f0:	42bd      	cmp	r5, r7
 801f7f2:	f280 8133 	bge.w	801fa5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f7f6:	b212      	sxth	r2, r2
 801f7f8:	fb05 0002 	mla	r0, r5, r2, r0
 801f7fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f7fe:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f802:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f806:	182e      	adds	r6, r5, r0
 801f808:	eb04 050a 	add.w	r5, r4, sl
 801f80c:	2b00      	cmp	r3, #0
 801f80e:	f000 8117 	beq.w	801fa40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f812:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f816:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f81a:	44a4      	add	ip, r4
 801f81c:	2900      	cmp	r1, #0
 801f81e:	f000 8117 	beq.w	801fa50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f822:	18b0      	adds	r0, r6, r2
 801f824:	5cb2      	ldrb	r2, [r6, r2]
 801f826:	7840      	ldrb	r0, [r0, #1]
 801f828:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f82c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f830:	4422      	add	r2, r4
 801f832:	4420      	add	r0, r4
 801f834:	b29b      	uxth	r3, r3
 801f836:	b289      	uxth	r1, r1
 801f838:	fb03 f901 	mul.w	r9, r3, r1
 801f83c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f840:	011b      	lsls	r3, r3, #4
 801f842:	b289      	uxth	r1, r1
 801f844:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f848:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f84c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f84e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f852:	f8b6 e000 	ldrh.w	lr, [r6]
 801f856:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f85a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f85e:	eba3 0309 	sub.w	r3, r3, r9
 801f862:	b29b      	uxth	r3, r3
 801f864:	eba8 0801 	sub.w	r8, r8, r1
 801f868:	fa1f f888 	uxth.w	r8, r8
 801f86c:	435f      	muls	r7, r3
 801f86e:	fb08 770b 	mla	r7, r8, fp, r7
 801f872:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f876:	9310      	str	r3, [sp, #64]	; 0x40
 801f878:	fb01 770b 	mla	r7, r1, fp, r7
 801f87c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f880:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f882:	fb09 770b 	mla	r7, r9, fp, r7
 801f886:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f88a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f88e:	fb1b fb03 	smulbb	fp, fp, r3
 801f892:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f896:	fb07 b706 	mla	r7, r7, r6, fp
 801f89a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f89c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f8a0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f8a4:	f89c c000 	ldrb.w	ip, [ip]
 801f8a8:	435d      	muls	r5, r3
 801f8aa:	fb08 550b 	mla	r5, r8, fp, r5
 801f8ae:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f8b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f8b4:	fb01 550b 	mla	r5, r1, fp, r5
 801f8b8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f8bc:	fb09 550b 	mla	r5, r9, fp, r5
 801f8c0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f8c4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f8c8:	fb1b fb03 	smulbb	fp, fp, r3
 801f8cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f8ce:	fb03 f30c 	mul.w	r3, r3, ip
 801f8d2:	f892 c000 	ldrb.w	ip, [r2]
 801f8d6:	fb08 330a 	mla	r3, r8, sl, r3
 801f8da:	fb01 330c 	mla	r3, r1, ip, r3
 801f8de:	f890 c000 	ldrb.w	ip, [r0]
 801f8e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f8e6:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f8ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f8ec:	fa5f fe8e 	uxtb.w	lr, lr
 801f8f0:	b2bf      	uxth	r7, r7
 801f8f2:	fb1e fe03 	smulbb	lr, lr, r3
 801f8f6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f8fa:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f8fe:	fb05 b506 	mla	r5, r5, r6, fp
 801f902:	1c7b      	adds	r3, r7, #1
 801f904:	fb0c e606 	mla	r6, ip, r6, lr
 801f908:	b2ad      	uxth	r5, r5
 801f90a:	b2b6      	uxth	r6, r6
 801f90c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f910:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f914:	f105 0b01 	add.w	fp, r5, #1
 801f918:	1c77      	adds	r7, r6, #1
 801f91a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f91e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f922:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f926:	096d      	lsrs	r5, r5, #5
 801f928:	431f      	orrs	r7, r3
 801f92a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f92e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f930:	433d      	orrs	r5, r7
 801f932:	801d      	strh	r5, [r3, #0]
 801f934:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f936:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f938:	3302      	adds	r3, #2
 801f93a:	930c      	str	r3, [sp, #48]	; 0x30
 801f93c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f93e:	4413      	add	r3, r2
 801f940:	931f      	str	r3, [sp, #124]	; 0x7c
 801f942:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f944:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f946:	4413      	add	r3, r2
 801f948:	9320      	str	r3, [sp, #128]	; 0x80
 801f94a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f94c:	3b01      	subs	r3, #1
 801f94e:	9311      	str	r3, [sp, #68]	; 0x44
 801f950:	e732      	b.n	801f7b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f952:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f954:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f956:	4433      	add	r3, r6
 801f958:	931f      	str	r3, [sp, #124]	; 0x7c
 801f95a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f95c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f95e:	4433      	add	r3, r6
 801f960:	9320      	str	r3, [sp, #128]	; 0x80
 801f962:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f964:	3b01      	subs	r3, #1
 801f966:	9309      	str	r3, [sp, #36]	; 0x24
 801f968:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f96a:	3302      	adds	r3, #2
 801f96c:	930a      	str	r3, [sp, #40]	; 0x28
 801f96e:	e702      	b.n	801f776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f970:	d027      	beq.n	801f9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f972:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f974:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f976:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f978:	3b01      	subs	r3, #1
 801f97a:	fb00 5003 	mla	r0, r0, r3, r5
 801f97e:	1400      	asrs	r0, r0, #16
 801f980:	f53f af16 	bmi.w	801f7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f984:	3901      	subs	r1, #1
 801f986:	4288      	cmp	r0, r1
 801f988:	f6bf af12 	bge.w	801f7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f98c:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f98e:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f990:	fb01 0303 	mla	r3, r1, r3, r0
 801f994:	141b      	asrs	r3, r3, #16
 801f996:	f53f af0b 	bmi.w	801f7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f99a:	3a01      	subs	r2, #1
 801f99c:	4293      	cmp	r3, r2
 801f99e:	f6bf af07 	bge.w	801f7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f9a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9a4:	9311      	str	r3, [sp, #68]	; 0x44
 801f9a6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f9aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f9ac:	930c      	str	r3, [sp, #48]	; 0x30
 801f9ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f9b0:	2b00      	cmp	r3, #0
 801f9b2:	dc70      	bgt.n	801fa96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f9b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f9b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f9bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f9c0:	930a      	str	r3, [sp, #40]	; 0x28
 801f9c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f9c4:	2b00      	cmp	r3, #0
 801f9c6:	f340 8124 	ble.w	801fc12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f9ca:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f9ce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f9d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f9d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f9d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f9dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f9e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f9e4:	eef0 6a62 	vmov.f32	s13, s5
 801f9e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f9ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f9f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f9f4:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f9f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f9fc:	eef0 6a43 	vmov.f32	s13, s6
 801fa00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fa04:	ee12 2a90 	vmov	r2, s5
 801fa08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fa0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa10:	ee13 2a10 	vmov	r2, s6
 801fa14:	9321      	str	r3, [sp, #132]	; 0x84
 801fa16:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fa18:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa1c:	9322      	str	r3, [sp, #136]	; 0x88
 801fa1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fa20:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fa22:	3b01      	subs	r3, #1
 801fa24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa28:	930e      	str	r3, [sp, #56]	; 0x38
 801fa2a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fa2c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801fa30:	bf08      	it	eq
 801fa32:	4613      	moveq	r3, r2
 801fa34:	9309      	str	r3, [sp, #36]	; 0x24
 801fa36:	eeb0 3a67 	vmov.f32	s6, s15
 801fa3a:	eef0 2a47 	vmov.f32	s5, s14
 801fa3e:	e68c      	b.n	801f75a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801fa40:	b149      	cbz	r1, 801fa56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801fa42:	5cb2      	ldrb	r2, [r6, r2]
 801fa44:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa48:	4422      	add	r2, r4
 801fa4a:	4628      	mov	r0, r5
 801fa4c:	46ac      	mov	ip, r5
 801fa4e:	e6f1      	b.n	801f834 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fa50:	4628      	mov	r0, r5
 801fa52:	462a      	mov	r2, r5
 801fa54:	e6ee      	b.n	801f834 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fa56:	4628      	mov	r0, r5
 801fa58:	462a      	mov	r2, r5
 801fa5a:	e7f7      	b.n	801fa4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801fa5c:	1c47      	adds	r7, r0, #1
 801fa5e:	f53f af69 	bmi.w	801f934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fa62:	42ba      	cmp	r2, r7
 801fa64:	f6ff af66 	blt.w	801f934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fa68:	1c6f      	adds	r7, r5, #1
 801fa6a:	f53f af63 	bmi.w	801f934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fa6e:	42be      	cmp	r6, r7
 801fa70:	f6ff af60 	blt.w	801f934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fa74:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801fa76:	9002      	str	r0, [sp, #8]
 801fa78:	b236      	sxth	r6, r6
 801fa7a:	b212      	sxth	r2, r2
 801fa7c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801fa80:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801fa84:	9200      	str	r2, [sp, #0]
 801fa86:	9601      	str	r6, [sp, #4]
 801fa88:	4623      	mov	r3, r4
 801fa8a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801fa8e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fa90:	f7ff fd59 	bl	801f546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801fa94:	e74e      	b.n	801f934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fa96:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fa98:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fa9a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801fa9c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fa9e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801faa2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801faa4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801faa8:	142d      	asrs	r5, r5, #16
 801faaa:	1400      	asrs	r0, r0, #16
 801faac:	fb02 5000 	mla	r0, r2, r0, r5
 801fab0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fab2:	f815 9000 	ldrb.w	r9, [r5, r0]
 801fab6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801faba:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801fabe:	182e      	adds	r6, r5, r0
 801fac0:	eb04 0509 	add.w	r5, r4, r9
 801fac4:	2b00      	cmp	r3, #0
 801fac6:	f000 8096 	beq.w	801fbf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801faca:	7877      	ldrb	r7, [r6, #1]
 801facc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fad0:	4427      	add	r7, r4
 801fad2:	2900      	cmp	r1, #0
 801fad4:	f000 8097 	beq.w	801fc06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801fad8:	18b0      	adds	r0, r6, r2
 801fada:	5cb2      	ldrb	r2, [r6, r2]
 801fadc:	7840      	ldrb	r0, [r0, #1]
 801fade:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fae2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fae6:	4422      	add	r2, r4
 801fae8:	4420      	add	r0, r4
 801faea:	b29b      	uxth	r3, r3
 801faec:	b289      	uxth	r1, r1
 801faee:	fb03 f801 	mul.w	r8, r3, r1
 801faf2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801faf4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801faf8:	f8b6 c000 	ldrh.w	ip, [r6]
 801fafc:	78be      	ldrb	r6, [r7, #2]
 801fafe:	f814 9009 	ldrb.w	r9, [r4, r9]
 801fb02:	011b      	lsls	r3, r3, #4
 801fb04:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801fb08:	b289      	uxth	r1, r1
 801fb0a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fb0e:	eba3 0308 	sub.w	r3, r3, r8
 801fb12:	b29b      	uxth	r3, r3
 801fb14:	ebae 0e01 	sub.w	lr, lr, r1
 801fb18:	fa1f fe8e 	uxth.w	lr, lr
 801fb1c:	435e      	muls	r6, r3
 801fb1e:	fb0e 660b 	mla	r6, lr, fp, r6
 801fb22:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fb26:	9310      	str	r3, [sp, #64]	; 0x40
 801fb28:	fb01 660b 	mla	r6, r1, fp, r6
 801fb2c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fb30:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb32:	fb08 660b 	mla	r6, r8, fp, r6
 801fb36:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801fb3a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801fb3e:	fb1b fb03 	smulbb	fp, fp, r3
 801fb42:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fb46:	fb06 b60a 	mla	r6, r6, sl, fp
 801fb4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fb4c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fb50:	787d      	ldrb	r5, [r7, #1]
 801fb52:	783f      	ldrb	r7, [r7, #0]
 801fb54:	435d      	muls	r5, r3
 801fb56:	fb0e 550b 	mla	r5, lr, fp, r5
 801fb5a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fb5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb60:	fb01 550b 	mla	r5, r1, fp, r5
 801fb64:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fb68:	fb08 550b 	mla	r5, r8, fp, r5
 801fb6c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801fb70:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801fb74:	fb1b fb03 	smulbb	fp, fp, r3
 801fb78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fb7a:	437b      	muls	r3, r7
 801fb7c:	7817      	ldrb	r7, [r2, #0]
 801fb7e:	fb0e 3309 	mla	r3, lr, r9, r3
 801fb82:	fb01 3307 	mla	r3, r1, r7, r3
 801fb86:	7807      	ldrb	r7, [r0, #0]
 801fb88:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fb8c:	fb08 3707 	mla	r7, r8, r7, r3
 801fb90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb92:	fa5f fc8c 	uxtb.w	ip, ip
 801fb96:	fb1c fc03 	smulbb	ip, ip, r3
 801fb9a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fb9e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fba2:	fb05 b50a 	mla	r5, r5, sl, fp
 801fba6:	fb07 c70a 	mla	r7, r7, sl, ip
 801fbaa:	b2b6      	uxth	r6, r6
 801fbac:	b2ad      	uxth	r5, r5
 801fbae:	b2bf      	uxth	r7, r7
 801fbb0:	1c73      	adds	r3, r6, #1
 801fbb2:	1c7a      	adds	r2, r7, #1
 801fbb4:	f105 0b01 	add.w	fp, r5, #1
 801fbb8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801fbbc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fbc0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fbc4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fbc8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801fbcc:	096d      	lsrs	r5, r5, #5
 801fbce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fbd0:	4316      	orrs	r6, r2
 801fbd2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fbd6:	432e      	orrs	r6, r5
 801fbd8:	f823 6b02 	strh.w	r6, [r3], #2
 801fbdc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fbde:	930c      	str	r3, [sp, #48]	; 0x30
 801fbe0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fbe2:	4413      	add	r3, r2
 801fbe4:	931f      	str	r3, [sp, #124]	; 0x7c
 801fbe6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801fbe8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fbea:	4413      	add	r3, r2
 801fbec:	9320      	str	r3, [sp, #128]	; 0x80
 801fbee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fbf0:	3b01      	subs	r3, #1
 801fbf2:	9311      	str	r3, [sp, #68]	; 0x44
 801fbf4:	e6db      	b.n	801f9ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801fbf6:	b149      	cbz	r1, 801fc0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801fbf8:	5cb2      	ldrb	r2, [r6, r2]
 801fbfa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fbfe:	4422      	add	r2, r4
 801fc00:	4628      	mov	r0, r5
 801fc02:	462f      	mov	r7, r5
 801fc04:	e771      	b.n	801faea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fc06:	4628      	mov	r0, r5
 801fc08:	462a      	mov	r2, r5
 801fc0a:	e76e      	b.n	801faea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fc0c:	4628      	mov	r0, r5
 801fc0e:	462a      	mov	r2, r5
 801fc10:	e7f7      	b.n	801fc02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fc12:	b015      	add	sp, #84	; 0x54
 801fc14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fc18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801fc18:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc1c:	880f      	ldrh	r7, [r1, #0]
 801fc1e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801fc22:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fc26:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801fc2a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801fc2e:	023c      	lsls	r4, r7, #8
 801fc30:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801fc34:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801fc38:	017c      	lsls	r4, r7, #5
 801fc3a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801fc3e:	00ff      	lsls	r7, r7, #3
 801fc40:	ea4b 0404 	orr.w	r4, fp, r4
 801fc44:	b2ff      	uxtb	r7, r7
 801fc46:	fb05 ca0e 	mla	sl, r5, lr, ip
 801fc4a:	4327      	orrs	r7, r4
 801fc4c:	2d00      	cmp	r5, #0
 801fc4e:	eb02 080a 	add.w	r8, r2, sl
 801fc52:	9701      	str	r7, [sp, #4]
 801fc54:	db7e      	blt.n	801fd54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fc56:	45a9      	cmp	r9, r5
 801fc58:	dd7c      	ble.n	801fd54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fc5a:	f1bc 0f00 	cmp.w	ip, #0
 801fc5e:	db77      	blt.n	801fd50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fc60:	45e6      	cmp	lr, ip
 801fc62:	dd75      	ble.n	801fd50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fc64:	f812 700a 	ldrb.w	r7, [r2, sl]
 801fc68:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fc6c:	441f      	add	r7, r3
 801fc6e:	f11c 0201 	adds.w	r2, ip, #1
 801fc72:	d472      	bmi.n	801fd5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fc74:	4596      	cmp	lr, r2
 801fc76:	dd70      	ble.n	801fd5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fc78:	2800      	cmp	r0, #0
 801fc7a:	d06e      	beq.n	801fd5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fc7c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801fc80:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801fc84:	441c      	add	r4, r3
 801fc86:	3501      	adds	r5, #1
 801fc88:	d46b      	bmi.n	801fd62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fc8a:	45a9      	cmp	r9, r5
 801fc8c:	dd69      	ble.n	801fd62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fc8e:	2e00      	cmp	r6, #0
 801fc90:	d067      	beq.n	801fd62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fc92:	f1bc 0f00 	cmp.w	ip, #0
 801fc96:	db62      	blt.n	801fd5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801fc98:	45e6      	cmp	lr, ip
 801fc9a:	dd60      	ble.n	801fd5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801fc9c:	f818 500e 	ldrb.w	r5, [r8, lr]
 801fca0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fca4:	441d      	add	r5, r3
 801fca6:	f11c 0201 	adds.w	r2, ip, #1
 801fcaa:	d45d      	bmi.n	801fd68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fcac:	4596      	cmp	lr, r2
 801fcae:	dd5b      	ble.n	801fd68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fcb0:	2800      	cmp	r0, #0
 801fcb2:	d059      	beq.n	801fd68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fcb4:	44c6      	add	lr, r8
 801fcb6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fcba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fcbe:	4413      	add	r3, r2
 801fcc0:	b280      	uxth	r0, r0
 801fcc2:	b2b2      	uxth	r2, r6
 801fcc4:	fb00 f602 	mul.w	r6, r0, r2
 801fcc8:	0100      	lsls	r0, r0, #4
 801fcca:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801fcce:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801fcd2:	1b80      	subs	r0, r0, r6
 801fcd4:	fa1f fc82 	uxth.w	ip, r2
 801fcd8:	b282      	uxth	r2, r0
 801fcda:	78a0      	ldrb	r0, [r4, #2]
 801fcdc:	f897 e002 	ldrb.w	lr, [r7, #2]
 801fce0:	f897 9000 	ldrb.w	r9, [r7]
 801fce4:	787f      	ldrb	r7, [r7, #1]
 801fce6:	eba8 080c 	sub.w	r8, r8, ip
 801fcea:	fa1f f888 	uxth.w	r8, r8
 801fcee:	4350      	muls	r0, r2
 801fcf0:	fb08 0e0e 	mla	lr, r8, lr, r0
 801fcf4:	78a8      	ldrb	r0, [r5, #2]
 801fcf6:	fb0c e000 	mla	r0, ip, r0, lr
 801fcfa:	f893 e002 	ldrb.w	lr, [r3, #2]
 801fcfe:	fb06 0e0e 	mla	lr, r6, lr, r0
 801fd02:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801fd06:	f894 e000 	ldrb.w	lr, [r4]
 801fd0a:	fb02 fe0e 	mul.w	lr, r2, lr
 801fd0e:	fb08 e909 	mla	r9, r8, r9, lr
 801fd12:	f895 e000 	ldrb.w	lr, [r5]
 801fd16:	fb0c 990e 	mla	r9, ip, lr, r9
 801fd1a:	f893 e000 	ldrb.w	lr, [r3]
 801fd1e:	785b      	ldrb	r3, [r3, #1]
 801fd20:	fb06 9e0e 	mla	lr, r6, lr, r9
 801fd24:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801fd28:	ea4e 0e00 	orr.w	lr, lr, r0
 801fd2c:	7860      	ldrb	r0, [r4, #1]
 801fd2e:	4350      	muls	r0, r2
 801fd30:	786a      	ldrb	r2, [r5, #1]
 801fd32:	fb08 0007 	mla	r0, r8, r7, r0
 801fd36:	fb0c 0202 	mla	r2, ip, r2, r0
 801fd3a:	fb06 2303 	mla	r3, r6, r3, r2
 801fd3e:	095b      	lsrs	r3, r3, #5
 801fd40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fd44:	ea4e 0303 	orr.w	r3, lr, r3
 801fd48:	800b      	strh	r3, [r1, #0]
 801fd4a:	b003      	add	sp, #12
 801fd4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fd50:	af01      	add	r7, sp, #4
 801fd52:	e78c      	b.n	801fc6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801fd54:	ac01      	add	r4, sp, #4
 801fd56:	4627      	mov	r7, r4
 801fd58:	e795      	b.n	801fc86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fd5a:	ac01      	add	r4, sp, #4
 801fd5c:	e793      	b.n	801fc86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fd5e:	ad01      	add	r5, sp, #4
 801fd60:	e7a1      	b.n	801fca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801fd62:	ab01      	add	r3, sp, #4
 801fd64:	461d      	mov	r5, r3
 801fd66:	e7ab      	b.n	801fcc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801fd68:	ab01      	add	r3, sp, #4
 801fd6a:	e7a9      	b.n	801fcc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801fd6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fd6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd70:	b08f      	sub	sp, #60	; 0x3c
 801fd72:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801fd76:	920c      	str	r2, [sp, #48]	; 0x30
 801fd78:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801fd7a:	910a      	str	r1, [sp, #40]	; 0x28
 801fd7c:	9306      	str	r3, [sp, #24]
 801fd7e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801fd82:	900d      	str	r0, [sp, #52]	; 0x34
 801fd84:	6850      	ldr	r0, [r2, #4]
 801fd86:	6812      	ldr	r2, [r2, #0]
 801fd88:	fb00 1303 	mla	r3, r0, r3, r1
 801fd8c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fd90:	9307      	str	r3, [sp, #28]
 801fd92:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd94:	681b      	ldr	r3, [r3, #0]
 801fd96:	9308      	str	r3, [sp, #32]
 801fd98:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd9a:	685c      	ldr	r4, [r3, #4]
 801fd9c:	3404      	adds	r4, #4
 801fd9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fda0:	2b00      	cmp	r3, #0
 801fda2:	dc03      	bgt.n	801fdac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801fda4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fda6:	2b00      	cmp	r3, #0
 801fda8:	f340 81d6 	ble.w	8020158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fdac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fdae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fdb2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fdb6:	1e48      	subs	r0, r1, #1
 801fdb8:	1e56      	subs	r6, r2, #1
 801fdba:	9b06      	ldr	r3, [sp, #24]
 801fdbc:	2b00      	cmp	r3, #0
 801fdbe:	f340 80b7 	ble.w	801ff30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801fdc2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fdc6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fdca:	d406      	bmi.n	801fdda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fdcc:	4287      	cmp	r7, r0
 801fdce:	da04      	bge.n	801fdda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fdd0:	2b00      	cmp	r3, #0
 801fdd2:	db02      	blt.n	801fdda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fdd4:	42b3      	cmp	r3, r6
 801fdd6:	f2c0 80ac 	blt.w	801ff32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fdda:	3701      	adds	r7, #1
 801fddc:	f100 809d 	bmi.w	801ff1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fde0:	42b9      	cmp	r1, r7
 801fde2:	f2c0 809a 	blt.w	801ff1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fde6:	3301      	adds	r3, #1
 801fde8:	f100 8097 	bmi.w	801ff1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fdec:	429a      	cmp	r2, r3
 801fdee:	f2c0 8094 	blt.w	801ff1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fdf2:	9b06      	ldr	r3, [sp, #24]
 801fdf4:	930b      	str	r3, [sp, #44]	; 0x2c
 801fdf6:	9b07      	ldr	r3, [sp, #28]
 801fdf8:	9309      	str	r3, [sp, #36]	; 0x24
 801fdfa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fdfc:	2b00      	cmp	r3, #0
 801fdfe:	f340 80b5 	ble.w	801ff6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801fe02:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fe04:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fe06:	68c7      	ldr	r7, [r0, #12]
 801fe08:	6892      	ldr	r2, [r2, #8]
 801fe0a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fe0e:	ea4f 4625 	mov.w	r6, r5, asr #16
 801fe12:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fe16:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fe1a:	f100 80fb 	bmi.w	8020014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fe1e:	f102 3cff 	add.w	ip, r2, #4294967295
 801fe22:	4560      	cmp	r0, ip
 801fe24:	f280 80f6 	bge.w	8020014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fe28:	2e00      	cmp	r6, #0
 801fe2a:	f2c0 80f3 	blt.w	8020014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fe2e:	f107 3cff 	add.w	ip, r7, #4294967295
 801fe32:	4566      	cmp	r6, ip
 801fe34:	f280 80ee 	bge.w	8020014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fe38:	b212      	sxth	r2, r2
 801fe3a:	fb06 0002 	mla	r0, r6, r2, r0
 801fe3e:	9e08      	ldr	r6, [sp, #32]
 801fe40:	1837      	adds	r7, r6, r0
 801fe42:	5c30      	ldrb	r0, [r6, r0]
 801fe44:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fe48:	eb04 0c08 	add.w	ip, r4, r8
 801fe4c:	2b00      	cmp	r3, #0
 801fe4e:	f000 80d3 	beq.w	801fff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fe52:	787e      	ldrb	r6, [r7, #1]
 801fe54:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fe58:	4426      	add	r6, r4
 801fe5a:	2900      	cmp	r1, #0
 801fe5c:	f000 80d4 	beq.w	8020008 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801fe60:	18b8      	adds	r0, r7, r2
 801fe62:	5cba      	ldrb	r2, [r7, r2]
 801fe64:	7840      	ldrb	r0, [r0, #1]
 801fe66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fe6a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fe6e:	4422      	add	r2, r4
 801fe70:	4420      	add	r0, r4
 801fe72:	b29b      	uxth	r3, r3
 801fe74:	b289      	uxth	r1, r1
 801fe76:	fb03 f901 	mul.w	r9, r3, r1
 801fe7a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fe7e:	011b      	lsls	r3, r3, #4
 801fe80:	b289      	uxth	r1, r1
 801fe82:	78b7      	ldrb	r7, [r6, #2]
 801fe84:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fe88:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fe8c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fe90:	eba3 0309 	sub.w	r3, r3, r9
 801fe94:	b29b      	uxth	r3, r3
 801fe96:	ebae 0e01 	sub.w	lr, lr, r1
 801fe9a:	fa1f fe8e 	uxth.w	lr, lr
 801fe9e:	435f      	muls	r7, r3
 801fea0:	fb0e 770a 	mla	r7, lr, sl, r7
 801fea4:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fea8:	fb01 770a 	mla	r7, r1, sl, r7
 801feac:	f890 a002 	ldrb.w	sl, [r0, #2]
 801feb0:	fb09 7a0a 	mla	sl, r9, sl, r7
 801feb4:	f814 7008 	ldrb.w	r7, [r4, r8]
 801feb8:	f896 8000 	ldrb.w	r8, [r6]
 801febc:	7876      	ldrb	r6, [r6, #1]
 801febe:	fb03 f808 	mul.w	r8, r3, r8
 801fec2:	fb0e 8807 	mla	r8, lr, r7, r8
 801fec6:	7817      	ldrb	r7, [r2, #0]
 801fec8:	fb01 8807 	mla	r8, r1, r7, r8
 801fecc:	7807      	ldrb	r7, [r0, #0]
 801fece:	fb09 8707 	mla	r7, r9, r7, r8
 801fed2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fed6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801feda:	ea47 070a 	orr.w	r7, r7, sl
 801fede:	4373      	muls	r3, r6
 801fee0:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fee4:	fb0e 330c 	mla	r3, lr, ip, r3
 801fee8:	fb01 310a 	mla	r1, r1, sl, r3
 801feec:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fef0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fef2:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fef6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fefa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fefe:	ea47 070a 	orr.w	r7, r7, sl
 801ff02:	801f      	strh	r7, [r3, #0]
 801ff04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff06:	3302      	adds	r3, #2
 801ff08:	9309      	str	r3, [sp, #36]	; 0x24
 801ff0a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ff0c:	449b      	add	fp, r3
 801ff0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ff10:	441d      	add	r5, r3
 801ff12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff14:	3b01      	subs	r3, #1
 801ff16:	930b      	str	r3, [sp, #44]	; 0x2c
 801ff18:	e76f      	b.n	801fdfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ff1a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ff1c:	449b      	add	fp, r3
 801ff1e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ff20:	441d      	add	r5, r3
 801ff22:	9b06      	ldr	r3, [sp, #24]
 801ff24:	3b01      	subs	r3, #1
 801ff26:	9306      	str	r3, [sp, #24]
 801ff28:	9b07      	ldr	r3, [sp, #28]
 801ff2a:	3302      	adds	r3, #2
 801ff2c:	9307      	str	r3, [sp, #28]
 801ff2e:	e744      	b.n	801fdba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801ff30:	d023      	beq.n	801ff7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ff32:	9b06      	ldr	r3, [sp, #24]
 801ff34:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801ff36:	3b01      	subs	r3, #1
 801ff38:	fb00 b003 	mla	r0, r0, r3, fp
 801ff3c:	1400      	asrs	r0, r0, #16
 801ff3e:	f53f af58 	bmi.w	801fdf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ff42:	3901      	subs	r1, #1
 801ff44:	4288      	cmp	r0, r1
 801ff46:	f6bf af54 	bge.w	801fdf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ff4a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801ff4c:	fb01 5303 	mla	r3, r1, r3, r5
 801ff50:	141b      	asrs	r3, r3, #16
 801ff52:	f53f af4e 	bmi.w	801fdf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ff56:	3a01      	subs	r2, #1
 801ff58:	4293      	cmp	r3, r2
 801ff5a:	f6bf af4a 	bge.w	801fdf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ff5e:	9b06      	ldr	r3, [sp, #24]
 801ff60:	9309      	str	r3, [sp, #36]	; 0x24
 801ff62:	9b07      	ldr	r3, [sp, #28]
 801ff64:	930b      	str	r3, [sp, #44]	; 0x2c
 801ff66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff68:	2b00      	cmp	r3, #0
 801ff6a:	dc70      	bgt.n	802004e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801ff6c:	9b06      	ldr	r3, [sp, #24]
 801ff6e:	9a07      	ldr	r2, [sp, #28]
 801ff70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ff74:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ff78:	9307      	str	r3, [sp, #28]
 801ff7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ff7c:	2b00      	cmp	r3, #0
 801ff7e:	f340 80eb 	ble.w	8020158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ff82:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff86:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ff8a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ff8e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ff90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff94:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff9c:	eef0 6a62 	vmov.f32	s13, s5
 801ffa0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ffa4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ffa8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ffac:	ee16 ba90 	vmov	fp, s13
 801ffb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ffb4:	eef0 6a43 	vmov.f32	s13, s6
 801ffb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ffbc:	ee12 2a90 	vmov	r2, s5
 801ffc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ffc4:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffc8:	ee13 2a10 	vmov	r2, s6
 801ffcc:	931b      	str	r3, [sp, #108]	; 0x6c
 801ffce:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ffd0:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffd4:	931c      	str	r3, [sp, #112]	; 0x70
 801ffd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ffd8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ffda:	3b01      	subs	r3, #1
 801ffdc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ffe0:	930a      	str	r3, [sp, #40]	; 0x28
 801ffe2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ffe4:	bf08      	it	eq
 801ffe6:	4613      	moveq	r3, r2
 801ffe8:	ee16 5a90 	vmov	r5, s13
 801ffec:	9306      	str	r3, [sp, #24]
 801ffee:	eeb0 3a67 	vmov.f32	s6, s15
 801fff2:	eef0 2a47 	vmov.f32	s5, s14
 801fff6:	e6d2      	b.n	801fd9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fff8:	b149      	cbz	r1, 802000e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fffa:	5cba      	ldrb	r2, [r7, r2]
 801fffc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020000:	4422      	add	r2, r4
 8020002:	4660      	mov	r0, ip
 8020004:	4666      	mov	r6, ip
 8020006:	e734      	b.n	801fe72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020008:	4660      	mov	r0, ip
 802000a:	4662      	mov	r2, ip
 802000c:	e731      	b.n	801fe72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802000e:	4660      	mov	r0, ip
 8020010:	4662      	mov	r2, ip
 8020012:	e7f7      	b.n	8020004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020014:	f110 0c01 	adds.w	ip, r0, #1
 8020018:	f53f af74 	bmi.w	801ff04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802001c:	4562      	cmp	r2, ip
 802001e:	f6ff af71 	blt.w	801ff04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020022:	f116 0c01 	adds.w	ip, r6, #1
 8020026:	f53f af6d 	bmi.w	801ff04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802002a:	4567      	cmp	r7, ip
 802002c:	f6ff af6a 	blt.w	801ff04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020030:	b23f      	sxth	r7, r7
 8020032:	b212      	sxth	r2, r2
 8020034:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020038:	e9cd 0602 	strd	r0, r6, [sp, #8]
 802003c:	9200      	str	r2, [sp, #0]
 802003e:	9701      	str	r7, [sp, #4]
 8020040:	4623      	mov	r3, r4
 8020042:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020046:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020048:	f7ff fde6 	bl	801fc18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 802004c:	e75a      	b.n	801ff04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802004e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020050:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020054:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020058:	1428      	asrs	r0, r5, #16
 802005a:	fb02 6000 	mla	r0, r2, r0, r6
 802005e:	9e08      	ldr	r6, [sp, #32]
 8020060:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020064:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020068:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802006c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020070:	1837      	adds	r7, r6, r0
 8020072:	eb04 0c08 	add.w	ip, r4, r8
 8020076:	2b00      	cmp	r3, #0
 8020078:	d060      	beq.n	802013c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 802007a:	787e      	ldrb	r6, [r7, #1]
 802007c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020080:	4426      	add	r6, r4
 8020082:	2900      	cmp	r1, #0
 8020084:	d062      	beq.n	802014c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020086:	18b8      	adds	r0, r7, r2
 8020088:	5cba      	ldrb	r2, [r7, r2]
 802008a:	7840      	ldrb	r0, [r0, #1]
 802008c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020090:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020094:	4422      	add	r2, r4
 8020096:	4420      	add	r0, r4
 8020098:	b29b      	uxth	r3, r3
 802009a:	b289      	uxth	r1, r1
 802009c:	fb03 f901 	mul.w	r9, r3, r1
 80200a0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80200a4:	011b      	lsls	r3, r3, #4
 80200a6:	b289      	uxth	r1, r1
 80200a8:	78b7      	ldrb	r7, [r6, #2]
 80200aa:	f89c a002 	ldrb.w	sl, [ip, #2]
 80200ae:	f89c c001 	ldrb.w	ip, [ip, #1]
 80200b2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80200b6:	eba3 0309 	sub.w	r3, r3, r9
 80200ba:	b29b      	uxth	r3, r3
 80200bc:	ebae 0e01 	sub.w	lr, lr, r1
 80200c0:	fa1f fe8e 	uxth.w	lr, lr
 80200c4:	435f      	muls	r7, r3
 80200c6:	fb0e 770a 	mla	r7, lr, sl, r7
 80200ca:	f892 a002 	ldrb.w	sl, [r2, #2]
 80200ce:	fb01 770a 	mla	r7, r1, sl, r7
 80200d2:	f890 a002 	ldrb.w	sl, [r0, #2]
 80200d6:	fb09 7a0a 	mla	sl, r9, sl, r7
 80200da:	f814 7008 	ldrb.w	r7, [r4, r8]
 80200de:	f896 8000 	ldrb.w	r8, [r6]
 80200e2:	7876      	ldrb	r6, [r6, #1]
 80200e4:	fb03 f808 	mul.w	r8, r3, r8
 80200e8:	fb0e 8807 	mla	r8, lr, r7, r8
 80200ec:	7817      	ldrb	r7, [r2, #0]
 80200ee:	fb01 8807 	mla	r8, r1, r7, r8
 80200f2:	7807      	ldrb	r7, [r0, #0]
 80200f4:	fb09 8707 	mla	r7, r9, r7, r8
 80200f8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80200fc:	4373      	muls	r3, r6
 80200fe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020102:	7856      	ldrb	r6, [r2, #1]
 8020104:	ea47 070a 	orr.w	r7, r7, sl
 8020108:	fb0e 330c 	mla	r3, lr, ip, r3
 802010c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020110:	fb01 3306 	mla	r3, r1, r6, r3
 8020114:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020118:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802011c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802011e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020122:	ea47 070a 	orr.w	r7, r7, sl
 8020126:	f823 7b02 	strh.w	r7, [r3], #2
 802012a:	930b      	str	r3, [sp, #44]	; 0x2c
 802012c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802012e:	449b      	add	fp, r3
 8020130:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020132:	441d      	add	r5, r3
 8020134:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020136:	3b01      	subs	r3, #1
 8020138:	9309      	str	r3, [sp, #36]	; 0x24
 802013a:	e714      	b.n	801ff66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 802013c:	b149      	cbz	r1, 8020152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802013e:	5cba      	ldrb	r2, [r7, r2]
 8020140:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020144:	4422      	add	r2, r4
 8020146:	4660      	mov	r0, ip
 8020148:	4666      	mov	r6, ip
 802014a:	e7a5      	b.n	8020098 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802014c:	4660      	mov	r0, ip
 802014e:	4662      	mov	r2, ip
 8020150:	e7a2      	b.n	8020098 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020152:	4660      	mov	r0, ip
 8020154:	4662      	mov	r2, ip
 8020156:	e7f7      	b.n	8020148 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020158:	b00f      	add	sp, #60	; 0x3c
 802015a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802015e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802015e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020162:	b085      	sub	sp, #20
 8020164:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020168:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 802016c:	9102      	str	r1, [sp, #8]
 802016e:	2c00      	cmp	r4, #0
 8020170:	fb04 710c 	mla	r1, r4, ip, r7
 8020174:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020178:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 802017c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020180:	eb02 0e01 	add.w	lr, r2, r1
 8020184:	f2c0 8122 	blt.w	80203cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020188:	45a0      	cmp	r8, r4
 802018a:	f340 811f 	ble.w	80203cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 802018e:	2f00      	cmp	r7, #0
 8020190:	f2c0 811a 	blt.w	80203c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020194:	45bc      	cmp	ip, r7
 8020196:	f340 8117 	ble.w	80203c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 802019a:	5c52      	ldrb	r2, [r2, r1]
 802019c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80201a0:	1c7a      	adds	r2, r7, #1
 80201a2:	f100 8116 	bmi.w	80203d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80201a6:	4594      	cmp	ip, r2
 80201a8:	f340 8113 	ble.w	80203d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80201ac:	2e00      	cmp	r6, #0
 80201ae:	f000 8112 	beq.w	80203d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80201b2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80201b6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80201ba:	3401      	adds	r4, #1
 80201bc:	f100 810f 	bmi.w	80203de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80201c0:	45a0      	cmp	r8, r4
 80201c2:	f340 810c 	ble.w	80203de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80201c6:	2800      	cmp	r0, #0
 80201c8:	f000 810c 	beq.w	80203e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80201cc:	2f00      	cmp	r7, #0
 80201ce:	f2c0 8104 	blt.w	80203da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80201d2:	45bc      	cmp	ip, r7
 80201d4:	f340 8101 	ble.w	80203da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80201d8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80201dc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80201e0:	3701      	adds	r7, #1
 80201e2:	f100 8102 	bmi.w	80203ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80201e6:	45bc      	cmp	ip, r7
 80201e8:	f340 80ff 	ble.w	80203ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80201ec:	2e00      	cmp	r6, #0
 80201ee:	f000 80fe 	beq.w	80203ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 80201f2:	44f4      	add	ip, lr
 80201f4:	f89c 2001 	ldrb.w	r2, [ip, #1]
 80201f8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80201fc:	b2b6      	uxth	r6, r6
 80201fe:	b280      	uxth	r0, r0
 8020200:	fb00 fe06 	mul.w	lr, r0, r6
 8020204:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020208:	0136      	lsls	r6, r6, #4
 802020a:	eba6 070e 	sub.w	r7, r6, lr
 802020e:	b280      	uxth	r0, r0
 8020210:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020214:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020218:	b2bf      	uxth	r7, r7
 802021a:	1a1b      	subs	r3, r3, r0
 802021c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020220:	b29b      	uxth	r3, r3
 8020222:	fb0a f607 	mul.w	r6, sl, r7
 8020226:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802022a:	fb0b 6603 	mla	r6, fp, r3, r6
 802022e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020232:	fb00 6609 	mla	r6, r0, r9, r6
 8020236:	fb0e 6608 	mla	r6, lr, r8, r6
 802023a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802023e:	9600      	str	r6, [sp, #0]
 8020240:	2e00      	cmp	r6, #0
 8020242:	f000 80be 	beq.w	80203c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8020246:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802024a:	fb0b fc0c 	mul.w	ip, fp, ip
 802024e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020252:	fb0b f505 	mul.w	r5, fp, r5
 8020256:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802025a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802025e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020262:	44dc      	add	ip, fp
 8020264:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020268:	9501      	str	r5, [sp, #4]
 802026a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802026e:	9503      	str	r5, [sp, #12]
 8020270:	9d01      	ldr	r5, [sp, #4]
 8020272:	9e02      	ldr	r6, [sp, #8]
 8020274:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020278:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802027c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8020280:	fb0a fc0c 	mul.w	ip, sl, ip
 8020284:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020288:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802028c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020290:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020294:	4465      	add	r5, ip
 8020296:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802029a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802029e:	fb09 fc0c 	mul.w	ip, r9, ip
 80202a2:	fb09 f904 	mul.w	r9, r9, r4
 80202a6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80202aa:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80202ae:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80202b2:	fb08 f404 	mul.w	r4, r8, r4
 80202b6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80202ba:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80202be:	fb08 f802 	mul.w	r8, r8, r2
 80202c2:	fb0a fa01 	mul.w	sl, sl, r1
 80202c6:	0a22      	lsrs	r2, r4, #8
 80202c8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80202cc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80202d0:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80202d4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80202d8:	4414      	add	r4, r2
 80202da:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80202de:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80202e2:	0a2d      	lsrs	r5, r5, #8
 80202e4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80202e8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80202ec:	9a03      	ldr	r2, [sp, #12]
 80202ee:	8836      	ldrh	r6, [r6, #0]
 80202f0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80202f4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80202f8:	437d      	muls	r5, r7
 80202fa:	4461      	add	r1, ip
 80202fc:	0a24      	lsrs	r4, r4, #8
 80202fe:	fb02 5503 	mla	r5, r2, r3, r5
 8020302:	0a09      	lsrs	r1, r1, #8
 8020304:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020308:	fb04 540e 	mla	r4, r4, lr, r5
 802030c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020310:	fb01 4100 	mla	r1, r1, r0, r4
 8020314:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020318:	0a09      	lsrs	r1, r1, #8
 802031a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802031e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020322:	fb07 f70a 	mul.w	r7, r7, sl
 8020326:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802032a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802032e:	fb03 7101 	mla	r1, r3, r1, r7
 8020332:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020336:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802033a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802033e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020342:	fb00 e101 	mla	r1, r0, r1, lr
 8020346:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 802034a:	9a00      	ldr	r2, [sp, #0]
 802034c:	b287      	uxth	r7, r0
 802034e:	437a      	muls	r2, r7
 8020350:	0a09      	lsrs	r1, r1, #8
 8020352:	1c53      	adds	r3, r2, #1
 8020354:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020358:	4321      	orrs	r1, r4
 802035a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802035e:	1235      	asrs	r5, r6, #8
 8020360:	0c0a      	lsrs	r2, r1, #16
 8020362:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020366:	b2db      	uxtb	r3, r3
 8020368:	fb12 f207 	smulbb	r2, r2, r7
 802036c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020370:	fb05 2503 	mla	r5, r5, r3, r2
 8020374:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020378:	10f2      	asrs	r2, r6, #3
 802037a:	b2c8      	uxtb	r0, r1
 802037c:	00f6      	lsls	r6, r6, #3
 802037e:	fb14 f407 	smulbb	r4, r4, r7
 8020382:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020386:	b2f6      	uxtb	r6, r6
 8020388:	fb10 f007 	smulbb	r0, r0, r7
 802038c:	fb02 4203 	mla	r2, r2, r3, r4
 8020390:	b2ad      	uxth	r5, r5
 8020392:	fb06 0303 	mla	r3, r6, r3, r0
 8020396:	b299      	uxth	r1, r3
 8020398:	b294      	uxth	r4, r2
 802039a:	1c6b      	adds	r3, r5, #1
 802039c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80203a0:	1c62      	adds	r2, r4, #1
 80203a2:	1c4b      	adds	r3, r1, #1
 80203a4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80203a8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80203ac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80203b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80203b4:	0952      	lsrs	r2, r2, #5
 80203b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80203ba:	432b      	orrs	r3, r5
 80203bc:	4313      	orrs	r3, r2
 80203be:	9a02      	ldr	r2, [sp, #8]
 80203c0:	8013      	strh	r3, [r2, #0]
 80203c2:	b005      	add	sp, #20
 80203c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203c8:	2500      	movs	r5, #0
 80203ca:	e6e9      	b.n	80201a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80203cc:	2100      	movs	r1, #0
 80203ce:	460d      	mov	r5, r1
 80203d0:	e6f3      	b.n	80201ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80203d2:	2100      	movs	r1, #0
 80203d4:	e6f1      	b.n	80201ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80203d6:	4631      	mov	r1, r6
 80203d8:	e6ef      	b.n	80201ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80203da:	2400      	movs	r4, #0
 80203dc:	e700      	b.n	80201e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80203de:	2200      	movs	r2, #0
 80203e0:	4614      	mov	r4, r2
 80203e2:	e70b      	b.n	80201fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80203e4:	4602      	mov	r2, r0
 80203e6:	4604      	mov	r4, r0
 80203e8:	e708      	b.n	80201fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80203ea:	2200      	movs	r2, #0
 80203ec:	e706      	b.n	80201fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80203ee:	4632      	mov	r2, r6
 80203f0:	e704      	b.n	80201fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080203f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80203f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203f6:	b09f      	sub	sp, #124	; 0x7c
 80203f8:	921b      	str	r2, [sp, #108]	; 0x6c
 80203fa:	9309      	str	r3, [sp, #36]	; 0x24
 80203fc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80203fe:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8020402:	931c      	str	r3, [sp, #112]	; 0x70
 8020404:	9119      	str	r1, [sp, #100]	; 0x64
 8020406:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802040a:	901d      	str	r0, [sp, #116]	; 0x74
 802040c:	6850      	ldr	r0, [r2, #4]
 802040e:	6812      	ldr	r2, [r2, #0]
 8020410:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8020412:	fb00 1303 	mla	r3, r0, r3, r1
 8020416:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802041a:	930c      	str	r3, [sp, #48]	; 0x30
 802041c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802041e:	681b      	ldr	r3, [r3, #0]
 8020420:	9312      	str	r3, [sp, #72]	; 0x48
 8020422:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020424:	685e      	ldr	r6, [r3, #4]
 8020426:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802042a:	930d      	str	r3, [sp, #52]	; 0x34
 802042c:	3604      	adds	r6, #4
 802042e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020430:	2b00      	cmp	r3, #0
 8020432:	dc03      	bgt.n	802043c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020434:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020436:	2b00      	cmp	r3, #0
 8020438:	f340 8388 	ble.w	8020b4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802043c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802043e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020442:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020446:	1e48      	subs	r0, r1, #1
 8020448:	1e57      	subs	r7, r2, #1
 802044a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802044c:	2b00      	cmp	r3, #0
 802044e:	f340 8195 	ble.w	802077c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020452:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020454:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020458:	ea4f 4325 	mov.w	r3, r5, asr #16
 802045c:	d406      	bmi.n	802046c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802045e:	4584      	cmp	ip, r0
 8020460:	da04      	bge.n	802046c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020462:	2b00      	cmp	r3, #0
 8020464:	db02      	blt.n	802046c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020466:	42bb      	cmp	r3, r7
 8020468:	f2c0 8189 	blt.w	802077e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802046c:	f11c 0c01 	adds.w	ip, ip, #1
 8020470:	f100 8177 	bmi.w	8020762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020474:	4561      	cmp	r1, ip
 8020476:	f2c0 8174 	blt.w	8020762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802047a:	3301      	adds	r3, #1
 802047c:	f100 8171 	bmi.w	8020762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020480:	429a      	cmp	r2, r3
 8020482:	f2c0 816e 	blt.w	8020762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020486:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020488:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802048a:	931a      	str	r3, [sp, #104]	; 0x68
 802048c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802048e:	2b00      	cmp	r3, #0
 8020490:	f340 8193 	ble.w	80207ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8020494:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020496:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802049a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802049c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80204a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80204a2:	141b      	asrs	r3, r3, #16
 80204a4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80204a8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80204ac:	f100 81d6 	bmi.w	802085c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80204b0:	f100 38ff 	add.w	r8, r0, #4294967295
 80204b4:	4543      	cmp	r3, r8
 80204b6:	f280 81d1 	bge.w	802085c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80204ba:	f1bc 0f00 	cmp.w	ip, #0
 80204be:	f2c0 81cd 	blt.w	802085c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80204c2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80204c6:	45c4      	cmp	ip, r8
 80204c8:	f280 81c8 	bge.w	802085c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80204cc:	b200      	sxth	r0, r0
 80204ce:	fb0c 3300 	mla	r3, ip, r0, r3
 80204d2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80204d4:	eb04 0803 	add.w	r8, r4, r3
 80204d8:	5ce3      	ldrb	r3, [r4, r3]
 80204da:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80204de:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80204e2:	2a00      	cmp	r2, #0
 80204e4:	f000 81af 	beq.w	8020846 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80204e8:	f898 c001 	ldrb.w	ip, [r8, #1]
 80204ec:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80204f0:	940e      	str	r4, [sp, #56]	; 0x38
 80204f2:	0e24      	lsrs	r4, r4, #24
 80204f4:	9415      	str	r4, [sp, #84]	; 0x54
 80204f6:	b179      	cbz	r1, 8020518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80204f8:	eb08 0c00 	add.w	ip, r8, r0
 80204fc:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020500:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020504:	900a      	str	r0, [sp, #40]	; 0x28
 8020506:	0e00      	lsrs	r0, r0, #24
 8020508:	9013      	str	r0, [sp, #76]	; 0x4c
 802050a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802050e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020512:	900f      	str	r0, [sp, #60]	; 0x3c
 8020514:	0e00      	lsrs	r0, r0, #24
 8020516:	9016      	str	r0, [sp, #88]	; 0x58
 8020518:	b292      	uxth	r2, r2
 802051a:	b289      	uxth	r1, r1
 802051c:	fb02 f901 	mul.w	r9, r2, r1
 8020520:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020524:	0112      	lsls	r2, r2, #4
 8020526:	eba2 0809 	sub.w	r8, r2, r9
 802052a:	b289      	uxth	r1, r1
 802052c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020530:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020532:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020534:	fa1f f888 	uxth.w	r8, r8
 8020538:	1a52      	subs	r2, r2, r1
 802053a:	b292      	uxth	r2, r2
 802053c:	fb08 f000 	mul.w	r0, r8, r0
 8020540:	fb02 000e 	mla	r0, r2, lr, r0
 8020544:	fb01 0004 	mla	r0, r1, r4, r0
 8020548:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802054a:	fb09 0004 	mla	r0, r9, r4, r0
 802054e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020552:	2800      	cmp	r0, #0
 8020554:	f000 80fa 	beq.w	802074c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020558:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802055c:	d01b      	beq.n	8020596 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802055e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020562:	fb0e fa0a 	mul.w	sl, lr, sl
 8020566:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802056a:	fb0e fe03 	mul.w	lr, lr, r3
 802056e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020572:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020576:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802057a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802057e:	4453      	add	r3, sl
 8020580:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020584:	0a1b      	lsrs	r3, r3, #8
 8020586:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802058a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802058e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020592:	ea43 030c 	orr.w	r3, r3, ip
 8020596:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020598:	2cff      	cmp	r4, #255	; 0xff
 802059a:	d021      	beq.n	80205e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802059c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802059e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80205a2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80205a4:	fb04 fb0b 	mul.w	fp, r4, fp
 80205a8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80205aa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80205ae:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80205b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80205b4:	fb04 fa0a 	mul.w	sl, r4, sl
 80205b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80205bc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80205c0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80205c4:	44de      	add	lr, fp
 80205c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80205ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80205ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80205d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80205da:	ea4e 040a 	orr.w	r4, lr, sl
 80205de:	940e      	str	r4, [sp, #56]	; 0x38
 80205e0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80205e2:	2cff      	cmp	r4, #255	; 0xff
 80205e4:	d021      	beq.n	802062a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80205e6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80205e8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80205ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80205ee:	fb04 fb0b 	mul.w	fp, r4, fp
 80205f2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80205f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80205f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80205fa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80205fe:	fb04 fa0a 	mul.w	sl, r4, sl
 8020602:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020606:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802060a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802060e:	44de      	add	lr, fp
 8020610:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020614:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020618:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802061c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020620:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020624:	ea4e 040a 	orr.w	r4, lr, sl
 8020628:	940a      	str	r4, [sp, #40]	; 0x28
 802062a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802062c:	2cff      	cmp	r4, #255	; 0xff
 802062e:	d021      	beq.n	8020674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020630:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020632:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020636:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020638:	fb04 fb0b 	mul.w	fp, r4, fp
 802063c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802063e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020642:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020644:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020648:	fb04 fa0a 	mul.w	sl, r4, sl
 802064c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020650:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020654:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020658:	44de      	add	lr, fp
 802065a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802065e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020662:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020666:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802066a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802066e:	ea4e 040a 	orr.w	r4, lr, sl
 8020672:	940f      	str	r4, [sp, #60]	; 0x3c
 8020674:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020676:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802067a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802067c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020680:	fb08 fc0c 	mul.w	ip, r8, ip
 8020684:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020688:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802068c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802068e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020692:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020696:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020698:	fb09 cc0e 	mla	ip, r9, lr, ip
 802069c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80206a0:	fb08 f80e 	mul.w	r8, r8, lr
 80206a4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80206a8:	fb02 8303 	mla	r3, r2, r3, r8
 80206ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80206ae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80206b0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80206b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80206b6:	fb01 330a 	mla	r3, r1, sl, r3
 80206ba:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80206be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80206c0:	fb09 3901 	mla	r9, r9, r1, r3
 80206c4:	4342      	muls	r2, r0
 80206c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206ca:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80206ce:	883b      	ldrh	r3, [r7, #0]
 80206d0:	1c50      	adds	r0, r2, #1
 80206d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80206d6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80206da:	ea4c 0c09 	orr.w	ip, ip, r9
 80206de:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80206e2:	1219      	asrs	r1, r3, #8
 80206e4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80206e8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80206ec:	b2c0      	uxtb	r0, r0
 80206ee:	fb12 f204 	smulbb	r2, r2, r4
 80206f2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80206f6:	fb01 2100 	mla	r1, r1, r0, r2
 80206fa:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80206fe:	10da      	asrs	r2, r3, #3
 8020700:	fa5f fc8c 	uxtb.w	ip, ip
 8020704:	00db      	lsls	r3, r3, #3
 8020706:	fb1c fc04 	smulbb	ip, ip, r4
 802070a:	b2db      	uxtb	r3, r3
 802070c:	b289      	uxth	r1, r1
 802070e:	fb03 c300 	mla	r3, r3, r0, ip
 8020712:	fa1f fc83 	uxth.w	ip, r3
 8020716:	1c4b      	adds	r3, r1, #1
 8020718:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802071c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020720:	fb1e fe04 	smulbb	lr, lr, r4
 8020724:	f10c 0301 	add.w	r3, ip, #1
 8020728:	fb02 e200 	mla	r2, r2, r0, lr
 802072c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020730:	b292      	uxth	r2, r2
 8020732:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020736:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802073a:	430b      	orrs	r3, r1
 802073c:	1c51      	adds	r1, r2, #1
 802073e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020742:	0952      	lsrs	r2, r2, #5
 8020744:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020748:	4313      	orrs	r3, r2
 802074a:	803b      	strh	r3, [r7, #0]
 802074c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802074e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020750:	441a      	add	r2, r3
 8020752:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020754:	9229      	str	r2, [sp, #164]	; 0xa4
 8020756:	441d      	add	r5, r3
 8020758:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802075a:	3b01      	subs	r3, #1
 802075c:	3702      	adds	r7, #2
 802075e:	931a      	str	r3, [sp, #104]	; 0x68
 8020760:	e694      	b.n	802048c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020762:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020764:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020766:	441c      	add	r4, r3
 8020768:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802076a:	9429      	str	r4, [sp, #164]	; 0xa4
 802076c:	441d      	add	r5, r3
 802076e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020770:	3b01      	subs	r3, #1
 8020772:	9309      	str	r3, [sp, #36]	; 0x24
 8020774:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020776:	3302      	adds	r3, #2
 8020778:	930c      	str	r3, [sp, #48]	; 0x30
 802077a:	e666      	b.n	802044a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802077c:	d024      	beq.n	80207c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802077e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020780:	982b      	ldr	r0, [sp, #172]	; 0xac
 8020782:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020784:	3b01      	subs	r3, #1
 8020786:	fb00 4003 	mla	r0, r0, r3, r4
 802078a:	1400      	asrs	r0, r0, #16
 802078c:	f53f ae7b 	bmi.w	8020486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020790:	3901      	subs	r1, #1
 8020792:	4288      	cmp	r0, r1
 8020794:	f6bf ae77 	bge.w	8020486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020798:	992c      	ldr	r1, [sp, #176]	; 0xb0
 802079a:	fb01 5303 	mla	r3, r1, r3, r5
 802079e:	141b      	asrs	r3, r3, #16
 80207a0:	f53f ae71 	bmi.w	8020486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80207a4:	3a01      	subs	r2, #1
 80207a6:	4293      	cmp	r3, r2
 80207a8:	f6bf ae6d 	bge.w	8020486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80207ac:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80207b0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80207b4:	f1bb 0f00 	cmp.w	fp, #0
 80207b8:	dc70      	bgt.n	802089c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80207ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207bc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80207c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80207c2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80207c6:	930c      	str	r3, [sp, #48]	; 0x30
 80207c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80207ca:	2b00      	cmp	r3, #0
 80207cc:	f340 81be 	ble.w	8020b4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80207d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80207d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80207d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80207dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80207de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80207e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80207e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80207ea:	eef0 6a62 	vmov.f32	s13, s5
 80207ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80207f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80207f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80207fa:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80207fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020802:	eef0 6a43 	vmov.f32	s13, s6
 8020806:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802080a:	ee12 2a90 	vmov	r2, s5
 802080e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020812:	fb92 f3f3 	sdiv	r3, r2, r3
 8020816:	ee13 2a10 	vmov	r2, s6
 802081a:	932b      	str	r3, [sp, #172]	; 0xac
 802081c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802081e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020822:	932c      	str	r3, [sp, #176]	; 0xb0
 8020824:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020826:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020828:	3b01      	subs	r3, #1
 802082a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802082e:	9319      	str	r3, [sp, #100]	; 0x64
 8020830:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020832:	bf08      	it	eq
 8020834:	4613      	moveq	r3, r2
 8020836:	ee16 5a90 	vmov	r5, s13
 802083a:	9309      	str	r3, [sp, #36]	; 0x24
 802083c:	eeb0 3a67 	vmov.f32	s6, s15
 8020840:	eef0 2a47 	vmov.f32	s5, s14
 8020844:	e5f3      	b.n	802042e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020846:	2900      	cmp	r1, #0
 8020848:	f43f ae66 	beq.w	8020518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802084c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020850:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020854:	900a      	str	r0, [sp, #40]	; 0x28
 8020856:	0e00      	lsrs	r0, r0, #24
 8020858:	9013      	str	r0, [sp, #76]	; 0x4c
 802085a:	e65d      	b.n	8020518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802085c:	f113 0801 	adds.w	r8, r3, #1
 8020860:	f53f af74 	bmi.w	802074c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020864:	4540      	cmp	r0, r8
 8020866:	f6ff af71 	blt.w	802074c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802086a:	f11c 0801 	adds.w	r8, ip, #1
 802086e:	f53f af6d 	bmi.w	802074c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020872:	45c6      	cmp	lr, r8
 8020874:	f6ff af6a 	blt.w	802074c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020878:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802087a:	9302      	str	r3, [sp, #8]
 802087c:	b200      	sxth	r0, r0
 802087e:	fa0f f38e 	sxth.w	r3, lr
 8020882:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020886:	e9cd c203 	strd	ip, r2, [sp, #12]
 802088a:	9301      	str	r3, [sp, #4]
 802088c:	9000      	str	r0, [sp, #0]
 802088e:	4633      	mov	r3, r6
 8020890:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020892:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020894:	4639      	mov	r1, r7
 8020896:	f7ff fc62 	bl	802015e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802089a:	e757      	b.n	802074c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802089c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802089e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80208a0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80208a4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80208a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80208aa:	1427      	asrs	r7, r4, #16
 80208ac:	142b      	asrs	r3, r5, #16
 80208ae:	fb01 7303 	mla	r3, r1, r3, r7
 80208b2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80208b4:	18e7      	adds	r7, r4, r3
 80208b6:	5ce3      	ldrb	r3, [r4, r3]
 80208b8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80208bc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80208c0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80208c4:	2a00      	cmp	r2, #0
 80208c6:	f000 8137 	beq.w	8020b38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80208ca:	f897 e001 	ldrb.w	lr, [r7, #1]
 80208ce:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80208d2:	9410      	str	r4, [sp, #64]	; 0x40
 80208d4:	0e24      	lsrs	r4, r4, #24
 80208d6:	9417      	str	r4, [sp, #92]	; 0x5c
 80208d8:	b170      	cbz	r0, 80208f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80208da:	eb07 0e01 	add.w	lr, r7, r1
 80208de:	5c79      	ldrb	r1, [r7, r1]
 80208e0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80208e4:	910b      	str	r1, [sp, #44]	; 0x2c
 80208e6:	0e09      	lsrs	r1, r1, #24
 80208e8:	9114      	str	r1, [sp, #80]	; 0x50
 80208ea:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80208ee:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80208f2:	9111      	str	r1, [sp, #68]	; 0x44
 80208f4:	0e09      	lsrs	r1, r1, #24
 80208f6:	9118      	str	r1, [sp, #96]	; 0x60
 80208f8:	b292      	uxth	r2, r2
 80208fa:	b280      	uxth	r0, r0
 80208fc:	fb02 f800 	mul.w	r8, r2, r0
 8020900:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020904:	0112      	lsls	r2, r2, #4
 8020906:	eba2 0e08 	sub.w	lr, r2, r8
 802090a:	b280      	uxth	r0, r0
 802090c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020910:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8020912:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020914:	fa1f fe8e 	uxth.w	lr, lr
 8020918:	1a12      	subs	r2, r2, r0
 802091a:	b292      	uxth	r2, r2
 802091c:	fb0e f101 	mul.w	r1, lr, r1
 8020920:	fb02 110c 	mla	r1, r2, ip, r1
 8020924:	fb00 1104 	mla	r1, r0, r4, r1
 8020928:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802092a:	fb08 1104 	mla	r1, r8, r4, r1
 802092e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020932:	2900      	cmp	r1, #0
 8020934:	f000 80f5 	beq.w	8020b22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020938:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802093c:	d019      	beq.n	8020972 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802093e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020942:	fb0c fa0a 	mul.w	sl, ip, sl
 8020946:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802094a:	fb0c fc03 	mul.w	ip, ip, r3
 802094e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020952:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020956:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802095a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802095e:	4453      	add	r3, sl
 8020960:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020964:	0a1b      	lsrs	r3, r3, #8
 8020966:	0a3f      	lsrs	r7, r7, #8
 8020968:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802096c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020970:	433b      	orrs	r3, r7
 8020972:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020974:	2cff      	cmp	r4, #255	; 0xff
 8020976:	d020      	beq.n	80209ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020978:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802097a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802097e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020980:	4367      	muls	r7, r4
 8020982:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020984:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020988:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802098a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802098e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020992:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020996:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802099a:	44bc      	add	ip, r7
 802099c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80209a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80209a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80209ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80209b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80209b4:	ea4c 040a 	orr.w	r4, ip, sl
 80209b8:	9410      	str	r4, [sp, #64]	; 0x40
 80209ba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80209bc:	2cff      	cmp	r4, #255	; 0xff
 80209be:	d020      	beq.n	8020a02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80209c0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80209c2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80209c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80209c8:	4367      	muls	r7, r4
 80209ca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80209cc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80209d0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80209d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80209d6:	fb04 fa0a 	mul.w	sl, r4, sl
 80209da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80209de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80209e2:	44bc      	add	ip, r7
 80209e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80209e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80209ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80209f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80209f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80209fc:	ea4c 040a 	orr.w	r4, ip, sl
 8020a00:	940b      	str	r4, [sp, #44]	; 0x2c
 8020a02:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020a04:	2cff      	cmp	r4, #255	; 0xff
 8020a06:	d020      	beq.n	8020a4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020a08:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020a0a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020a0e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020a10:	4367      	muls	r7, r4
 8020a12:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020a14:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020a18:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020a1a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020a1e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a22:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020a26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020a2a:	44bc      	add	ip, r7
 8020a2c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020a30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020a34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020a38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020a40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020a44:	ea4c 040a 	orr.w	r4, ip, sl
 8020a48:	9411      	str	r4, [sp, #68]	; 0x44
 8020a4a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020a4c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020a50:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020a52:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020a56:	fb0e f707 	mul.w	r7, lr, r7
 8020a5a:	fb02 770c 	mla	r7, r2, ip, r7
 8020a5e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020a62:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020a64:	fb00 770c 	mla	r7, r0, ip, r7
 8020a68:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020a6c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020a6e:	fb08 770c 	mla	r7, r8, ip, r7
 8020a72:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020a76:	fb0e fe0c 	mul.w	lr, lr, ip
 8020a7a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020a7e:	fb02 e303 	mla	r3, r2, r3, lr
 8020a82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020a84:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020a86:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020a8a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020a8c:	fb00 330a 	mla	r3, r0, sl, r3
 8020a90:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020a94:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020a98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020a9a:	f8b9 0000 	ldrh.w	r0, [r9]
 8020a9e:	434b      	muls	r3, r1
 8020aa0:	0a3f      	lsrs	r7, r7, #8
 8020aa2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020aa6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020aaa:	1c59      	adds	r1, r3, #1
 8020aac:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020ab0:	ea47 070c 	orr.w	r7, r7, ip
 8020ab4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020ab8:	1202      	asrs	r2, r0, #8
 8020aba:	0c3b      	lsrs	r3, r7, #16
 8020abc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020ac0:	b2c9      	uxtb	r1, r1
 8020ac2:	fb13 f304 	smulbb	r3, r3, r4
 8020ac6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020aca:	fb02 3201 	mla	r2, r2, r1, r3
 8020ace:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020ad2:	10c3      	asrs	r3, r0, #3
 8020ad4:	b2ff      	uxtb	r7, r7
 8020ad6:	00c0      	lsls	r0, r0, #3
 8020ad8:	b292      	uxth	r2, r2
 8020ada:	fb1c fc04 	smulbb	ip, ip, r4
 8020ade:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020ae2:	b2c0      	uxtb	r0, r0
 8020ae4:	fb17 f704 	smulbb	r7, r7, r4
 8020ae8:	fb03 c301 	mla	r3, r3, r1, ip
 8020aec:	fb00 7001 	mla	r0, r0, r1, r7
 8020af0:	f102 0c01 	add.w	ip, r2, #1
 8020af4:	b280      	uxth	r0, r0
 8020af6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020afa:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020afe:	1c42      	adds	r2, r0, #1
 8020b00:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020b04:	b29b      	uxth	r3, r3
 8020b06:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020b0a:	ea42 020c 	orr.w	r2, r2, ip
 8020b0e:	f103 0c01 	add.w	ip, r3, #1
 8020b12:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020b16:	095b      	lsrs	r3, r3, #5
 8020b18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b1c:	431a      	orrs	r2, r3
 8020b1e:	f8a9 2000 	strh.w	r2, [r9]
 8020b22:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020b24:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020b26:	441a      	add	r2, r3
 8020b28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020b2a:	9229      	str	r2, [sp, #164]	; 0xa4
 8020b2c:	f109 0902 	add.w	r9, r9, #2
 8020b30:	441d      	add	r5, r3
 8020b32:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020b36:	e63d      	b.n	80207b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020b38:	2800      	cmp	r0, #0
 8020b3a:	f43f aedd 	beq.w	80208f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020b3e:	5c79      	ldrb	r1, [r7, r1]
 8020b40:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b44:	910b      	str	r1, [sp, #44]	; 0x2c
 8020b46:	0e09      	lsrs	r1, r1, #24
 8020b48:	9114      	str	r1, [sp, #80]	; 0x50
 8020b4a:	e6d5      	b.n	80208f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020b4c:	b01f      	add	sp, #124	; 0x7c
 8020b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020b52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b56:	b089      	sub	sp, #36	; 0x24
 8020b58:	9101      	str	r1, [sp, #4]
 8020b5a:	9801      	ldr	r0, [sp, #4]
 8020b5c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020b60:	8800      	ldrh	r0, [r0, #0]
 8020b62:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020b66:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020b6a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8020b6e:	1206      	asrs	r6, r0, #8
 8020b70:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020b74:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020b78:	9602      	str	r6, [sp, #8]
 8020b7a:	10c6      	asrs	r6, r0, #3
 8020b7c:	00c0      	lsls	r0, r0, #3
 8020b7e:	b2c0      	uxtb	r0, r0
 8020b80:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020b84:	9004      	str	r0, [sp, #16]
 8020b86:	2f00      	cmp	r7, #0
 8020b88:	fb07 100c 	mla	r0, r7, ip, r1
 8020b8c:	9603      	str	r6, [sp, #12]
 8020b8e:	eb02 0e00 	add.w	lr, r2, r0
 8020b92:	f2c0 810a 	blt.w	8020daa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020b96:	45b8      	cmp	r8, r7
 8020b98:	f340 8107 	ble.w	8020daa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020b9c:	2900      	cmp	r1, #0
 8020b9e:	f2c0 8102 	blt.w	8020da6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020ba2:	458c      	cmp	ip, r1
 8020ba4:	f340 80ff 	ble.w	8020da6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020ba8:	5c12      	ldrb	r2, [r2, r0]
 8020baa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020bae:	1c4a      	adds	r2, r1, #1
 8020bb0:	f100 80fe 	bmi.w	8020db0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020bb4:	4594      	cmp	ip, r2
 8020bb6:	f340 80fb 	ble.w	8020db0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020bba:	2d00      	cmp	r5, #0
 8020bbc:	f000 80fa 	beq.w	8020db4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020bc0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020bc4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020bc8:	3701      	adds	r7, #1
 8020bca:	f100 80f7 	bmi.w	8020dbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020bce:	45b8      	cmp	r8, r7
 8020bd0:	f340 80f4 	ble.w	8020dbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020bd4:	2c00      	cmp	r4, #0
 8020bd6:	f000 80f4 	beq.w	8020dc2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020bda:	2900      	cmp	r1, #0
 8020bdc:	eb0e 020c 	add.w	r2, lr, ip
 8020be0:	f2c0 80ea 	blt.w	8020db8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020be4:	458c      	cmp	ip, r1
 8020be6:	f340 80e7 	ble.w	8020db8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020bea:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020bee:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8020bf2:	3101      	adds	r1, #1
 8020bf4:	f100 80e8 	bmi.w	8020dc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020bf8:	458c      	cmp	ip, r1
 8020bfa:	f340 80e5 	ble.w	8020dc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020bfe:	2d00      	cmp	r5, #0
 8020c00:	f000 80e4 	beq.w	8020dcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020c04:	7852      	ldrb	r2, [r2, #1]
 8020c06:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020c0a:	0e0b      	lsrs	r3, r1, #24
 8020c0c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020c10:	9300      	str	r3, [sp, #0]
 8020c12:	b2a4      	uxth	r4, r4
 8020c14:	b2ab      	uxth	r3, r5
 8020c16:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020c1a:	fb03 f904 	mul.w	r9, r3, r4
 8020c1e:	fb0a f505 	mul.w	r5, sl, r5
 8020c22:	011b      	lsls	r3, r3, #4
 8020c24:	eba3 0e09 	sub.w	lr, r3, r9
 8020c28:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020c2c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020c30:	0a28      	lsrs	r0, r5, #8
 8020c32:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020c36:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8020c3a:	4405      	add	r5, r0
 8020c3c:	0a2d      	lsrs	r5, r5, #8
 8020c3e:	fb0a f303 	mul.w	r3, sl, r3
 8020c42:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020c46:	9005      	str	r0, [sp, #20]
 8020c48:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8020c4c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020c50:	0a1b      	lsrs	r3, r3, #8
 8020c52:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020c56:	9306      	str	r3, [sp, #24]
 8020c58:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020c5c:	fb0b f303 	mul.w	r3, fp, r3
 8020c60:	0a1d      	lsrs	r5, r3, #8
 8020c62:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020c66:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020c6a:	fb0b f606 	mul.w	r6, fp, r6
 8020c6e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8020c72:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8020c76:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020c7a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020c7e:	fb08 f707 	mul.w	r7, r8, r7
 8020c82:	441d      	add	r5, r3
 8020c84:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020c88:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020c8c:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020c90:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020c94:	fb08 fc0c 	mul.w	ip, r8, ip
 8020c98:	0a1b      	lsrs	r3, r3, #8
 8020c9a:	9307      	str	r3, [sp, #28]
 8020c9c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020ca0:	0e0b      	lsrs	r3, r1, #24
 8020ca2:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8020ca6:	435f      	muls	r7, r3
 8020ca8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020cac:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020cb0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020cb4:	4460      	add	r0, ip
 8020cb6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020cba:	b2a4      	uxth	r4, r4
 8020cbc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020cc0:	0a2d      	lsrs	r5, r5, #8
 8020cc2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020cc6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020cca:	fa1f fe8e 	uxth.w	lr, lr
 8020cce:	4359      	muls	r1, r3
 8020cd0:	1b12      	subs	r2, r2, r4
 8020cd2:	9b05      	ldr	r3, [sp, #20]
 8020cd4:	44bc      	add	ip, r7
 8020cd6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020cda:	b292      	uxth	r2, r2
 8020cdc:	fb05 f50e 	mul.w	r5, r5, lr
 8020ce0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ce4:	fb03 5502 	mla	r5, r3, r2, r5
 8020ce8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020cec:	9b06      	ldr	r3, [sp, #24]
 8020cee:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8020cf2:	0a36      	lsrs	r6, r6, #8
 8020cf4:	0a00      	lsrs	r0, r0, #8
 8020cf6:	fb0c 5509 	mla	r5, ip, r9, r5
 8020cfa:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020cfe:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020d02:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020d06:	fb00 5504 	mla	r5, r0, r4, r5
 8020d0a:	fb0e f606 	mul.w	r6, lr, r6
 8020d0e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020d12:	0a09      	lsrs	r1, r1, #8
 8020d14:	9b07      	ldr	r3, [sp, #28]
 8020d16:	fb02 6000 	mla	r0, r2, r0, r6
 8020d1a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020d1e:	fb09 0001 	mla	r0, r9, r1, r0
 8020d22:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020d26:	fb0e fe0b 	mul.w	lr, lr, fp
 8020d2a:	fb04 0003 	mla	r0, r4, r3, r0
 8020d2e:	fb02 e20a 	mla	r2, r2, sl, lr
 8020d32:	9b00      	ldr	r3, [sp, #0]
 8020d34:	fb04 2408 	mla	r4, r4, r8, r2
 8020d38:	fb09 4903 	mla	r9, r9, r3, r4
 8020d3c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020d40:	9b02      	ldr	r3, [sp, #8]
 8020d42:	9a04      	ldr	r2, [sp, #16]
 8020d44:	fa5f f989 	uxtb.w	r9, r9
 8020d48:	fb03 f109 	mul.w	r1, r3, r9
 8020d4c:	9b03      	ldr	r3, [sp, #12]
 8020d4e:	0a2d      	lsrs	r5, r5, #8
 8020d50:	0a00      	lsrs	r0, r0, #8
 8020d52:	fb03 f309 	mul.w	r3, r3, r9
 8020d56:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020d5a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020d5e:	4305      	orrs	r5, r0
 8020d60:	fb02 f909 	mul.w	r9, r2, r9
 8020d64:	1c58      	adds	r0, r3, #1
 8020d66:	1c4a      	adds	r2, r1, #1
 8020d68:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020d6c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020d70:	0a2b      	lsrs	r3, r5, #8
 8020d72:	0c2a      	lsrs	r2, r5, #16
 8020d74:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020d78:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020d7c:	00db      	lsls	r3, r3, #3
 8020d7e:	0212      	lsls	r2, r2, #8
 8020d80:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020d84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d88:	4313      	orrs	r3, r2
 8020d8a:	f109 0201 	add.w	r2, r9, #1
 8020d8e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020d92:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020d96:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020d9a:	431d      	orrs	r5, r3
 8020d9c:	9b01      	ldr	r3, [sp, #4]
 8020d9e:	801d      	strh	r5, [r3, #0]
 8020da0:	b009      	add	sp, #36	; 0x24
 8020da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020da6:	2000      	movs	r0, #0
 8020da8:	e701      	b.n	8020bae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020daa:	2600      	movs	r6, #0
 8020dac:	4630      	mov	r0, r6
 8020dae:	e70b      	b.n	8020bc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020db0:	2600      	movs	r6, #0
 8020db2:	e709      	b.n	8020bc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020db4:	462e      	mov	r6, r5
 8020db6:	e707      	b.n	8020bc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020db8:	2700      	movs	r7, #0
 8020dba:	e71a      	b.n	8020bf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020dbc:	2100      	movs	r1, #0
 8020dbe:	460f      	mov	r7, r1
 8020dc0:	e723      	b.n	8020c0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020dc2:	4621      	mov	r1, r4
 8020dc4:	4627      	mov	r7, r4
 8020dc6:	e720      	b.n	8020c0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020dc8:	2100      	movs	r1, #0
 8020dca:	e71e      	b.n	8020c0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020dcc:	4629      	mov	r1, r5
 8020dce:	e71c      	b.n	8020c0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020dd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020dd4:	b09b      	sub	sp, #108	; 0x6c
 8020dd6:	9218      	str	r2, [sp, #96]	; 0x60
 8020dd8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020dda:	9116      	str	r1, [sp, #88]	; 0x58
 8020ddc:	9307      	str	r3, [sp, #28]
 8020dde:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020de2:	9019      	str	r0, [sp, #100]	; 0x64
 8020de4:	6850      	ldr	r0, [r2, #4]
 8020de6:	6812      	ldr	r2, [r2, #0]
 8020de8:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020dea:	fb00 1303 	mla	r3, r0, r3, r1
 8020dee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020df2:	930a      	str	r3, [sp, #40]	; 0x28
 8020df4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020df6:	681b      	ldr	r3, [r3, #0]
 8020df8:	930f      	str	r3, [sp, #60]	; 0x3c
 8020dfa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020dfc:	685e      	ldr	r6, [r3, #4]
 8020dfe:	3604      	adds	r6, #4
 8020e00:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020e02:	2b00      	cmp	r3, #0
 8020e04:	dc03      	bgt.n	8020e0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020e06:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020e08:	2b00      	cmp	r3, #0
 8020e0a:	f340 8373 	ble.w	80214f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020e0e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020e10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020e14:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020e18:	1e48      	subs	r0, r1, #1
 8020e1a:	1e57      	subs	r7, r2, #1
 8020e1c:	9b07      	ldr	r3, [sp, #28]
 8020e1e:	2b00      	cmp	r3, #0
 8020e20:	f340 8190 	ble.w	8021144 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020e24:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020e26:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020e2a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020e2e:	d406      	bmi.n	8020e3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020e30:	4584      	cmp	ip, r0
 8020e32:	da04      	bge.n	8020e3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020e34:	2b00      	cmp	r3, #0
 8020e36:	db02      	blt.n	8020e3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020e38:	42bb      	cmp	r3, r7
 8020e3a:	f2c0 8184 	blt.w	8021146 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020e3e:	f11c 0c01 	adds.w	ip, ip, #1
 8020e42:	f100 8172 	bmi.w	802112a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020e46:	4561      	cmp	r1, ip
 8020e48:	f2c0 816f 	blt.w	802112a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020e4c:	3301      	adds	r3, #1
 8020e4e:	f100 816c 	bmi.w	802112a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020e52:	429a      	cmp	r2, r3
 8020e54:	f2c0 8169 	blt.w	802112a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020e58:	9b07      	ldr	r3, [sp, #28]
 8020e5a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020e5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8020e5e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020e60:	2b00      	cmp	r3, #0
 8020e62:	f340 818e 	ble.w	8021182 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020e66:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020e68:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020e6c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020e6e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020e72:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020e74:	141b      	asrs	r3, r3, #16
 8020e76:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020e7a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020e7e:	f100 81d1 	bmi.w	8021224 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020e82:	f101 38ff 	add.w	r8, r1, #4294967295
 8020e86:	4543      	cmp	r3, r8
 8020e88:	f280 81cc 	bge.w	8021224 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020e8c:	f1bc 0f00 	cmp.w	ip, #0
 8020e90:	f2c0 81c8 	blt.w	8021224 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020e94:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020e98:	45c4      	cmp	ip, r8
 8020e9a:	f280 81c3 	bge.w	8021224 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020e9e:	b209      	sxth	r1, r1
 8020ea0:	fb0c 3301 	mla	r3, ip, r1, r3
 8020ea4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020ea6:	eb04 0803 	add.w	r8, r4, r3
 8020eaa:	5ce3      	ldrb	r3, [r4, r3]
 8020eac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020eb0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020eb4:	2a00      	cmp	r2, #0
 8020eb6:	f000 81aa 	beq.w	802120e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020eba:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020ebe:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020ec2:	940b      	str	r4, [sp, #44]	; 0x2c
 8020ec4:	0e24      	lsrs	r4, r4, #24
 8020ec6:	9412      	str	r4, [sp, #72]	; 0x48
 8020ec8:	b178      	cbz	r0, 8020eea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020eca:	eb08 0c01 	add.w	ip, r8, r1
 8020ece:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020ed2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020ed6:	9108      	str	r1, [sp, #32]
 8020ed8:	0e09      	lsrs	r1, r1, #24
 8020eda:	9110      	str	r1, [sp, #64]	; 0x40
 8020edc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020ee0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020ee4:	910c      	str	r1, [sp, #48]	; 0x30
 8020ee6:	0e09      	lsrs	r1, r1, #24
 8020ee8:	9113      	str	r1, [sp, #76]	; 0x4c
 8020eea:	b292      	uxth	r2, r2
 8020eec:	b280      	uxth	r0, r0
 8020eee:	fb02 f900 	mul.w	r9, r2, r0
 8020ef2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020ef6:	0112      	lsls	r2, r2, #4
 8020ef8:	eba2 0809 	sub.w	r8, r2, r9
 8020efc:	b280      	uxth	r0, r0
 8020efe:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020f02:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020f04:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f06:	fa1f f888 	uxth.w	r8, r8
 8020f0a:	1a12      	subs	r2, r2, r0
 8020f0c:	b292      	uxth	r2, r2
 8020f0e:	fb08 f101 	mul.w	r1, r8, r1
 8020f12:	fb02 110e 	mla	r1, r2, lr, r1
 8020f16:	fb00 1104 	mla	r1, r0, r4, r1
 8020f1a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f1c:	fb09 1104 	mla	r1, r9, r4, r1
 8020f20:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020f24:	2900      	cmp	r1, #0
 8020f26:	f000 80f5 	beq.w	8021114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f2a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020f2e:	d01b      	beq.n	8020f68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020f30:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020f34:	fb0e fa0a 	mul.w	sl, lr, sl
 8020f38:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020f3c:	fb0e fe03 	mul.w	lr, lr, r3
 8020f40:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020f44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020f48:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020f4c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020f50:	4453      	add	r3, sl
 8020f52:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020f56:	0a1b      	lsrs	r3, r3, #8
 8020f58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f5c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020f60:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020f64:	ea43 030c 	orr.w	r3, r3, ip
 8020f68:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020f6a:	2cff      	cmp	r4, #255	; 0xff
 8020f6c:	d021      	beq.n	8020fb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020f6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020f70:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020f74:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020f76:	fb04 fb0b 	mul.w	fp, r4, fp
 8020f7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020f7c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f80:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020f82:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020f86:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f8e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020f92:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020f96:	44de      	add	lr, fp
 8020f98:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020f9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020fa0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020fa4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020fa8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020fac:	ea4e 040a 	orr.w	r4, lr, sl
 8020fb0:	940b      	str	r4, [sp, #44]	; 0x2c
 8020fb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020fb4:	2cff      	cmp	r4, #255	; 0xff
 8020fb6:	d021      	beq.n	8020ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020fb8:	9c08      	ldr	r4, [sp, #32]
 8020fba:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020fbe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020fc0:	fb04 fb0b 	mul.w	fp, r4, fp
 8020fc4:	9c08      	ldr	r4, [sp, #32]
 8020fc6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020fca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020fcc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020fd0:	fb04 fa0a 	mul.w	sl, r4, sl
 8020fd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020fd8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020fdc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020fe0:	44de      	add	lr, fp
 8020fe2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020fe6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020fea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020fee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ff2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ff6:	ea4e 040a 	orr.w	r4, lr, sl
 8020ffa:	9408      	str	r4, [sp, #32]
 8020ffc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020ffe:	2cff      	cmp	r4, #255	; 0xff
 8021000:	d021      	beq.n	8021046 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021002:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021004:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021008:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802100a:	fb04 fb0b 	mul.w	fp, r4, fp
 802100e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021010:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021014:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021016:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802101a:	fb04 fa0a 	mul.w	sl, r4, sl
 802101e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021022:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021026:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802102a:	44de      	add	lr, fp
 802102c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021030:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021034:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021038:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802103c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021040:	ea4e 040a 	orr.w	r4, lr, sl
 8021044:	940c      	str	r4, [sp, #48]	; 0x30
 8021046:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021048:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802104c:	9c08      	ldr	r4, [sp, #32]
 802104e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021052:	fb08 fc0c 	mul.w	ip, r8, ip
 8021056:	fb02 cc0e 	mla	ip, r2, lr, ip
 802105a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802105e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021060:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021064:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021068:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802106a:	fb09 cc0e 	mla	ip, r9, lr, ip
 802106e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021072:	fb08 f80e 	mul.w	r8, r8, lr
 8021076:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802107a:	fb02 8303 	mla	r3, r2, r3, r8
 802107e:	9a08      	ldr	r2, [sp, #32]
 8021080:	f8b7 8000 	ldrh.w	r8, [r7]
 8021084:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021088:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802108a:	fb00 330a 	mla	r3, r0, sl, r3
 802108e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021092:	fb09 3900 	mla	r9, r9, r0, r3
 8021096:	43c9      	mvns	r1, r1
 8021098:	ea4f 2228 	mov.w	r2, r8, asr #8
 802109c:	fa5f fe81 	uxtb.w	lr, r1
 80210a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80210a8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80210ac:	fb02 f20e 	mul.w	r2, r2, lr
 80210b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210b4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80210b8:	ea4c 0c09 	orr.w	ip, ip, r9
 80210bc:	1c53      	adds	r3, r2, #1
 80210be:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80210c2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80210c6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80210ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80210ce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80210d2:	4a63      	ldr	r2, [pc, #396]	; (8021260 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80210d4:	fb00 f00e 	mul.w	r0, r0, lr
 80210d8:	b2db      	uxtb	r3, r3
 80210da:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80210de:	1c43      	adds	r3, r0, #1
 80210e0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80210e4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80210e8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80210ec:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80210f0:	b2c9      	uxtb	r1, r1
 80210f2:	00db      	lsls	r3, r3, #3
 80210f4:	fb01 f10e 	mul.w	r1, r1, lr
 80210f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80210fc:	4313      	orrs	r3, r2
 80210fe:	1c4a      	adds	r2, r1, #1
 8021100:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021104:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021108:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802110c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021110:	f8a7 c000 	strh.w	ip, [r7]
 8021114:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021116:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021118:	441a      	add	r2, r3
 802111a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802111c:	9225      	str	r2, [sp, #148]	; 0x94
 802111e:	441d      	add	r5, r3
 8021120:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021122:	3b01      	subs	r3, #1
 8021124:	3702      	adds	r7, #2
 8021126:	9317      	str	r3, [sp, #92]	; 0x5c
 8021128:	e699      	b.n	8020e5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802112a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802112c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802112e:	441c      	add	r4, r3
 8021130:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021132:	9425      	str	r4, [sp, #148]	; 0x94
 8021134:	441d      	add	r5, r3
 8021136:	9b07      	ldr	r3, [sp, #28]
 8021138:	3b01      	subs	r3, #1
 802113a:	9307      	str	r3, [sp, #28]
 802113c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802113e:	3302      	adds	r3, #2
 8021140:	930a      	str	r3, [sp, #40]	; 0x28
 8021142:	e66b      	b.n	8020e1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021144:	d024      	beq.n	8021190 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021146:	9b07      	ldr	r3, [sp, #28]
 8021148:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802114a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802114c:	3b01      	subs	r3, #1
 802114e:	fb00 4003 	mla	r0, r0, r3, r4
 8021152:	1400      	asrs	r0, r0, #16
 8021154:	f53f ae80 	bmi.w	8020e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021158:	3901      	subs	r1, #1
 802115a:	4288      	cmp	r0, r1
 802115c:	f6bf ae7c 	bge.w	8020e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021160:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021162:	fb01 5303 	mla	r3, r1, r3, r5
 8021166:	141b      	asrs	r3, r3, #16
 8021168:	f53f ae76 	bmi.w	8020e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802116c:	3a01      	subs	r2, #1
 802116e:	4293      	cmp	r3, r2
 8021170:	f6bf ae72 	bge.w	8020e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021174:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021178:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802117c:	f1bb 0f00 	cmp.w	fp, #0
 8021180:	dc70      	bgt.n	8021264 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021182:	9b07      	ldr	r3, [sp, #28]
 8021184:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021188:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802118a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802118e:	930a      	str	r3, [sp, #40]	; 0x28
 8021190:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021192:	2b00      	cmp	r3, #0
 8021194:	f340 81ae 	ble.w	80214f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021198:	ee30 0a04 	vadd.f32	s0, s0, s8
 802119c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80211a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80211a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80211a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80211aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80211ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80211b2:	eef0 6a62 	vmov.f32	s13, s5
 80211b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80211ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80211be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80211c2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80211c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80211ca:	eef0 6a43 	vmov.f32	s13, s6
 80211ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80211d2:	ee12 2a90 	vmov	r2, s5
 80211d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80211da:	fb92 f3f3 	sdiv	r3, r2, r3
 80211de:	ee13 2a10 	vmov	r2, s6
 80211e2:	9327      	str	r3, [sp, #156]	; 0x9c
 80211e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80211e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80211ea:	9328      	str	r3, [sp, #160]	; 0xa0
 80211ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80211ee:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80211f0:	3b01      	subs	r3, #1
 80211f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80211f6:	9316      	str	r3, [sp, #88]	; 0x58
 80211f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80211fa:	bf08      	it	eq
 80211fc:	4613      	moveq	r3, r2
 80211fe:	ee16 5a90 	vmov	r5, s13
 8021202:	9307      	str	r3, [sp, #28]
 8021204:	eeb0 3a67 	vmov.f32	s6, s15
 8021208:	eef0 2a47 	vmov.f32	s5, s14
 802120c:	e5f8      	b.n	8020e00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802120e:	2800      	cmp	r0, #0
 8021210:	f43f ae6b 	beq.w	8020eea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021214:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021218:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802121c:	9108      	str	r1, [sp, #32]
 802121e:	0e09      	lsrs	r1, r1, #24
 8021220:	9110      	str	r1, [sp, #64]	; 0x40
 8021222:	e662      	b.n	8020eea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021224:	f113 0801 	adds.w	r8, r3, #1
 8021228:	f53f af74 	bmi.w	8021114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802122c:	4541      	cmp	r1, r8
 802122e:	f6ff af71 	blt.w	8021114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021232:	f11c 0801 	adds.w	r8, ip, #1
 8021236:	f53f af6d 	bmi.w	8021114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802123a:	45c6      	cmp	lr, r8
 802123c:	f6ff af6a 	blt.w	8021114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021240:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021244:	b209      	sxth	r1, r1
 8021246:	fa0f f38e 	sxth.w	r3, lr
 802124a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802124e:	9301      	str	r3, [sp, #4]
 8021250:	9100      	str	r1, [sp, #0]
 8021252:	4633      	mov	r3, r6
 8021254:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021256:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021258:	4639      	mov	r1, r7
 802125a:	f7ff fc7a 	bl	8020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802125e:	e759      	b.n	8021114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021260:	fffff800 	.word	0xfffff800
 8021264:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021266:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021268:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802126c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802126e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021272:	1427      	asrs	r7, r4, #16
 8021274:	142b      	asrs	r3, r5, #16
 8021276:	fb01 7303 	mla	r3, r1, r3, r7
 802127a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802127c:	18e7      	adds	r7, r4, r3
 802127e:	5ce3      	ldrb	r3, [r4, r3]
 8021280:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021284:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021288:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802128c:	2a00      	cmp	r2, #0
 802128e:	f000 8127 	beq.w	80214e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021292:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021296:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802129a:	940d      	str	r4, [sp, #52]	; 0x34
 802129c:	0e24      	lsrs	r4, r4, #24
 802129e:	9414      	str	r4, [sp, #80]	; 0x50
 80212a0:	b170      	cbz	r0, 80212c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80212a2:	eb07 0e01 	add.w	lr, r7, r1
 80212a6:	5c79      	ldrb	r1, [r7, r1]
 80212a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80212ac:	9109      	str	r1, [sp, #36]	; 0x24
 80212ae:	0e09      	lsrs	r1, r1, #24
 80212b0:	9111      	str	r1, [sp, #68]	; 0x44
 80212b2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80212b6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80212ba:	910e      	str	r1, [sp, #56]	; 0x38
 80212bc:	0e09      	lsrs	r1, r1, #24
 80212be:	9115      	str	r1, [sp, #84]	; 0x54
 80212c0:	b292      	uxth	r2, r2
 80212c2:	b280      	uxth	r0, r0
 80212c4:	fb02 f800 	mul.w	r8, r2, r0
 80212c8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80212cc:	0112      	lsls	r2, r2, #4
 80212ce:	eba2 0e08 	sub.w	lr, r2, r8
 80212d2:	b280      	uxth	r0, r0
 80212d4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80212d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80212da:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212dc:	fa1f fe8e 	uxth.w	lr, lr
 80212e0:	1a09      	subs	r1, r1, r0
 80212e2:	b289      	uxth	r1, r1
 80212e4:	fb0e f202 	mul.w	r2, lr, r2
 80212e8:	fb01 220c 	mla	r2, r1, ip, r2
 80212ec:	fb00 2204 	mla	r2, r0, r4, r2
 80212f0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80212f2:	fb08 2204 	mla	r2, r8, r4, r2
 80212f6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80212fa:	2a00      	cmp	r2, #0
 80212fc:	f000 80e5 	beq.w	80214ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021300:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021304:	d019      	beq.n	802133a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8021306:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802130a:	fb0c fa0a 	mul.w	sl, ip, sl
 802130e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021312:	fb0c fc03 	mul.w	ip, ip, r3
 8021316:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802131a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802131e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021322:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021326:	4453      	add	r3, sl
 8021328:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802132c:	0a1b      	lsrs	r3, r3, #8
 802132e:	0a3f      	lsrs	r7, r7, #8
 8021330:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021334:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021338:	433b      	orrs	r3, r7
 802133a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802133c:	2cff      	cmp	r4, #255	; 0xff
 802133e:	d020      	beq.n	8021382 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021340:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021342:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021346:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021348:	4367      	muls	r7, r4
 802134a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802134c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021350:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021352:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021356:	fb04 fa0a 	mul.w	sl, r4, sl
 802135a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802135e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021362:	44bc      	add	ip, r7
 8021364:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021368:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802136c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021370:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021374:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021378:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802137c:	ea4c 040a 	orr.w	r4, ip, sl
 8021380:	940d      	str	r4, [sp, #52]	; 0x34
 8021382:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021384:	2cff      	cmp	r4, #255	; 0xff
 8021386:	d020      	beq.n	80213ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8021388:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802138a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802138e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021390:	4367      	muls	r7, r4
 8021392:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021394:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021398:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802139a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802139e:	fb04 fa0a 	mul.w	sl, r4, sl
 80213a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80213a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80213aa:	44bc      	add	ip, r7
 80213ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80213b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80213b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80213bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80213c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80213c4:	ea4c 040a 	orr.w	r4, ip, sl
 80213c8:	9409      	str	r4, [sp, #36]	; 0x24
 80213ca:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80213cc:	2cff      	cmp	r4, #255	; 0xff
 80213ce:	d020      	beq.n	8021412 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80213d0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80213d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80213d6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80213d8:	4367      	muls	r7, r4
 80213da:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80213dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80213e0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80213e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80213e6:	fb04 fa0a 	mul.w	sl, r4, sl
 80213ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80213ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80213f2:	44bc      	add	ip, r7
 80213f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80213f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80213fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021400:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021404:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021408:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802140c:	ea4c 040a 	orr.w	r4, ip, sl
 8021410:	940e      	str	r4, [sp, #56]	; 0x38
 8021412:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021414:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021418:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802141a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802141e:	fb0e f707 	mul.w	r7, lr, r7
 8021422:	fb01 770c 	mla	r7, r1, ip, r7
 8021426:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802142a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802142c:	fb00 770c 	mla	r7, r0, ip, r7
 8021430:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021434:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021436:	fb08 770c 	mla	r7, r8, ip, r7
 802143a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802143e:	fb0e fe0c 	mul.w	lr, lr, ip
 8021442:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021446:	fb01 e303 	mla	r3, r1, r3, lr
 802144a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802144c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021450:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021452:	fb00 330a 	mla	r3, r0, sl, r3
 8021456:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802145a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802145e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021462:	43d2      	mvns	r2, r2
 8021464:	1218      	asrs	r0, r3, #8
 8021466:	b2d2      	uxtb	r2, r2
 8021468:	10d9      	asrs	r1, r3, #3
 802146a:	0a3f      	lsrs	r7, r7, #8
 802146c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021470:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021474:	00db      	lsls	r3, r3, #3
 8021476:	4350      	muls	r0, r2
 8021478:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802147c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021480:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021484:	b2db      	uxtb	r3, r3
 8021486:	ea47 070c 	orr.w	r7, r7, ip
 802148a:	4351      	muls	r1, r2
 802148c:	4353      	muls	r3, r2
 802148e:	1c42      	adds	r2, r0, #1
 8021490:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021494:	0c3a      	lsrs	r2, r7, #16
 8021496:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802149a:	4a18      	ldr	r2, [pc, #96]	; (80214fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 802149c:	b2c0      	uxtb	r0, r0
 802149e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80214a2:	1c4a      	adds	r2, r1, #1
 80214a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80214a8:	0a3a      	lsrs	r2, r7, #8
 80214aa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80214ae:	00c9      	lsls	r1, r1, #3
 80214b0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80214b4:	4301      	orrs	r1, r0
 80214b6:	1c58      	adds	r0, r3, #1
 80214b8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80214bc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80214c0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80214c4:	4308      	orrs	r0, r1
 80214c6:	f8a9 0000 	strh.w	r0, [r9]
 80214ca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80214cc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80214ce:	441a      	add	r2, r3
 80214d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214d2:	9225      	str	r2, [sp, #148]	; 0x94
 80214d4:	f109 0902 	add.w	r9, r9, #2
 80214d8:	441d      	add	r5, r3
 80214da:	f10b 3bff 	add.w	fp, fp, #4294967295
 80214de:	e64d      	b.n	802117c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80214e0:	2800      	cmp	r0, #0
 80214e2:	f43f aeed 	beq.w	80212c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80214e6:	5c79      	ldrb	r1, [r7, r1]
 80214e8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80214ec:	9109      	str	r1, [sp, #36]	; 0x24
 80214ee:	0e09      	lsrs	r1, r1, #24
 80214f0:	9111      	str	r1, [sp, #68]	; 0x44
 80214f2:	e6e5      	b.n	80212c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80214f4:	b01b      	add	sp, #108	; 0x6c
 80214f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214fa:	bf00      	nop
 80214fc:	fffff800 	.word	0xfffff800

08021500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021504:	b085      	sub	sp, #20
 8021506:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802150a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802150e:	9103      	str	r1, [sp, #12]
 8021510:	fb00 7406 	mla	r4, r0, r6, r7
 8021514:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021518:	2800      	cmp	r0, #0
 802151a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802151e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021522:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021526:	9501      	str	r5, [sp, #4]
 8021528:	eb03 0904 	add.w	r9, r3, r4
 802152c:	f2c0 8150 	blt.w	80217d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021530:	4583      	cmp	fp, r0
 8021532:	f340 814d 	ble.w	80217d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021536:	2f00      	cmp	r7, #0
 8021538:	f2c0 8146 	blt.w	80217c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802153c:	42be      	cmp	r6, r7
 802153e:	f340 8143 	ble.w	80217c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021542:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021546:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802154a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802154e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021552:	4355      	muls	r5, r2
 8021554:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021558:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802155c:	fb0c f203 	mul.w	r2, ip, r3
 8021560:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021564:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021568:	441d      	add	r5, r3
 802156a:	f102 0320 	add.w	r3, r2, #32
 802156e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021572:	0a1b      	lsrs	r3, r3, #8
 8021574:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021578:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802157c:	431c      	orrs	r4, r3
 802157e:	1c7b      	adds	r3, r7, #1
 8021580:	f100 812b 	bmi.w	80217da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021584:	429e      	cmp	r6, r3
 8021586:	f340 8128 	ble.w	80217da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802158a:	2900      	cmp	r1, #0
 802158c:	f000 8128 	beq.w	80217e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8021590:	9a01      	ldr	r2, [sp, #4]
 8021592:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021596:	8855      	ldrh	r5, [r2, #2]
 8021598:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802159c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80215a0:	fb08 f802 	mul.w	r8, r8, r2
 80215a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80215a8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80215ac:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80215b0:	435d      	muls	r5, r3
 80215b2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80215b6:	44d0      	add	r8, sl
 80215b8:	f105 0a20 	add.w	sl, r5, #32
 80215bc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80215c0:	0a2d      	lsrs	r5, r5, #8
 80215c2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80215c6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80215ca:	432a      	orrs	r2, r5
 80215cc:	3001      	adds	r0, #1
 80215ce:	f100 810d 	bmi.w	80217ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80215d2:	4583      	cmp	fp, r0
 80215d4:	f340 810a 	ble.w	80217ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80215d8:	f1be 0f00 	cmp.w	lr, #0
 80215dc:	f000 810b 	beq.w	80217f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80215e0:	2f00      	cmp	r7, #0
 80215e2:	f2c0 8100 	blt.w	80217e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80215e6:	42be      	cmp	r6, r7
 80215e8:	f340 80fd 	ble.w	80217e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80215ec:	9801      	ldr	r0, [sp, #4]
 80215ee:	f819 5006 	ldrb.w	r5, [r9, r6]
 80215f2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80215f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80215fa:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80215fe:	fb0a fa00 	mul.w	sl, sl, r0
 8021602:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021606:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802160a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802160e:	fb05 f808 	mul.w	r8, r5, r8
 8021612:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021616:	4482      	add	sl, r0
 8021618:	f108 0020 	add.w	r0, r8, #32
 802161c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021620:	0a00      	lsrs	r0, r0, #8
 8021622:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021626:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802162a:	ea4b 0b00 	orr.w	fp, fp, r0
 802162e:	3701      	adds	r7, #1
 8021630:	f100 80e6 	bmi.w	8021800 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021634:	42be      	cmp	r6, r7
 8021636:	f340 80e3 	ble.w	8021800 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802163a:	2900      	cmp	r1, #0
 802163c:	f000 80e3 	beq.w	8021806 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021640:	3601      	adds	r6, #1
 8021642:	9801      	ldr	r0, [sp, #4]
 8021644:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021648:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802164c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021650:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021654:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021658:	fb09 f906 	mul.w	r9, r9, r6
 802165c:	fb07 f800 	mul.w	r8, r7, r0
 8021660:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021664:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021668:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802166c:	44d1      	add	r9, sl
 802166e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021672:	f108 0020 	add.w	r0, r8, #32
 8021676:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802167a:	0a00      	lsrs	r0, r0, #8
 802167c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021680:	4330      	orrs	r0, r6
 8021682:	b28e      	uxth	r6, r1
 8021684:	fa1f f98e 	uxth.w	r9, lr
 8021688:	fb06 f809 	mul.w	r8, r6, r9
 802168c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021690:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021694:	0136      	lsls	r6, r6, #4
 8021696:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802169a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802169e:	9601      	str	r6, [sp, #4]
 80216a0:	ea4a 0404 	orr.w	r4, sl, r4
 80216a4:	fa1f f689 	uxth.w	r6, r9
 80216a8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80216ac:	fb11 f90e 	smulbb	r9, r1, lr
 80216b0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80216b4:	9602      	str	r6, [sp, #8]
 80216b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80216ba:	4626      	mov	r6, r4
 80216bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80216c0:	f1ce 0410 	rsb	r4, lr, #16
 80216c4:	1a64      	subs	r4, r4, r1
 80216c6:	ea4a 0202 	orr.w	r2, sl, r2
 80216ca:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80216ce:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80216d2:	434a      	muls	r2, r1
 80216d4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80216d8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80216dc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80216e0:	fb04 2406 	mla	r4, r4, r6, r2
 80216e4:	ea4a 0000 	orr.w	r0, sl, r0
 80216e8:	fb09 4200 	mla	r2, r9, r0, r4
 80216ec:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80216f0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80216f4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80216f8:	ea44 0b0b 	orr.w	fp, r4, fp
 80216fc:	9c01      	ldr	r4, [sp, #4]
 80216fe:	9e02      	ldr	r6, [sp, #8]
 8021700:	9903      	ldr	r1, [sp, #12]
 8021702:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8021706:	1ba4      	subs	r4, r4, r6
 8021708:	9e01      	ldr	r6, [sp, #4]
 802170a:	8808      	ldrh	r0, [r1, #0]
 802170c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021710:	eba6 0608 	sub.w	r6, r6, r8
 8021714:	b2b6      	uxth	r6, r6
 8021716:	b2a4      	uxth	r4, r4
 8021718:	4373      	muls	r3, r6
 802171a:	fb0c 3304 	mla	r3, ip, r4, r3
 802171e:	9c02      	ldr	r4, [sp, #8]
 8021720:	fb04 3505 	mla	r5, r4, r5, r3
 8021724:	fb08 5707 	mla	r7, r8, r7, r5
 8021728:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802172c:	b289      	uxth	r1, r1
 802172e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021732:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021736:	434f      	muls	r7, r1
 8021738:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802173c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021740:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021744:	1c7b      	adds	r3, r7, #1
 8021746:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802174a:	ea42 0e0e 	orr.w	lr, r2, lr
 802174e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021752:	fa1f f28e 	uxth.w	r2, lr
 8021756:	1203      	asrs	r3, r0, #8
 8021758:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802175c:	b2ff      	uxtb	r7, r7
 802175e:	1215      	asrs	r5, r2, #8
 8021760:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021764:	fb13 f307 	smulbb	r3, r3, r7
 8021768:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802176c:	fb05 3501 	mla	r5, r5, r1, r3
 8021770:	10c3      	asrs	r3, r0, #3
 8021772:	10d4      	asrs	r4, r2, #3
 8021774:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021778:	fb13 f307 	smulbb	r3, r3, r7
 802177c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021780:	fb04 3401 	mla	r4, r4, r1, r3
 8021784:	00c3      	lsls	r3, r0, #3
 8021786:	00d2      	lsls	r2, r2, #3
 8021788:	b2db      	uxtb	r3, r3
 802178a:	fb13 f307 	smulbb	r3, r3, r7
 802178e:	b2d2      	uxtb	r2, r2
 8021790:	fb02 3101 	mla	r1, r2, r1, r3
 8021794:	b2ad      	uxth	r5, r5
 8021796:	b289      	uxth	r1, r1
 8021798:	b2a4      	uxth	r4, r4
 802179a:	1c6b      	adds	r3, r5, #1
 802179c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80217a0:	1c62      	adds	r2, r4, #1
 80217a2:	1c4b      	adds	r3, r1, #1
 80217a4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80217a8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80217ac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80217b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80217b4:	0964      	lsrs	r4, r4, #5
 80217b6:	432b      	orrs	r3, r5
 80217b8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80217bc:	9a03      	ldr	r2, [sp, #12]
 80217be:	4323      	orrs	r3, r4
 80217c0:	8013      	strh	r3, [r2, #0]
 80217c2:	b005      	add	sp, #20
 80217c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80217c8:	f04f 0c00 	mov.w	ip, #0
 80217cc:	4664      	mov	r4, ip
 80217ce:	e6d6      	b.n	802157e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80217d0:	2300      	movs	r3, #0
 80217d2:	469c      	mov	ip, r3
 80217d4:	461a      	mov	r2, r3
 80217d6:	461c      	mov	r4, r3
 80217d8:	e6f8      	b.n	80215cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80217da:	2300      	movs	r3, #0
 80217dc:	461a      	mov	r2, r3
 80217de:	e6f5      	b.n	80215cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80217e0:	460b      	mov	r3, r1
 80217e2:	460a      	mov	r2, r1
 80217e4:	e6f2      	b.n	80215cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80217e6:	2500      	movs	r5, #0
 80217e8:	46ab      	mov	fp, r5
 80217ea:	e720      	b.n	802162e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80217ec:	2700      	movs	r7, #0
 80217ee:	463d      	mov	r5, r7
 80217f0:	4638      	mov	r0, r7
 80217f2:	46bb      	mov	fp, r7
 80217f4:	e745      	b.n	8021682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80217f6:	4677      	mov	r7, lr
 80217f8:	4675      	mov	r5, lr
 80217fa:	4670      	mov	r0, lr
 80217fc:	46f3      	mov	fp, lr
 80217fe:	e740      	b.n	8021682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021800:	2700      	movs	r7, #0
 8021802:	4638      	mov	r0, r7
 8021804:	e73d      	b.n	8021682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021806:	460f      	mov	r7, r1
 8021808:	4608      	mov	r0, r1
 802180a:	e73a      	b.n	8021682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0802180c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802180c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021810:	b097      	sub	sp, #92	; 0x5c
 8021812:	9214      	str	r2, [sp, #80]	; 0x50
 8021814:	9308      	str	r3, [sp, #32]
 8021816:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021818:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802181c:	9312      	str	r3, [sp, #72]	; 0x48
 802181e:	9111      	str	r1, [sp, #68]	; 0x44
 8021820:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021824:	9015      	str	r0, [sp, #84]	; 0x54
 8021826:	6850      	ldr	r0, [r2, #4]
 8021828:	6812      	ldr	r2, [r2, #0]
 802182a:	fb00 1303 	mla	r3, r0, r3, r1
 802182e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021832:	9309      	str	r3, [sp, #36]	; 0x24
 8021834:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021836:	681b      	ldr	r3, [r3, #0]
 8021838:	930b      	str	r3, [sp, #44]	; 0x2c
 802183a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802183c:	685b      	ldr	r3, [r3, #4]
 802183e:	930c      	str	r3, [sp, #48]	; 0x30
 8021840:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021844:	930a      	str	r3, [sp, #40]	; 0x28
 8021846:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021848:	2b00      	cmp	r3, #0
 802184a:	dc03      	bgt.n	8021854 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802184c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802184e:	2b00      	cmp	r3, #0
 8021850:	f340 83cb 	ble.w	8021fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021854:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021856:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802185a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802185e:	1e48      	subs	r0, r1, #1
 8021860:	1e55      	subs	r5, r2, #1
 8021862:	9b08      	ldr	r3, [sp, #32]
 8021864:	2b00      	cmp	r3, #0
 8021866:	f340 81a3 	ble.w	8021bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802186a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802186c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802186e:	1436      	asrs	r6, r6, #16
 8021870:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021874:	d406      	bmi.n	8021884 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021876:	4286      	cmp	r6, r0
 8021878:	da04      	bge.n	8021884 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802187a:	2b00      	cmp	r3, #0
 802187c:	db02      	blt.n	8021884 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802187e:	42ab      	cmp	r3, r5
 8021880:	f2c0 8197 	blt.w	8021bb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021884:	3601      	adds	r6, #1
 8021886:	f100 8184 	bmi.w	8021b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802188a:	42b1      	cmp	r1, r6
 802188c:	f2c0 8181 	blt.w	8021b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021890:	3301      	adds	r3, #1
 8021892:	f100 817e 	bmi.w	8021b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021896:	429a      	cmp	r2, r3
 8021898:	f2c0 817b 	blt.w	8021b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802189c:	9b08      	ldr	r3, [sp, #32]
 802189e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80218a0:	9313      	str	r3, [sp, #76]	; 0x4c
 80218a2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80218a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80218a8:	2b00      	cmp	r3, #0
 80218aa:	f340 81a4 	ble.w	8021bf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80218ae:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80218b0:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80218b2:	1418      	asrs	r0, r3, #16
 80218b4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80218b6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80218ba:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80218bc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80218c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80218c2:	142d      	asrs	r5, r5, #16
 80218c4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80218c8:	f100 81f8 	bmi.w	8021cbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80218cc:	f102 3eff 	add.w	lr, r2, #4294967295
 80218d0:	4575      	cmp	r5, lr
 80218d2:	f280 81f3 	bge.w	8021cbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80218d6:	2800      	cmp	r0, #0
 80218d8:	f2c0 81f0 	blt.w	8021cbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80218dc:	f103 3eff 	add.w	lr, r3, #4294967295
 80218e0:	4570      	cmp	r0, lr
 80218e2:	f280 81eb 	bge.w	8021cbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80218e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80218e8:	b212      	sxth	r2, r2
 80218ea:	fb00 5002 	mla	r0, r0, r2, r5
 80218ee:	fa1f fe81 	uxth.w	lr, r1
 80218f2:	eb03 0a00 	add.w	sl, r3, r0
 80218f6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80218fa:	f813 9000 	ldrb.w	r9, [r3, r0]
 80218fe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021902:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021906:	b29b      	uxth	r3, r3
 8021908:	f1bc 0f00 	cmp.w	ip, #0
 802190c:	f000 81b9 	beq.w	8021c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021910:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021914:	940d      	str	r4, [sp, #52]	; 0x34
 8021916:	eb0a 0b02 	add.w	fp, sl, r2
 802191a:	fa1f fa8c 	uxth.w	sl, ip
 802191e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021922:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021926:	fa1f fa8a 	uxth.w	sl, sl
 802192a:	eba5 050e 	sub.w	r5, r5, lr
 802192e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021932:	940e      	str	r4, [sp, #56]	; 0x38
 8021934:	eba3 030a 	sub.w	r3, r3, sl
 8021938:	b2ad      	uxth	r5, r5
 802193a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802193c:	b29b      	uxth	r3, r3
 802193e:	fb08 f505 	mul.w	r5, r8, r5
 8021942:	fb09 5303 	mla	r3, r9, r3, r5
 8021946:	fb0a 3304 	mla	r3, sl, r4, r3
 802194a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802194c:	fb0e 3304 	mla	r3, lr, r4, r3
 8021950:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021954:	2b00      	cmp	r3, #0
 8021956:	f000 810f 	beq.w	8021b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802195a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802195c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021960:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021964:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021968:	f000 8190 	beq.w	8021c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 802196c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021970:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021974:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021978:	fb09 f000 	mul.w	r0, r9, r0
 802197c:	fb0a fe0e 	mul.w	lr, sl, lr
 8021980:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021984:	f100 0b20 	add.w	fp, r0, #32
 8021988:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802198c:	44ce      	add	lr, r9
 802198e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021992:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021996:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802199a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802199e:	ea4e 0909 	orr.w	r9, lr, r9
 80219a2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80219a6:	8868      	ldrh	r0, [r5, #2]
 80219a8:	d019      	beq.n	80219de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80219aa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80219ae:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80219b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80219b6:	fb08 f800 	mul.w	r8, r8, r0
 80219ba:	fb0a fe0e 	mul.w	lr, sl, lr
 80219be:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80219c2:	f108 0b20 	add.w	fp, r8, #32
 80219c6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80219ca:	4486      	add	lr, r0
 80219cc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80219d0:	0a00      	lsrs	r0, r0, #8
 80219d2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80219d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80219da:	ea4e 0000 	orr.w	r0, lr, r0
 80219de:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80219e2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80219e6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80219ea:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80219ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80219f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80219f6:	ea4e 0909 	orr.w	r9, lr, r9
 80219fa:	ea4a 0000 	orr.w	r0, sl, r0
 80219fe:	f1bc 0f00 	cmp.w	ip, #0
 8021a02:	f000 8145 	beq.w	8021c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021a06:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021a0a:	3a01      	subs	r2, #1
 8021a0c:	0052      	lsls	r2, r2, #1
 8021a0e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021a10:	3202      	adds	r2, #2
 8021a12:	2cff      	cmp	r4, #255	; 0xff
 8021a14:	eb05 0e02 	add.w	lr, r5, r2
 8021a18:	5aaa      	ldrh	r2, [r5, r2]
 8021a1a:	d018      	beq.n	8021a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021a1c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021a20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021a24:	fb04 fa02 	mul.w	sl, r4, r2
 8021a28:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021a2c:	fb08 f805 	mul.w	r8, r8, r5
 8021a30:	f10a 0520 	add.w	r5, sl, #32
 8021a34:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021a38:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021a3c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021a40:	4442      	add	r2, r8
 8021a42:	0a2d      	lsrs	r5, r5, #8
 8021a44:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021a48:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021a4c:	432a      	orrs	r2, r5
 8021a4e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021a50:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021a54:	2cff      	cmp	r4, #255	; 0xff
 8021a56:	d01a      	beq.n	8021a8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021a58:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021a5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021a60:	fb04 fa05 	mul.w	sl, r4, r5
 8021a64:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021a68:	fb08 f80e 	mul.w	r8, r8, lr
 8021a6c:	f10a 0e20 	add.w	lr, sl, #32
 8021a70:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021a74:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021a78:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021a7c:	4445      	add	r5, r8
 8021a7e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021a82:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021a86:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021a8a:	ea45 050e 	orr.w	r5, r5, lr
 8021a8e:	fb1c fe01 	smulbb	lr, ip, r1
 8021a92:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021a96:	f1cc 0810 	rsb	r8, ip, #16
 8021a9a:	eba8 0801 	sub.w	r8, r8, r1
 8021a9e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021aa2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021aa6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021aaa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021aae:	4341      	muls	r1, r0
 8021ab0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ab4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021ab8:	ea4a 0202 	orr.w	r2, sl, r2
 8021abc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021ac0:	fb09 1108 	mla	r1, r9, r8, r1
 8021ac4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021ac8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021acc:	fb0c 1102 	mla	r1, ip, r2, r1
 8021ad0:	ea4b 0505 	orr.w	r5, fp, r5
 8021ad4:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021ad8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021adc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021ae0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021ae4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021ae8:	ea42 0e0e 	orr.w	lr, r2, lr
 8021aec:	fa1f f28e 	uxth.w	r2, lr
 8021af0:	2bff      	cmp	r3, #255	; 0xff
 8021af2:	d103      	bne.n	8021afc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021af4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021af6:	29ff      	cmp	r1, #255	; 0xff
 8021af8:	f000 80de 	beq.w	8021cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021afc:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021afe:	8838      	ldrh	r0, [r7, #0]
 8021b00:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021b02:	434b      	muls	r3, r1
 8021b04:	f103 0c01 	add.w	ip, r3, #1
 8021b08:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021b0c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021b10:	fa5f fc83 	uxtb.w	ip, r3
 8021b14:	1203      	asrs	r3, r0, #8
 8021b16:	1215      	asrs	r5, r2, #8
 8021b18:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021b1c:	fb13 f30c 	smulbb	r3, r3, ip
 8021b20:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021b24:	fb05 3501 	mla	r5, r5, r1, r3
 8021b28:	10c3      	asrs	r3, r0, #3
 8021b2a:	10d1      	asrs	r1, r2, #3
 8021b2c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021b30:	fb13 f30c 	smulbb	r3, r3, ip
 8021b34:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021b38:	fb01 3104 	mla	r1, r1, r4, r3
 8021b3c:	00c3      	lsls	r3, r0, #3
 8021b3e:	00d2      	lsls	r2, r2, #3
 8021b40:	b2db      	uxtb	r3, r3
 8021b42:	b2d2      	uxtb	r2, r2
 8021b44:	fb13 f30c 	smulbb	r3, r3, ip
 8021b48:	b2ad      	uxth	r5, r5
 8021b4a:	fb02 3304 	mla	r3, r2, r4, r3
 8021b4e:	b29a      	uxth	r2, r3
 8021b50:	1c6b      	adds	r3, r5, #1
 8021b52:	b289      	uxth	r1, r1
 8021b54:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021b58:	1c53      	adds	r3, r2, #1
 8021b5a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021b5e:	1c4a      	adds	r2, r1, #1
 8021b60:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021b64:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021b68:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021b6c:	0949      	lsrs	r1, r1, #5
 8021b6e:	432b      	orrs	r3, r5
 8021b70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021b74:	430b      	orrs	r3, r1
 8021b76:	803b      	strh	r3, [r7, #0]
 8021b78:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021b7a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021b7c:	4413      	add	r3, r2
 8021b7e:	9321      	str	r3, [sp, #132]	; 0x84
 8021b80:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021b82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021b84:	441a      	add	r2, r3
 8021b86:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b88:	9222      	str	r2, [sp, #136]	; 0x88
 8021b8a:	3b01      	subs	r3, #1
 8021b8c:	3702      	adds	r7, #2
 8021b8e:	9313      	str	r3, [sp, #76]	; 0x4c
 8021b90:	e689      	b.n	80218a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021b92:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021b94:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8021b96:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021b98:	4433      	add	r3, r6
 8021b9a:	9321      	str	r3, [sp, #132]	; 0x84
 8021b9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021b9e:	441c      	add	r4, r3
 8021ba0:	9b08      	ldr	r3, [sp, #32]
 8021ba2:	9422      	str	r4, [sp, #136]	; 0x88
 8021ba4:	3b01      	subs	r3, #1
 8021ba6:	9308      	str	r3, [sp, #32]
 8021ba8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021baa:	3302      	adds	r3, #2
 8021bac:	9309      	str	r3, [sp, #36]	; 0x24
 8021bae:	e658      	b.n	8021862 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021bb0:	d028      	beq.n	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021bb2:	9b08      	ldr	r3, [sp, #32]
 8021bb4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021bb6:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021bb8:	3b01      	subs	r3, #1
 8021bba:	fb00 5003 	mla	r0, r0, r3, r5
 8021bbe:	1400      	asrs	r0, r0, #16
 8021bc0:	f53f ae6c 	bmi.w	802189c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021bc4:	3901      	subs	r1, #1
 8021bc6:	4288      	cmp	r0, r1
 8021bc8:	f6bf ae68 	bge.w	802189c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021bcc:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021bce:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021bd0:	fb01 0303 	mla	r3, r1, r3, r0
 8021bd4:	141b      	asrs	r3, r3, #16
 8021bd6:	f53f ae61 	bmi.w	802189c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021bda:	3a01      	subs	r2, #1
 8021bdc:	4293      	cmp	r3, r2
 8021bde:	f6bf ae5d 	bge.w	802189c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021be2:	9b08      	ldr	r3, [sp, #32]
 8021be4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021be8:	9313      	str	r3, [sp, #76]	; 0x4c
 8021bea:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021bee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021bf0:	2b00      	cmp	r3, #0
 8021bf2:	f300 8082 	bgt.w	8021cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021bf6:	9b08      	ldr	r3, [sp, #32]
 8021bf8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021bfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021bfe:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021c02:	9309      	str	r3, [sp, #36]	; 0x24
 8021c04:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021c06:	2b00      	cmp	r3, #0
 8021c08:	f340 81ef 	ble.w	8021fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021c0c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021c10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021c14:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021c18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021c1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021c1e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021c22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021c26:	eef0 6a62 	vmov.f32	s13, s5
 8021c2a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021c2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021c32:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021c36:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8021c3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021c3e:	eef0 6a43 	vmov.f32	s13, s6
 8021c42:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021c46:	ee12 2a90 	vmov	r2, s5
 8021c4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021c4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021c52:	ee13 2a10 	vmov	r2, s6
 8021c56:	9323      	str	r3, [sp, #140]	; 0x8c
 8021c58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021c5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021c5e:	9324      	str	r3, [sp, #144]	; 0x90
 8021c60:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021c62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021c64:	3b01      	subs	r3, #1
 8021c66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021c6a:	9311      	str	r3, [sp, #68]	; 0x44
 8021c6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021c6e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8021c72:	bf08      	it	eq
 8021c74:	4613      	moveq	r3, r2
 8021c76:	9308      	str	r3, [sp, #32]
 8021c78:	eeb0 3a67 	vmov.f32	s6, s15
 8021c7c:	eef0 2a47 	vmov.f32	s5, s14
 8021c80:	e5e1      	b.n	8021846 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021c82:	fb08 f505 	mul.w	r5, r8, r5
 8021c86:	fb09 5303 	mla	r3, r9, r3, r5
 8021c8a:	e661      	b.n	8021950 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021c8c:	4681      	mov	r9, r0
 8021c8e:	e688      	b.n	80219a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021c90:	f1c1 0210 	rsb	r2, r1, #16
 8021c94:	4341      	muls	r1, r0
 8021c96:	fb09 1902 	mla	r9, r9, r2, r1
 8021c9a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021c9e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021ca2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021ca6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021caa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021cae:	ea42 0909 	orr.w	r9, r2, r9
 8021cb2:	fa1f f289 	uxth.w	r2, r9
 8021cb6:	e71b      	b.n	8021af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021cb8:	803a      	strh	r2, [r7, #0]
 8021cba:	e75d      	b.n	8021b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021cbc:	f115 0e01 	adds.w	lr, r5, #1
 8021cc0:	f53f af5a 	bmi.w	8021b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021cc4:	4572      	cmp	r2, lr
 8021cc6:	f6ff af57 	blt.w	8021b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021cca:	f110 0e01 	adds.w	lr, r0, #1
 8021cce:	f53f af53 	bmi.w	8021b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021cd2:	4573      	cmp	r3, lr
 8021cd4:	f6ff af50 	blt.w	8021b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021cd8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021cda:	9502      	str	r5, [sp, #8]
 8021cdc:	b21b      	sxth	r3, r3
 8021cde:	b212      	sxth	r2, r2
 8021ce0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021ce4:	9301      	str	r3, [sp, #4]
 8021ce6:	9200      	str	r2, [sp, #0]
 8021ce8:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021cec:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021cf0:	4639      	mov	r1, r7
 8021cf2:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021cf4:	f7ff fc04 	bl	8021500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021cf8:	e73e      	b.n	8021b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021cfa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021cfc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021d00:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021d02:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021d06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d08:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d0c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021d0e:	141f      	asrs	r7, r3, #16
 8021d10:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021d12:	141b      	asrs	r3, r3, #16
 8021d14:	fb01 3707 	mla	r7, r1, r7, r3
 8021d18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021d1a:	fa1f fc82 	uxth.w	ip, r2
 8021d1e:	eb03 0a07 	add.w	sl, r3, r7
 8021d22:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021d26:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021d2a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021d2e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021d32:	b29b      	uxth	r3, r3
 8021d34:	2d00      	cmp	r5, #0
 8021d36:	f000 813d 	beq.w	8021fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021d3a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021d3e:	940f      	str	r4, [sp, #60]	; 0x3c
 8021d40:	eb0a 0b01 	add.w	fp, sl, r1
 8021d44:	fa1f fa85 	uxth.w	sl, r5
 8021d48:	fb0a fc0c 	mul.w	ip, sl, ip
 8021d4c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021d50:	fa1f fa8a 	uxth.w	sl, sl
 8021d54:	eba0 000c 	sub.w	r0, r0, ip
 8021d58:	eba3 030a 	sub.w	r3, r3, sl
 8021d5c:	b280      	uxth	r0, r0
 8021d5e:	fb08 f000 	mul.w	r0, r8, r0
 8021d62:	b29b      	uxth	r3, r3
 8021d64:	fb09 0303 	mla	r3, r9, r3, r0
 8021d68:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021d6a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021d6e:	9410      	str	r4, [sp, #64]	; 0x40
 8021d70:	fb0a 3300 	mla	r3, sl, r0, r3
 8021d74:	fb0c 3304 	mla	r3, ip, r4, r3
 8021d78:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021d7c:	2b00      	cmp	r3, #0
 8021d7e:	f000 810b 	beq.w	8021f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021d82:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021d84:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021d86:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021d8a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021d8e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021d92:	f000 8114 	beq.w	8021fbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021d96:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021d9a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021d9e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021da2:	fb09 f707 	mul.w	r7, r9, r7
 8021da6:	fb0a fc0c 	mul.w	ip, sl, ip
 8021daa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021dae:	f107 0b20 	add.w	fp, r7, #32
 8021db2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021db6:	44cc      	add	ip, r9
 8021db8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021dbc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021dc0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021dc4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021dc8:	ea4c 0909 	orr.w	r9, ip, r9
 8021dcc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021dd0:	8847      	ldrh	r7, [r0, #2]
 8021dd2:	d019      	beq.n	8021e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021dd4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021dd8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021ddc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021de0:	fb08 f807 	mul.w	r8, r8, r7
 8021de4:	fb0a fc0c 	mul.w	ip, sl, ip
 8021de8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021dec:	f108 0b20 	add.w	fp, r8, #32
 8021df0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021df4:	44bc      	add	ip, r7
 8021df6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021dfa:	0a3f      	lsrs	r7, r7, #8
 8021dfc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021e00:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021e04:	ea4c 0707 	orr.w	r7, ip, r7
 8021e08:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021e0c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021e10:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021e14:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021e18:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e1c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021e20:	ea4c 0909 	orr.w	r9, ip, r9
 8021e24:	ea4a 0707 	orr.w	r7, sl, r7
 8021e28:	2d00      	cmp	r5, #0
 8021e2a:	f000 80ca 	beq.w	8021fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021e2e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021e32:	3901      	subs	r1, #1
 8021e34:	0049      	lsls	r1, r1, #1
 8021e36:	3102      	adds	r1, #2
 8021e38:	eb00 0c01 	add.w	ip, r0, r1
 8021e3c:	5a41      	ldrh	r1, [r0, r1]
 8021e3e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021e40:	28ff      	cmp	r0, #255	; 0xff
 8021e42:	d019      	beq.n	8021e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021e44:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021e46:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021e4a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021e4e:	fb04 fa01 	mul.w	sl, r4, r1
 8021e52:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021e56:	fb08 f800 	mul.w	r8, r8, r0
 8021e5a:	f10a 0020 	add.w	r0, sl, #32
 8021e5e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021e62:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021e66:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021e6a:	4441      	add	r1, r8
 8021e6c:	0a00      	lsrs	r0, r0, #8
 8021e6e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021e72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021e76:	4301      	orrs	r1, r0
 8021e78:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021e7a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021e7e:	2cff      	cmp	r4, #255	; 0xff
 8021e80:	d01a      	beq.n	8021eb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021e82:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021e86:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021e8a:	fb04 fa00 	mul.w	sl, r4, r0
 8021e8e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021e92:	fb08 f80c 	mul.w	r8, r8, ip
 8021e96:	f10a 0c20 	add.w	ip, sl, #32
 8021e9a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021e9e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021ea2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021ea6:	4440      	add	r0, r8
 8021ea8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021eac:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021eb0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021eb4:	ea40 000c 	orr.w	r0, r0, ip
 8021eb8:	fb15 fc02 	smulbb	ip, r5, r2
 8021ebc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021ec0:	f1c5 0810 	rsb	r8, r5, #16
 8021ec4:	eba8 0802 	sub.w	r8, r8, r2
 8021ec8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021ecc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021ed0:	437a      	muls	r2, r7
 8021ed2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021ed6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021eda:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ede:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021ee2:	fb09 2208 	mla	r2, r9, r8, r2
 8021ee6:	ea4a 0101 	orr.w	r1, sl, r1
 8021eea:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021eee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021ef2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021ef6:	fb05 2201 	mla	r2, r5, r1, r2
 8021efa:	ea4b 0000 	orr.w	r0, fp, r0
 8021efe:	fb0c 2200 	mla	r2, ip, r0, r2
 8021f02:	0d57      	lsrs	r7, r2, #21
 8021f04:	0952      	lsrs	r2, r2, #5
 8021f06:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021f0a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021f0e:	433a      	orrs	r2, r7
 8021f10:	2bff      	cmp	r3, #255	; 0xff
 8021f12:	b292      	uxth	r2, r2
 8021f14:	d102      	bne.n	8021f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021f16:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021f18:	29ff      	cmp	r1, #255	; 0xff
 8021f1a:	d063      	beq.n	8021fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021f1c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021f1e:	f8be 1000 	ldrh.w	r1, [lr]
 8021f22:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021f24:	4343      	muls	r3, r0
 8021f26:	1c58      	adds	r0, r3, #1
 8021f28:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021f2c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021f30:	1208      	asrs	r0, r1, #8
 8021f32:	b2db      	uxtb	r3, r3
 8021f34:	1215      	asrs	r5, r2, #8
 8021f36:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021f3a:	fb10 f003 	smulbb	r0, r0, r3
 8021f3e:	10cf      	asrs	r7, r1, #3
 8021f40:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021f44:	00c9      	lsls	r1, r1, #3
 8021f46:	fb05 0504 	mla	r5, r5, r4, r0
 8021f4a:	b2c9      	uxtb	r1, r1
 8021f4c:	10d0      	asrs	r0, r2, #3
 8021f4e:	00d2      	lsls	r2, r2, #3
 8021f50:	fb11 f103 	smulbb	r1, r1, r3
 8021f54:	b2d2      	uxtb	r2, r2
 8021f56:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021f5a:	fb02 1204 	mla	r2, r2, r4, r1
 8021f5e:	fb17 f703 	smulbb	r7, r7, r3
 8021f62:	b2ad      	uxth	r5, r5
 8021f64:	b292      	uxth	r2, r2
 8021f66:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021f6a:	fb00 7004 	mla	r0, r0, r4, r7
 8021f6e:	1c6b      	adds	r3, r5, #1
 8021f70:	1c57      	adds	r7, r2, #1
 8021f72:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021f76:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021f7a:	b280      	uxth	r0, r0
 8021f7c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021f80:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021f84:	433d      	orrs	r5, r7
 8021f86:	1c47      	adds	r7, r0, #1
 8021f88:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021f8c:	097f      	lsrs	r7, r7, #5
 8021f8e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021f92:	433d      	orrs	r5, r7
 8021f94:	f8ae 5000 	strh.w	r5, [lr]
 8021f98:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021f9a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021f9c:	4413      	add	r3, r2
 8021f9e:	9321      	str	r3, [sp, #132]	; 0x84
 8021fa0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021fa2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fa4:	441a      	add	r2, r3
 8021fa6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021fa8:	9222      	str	r2, [sp, #136]	; 0x88
 8021faa:	3b01      	subs	r3, #1
 8021fac:	f10e 0e02 	add.w	lr, lr, #2
 8021fb0:	9313      	str	r3, [sp, #76]	; 0x4c
 8021fb2:	e61c      	b.n	8021bee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021fb4:	fb08 f000 	mul.w	r0, r8, r0
 8021fb8:	fb09 0303 	mla	r3, r9, r3, r0
 8021fbc:	e6dc      	b.n	8021d78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021fbe:	46b9      	mov	r9, r7
 8021fc0:	e704      	b.n	8021dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021fc2:	f1c2 0110 	rsb	r1, r2, #16
 8021fc6:	437a      	muls	r2, r7
 8021fc8:	fb09 2901 	mla	r9, r9, r1, r2
 8021fcc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021fd0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021fd4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021fd8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021fdc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021fe0:	4302      	orrs	r2, r0
 8021fe2:	e795      	b.n	8021f10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021fe4:	f8ae 2000 	strh.w	r2, [lr]
 8021fe8:	e7d6      	b.n	8021f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021fea:	b017      	add	sp, #92	; 0x5c
 8021fec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ff4:	b085      	sub	sp, #20
 8021ff6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021ffa:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021ffe:	9103      	str	r1, [sp, #12]
 8022000:	fb00 7406 	mla	r4, r0, r6, r7
 8022004:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022008:	2800      	cmp	r0, #0
 802200a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802200e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022012:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022016:	9501      	str	r5, [sp, #4]
 8022018:	eb02 0904 	add.w	r9, r2, r4
 802201c:	f2c0 8141 	blt.w	80222a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022020:	4583      	cmp	fp, r0
 8022022:	f340 813e 	ble.w	80222a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022026:	2f00      	cmp	r7, #0
 8022028:	f2c0 8137 	blt.w	802229a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802202c:	42be      	cmp	r6, r7
 802202e:	f340 8134 	ble.w	802229a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022032:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022036:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 802203a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802203e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022042:	4355      	muls	r5, r2
 8022044:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022048:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802204c:	fb0c f203 	mul.w	r2, ip, r3
 8022050:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022054:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022058:	441d      	add	r5, r3
 802205a:	f102 0320 	add.w	r3, r2, #32
 802205e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022062:	0a1b      	lsrs	r3, r3, #8
 8022064:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022068:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802206c:	431c      	orrs	r4, r3
 802206e:	1c7b      	adds	r3, r7, #1
 8022070:	f100 811c 	bmi.w	80222ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022074:	429e      	cmp	r6, r3
 8022076:	f340 8119 	ble.w	80222ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802207a:	2900      	cmp	r1, #0
 802207c:	f000 8119 	beq.w	80222b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022080:	9a01      	ldr	r2, [sp, #4]
 8022082:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022086:	8855      	ldrh	r5, [r2, #2]
 8022088:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802208c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022090:	fb08 f802 	mul.w	r8, r8, r2
 8022094:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022098:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802209c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80220a0:	435d      	muls	r5, r3
 80220a2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80220a6:	44d0      	add	r8, sl
 80220a8:	f105 0a20 	add.w	sl, r5, #32
 80220ac:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80220b0:	0a2d      	lsrs	r5, r5, #8
 80220b2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80220b6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80220ba:	432a      	orrs	r2, r5
 80220bc:	3001      	adds	r0, #1
 80220be:	f100 80fe 	bmi.w	80222be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80220c2:	4583      	cmp	fp, r0
 80220c4:	f340 80fb 	ble.w	80222be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80220c8:	f1be 0f00 	cmp.w	lr, #0
 80220cc:	f000 80fc 	beq.w	80222c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80220d0:	2f00      	cmp	r7, #0
 80220d2:	f2c0 80f1 	blt.w	80222b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80220d6:	42be      	cmp	r6, r7
 80220d8:	f340 80ee 	ble.w	80222b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80220dc:	9801      	ldr	r0, [sp, #4]
 80220de:	f819 5006 	ldrb.w	r5, [r9, r6]
 80220e2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80220e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80220ea:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80220ee:	fb0a fa00 	mul.w	sl, sl, r0
 80220f2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80220f6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80220fa:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80220fe:	fb05 f808 	mul.w	r8, r5, r8
 8022102:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022106:	4482      	add	sl, r0
 8022108:	f108 0020 	add.w	r0, r8, #32
 802210c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022110:	0a00      	lsrs	r0, r0, #8
 8022112:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022116:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802211a:	ea4b 0b00 	orr.w	fp, fp, r0
 802211e:	3701      	adds	r7, #1
 8022120:	f100 80d7 	bmi.w	80222d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022124:	42be      	cmp	r6, r7
 8022126:	f340 80d4 	ble.w	80222d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802212a:	2900      	cmp	r1, #0
 802212c:	f000 80d4 	beq.w	80222d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022130:	3601      	adds	r6, #1
 8022132:	9801      	ldr	r0, [sp, #4]
 8022134:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022138:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802213c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022140:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022144:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022148:	fb09 f906 	mul.w	r9, r9, r6
 802214c:	fb07 f800 	mul.w	r8, r7, r0
 8022150:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022154:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022158:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802215c:	44d1      	add	r9, sl
 802215e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022162:	f108 0020 	add.w	r0, r8, #32
 8022166:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802216a:	0a00      	lsrs	r0, r0, #8
 802216c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022170:	4330      	orrs	r0, r6
 8022172:	b28e      	uxth	r6, r1
 8022174:	fa1f f98e 	uxth.w	r9, lr
 8022178:	fb06 f809 	mul.w	r8, r6, r9
 802217c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022180:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022184:	0136      	lsls	r6, r6, #4
 8022186:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802218a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802218e:	9601      	str	r6, [sp, #4]
 8022190:	ea4a 0404 	orr.w	r4, sl, r4
 8022194:	fa1f f689 	uxth.w	r6, r9
 8022198:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802219c:	fb11 f90e 	smulbb	r9, r1, lr
 80221a0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80221a4:	9602      	str	r6, [sp, #8]
 80221a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80221aa:	4626      	mov	r6, r4
 80221ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80221b0:	f1ce 0410 	rsb	r4, lr, #16
 80221b4:	1a64      	subs	r4, r4, r1
 80221b6:	ea4a 0202 	orr.w	r2, sl, r2
 80221ba:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80221be:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80221c2:	434a      	muls	r2, r1
 80221c4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80221c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80221cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80221d0:	fb04 2406 	mla	r4, r4, r6, r2
 80221d4:	ea4a 0000 	orr.w	r0, sl, r0
 80221d8:	fb09 4200 	mla	r2, r9, r0, r4
 80221dc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80221e0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80221e4:	9801      	ldr	r0, [sp, #4]
 80221e6:	9903      	ldr	r1, [sp, #12]
 80221e8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80221ec:	ea44 0b0b 	orr.w	fp, r4, fp
 80221f0:	9c02      	ldr	r4, [sp, #8]
 80221f2:	8809      	ldrh	r1, [r1, #0]
 80221f4:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80221f8:	1b00      	subs	r0, r0, r4
 80221fa:	9c01      	ldr	r4, [sp, #4]
 80221fc:	eba4 0608 	sub.w	r6, r4, r8
 8022200:	b2b6      	uxth	r6, r6
 8022202:	b280      	uxth	r0, r0
 8022204:	4373      	muls	r3, r6
 8022206:	fb0c 3300 	mla	r3, ip, r0, r3
 802220a:	9802      	ldr	r0, [sp, #8]
 802220c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022210:	fb00 3505 	mla	r5, r0, r5, r3
 8022214:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022218:	fb08 5707 	mla	r7, r8, r7, r5
 802221c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022220:	120b      	asrs	r3, r1, #8
 8022222:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022226:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802222a:	b2ff      	uxtb	r7, r7
 802222c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022230:	10c8      	asrs	r0, r1, #3
 8022232:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022236:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802223a:	00c9      	lsls	r1, r1, #3
 802223c:	437b      	muls	r3, r7
 802223e:	ea42 0e0e 	orr.w	lr, r2, lr
 8022242:	b2c9      	uxtb	r1, r1
 8022244:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022248:	fa1f f28e 	uxth.w	r2, lr
 802224c:	4378      	muls	r0, r7
 802224e:	434f      	muls	r7, r1
 8022250:	1c59      	adds	r1, r3, #1
 8022252:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022256:	1213      	asrs	r3, r2, #8
 8022258:	f023 0307 	bic.w	r3, r3, #7
 802225c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022260:	1c41      	adds	r1, r0, #1
 8022262:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022266:	10d1      	asrs	r1, r2, #3
 8022268:	f021 0103 	bic.w	r1, r1, #3
 802226c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022270:	021b      	lsls	r3, r3, #8
 8022272:	00c9      	lsls	r1, r1, #3
 8022274:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022278:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802227c:	430b      	orrs	r3, r1
 802227e:	1c79      	adds	r1, r7, #1
 8022280:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8022284:	00d2      	lsls	r2, r2, #3
 8022286:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802228a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802228e:	431a      	orrs	r2, r3
 8022290:	9b03      	ldr	r3, [sp, #12]
 8022292:	801a      	strh	r2, [r3, #0]
 8022294:	b005      	add	sp, #20
 8022296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802229a:	f04f 0c00 	mov.w	ip, #0
 802229e:	4664      	mov	r4, ip
 80222a0:	e6e5      	b.n	802206e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80222a2:	2300      	movs	r3, #0
 80222a4:	469c      	mov	ip, r3
 80222a6:	461a      	mov	r2, r3
 80222a8:	461c      	mov	r4, r3
 80222aa:	e707      	b.n	80220bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80222ac:	2300      	movs	r3, #0
 80222ae:	461a      	mov	r2, r3
 80222b0:	e704      	b.n	80220bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80222b2:	460b      	mov	r3, r1
 80222b4:	460a      	mov	r2, r1
 80222b6:	e701      	b.n	80220bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80222b8:	2500      	movs	r5, #0
 80222ba:	46ab      	mov	fp, r5
 80222bc:	e72f      	b.n	802211e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80222be:	2700      	movs	r7, #0
 80222c0:	463d      	mov	r5, r7
 80222c2:	4638      	mov	r0, r7
 80222c4:	46bb      	mov	fp, r7
 80222c6:	e754      	b.n	8022172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80222c8:	4677      	mov	r7, lr
 80222ca:	4675      	mov	r5, lr
 80222cc:	4670      	mov	r0, lr
 80222ce:	46f3      	mov	fp, lr
 80222d0:	e74f      	b.n	8022172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80222d2:	2700      	movs	r7, #0
 80222d4:	4638      	mov	r0, r7
 80222d6:	e74c      	b.n	8022172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80222d8:	460f      	mov	r7, r1
 80222da:	4608      	mov	r0, r1
 80222dc:	e749      	b.n	8022172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080222e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80222e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222e4:	b093      	sub	sp, #76	; 0x4c
 80222e6:	9210      	str	r2, [sp, #64]	; 0x40
 80222e8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80222ea:	910e      	str	r1, [sp, #56]	; 0x38
 80222ec:	9306      	str	r3, [sp, #24]
 80222ee:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80222f2:	9011      	str	r0, [sp, #68]	; 0x44
 80222f4:	6850      	ldr	r0, [r2, #4]
 80222f6:	6812      	ldr	r2, [r2, #0]
 80222f8:	fb00 1303 	mla	r3, r0, r3, r1
 80222fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022300:	9307      	str	r3, [sp, #28]
 8022302:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022304:	681b      	ldr	r3, [r3, #0]
 8022306:	9308      	str	r3, [sp, #32]
 8022308:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802230a:	685b      	ldr	r3, [r3, #4]
 802230c:	9309      	str	r3, [sp, #36]	; 0x24
 802230e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022310:	2b00      	cmp	r3, #0
 8022312:	dc03      	bgt.n	802231c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022314:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022316:	2b00      	cmp	r3, #0
 8022318:	f340 83b4 	ble.w	8022a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802231c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802231e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022322:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022326:	1e48      	subs	r0, r1, #1
 8022328:	1e55      	subs	r5, r2, #1
 802232a:	9b06      	ldr	r3, [sp, #24]
 802232c:	2b00      	cmp	r3, #0
 802232e:	f340 8163 	ble.w	80225f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8022332:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8022334:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022336:	1436      	asrs	r6, r6, #16
 8022338:	ea4f 4323 	mov.w	r3, r3, asr #16
 802233c:	d406      	bmi.n	802234c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802233e:	4286      	cmp	r6, r0
 8022340:	da04      	bge.n	802234c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022342:	2b00      	cmp	r3, #0
 8022344:	db02      	blt.n	802234c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022346:	42ab      	cmp	r3, r5
 8022348:	f2c0 8157 	blt.w	80225fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802234c:	3601      	adds	r6, #1
 802234e:	f100 8144 	bmi.w	80225da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022352:	42b1      	cmp	r1, r6
 8022354:	f2c0 8141 	blt.w	80225da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022358:	3301      	adds	r3, #1
 802235a:	f100 813e 	bmi.w	80225da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802235e:	429a      	cmp	r2, r3
 8022360:	f2c0 813b 	blt.w	80225da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022364:	9b06      	ldr	r3, [sp, #24]
 8022366:	9f07      	ldr	r7, [sp, #28]
 8022368:	930f      	str	r3, [sp, #60]	; 0x3c
 802236a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802236e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022370:	2b00      	cmp	r3, #0
 8022372:	f340 8164 	ble.w	802263e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8022376:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022378:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802237a:	1418      	asrs	r0, r3, #16
 802237c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802237e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022382:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022384:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022388:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802238a:	142d      	asrs	r5, r5, #16
 802238c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022390:	f100 81ee 	bmi.w	8022770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022394:	f102 3eff 	add.w	lr, r2, #4294967295
 8022398:	4575      	cmp	r5, lr
 802239a:	f280 81e9 	bge.w	8022770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802239e:	2800      	cmp	r0, #0
 80223a0:	f2c0 81e6 	blt.w	8022770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80223a4:	f103 3eff 	add.w	lr, r3, #4294967295
 80223a8:	4570      	cmp	r0, lr
 80223aa:	f280 81e1 	bge.w	8022770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80223ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80223b0:	b212      	sxth	r2, r2
 80223b2:	fb00 5002 	mla	r0, r0, r2, r5
 80223b6:	fa1f fe81 	uxth.w	lr, r1
 80223ba:	eb03 0a00 	add.w	sl, r3, r0
 80223be:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80223c2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80223c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80223ca:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80223ce:	b29b      	uxth	r3, r3
 80223d0:	f1bc 0f00 	cmp.w	ip, #0
 80223d4:	f000 8179 	beq.w	80226ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80223d8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80223dc:	940a      	str	r4, [sp, #40]	; 0x28
 80223de:	eb0a 0b02 	add.w	fp, sl, r2
 80223e2:	fa1f fa8c 	uxth.w	sl, ip
 80223e6:	fb0a fe0e 	mul.w	lr, sl, lr
 80223ea:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80223ee:	fa1f fa8a 	uxth.w	sl, sl
 80223f2:	eba5 050e 	sub.w	r5, r5, lr
 80223f6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80223fa:	940b      	str	r4, [sp, #44]	; 0x2c
 80223fc:	eba3 030a 	sub.w	r3, r3, sl
 8022400:	b2ad      	uxth	r5, r5
 8022402:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022404:	b29b      	uxth	r3, r3
 8022406:	fb08 f505 	mul.w	r5, r8, r5
 802240a:	fb09 5303 	mla	r3, r9, r3, r5
 802240e:	fb0a 3304 	mla	r3, sl, r4, r3
 8022412:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022414:	fb0e 3304 	mla	r3, lr, r4, r3
 8022418:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802241c:	2b00      	cmp	r3, #0
 802241e:	f000 80cf 	beq.w	80225c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022422:	9c08      	ldr	r4, [sp, #32]
 8022424:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022428:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802242c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022430:	f000 8150 	beq.w	80226d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022434:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022438:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802243c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022440:	fb09 f000 	mul.w	r0, r9, r0
 8022444:	fb0a fe0e 	mul.w	lr, sl, lr
 8022448:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802244c:	f100 0b20 	add.w	fp, r0, #32
 8022450:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022454:	44ce      	add	lr, r9
 8022456:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802245a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802245e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022462:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022466:	ea4e 0909 	orr.w	r9, lr, r9
 802246a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802246e:	8868      	ldrh	r0, [r5, #2]
 8022470:	d019      	beq.n	80224a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8022472:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022476:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802247a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802247e:	fb08 f800 	mul.w	r8, r8, r0
 8022482:	fb0a fe0e 	mul.w	lr, sl, lr
 8022486:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802248a:	f108 0b20 	add.w	fp, r8, #32
 802248e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022492:	4486      	add	lr, r0
 8022494:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022498:	0a00      	lsrs	r0, r0, #8
 802249a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802249e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80224a2:	ea4e 0000 	orr.w	r0, lr, r0
 80224a6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80224aa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80224ae:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80224b2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80224b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80224be:	ea4e 0909 	orr.w	r9, lr, r9
 80224c2:	ea4a 0000 	orr.w	r0, sl, r0
 80224c6:	f1bc 0f00 	cmp.w	ip, #0
 80224ca:	f000 8105 	beq.w	80226d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80224ce:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80224d2:	3a01      	subs	r2, #1
 80224d4:	0052      	lsls	r2, r2, #1
 80224d6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80224d8:	3202      	adds	r2, #2
 80224da:	2cff      	cmp	r4, #255	; 0xff
 80224dc:	eb05 0e02 	add.w	lr, r5, r2
 80224e0:	5aaa      	ldrh	r2, [r5, r2]
 80224e2:	d018      	beq.n	8022516 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80224e4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80224e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80224ec:	fb04 fa02 	mul.w	sl, r4, r2
 80224f0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80224f4:	fb08 f805 	mul.w	r8, r8, r5
 80224f8:	f10a 0520 	add.w	r5, sl, #32
 80224fc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022500:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022504:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022508:	4442      	add	r2, r8
 802250a:	0a2d      	lsrs	r5, r5, #8
 802250c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022510:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022514:	432a      	orrs	r2, r5
 8022516:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022518:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802251c:	2cff      	cmp	r4, #255	; 0xff
 802251e:	d01a      	beq.n	8022556 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022520:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022524:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022528:	fb04 fa05 	mul.w	sl, r4, r5
 802252c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022530:	fb08 f80e 	mul.w	r8, r8, lr
 8022534:	f10a 0e20 	add.w	lr, sl, #32
 8022538:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802253c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022540:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022544:	4445      	add	r5, r8
 8022546:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802254a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802254e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022552:	ea45 050e 	orr.w	r5, r5, lr
 8022556:	fb1c fe01 	smulbb	lr, ip, r1
 802255a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802255e:	f1cc 0810 	rsb	r8, ip, #16
 8022562:	eba8 0801 	sub.w	r8, r8, r1
 8022566:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802256a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802256e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022572:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022576:	4341      	muls	r1, r0
 8022578:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802257c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022580:	ea4a 0202 	orr.w	r2, sl, r2
 8022584:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022588:	fb09 1108 	mla	r1, r9, r8, r1
 802258c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022590:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022594:	fb0c 1102 	mla	r1, ip, r2, r1
 8022598:	ea4b 0505 	orr.w	r5, fp, r5
 802259c:	fb0e 1e05 	mla	lr, lr, r5, r1
 80225a0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80225a4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80225a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80225ac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80225b0:	ea42 0e0e 	orr.w	lr, r2, lr
 80225b4:	fa1f f28e 	uxth.w	r2, lr
 80225b8:	2bff      	cmp	r3, #255	; 0xff
 80225ba:	f040 80a1 	bne.w	8022700 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80225be:	803a      	strh	r2, [r7, #0]
 80225c0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80225c2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80225c4:	4413      	add	r3, r2
 80225c6:	931d      	str	r3, [sp, #116]	; 0x74
 80225c8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80225ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80225cc:	441a      	add	r2, r3
 80225ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80225d0:	921e      	str	r2, [sp, #120]	; 0x78
 80225d2:	3b01      	subs	r3, #1
 80225d4:	3702      	adds	r7, #2
 80225d6:	930f      	str	r3, [sp, #60]	; 0x3c
 80225d8:	e6c9      	b.n	802236e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80225da:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80225dc:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80225de:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80225e0:	4433      	add	r3, r6
 80225e2:	931d      	str	r3, [sp, #116]	; 0x74
 80225e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80225e6:	441c      	add	r4, r3
 80225e8:	9b06      	ldr	r3, [sp, #24]
 80225ea:	941e      	str	r4, [sp, #120]	; 0x78
 80225ec:	3b01      	subs	r3, #1
 80225ee:	9306      	str	r3, [sp, #24]
 80225f0:	9b07      	ldr	r3, [sp, #28]
 80225f2:	3302      	adds	r3, #2
 80225f4:	9307      	str	r3, [sp, #28]
 80225f6:	e698      	b.n	802232a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80225f8:	d028      	beq.n	802264c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80225fa:	9b06      	ldr	r3, [sp, #24]
 80225fc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80225fe:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022600:	3b01      	subs	r3, #1
 8022602:	fb00 5003 	mla	r0, r0, r3, r5
 8022606:	1400      	asrs	r0, r0, #16
 8022608:	f53f aeac 	bmi.w	8022364 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802260c:	3901      	subs	r1, #1
 802260e:	4288      	cmp	r0, r1
 8022610:	f6bf aea8 	bge.w	8022364 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022614:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022616:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022618:	fb01 0303 	mla	r3, r1, r3, r0
 802261c:	141b      	asrs	r3, r3, #16
 802261e:	f53f aea1 	bmi.w	8022364 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022622:	3a01      	subs	r2, #1
 8022624:	4293      	cmp	r3, r2
 8022626:	f6bf ae9d 	bge.w	8022364 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802262a:	9b06      	ldr	r3, [sp, #24]
 802262c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022630:	930f      	str	r3, [sp, #60]	; 0x3c
 8022632:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022636:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022638:	2b00      	cmp	r3, #0
 802263a:	f300 80b6 	bgt.w	80227aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802263e:	9b06      	ldr	r3, [sp, #24]
 8022640:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022644:	9b07      	ldr	r3, [sp, #28]
 8022646:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802264a:	9307      	str	r3, [sp, #28]
 802264c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802264e:	2b00      	cmp	r3, #0
 8022650:	f340 8218 	ble.w	8022a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022654:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022658:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802265c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022660:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022662:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022666:	ee31 1a05 	vadd.f32	s2, s2, s10
 802266a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802266e:	eef0 6a62 	vmov.f32	s13, s5
 8022672:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022676:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802267a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802267e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8022682:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022686:	eef0 6a43 	vmov.f32	s13, s6
 802268a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802268e:	ee12 2a90 	vmov	r2, s5
 8022692:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022696:	fb92 f3f3 	sdiv	r3, r2, r3
 802269a:	ee13 2a10 	vmov	r2, s6
 802269e:	931f      	str	r3, [sp, #124]	; 0x7c
 80226a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80226a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80226a6:	9320      	str	r3, [sp, #128]	; 0x80
 80226a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80226aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80226ac:	3b01      	subs	r3, #1
 80226ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80226b2:	930e      	str	r3, [sp, #56]	; 0x38
 80226b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80226b6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80226ba:	bf08      	it	eq
 80226bc:	4613      	moveq	r3, r2
 80226be:	9306      	str	r3, [sp, #24]
 80226c0:	eeb0 3a67 	vmov.f32	s6, s15
 80226c4:	eef0 2a47 	vmov.f32	s5, s14
 80226c8:	e621      	b.n	802230e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80226ca:	fb08 f505 	mul.w	r5, r8, r5
 80226ce:	fb09 5303 	mla	r3, r9, r3, r5
 80226d2:	e6a1      	b.n	8022418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80226d4:	4681      	mov	r9, r0
 80226d6:	e6c8      	b.n	802246a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80226d8:	f1c1 0210 	rsb	r2, r1, #16
 80226dc:	4341      	muls	r1, r0
 80226de:	fb09 1902 	mla	r9, r9, r2, r1
 80226e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80226e6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80226ea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80226ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80226f2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80226f6:	ea42 0909 	orr.w	r9, r2, r9
 80226fa:	fa1f f289 	uxth.w	r2, r9
 80226fe:	e75b      	b.n	80225b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022700:	f8b7 c000 	ldrh.w	ip, [r7]
 8022704:	43db      	mvns	r3, r3
 8022706:	ea4f 202c 	mov.w	r0, ip, asr #8
 802270a:	fa5f fe83 	uxtb.w	lr, r3
 802270e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022712:	fb00 f00e 	mul.w	r0, r0, lr
 8022716:	1c41      	adds	r1, r0, #1
 8022718:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802271c:	1211      	asrs	r1, r2, #8
 802271e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022722:	f021 0107 	bic.w	r1, r1, #7
 8022726:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802272a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802272e:	48d7      	ldr	r0, [pc, #860]	; (8022a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022730:	fb05 f50e 	mul.w	r5, r5, lr
 8022734:	b2c9      	uxtb	r1, r1
 8022736:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802273a:	1c69      	adds	r1, r5, #1
 802273c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022740:	10d1      	asrs	r1, r2, #3
 8022742:	f021 0103 	bic.w	r1, r1, #3
 8022746:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802274a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802274e:	b2db      	uxtb	r3, r3
 8022750:	00c9      	lsls	r1, r1, #3
 8022752:	fb03 f30e 	mul.w	r3, r3, lr
 8022756:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802275a:	4301      	orrs	r1, r0
 802275c:	1c58      	adds	r0, r3, #1
 802275e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022762:	00d2      	lsls	r2, r2, #3
 8022764:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022768:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802276c:	430a      	orrs	r2, r1
 802276e:	e726      	b.n	80225be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022770:	f115 0e01 	adds.w	lr, r5, #1
 8022774:	f53f af24 	bmi.w	80225c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022778:	4572      	cmp	r2, lr
 802277a:	f6ff af21 	blt.w	80225c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802277e:	f110 0e01 	adds.w	lr, r0, #1
 8022782:	f53f af1d 	bmi.w	80225c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022786:	4573      	cmp	r3, lr
 8022788:	f6ff af1a 	blt.w	80225c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802278c:	b21b      	sxth	r3, r3
 802278e:	b212      	sxth	r2, r2
 8022790:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022794:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022798:	9301      	str	r3, [sp, #4]
 802279a:	9200      	str	r2, [sp, #0]
 802279c:	4639      	mov	r1, r7
 802279e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80227a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80227a4:	f7ff fc24 	bl	8021ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80227a8:	e70a      	b.n	80225c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80227aa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80227ac:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80227b0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80227b2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80227b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80227b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80227bc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80227be:	141f      	asrs	r7, r3, #16
 80227c0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80227c2:	141b      	asrs	r3, r3, #16
 80227c4:	fb01 3707 	mla	r7, r1, r7, r3
 80227c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80227ca:	fa1f fc82 	uxth.w	ip, r2
 80227ce:	eb03 0a07 	add.w	sl, r3, r7
 80227d2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80227d6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80227da:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80227de:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80227e2:	b29b      	uxth	r3, r3
 80227e4:	2d00      	cmp	r5, #0
 80227e6:	f000 80fe 	beq.w	80229e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80227ea:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80227ee:	940c      	str	r4, [sp, #48]	; 0x30
 80227f0:	eb0a 0b01 	add.w	fp, sl, r1
 80227f4:	fa1f fa85 	uxth.w	sl, r5
 80227f8:	fb0a fc0c 	mul.w	ip, sl, ip
 80227fc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022800:	fa1f fa8a 	uxth.w	sl, sl
 8022804:	eba0 000c 	sub.w	r0, r0, ip
 8022808:	eba3 030a 	sub.w	r3, r3, sl
 802280c:	b280      	uxth	r0, r0
 802280e:	fb08 f000 	mul.w	r0, r8, r0
 8022812:	b29b      	uxth	r3, r3
 8022814:	fb09 0303 	mla	r3, r9, r3, r0
 8022818:	980c      	ldr	r0, [sp, #48]	; 0x30
 802281a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802281e:	940d      	str	r4, [sp, #52]	; 0x34
 8022820:	fb0a 3300 	mla	r3, sl, r0, r3
 8022824:	fb0c 3304 	mla	r3, ip, r4, r3
 8022828:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802282c:	2b00      	cmp	r3, #0
 802282e:	f000 80cc 	beq.w	80229ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022832:	9808      	ldr	r0, [sp, #32]
 8022834:	9c08      	ldr	r4, [sp, #32]
 8022836:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802283a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802283e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022842:	f000 80d5 	beq.w	80229f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022846:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802284a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802284e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022852:	fb09 f707 	mul.w	r7, r9, r7
 8022856:	fb0a fc0c 	mul.w	ip, sl, ip
 802285a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802285e:	f107 0b20 	add.w	fp, r7, #32
 8022862:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022866:	44cc      	add	ip, r9
 8022868:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802286c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022870:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022874:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022878:	ea4c 0909 	orr.w	r9, ip, r9
 802287c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022880:	8847      	ldrh	r7, [r0, #2]
 8022882:	d019      	beq.n	80228b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022884:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022888:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802288c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022890:	fb08 f807 	mul.w	r8, r8, r7
 8022894:	fb0a fc0c 	mul.w	ip, sl, ip
 8022898:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802289c:	f108 0b20 	add.w	fp, r8, #32
 80228a0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80228a4:	44bc      	add	ip, r7
 80228a6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80228aa:	0a3f      	lsrs	r7, r7, #8
 80228ac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80228b0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80228b4:	ea4c 0707 	orr.w	r7, ip, r7
 80228b8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80228bc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80228c0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80228c4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80228c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80228cc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80228d0:	ea4c 0909 	orr.w	r9, ip, r9
 80228d4:	ea4a 0707 	orr.w	r7, sl, r7
 80228d8:	2d00      	cmp	r5, #0
 80228da:	f000 808b 	beq.w	80229f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80228de:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80228e2:	3901      	subs	r1, #1
 80228e4:	0049      	lsls	r1, r1, #1
 80228e6:	3102      	adds	r1, #2
 80228e8:	eb00 0c01 	add.w	ip, r0, r1
 80228ec:	5a41      	ldrh	r1, [r0, r1]
 80228ee:	980c      	ldr	r0, [sp, #48]	; 0x30
 80228f0:	28ff      	cmp	r0, #255	; 0xff
 80228f2:	d019      	beq.n	8022928 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80228f4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80228f6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80228fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80228fe:	fb04 fa01 	mul.w	sl, r4, r1
 8022902:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022906:	fb08 f800 	mul.w	r8, r8, r0
 802290a:	f10a 0020 	add.w	r0, sl, #32
 802290e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022912:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022916:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802291a:	4441      	add	r1, r8
 802291c:	0a00      	lsrs	r0, r0, #8
 802291e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022922:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022926:	4301      	orrs	r1, r0
 8022928:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802292a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802292e:	2cff      	cmp	r4, #255	; 0xff
 8022930:	d01a      	beq.n	8022968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8022932:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022936:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802293a:	fb04 fa00 	mul.w	sl, r4, r0
 802293e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022942:	fb08 f80c 	mul.w	r8, r8, ip
 8022946:	f10a 0c20 	add.w	ip, sl, #32
 802294a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802294e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022952:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022956:	4440      	add	r0, r8
 8022958:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802295c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022960:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022964:	ea40 000c 	orr.w	r0, r0, ip
 8022968:	fb15 fc02 	smulbb	ip, r5, r2
 802296c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022970:	f1c5 0810 	rsb	r8, r5, #16
 8022974:	eba8 0802 	sub.w	r8, r8, r2
 8022978:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802297c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022980:	437a      	muls	r2, r7
 8022982:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022986:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802298a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802298e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022992:	fb09 2208 	mla	r2, r9, r8, r2
 8022996:	ea4a 0101 	orr.w	r1, sl, r1
 802299a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802299e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80229a2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80229a6:	fb05 2201 	mla	r2, r5, r1, r2
 80229aa:	ea4b 0000 	orr.w	r0, fp, r0
 80229ae:	fb0c 2200 	mla	r2, ip, r0, r2
 80229b2:	0d57      	lsrs	r7, r2, #21
 80229b4:	0952      	lsrs	r2, r2, #5
 80229b6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80229ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80229be:	433a      	orrs	r2, r7
 80229c0:	2bff      	cmp	r3, #255	; 0xff
 80229c2:	b292      	uxth	r2, r2
 80229c4:	d127      	bne.n	8022a16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80229c6:	f8ae 2000 	strh.w	r2, [lr]
 80229ca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80229cc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80229ce:	4413      	add	r3, r2
 80229d0:	931d      	str	r3, [sp, #116]	; 0x74
 80229d2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80229d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80229d6:	441a      	add	r2, r3
 80229d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80229da:	921e      	str	r2, [sp, #120]	; 0x78
 80229dc:	3b01      	subs	r3, #1
 80229de:	f10e 0e02 	add.w	lr, lr, #2
 80229e2:	930f      	str	r3, [sp, #60]	; 0x3c
 80229e4:	e627      	b.n	8022636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80229e6:	fb08 f000 	mul.w	r0, r8, r0
 80229ea:	fb09 0303 	mla	r3, r9, r3, r0
 80229ee:	e71b      	b.n	8022828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80229f0:	46b9      	mov	r9, r7
 80229f2:	e743      	b.n	802287c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80229f4:	f1c2 0110 	rsb	r1, r2, #16
 80229f8:	437a      	muls	r2, r7
 80229fa:	fb09 2901 	mla	r9, r9, r1, r2
 80229fe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022a02:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022a06:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022a0a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022a0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022a12:	4302      	orrs	r2, r0
 8022a14:	e7d4      	b.n	80229c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022a16:	f8be 7000 	ldrh.w	r7, [lr]
 8022a1a:	4c1c      	ldr	r4, [pc, #112]	; (8022a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022a1c:	43db      	mvns	r3, r3
 8022a1e:	1238      	asrs	r0, r7, #8
 8022a20:	fa5f fc83 	uxtb.w	ip, r3
 8022a24:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022a28:	10fd      	asrs	r5, r7, #3
 8022a2a:	fb00 f00c 	mul.w	r0, r0, ip
 8022a2e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022a32:	fb05 f10c 	mul.w	r1, r5, ip
 8022a36:	1c45      	adds	r5, r0, #1
 8022a38:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022a3c:	1215      	asrs	r5, r2, #8
 8022a3e:	f025 0507 	bic.w	r5, r5, #7
 8022a42:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022a46:	1c4d      	adds	r5, r1, #1
 8022a48:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022a4c:	10d1      	asrs	r1, r2, #3
 8022a4e:	f021 0103 	bic.w	r1, r1, #3
 8022a52:	00fb      	lsls	r3, r7, #3
 8022a54:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022a58:	b2db      	uxtb	r3, r3
 8022a5a:	b2c0      	uxtb	r0, r0
 8022a5c:	00c9      	lsls	r1, r1, #3
 8022a5e:	fb03 f30c 	mul.w	r3, r3, ip
 8022a62:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022a66:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022a6a:	4308      	orrs	r0, r1
 8022a6c:	1c59      	adds	r1, r3, #1
 8022a6e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022a72:	00d2      	lsls	r2, r2, #3
 8022a74:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022a78:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022a7c:	4318      	orrs	r0, r3
 8022a7e:	f8ae 0000 	strh.w	r0, [lr]
 8022a82:	e7a2      	b.n	80229ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022a84:	b013      	add	sp, #76	; 0x4c
 8022a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022a8a:	bf00      	nop
 8022a8c:	fffff800 	.word	0xfffff800

08022a90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022a90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022a94:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022a98:	fb05 4c03 	mla	ip, r5, r3, r4
 8022a9c:	2d00      	cmp	r5, #0
 8022a9e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022aa2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8022aa6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022aaa:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022aae:	8808      	ldrh	r0, [r1, #0]
 8022ab0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022ab4:	f2c0 80a7 	blt.w	8022c06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022ab8:	45aa      	cmp	sl, r5
 8022aba:	f340 80a4 	ble.w	8022c06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022abe:	2c00      	cmp	r4, #0
 8022ac0:	f2c0 809f 	blt.w	8022c02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022ac4:	42a3      	cmp	r3, r4
 8022ac6:	f340 809c 	ble.w	8022c02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022aca:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022ace:	1c62      	adds	r2, r4, #1
 8022ad0:	f100 809c 	bmi.w	8022c0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022ad4:	4293      	cmp	r3, r2
 8022ad6:	f340 8099 	ble.w	8022c0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022ada:	f1b9 0f00 	cmp.w	r9, #0
 8022ade:	f000 8095 	beq.w	8022c0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022ae2:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022ae6:	3501      	adds	r5, #1
 8022ae8:	f100 8094 	bmi.w	8022c14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022aec:	45aa      	cmp	sl, r5
 8022aee:	f340 8091 	ble.w	8022c14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022af2:	2f00      	cmp	r7, #0
 8022af4:	f000 808e 	beq.w	8022c14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022af8:	2c00      	cmp	r4, #0
 8022afa:	f2c0 8089 	blt.w	8022c10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022afe:	42a3      	cmp	r3, r4
 8022b00:	f340 8086 	ble.w	8022c10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022b04:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022b08:	3401      	adds	r4, #1
 8022b0a:	f100 8086 	bmi.w	8022c1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022b0e:	42a3      	cmp	r3, r4
 8022b10:	f340 8083 	ble.w	8022c1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022b14:	f1b9 0f00 	cmp.w	r9, #0
 8022b18:	d07f      	beq.n	8022c1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022b1a:	3301      	adds	r3, #1
 8022b1c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022b20:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022b24:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022b28:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022b2c:	fb19 fe07 	smulbb	lr, r9, r7
 8022b30:	ea44 0808 	orr.w	r8, r4, r8
 8022b34:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022b38:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022b3c:	f1c7 0210 	rsb	r2, r7, #16
 8022b40:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022b44:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022b48:	ea44 0c0c 	orr.w	ip, r4, ip
 8022b4c:	eba2 0209 	sub.w	r2, r2, r9
 8022b50:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022b54:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022b58:	fb04 f40c 	mul.w	r4, r4, ip
 8022b5c:	fb02 4808 	mla	r8, r2, r8, r4
 8022b60:	041a      	lsls	r2, r3, #16
 8022b62:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022b66:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022b6a:	4313      	orrs	r3, r2
 8022b6c:	042a      	lsls	r2, r5, #16
 8022b6e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022b72:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022b76:	fb0e 8303 	mla	r3, lr, r3, r8
 8022b7a:	432a      	orrs	r2, r5
 8022b7c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022b80:	fb07 3202 	mla	r2, r7, r2, r3
 8022b84:	0d53      	lsrs	r3, r2, #21
 8022b86:	0952      	lsrs	r2, r2, #5
 8022b88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022b8c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022b90:	431a      	orrs	r2, r3
 8022b92:	b293      	uxth	r3, r2
 8022b94:	b2b4      	uxth	r4, r6
 8022b96:	1202      	asrs	r2, r0, #8
 8022b98:	43f6      	mvns	r6, r6
 8022b9a:	b2f6      	uxtb	r6, r6
 8022b9c:	121d      	asrs	r5, r3, #8
 8022b9e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022ba2:	fb12 f206 	smulbb	r2, r2, r6
 8022ba6:	10c7      	asrs	r7, r0, #3
 8022ba8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022bac:	00c0      	lsls	r0, r0, #3
 8022bae:	fb05 2504 	mla	r5, r5, r4, r2
 8022bb2:	b2c0      	uxtb	r0, r0
 8022bb4:	10da      	asrs	r2, r3, #3
 8022bb6:	00db      	lsls	r3, r3, #3
 8022bb8:	b2db      	uxtb	r3, r3
 8022bba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022bbe:	fb10 f006 	smulbb	r0, r0, r6
 8022bc2:	b2ad      	uxth	r5, r5
 8022bc4:	fb03 0004 	mla	r0, r3, r4, r0
 8022bc8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022bcc:	fb17 f706 	smulbb	r7, r7, r6
 8022bd0:	b280      	uxth	r0, r0
 8022bd2:	1c6b      	adds	r3, r5, #1
 8022bd4:	fb02 7204 	mla	r2, r2, r4, r7
 8022bd8:	b292      	uxth	r2, r2
 8022bda:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022bde:	1c43      	adds	r3, r0, #1
 8022be0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022be4:	1c50      	adds	r0, r2, #1
 8022be6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022bea:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022bee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022bf2:	0952      	lsrs	r2, r2, #5
 8022bf4:	432b      	orrs	r3, r5
 8022bf6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022bfa:	4313      	orrs	r3, r2
 8022bfc:	800b      	strh	r3, [r1, #0]
 8022bfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022c02:	4680      	mov	r8, r0
 8022c04:	e763      	b.n	8022ace <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022c06:	4684      	mov	ip, r0
 8022c08:	4680      	mov	r8, r0
 8022c0a:	e76c      	b.n	8022ae6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022c0c:	4684      	mov	ip, r0
 8022c0e:	e76a      	b.n	8022ae6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022c10:	4605      	mov	r5, r0
 8022c12:	e779      	b.n	8022b08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022c14:	4603      	mov	r3, r0
 8022c16:	4605      	mov	r5, r0
 8022c18:	e782      	b.n	8022b20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022c1a:	4603      	mov	r3, r0
 8022c1c:	e780      	b.n	8022b20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022c1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022c1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c22:	b093      	sub	sp, #76	; 0x4c
 8022c24:	461d      	mov	r5, r3
 8022c26:	9210      	str	r2, [sp, #64]	; 0x40
 8022c28:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022c2a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022c2e:	920b      	str	r2, [sp, #44]	; 0x2c
 8022c30:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8022c34:	910a      	str	r1, [sp, #40]	; 0x28
 8022c36:	6859      	ldr	r1, [r3, #4]
 8022c38:	681b      	ldr	r3, [r3, #0]
 8022c3a:	9011      	str	r0, [sp, #68]	; 0x44
 8022c3c:	fb01 2707 	mla	r7, r1, r7, r2
 8022c40:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022c44:	9307      	str	r3, [sp, #28]
 8022c46:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c48:	681b      	ldr	r3, [r3, #0]
 8022c4a:	9309      	str	r3, [sp, #36]	; 0x24
 8022c4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022c4e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022c52:	43db      	mvns	r3, r3
 8022c54:	b2db      	uxtb	r3, r3
 8022c56:	9308      	str	r3, [sp, #32]
 8022c58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022c5a:	2b00      	cmp	r3, #0
 8022c5c:	dc03      	bgt.n	8022c66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022c5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022c60:	2b00      	cmp	r3, #0
 8022c62:	f340 8203 	ble.w	802306c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022c66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c68:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c6c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022c70:	1e48      	subs	r0, r1, #1
 8022c72:	f102 3cff 	add.w	ip, r2, #4294967295
 8022c76:	2d00      	cmp	r5, #0
 8022c78:	f340 80da 	ble.w	8022e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022c7c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022c80:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022c84:	d406      	bmi.n	8022c94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022c86:	4586      	cmp	lr, r0
 8022c88:	da04      	bge.n	8022c94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022c8a:	2b00      	cmp	r3, #0
 8022c8c:	db02      	blt.n	8022c94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022c8e:	4563      	cmp	r3, ip
 8022c90:	f2c0 80cf 	blt.w	8022e32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022c94:	f11e 0e01 	adds.w	lr, lr, #1
 8022c98:	f100 80c1 	bmi.w	8022e1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022c9c:	4571      	cmp	r1, lr
 8022c9e:	f2c0 80be 	blt.w	8022e1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022ca2:	3301      	adds	r3, #1
 8022ca4:	f100 80bb 	bmi.w	8022e1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022ca8:	429a      	cmp	r2, r3
 8022caa:	f2c0 80b8 	blt.w	8022e1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022cae:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022cb2:	46a9      	mov	r9, r5
 8022cb4:	f1b9 0f00 	cmp.w	r9, #0
 8022cb8:	f340 80d8 	ble.w	8022e6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022cbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022cbe:	1421      	asrs	r1, r4, #16
 8022cc0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022cc4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022cc8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022ccc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022cd0:	f100 8111 	bmi.w	8022ef6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022cd4:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022cd8:	4551      	cmp	r1, sl
 8022cda:	f280 810c 	bge.w	8022ef6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022cde:	2800      	cmp	r0, #0
 8022ce0:	f2c0 8109 	blt.w	8022ef6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022ce4:	f103 3aff 	add.w	sl, r3, #4294967295
 8022ce8:	4550      	cmp	r0, sl
 8022cea:	f280 8104 	bge.w	8022ef6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022cee:	fa0f f38e 	sxth.w	r3, lr
 8022cf2:	fb00 1103 	mla	r1, r0, r3, r1
 8022cf6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022cf8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022cfc:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022d00:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022d04:	f1bc 0f00 	cmp.w	ip, #0
 8022d08:	d007      	beq.n	8022d1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022d0a:	005b      	lsls	r3, r3, #1
 8022d0c:	eb0a 0003 	add.w	r0, sl, r3
 8022d10:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022d14:	930c      	str	r3, [sp, #48]	; 0x30
 8022d16:	8843      	ldrh	r3, [r0, #2]
 8022d18:	930d      	str	r3, [sp, #52]	; 0x34
 8022d1a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022d1e:	fb12 f30c 	smulbb	r3, r2, ip
 8022d22:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022d26:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022d2a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022d2e:	10db      	asrs	r3, r3, #3
 8022d30:	ea40 000e 	orr.w	r0, r0, lr
 8022d34:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d38:	f1cc 0e10 	rsb	lr, ip, #16
 8022d3c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022d40:	ebae 0e02 	sub.w	lr, lr, r2
 8022d44:	ea4a 0101 	orr.w	r1, sl, r1
 8022d48:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022d4c:	4351      	muls	r1, r2
 8022d4e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022d50:	9f08      	ldr	r7, [sp, #32]
 8022d52:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022d56:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022d5a:	0410      	lsls	r0, r2, #16
 8022d5c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022d60:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d64:	4310      	orrs	r0, r2
 8022d66:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022d68:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022d6a:	0412      	lsls	r2, r2, #16
 8022d6c:	fb03 e000 	mla	r0, r3, r0, lr
 8022d70:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022d74:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022d78:	ea42 020e 	orr.w	r2, r2, lr
 8022d7c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022d80:	fb03 0302 	mla	r3, r3, r2, r0
 8022d84:	0d5a      	lsrs	r2, r3, #21
 8022d86:	095b      	lsrs	r3, r3, #5
 8022d88:	f8b8 0000 	ldrh.w	r0, [r8]
 8022d8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022d90:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022d94:	4313      	orrs	r3, r2
 8022d96:	b29b      	uxth	r3, r3
 8022d98:	1201      	asrs	r1, r0, #8
 8022d9a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022d9e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022da2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022da6:	fb11 f107 	smulbb	r1, r1, r7
 8022daa:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022dae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022db2:	00c0      	lsls	r0, r0, #3
 8022db4:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022db8:	b2c0      	uxtb	r0, r0
 8022dba:	10d9      	asrs	r1, r3, #3
 8022dbc:	00db      	lsls	r3, r3, #3
 8022dbe:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022dc2:	b2db      	uxtb	r3, r3
 8022dc4:	fb10 f007 	smulbb	r0, r0, r7
 8022dc8:	fa1f fc8c 	uxth.w	ip, ip
 8022dcc:	fb03 0302 	mla	r3, r3, r2, r0
 8022dd0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022dd4:	fb1e fe07 	smulbb	lr, lr, r7
 8022dd8:	fb01 e102 	mla	r1, r1, r2, lr
 8022ddc:	b29a      	uxth	r2, r3
 8022dde:	f10c 0301 	add.w	r3, ip, #1
 8022de2:	b289      	uxth	r1, r1
 8022de4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022de8:	1c53      	adds	r3, r2, #1
 8022dea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022dee:	1c4a      	adds	r2, r1, #1
 8022df0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022df4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022df8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022dfc:	0949      	lsrs	r1, r1, #5
 8022dfe:	ea43 030c 	orr.w	r3, r3, ip
 8022e02:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022e06:	430b      	orrs	r3, r1
 8022e08:	f8a8 3000 	strh.w	r3, [r8]
 8022e0c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022e0e:	441c      	add	r4, r3
 8022e10:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e12:	f108 0802 	add.w	r8, r8, #2
 8022e16:	441e      	add	r6, r3
 8022e18:	f109 39ff 	add.w	r9, r9, #4294967295
 8022e1c:	e74a      	b.n	8022cb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022e1e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022e20:	441c      	add	r4, r3
 8022e22:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e24:	441e      	add	r6, r3
 8022e26:	9b07      	ldr	r3, [sp, #28]
 8022e28:	3302      	adds	r3, #2
 8022e2a:	3d01      	subs	r5, #1
 8022e2c:	9307      	str	r3, [sp, #28]
 8022e2e:	e722      	b.n	8022c76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022e30:	d022      	beq.n	8022e78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022e32:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022e34:	1e6b      	subs	r3, r5, #1
 8022e36:	fb00 4003 	mla	r0, r0, r3, r4
 8022e3a:	1400      	asrs	r0, r0, #16
 8022e3c:	f53f af37 	bmi.w	8022cae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022e40:	3901      	subs	r1, #1
 8022e42:	4288      	cmp	r0, r1
 8022e44:	f6bf af33 	bge.w	8022cae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022e48:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022e4a:	fb01 6303 	mla	r3, r1, r3, r6
 8022e4e:	141b      	asrs	r3, r3, #16
 8022e50:	f53f af2d 	bmi.w	8022cae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022e54:	3a01      	subs	r2, #1
 8022e56:	4293      	cmp	r3, r2
 8022e58:	f6bf af29 	bge.w	8022cae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022e5c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022e60:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022e64:	46a8      	mov	r8, r5
 8022e66:	f1b8 0f00 	cmp.w	r8, #0
 8022e6a:	dc5e      	bgt.n	8022f2a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022e6c:	9b07      	ldr	r3, [sp, #28]
 8022e6e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022e72:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022e76:	9307      	str	r3, [sp, #28]
 8022e78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022e7a:	2b00      	cmp	r3, #0
 8022e7c:	f340 80f6 	ble.w	802306c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022e80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022e84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022e88:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022e8c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022e92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022e96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022e9a:	eef0 6a62 	vmov.f32	s13, s5
 8022e9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ea2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ea6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022eaa:	ee16 4a90 	vmov	r4, s13
 8022eae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022eb2:	eef0 6a43 	vmov.f32	s13, s6
 8022eb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022eba:	ee12 2a90 	vmov	r2, s5
 8022ebe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022ec2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ec6:	ee13 2a10 	vmov	r2, s6
 8022eca:	931f      	str	r3, [sp, #124]	; 0x7c
 8022ecc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ece:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ed2:	9320      	str	r3, [sp, #128]	; 0x80
 8022ed4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022ed6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022ed8:	3b01      	subs	r3, #1
 8022eda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ede:	930a      	str	r3, [sp, #40]	; 0x28
 8022ee0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ee2:	ee16 6a90 	vmov	r6, s13
 8022ee6:	bf14      	ite	ne
 8022ee8:	461d      	movne	r5, r3
 8022eea:	4615      	moveq	r5, r2
 8022eec:	eeb0 3a67 	vmov.f32	s6, s15
 8022ef0:	eef0 2a47 	vmov.f32	s5, s14
 8022ef4:	e6b0      	b.n	8022c58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022ef6:	f111 0a01 	adds.w	sl, r1, #1
 8022efa:	d487      	bmi.n	8022e0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022efc:	45d6      	cmp	lr, sl
 8022efe:	db85      	blt.n	8022e0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022f00:	f110 0a01 	adds.w	sl, r0, #1
 8022f04:	d482      	bmi.n	8022e0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022f06:	4553      	cmp	r3, sl
 8022f08:	db80      	blt.n	8022e0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022f0a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022f0c:	9101      	str	r1, [sp, #4]
 8022f0e:	b21b      	sxth	r3, r3
 8022f10:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022f14:	9300      	str	r3, [sp, #0]
 8022f16:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022f1a:	fa0f f38e 	sxth.w	r3, lr
 8022f1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022f20:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022f22:	4641      	mov	r1, r8
 8022f24:	f7ff fdb4 	bl	8022a90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022f28:	e770      	b.n	8022e0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022f2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f2c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022f2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f32:	1430      	asrs	r0, r6, #16
 8022f34:	1423      	asrs	r3, r4, #16
 8022f36:	fb01 3000 	mla	r0, r1, r0, r3
 8022f3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022f3c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022f40:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022f44:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022f48:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022f4c:	8858      	ldrh	r0, [r3, #2]
 8022f4e:	f1be 0f00 	cmp.w	lr, #0
 8022f52:	d00b      	beq.n	8022f6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022f54:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022f58:	3901      	subs	r1, #1
 8022f5a:	0049      	lsls	r1, r1, #1
 8022f5c:	3102      	adds	r1, #2
 8022f5e:	eb03 0b01 	add.w	fp, r3, r1
 8022f62:	5a5b      	ldrh	r3, [r3, r1]
 8022f64:	930e      	str	r3, [sp, #56]	; 0x38
 8022f66:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022f6a:	930f      	str	r3, [sp, #60]	; 0x3c
 8022f6c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022f70:	fb12 f30e 	smulbb	r3, r2, lr
 8022f74:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022f78:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022f7c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022f80:	10db      	asrs	r3, r3, #3
 8022f82:	ea41 010c 	orr.w	r1, r1, ip
 8022f86:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f8a:	f1ce 0c10 	rsb	ip, lr, #16
 8022f8e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f92:	ebac 0c02 	sub.w	ip, ip, r2
 8022f96:	ea4b 0000 	orr.w	r0, fp, r0
 8022f9a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022f9e:	4350      	muls	r0, r2
 8022fa0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022fa2:	9f08      	ldr	r7, [sp, #32]
 8022fa4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022fa8:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022fac:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022fb0:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022fb4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022fb6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022fb8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022fbc:	0412      	lsls	r2, r2, #16
 8022fbe:	ea4b 0101 	orr.w	r1, fp, r1
 8022fc2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022fc6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022fca:	fb03 c101 	mla	r1, r3, r1, ip
 8022fce:	4302      	orrs	r2, r0
 8022fd0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022fd4:	fb03 1202 	mla	r2, r3, r2, r1
 8022fd8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022fdc:	0952      	lsrs	r2, r2, #5
 8022fde:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022fe2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022fe6:	f8b9 2000 	ldrh.w	r2, [r9]
 8022fea:	ea4b 0303 	orr.w	r3, fp, r3
 8022fee:	b29b      	uxth	r3, r3
 8022ff0:	1211      	asrs	r1, r2, #8
 8022ff2:	1218      	asrs	r0, r3, #8
 8022ff4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ff8:	fb11 f107 	smulbb	r1, r1, r7
 8022ffc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023000:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023004:	00d2      	lsls	r2, r2, #3
 8023006:	fb00 100a 	mla	r0, r0, sl, r1
 802300a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802300e:	10d9      	asrs	r1, r3, #3
 8023010:	b2d2      	uxtb	r2, r2
 8023012:	00db      	lsls	r3, r3, #3
 8023014:	fb1c fc07 	smulbb	ip, ip, r7
 8023018:	fb12 f207 	smulbb	r2, r2, r7
 802301c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023020:	b2db      	uxtb	r3, r3
 8023022:	b280      	uxth	r0, r0
 8023024:	fb01 c10a 	mla	r1, r1, sl, ip
 8023028:	fb03 230a 	mla	r3, r3, sl, r2
 802302c:	b29b      	uxth	r3, r3
 802302e:	b289      	uxth	r1, r1
 8023030:	1c42      	adds	r2, r0, #1
 8023032:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023036:	f101 0c01 	add.w	ip, r1, #1
 802303a:	1c5a      	adds	r2, r3, #1
 802303c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023040:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023044:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023046:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802304a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802304e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023052:	4310      	orrs	r0, r2
 8023054:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023058:	441c      	add	r4, r3
 802305a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802305c:	ea40 000c 	orr.w	r0, r0, ip
 8023060:	f829 0b02 	strh.w	r0, [r9], #2
 8023064:	441e      	add	r6, r3
 8023066:	f108 38ff 	add.w	r8, r8, #4294967295
 802306a:	e6fc      	b.n	8022e66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 802306c:	b013      	add	sp, #76	; 0x4c
 802306e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023072 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023072:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023076:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 802307a:	fb0e 4703 	mla	r7, lr, r3, r4
 802307e:	f1be 0f00 	cmp.w	lr, #0
 8023082:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023086:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 802308a:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 802308e:	8808      	ldrh	r0, [r1, #0]
 8023090:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023094:	db60      	blt.n	8023158 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023096:	45f1      	cmp	r9, lr
 8023098:	dd5e      	ble.n	8023158 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802309a:	2c00      	cmp	r4, #0
 802309c:	db5a      	blt.n	8023154 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802309e:	42a3      	cmp	r3, r4
 80230a0:	dd58      	ble.n	8023154 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80230a2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80230a6:	1c62      	adds	r2, r4, #1
 80230a8:	d459      	bmi.n	802315e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80230aa:	4293      	cmp	r3, r2
 80230ac:	dd57      	ble.n	802315e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80230ae:	2d00      	cmp	r5, #0
 80230b0:	d055      	beq.n	802315e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80230b2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80230b6:	f11e 0e01 	adds.w	lr, lr, #1
 80230ba:	d454      	bmi.n	8023166 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80230bc:	45f1      	cmp	r9, lr
 80230be:	dd52      	ble.n	8023166 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80230c0:	2e00      	cmp	r6, #0
 80230c2:	d050      	beq.n	8023166 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80230c4:	2c00      	cmp	r4, #0
 80230c6:	db4c      	blt.n	8023162 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80230c8:	42a3      	cmp	r3, r4
 80230ca:	dd4a      	ble.n	8023162 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80230cc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80230d0:	3401      	adds	r4, #1
 80230d2:	d405      	bmi.n	80230e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80230d4:	42a3      	cmp	r3, r4
 80230d6:	dd03      	ble.n	80230e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80230d8:	b115      	cbz	r5, 80230e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80230da:	3301      	adds	r3, #1
 80230dc:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80230e0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80230e4:	fb15 f406 	smulbb	r4, r5, r6
 80230e8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80230ec:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80230f0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80230f4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80230f8:	ea43 0c0c 	orr.w	ip, r3, ip
 80230fc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023100:	f1c6 0310 	rsb	r3, r6, #16
 8023104:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023108:	1b5b      	subs	r3, r3, r5
 802310a:	ea4e 0707 	orr.w	r7, lr, r7
 802310e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023112:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023116:	437d      	muls	r5, r7
 8023118:	fb03 5c0c 	mla	ip, r3, ip, r5
 802311c:	0403      	lsls	r3, r0, #16
 802311e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023122:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023126:	4318      	orrs	r0, r3
 8023128:	0413      	lsls	r3, r2, #16
 802312a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802312e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023132:	4313      	orrs	r3, r2
 8023134:	fb04 c000 	mla	r0, r4, r0, ip
 8023138:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 802313c:	fb06 0003 	mla	r0, r6, r3, r0
 8023140:	0d43      	lsrs	r3, r0, #21
 8023142:	0940      	lsrs	r0, r0, #5
 8023144:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023148:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802314c:	4318      	orrs	r0, r3
 802314e:	8008      	strh	r0, [r1, #0]
 8023150:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023154:	4684      	mov	ip, r0
 8023156:	e7a6      	b.n	80230a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023158:	4607      	mov	r7, r0
 802315a:	4684      	mov	ip, r0
 802315c:	e7ab      	b.n	80230b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802315e:	4607      	mov	r7, r0
 8023160:	e7a9      	b.n	80230b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023162:	4602      	mov	r2, r0
 8023164:	e7b4      	b.n	80230d0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023166:	4602      	mov	r2, r0
 8023168:	e7ba      	b.n	80230e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802316a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802316a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802316e:	b08f      	sub	sp, #60	; 0x3c
 8023170:	461d      	mov	r5, r3
 8023172:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023174:	920c      	str	r2, [sp, #48]	; 0x30
 8023176:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 802317a:	9107      	str	r1, [sp, #28]
 802317c:	6859      	ldr	r1, [r3, #4]
 802317e:	681b      	ldr	r3, [r3, #0]
 8023180:	900d      	str	r0, [sp, #52]	; 0x34
 8023182:	fb01 2707 	mla	r7, r1, r7, r2
 8023186:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 802318a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802318c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023190:	f8d3 8000 	ldr.w	r8, [r3]
 8023194:	9b07      	ldr	r3, [sp, #28]
 8023196:	2b00      	cmp	r3, #0
 8023198:	dc03      	bgt.n	80231a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802319a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802319c:	2b00      	cmp	r3, #0
 802319e:	f340 8181 	ble.w	80234a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80231a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80231a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80231a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80231ac:	1e48      	subs	r0, r1, #1
 80231ae:	f102 3cff 	add.w	ip, r2, #4294967295
 80231b2:	2d00      	cmp	r5, #0
 80231b4:	f340 809b 	ble.w	80232ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80231b8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80231bc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80231c0:	d406      	bmi.n	80231d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80231c2:	4586      	cmp	lr, r0
 80231c4:	da04      	bge.n	80231d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80231c6:	2b00      	cmp	r3, #0
 80231c8:	db02      	blt.n	80231d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80231ca:	4563      	cmp	r3, ip
 80231cc:	f2c0 8090 	blt.w	80232f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80231d0:	f11e 0e01 	adds.w	lr, lr, #1
 80231d4:	f100 8084 	bmi.w	80232e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80231d8:	4571      	cmp	r1, lr
 80231da:	f2c0 8081 	blt.w	80232e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80231de:	3301      	adds	r3, #1
 80231e0:	d47e      	bmi.n	80232e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80231e2:	429a      	cmp	r2, r3
 80231e4:	db7c      	blt.n	80232e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80231e6:	46aa      	mov	sl, r5
 80231e8:	46b9      	mov	r9, r7
 80231ea:	f1ba 0f00 	cmp.w	sl, #0
 80231ee:	f340 8099 	ble.w	8023324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80231f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80231f4:	1421      	asrs	r1, r4, #16
 80231f6:	ea4f 4026 	mov.w	r0, r6, asr #16
 80231fa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80231fe:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023202:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023206:	f100 80d0 	bmi.w	80233aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802320a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802320e:	4559      	cmp	r1, fp
 8023210:	f280 80cb 	bge.w	80233aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023214:	2800      	cmp	r0, #0
 8023216:	f2c0 80c8 	blt.w	80233aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802321a:	f103 3bff 	add.w	fp, r3, #4294967295
 802321e:	4558      	cmp	r0, fp
 8023220:	f280 80c3 	bge.w	80233aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023224:	fa0f fe8e 	sxth.w	lr, lr
 8023228:	fb00 110e 	mla	r1, r0, lr, r1
 802322c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023230:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023234:	8841      	ldrh	r1, [r0, #2]
 8023236:	f1bc 0f00 	cmp.w	ip, #0
 802323a:	d00b      	beq.n	8023254 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802323c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023240:	3b01      	subs	r3, #1
 8023242:	005b      	lsls	r3, r3, #1
 8023244:	3302      	adds	r3, #2
 8023246:	eb00 0e03 	add.w	lr, r0, r3
 802324a:	5ac3      	ldrh	r3, [r0, r3]
 802324c:	9308      	str	r3, [sp, #32]
 802324e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8023252:	9309      	str	r3, [sp, #36]	; 0x24
 8023254:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023258:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802325c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023260:	ea40 000b 	orr.w	r0, r0, fp
 8023264:	fb12 f30c 	smulbb	r3, r2, ip
 8023268:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802326c:	10db      	asrs	r3, r3, #3
 802326e:	f1cc 0e10 	rsb	lr, ip, #16
 8023272:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023276:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802327a:	ebae 0e02 	sub.w	lr, lr, r2
 802327e:	ea4b 0101 	orr.w	r1, fp, r1
 8023282:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023286:	4351      	muls	r1, r2
 8023288:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802328a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802328e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023292:	0410      	lsls	r0, r2, #16
 8023294:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023298:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802329c:	4310      	orrs	r0, r2
 802329e:	9a08      	ldr	r2, [sp, #32]
 80232a0:	9908      	ldr	r1, [sp, #32]
 80232a2:	0412      	lsls	r2, r2, #16
 80232a4:	fb03 e000 	mla	r0, r3, r0, lr
 80232a8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80232ac:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80232b0:	ea42 020e 	orr.w	r2, r2, lr
 80232b4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80232b8:	fb03 0302 	mla	r3, r3, r2, r0
 80232bc:	0d5a      	lsrs	r2, r3, #21
 80232be:	095b      	lsrs	r3, r3, #5
 80232c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80232c4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80232c8:	4313      	orrs	r3, r2
 80232ca:	f8a9 3000 	strh.w	r3, [r9]
 80232ce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80232d0:	441c      	add	r4, r3
 80232d2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80232d4:	f109 0902 	add.w	r9, r9, #2
 80232d8:	441e      	add	r6, r3
 80232da:	f10a 3aff 	add.w	sl, sl, #4294967295
 80232de:	e784      	b.n	80231ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80232e0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80232e2:	441c      	add	r4, r3
 80232e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80232e6:	3d01      	subs	r5, #1
 80232e8:	441e      	add	r6, r3
 80232ea:	3702      	adds	r7, #2
 80232ec:	e761      	b.n	80231b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80232ee:	d01d      	beq.n	802332c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80232f0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80232f2:	1e6b      	subs	r3, r5, #1
 80232f4:	fb00 4003 	mla	r0, r0, r3, r4
 80232f8:	1400      	asrs	r0, r0, #16
 80232fa:	f53f af74 	bmi.w	80231e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80232fe:	3901      	subs	r1, #1
 8023300:	4288      	cmp	r0, r1
 8023302:	f6bf af70 	bge.w	80231e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023306:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023308:	fb01 6303 	mla	r3, r1, r3, r6
 802330c:	141b      	asrs	r3, r3, #16
 802330e:	f53f af6a 	bmi.w	80231e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023312:	3a01      	subs	r2, #1
 8023314:	4293      	cmp	r3, r2
 8023316:	f6bf af66 	bge.w	80231e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802331a:	46a9      	mov	r9, r5
 802331c:	46ba      	mov	sl, r7
 802331e:	f1b9 0f00 	cmp.w	r9, #0
 8023322:	dc5a      	bgt.n	80233da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8023324:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023328:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802332c:	9b07      	ldr	r3, [sp, #28]
 802332e:	2b00      	cmp	r3, #0
 8023330:	f340 80b8 	ble.w	80234a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023334:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023338:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802333c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023340:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023342:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023346:	ee31 1a05 	vadd.f32	s2, s2, s10
 802334a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802334e:	eef0 6a62 	vmov.f32	s13, s5
 8023352:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023356:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802335a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802335e:	ee16 4a90 	vmov	r4, s13
 8023362:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023366:	eef0 6a43 	vmov.f32	s13, s6
 802336a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802336e:	ee12 2a90 	vmov	r2, s5
 8023372:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023376:	fb92 f3f3 	sdiv	r3, r2, r3
 802337a:	ee13 2a10 	vmov	r2, s6
 802337e:	931b      	str	r3, [sp, #108]	; 0x6c
 8023380:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023382:	fb92 f3f3 	sdiv	r3, r2, r3
 8023386:	931c      	str	r3, [sp, #112]	; 0x70
 8023388:	9b07      	ldr	r3, [sp, #28]
 802338a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802338c:	3b01      	subs	r3, #1
 802338e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023392:	9307      	str	r3, [sp, #28]
 8023394:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023396:	ee16 6a90 	vmov	r6, s13
 802339a:	bf14      	ite	ne
 802339c:	461d      	movne	r5, r3
 802339e:	4615      	moveq	r5, r2
 80233a0:	eeb0 3a67 	vmov.f32	s6, s15
 80233a4:	eef0 2a47 	vmov.f32	s5, s14
 80233a8:	e6f4      	b.n	8023194 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80233aa:	f111 0b01 	adds.w	fp, r1, #1
 80233ae:	d48e      	bmi.n	80232ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80233b0:	45de      	cmp	lr, fp
 80233b2:	db8c      	blt.n	80232ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80233b4:	f110 0b01 	adds.w	fp, r0, #1
 80233b8:	d489      	bmi.n	80232ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80233ba:	455b      	cmp	r3, fp
 80233bc:	db87      	blt.n	80232ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80233be:	b21b      	sxth	r3, r3
 80233c0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80233c4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80233c8:	9300      	str	r3, [sp, #0]
 80233ca:	4642      	mov	r2, r8
 80233cc:	fa0f f38e 	sxth.w	r3, lr
 80233d0:	4649      	mov	r1, r9
 80233d2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80233d4:	f7ff fe4d 	bl	8023072 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80233d8:	e779      	b.n	80232ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80233da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80233dc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80233e0:	1420      	asrs	r0, r4, #16
 80233e2:	1431      	asrs	r1, r6, #16
 80233e4:	fb03 0101 	mla	r1, r3, r1, r0
 80233e8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80233ec:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80233f0:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80233f4:	8841      	ldrh	r1, [r0, #2]
 80233f6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80233fa:	f1be 0f00 	cmp.w	lr, #0
 80233fe:	d00b      	beq.n	8023418 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023400:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8023404:	3b01      	subs	r3, #1
 8023406:	005b      	lsls	r3, r3, #1
 8023408:	3302      	adds	r3, #2
 802340a:	eb00 0b03 	add.w	fp, r0, r3
 802340e:	5ac3      	ldrh	r3, [r0, r3]
 8023410:	930a      	str	r3, [sp, #40]	; 0x28
 8023412:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023416:	930b      	str	r3, [sp, #44]	; 0x2c
 8023418:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802341c:	fb12 f30e 	smulbb	r3, r2, lr
 8023420:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023424:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023428:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802342c:	10db      	asrs	r3, r3, #3
 802342e:	ea40 000c 	orr.w	r0, r0, ip
 8023432:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023436:	f1ce 0c10 	rsb	ip, lr, #16
 802343a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802343e:	ebac 0c02 	sub.w	ip, ip, r2
 8023442:	ea4b 0101 	orr.w	r1, fp, r1
 8023446:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802344a:	4351      	muls	r1, r2
 802344c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802344e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023452:	fb0c 1c00 	mla	ip, ip, r0, r1
 8023456:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802345a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802345e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023460:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023462:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023466:	0412      	lsls	r2, r2, #16
 8023468:	ea4b 0000 	orr.w	r0, fp, r0
 802346c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023470:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8023474:	fb03 c000 	mla	r0, r3, r0, ip
 8023478:	ea42 0b0b 	orr.w	fp, r2, fp
 802347c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023480:	fb03 000b 	mla	r0, r3, fp, r0
 8023484:	0d43      	lsrs	r3, r0, #21
 8023486:	0940      	lsrs	r0, r0, #5
 8023488:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802348c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023490:	4318      	orrs	r0, r3
 8023492:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023494:	f82a 0b02 	strh.w	r0, [sl], #2
 8023498:	441c      	add	r4, r3
 802349a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802349c:	f109 39ff 	add.w	r9, r9, #4294967295
 80234a0:	441e      	add	r6, r3
 80234a2:	e73c      	b.n	802331e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80234a4:	b00f      	add	sp, #60	; 0x3c
 80234a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080234aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80234aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80234ae:	b085      	sub	sp, #20
 80234b0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80234b4:	9102      	str	r1, [sp, #8]
 80234b6:	2c00      	cmp	r4, #0
 80234b8:	fb04 7103 	mla	r1, r4, r3, r7
 80234bc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80234c0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80234c4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80234c8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80234cc:	f2c0 811b 	blt.w	8023706 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80234d0:	45a6      	cmp	lr, r4
 80234d2:	f340 8118 	ble.w	8023706 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80234d6:	2f00      	cmp	r7, #0
 80234d8:	f2c0 8113 	blt.w	8023702 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80234dc:	42bb      	cmp	r3, r7
 80234de:	f340 8110 	ble.w	8023702 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80234e2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80234e6:	1c7a      	adds	r2, r7, #1
 80234e8:	f100 8110 	bmi.w	802370c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80234ec:	4293      	cmp	r3, r2
 80234ee:	f340 810d 	ble.w	802370c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80234f2:	2e00      	cmp	r6, #0
 80234f4:	f000 810c 	beq.w	8023710 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80234f8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80234fc:	3401      	adds	r4, #1
 80234fe:	f100 810b 	bmi.w	8023718 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023502:	45a6      	cmp	lr, r4
 8023504:	f340 8108 	ble.w	8023718 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023508:	2800      	cmp	r0, #0
 802350a:	f000 8108 	beq.w	802371e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802350e:	2f00      	cmp	r7, #0
 8023510:	f2c0 8100 	blt.w	8023714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023514:	42bb      	cmp	r3, r7
 8023516:	f340 80fd 	ble.w	8023714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802351a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802351e:	3701      	adds	r7, #1
 8023520:	f100 8100 	bmi.w	8023724 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023524:	42bb      	cmp	r3, r7
 8023526:	f340 80fd 	ble.w	8023724 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802352a:	2e00      	cmp	r6, #0
 802352c:	f000 80fc 	beq.w	8023728 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023530:	3301      	adds	r3, #1
 8023532:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8023536:	b2b6      	uxth	r6, r6
 8023538:	b280      	uxth	r0, r0
 802353a:	fb00 fe06 	mul.w	lr, r0, r6
 802353e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023542:	0136      	lsls	r6, r6, #4
 8023544:	eba6 070e 	sub.w	r7, r6, lr
 8023548:	b280      	uxth	r0, r0
 802354a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802354e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023552:	b2bf      	uxth	r7, r7
 8023554:	1a1b      	subs	r3, r3, r0
 8023556:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802355a:	b29b      	uxth	r3, r3
 802355c:	fb0a f607 	mul.w	r6, sl, r7
 8023560:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023564:	fb0b 6603 	mla	r6, fp, r3, r6
 8023568:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802356c:	fb00 6609 	mla	r6, r0, r9, r6
 8023570:	fb0e 6608 	mla	r6, lr, r8, r6
 8023574:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023578:	9600      	str	r6, [sp, #0]
 802357a:	2e00      	cmp	r6, #0
 802357c:	f000 80be 	beq.w	80236fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8023580:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023584:	fb0b fc0c 	mul.w	ip, fp, ip
 8023588:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802358c:	fb0b f505 	mul.w	r5, fp, r5
 8023590:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023594:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023598:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802359c:	44dc      	add	ip, fp
 802359e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235a2:	9501      	str	r5, [sp, #4]
 80235a4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80235a8:	9503      	str	r5, [sp, #12]
 80235aa:	9d01      	ldr	r5, [sp, #4]
 80235ac:	9e02      	ldr	r6, [sp, #8]
 80235ae:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80235b2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80235b6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80235ba:	fb0a fc0c 	mul.w	ip, sl, ip
 80235be:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80235c2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80235c6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80235ca:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80235ce:	4465      	add	r5, ip
 80235d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80235d4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80235d8:	fb09 fc0c 	mul.w	ip, r9, ip
 80235dc:	fb09 f904 	mul.w	r9, r9, r4
 80235e0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80235e4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80235e8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80235ec:	fb08 f404 	mul.w	r4, r8, r4
 80235f0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80235f4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80235f8:	fb08 f802 	mul.w	r8, r8, r2
 80235fc:	fb0a fa01 	mul.w	sl, sl, r1
 8023600:	0a22      	lsrs	r2, r4, #8
 8023602:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023606:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802360a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802360e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023612:	4414      	add	r4, r2
 8023614:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023618:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802361c:	0a2d      	lsrs	r5, r5, #8
 802361e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023622:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023626:	9a03      	ldr	r2, [sp, #12]
 8023628:	8836      	ldrh	r6, [r6, #0]
 802362a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802362e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023632:	437d      	muls	r5, r7
 8023634:	4461      	add	r1, ip
 8023636:	0a24      	lsrs	r4, r4, #8
 8023638:	fb02 5503 	mla	r5, r2, r3, r5
 802363c:	0a09      	lsrs	r1, r1, #8
 802363e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023642:	fb04 540e 	mla	r4, r4, lr, r5
 8023646:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802364a:	fb01 4100 	mla	r1, r1, r0, r4
 802364e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023652:	0a09      	lsrs	r1, r1, #8
 8023654:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023658:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802365c:	fb07 f70a 	mul.w	r7, r7, sl
 8023660:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023664:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023668:	fb03 7101 	mla	r1, r3, r1, r7
 802366c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023670:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023674:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023678:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802367c:	fb00 e101 	mla	r1, r0, r1, lr
 8023680:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023684:	9a00      	ldr	r2, [sp, #0]
 8023686:	b287      	uxth	r7, r0
 8023688:	437a      	muls	r2, r7
 802368a:	0a09      	lsrs	r1, r1, #8
 802368c:	1c53      	adds	r3, r2, #1
 802368e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023692:	4321      	orrs	r1, r4
 8023694:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023698:	1235      	asrs	r5, r6, #8
 802369a:	0c0a      	lsrs	r2, r1, #16
 802369c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80236a0:	b2db      	uxtb	r3, r3
 80236a2:	fb12 f207 	smulbb	r2, r2, r7
 80236a6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80236aa:	fb05 2503 	mla	r5, r5, r3, r2
 80236ae:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80236b2:	10f2      	asrs	r2, r6, #3
 80236b4:	b2c8      	uxtb	r0, r1
 80236b6:	00f6      	lsls	r6, r6, #3
 80236b8:	fb14 f407 	smulbb	r4, r4, r7
 80236bc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80236c0:	b2f6      	uxtb	r6, r6
 80236c2:	fb10 f007 	smulbb	r0, r0, r7
 80236c6:	fb02 4203 	mla	r2, r2, r3, r4
 80236ca:	b2ad      	uxth	r5, r5
 80236cc:	fb06 0303 	mla	r3, r6, r3, r0
 80236d0:	b299      	uxth	r1, r3
 80236d2:	b294      	uxth	r4, r2
 80236d4:	1c6b      	adds	r3, r5, #1
 80236d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80236da:	1c62      	adds	r2, r4, #1
 80236dc:	1c4b      	adds	r3, r1, #1
 80236de:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80236e2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80236e6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80236ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80236ee:	0952      	lsrs	r2, r2, #5
 80236f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80236f4:	432b      	orrs	r3, r5
 80236f6:	4313      	orrs	r3, r2
 80236f8:	9a02      	ldr	r2, [sp, #8]
 80236fa:	8013      	strh	r3, [r2, #0]
 80236fc:	b005      	add	sp, #20
 80236fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023702:	2500      	movs	r5, #0
 8023704:	e6ef      	b.n	80234e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023706:	2100      	movs	r1, #0
 8023708:	460d      	mov	r5, r1
 802370a:	e6f7      	b.n	80234fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802370c:	2100      	movs	r1, #0
 802370e:	e6f5      	b.n	80234fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023710:	4631      	mov	r1, r6
 8023712:	e6f3      	b.n	80234fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023714:	2400      	movs	r4, #0
 8023716:	e702      	b.n	802351e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023718:	2200      	movs	r2, #0
 802371a:	4614      	mov	r4, r2
 802371c:	e70b      	b.n	8023536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802371e:	4602      	mov	r2, r0
 8023720:	4604      	mov	r4, r0
 8023722:	e708      	b.n	8023536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023724:	2200      	movs	r2, #0
 8023726:	e706      	b.n	8023536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023728:	4632      	mov	r2, r6
 802372a:	e704      	b.n	8023536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802372c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802372c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023730:	b09d      	sub	sp, #116	; 0x74
 8023732:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8023736:	9219      	str	r2, [sp, #100]	; 0x64
 8023738:	9307      	str	r3, [sp, #28]
 802373a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802373c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023740:	931a      	str	r3, [sp, #104]	; 0x68
 8023742:	9117      	str	r1, [sp, #92]	; 0x5c
 8023744:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023748:	901b      	str	r0, [sp, #108]	; 0x6c
 802374a:	6850      	ldr	r0, [r2, #4]
 802374c:	6812      	ldr	r2, [r2, #0]
 802374e:	fb00 1303 	mla	r3, r0, r3, r1
 8023752:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023756:	930a      	str	r3, [sp, #40]	; 0x28
 8023758:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802375a:	681b      	ldr	r3, [r3, #0]
 802375c:	9310      	str	r3, [sp, #64]	; 0x40
 802375e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8023762:	930b      	str	r3, [sp, #44]	; 0x2c
 8023764:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023766:	2b00      	cmp	r3, #0
 8023768:	dc03      	bgt.n	8023772 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802376a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802376c:	2b00      	cmp	r3, #0
 802376e:	f340 8375 	ble.w	8023e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023772:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023774:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023778:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802377c:	1e48      	subs	r0, r1, #1
 802377e:	1e57      	subs	r7, r2, #1
 8023780:	9b07      	ldr	r3, [sp, #28]
 8023782:	2b00      	cmp	r3, #0
 8023784:	f340 818e 	ble.w	8023aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023788:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802378c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023790:	d406      	bmi.n	80237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023792:	4584      	cmp	ip, r0
 8023794:	da04      	bge.n	80237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023796:	2b00      	cmp	r3, #0
 8023798:	db02      	blt.n	80237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802379a:	42bb      	cmp	r3, r7
 802379c:	f2c0 8183 	blt.w	8023aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80237a0:	f11c 0c01 	adds.w	ip, ip, #1
 80237a4:	f100 8173 	bmi.w	8023a8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80237a8:	4561      	cmp	r1, ip
 80237aa:	f2c0 8170 	blt.w	8023a8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80237ae:	3301      	adds	r3, #1
 80237b0:	f100 816d 	bmi.w	8023a8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80237b4:	429a      	cmp	r2, r3
 80237b6:	f2c0 816a 	blt.w	8023a8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80237ba:	9b07      	ldr	r3, [sp, #28]
 80237bc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80237be:	9318      	str	r3, [sp, #96]	; 0x60
 80237c0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80237c2:	2b00      	cmp	r3, #0
 80237c4:	f340 818c 	ble.w	8023ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80237c8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80237ca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80237cc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80237d0:	689b      	ldr	r3, [r3, #8]
 80237d2:	1422      	asrs	r2, r4, #16
 80237d4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80237d8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80237dc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80237e0:	f100 81cd 	bmi.w	8023b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80237e4:	f103 38ff 	add.w	r8, r3, #4294967295
 80237e8:	4542      	cmp	r2, r8
 80237ea:	f280 81c8 	bge.w	8023b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80237ee:	f1bc 0f00 	cmp.w	ip, #0
 80237f2:	f2c0 81c4 	blt.w	8023b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80237f6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80237fa:	45c4      	cmp	ip, r8
 80237fc:	f280 81bf 	bge.w	8023b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023800:	b21b      	sxth	r3, r3
 8023802:	fb0c 2203 	mla	r2, ip, r3, r2
 8023806:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023808:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802380c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023810:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023814:	2800      	cmp	r0, #0
 8023816:	f000 81a9 	beq.w	8023b6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802381a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802381e:	950c      	str	r5, [sp, #48]	; 0x30
 8023820:	0e2d      	lsrs	r5, r5, #24
 8023822:	9513      	str	r5, [sp, #76]	; 0x4c
 8023824:	b181      	cbz	r1, 8023848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023826:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802382a:	3b01      	subs	r3, #1
 802382c:	009b      	lsls	r3, r3, #2
 802382e:	3304      	adds	r3, #4
 8023830:	eb08 0c03 	add.w	ip, r8, r3
 8023834:	f858 3003 	ldr.w	r3, [r8, r3]
 8023838:	9308      	str	r3, [sp, #32]
 802383a:	0e1b      	lsrs	r3, r3, #24
 802383c:	9311      	str	r3, [sp, #68]	; 0x44
 802383e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023842:	930d      	str	r3, [sp, #52]	; 0x34
 8023844:	0e1b      	lsrs	r3, r3, #24
 8023846:	9314      	str	r3, [sp, #80]	; 0x50
 8023848:	b280      	uxth	r0, r0
 802384a:	b289      	uxth	r1, r1
 802384c:	fb00 f901 	mul.w	r9, r0, r1
 8023850:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023854:	0100      	lsls	r0, r0, #4
 8023856:	eba0 0809 	sub.w	r8, r0, r9
 802385a:	b289      	uxth	r1, r1
 802385c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023860:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023862:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023864:	fa1f f888 	uxth.w	r8, r8
 8023868:	1a5b      	subs	r3, r3, r1
 802386a:	b29b      	uxth	r3, r3
 802386c:	fb08 f000 	mul.w	r0, r8, r0
 8023870:	fb03 000e 	mla	r0, r3, lr, r0
 8023874:	fb01 0005 	mla	r0, r1, r5, r0
 8023878:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802387a:	fb09 0005 	mla	r0, r9, r5, r0
 802387e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023882:	2800      	cmp	r0, #0
 8023884:	f000 80fa 	beq.w	8023a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023888:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802388c:	d01b      	beq.n	80238c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802388e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023892:	fb0e fa0a 	mul.w	sl, lr, sl
 8023896:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802389a:	fb0e fe02 	mul.w	lr, lr, r2
 802389e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80238a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80238a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80238aa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80238ae:	4452      	add	r2, sl
 80238b0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80238b4:	0a12      	lsrs	r2, r2, #8
 80238b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80238ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80238be:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80238c2:	ea42 020c 	orr.w	r2, r2, ip
 80238c6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80238c8:	2dff      	cmp	r5, #255	; 0xff
 80238ca:	d021      	beq.n	8023910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80238cc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80238ce:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80238d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80238d4:	fb05 fb0b 	mul.w	fp, r5, fp
 80238d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80238da:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80238de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80238e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80238e4:	fb05 fa0a 	mul.w	sl, r5, sl
 80238e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80238ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80238f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80238f4:	44de      	add	lr, fp
 80238f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80238fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80238fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023902:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023906:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802390a:	ea4e 050a 	orr.w	r5, lr, sl
 802390e:	950c      	str	r5, [sp, #48]	; 0x30
 8023910:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023912:	2dff      	cmp	r5, #255	; 0xff
 8023914:	d021      	beq.n	802395a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023916:	9d08      	ldr	r5, [sp, #32]
 8023918:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802391c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802391e:	fb05 fb0b 	mul.w	fp, r5, fp
 8023922:	9d08      	ldr	r5, [sp, #32]
 8023924:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023928:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802392a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802392e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023932:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023936:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802393a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802393e:	44de      	add	lr, fp
 8023940:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023944:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023948:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802394c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023950:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023954:	ea4e 050a 	orr.w	r5, lr, sl
 8023958:	9508      	str	r5, [sp, #32]
 802395a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802395c:	2dff      	cmp	r5, #255	; 0xff
 802395e:	d021      	beq.n	80239a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023960:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023962:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023966:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023968:	fb05 fb0b 	mul.w	fp, r5, fp
 802396c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802396e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023972:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023974:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023978:	fb05 fa0a 	mul.w	sl, r5, sl
 802397c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023980:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023984:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023988:	44de      	add	lr, fp
 802398a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802398e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023992:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023996:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802399a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802399e:	ea4e 050a 	orr.w	r5, lr, sl
 80239a2:	950d      	str	r5, [sp, #52]	; 0x34
 80239a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80239a6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80239aa:	9d08      	ldr	r5, [sp, #32]
 80239ac:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80239b0:	fb08 fc0c 	mul.w	ip, r8, ip
 80239b4:	fb03 cc0e 	mla	ip, r3, lr, ip
 80239b8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80239bc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80239be:	fb01 cc0e 	mla	ip, r1, lr, ip
 80239c2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80239c6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80239c8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80239cc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80239d0:	fb08 f80e 	mul.w	r8, r8, lr
 80239d4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80239d8:	fb03 8202 	mla	r2, r3, r2, r8
 80239dc:	9b08      	ldr	r3, [sp, #32]
 80239de:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80239e0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80239e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80239e6:	fb01 220a 	mla	r2, r1, sl, r2
 80239ea:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80239ee:	fb09 2901 	mla	r9, r9, r1, r2
 80239f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80239f4:	883b      	ldrh	r3, [r7, #0]
 80239f6:	4342      	muls	r2, r0
 80239f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239fc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023a00:	1c50      	adds	r0, r2, #1
 8023a02:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023a06:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023a0a:	ea4c 0c09 	orr.w	ip, ip, r9
 8023a0e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023a12:	1219      	asrs	r1, r3, #8
 8023a14:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023a18:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023a1c:	b2c0      	uxtb	r0, r0
 8023a1e:	fb12 f205 	smulbb	r2, r2, r5
 8023a22:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023a26:	fb01 2100 	mla	r1, r1, r0, r2
 8023a2a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023a2e:	10da      	asrs	r2, r3, #3
 8023a30:	fa5f fc8c 	uxtb.w	ip, ip
 8023a34:	00db      	lsls	r3, r3, #3
 8023a36:	fb1c fc05 	smulbb	ip, ip, r5
 8023a3a:	b2db      	uxtb	r3, r3
 8023a3c:	b289      	uxth	r1, r1
 8023a3e:	fb03 c300 	mla	r3, r3, r0, ip
 8023a42:	fa1f fc83 	uxth.w	ip, r3
 8023a46:	1c4b      	adds	r3, r1, #1
 8023a48:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023a4c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023a50:	fb1e fe05 	smulbb	lr, lr, r5
 8023a54:	f10c 0301 	add.w	r3, ip, #1
 8023a58:	fb02 e200 	mla	r2, r2, r0, lr
 8023a5c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023a60:	b292      	uxth	r2, r2
 8023a62:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023a66:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023a6a:	430b      	orrs	r3, r1
 8023a6c:	1c51      	adds	r1, r2, #1
 8023a6e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023a72:	0952      	lsrs	r2, r2, #5
 8023a74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a78:	4313      	orrs	r3, r2
 8023a7a:	803b      	strh	r3, [r7, #0]
 8023a7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023a7e:	441c      	add	r4, r3
 8023a80:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023a82:	441e      	add	r6, r3
 8023a84:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023a86:	3b01      	subs	r3, #1
 8023a88:	3702      	adds	r7, #2
 8023a8a:	9318      	str	r3, [sp, #96]	; 0x60
 8023a8c:	e698      	b.n	80237c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023a8e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023a90:	441c      	add	r4, r3
 8023a92:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023a94:	441e      	add	r6, r3
 8023a96:	9b07      	ldr	r3, [sp, #28]
 8023a98:	3b01      	subs	r3, #1
 8023a9a:	9307      	str	r3, [sp, #28]
 8023a9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a9e:	3302      	adds	r3, #2
 8023aa0:	930a      	str	r3, [sp, #40]	; 0x28
 8023aa2:	e66d      	b.n	8023780 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023aa4:	d023      	beq.n	8023aee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023aa6:	9b07      	ldr	r3, [sp, #28]
 8023aa8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023aaa:	3b01      	subs	r3, #1
 8023aac:	fb00 4003 	mla	r0, r0, r3, r4
 8023ab0:	1400      	asrs	r0, r0, #16
 8023ab2:	f53f ae82 	bmi.w	80237ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023ab6:	3901      	subs	r1, #1
 8023ab8:	4288      	cmp	r0, r1
 8023aba:	f6bf ae7e 	bge.w	80237ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023abe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023ac0:	fb01 6303 	mla	r3, r1, r3, r6
 8023ac4:	141b      	asrs	r3, r3, #16
 8023ac6:	f53f ae78 	bmi.w	80237ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023aca:	3a01      	subs	r2, #1
 8023acc:	4293      	cmp	r3, r2
 8023ace:	f6bf ae74 	bge.w	80237ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023ad2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023ad6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023ada:	f1bb 0f00 	cmp.w	fp, #0
 8023ade:	dc6c      	bgt.n	8023bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023ae0:	9b07      	ldr	r3, [sp, #28]
 8023ae2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023ae6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023ae8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023aec:	930a      	str	r3, [sp, #40]	; 0x28
 8023aee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023af0:	2b00      	cmp	r3, #0
 8023af2:	f340 81b3 	ble.w	8023e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023af6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023afa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023afe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023b02:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023b04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023b08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023b0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023b10:	eef0 6a62 	vmov.f32	s13, s5
 8023b14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023b18:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023b20:	ee16 4a90 	vmov	r4, s13
 8023b24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023b28:	eef0 6a43 	vmov.f32	s13, s6
 8023b2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023b30:	ee12 2a90 	vmov	r2, s5
 8023b34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023b38:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b3c:	ee13 2a10 	vmov	r2, s6
 8023b40:	9329      	str	r3, [sp, #164]	; 0xa4
 8023b42:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023b44:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b48:	932a      	str	r3, [sp, #168]	; 0xa8
 8023b4a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023b4c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023b4e:	3b01      	subs	r3, #1
 8023b50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b54:	9317      	str	r3, [sp, #92]	; 0x5c
 8023b56:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023b58:	bf08      	it	eq
 8023b5a:	4613      	moveq	r3, r2
 8023b5c:	ee16 6a90 	vmov	r6, s13
 8023b60:	9307      	str	r3, [sp, #28]
 8023b62:	eeb0 3a67 	vmov.f32	s6, s15
 8023b66:	eef0 2a47 	vmov.f32	s5, s14
 8023b6a:	e5fb      	b.n	8023764 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023b6c:	2900      	cmp	r1, #0
 8023b6e:	f43f ae6b 	beq.w	8023848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023b72:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023b76:	9308      	str	r3, [sp, #32]
 8023b78:	0e1b      	lsrs	r3, r3, #24
 8023b7a:	9311      	str	r3, [sp, #68]	; 0x44
 8023b7c:	e664      	b.n	8023848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023b7e:	f112 0801 	adds.w	r8, r2, #1
 8023b82:	f53f af7b 	bmi.w	8023a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023b86:	4543      	cmp	r3, r8
 8023b88:	f6ff af78 	blt.w	8023a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023b8c:	f11c 0801 	adds.w	r8, ip, #1
 8023b90:	f53f af74 	bmi.w	8023a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023b94:	45c6      	cmp	lr, r8
 8023b96:	f6ff af71 	blt.w	8023a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023b9a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023b9c:	9201      	str	r2, [sp, #4]
 8023b9e:	fa0f f28e 	sxth.w	r2, lr
 8023ba2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023ba6:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023baa:	9200      	str	r2, [sp, #0]
 8023bac:	b21b      	sxth	r3, r3
 8023bae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023bb0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023bb2:	4639      	mov	r1, r7
 8023bb4:	f7ff fc79 	bl	80234aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023bb8:	e760      	b.n	8023a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023bba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023bbc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023bbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023bc2:	1427      	asrs	r7, r4, #16
 8023bc4:	1433      	asrs	r3, r6, #16
 8023bc6:	fb01 7303 	mla	r3, r1, r3, r7
 8023bca:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023bce:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023bd2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023bd6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023bda:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023bde:	2a00      	cmp	r2, #0
 8023be0:	f000 8133 	beq.w	8023e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023be4:	687d      	ldr	r5, [r7, #4]
 8023be6:	950e      	str	r5, [sp, #56]	; 0x38
 8023be8:	0e2d      	lsrs	r5, r5, #24
 8023bea:	9515      	str	r5, [sp, #84]	; 0x54
 8023bec:	b178      	cbz	r0, 8023c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023bee:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8023bf2:	3901      	subs	r1, #1
 8023bf4:	0089      	lsls	r1, r1, #2
 8023bf6:	3104      	adds	r1, #4
 8023bf8:	eb07 0e01 	add.w	lr, r7, r1
 8023bfc:	5879      	ldr	r1, [r7, r1]
 8023bfe:	9109      	str	r1, [sp, #36]	; 0x24
 8023c00:	0e09      	lsrs	r1, r1, #24
 8023c02:	9112      	str	r1, [sp, #72]	; 0x48
 8023c04:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023c08:	910f      	str	r1, [sp, #60]	; 0x3c
 8023c0a:	0e09      	lsrs	r1, r1, #24
 8023c0c:	9116      	str	r1, [sp, #88]	; 0x58
 8023c0e:	b292      	uxth	r2, r2
 8023c10:	b280      	uxth	r0, r0
 8023c12:	fb02 f800 	mul.w	r8, r2, r0
 8023c16:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023c1a:	0112      	lsls	r2, r2, #4
 8023c1c:	eba2 0e08 	sub.w	lr, r2, r8
 8023c20:	b280      	uxth	r0, r0
 8023c22:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023c26:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023c28:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c2a:	fa1f fe8e 	uxth.w	lr, lr
 8023c2e:	1a12      	subs	r2, r2, r0
 8023c30:	b292      	uxth	r2, r2
 8023c32:	fb0e f101 	mul.w	r1, lr, r1
 8023c36:	fb02 110c 	mla	r1, r2, ip, r1
 8023c3a:	fb00 1105 	mla	r1, r0, r5, r1
 8023c3e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c40:	fb08 1105 	mla	r1, r8, r5, r1
 8023c44:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023c48:	2900      	cmp	r1, #0
 8023c4a:	f000 80f5 	beq.w	8023e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8023c4e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023c52:	d019      	beq.n	8023c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023c54:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023c58:	fb0c fa0a 	mul.w	sl, ip, sl
 8023c5c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023c60:	fb0c fc03 	mul.w	ip, ip, r3
 8023c64:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023c68:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023c6c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023c70:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023c74:	4453      	add	r3, sl
 8023c76:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023c7a:	0a1b      	lsrs	r3, r3, #8
 8023c7c:	0a3f      	lsrs	r7, r7, #8
 8023c7e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023c82:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023c86:	433b      	orrs	r3, r7
 8023c88:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023c8a:	2dff      	cmp	r5, #255	; 0xff
 8023c8c:	d020      	beq.n	8023cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023c8e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023c90:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023c94:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023c96:	436f      	muls	r7, r5
 8023c98:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023c9a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023c9e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023ca0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023ca4:	fb05 fa0a 	mul.w	sl, r5, sl
 8023ca8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023cac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023cb0:	44bc      	add	ip, r7
 8023cb2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023cb6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023cba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023cbe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023cc2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023cc6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023cca:	ea4c 050a 	orr.w	r5, ip, sl
 8023cce:	950e      	str	r5, [sp, #56]	; 0x38
 8023cd0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023cd2:	2dff      	cmp	r5, #255	; 0xff
 8023cd4:	d020      	beq.n	8023d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023cd6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023cd8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023cdc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023cde:	436f      	muls	r7, r5
 8023ce0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023ce2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023ce6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023ce8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023cec:	fb05 fa0a 	mul.w	sl, r5, sl
 8023cf0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023cf4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023cf8:	44bc      	add	ip, r7
 8023cfa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023cfe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023d02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023d0e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023d12:	ea4c 050a 	orr.w	r5, ip, sl
 8023d16:	9509      	str	r5, [sp, #36]	; 0x24
 8023d18:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023d1a:	2dff      	cmp	r5, #255	; 0xff
 8023d1c:	d020      	beq.n	8023d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023d1e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023d20:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023d24:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023d26:	436f      	muls	r7, r5
 8023d28:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023d2a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023d2e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023d30:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023d34:	fb05 fa0a 	mul.w	sl, r5, sl
 8023d38:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023d3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023d40:	44bc      	add	ip, r7
 8023d42:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023d46:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023d4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d52:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023d56:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023d5a:	ea4c 050a 	orr.w	r5, ip, sl
 8023d5e:	950f      	str	r5, [sp, #60]	; 0x3c
 8023d60:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023d62:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023d66:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023d68:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023d6c:	fb0e f707 	mul.w	r7, lr, r7
 8023d70:	fb02 770c 	mla	r7, r2, ip, r7
 8023d74:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023d78:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023d7a:	fb00 770c 	mla	r7, r0, ip, r7
 8023d7e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023d82:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023d84:	fb08 770c 	mla	r7, r8, ip, r7
 8023d88:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023d8c:	fb0e fe0c 	mul.w	lr, lr, ip
 8023d90:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023d94:	fb02 e303 	mla	r3, r2, r3, lr
 8023d98:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023d9a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023d9c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023da0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023da2:	fb00 330a 	mla	r3, r0, sl, r3
 8023da6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023daa:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023dae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023db0:	f8b9 0000 	ldrh.w	r0, [r9]
 8023db4:	4359      	muls	r1, r3
 8023db6:	0a3f      	lsrs	r7, r7, #8
 8023db8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023dbc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023dc0:	1c4b      	adds	r3, r1, #1
 8023dc2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023dc6:	ea47 070c 	orr.w	r7, r7, ip
 8023dca:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023dce:	1202      	asrs	r2, r0, #8
 8023dd0:	0c3b      	lsrs	r3, r7, #16
 8023dd2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023dd6:	b2c9      	uxtb	r1, r1
 8023dd8:	fb13 f305 	smulbb	r3, r3, r5
 8023ddc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023de0:	fb02 3201 	mla	r2, r2, r1, r3
 8023de4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023de8:	10c3      	asrs	r3, r0, #3
 8023dea:	b2ff      	uxtb	r7, r7
 8023dec:	00c0      	lsls	r0, r0, #3
 8023dee:	b2c0      	uxtb	r0, r0
 8023df0:	fb17 f705 	smulbb	r7, r7, r5
 8023df4:	fb00 7001 	mla	r0, r0, r1, r7
 8023df8:	b292      	uxth	r2, r2
 8023dfa:	fb1c fc05 	smulbb	ip, ip, r5
 8023dfe:	b280      	uxth	r0, r0
 8023e00:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023e04:	fb03 c301 	mla	r3, r3, r1, ip
 8023e08:	1c51      	adds	r1, r2, #1
 8023e0a:	f100 0c01 	add.w	ip, r0, #1
 8023e0e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023e12:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023e16:	b29b      	uxth	r3, r3
 8023e18:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023e1c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023e20:	ea4c 0202 	orr.w	r2, ip, r2
 8023e24:	f103 0c01 	add.w	ip, r3, #1
 8023e28:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023e2c:	095b      	lsrs	r3, r3, #5
 8023e2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e32:	431a      	orrs	r2, r3
 8023e34:	f8a9 2000 	strh.w	r2, [r9]
 8023e38:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023e3a:	441c      	add	r4, r3
 8023e3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023e3e:	f109 0902 	add.w	r9, r9, #2
 8023e42:	441e      	add	r6, r3
 8023e44:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023e48:	e647      	b.n	8023ada <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023e4a:	2800      	cmp	r0, #0
 8023e4c:	f43f aedf 	beq.w	8023c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023e50:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023e54:	9109      	str	r1, [sp, #36]	; 0x24
 8023e56:	0e09      	lsrs	r1, r1, #24
 8023e58:	9112      	str	r1, [sp, #72]	; 0x48
 8023e5a:	e6d8      	b.n	8023c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023e5c:	b01d      	add	sp, #116	; 0x74
 8023e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023e62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023e62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023e66:	b085      	sub	sp, #20
 8023e68:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023e6c:	9102      	str	r1, [sp, #8]
 8023e6e:	2c00      	cmp	r4, #0
 8023e70:	fb04 7103 	mla	r1, r4, r3, r7
 8023e74:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023e78:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023e7c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023e80:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023e84:	f2c0 810c 	blt.w	80240a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023e88:	45a6      	cmp	lr, r4
 8023e8a:	f340 8109 	ble.w	80240a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023e8e:	2f00      	cmp	r7, #0
 8023e90:	f2c0 8104 	blt.w	802409c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023e94:	42bb      	cmp	r3, r7
 8023e96:	f340 8101 	ble.w	802409c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023e9a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023e9e:	1c7a      	adds	r2, r7, #1
 8023ea0:	f100 8101 	bmi.w	80240a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023ea4:	4293      	cmp	r3, r2
 8023ea6:	f340 80fe 	ble.w	80240a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023eaa:	2e00      	cmp	r6, #0
 8023eac:	f000 80fd 	beq.w	80240aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023eb0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023eb4:	3401      	adds	r4, #1
 8023eb6:	f100 80fc 	bmi.w	80240b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023eba:	45a6      	cmp	lr, r4
 8023ebc:	f340 80f9 	ble.w	80240b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023ec0:	2800      	cmp	r0, #0
 8023ec2:	f000 80f9 	beq.w	80240b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023ec6:	2f00      	cmp	r7, #0
 8023ec8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023ecc:	f2c0 80ef 	blt.w	80240ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023ed0:	42bb      	cmp	r3, r7
 8023ed2:	f340 80ec 	ble.w	80240ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023ed6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023eda:	3701      	adds	r7, #1
 8023edc:	f100 80ef 	bmi.w	80240be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023ee0:	42bb      	cmp	r3, r7
 8023ee2:	f340 80ec 	ble.w	80240be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023ee6:	2e00      	cmp	r6, #0
 8023ee8:	f000 80eb 	beq.w	80240c2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023eec:	6852      	ldr	r2, [r2, #4]
 8023eee:	b2b6      	uxth	r6, r6
 8023ef0:	b280      	uxth	r0, r0
 8023ef2:	fb00 fe06 	mul.w	lr, r0, r6
 8023ef6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023efa:	0136      	lsls	r6, r6, #4
 8023efc:	eba6 070e 	sub.w	r7, r6, lr
 8023f00:	b280      	uxth	r0, r0
 8023f02:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023f06:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023f0a:	b2bf      	uxth	r7, r7
 8023f0c:	1a1b      	subs	r3, r3, r0
 8023f0e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023f12:	b29b      	uxth	r3, r3
 8023f14:	fb07 f60a 	mul.w	r6, r7, sl
 8023f18:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023f1c:	fb0b 6603 	mla	r6, fp, r3, r6
 8023f20:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023f24:	fb00 6609 	mla	r6, r0, r9, r6
 8023f28:	fb0e 6608 	mla	r6, lr, r8, r6
 8023f2c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023f30:	9600      	str	r6, [sp, #0]
 8023f32:	2e00      	cmp	r6, #0
 8023f34:	f000 80af 	beq.w	8024096 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023f38:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023f3c:	fb0b fc0c 	mul.w	ip, fp, ip
 8023f40:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023f44:	fb0b f505 	mul.w	r5, fp, r5
 8023f48:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023f4c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023f50:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023f54:	44dc      	add	ip, fp
 8023f56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f5a:	9501      	str	r5, [sp, #4]
 8023f5c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023f60:	9503      	str	r5, [sp, #12]
 8023f62:	9d01      	ldr	r5, [sp, #4]
 8023f64:	9e02      	ldr	r6, [sp, #8]
 8023f66:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023f6a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023f6e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023f72:	fb0a fc0c 	mul.w	ip, sl, ip
 8023f76:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023f7a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023f7e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023f82:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023f86:	4465      	add	r5, ip
 8023f88:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023f8c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023f90:	fb09 fc0c 	mul.w	ip, r9, ip
 8023f94:	fb09 f904 	mul.w	r9, r9, r4
 8023f98:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023f9c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023fa0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023fa4:	fb08 f404 	mul.w	r4, r8, r4
 8023fa8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023fac:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023fb0:	fb08 f802 	mul.w	r8, r8, r2
 8023fb4:	fb0a fa01 	mul.w	sl, sl, r1
 8023fb8:	0a22      	lsrs	r2, r4, #8
 8023fba:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023fbe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023fc2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023fc6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023fca:	4414      	add	r4, r2
 8023fcc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023fd0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023fd4:	0a2d      	lsrs	r5, r5, #8
 8023fd6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023fda:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023fde:	9a03      	ldr	r2, [sp, #12]
 8023fe0:	8836      	ldrh	r6, [r6, #0]
 8023fe2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023fe6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023fea:	437d      	muls	r5, r7
 8023fec:	4461      	add	r1, ip
 8023fee:	0a24      	lsrs	r4, r4, #8
 8023ff0:	fb02 5503 	mla	r5, r2, r3, r5
 8023ff4:	0a09      	lsrs	r1, r1, #8
 8023ff6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023ffa:	fb04 540e 	mla	r4, r4, lr, r5
 8023ffe:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024002:	fb01 4100 	mla	r1, r1, r0, r4
 8024006:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802400a:	0a09      	lsrs	r1, r1, #8
 802400c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024010:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024014:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024018:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802401c:	fb07 f70a 	mul.w	r7, r7, sl
 8024020:	fb03 7101 	mla	r1, r3, r1, r7
 8024024:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024028:	9b00      	ldr	r3, [sp, #0]
 802402a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802402e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024032:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024036:	fb00 e101 	mla	r1, r0, r1, lr
 802403a:	43da      	mvns	r2, r3
 802403c:	1233      	asrs	r3, r6, #8
 802403e:	b2d2      	uxtb	r2, r2
 8024040:	10f0      	asrs	r0, r6, #3
 8024042:	0a09      	lsrs	r1, r1, #8
 8024044:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024048:	00f6      	lsls	r6, r6, #3
 802404a:	4353      	muls	r3, r2
 802404c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024050:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024054:	b2f6      	uxtb	r6, r6
 8024056:	4321      	orrs	r1, r4
 8024058:	4350      	muls	r0, r2
 802405a:	4356      	muls	r6, r2
 802405c:	1c5a      	adds	r2, r3, #1
 802405e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024062:	0c0b      	lsrs	r3, r1, #16
 8024064:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024068:	1c42      	adds	r2, r0, #1
 802406a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802406e:	0a0a      	lsrs	r2, r1, #8
 8024070:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024074:	021b      	lsls	r3, r3, #8
 8024076:	00d2      	lsls	r2, r2, #3
 8024078:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802407c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024080:	4313      	orrs	r3, r2
 8024082:	1c72      	adds	r2, r6, #1
 8024084:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024088:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802408c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024090:	4319      	orrs	r1, r3
 8024092:	9b02      	ldr	r3, [sp, #8]
 8024094:	8019      	strh	r1, [r3, #0]
 8024096:	b005      	add	sp, #20
 8024098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802409c:	2500      	movs	r5, #0
 802409e:	e6fe      	b.n	8023e9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80240a0:	2100      	movs	r1, #0
 80240a2:	460d      	mov	r5, r1
 80240a4:	e706      	b.n	8023eb4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80240a6:	2100      	movs	r1, #0
 80240a8:	e704      	b.n	8023eb4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80240aa:	4631      	mov	r1, r6
 80240ac:	e702      	b.n	8023eb4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80240ae:	2400      	movs	r4, #0
 80240b0:	e713      	b.n	8023eda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80240b2:	2200      	movs	r2, #0
 80240b4:	4614      	mov	r4, r2
 80240b6:	e71a      	b.n	8023eee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80240b8:	4602      	mov	r2, r0
 80240ba:	4604      	mov	r4, r0
 80240bc:	e717      	b.n	8023eee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80240be:	2200      	movs	r2, #0
 80240c0:	e715      	b.n	8023eee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80240c2:	4632      	mov	r2, r6
 80240c4:	e713      	b.n	8023eee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080240c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80240c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240cc:	b09b      	sub	sp, #108	; 0x6c
 80240ce:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80240d2:	9218      	str	r2, [sp, #96]	; 0x60
 80240d4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80240d6:	9116      	str	r1, [sp, #88]	; 0x58
 80240d8:	9307      	str	r3, [sp, #28]
 80240da:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80240de:	9019      	str	r0, [sp, #100]	; 0x64
 80240e0:	6850      	ldr	r0, [r2, #4]
 80240e2:	6812      	ldr	r2, [r2, #0]
 80240e4:	fb00 1303 	mla	r3, r0, r3, r1
 80240e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80240ec:	930a      	str	r3, [sp, #40]	; 0x28
 80240ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80240f0:	681b      	ldr	r3, [r3, #0]
 80240f2:	930f      	str	r3, [sp, #60]	; 0x3c
 80240f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80240f6:	2b00      	cmp	r3, #0
 80240f8:	dc03      	bgt.n	8024102 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80240fa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80240fc:	2b00      	cmp	r3, #0
 80240fe:	f340 8386 	ble.w	802480e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024102:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024104:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024108:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802410c:	1e48      	subs	r0, r1, #1
 802410e:	1e57      	subs	r7, r2, #1
 8024110:	9b07      	ldr	r3, [sp, #28]
 8024112:	2b00      	cmp	r3, #0
 8024114:	f340 8166 	ble.w	80243e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024118:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802411c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024120:	d406      	bmi.n	8024130 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024122:	4584      	cmp	ip, r0
 8024124:	da04      	bge.n	8024130 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024126:	2b00      	cmp	r3, #0
 8024128:	db02      	blt.n	8024130 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802412a:	42bb      	cmp	r3, r7
 802412c:	f2c0 815b 	blt.w	80243e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024130:	f11c 0c01 	adds.w	ip, ip, #1
 8024134:	f100 814b 	bmi.w	80243ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024138:	4561      	cmp	r1, ip
 802413a:	f2c0 8148 	blt.w	80243ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802413e:	3301      	adds	r3, #1
 8024140:	f100 8145 	bmi.w	80243ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024144:	429a      	cmp	r2, r3
 8024146:	f2c0 8142 	blt.w	80243ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802414a:	9b07      	ldr	r3, [sp, #28]
 802414c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802414e:	9317      	str	r3, [sp, #92]	; 0x5c
 8024150:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024152:	2b00      	cmp	r3, #0
 8024154:	f340 8165 	ble.w	8024422 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024158:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 802415a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802415c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024160:	689b      	ldr	r3, [r3, #8]
 8024162:	1422      	asrs	r2, r4, #16
 8024164:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024168:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802416c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024170:	f100 81d5 	bmi.w	802451e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024174:	f103 38ff 	add.w	r8, r3, #4294967295
 8024178:	4542      	cmp	r2, r8
 802417a:	f280 81d0 	bge.w	802451e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802417e:	f1bc 0f00 	cmp.w	ip, #0
 8024182:	f2c0 81cc 	blt.w	802451e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024186:	f10e 38ff 	add.w	r8, lr, #4294967295
 802418a:	45c4      	cmp	ip, r8
 802418c:	f280 81c7 	bge.w	802451e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024190:	b21b      	sxth	r3, r3
 8024192:	fb0c 2203 	mla	r2, ip, r3, r2
 8024196:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024198:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802419c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80241a0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80241a4:	2900      	cmp	r1, #0
 80241a6:	f000 8182 	beq.w	80244ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80241aa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80241ae:	950b      	str	r5, [sp, #44]	; 0x2c
 80241b0:	0e2d      	lsrs	r5, r5, #24
 80241b2:	9512      	str	r5, [sp, #72]	; 0x48
 80241b4:	b180      	cbz	r0, 80241d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80241b6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80241ba:	3b01      	subs	r3, #1
 80241bc:	009b      	lsls	r3, r3, #2
 80241be:	3304      	adds	r3, #4
 80241c0:	eb08 0c03 	add.w	ip, r8, r3
 80241c4:	f858 3003 	ldr.w	r3, [r8, r3]
 80241c8:	9308      	str	r3, [sp, #32]
 80241ca:	0e1b      	lsrs	r3, r3, #24
 80241cc:	9310      	str	r3, [sp, #64]	; 0x40
 80241ce:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80241d2:	930c      	str	r3, [sp, #48]	; 0x30
 80241d4:	0e1b      	lsrs	r3, r3, #24
 80241d6:	9313      	str	r3, [sp, #76]	; 0x4c
 80241d8:	b289      	uxth	r1, r1
 80241da:	b280      	uxth	r0, r0
 80241dc:	fb01 f900 	mul.w	r9, r1, r0
 80241e0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80241e4:	0109      	lsls	r1, r1, #4
 80241e6:	eba1 0809 	sub.w	r8, r1, r9
 80241ea:	b280      	uxth	r0, r0
 80241ec:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 80241f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80241f2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80241f4:	fa1f f888 	uxth.w	r8, r8
 80241f8:	1a09      	subs	r1, r1, r0
 80241fa:	b289      	uxth	r1, r1
 80241fc:	fb08 f303 	mul.w	r3, r8, r3
 8024200:	fb01 330e 	mla	r3, r1, lr, r3
 8024204:	fb00 3305 	mla	r3, r0, r5, r3
 8024208:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802420a:	fb09 3305 	mla	r3, r9, r5, r3
 802420e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024212:	2b00      	cmp	r3, #0
 8024214:	f000 80d2 	beq.w	80243bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024218:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802421c:	d01b      	beq.n	8024256 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802421e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024222:	fb0e fa0a 	mul.w	sl, lr, sl
 8024226:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802422a:	fb0e fe02 	mul.w	lr, lr, r2
 802422e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024232:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024236:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802423a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802423e:	4452      	add	r2, sl
 8024240:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024244:	0a12      	lsrs	r2, r2, #8
 8024246:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802424a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802424e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024252:	ea42 020c 	orr.w	r2, r2, ip
 8024256:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024258:	2dff      	cmp	r5, #255	; 0xff
 802425a:	d021      	beq.n	80242a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802425c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802425e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024262:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024264:	fb05 fb0b 	mul.w	fp, r5, fp
 8024268:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802426a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802426e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024270:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024274:	fb05 fa0a 	mul.w	sl, r5, sl
 8024278:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802427c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024280:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024284:	44de      	add	lr, fp
 8024286:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802428a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802428e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024292:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024296:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802429a:	ea4e 050a 	orr.w	r5, lr, sl
 802429e:	950b      	str	r5, [sp, #44]	; 0x2c
 80242a0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80242a2:	2dff      	cmp	r5, #255	; 0xff
 80242a4:	d021      	beq.n	80242ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80242a6:	9d08      	ldr	r5, [sp, #32]
 80242a8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80242ac:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80242ae:	fb05 fb0b 	mul.w	fp, r5, fp
 80242b2:	9d08      	ldr	r5, [sp, #32]
 80242b4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80242b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80242ba:	fb05 fa0e 	mul.w	sl, r5, lr
 80242be:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80242c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80242c6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80242ca:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80242ce:	44de      	add	lr, fp
 80242d0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80242d4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80242d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80242dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80242e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80242e4:	ea4e 050a 	orr.w	r5, lr, sl
 80242e8:	9508      	str	r5, [sp, #32]
 80242ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80242ec:	2dff      	cmp	r5, #255	; 0xff
 80242ee:	d021      	beq.n	8024334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80242f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80242f2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80242f6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80242f8:	fb05 fb0b 	mul.w	fp, r5, fp
 80242fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80242fe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024302:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024304:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024308:	fb05 fa0a 	mul.w	sl, r5, sl
 802430c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024310:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024314:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024318:	44de      	add	lr, fp
 802431a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802431e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024322:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024326:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802432a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802432e:	ea4e 050a 	orr.w	r5, lr, sl
 8024332:	950c      	str	r5, [sp, #48]	; 0x30
 8024334:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024336:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802433a:	9d08      	ldr	r5, [sp, #32]
 802433c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024340:	fb08 fc0c 	mul.w	ip, r8, ip
 8024344:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024348:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802434c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802434e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024352:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024356:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024358:	fb09 cc0e 	mla	ip, r9, lr, ip
 802435c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024360:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024364:	fb08 f80e 	mul.w	r8, r8, lr
 8024368:	fb01 8202 	mla	r2, r1, r2, r8
 802436c:	9908      	ldr	r1, [sp, #32]
 802436e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024372:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024374:	fb00 220a 	mla	r2, r0, sl, r2
 8024378:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802437c:	fb09 2900 	mla	r9, r9, r0, r2
 8024380:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024384:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024388:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802438c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024390:	ea4c 0c09 	orr.w	ip, ip, r9
 8024394:	2bff      	cmp	r3, #255	; 0xff
 8024396:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802439a:	f040 8091 	bne.w	80244c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802439e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80243a2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80243a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80243aa:	f022 0207 	bic.w	r2, r2, #7
 80243ae:	431a      	orrs	r2, r3
 80243b0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80243b4:	ea4c 0c02 	orr.w	ip, ip, r2
 80243b8:	f8a7 c000 	strh.w	ip, [r7]
 80243bc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80243be:	441c      	add	r4, r3
 80243c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243c2:	441e      	add	r6, r3
 80243c4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80243c6:	3b01      	subs	r3, #1
 80243c8:	3702      	adds	r7, #2
 80243ca:	9317      	str	r3, [sp, #92]	; 0x5c
 80243cc:	e6c0      	b.n	8024150 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80243ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80243d0:	441c      	add	r4, r3
 80243d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243d4:	441e      	add	r6, r3
 80243d6:	9b07      	ldr	r3, [sp, #28]
 80243d8:	3b01      	subs	r3, #1
 80243da:	9307      	str	r3, [sp, #28]
 80243dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80243de:	3302      	adds	r3, #2
 80243e0:	930a      	str	r3, [sp, #40]	; 0x28
 80243e2:	e695      	b.n	8024110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80243e4:	d024      	beq.n	8024430 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80243e6:	9b07      	ldr	r3, [sp, #28]
 80243e8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80243ea:	3b01      	subs	r3, #1
 80243ec:	fb00 4003 	mla	r0, r0, r3, r4
 80243f0:	1400      	asrs	r0, r0, #16
 80243f2:	f53f aeaa 	bmi.w	802414a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80243f6:	3901      	subs	r1, #1
 80243f8:	4288      	cmp	r0, r1
 80243fa:	f6bf aea6 	bge.w	802414a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80243fe:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024400:	fb01 6303 	mla	r3, r1, r3, r6
 8024404:	141b      	asrs	r3, r3, #16
 8024406:	f53f aea0 	bmi.w	802414a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802440a:	3a01      	subs	r2, #1
 802440c:	4293      	cmp	r3, r2
 802440e:	f6bf ae9c 	bge.w	802414a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024412:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024416:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802441a:	f1bb 0f00 	cmp.w	fp, #0
 802441e:	f300 809a 	bgt.w	8024556 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024422:	9b07      	ldr	r3, [sp, #28]
 8024424:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024428:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802442a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802442e:	930a      	str	r3, [sp, #40]	; 0x28
 8024430:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024432:	2b00      	cmp	r3, #0
 8024434:	f340 81eb 	ble.w	802480e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024438:	ee30 0a04 	vadd.f32	s0, s0, s8
 802443c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024440:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024444:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024446:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802444a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802444e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024452:	eef0 6a62 	vmov.f32	s13, s5
 8024456:	ee61 7a27 	vmul.f32	s15, s2, s15
 802445a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802445e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024462:	ee16 4a90 	vmov	r4, s13
 8024466:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802446a:	eef0 6a43 	vmov.f32	s13, s6
 802446e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024472:	ee12 2a90 	vmov	r2, s5
 8024476:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802447a:	fb92 f3f3 	sdiv	r3, r2, r3
 802447e:	ee13 2a10 	vmov	r2, s6
 8024482:	9327      	str	r3, [sp, #156]	; 0x9c
 8024484:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024486:	fb92 f3f3 	sdiv	r3, r2, r3
 802448a:	9328      	str	r3, [sp, #160]	; 0xa0
 802448c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802448e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024490:	3b01      	subs	r3, #1
 8024492:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024496:	9316      	str	r3, [sp, #88]	; 0x58
 8024498:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802449a:	bf08      	it	eq
 802449c:	4613      	moveq	r3, r2
 802449e:	ee16 6a90 	vmov	r6, s13
 80244a2:	9307      	str	r3, [sp, #28]
 80244a4:	eeb0 3a67 	vmov.f32	s6, s15
 80244a8:	eef0 2a47 	vmov.f32	s5, s14
 80244ac:	e622      	b.n	80240f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80244ae:	2800      	cmp	r0, #0
 80244b0:	f43f ae92 	beq.w	80241d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80244b4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80244b8:	9308      	str	r3, [sp, #32]
 80244ba:	0e1b      	lsrs	r3, r3, #24
 80244bc:	9310      	str	r3, [sp, #64]	; 0x40
 80244be:	e68b      	b.n	80241d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80244c0:	8839      	ldrh	r1, [r7, #0]
 80244c2:	4dd4      	ldr	r5, [pc, #848]	; (8024814 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80244c4:	43db      	mvns	r3, r3
 80244c6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80244ca:	fa5f f883 	uxtb.w	r8, r3
 80244ce:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80244d2:	fb0e fe08 	mul.w	lr, lr, r8
 80244d6:	10c8      	asrs	r0, r1, #3
 80244d8:	00cb      	lsls	r3, r1, #3
 80244da:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80244de:	f10e 0101 	add.w	r1, lr, #1
 80244e2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80244e6:	fb00 f008 	mul.w	r0, r0, r8
 80244ea:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80244ee:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80244f2:	f100 0e01 	add.w	lr, r0, #1
 80244f6:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80244fa:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80244fe:	b2db      	uxtb	r3, r3
 8024500:	b2c9      	uxtb	r1, r1
 8024502:	00d2      	lsls	r2, r2, #3
 8024504:	fb03 f308 	mul.w	r3, r3, r8
 8024508:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802450c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024510:	430a      	orrs	r2, r1
 8024512:	1c59      	adds	r1, r3, #1
 8024514:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024518:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802451c:	e748      	b.n	80243b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802451e:	f112 0801 	adds.w	r8, r2, #1
 8024522:	f53f af4b 	bmi.w	80243bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024526:	4543      	cmp	r3, r8
 8024528:	f6ff af48 	blt.w	80243bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802452c:	f11c 0801 	adds.w	r8, ip, #1
 8024530:	f53f af44 	bmi.w	80243bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024534:	45c6      	cmp	lr, r8
 8024536:	f6ff af41 	blt.w	80243bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802453a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802453e:	fa0f f28e 	sxth.w	r2, lr
 8024542:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024546:	9200      	str	r2, [sp, #0]
 8024548:	b21b      	sxth	r3, r3
 802454a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802454c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802454e:	4639      	mov	r1, r7
 8024550:	f7ff fc87 	bl	8023e62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8024554:	e732      	b.n	80243bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024556:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024558:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802455a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802455e:	1421      	asrs	r1, r4, #16
 8024560:	1433      	asrs	r3, r6, #16
 8024562:	fb07 1303 	mla	r3, r7, r3, r1
 8024566:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024568:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802456c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024570:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024574:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024578:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802457c:	2a00      	cmp	r2, #0
 802457e:	f000 8107 	beq.w	8024790 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8024582:	684d      	ldr	r5, [r1, #4]
 8024584:	950d      	str	r5, [sp, #52]	; 0x34
 8024586:	0e2d      	lsrs	r5, r5, #24
 8024588:	9514      	str	r5, [sp, #80]	; 0x50
 802458a:	b178      	cbz	r0, 80245ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802458c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8024590:	3f01      	subs	r7, #1
 8024592:	00bf      	lsls	r7, r7, #2
 8024594:	3704      	adds	r7, #4
 8024596:	eb01 0e07 	add.w	lr, r1, r7
 802459a:	59c9      	ldr	r1, [r1, r7]
 802459c:	9109      	str	r1, [sp, #36]	; 0x24
 802459e:	0e09      	lsrs	r1, r1, #24
 80245a0:	9111      	str	r1, [sp, #68]	; 0x44
 80245a2:	f8de 1004 	ldr.w	r1, [lr, #4]
 80245a6:	910e      	str	r1, [sp, #56]	; 0x38
 80245a8:	0e09      	lsrs	r1, r1, #24
 80245aa:	9115      	str	r1, [sp, #84]	; 0x54
 80245ac:	b292      	uxth	r2, r2
 80245ae:	b280      	uxth	r0, r0
 80245b0:	fb02 f900 	mul.w	r9, r2, r0
 80245b4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80245b8:	0112      	lsls	r2, r2, #4
 80245ba:	eba2 0e09 	sub.w	lr, r2, r9
 80245be:	b280      	uxth	r0, r0
 80245c0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80245c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80245c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245c8:	fa1f fe8e 	uxth.w	lr, lr
 80245cc:	1a09      	subs	r1, r1, r0
 80245ce:	b289      	uxth	r1, r1
 80245d0:	fb0e f202 	mul.w	r2, lr, r2
 80245d4:	fb01 220c 	mla	r2, r1, ip, r2
 80245d8:	fb00 2205 	mla	r2, r0, r5, r2
 80245dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80245de:	fb09 2205 	mla	r2, r9, r5, r2
 80245e2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80245e6:	2a00      	cmp	r2, #0
 80245e8:	f000 80c9 	beq.w	802477e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80245ec:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80245f0:	d019      	beq.n	8024626 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80245f2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80245f6:	fb0c fa0a 	mul.w	sl, ip, sl
 80245fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80245fe:	fb0c fc03 	mul.w	ip, ip, r3
 8024602:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024606:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802460a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802460e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024612:	4453      	add	r3, sl
 8024614:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024618:	0a1b      	lsrs	r3, r3, #8
 802461a:	0a3f      	lsrs	r7, r7, #8
 802461c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024620:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024624:	433b      	orrs	r3, r7
 8024626:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024628:	2dff      	cmp	r5, #255	; 0xff
 802462a:	d020      	beq.n	802466e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802462c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802462e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024632:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024634:	436f      	muls	r7, r5
 8024636:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024638:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802463c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802463e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024642:	fb05 fa0a 	mul.w	sl, r5, sl
 8024646:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802464a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802464e:	44bc      	add	ip, r7
 8024650:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024654:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024658:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802465c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024660:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024664:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024668:	ea4c 050a 	orr.w	r5, ip, sl
 802466c:	950d      	str	r5, [sp, #52]	; 0x34
 802466e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024670:	2dff      	cmp	r5, #255	; 0xff
 8024672:	d020      	beq.n	80246b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024674:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024676:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802467a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802467c:	436f      	muls	r7, r5
 802467e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024680:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024684:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024686:	fb05 fa0c 	mul.w	sl, r5, ip
 802468a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802468e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024692:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024696:	44bc      	add	ip, r7
 8024698:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802469c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80246a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80246a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80246a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80246ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80246b0:	ea4c 050a 	orr.w	r5, ip, sl
 80246b4:	9509      	str	r5, [sp, #36]	; 0x24
 80246b6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80246b8:	2dff      	cmp	r5, #255	; 0xff
 80246ba:	d020      	beq.n	80246fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80246bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80246be:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80246c2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80246c4:	436f      	muls	r7, r5
 80246c6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80246c8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80246cc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80246ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80246d2:	fb05 fa0a 	mul.w	sl, r5, sl
 80246d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80246da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80246de:	44bc      	add	ip, r7
 80246e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80246e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80246e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80246ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80246f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80246f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80246f8:	ea4c 050a 	orr.w	r5, ip, sl
 80246fc:	950e      	str	r5, [sp, #56]	; 0x38
 80246fe:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024700:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024704:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024706:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802470a:	fb0e f707 	mul.w	r7, lr, r7
 802470e:	fb01 770c 	mla	r7, r1, ip, r7
 8024712:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024716:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024718:	fb00 770c 	mla	r7, r0, ip, r7
 802471c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024720:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024722:	fb09 770c 	mla	r7, r9, ip, r7
 8024726:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802472a:	fb0e fe0c 	mul.w	lr, lr, ip
 802472e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024732:	fb01 e303 	mla	r3, r1, r3, lr
 8024736:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024738:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802473c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802473e:	fb00 330a 	mla	r3, r0, sl, r3
 8024742:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024746:	fb09 3c0c 	mla	ip, r9, ip, r3
 802474a:	0a3f      	lsrs	r7, r7, #8
 802474c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024750:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024754:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024758:	ea47 070c 	orr.w	r7, r7, ip
 802475c:	2aff      	cmp	r2, #255	; 0xff
 802475e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8024762:	d11e      	bne.n	80247a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024764:	097a      	lsrs	r2, r7, #5
 8024766:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802476a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802476e:	f023 0307 	bic.w	r3, r3, #7
 8024772:	4313      	orrs	r3, r2
 8024774:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024778:	431f      	orrs	r7, r3
 802477a:	f8a8 7000 	strh.w	r7, [r8]
 802477e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024780:	441c      	add	r4, r3
 8024782:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024784:	f108 0802 	add.w	r8, r8, #2
 8024788:	441e      	add	r6, r3
 802478a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802478e:	e644      	b.n	802441a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8024790:	2800      	cmp	r0, #0
 8024792:	f43f af0b 	beq.w	80245ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024796:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802479a:	9109      	str	r1, [sp, #36]	; 0x24
 802479c:	0e09      	lsrs	r1, r1, #24
 802479e:	9111      	str	r1, [sp, #68]	; 0x44
 80247a0:	e704      	b.n	80245ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80247a2:	f8b8 1000 	ldrh.w	r1, [r8]
 80247a6:	43d2      	mvns	r2, r2
 80247a8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80247ac:	fa5f fe82 	uxtb.w	lr, r2
 80247b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80247b4:	fb0c fc0e 	mul.w	ip, ip, lr
 80247b8:	10c8      	asrs	r0, r1, #3
 80247ba:	00ca      	lsls	r2, r1, #3
 80247bc:	f10c 0101 	add.w	r1, ip, #1
 80247c0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80247c4:	0c39      	lsrs	r1, r7, #16
 80247c6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80247ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80247ce:	4911      	ldr	r1, [pc, #68]	; (8024814 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80247d0:	fb00 f00e 	mul.w	r0, r0, lr
 80247d4:	fa5f fc8c 	uxtb.w	ip, ip
 80247d8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80247dc:	b2d2      	uxtb	r2, r2
 80247de:	1c41      	adds	r1, r0, #1
 80247e0:	fb02 f20e 	mul.w	r2, r2, lr
 80247e4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80247e8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80247ec:	1c51      	adds	r1, r2, #1
 80247ee:	00c0      	lsls	r0, r0, #3
 80247f0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80247f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80247f8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80247fc:	ea4c 0c00 	orr.w	ip, ip, r0
 8024800:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024804:	ea47 0c0c 	orr.w	ip, r7, ip
 8024808:	f8a8 c000 	strh.w	ip, [r8]
 802480c:	e7b7      	b.n	802477e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802480e:	b01b      	add	sp, #108	; 0x6c
 8024810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024814:	fffff800 	.word	0xfffff800

08024818 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024818:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802481c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024820:	2d00      	cmp	r5, #0
 8024822:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024826:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802482a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802482e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024832:	fb05 0e03 	mla	lr, r5, r3, r0
 8024836:	f2c0 808c 	blt.w	8024952 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802483a:	45a9      	cmp	r9, r5
 802483c:	f340 8089 	ble.w	8024952 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024840:	2800      	cmp	r0, #0
 8024842:	f2c0 8084 	blt.w	802494e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024846:	4580      	cmp	r8, r0
 8024848:	f340 8081 	ble.w	802494e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802484c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024850:	f01e 0f01 	tst.w	lr, #1
 8024854:	5d16      	ldrb	r6, [r2, r4]
 8024856:	bf0c      	ite	eq
 8024858:	f006 060f 	andeq.w	r6, r6, #15
 802485c:	1136      	asrne	r6, r6, #4
 802485e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024862:	b2f6      	uxtb	r6, r6
 8024864:	1c44      	adds	r4, r0, #1
 8024866:	d477      	bmi.n	8024958 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024868:	45a0      	cmp	r8, r4
 802486a:	dd75      	ble.n	8024958 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802486c:	2f00      	cmp	r7, #0
 802486e:	d075      	beq.n	802495c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024870:	f10e 0a01 	add.w	sl, lr, #1
 8024874:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024878:	f01a 0f01 	tst.w	sl, #1
 802487c:	5d14      	ldrb	r4, [r2, r4]
 802487e:	bf0c      	ite	eq
 8024880:	f004 040f 	andeq.w	r4, r4, #15
 8024884:	1124      	asrne	r4, r4, #4
 8024886:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802488a:	b2e4      	uxtb	r4, r4
 802488c:	3501      	adds	r5, #1
 802488e:	d469      	bmi.n	8024964 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024890:	45a9      	cmp	r9, r5
 8024892:	dd67      	ble.n	8024964 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024894:	f1bc 0f00 	cmp.w	ip, #0
 8024898:	d067      	beq.n	802496a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802489a:	2800      	cmp	r0, #0
 802489c:	db60      	blt.n	8024960 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802489e:	4580      	cmp	r8, r0
 80248a0:	dd5e      	ble.n	8024960 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80248a2:	eb03 090e 	add.w	r9, r3, lr
 80248a6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80248aa:	f019 0f01 	tst.w	r9, #1
 80248ae:	5d55      	ldrb	r5, [r2, r5]
 80248b0:	bf0c      	ite	eq
 80248b2:	f005 050f 	andeq.w	r5, r5, #15
 80248b6:	112d      	asrne	r5, r5, #4
 80248b8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80248bc:	b2ed      	uxtb	r5, r5
 80248be:	3001      	adds	r0, #1
 80248c0:	d456      	bmi.n	8024970 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80248c2:	4580      	cmp	r8, r0
 80248c4:	dd54      	ble.n	8024970 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80248c6:	2f00      	cmp	r7, #0
 80248c8:	d054      	beq.n	8024974 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80248ca:	3301      	adds	r3, #1
 80248cc:	449e      	add	lr, r3
 80248ce:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80248d2:	f01e 0f01 	tst.w	lr, #1
 80248d6:	5cd0      	ldrb	r0, [r2, r3]
 80248d8:	bf0c      	ite	eq
 80248da:	f000 000f 	andeq.w	r0, r0, #15
 80248de:	1100      	asrne	r0, r0, #4
 80248e0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80248e4:	b2c3      	uxtb	r3, r0
 80248e6:	b2ba      	uxth	r2, r7
 80248e8:	fa1f fc8c 	uxth.w	ip, ip
 80248ec:	fb02 f00c 	mul.w	r0, r2, ip
 80248f0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80248f4:	0112      	lsls	r2, r2, #4
 80248f6:	fa1f fc8c 	uxth.w	ip, ip
 80248fa:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80248fe:	1a12      	subs	r2, r2, r0
 8024900:	eba7 070c 	sub.w	r7, r7, ip
 8024904:	b292      	uxth	r2, r2
 8024906:	b2bf      	uxth	r7, r7
 8024908:	4362      	muls	r2, r4
 802490a:	fb06 2207 	mla	r2, r6, r7, r2
 802490e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024912:	fb00 5303 	mla	r3, r0, r3, r5
 8024916:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802491a:	b1b3      	cbz	r3, 802494a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802491c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024920:	435a      	muls	r2, r3
 8024922:	1c53      	adds	r3, r2, #1
 8024924:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024928:	4a2d      	ldr	r2, [pc, #180]	; (80249e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802492a:	121b      	asrs	r3, r3, #8
 802492c:	6812      	ldr	r2, [r2, #0]
 802492e:	2bff      	cmp	r3, #255	; 0xff
 8024930:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024934:	d120      	bne.n	8024978 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024936:	4b2b      	ldr	r3, [pc, #172]	; (80249e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024938:	0950      	lsrs	r0, r2, #5
 802493a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802493e:	4033      	ands	r3, r6
 8024940:	4318      	orrs	r0, r3
 8024942:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024946:	4302      	orrs	r2, r0
 8024948:	800a      	strh	r2, [r1, #0]
 802494a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802494e:	2600      	movs	r6, #0
 8024950:	e788      	b.n	8024864 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8024952:	2400      	movs	r4, #0
 8024954:	4626      	mov	r6, r4
 8024956:	e799      	b.n	802488c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024958:	2400      	movs	r4, #0
 802495a:	e797      	b.n	802488c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802495c:	463c      	mov	r4, r7
 802495e:	e795      	b.n	802488c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024960:	2500      	movs	r5, #0
 8024962:	e7ac      	b.n	80248be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024964:	2300      	movs	r3, #0
 8024966:	461d      	mov	r5, r3
 8024968:	e7bd      	b.n	80248e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802496a:	4663      	mov	r3, ip
 802496c:	4665      	mov	r5, ip
 802496e:	e7ba      	b.n	80248e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024970:	2300      	movs	r3, #0
 8024972:	e7b8      	b.n	80248e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024974:	463b      	mov	r3, r7
 8024976:	e7b6      	b.n	80248e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024978:	880d      	ldrh	r5, [r1, #0]
 802497a:	b29f      	uxth	r7, r3
 802497c:	122c      	asrs	r4, r5, #8
 802497e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024982:	43db      	mvns	r3, r3
 8024984:	b2db      	uxtb	r3, r3
 8024986:	fb10 f007 	smulbb	r0, r0, r7
 802498a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802498e:	fb04 0403 	mla	r4, r4, r3, r0
 8024992:	b2f6      	uxtb	r6, r6
 8024994:	10e8      	asrs	r0, r5, #3
 8024996:	b2d2      	uxtb	r2, r2
 8024998:	00ed      	lsls	r5, r5, #3
 802499a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802499e:	fb12 f207 	smulbb	r2, r2, r7
 80249a2:	fb16 f607 	smulbb	r6, r6, r7
 80249a6:	b2ed      	uxtb	r5, r5
 80249a8:	b2a4      	uxth	r4, r4
 80249aa:	fb00 6603 	mla	r6, r0, r3, r6
 80249ae:	fb05 2303 	mla	r3, r5, r3, r2
 80249b2:	b29a      	uxth	r2, r3
 80249b4:	1c63      	adds	r3, r4, #1
 80249b6:	b2b0      	uxth	r0, r6
 80249b8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80249bc:	1c53      	adds	r3, r2, #1
 80249be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80249c2:	1c42      	adds	r2, r0, #1
 80249c4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80249c8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80249cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80249d0:	0940      	lsrs	r0, r0, #5
 80249d2:	4323      	orrs	r3, r4
 80249d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80249d8:	4303      	orrs	r3, r0
 80249da:	800b      	strh	r3, [r1, #0]
 80249dc:	e7b5      	b.n	802494a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80249de:	bf00      	nop
 80249e0:	20012e8c 	.word	0x20012e8c
 80249e4:	00fff800 	.word	0x00fff800

080249e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80249e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80249ec:	b097      	sub	sp, #92	; 0x5c
 80249ee:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80249f2:	9214      	str	r2, [sp, #80]	; 0x50
 80249f4:	9309      	str	r3, [sp, #36]	; 0x24
 80249f6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80249f8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80249fc:	910d      	str	r1, [sp, #52]	; 0x34
 80249fe:	930f      	str	r3, [sp, #60]	; 0x3c
 8024a00:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8024a04:	9015      	str	r0, [sp, #84]	; 0x54
 8024a06:	6850      	ldr	r0, [r2, #4]
 8024a08:	6812      	ldr	r2, [r2, #0]
 8024a0a:	fb00 1303 	mla	r3, r0, r3, r1
 8024a0e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024a12:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024a14:	689b      	ldr	r3, [r3, #8]
 8024a16:	3301      	adds	r3, #1
 8024a18:	f023 0301 	bic.w	r3, r3, #1
 8024a1c:	930a      	str	r3, [sp, #40]	; 0x28
 8024a1e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024a20:	681f      	ldr	r7, [r3, #0]
 8024a22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024a24:	2b00      	cmp	r3, #0
 8024a26:	dc03      	bgt.n	8024a30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024a28:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024a2a:	2b00      	cmp	r3, #0
 8024a2c:	f340 8287 	ble.w	8024f3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024a30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024a32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024a3a:	1e48      	subs	r0, r1, #1
 8024a3c:	f102 3cff 	add.w	ip, r2, #4294967295
 8024a40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a42:	2b00      	cmp	r3, #0
 8024a44:	f340 80c4 	ble.w	8024bd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024a48:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024a4c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024a50:	d406      	bmi.n	8024a60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024a52:	4586      	cmp	lr, r0
 8024a54:	da04      	bge.n	8024a60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024a56:	2b00      	cmp	r3, #0
 8024a58:	db02      	blt.n	8024a60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024a5a:	4563      	cmp	r3, ip
 8024a5c:	f2c0 80b9 	blt.w	8024bd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024a60:	f11e 0e01 	adds.w	lr, lr, #1
 8024a64:	f100 80aa 	bmi.w	8024bbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024a68:	4571      	cmp	r1, lr
 8024a6a:	f2c0 80a7 	blt.w	8024bbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024a6e:	3301      	adds	r3, #1
 8024a70:	f100 80a4 	bmi.w	8024bbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024a74:	429a      	cmp	r2, r3
 8024a76:	f2c0 80a1 	blt.w	8024bbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024a7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a7c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024a80:	930e      	str	r3, [sp, #56]	; 0x38
 8024a82:	46c8      	mov	r8, r9
 8024a84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024a86:	2b00      	cmp	r3, #0
 8024a88:	f340 80c3 	ble.w	8024c12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024a8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024a8e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024a92:	1423      	asrs	r3, r4, #16
 8024a94:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024a98:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024a9c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024aa0:	f100 814d 	bmi.w	8024d3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024aa4:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024aa8:	455b      	cmp	r3, fp
 8024aaa:	f280 8148 	bge.w	8024d3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024aae:	2800      	cmp	r0, #0
 8024ab0:	f2c0 8145 	blt.w	8024d3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024ab4:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024ab8:	4558      	cmp	r0, fp
 8024aba:	f280 8140 	bge.w	8024d3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024abe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024ac0:	fb00 3305 	mla	r3, r0, r5, r3
 8024ac4:	0858      	lsrs	r0, r3, #1
 8024ac6:	07dd      	lsls	r5, r3, #31
 8024ac8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024acc:	bf54      	ite	pl
 8024ace:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ad2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ad6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ada:	fa5f fc8c 	uxtb.w	ip, ip
 8024ade:	2a00      	cmp	r2, #0
 8024ae0:	f000 80db 	beq.w	8024c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024ae4:	1c58      	adds	r0, r3, #1
 8024ae6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024aea:	07c0      	lsls	r0, r0, #31
 8024aec:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024af0:	bf54      	ite	pl
 8024af2:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024af6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024afa:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024afe:	fa5f f08e 	uxtb.w	r0, lr
 8024b02:	9010      	str	r0, [sp, #64]	; 0x40
 8024b04:	b1c9      	cbz	r1, 8024b3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024b06:	4453      	add	r3, sl
 8024b08:	0858      	lsrs	r0, r3, #1
 8024b0a:	07dd      	lsls	r5, r3, #31
 8024b0c:	5c38      	ldrb	r0, [r7, r0]
 8024b0e:	bf54      	ite	pl
 8024b10:	f000 000f 	andpl.w	r0, r0, #15
 8024b14:	1100      	asrmi	r0, r0, #4
 8024b16:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024b1a:	3301      	adds	r3, #1
 8024b1c:	b2c0      	uxtb	r0, r0
 8024b1e:	900b      	str	r0, [sp, #44]	; 0x2c
 8024b20:	0858      	lsrs	r0, r3, #1
 8024b22:	07dd      	lsls	r5, r3, #31
 8024b24:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024b28:	bf54      	ite	pl
 8024b2a:	f00e 030f 	andpl.w	r3, lr, #15
 8024b2e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024b32:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024b36:	b2db      	uxtb	r3, r3
 8024b38:	9311      	str	r3, [sp, #68]	; 0x44
 8024b3a:	b292      	uxth	r2, r2
 8024b3c:	b289      	uxth	r1, r1
 8024b3e:	fb02 f301 	mul.w	r3, r2, r1
 8024b42:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024b46:	0112      	lsls	r2, r2, #4
 8024b48:	b289      	uxth	r1, r1
 8024b4a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024b4e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024b50:	1ad2      	subs	r2, r2, r3
 8024b52:	1a40      	subs	r0, r0, r1
 8024b54:	b292      	uxth	r2, r2
 8024b56:	436a      	muls	r2, r5
 8024b58:	b280      	uxth	r0, r0
 8024b5a:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024b5e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024b60:	fb01 c102 	mla	r1, r1, r2, ip
 8024b64:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024b66:	fb03 1302 	mla	r3, r3, r2, r1
 8024b6a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024b6e:	b1db      	cbz	r3, 8024ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024b70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024b72:	4353      	muls	r3, r2
 8024b74:	1c5a      	adds	r2, r3, #1
 8024b76:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024b7a:	4ac6      	ldr	r2, [pc, #792]	; (8024e94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024b7c:	121b      	asrs	r3, r3, #8
 8024b7e:	6812      	ldr	r2, [r2, #0]
 8024b80:	2bff      	cmp	r3, #255	; 0xff
 8024b82:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024b86:	f040 8099 	bne.w	8024cbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024b8a:	0953      	lsrs	r3, r2, #5
 8024b8c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024b90:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024b94:	f02c 0c07 	bic.w	ip, ip, #7
 8024b98:	ea43 0c0c 	orr.w	ip, r3, ip
 8024b9c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024ba0:	ea4c 0202 	orr.w	r2, ip, r2
 8024ba4:	f8a8 2000 	strh.w	r2, [r8]
 8024ba8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024baa:	441c      	add	r4, r3
 8024bac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024bae:	441e      	add	r6, r3
 8024bb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024bb2:	3b01      	subs	r3, #1
 8024bb4:	f108 0802 	add.w	r8, r8, #2
 8024bb8:	930e      	str	r3, [sp, #56]	; 0x38
 8024bba:	e763      	b.n	8024a84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024bbc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024bbe:	441c      	add	r4, r3
 8024bc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024bc2:	441e      	add	r6, r3
 8024bc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024bc6:	3b01      	subs	r3, #1
 8024bc8:	9309      	str	r3, [sp, #36]	; 0x24
 8024bca:	f109 0902 	add.w	r9, r9, #2
 8024bce:	e737      	b.n	8024a40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024bd0:	d024      	beq.n	8024c1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8024bd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024bd4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8024bd6:	3b01      	subs	r3, #1
 8024bd8:	fb00 4003 	mla	r0, r0, r3, r4
 8024bdc:	1400      	asrs	r0, r0, #16
 8024bde:	f53f af4c 	bmi.w	8024a7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024be2:	3901      	subs	r1, #1
 8024be4:	4288      	cmp	r0, r1
 8024be6:	f6bf af48 	bge.w	8024a7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024bea:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024bec:	fb01 6303 	mla	r3, r1, r3, r6
 8024bf0:	141b      	asrs	r3, r3, #16
 8024bf2:	f53f af42 	bmi.w	8024a7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024bf6:	3a01      	subs	r2, #1
 8024bf8:	4293      	cmp	r3, r2
 8024bfa:	f6bf af3e 	bge.w	8024a7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024bfe:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024c02:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024c06:	930e      	str	r3, [sp, #56]	; 0x38
 8024c08:	46c8      	mov	r8, r9
 8024c0a:	f1bb 0f00 	cmp.w	fp, #0
 8024c0e:	f300 80b7 	bgt.w	8024d80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8024c12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024c14:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024c18:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024c1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024c1e:	2b00      	cmp	r3, #0
 8024c20:	f340 818d 	ble.w	8024f3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024c24:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024c28:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024c2c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024c32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c36:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c3e:	eef0 6a62 	vmov.f32	s13, s5
 8024c42:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024c46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024c4e:	ee16 4a90 	vmov	r4, s13
 8024c52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024c56:	eef0 6a43 	vmov.f32	s13, s6
 8024c5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024c5e:	ee12 2a90 	vmov	r2, s5
 8024c62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024c66:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c6a:	ee13 2a10 	vmov	r2, s6
 8024c6e:	9323      	str	r3, [sp, #140]	; 0x8c
 8024c70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024c72:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c76:	9324      	str	r3, [sp, #144]	; 0x90
 8024c78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024c7a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024c7c:	3b01      	subs	r3, #1
 8024c7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c82:	930d      	str	r3, [sp, #52]	; 0x34
 8024c84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024c86:	bf08      	it	eq
 8024c88:	4613      	moveq	r3, r2
 8024c8a:	ee16 6a90 	vmov	r6, s13
 8024c8e:	9309      	str	r3, [sp, #36]	; 0x24
 8024c90:	eeb0 3a67 	vmov.f32	s6, s15
 8024c94:	eef0 2a47 	vmov.f32	s5, s14
 8024c98:	e6c3      	b.n	8024a22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024c9a:	2900      	cmp	r1, #0
 8024c9c:	f43f af4d 	beq.w	8024b3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024ca0:	eb0a 0003 	add.w	r0, sl, r3
 8024ca4:	0843      	lsrs	r3, r0, #1
 8024ca6:	07c0      	lsls	r0, r0, #31
 8024ca8:	5cfb      	ldrb	r3, [r7, r3]
 8024caa:	bf54      	ite	pl
 8024cac:	f003 030f 	andpl.w	r3, r3, #15
 8024cb0:	111b      	asrmi	r3, r3, #4
 8024cb2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024cb6:	b2db      	uxtb	r3, r3
 8024cb8:	930b      	str	r3, [sp, #44]	; 0x2c
 8024cba:	e73e      	b.n	8024b3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024cbc:	f8b8 e000 	ldrh.w	lr, [r8]
 8024cc0:	fa1f fb83 	uxth.w	fp, r3
 8024cc4:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024cc8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024ccc:	43db      	mvns	r3, r3
 8024cce:	b2db      	uxtb	r3, r3
 8024cd0:	fb11 f10b 	smulbb	r1, r1, fp
 8024cd4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024cd8:	fb00 1003 	mla	r0, r0, r3, r1
 8024cdc:	fa5f fc8c 	uxtb.w	ip, ip
 8024ce0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024ce4:	b2d2      	uxtb	r2, r2
 8024ce6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024cea:	b280      	uxth	r0, r0
 8024cec:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024cf0:	fb1c fc0b 	smulbb	ip, ip, fp
 8024cf4:	fa5f fe8e 	uxtb.w	lr, lr
 8024cf8:	fb12 fb0b 	smulbb	fp, r2, fp
 8024cfc:	fb01 cc03 	mla	ip, r1, r3, ip
 8024d00:	fb0e bb03 	mla	fp, lr, r3, fp
 8024d04:	1c43      	adds	r3, r0, #1
 8024d06:	fa1f fc8c 	uxth.w	ip, ip
 8024d0a:	fa1f fb8b 	uxth.w	fp, fp
 8024d0e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024d12:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024d16:	f10c 0101 	add.w	r1, ip, #1
 8024d1a:	f10b 0001 	add.w	r0, fp, #1
 8024d1e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024d22:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024d26:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024d2a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024d2e:	4318      	orrs	r0, r3
 8024d30:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024d34:	ea40 000c 	orr.w	r0, r0, ip
 8024d38:	f8a8 0000 	strh.w	r0, [r8]
 8024d3c:	e734      	b.n	8024ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024d3e:	f113 0b01 	adds.w	fp, r3, #1
 8024d42:	f53f af31 	bmi.w	8024ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024d46:	45dc      	cmp	ip, fp
 8024d48:	f6ff af2e 	blt.w	8024ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024d4c:	f110 0b01 	adds.w	fp, r0, #1
 8024d50:	f53f af2a 	bmi.w	8024ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024d54:	45de      	cmp	lr, fp
 8024d56:	f6ff af27 	blt.w	8024ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024d5a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024d5c:	9302      	str	r3, [sp, #8]
 8024d5e:	fa0f f38e 	sxth.w	r3, lr
 8024d62:	9301      	str	r3, [sp, #4]
 8024d64:	fa0f f38c 	sxth.w	r3, ip
 8024d68:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024d6c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024d70:	9300      	str	r3, [sp, #0]
 8024d72:	463a      	mov	r2, r7
 8024d74:	4653      	mov	r3, sl
 8024d76:	4641      	mov	r1, r8
 8024d78:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024d7a:	f7ff fd4d 	bl	8024818 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024d7e:	e713      	b.n	8024ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024d80:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024d82:	1422      	asrs	r2, r4, #16
 8024d84:	1433      	asrs	r3, r6, #16
 8024d86:	fb05 2303 	mla	r3, r5, r3, r2
 8024d8a:	085a      	lsrs	r2, r3, #1
 8024d8c:	07dd      	lsls	r5, r3, #31
 8024d8e:	5cba      	ldrb	r2, [r7, r2]
 8024d90:	bf54      	ite	pl
 8024d92:	f002 020f 	andpl.w	r2, r2, #15
 8024d96:	1112      	asrmi	r2, r2, #4
 8024d98:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024d9c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024da0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024da4:	b2d2      	uxtb	r2, r2
 8024da6:	2900      	cmp	r1, #0
 8024da8:	d076      	beq.n	8024e98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024daa:	f103 0e01 	add.w	lr, r3, #1
 8024dae:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024db2:	f01e 0f01 	tst.w	lr, #1
 8024db6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024dba:	bf0c      	ite	eq
 8024dbc:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024dc0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024dc4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024dc8:	fa5f f58c 	uxtb.w	r5, ip
 8024dcc:	9512      	str	r5, [sp, #72]	; 0x48
 8024dce:	b300      	cbz	r0, 8024e12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024dd0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024dd2:	442b      	add	r3, r5
 8024dd4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024dd8:	07dd      	lsls	r5, r3, #31
 8024dda:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024dde:	bf54      	ite	pl
 8024de0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024de4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024de8:	3301      	adds	r3, #1
 8024dea:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024dee:	fa5f f58c 	uxtb.w	r5, ip
 8024df2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024df6:	950c      	str	r5, [sp, #48]	; 0x30
 8024df8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024dfc:	07dd      	lsls	r5, r3, #31
 8024dfe:	bf54      	ite	pl
 8024e00:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024e04:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024e08:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024e0c:	fa5f f38c 	uxtb.w	r3, ip
 8024e10:	9313      	str	r3, [sp, #76]	; 0x4c
 8024e12:	b289      	uxth	r1, r1
 8024e14:	b280      	uxth	r0, r0
 8024e16:	fb01 f300 	mul.w	r3, r1, r0
 8024e1a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024e1e:	0109      	lsls	r1, r1, #4
 8024e20:	b280      	uxth	r0, r0
 8024e22:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024e26:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024e28:	1ac9      	subs	r1, r1, r3
 8024e2a:	ebac 0c00 	sub.w	ip, ip, r0
 8024e2e:	b289      	uxth	r1, r1
 8024e30:	4369      	muls	r1, r5
 8024e32:	fa1f fc8c 	uxth.w	ip, ip
 8024e36:	fb02 120c 	mla	r2, r2, ip, r1
 8024e3a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024e3c:	fb00 2001 	mla	r0, r0, r1, r2
 8024e40:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024e42:	fb03 0302 	mla	r3, r3, r2, r0
 8024e46:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024e4a:	b1d3      	cbz	r3, 8024e82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024e4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024e4e:	4353      	muls	r3, r2
 8024e50:	1c5a      	adds	r2, r3, #1
 8024e52:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024e56:	4a0f      	ldr	r2, [pc, #60]	; (8024e94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024e58:	121b      	asrs	r3, r3, #8
 8024e5a:	6812      	ldr	r2, [r2, #0]
 8024e5c:	2bff      	cmp	r3, #255	; 0xff
 8024e5e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024e62:	d12d      	bne.n	8024ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024e64:	0953      	lsrs	r3, r2, #5
 8024e66:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024e6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024e6e:	f02c 0c07 	bic.w	ip, ip, #7
 8024e72:	ea43 0c0c 	orr.w	ip, r3, ip
 8024e76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024e7a:	ea4c 0202 	orr.w	r2, ip, r2
 8024e7e:	f8a8 2000 	strh.w	r2, [r8]
 8024e82:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024e84:	441c      	add	r4, r3
 8024e86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e88:	f108 0802 	add.w	r8, r8, #2
 8024e8c:	441e      	add	r6, r3
 8024e8e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024e92:	e6ba      	b.n	8024c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024e94:	20012e8c 	.word	0x20012e8c
 8024e98:	2800      	cmp	r0, #0
 8024e9a:	d0ba      	beq.n	8024e12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024e9c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024e9e:	442b      	add	r3, r5
 8024ea0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024ea4:	07db      	lsls	r3, r3, #31
 8024ea6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024eaa:	bf54      	ite	pl
 8024eac:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024eb0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024eb4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024eb8:	fa5f f38c 	uxtb.w	r3, ip
 8024ebc:	930c      	str	r3, [sp, #48]	; 0x30
 8024ebe:	e7a8      	b.n	8024e12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024ec0:	f8b8 e000 	ldrh.w	lr, [r8]
 8024ec4:	fa1f fa83 	uxth.w	sl, r3
 8024ec8:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024ecc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024ed0:	43db      	mvns	r3, r3
 8024ed2:	b2db      	uxtb	r3, r3
 8024ed4:	fb11 f10a 	smulbb	r1, r1, sl
 8024ed8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024edc:	fb00 1003 	mla	r0, r0, r3, r1
 8024ee0:	b2d2      	uxtb	r2, r2
 8024ee2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024ee6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024eea:	fa5f fe8e 	uxtb.w	lr, lr
 8024eee:	fb12 f20a 	smulbb	r2, r2, sl
 8024ef2:	fb0e 2203 	mla	r2, lr, r3, r2
 8024ef6:	fa5f fc8c 	uxtb.w	ip, ip
 8024efa:	b280      	uxth	r0, r0
 8024efc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024f00:	b292      	uxth	r2, r2
 8024f02:	fb1c fc0a 	smulbb	ip, ip, sl
 8024f06:	fb01 cc03 	mla	ip, r1, r3, ip
 8024f0a:	1c43      	adds	r3, r0, #1
 8024f0c:	1c51      	adds	r1, r2, #1
 8024f0e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024f12:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024f16:	fa1f fc8c 	uxth.w	ip, ip
 8024f1a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024f1e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024f22:	4308      	orrs	r0, r1
 8024f24:	f10c 0101 	add.w	r1, ip, #1
 8024f28:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024f2c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024f30:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024f34:	ea40 000c 	orr.w	r0, r0, ip
 8024f38:	f8a8 0000 	strh.w	r0, [r8]
 8024f3c:	e7a1      	b.n	8024e82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024f3e:	b017      	add	sp, #92	; 0x5c
 8024f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024f44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024f44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024f48:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024f4c:	2d00      	cmp	r5, #0
 8024f4e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024f52:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024f56:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024f5a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024f5e:	fb05 0e03 	mla	lr, r5, r3, r0
 8024f62:	f2c0 80b0 	blt.w	80250c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024f66:	45a9      	cmp	r9, r5
 8024f68:	f340 80ad 	ble.w	80250c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024f6c:	2800      	cmp	r0, #0
 8024f6e:	f2c0 80a8 	blt.w	80250c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024f72:	4580      	cmp	r8, r0
 8024f74:	f340 80a5 	ble.w	80250c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024f78:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024f7c:	f01e 0f01 	tst.w	lr, #1
 8024f80:	5d16      	ldrb	r6, [r2, r4]
 8024f82:	bf0c      	ite	eq
 8024f84:	f006 060f 	andeq.w	r6, r6, #15
 8024f88:	1136      	asrne	r6, r6, #4
 8024f8a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024f8e:	b2f6      	uxtb	r6, r6
 8024f90:	1c44      	adds	r4, r0, #1
 8024f92:	f100 809b 	bmi.w	80250cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024f96:	45a0      	cmp	r8, r4
 8024f98:	f340 8098 	ble.w	80250cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024f9c:	2f00      	cmp	r7, #0
 8024f9e:	f000 8097 	beq.w	80250d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024fa2:	f10e 0a01 	add.w	sl, lr, #1
 8024fa6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024faa:	f01a 0f01 	tst.w	sl, #1
 8024fae:	5d14      	ldrb	r4, [r2, r4]
 8024fb0:	bf0c      	ite	eq
 8024fb2:	f004 040f 	andeq.w	r4, r4, #15
 8024fb6:	1124      	asrne	r4, r4, #4
 8024fb8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024fbc:	b2e4      	uxtb	r4, r4
 8024fbe:	3501      	adds	r5, #1
 8024fc0:	f100 808a 	bmi.w	80250d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024fc4:	45a9      	cmp	r9, r5
 8024fc6:	f340 8087 	ble.w	80250d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024fca:	f1bc 0f00 	cmp.w	ip, #0
 8024fce:	f000 8086 	beq.w	80250de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024fd2:	2800      	cmp	r0, #0
 8024fd4:	db7e      	blt.n	80250d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024fd6:	4580      	cmp	r8, r0
 8024fd8:	dd7c      	ble.n	80250d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024fda:	eb03 090e 	add.w	r9, r3, lr
 8024fde:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024fe2:	f019 0f01 	tst.w	r9, #1
 8024fe6:	5d55      	ldrb	r5, [r2, r5]
 8024fe8:	bf0c      	ite	eq
 8024fea:	f005 050f 	andeq.w	r5, r5, #15
 8024fee:	112d      	asrne	r5, r5, #4
 8024ff0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024ff4:	b2ed      	uxtb	r5, r5
 8024ff6:	3001      	adds	r0, #1
 8024ff8:	d474      	bmi.n	80250e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024ffa:	4580      	cmp	r8, r0
 8024ffc:	dd72      	ble.n	80250e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024ffe:	2f00      	cmp	r7, #0
 8025000:	d072      	beq.n	80250e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025002:	3301      	adds	r3, #1
 8025004:	449e      	add	lr, r3
 8025006:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802500a:	f01e 0f01 	tst.w	lr, #1
 802500e:	5cd0      	ldrb	r0, [r2, r3]
 8025010:	bf0c      	ite	eq
 8025012:	f000 000f 	andeq.w	r0, r0, #15
 8025016:	1100      	asrne	r0, r0, #4
 8025018:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802501c:	b2c3      	uxtb	r3, r0
 802501e:	b2ba      	uxth	r2, r7
 8025020:	fa1f fc8c 	uxth.w	ip, ip
 8025024:	fb02 f00c 	mul.w	r0, r2, ip
 8025028:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802502c:	0112      	lsls	r2, r2, #4
 802502e:	fa1f fc8c 	uxth.w	ip, ip
 8025032:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025036:	1a12      	subs	r2, r2, r0
 8025038:	eba7 070c 	sub.w	r7, r7, ip
 802503c:	b292      	uxth	r2, r2
 802503e:	b2bf      	uxth	r7, r7
 8025040:	4362      	muls	r2, r4
 8025042:	fb06 2207 	mla	r2, r6, r7, r2
 8025046:	fb0c 2505 	mla	r5, ip, r5, r2
 802504a:	fb00 5303 	mla	r3, r0, r3, r5
 802504e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025052:	b3a3      	cbz	r3, 80250be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025054:	4a25      	ldr	r2, [pc, #148]	; (80250ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025056:	880e      	ldrh	r6, [r1, #0]
 8025058:	6815      	ldr	r5, [r2, #0]
 802505a:	1234      	asrs	r4, r6, #8
 802505c:	b29a      	uxth	r2, r3
 802505e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025062:	43db      	mvns	r3, r3
 8025064:	b2db      	uxtb	r3, r3
 8025066:	fb10 f002 	smulbb	r0, r0, r2
 802506a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802506e:	fb04 0403 	mla	r4, r4, r3, r0
 8025072:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025076:	10f0      	asrs	r0, r6, #3
 8025078:	b2ed      	uxtb	r5, r5
 802507a:	00f6      	lsls	r6, r6, #3
 802507c:	fb17 f702 	smulbb	r7, r7, r2
 8025080:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025084:	fb15 f202 	smulbb	r2, r5, r2
 8025088:	b2f6      	uxtb	r6, r6
 802508a:	b2a4      	uxth	r4, r4
 802508c:	fb00 7003 	mla	r0, r0, r3, r7
 8025090:	fb06 2303 	mla	r3, r6, r3, r2
 8025094:	b29a      	uxth	r2, r3
 8025096:	1c63      	adds	r3, r4, #1
 8025098:	b280      	uxth	r0, r0
 802509a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802509e:	1c53      	adds	r3, r2, #1
 80250a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80250a4:	1c42      	adds	r2, r0, #1
 80250a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80250aa:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80250ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80250b2:	0940      	lsrs	r0, r0, #5
 80250b4:	4323      	orrs	r3, r4
 80250b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80250ba:	4303      	orrs	r3, r0
 80250bc:	800b      	strh	r3, [r1, #0]
 80250be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80250c2:	2600      	movs	r6, #0
 80250c4:	e764      	b.n	8024f90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80250c6:	2400      	movs	r4, #0
 80250c8:	4626      	mov	r6, r4
 80250ca:	e778      	b.n	8024fbe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80250cc:	2400      	movs	r4, #0
 80250ce:	e776      	b.n	8024fbe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80250d0:	463c      	mov	r4, r7
 80250d2:	e774      	b.n	8024fbe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80250d4:	2500      	movs	r5, #0
 80250d6:	e78e      	b.n	8024ff6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80250d8:	2300      	movs	r3, #0
 80250da:	461d      	mov	r5, r3
 80250dc:	e79f      	b.n	802501e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80250de:	4663      	mov	r3, ip
 80250e0:	4665      	mov	r5, ip
 80250e2:	e79c      	b.n	802501e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80250e4:	2300      	movs	r3, #0
 80250e6:	e79a      	b.n	802501e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80250e8:	463b      	mov	r3, r7
 80250ea:	e798      	b.n	802501e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80250ec:	20012e8c 	.word	0x20012e8c

080250f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80250f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80250f4:	b093      	sub	sp, #76	; 0x4c
 80250f6:	461d      	mov	r5, r3
 80250f8:	920c      	str	r2, [sp, #48]	; 0x30
 80250fa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80250fc:	9107      	str	r1, [sp, #28]
 80250fe:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025102:	9011      	str	r0, [sp, #68]	; 0x44
 8025104:	6850      	ldr	r0, [r2, #4]
 8025106:	6812      	ldr	r2, [r2, #0]
 8025108:	fb00 1303 	mla	r3, r0, r3, r1
 802510c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025110:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025112:	689b      	ldr	r3, [r3, #8]
 8025114:	3301      	adds	r3, #1
 8025116:	f023 0301 	bic.w	r3, r3, #1
 802511a:	9306      	str	r3, [sp, #24]
 802511c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802511e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025122:	681f      	ldr	r7, [r3, #0]
 8025124:	9b07      	ldr	r3, [sp, #28]
 8025126:	2b00      	cmp	r3, #0
 8025128:	dc03      	bgt.n	8025132 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802512a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802512c:	2b00      	cmp	r3, #0
 802512e:	f340 8267 	ble.w	8025600 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025132:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025134:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025138:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802513c:	1e48      	subs	r0, r1, #1
 802513e:	f102 3cff 	add.w	ip, r2, #4294967295
 8025142:	2d00      	cmp	r5, #0
 8025144:	f340 80b8 	ble.w	80252b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025148:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802514c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025150:	d406      	bmi.n	8025160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025152:	4586      	cmp	lr, r0
 8025154:	da04      	bge.n	8025160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025156:	2b00      	cmp	r3, #0
 8025158:	db02      	blt.n	8025160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802515a:	4563      	cmp	r3, ip
 802515c:	f2c0 80ad 	blt.w	80252ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025160:	f11e 0e01 	adds.w	lr, lr, #1
 8025164:	f100 80a0 	bmi.w	80252a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025168:	4571      	cmp	r1, lr
 802516a:	f2c0 809d 	blt.w	80252a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802516e:	3301      	adds	r3, #1
 8025170:	f100 809a 	bmi.w	80252a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025174:	429a      	cmp	r2, r3
 8025176:	f2c0 8097 	blt.w	80252a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802517a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802517e:	9509      	str	r5, [sp, #36]	; 0x24
 8025180:	46c8      	mov	r8, r9
 8025182:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025184:	2b00      	cmp	r3, #0
 8025186:	f340 80b6 	ble.w	80252f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802518a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802518e:	9308      	str	r3, [sp, #32]
 8025190:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025192:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025196:	1423      	asrs	r3, r4, #16
 8025198:	ea4f 4026 	mov.w	r0, r6, asr #16
 802519c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80251a0:	f100 813e 	bmi.w	8025420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80251a4:	f10c 3bff 	add.w	fp, ip, #4294967295
 80251a8:	455b      	cmp	r3, fp
 80251aa:	f280 8139 	bge.w	8025420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80251ae:	2800      	cmp	r0, #0
 80251b0:	f2c0 8136 	blt.w	8025420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80251b4:	f10e 3bff 	add.w	fp, lr, #4294967295
 80251b8:	4558      	cmp	r0, fp
 80251ba:	f280 8131 	bge.w	8025420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80251be:	9a06      	ldr	r2, [sp, #24]
 80251c0:	fb00 3302 	mla	r3, r0, r2, r3
 80251c4:	0858      	lsrs	r0, r3, #1
 80251c6:	07da      	lsls	r2, r3, #31
 80251c8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80251cc:	9a08      	ldr	r2, [sp, #32]
 80251ce:	bf54      	ite	pl
 80251d0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80251d4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80251d8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80251dc:	fa5f fc8c 	uxtb.w	ip, ip
 80251e0:	2a00      	cmp	r2, #0
 80251e2:	f000 80cb 	beq.w	802537c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80251e6:	1c58      	adds	r0, r3, #1
 80251e8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80251ec:	07c0      	lsls	r0, r0, #31
 80251ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80251f2:	bf54      	ite	pl
 80251f4:	f00e 0e0f 	andpl.w	lr, lr, #15
 80251f8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80251fc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025200:	fa5f fe8e 	uxtb.w	lr, lr
 8025204:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025208:	b1b9      	cbz	r1, 802523a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802520a:	4453      	add	r3, sl
 802520c:	0858      	lsrs	r0, r3, #1
 802520e:	07da      	lsls	r2, r3, #31
 8025210:	5c38      	ldrb	r0, [r7, r0]
 8025212:	bf54      	ite	pl
 8025214:	f000 000f 	andpl.w	r0, r0, #15
 8025218:	1100      	asrmi	r0, r0, #4
 802521a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802521e:	b2c0      	uxtb	r0, r0
 8025220:	900a      	str	r0, [sp, #40]	; 0x28
 8025222:	1c58      	adds	r0, r3, #1
 8025224:	0843      	lsrs	r3, r0, #1
 8025226:	07c2      	lsls	r2, r0, #31
 8025228:	5cfb      	ldrb	r3, [r7, r3]
 802522a:	bf54      	ite	pl
 802522c:	f003 030f 	andpl.w	r3, r3, #15
 8025230:	111b      	asrmi	r3, r3, #4
 8025232:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025236:	b2db      	uxtb	r3, r3
 8025238:	930e      	str	r3, [sp, #56]	; 0x38
 802523a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802523e:	b289      	uxth	r1, r1
 8025240:	fb02 f301 	mul.w	r3, r2, r1
 8025244:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025248:	0112      	lsls	r2, r2, #4
 802524a:	b289      	uxth	r1, r1
 802524c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025250:	1a40      	subs	r0, r0, r1
 8025252:	fa1f fe80 	uxth.w	lr, r0
 8025256:	1ad2      	subs	r2, r2, r3
 8025258:	980d      	ldr	r0, [sp, #52]	; 0x34
 802525a:	b292      	uxth	r2, r2
 802525c:	4342      	muls	r2, r0
 802525e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8025262:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025264:	fb01 c102 	mla	r1, r1, r2, ip
 8025268:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802526a:	fb03 1302 	mla	r3, r3, r2, r1
 802526e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025272:	2bff      	cmp	r3, #255	; 0xff
 8025274:	f040 8093 	bne.w	802539e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025278:	4bbe      	ldr	r3, [pc, #760]	; (8025574 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802527a:	681a      	ldr	r2, [r3, #0]
 802527c:	4bbe      	ldr	r3, [pc, #760]	; (8025578 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802527e:	0951      	lsrs	r1, r2, #5
 8025280:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025284:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025288:	430b      	orrs	r3, r1
 802528a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802528e:	4313      	orrs	r3, r2
 8025290:	f8a8 3000 	strh.w	r3, [r8]
 8025294:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025296:	441c      	add	r4, r3
 8025298:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802529a:	441e      	add	r6, r3
 802529c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802529e:	3b01      	subs	r3, #1
 80252a0:	f108 0802 	add.w	r8, r8, #2
 80252a4:	9309      	str	r3, [sp, #36]	; 0x24
 80252a6:	e76c      	b.n	8025182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80252a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80252aa:	441c      	add	r4, r3
 80252ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80252ae:	3d01      	subs	r5, #1
 80252b0:	441e      	add	r6, r3
 80252b2:	f109 0902 	add.w	r9, r9, #2
 80252b6:	e744      	b.n	8025142 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80252b8:	d021      	beq.n	80252fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80252ba:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80252bc:	1e6b      	subs	r3, r5, #1
 80252be:	fb00 4003 	mla	r0, r0, r3, r4
 80252c2:	1400      	asrs	r0, r0, #16
 80252c4:	f53f af59 	bmi.w	802517a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80252c8:	3901      	subs	r1, #1
 80252ca:	4288      	cmp	r0, r1
 80252cc:	f6bf af55 	bge.w	802517a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80252d0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80252d2:	fb01 6303 	mla	r3, r1, r3, r6
 80252d6:	141b      	asrs	r3, r3, #16
 80252d8:	f53f af4f 	bmi.w	802517a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80252dc:	3a01      	subs	r2, #1
 80252de:	4293      	cmp	r3, r2
 80252e0:	f6bf af4b 	bge.w	802517a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80252e4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80252e8:	9308      	str	r3, [sp, #32]
 80252ea:	46a8      	mov	r8, r5
 80252ec:	46ce      	mov	lr, r9
 80252ee:	f1b8 0f00 	cmp.w	r8, #0
 80252f2:	f300 80b5 	bgt.w	8025460 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80252f6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80252fa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80252fe:	9b07      	ldr	r3, [sp, #28]
 8025300:	2b00      	cmp	r3, #0
 8025302:	f340 817d 	ble.w	8025600 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025306:	ee30 0a04 	vadd.f32	s0, s0, s8
 802530a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802530e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025312:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025314:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025318:	ee31 1a05 	vadd.f32	s2, s2, s10
 802531c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025320:	eef0 6a62 	vmov.f32	s13, s5
 8025324:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025328:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802532c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025330:	ee16 4a90 	vmov	r4, s13
 8025334:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025338:	eef0 6a43 	vmov.f32	s13, s6
 802533c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025340:	ee12 2a90 	vmov	r2, s5
 8025344:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025348:	fb92 f3f3 	sdiv	r3, r2, r3
 802534c:	ee13 2a10 	vmov	r2, s6
 8025350:	931f      	str	r3, [sp, #124]	; 0x7c
 8025352:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025354:	fb92 f3f3 	sdiv	r3, r2, r3
 8025358:	9320      	str	r3, [sp, #128]	; 0x80
 802535a:	9b07      	ldr	r3, [sp, #28]
 802535c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802535e:	3b01      	subs	r3, #1
 8025360:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025364:	9307      	str	r3, [sp, #28]
 8025366:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025368:	ee16 6a90 	vmov	r6, s13
 802536c:	bf14      	ite	ne
 802536e:	461d      	movne	r5, r3
 8025370:	4615      	moveq	r5, r2
 8025372:	eeb0 3a67 	vmov.f32	s6, s15
 8025376:	eef0 2a47 	vmov.f32	s5, s14
 802537a:	e6d3      	b.n	8025124 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802537c:	2900      	cmp	r1, #0
 802537e:	f43f af5c 	beq.w	802523a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025382:	eb0a 0003 	add.w	r0, sl, r3
 8025386:	0843      	lsrs	r3, r0, #1
 8025388:	07c0      	lsls	r0, r0, #31
 802538a:	5cfb      	ldrb	r3, [r7, r3]
 802538c:	bf54      	ite	pl
 802538e:	f003 030f 	andpl.w	r3, r3, #15
 8025392:	111b      	asrmi	r3, r3, #4
 8025394:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025398:	b2db      	uxtb	r3, r3
 802539a:	930a      	str	r3, [sp, #40]	; 0x28
 802539c:	e74d      	b.n	802523a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802539e:	2b00      	cmp	r3, #0
 80253a0:	f43f af78 	beq.w	8025294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80253a4:	4a73      	ldr	r2, [pc, #460]	; (8025574 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80253a6:	f8b8 c000 	ldrh.w	ip, [r8]
 80253aa:	6810      	ldr	r0, [r2, #0]
 80253ac:	fa1f fe83 	uxth.w	lr, r3
 80253b0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80253b4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80253b8:	43db      	mvns	r3, r3
 80253ba:	b2db      	uxtb	r3, r3
 80253bc:	fb12 f20e 	smulbb	r2, r2, lr
 80253c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80253c4:	fb01 2103 	mla	r1, r1, r3, r2
 80253c8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80253cc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80253d0:	b2c0      	uxtb	r0, r0
 80253d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80253d6:	fb1b fb0e 	smulbb	fp, fp, lr
 80253da:	b289      	uxth	r1, r1
 80253dc:	fb10 fe0e 	smulbb	lr, r0, lr
 80253e0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80253e4:	fa5f fc8c 	uxtb.w	ip, ip
 80253e8:	fb02 b203 	mla	r2, r2, r3, fp
 80253ec:	1c48      	adds	r0, r1, #1
 80253ee:	fb0c e303 	mla	r3, ip, r3, lr
 80253f2:	b292      	uxth	r2, r2
 80253f4:	b29b      	uxth	r3, r3
 80253f6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80253fa:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80253fe:	f102 0b01 	add.w	fp, r2, #1
 8025402:	1c59      	adds	r1, r3, #1
 8025404:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025408:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802540c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025410:	0952      	lsrs	r2, r2, #5
 8025412:	4301      	orrs	r1, r0
 8025414:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025418:	4311      	orrs	r1, r2
 802541a:	f8a8 1000 	strh.w	r1, [r8]
 802541e:	e739      	b.n	8025294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025420:	f113 0b01 	adds.w	fp, r3, #1
 8025424:	f53f af36 	bmi.w	8025294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025428:	45dc      	cmp	ip, fp
 802542a:	f6ff af33 	blt.w	8025294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802542e:	f110 0b01 	adds.w	fp, r0, #1
 8025432:	f53f af2f 	bmi.w	8025294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025436:	45de      	cmp	lr, fp
 8025438:	f6ff af2c 	blt.w	8025294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802543c:	9a08      	ldr	r2, [sp, #32]
 802543e:	9302      	str	r3, [sp, #8]
 8025440:	fa0f f38e 	sxth.w	r3, lr
 8025444:	9301      	str	r3, [sp, #4]
 8025446:	fa0f f38c 	sxth.w	r3, ip
 802544a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802544e:	9105      	str	r1, [sp, #20]
 8025450:	9300      	str	r3, [sp, #0]
 8025452:	463a      	mov	r2, r7
 8025454:	4653      	mov	r3, sl
 8025456:	4641      	mov	r1, r8
 8025458:	9811      	ldr	r0, [sp, #68]	; 0x44
 802545a:	f7ff fd73 	bl	8024f44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802545e:	e719      	b.n	8025294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025460:	9906      	ldr	r1, [sp, #24]
 8025462:	1422      	asrs	r2, r4, #16
 8025464:	1433      	asrs	r3, r6, #16
 8025466:	fb01 2303 	mla	r3, r1, r3, r2
 802546a:	085a      	lsrs	r2, r3, #1
 802546c:	07d9      	lsls	r1, r3, #31
 802546e:	5cba      	ldrb	r2, [r7, r2]
 8025470:	bf54      	ite	pl
 8025472:	f002 020f 	andpl.w	r2, r2, #15
 8025476:	1112      	asrmi	r2, r2, #4
 8025478:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802547c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025480:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025484:	b2d2      	uxtb	r2, r2
 8025486:	2800      	cmp	r0, #0
 8025488:	d062      	beq.n	8025550 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802548a:	f103 0a01 	add.w	sl, r3, #1
 802548e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8025492:	f01a 0f01 	tst.w	sl, #1
 8025496:	5c79      	ldrb	r1, [r7, r1]
 8025498:	bf0c      	ite	eq
 802549a:	f001 010f 	andeq.w	r1, r1, #15
 802549e:	1109      	asrne	r1, r1, #4
 80254a0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80254a4:	b2c9      	uxtb	r1, r1
 80254a6:	910f      	str	r1, [sp, #60]	; 0x3c
 80254a8:	f1bc 0f00 	cmp.w	ip, #0
 80254ac:	d019      	beq.n	80254e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80254ae:	9908      	ldr	r1, [sp, #32]
 80254b0:	440b      	add	r3, r1
 80254b2:	0859      	lsrs	r1, r3, #1
 80254b4:	f013 0f01 	tst.w	r3, #1
 80254b8:	5c79      	ldrb	r1, [r7, r1]
 80254ba:	bf0c      	ite	eq
 80254bc:	f001 010f 	andeq.w	r1, r1, #15
 80254c0:	1109      	asrne	r1, r1, #4
 80254c2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80254c6:	b2c9      	uxtb	r1, r1
 80254c8:	3301      	adds	r3, #1
 80254ca:	910b      	str	r1, [sp, #44]	; 0x2c
 80254cc:	0859      	lsrs	r1, r3, #1
 80254ce:	07db      	lsls	r3, r3, #31
 80254d0:	5c79      	ldrb	r1, [r7, r1]
 80254d2:	bf54      	ite	pl
 80254d4:	f001 010f 	andpl.w	r1, r1, #15
 80254d8:	1109      	asrmi	r1, r1, #4
 80254da:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80254de:	b2c9      	uxtb	r1, r1
 80254e0:	9110      	str	r1, [sp, #64]	; 0x40
 80254e2:	b280      	uxth	r0, r0
 80254e4:	fa1f fc8c 	uxth.w	ip, ip
 80254e8:	fb00 f30c 	mul.w	r3, r0, ip
 80254ec:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80254f0:	0100      	lsls	r0, r0, #4
 80254f2:	fa1f fc8c 	uxth.w	ip, ip
 80254f6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80254fa:	eba1 010c 	sub.w	r1, r1, ip
 80254fe:	fa1f fa81 	uxth.w	sl, r1
 8025502:	1ac0      	subs	r0, r0, r3
 8025504:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025506:	b280      	uxth	r0, r0
 8025508:	4348      	muls	r0, r1
 802550a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802550c:	fb02 020a 	mla	r2, r2, sl, r0
 8025510:	fb0c 2c01 	mla	ip, ip, r1, r2
 8025514:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025516:	fb03 c302 	mla	r3, r3, r2, ip
 802551a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802551e:	2bff      	cmp	r3, #255	; 0xff
 8025520:	d12c      	bne.n	802557c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8025522:	4b14      	ldr	r3, [pc, #80]	; (8025574 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025524:	681a      	ldr	r2, [r3, #0]
 8025526:	4b14      	ldr	r3, [pc, #80]	; (8025578 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025528:	0951      	lsrs	r1, r2, #5
 802552a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802552e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025532:	430b      	orrs	r3, r1
 8025534:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025538:	4313      	orrs	r3, r2
 802553a:	f8ae 3000 	strh.w	r3, [lr]
 802553e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025540:	441c      	add	r4, r3
 8025542:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025544:	f10e 0e02 	add.w	lr, lr, #2
 8025548:	441e      	add	r6, r3
 802554a:	f108 38ff 	add.w	r8, r8, #4294967295
 802554e:	e6ce      	b.n	80252ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025550:	f1bc 0f00 	cmp.w	ip, #0
 8025554:	d0c5      	beq.n	80254e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025556:	9908      	ldr	r1, [sp, #32]
 8025558:	440b      	add	r3, r1
 802555a:	0859      	lsrs	r1, r3, #1
 802555c:	07db      	lsls	r3, r3, #31
 802555e:	5c79      	ldrb	r1, [r7, r1]
 8025560:	bf54      	ite	pl
 8025562:	f001 010f 	andpl.w	r1, r1, #15
 8025566:	1109      	asrmi	r1, r1, #4
 8025568:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802556c:	b2c9      	uxtb	r1, r1
 802556e:	910b      	str	r1, [sp, #44]	; 0x2c
 8025570:	e7b7      	b.n	80254e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025572:	bf00      	nop
 8025574:	20012e8c 	.word	0x20012e8c
 8025578:	fffff800 	.word	0xfffff800
 802557c:	2b00      	cmp	r3, #0
 802557e:	d0de      	beq.n	802553e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025580:	4a21      	ldr	r2, [pc, #132]	; (8025608 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8025582:	f8be c000 	ldrh.w	ip, [lr]
 8025586:	6810      	ldr	r0, [r2, #0]
 8025588:	fa1f fa83 	uxth.w	sl, r3
 802558c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025590:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025594:	43db      	mvns	r3, r3
 8025596:	b2db      	uxtb	r3, r3
 8025598:	fb12 f20a 	smulbb	r2, r2, sl
 802559c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80255a0:	fb01 2103 	mla	r1, r1, r3, r2
 80255a4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80255a8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80255ac:	b2c0      	uxtb	r0, r0
 80255ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80255b2:	fa5f fc8c 	uxtb.w	ip, ip
 80255b6:	fb10 f00a 	smulbb	r0, r0, sl
 80255ba:	fb0c 0003 	mla	r0, ip, r3, r0
 80255be:	b289      	uxth	r1, r1
 80255c0:	fb1b fb0a 	smulbb	fp, fp, sl
 80255c4:	b280      	uxth	r0, r0
 80255c6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80255ca:	fb02 b203 	mla	r2, r2, r3, fp
 80255ce:	1c4b      	adds	r3, r1, #1
 80255d0:	f100 0b01 	add.w	fp, r0, #1
 80255d4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80255d8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80255dc:	b292      	uxth	r2, r2
 80255de:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80255e2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80255e6:	ea4b 0101 	orr.w	r1, fp, r1
 80255ea:	f102 0b01 	add.w	fp, r2, #1
 80255ee:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80255f2:	0952      	lsrs	r2, r2, #5
 80255f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255f8:	4311      	orrs	r1, r2
 80255fa:	f8ae 1000 	strh.w	r1, [lr]
 80255fe:	e79e      	b.n	802553e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025600:	b013      	add	sp, #76	; 0x4c
 8025602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025606:	bf00      	nop
 8025608:	20012e8c 	.word	0x20012e8c

0802560c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802560c:	b570      	push	{r4, r5, r6, lr}
 802560e:	1208      	asrs	r0, r1, #8
 8025610:	b29e      	uxth	r6, r3
 8025612:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025616:	1213      	asrs	r3, r2, #8
 8025618:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802561c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025620:	fb13 f305 	smulbb	r3, r3, r5
 8025624:	fb10 f006 	smulbb	r0, r0, r6
 8025628:	4418      	add	r0, r3
 802562a:	10cc      	asrs	r4, r1, #3
 802562c:	10d3      	asrs	r3, r2, #3
 802562e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025632:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025636:	fb13 f305 	smulbb	r3, r3, r5
 802563a:	fb14 f406 	smulbb	r4, r4, r6
 802563e:	00c9      	lsls	r1, r1, #3
 8025640:	00d2      	lsls	r2, r2, #3
 8025642:	441c      	add	r4, r3
 8025644:	b2d2      	uxtb	r2, r2
 8025646:	b2cb      	uxtb	r3, r1
 8025648:	fb12 f205 	smulbb	r2, r2, r5
 802564c:	b280      	uxth	r0, r0
 802564e:	fb13 f306 	smulbb	r3, r3, r6
 8025652:	4413      	add	r3, r2
 8025654:	1c42      	adds	r2, r0, #1
 8025656:	b29b      	uxth	r3, r3
 8025658:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802565c:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8025660:	1c58      	adds	r0, r3, #1
 8025662:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025666:	b2a4      	uxth	r4, r4
 8025668:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802566c:	4310      	orrs	r0, r2
 802566e:	1c62      	adds	r2, r4, #1
 8025670:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025674:	0964      	lsrs	r4, r4, #5
 8025676:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802567a:	4320      	orrs	r0, r4
 802567c:	bd70      	pop	{r4, r5, r6, pc}
	...

08025680 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8025680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025684:	b08f      	sub	sp, #60	; 0x3c
 8025686:	461c      	mov	r4, r3
 8025688:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802568c:	9004      	str	r0, [sp, #16]
 802568e:	460d      	mov	r5, r1
 8025690:	4616      	mov	r6, r2
 8025692:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025694:	2f00      	cmp	r7, #0
 8025696:	f000 80f6 	beq.w	8025886 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802569a:	6820      	ldr	r0, [r4, #0]
 802569c:	6861      	ldr	r1, [r4, #4]
 802569e:	aa0a      	add	r2, sp, #40	; 0x28
 80256a0:	c203      	stmia	r2!, {r0, r1}
 80256a2:	6818      	ldr	r0, [r3, #0]
 80256a4:	6859      	ldr	r1, [r3, #4]
 80256a6:	aa0c      	add	r2, sp, #48	; 0x30
 80256a8:	c203      	stmia	r2!, {r0, r1}
 80256aa:	a80a      	add	r0, sp, #40	; 0x28
 80256ac:	f7ef fa9c 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80256b0:	4621      	mov	r1, r4
 80256b2:	a80c      	add	r0, sp, #48	; 0x30
 80256b4:	f7ef fadc 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80256b8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80256bc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80256c0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80256c4:	f002 0301 	and.w	r3, r2, #1
 80256c8:	9306      	str	r3, [sp, #24]
 80256ca:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80256ce:	f003 0101 	and.w	r1, r3, #1
 80256d2:	9105      	str	r1, [sp, #20]
 80256d4:	9805      	ldr	r0, [sp, #20]
 80256d6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80256da:	4403      	add	r3, r0
 80256dc:	fb01 2303 	mla	r3, r1, r3, r2
 80256e0:	f04f 0802 	mov.w	r8, #2
 80256e4:	fb93 f3f8 	sdiv	r3, r3, r8
 80256e8:	441d      	add	r5, r3
 80256ea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80256ee:	441a      	add	r2, r3
 80256f0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80256f4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80256f8:	4419      	add	r1, r3
 80256fa:	4b64      	ldr	r3, [pc, #400]	; (802588c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80256fc:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025700:	6818      	ldr	r0, [r3, #0]
 8025702:	6803      	ldr	r3, [r0, #0]
 8025704:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025706:	4798      	blx	r3
 8025708:	4a61      	ldr	r2, [pc, #388]	; (8025890 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802570a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802570e:	8813      	ldrh	r3, [r2, #0]
 8025710:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8025714:	2fff      	cmp	r7, #255	; 0xff
 8025716:	fb03 a404 	mla	r4, r3, r4, sl
 802571a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802571e:	f106 0604 	add.w	r6, r6, #4
 8025722:	4611      	mov	r1, r2
 8025724:	fb03 fb0b 	mul.w	fp, r3, fp
 8025728:	d06b      	beq.n	8025802 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802572a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802572e:	9303      	str	r3, [sp, #12]
 8025730:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025734:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025738:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802573c:	9b07      	ldr	r3, [sp, #28]
 802573e:	42a3      	cmp	r3, r4
 8025740:	f240 809c 	bls.w	802587c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025744:	9b06      	ldr	r3, [sp, #24]
 8025746:	2b00      	cmp	r3, #0
 8025748:	d039      	beq.n	80257be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802574a:	782b      	ldrb	r3, [r5, #0]
 802574c:	8822      	ldrh	r2, [r4, #0]
 802574e:	9804      	ldr	r0, [sp, #16]
 8025750:	f003 030f 	and.w	r3, r3, #15
 8025754:	f105 0801 	add.w	r8, r5, #1
 8025758:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802575c:	9b03      	ldr	r3, [sp, #12]
 802575e:	9300      	str	r3, [sp, #0]
 8025760:	463b      	mov	r3, r7
 8025762:	f7ff ff53 	bl	802560c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025766:	f824 0b02 	strh.w	r0, [r4], #2
 802576a:	f109 3bff 	add.w	fp, r9, #4294967295
 802576e:	f1bb 0f01 	cmp.w	fp, #1
 8025772:	46a2      	mov	sl, r4
 8025774:	f104 0404 	add.w	r4, r4, #4
 8025778:	dd24      	ble.n	80257c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802577a:	f898 3000 	ldrb.w	r3, [r8]
 802577e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025782:	9804      	ldr	r0, [sp, #16]
 8025784:	091b      	lsrs	r3, r3, #4
 8025786:	f1ab 0b02 	sub.w	fp, fp, #2
 802578a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802578e:	9b03      	ldr	r3, [sp, #12]
 8025790:	9300      	str	r3, [sp, #0]
 8025792:	463b      	mov	r3, r7
 8025794:	f7ff ff3a 	bl	802560c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025798:	f824 0c04 	strh.w	r0, [r4, #-4]
 802579c:	f818 3b01 	ldrb.w	r3, [r8], #1
 80257a0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80257a4:	9804      	ldr	r0, [sp, #16]
 80257a6:	f003 030f 	and.w	r3, r3, #15
 80257aa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80257ae:	9b03      	ldr	r3, [sp, #12]
 80257b0:	9300      	str	r3, [sp, #0]
 80257b2:	463b      	mov	r3, r7
 80257b4:	f7ff ff2a 	bl	802560c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80257b8:	f824 0c02 	strh.w	r0, [r4, #-2]
 80257bc:	e7d7      	b.n	802576e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80257be:	46a8      	mov	r8, r5
 80257c0:	46cb      	mov	fp, r9
 80257c2:	e7d4      	b.n	802576e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80257c4:	d10e      	bne.n	80257e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80257c6:	f898 3000 	ldrb.w	r3, [r8]
 80257ca:	f8ba 2000 	ldrh.w	r2, [sl]
 80257ce:	9804      	ldr	r0, [sp, #16]
 80257d0:	091b      	lsrs	r3, r3, #4
 80257d2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80257d6:	9b03      	ldr	r3, [sp, #12]
 80257d8:	9300      	str	r3, [sp, #0]
 80257da:	463b      	mov	r3, r7
 80257dc:	f7ff ff16 	bl	802560c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80257e0:	f82a 0b02 	strh.w	r0, [sl], #2
 80257e4:	9b08      	ldr	r3, [sp, #32]
 80257e6:	9a05      	ldr	r2, [sp, #20]
 80257e8:	881c      	ldrh	r4, [r3, #0]
 80257ea:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80257ee:	eba4 0409 	sub.w	r4, r4, r9
 80257f2:	4413      	add	r3, r2
 80257f4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80257f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80257fa:	fb93 f3f2 	sdiv	r3, r3, r2
 80257fe:	441d      	add	r5, r3
 8025800:	e79c      	b.n	802573c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8025802:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025806:	45a3      	cmp	fp, r4
 8025808:	d938      	bls.n	802587c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802580a:	9b06      	ldr	r3, [sp, #24]
 802580c:	b1f3      	cbz	r3, 802584c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802580e:	782b      	ldrb	r3, [r5, #0]
 8025810:	f003 030f 	and.w	r3, r3, #15
 8025814:	1c6a      	adds	r2, r5, #1
 8025816:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802581a:	8023      	strh	r3, [r4, #0]
 802581c:	f109 30ff 	add.w	r0, r9, #4294967295
 8025820:	3402      	adds	r4, #2
 8025822:	2801      	cmp	r0, #1
 8025824:	4623      	mov	r3, r4
 8025826:	f104 0404 	add.w	r4, r4, #4
 802582a:	dd12      	ble.n	8025852 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802582c:	7813      	ldrb	r3, [r2, #0]
 802582e:	091b      	lsrs	r3, r3, #4
 8025830:	3802      	subs	r0, #2
 8025832:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025836:	f824 3c04 	strh.w	r3, [r4, #-4]
 802583a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802583e:	f003 030f 	and.w	r3, r3, #15
 8025842:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025846:	f824 3c02 	strh.w	r3, [r4, #-2]
 802584a:	e7ea      	b.n	8025822 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802584c:	462a      	mov	r2, r5
 802584e:	4648      	mov	r0, r9
 8025850:	e7e7      	b.n	8025822 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025852:	d106      	bne.n	8025862 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025854:	7812      	ldrb	r2, [r2, #0]
 8025856:	0912      	lsrs	r2, r2, #4
 8025858:	3302      	adds	r3, #2
 802585a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802585e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025862:	880c      	ldrh	r4, [r1, #0]
 8025864:	9a05      	ldr	r2, [sp, #20]
 8025866:	eba4 0409 	sub.w	r4, r4, r9
 802586a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802586e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025872:	4413      	add	r3, r2
 8025874:	fb93 f3f8 	sdiv	r3, r3, r8
 8025878:	441d      	add	r5, r3
 802587a:	e7c4      	b.n	8025806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 802587c:	4b03      	ldr	r3, [pc, #12]	; (802588c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802587e:	6818      	ldr	r0, [r3, #0]
 8025880:	6803      	ldr	r3, [r0, #0]
 8025882:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025884:	4798      	blx	r3
 8025886:	b00f      	add	sp, #60	; 0x3c
 8025888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802588c:	20012e7c 	.word	0x20012e7c
 8025890:	20012e76 	.word	0x20012e76

08025894 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025896:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802589a:	2dff      	cmp	r5, #255	; 0xff
 802589c:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80258a0:	d10c      	bne.n	80258bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80258a2:	2bff      	cmp	r3, #255	; 0xff
 80258a4:	d10a      	bne.n	80258bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80258a6:	4b25      	ldr	r3, [pc, #148]	; (802593c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80258a8:	0948      	lsrs	r0, r1, #5
 80258aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80258ae:	403b      	ands	r3, r7
 80258b0:	4318      	orrs	r0, r3
 80258b2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80258b6:	4308      	orrs	r0, r1
 80258b8:	b280      	uxth	r0, r0
 80258ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80258bc:	fb15 f503 	smulbb	r5, r5, r3
 80258c0:	b2ab      	uxth	r3, r5
 80258c2:	1c5d      	adds	r5, r3, #1
 80258c4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80258c8:	1214      	asrs	r4, r2, #8
 80258ca:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80258ce:	fa1f fc85 	uxth.w	ip, r5
 80258d2:	10d6      	asrs	r6, r2, #3
 80258d4:	00d0      	lsls	r0, r2, #3
 80258d6:	43ed      	mvns	r5, r5
 80258d8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80258dc:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80258e0:	b2eb      	uxtb	r3, r5
 80258e2:	b2c0      	uxtb	r0, r0
 80258e4:	fb12 f20c 	smulbb	r2, r2, ip
 80258e8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80258ec:	fb04 2403 	mla	r4, r4, r3, r2
 80258f0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80258f4:	b2c8      	uxtb	r0, r1
 80258f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80258fa:	b2fd      	uxtb	r5, r7
 80258fc:	fb10 f00c 	smulbb	r0, r0, ip
 8025900:	b2a4      	uxth	r4, r4
 8025902:	fb02 0003 	mla	r0, r2, r3, r0
 8025906:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802590a:	fb15 f50c 	smulbb	r5, r5, ip
 802590e:	fb06 5503 	mla	r5, r6, r3, r5
 8025912:	b283      	uxth	r3, r0
 8025914:	1c60      	adds	r0, r4, #1
 8025916:	b2ad      	uxth	r5, r5
 8025918:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802591c:	1c58      	adds	r0, r3, #1
 802591e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025922:	1c6b      	adds	r3, r5, #1
 8025924:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025928:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802592c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025930:	096d      	lsrs	r5, r5, #5
 8025932:	4320      	orrs	r0, r4
 8025934:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025938:	4328      	orrs	r0, r5
 802593a:	e7be      	b.n	80258ba <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802593c:	00fff800 	.word	0x00fff800

08025940 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025944:	461c      	mov	r4, r3
 8025946:	b08d      	sub	sp, #52	; 0x34
 8025948:	460d      	mov	r5, r1
 802594a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802594c:	6861      	ldr	r1, [r4, #4]
 802594e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8025952:	4680      	mov	r8, r0
 8025954:	6820      	ldr	r0, [r4, #0]
 8025956:	4616      	mov	r6, r2
 8025958:	aa08      	add	r2, sp, #32
 802595a:	c203      	stmia	r2!, {r0, r1}
 802595c:	6818      	ldr	r0, [r3, #0]
 802595e:	6859      	ldr	r1, [r3, #4]
 8025960:	aa0a      	add	r2, sp, #40	; 0x28
 8025962:	c203      	stmia	r2!, {r0, r1}
 8025964:	a808      	add	r0, sp, #32
 8025966:	f7ef f93f 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802596a:	4621      	mov	r1, r4
 802596c:	a80a      	add	r0, sp, #40	; 0x28
 802596e:	f7ef f97f 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025972:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8025976:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 802597a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802597e:	f002 0301 	and.w	r3, r2, #1
 8025982:	9303      	str	r3, [sp, #12]
 8025984:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025988:	f003 0101 	and.w	r1, r3, #1
 802598c:	9102      	str	r1, [sp, #8]
 802598e:	9802      	ldr	r0, [sp, #8]
 8025990:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8025994:	4403      	add	r3, r0
 8025996:	fb01 2303 	mla	r3, r1, r3, r2
 802599a:	f04f 0a02 	mov.w	sl, #2
 802599e:	fb93 f3fa 	sdiv	r3, r3, sl
 80259a2:	441d      	add	r5, r3
 80259a4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80259a8:	441a      	add	r2, r3
 80259aa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80259ae:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80259b2:	4a3f      	ldr	r2, [pc, #252]	; (8025ab0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80259b4:	9205      	str	r2, [sp, #20]
 80259b6:	4419      	add	r1, r3
 80259b8:	6810      	ldr	r0, [r2, #0]
 80259ba:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80259be:	6803      	ldr	r3, [r0, #0]
 80259c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80259c2:	4798      	blx	r3
 80259c4:	4b3b      	ldr	r3, [pc, #236]	; (8025ab4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80259c6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80259ca:	8819      	ldrh	r1, [r3, #0]
 80259cc:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80259d0:	fb01 c404 	mla	r4, r1, r4, ip
 80259d4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80259d8:	434f      	muls	r7, r1
 80259da:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80259de:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80259e2:	3604      	adds	r6, #4
 80259e4:	9204      	str	r2, [sp, #16]
 80259e6:	9b04      	ldr	r3, [sp, #16]
 80259e8:	429c      	cmp	r4, r3
 80259ea:	d258      	bcs.n	8025a9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80259ec:	9b03      	ldr	r3, [sp, #12]
 80259ee:	2b00      	cmp	r3, #0
 80259f0:	d034      	beq.n	8025a5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80259f2:	782b      	ldrb	r3, [r5, #0]
 80259f4:	f003 030f 	and.w	r3, r3, #15
 80259f8:	1c6f      	adds	r7, r5, #1
 80259fa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80259fe:	0e0b      	lsrs	r3, r1, #24
 8025a00:	d006      	beq.n	8025a10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8025a02:	8822      	ldrh	r2, [r4, #0]
 8025a04:	9300      	str	r3, [sp, #0]
 8025a06:	4640      	mov	r0, r8
 8025a08:	464b      	mov	r3, r9
 8025a0a:	f7ff ff43 	bl	8025894 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025a0e:	8020      	strh	r0, [r4, #0]
 8025a10:	3402      	adds	r4, #2
 8025a12:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025a16:	f1ba 0f01 	cmp.w	sl, #1
 8025a1a:	dd22      	ble.n	8025a62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025a1c:	783b      	ldrb	r3, [r7, #0]
 8025a1e:	091b      	lsrs	r3, r3, #4
 8025a20:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025a24:	0e0b      	lsrs	r3, r1, #24
 8025a26:	d006      	beq.n	8025a36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025a28:	8822      	ldrh	r2, [r4, #0]
 8025a2a:	9300      	str	r3, [sp, #0]
 8025a2c:	4640      	mov	r0, r8
 8025a2e:	464b      	mov	r3, r9
 8025a30:	f7ff ff30 	bl	8025894 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025a34:	8020      	strh	r0, [r4, #0]
 8025a36:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025a3a:	f003 030f 	and.w	r3, r3, #15
 8025a3e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025a42:	0e0b      	lsrs	r3, r1, #24
 8025a44:	d006      	beq.n	8025a54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025a46:	8862      	ldrh	r2, [r4, #2]
 8025a48:	9300      	str	r3, [sp, #0]
 8025a4a:	4640      	mov	r0, r8
 8025a4c:	464b      	mov	r3, r9
 8025a4e:	f7ff ff21 	bl	8025894 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025a52:	8060      	strh	r0, [r4, #2]
 8025a54:	3404      	adds	r4, #4
 8025a56:	f1aa 0a02 	sub.w	sl, sl, #2
 8025a5a:	e7dc      	b.n	8025a16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025a5c:	462f      	mov	r7, r5
 8025a5e:	46da      	mov	sl, fp
 8025a60:	e7d9      	b.n	8025a16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025a62:	d10d      	bne.n	8025a80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025a64:	783b      	ldrb	r3, [r7, #0]
 8025a66:	091b      	lsrs	r3, r3, #4
 8025a68:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025a6c:	0e0b      	lsrs	r3, r1, #24
 8025a6e:	d006      	beq.n	8025a7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025a70:	8822      	ldrh	r2, [r4, #0]
 8025a72:	9300      	str	r3, [sp, #0]
 8025a74:	4640      	mov	r0, r8
 8025a76:	464b      	mov	r3, r9
 8025a78:	f7ff ff0c 	bl	8025894 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025a7c:	8020      	strh	r0, [r4, #0]
 8025a7e:	3402      	adds	r4, #2
 8025a80:	9b06      	ldr	r3, [sp, #24]
 8025a82:	9a02      	ldr	r2, [sp, #8]
 8025a84:	881b      	ldrh	r3, [r3, #0]
 8025a86:	eba3 030b 	sub.w	r3, r3, fp
 8025a8a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025a8e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025a92:	4413      	add	r3, r2
 8025a94:	9a07      	ldr	r2, [sp, #28]
 8025a96:	fb93 f3f2 	sdiv	r3, r3, r2
 8025a9a:	441d      	add	r5, r3
 8025a9c:	e7a3      	b.n	80259e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025a9e:	9b05      	ldr	r3, [sp, #20]
 8025aa0:	6818      	ldr	r0, [r3, #0]
 8025aa2:	6803      	ldr	r3, [r0, #0]
 8025aa4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025aa6:	4798      	blx	r3
 8025aa8:	b00d      	add	sp, #52	; 0x34
 8025aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025aae:	bf00      	nop
 8025ab0:	20012e7c 	.word	0x20012e7c
 8025ab4:	20012e76 	.word	0x20012e76

08025ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025ab8:	b570      	push	{r4, r5, r6, lr}
 8025aba:	1214      	asrs	r4, r2, #8
 8025abc:	788d      	ldrb	r5, [r1, #2]
 8025abe:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025ac2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025ac6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025aca:	fb15 f503 	smulbb	r5, r5, r3
 8025ace:	fb04 5506 	mla	r5, r4, r6, r5
 8025ad2:	10d0      	asrs	r0, r2, #3
 8025ad4:	784c      	ldrb	r4, [r1, #1]
 8025ad6:	7809      	ldrb	r1, [r1, #0]
 8025ad8:	00d2      	lsls	r2, r2, #3
 8025ada:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025ade:	b2d2      	uxtb	r2, r2
 8025ae0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025ae4:	fb14 f403 	smulbb	r4, r4, r3
 8025ae8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025aec:	fb11 f303 	smulbb	r3, r1, r3
 8025af0:	fb00 4406 	mla	r4, r0, r6, r4
 8025af4:	fb02 3306 	mla	r3, r2, r6, r3
 8025af8:	b2ad      	uxth	r5, r5
 8025afa:	b29b      	uxth	r3, r3
 8025afc:	b2a4      	uxth	r4, r4
 8025afe:	1c68      	adds	r0, r5, #1
 8025b00:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025b04:	1c62      	adds	r2, r4, #1
 8025b06:	1c58      	adds	r0, r3, #1
 8025b08:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025b0c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025b10:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025b14:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025b18:	0964      	lsrs	r4, r4, #5
 8025b1a:	4328      	orrs	r0, r5
 8025b1c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025b20:	4320      	orrs	r0, r4
 8025b22:	bd70      	pop	{r4, r5, r6, pc}

08025b24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025b24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025b28:	b08f      	sub	sp, #60	; 0x3c
 8025b2a:	461c      	mov	r4, r3
 8025b2c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025b30:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025b32:	4682      	mov	sl, r0
 8025b34:	460e      	mov	r6, r1
 8025b36:	4615      	mov	r5, r2
 8025b38:	2f00      	cmp	r7, #0
 8025b3a:	f000 8142 	beq.w	8025dc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025b3e:	6820      	ldr	r0, [r4, #0]
 8025b40:	6861      	ldr	r1, [r4, #4]
 8025b42:	aa0a      	add	r2, sp, #40	; 0x28
 8025b44:	c203      	stmia	r2!, {r0, r1}
 8025b46:	6818      	ldr	r0, [r3, #0]
 8025b48:	6859      	ldr	r1, [r3, #4]
 8025b4a:	aa0c      	add	r2, sp, #48	; 0x30
 8025b4c:	c203      	stmia	r2!, {r0, r1}
 8025b4e:	a80a      	add	r0, sp, #40	; 0x28
 8025b50:	f7ef f84a 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025b54:	4621      	mov	r1, r4
 8025b56:	a80c      	add	r0, sp, #48	; 0x30
 8025b58:	f7ef f88a 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025b5c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025b60:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025b64:	f002 0301 	and.w	r3, r2, #1
 8025b68:	9306      	str	r3, [sp, #24]
 8025b6a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025b6e:	f003 0101 	and.w	r1, r3, #1
 8025b72:	9105      	str	r1, [sp, #20]
 8025b74:	9805      	ldr	r0, [sp, #20]
 8025b76:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025b7a:	4403      	add	r3, r0
 8025b7c:	fb01 2303 	mla	r3, r1, r3, r2
 8025b80:	f04f 0802 	mov.w	r8, #2
 8025b84:	fb93 f3f8 	sdiv	r3, r3, r8
 8025b88:	441e      	add	r6, r3
 8025b8a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025b8e:	441a      	add	r2, r3
 8025b90:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025b94:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025b98:	4419      	add	r1, r3
 8025b9a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025b9e:	9303      	str	r3, [sp, #12]
 8025ba0:	4b89      	ldr	r3, [pc, #548]	; (8025dc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025ba2:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025ba6:	6818      	ldr	r0, [r3, #0]
 8025ba8:	6803      	ldr	r3, [r0, #0]
 8025baa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025bac:	4798      	blx	r3
 8025bae:	4a87      	ldr	r2, [pc, #540]	; (8025dcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025bb0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025bb4:	8813      	ldrh	r3, [r2, #0]
 8025bb6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025bba:	2fff      	cmp	r7, #255	; 0xff
 8025bbc:	fb03 9404 	mla	r4, r3, r4, r9
 8025bc0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025bc4:	f105 0504 	add.w	r5, r5, #4
 8025bc8:	4694      	mov	ip, r2
 8025bca:	fb03 f30b 	mul.w	r3, r3, fp
 8025bce:	d071      	beq.n	8025cb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025bd0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025bd4:	43f9      	mvns	r1, r7
 8025bd6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025bda:	b2c9      	uxtb	r1, r1
 8025bdc:	9104      	str	r1, [sp, #16]
 8025bde:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025be2:	9b07      	ldr	r3, [sp, #28]
 8025be4:	42a3      	cmp	r3, r4
 8025be6:	f240 80e7 	bls.w	8025db8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025bea:	9b06      	ldr	r3, [sp, #24]
 8025bec:	2b00      	cmp	r3, #0
 8025bee:	d03d      	beq.n	8025c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025bf0:	7831      	ldrb	r1, [r6, #0]
 8025bf2:	9b04      	ldr	r3, [sp, #16]
 8025bf4:	8822      	ldrh	r2, [r4, #0]
 8025bf6:	9300      	str	r3, [sp, #0]
 8025bf8:	f001 010f 	and.w	r1, r1, #15
 8025bfc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025c00:	463b      	mov	r3, r7
 8025c02:	4429      	add	r1, r5
 8025c04:	4650      	mov	r0, sl
 8025c06:	f7ff ff57 	bl	8025ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025c0a:	9b03      	ldr	r3, [sp, #12]
 8025c0c:	f824 0b02 	strh.w	r0, [r4], #2
 8025c10:	f106 0801 	add.w	r8, r6, #1
 8025c14:	f103 3bff 	add.w	fp, r3, #4294967295
 8025c18:	f1bb 0f01 	cmp.w	fp, #1
 8025c1c:	46a1      	mov	r9, r4
 8025c1e:	f104 0404 	add.w	r4, r4, #4
 8025c22:	dd27      	ble.n	8025c74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025c24:	f898 1000 	ldrb.w	r1, [r8]
 8025c28:	9b04      	ldr	r3, [sp, #16]
 8025c2a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025c2e:	9300      	str	r3, [sp, #0]
 8025c30:	0909      	lsrs	r1, r1, #4
 8025c32:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025c36:	463b      	mov	r3, r7
 8025c38:	4429      	add	r1, r5
 8025c3a:	4650      	mov	r0, sl
 8025c3c:	f7ff ff3c 	bl	8025ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025c40:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025c44:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025c48:	9b04      	ldr	r3, [sp, #16]
 8025c4a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025c4e:	9300      	str	r3, [sp, #0]
 8025c50:	f001 010f 	and.w	r1, r1, #15
 8025c54:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025c58:	463b      	mov	r3, r7
 8025c5a:	4429      	add	r1, r5
 8025c5c:	4650      	mov	r0, sl
 8025c5e:	f7ff ff2b 	bl	8025ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025c62:	f1ab 0b02 	sub.w	fp, fp, #2
 8025c66:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025c6a:	e7d5      	b.n	8025c18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025c6c:	46b0      	mov	r8, r6
 8025c6e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025c72:	e7d1      	b.n	8025c18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025c74:	d10f      	bne.n	8025c96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8025c76:	f898 1000 	ldrb.w	r1, [r8]
 8025c7a:	9b04      	ldr	r3, [sp, #16]
 8025c7c:	f8b9 2000 	ldrh.w	r2, [r9]
 8025c80:	9300      	str	r3, [sp, #0]
 8025c82:	0909      	lsrs	r1, r1, #4
 8025c84:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025c88:	463b      	mov	r3, r7
 8025c8a:	4429      	add	r1, r5
 8025c8c:	4650      	mov	r0, sl
 8025c8e:	f7ff ff13 	bl	8025ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025c92:	f829 0b02 	strh.w	r0, [r9], #2
 8025c96:	9b08      	ldr	r3, [sp, #32]
 8025c98:	9a05      	ldr	r2, [sp, #20]
 8025c9a:	881c      	ldrh	r4, [r3, #0]
 8025c9c:	9b03      	ldr	r3, [sp, #12]
 8025c9e:	1ae4      	subs	r4, r4, r3
 8025ca0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025ca4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025ca8:	4413      	add	r3, r2
 8025caa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025cac:	fb93 f3f2 	sdiv	r3, r3, r2
 8025cb0:	441e      	add	r6, r3
 8025cb2:	e796      	b.n	8025be2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8025cb4:	4f46      	ldr	r7, [pc, #280]	; (8025dd0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025cb6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025cba:	42a3      	cmp	r3, r4
 8025cbc:	d97c      	bls.n	8025db8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025cbe:	9a06      	ldr	r2, [sp, #24]
 8025cc0:	2a00      	cmp	r2, #0
 8025cc2:	d054      	beq.n	8025d6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8025cc4:	7830      	ldrb	r0, [r6, #0]
 8025cc6:	f000 000f 	and.w	r0, r0, #15
 8025cca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025cce:	eb05 0e00 	add.w	lr, r5, r0
 8025cd2:	5c28      	ldrb	r0, [r5, r0]
 8025cd4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025cd8:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025cdc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025ce0:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025ce4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025ce8:	ea42 020e 	orr.w	r2, r2, lr
 8025cec:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025cf0:	f824 2b02 	strh.w	r2, [r4], #2
 8025cf4:	9a03      	ldr	r2, [sp, #12]
 8025cf6:	1c71      	adds	r1, r6, #1
 8025cf8:	f102 3eff 	add.w	lr, r2, #4294967295
 8025cfc:	f1be 0f01 	cmp.w	lr, #1
 8025d00:	4620      	mov	r0, r4
 8025d02:	f104 0404 	add.w	r4, r4, #4
 8025d06:	dd36      	ble.n	8025d76 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025d08:	7808      	ldrb	r0, [r1, #0]
 8025d0a:	0900      	lsrs	r0, r0, #4
 8025d0c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025d10:	eb05 0a00 	add.w	sl, r5, r0
 8025d14:	f1ae 0e02 	sub.w	lr, lr, #2
 8025d18:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025d1c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025d20:	00d2      	lsls	r2, r2, #3
 8025d22:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025d26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025d2a:	ea49 0202 	orr.w	r2, r9, r2
 8025d2e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025d32:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025d36:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025d3a:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025d3e:	f000 000f 	and.w	r0, r0, #15
 8025d42:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025d46:	eb05 0a00 	add.w	sl, r5, r0
 8025d4a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025d4e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025d52:	00d2      	lsls	r2, r2, #3
 8025d54:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025d58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025d5c:	ea49 0202 	orr.w	r2, r9, r2
 8025d60:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025d64:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025d68:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025d6c:	e7c6      	b.n	8025cfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025d6e:	4631      	mov	r1, r6
 8025d70:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025d74:	e7c2      	b.n	8025cfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025d76:	d111      	bne.n	8025d9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025d78:	7809      	ldrb	r1, [r1, #0]
 8025d7a:	0909      	lsrs	r1, r1, #4
 8025d7c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025d80:	186c      	adds	r4, r5, r1
 8025d82:	5c69      	ldrb	r1, [r5, r1]
 8025d84:	78a2      	ldrb	r2, [r4, #2]
 8025d86:	7864      	ldrb	r4, [r4, #1]
 8025d88:	00e4      	lsls	r4, r4, #3
 8025d8a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025d8e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025d92:	4322      	orrs	r2, r4
 8025d94:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025d98:	f820 2b02 	strh.w	r2, [r0], #2
 8025d9c:	9a03      	ldr	r2, [sp, #12]
 8025d9e:	f8bc 4000 	ldrh.w	r4, [ip]
 8025da2:	9905      	ldr	r1, [sp, #20]
 8025da4:	1aa4      	subs	r4, r4, r2
 8025da6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025daa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025dae:	440a      	add	r2, r1
 8025db0:	fb92 f2f8 	sdiv	r2, r2, r8
 8025db4:	4416      	add	r6, r2
 8025db6:	e780      	b.n	8025cba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025db8:	4b03      	ldr	r3, [pc, #12]	; (8025dc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025dba:	6818      	ldr	r0, [r3, #0]
 8025dbc:	6803      	ldr	r3, [r0, #0]
 8025dbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025dc0:	4798      	blx	r3
 8025dc2:	b00f      	add	sp, #60	; 0x3c
 8025dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025dc8:	20012e7c 	.word	0x20012e7c
 8025dcc:	20012e76 	.word	0x20012e76
 8025dd0:	fffff800 	.word	0xfffff800

08025dd4 <CRC_Lock>:
 8025dd4:	b530      	push	{r4, r5, lr}
 8025dd6:	4a20      	ldr	r2, [pc, #128]	; (8025e58 <CRC_Lock+0x84>)
 8025dd8:	6813      	ldr	r3, [r2, #0]
 8025dda:	f023 0301 	bic.w	r3, r3, #1
 8025dde:	6013      	str	r3, [r2, #0]
 8025de0:	4b1e      	ldr	r3, [pc, #120]	; (8025e5c <CRC_Lock+0x88>)
 8025de2:	681a      	ldr	r2, [r3, #0]
 8025de4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025de8:	4022      	ands	r2, r4
 8025dea:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025dee:	42aa      	cmp	r2, r5
 8025df0:	d005      	beq.n	8025dfe <CRC_Lock+0x2a>
 8025df2:	681b      	ldr	r3, [r3, #0]
 8025df4:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025df8:	4023      	ands	r3, r4
 8025dfa:	4293      	cmp	r3, r2
 8025dfc:	d124      	bne.n	8025e48 <CRC_Lock+0x74>
 8025dfe:	4b18      	ldr	r3, [pc, #96]	; (8025e60 <CRC_Lock+0x8c>)
 8025e00:	681b      	ldr	r3, [r3, #0]
 8025e02:	bb0b      	cbnz	r3, 8025e48 <CRC_Lock+0x74>
 8025e04:	4b17      	ldr	r3, [pc, #92]	; (8025e64 <CRC_Lock+0x90>)
 8025e06:	681a      	ldr	r2, [r3, #0]
 8025e08:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025e0c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025e10:	d00d      	beq.n	8025e2e <CRC_Lock+0x5a>
 8025e12:	681a      	ldr	r2, [r3, #0]
 8025e14:	f240 4483 	movw	r4, #1155	; 0x483
 8025e18:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025e1c:	42a2      	cmp	r2, r4
 8025e1e:	d006      	beq.n	8025e2e <CRC_Lock+0x5a>
 8025e20:	681b      	ldr	r3, [r3, #0]
 8025e22:	f240 4285 	movw	r2, #1157	; 0x485
 8025e26:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025e2a:	4293      	cmp	r3, r2
 8025e2c:	d10c      	bne.n	8025e48 <CRC_Lock+0x74>
 8025e2e:	4b0e      	ldr	r3, [pc, #56]	; (8025e68 <CRC_Lock+0x94>)
 8025e30:	2201      	movs	r2, #1
 8025e32:	601a      	str	r2, [r3, #0]
 8025e34:	681a      	ldr	r2, [r3, #0]
 8025e36:	2a00      	cmp	r2, #0
 8025e38:	d1fc      	bne.n	8025e34 <CRC_Lock+0x60>
 8025e3a:	4b0c      	ldr	r3, [pc, #48]	; (8025e6c <CRC_Lock+0x98>)
 8025e3c:	6018      	str	r0, [r3, #0]
 8025e3e:	6818      	ldr	r0, [r3, #0]
 8025e40:	1a43      	subs	r3, r0, r1
 8025e42:	4258      	negs	r0, r3
 8025e44:	4158      	adcs	r0, r3
 8025e46:	bd30      	pop	{r4, r5, pc}
 8025e48:	4b09      	ldr	r3, [pc, #36]	; (8025e70 <CRC_Lock+0x9c>)
 8025e4a:	2201      	movs	r2, #1
 8025e4c:	601a      	str	r2, [r3, #0]
 8025e4e:	681a      	ldr	r2, [r3, #0]
 8025e50:	2a00      	cmp	r2, #0
 8025e52:	d1fc      	bne.n	8025e4e <CRC_Lock+0x7a>
 8025e54:	4b07      	ldr	r3, [pc, #28]	; (8025e74 <CRC_Lock+0xa0>)
 8025e56:	e7f1      	b.n	8025e3c <CRC_Lock+0x68>
 8025e58:	e0002000 	.word	0xe0002000
 8025e5c:	e000ed00 	.word	0xe000ed00
 8025e60:	e0042000 	.word	0xe0042000
 8025e64:	5c001000 	.word	0x5c001000
 8025e68:	58024c08 	.word	0x58024c08
 8025e6c:	58024c00 	.word	0x58024c00
 8025e70:	40023008 	.word	0x40023008
 8025e74:	40023000 	.word	0x40023000

08025e78 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025e78:	6101      	str	r1, [r0, #16]
 8025e7a:	4770      	bx	lr

08025e7c <_ZN8touchgfx8Gestures4tickEv>:
 8025e7c:	7b83      	ldrb	r3, [r0, #14]
 8025e7e:	b14b      	cbz	r3, 8025e94 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025e80:	8903      	ldrh	r3, [r0, #8]
 8025e82:	3301      	adds	r3, #1
 8025e84:	b29b      	uxth	r3, r3
 8025e86:	2b07      	cmp	r3, #7
 8025e88:	8103      	strh	r3, [r0, #8]
 8025e8a:	bf81      	itttt	hi
 8025e8c:	2300      	movhi	r3, #0
 8025e8e:	8143      	strhhi	r3, [r0, #10]
 8025e90:	8183      	strhhi	r3, [r0, #12]
 8025e92:	7383      	strbhi	r3, [r0, #14]
 8025e94:	4770      	bx	lr
	...

08025e98 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025e98:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025e9c:	4698      	mov	r8, r3
 8025e9e:	8883      	ldrh	r3, [r0, #4]
 8025ea0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025ea4:	eba8 0303 	sub.w	r3, r8, r3
 8025ea8:	b21b      	sxth	r3, r3
 8025eaa:	4604      	mov	r4, r0
 8025eac:	2b00      	cmp	r3, #0
 8025eae:	4617      	mov	r7, r2
 8025eb0:	4a18      	ldr	r2, [pc, #96]	; (8025f14 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025eb2:	9200      	str	r2, [sp, #0]
 8025eb4:	bfb8      	it	lt
 8025eb6:	425b      	neglt	r3, r3
 8025eb8:	8aa2      	ldrh	r2, [r4, #20]
 8025eba:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025ebe:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025ec2:	b21b      	sxth	r3, r3
 8025ec4:	460e      	mov	r6, r1
 8025ec6:	4293      	cmp	r3, r2
 8025ec8:	88c1      	ldrh	r1, [r0, #6]
 8025eca:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025ece:	f04f 0000 	mov.w	r0, #0
 8025ed2:	f88d 0004 	strb.w	r0, [sp, #4]
 8025ed6:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025eda:	dc07      	bgt.n	8025eec <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025edc:	1a69      	subs	r1, r5, r1
 8025ede:	b209      	sxth	r1, r1
 8025ee0:	2900      	cmp	r1, #0
 8025ee2:	bfb8      	it	lt
 8025ee4:	4249      	neglt	r1, r1
 8025ee6:	b209      	sxth	r1, r1
 8025ee8:	428a      	cmp	r2, r1
 8025eea:	da10      	bge.n	8025f0e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025eec:	6920      	ldr	r0, [r4, #16]
 8025eee:	6803      	ldr	r3, [r0, #0]
 8025ef0:	4669      	mov	r1, sp
 8025ef2:	685b      	ldr	r3, [r3, #4]
 8025ef4:	4798      	blx	r3
 8025ef6:	eba8 0606 	sub.w	r6, r8, r6
 8025efa:	2300      	movs	r3, #0
 8025efc:	1bef      	subs	r7, r5, r7
 8025efe:	2001      	movs	r0, #1
 8025f00:	8123      	strh	r3, [r4, #8]
 8025f02:	8166      	strh	r6, [r4, #10]
 8025f04:	81a7      	strh	r7, [r4, #12]
 8025f06:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025f0a:	80e5      	strh	r5, [r4, #6]
 8025f0c:	73a0      	strb	r0, [r4, #14]
 8025f0e:	b004      	add	sp, #16
 8025f10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025f14:	0802e540 	.word	0x0802e540

08025f18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025f18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025f1a:	461e      	mov	r6, r3
 8025f1c:	1e4b      	subs	r3, r1, #1
 8025f1e:	2b01      	cmp	r3, #1
 8025f20:	b085      	sub	sp, #20
 8025f22:	4604      	mov	r4, r0
 8025f24:	460d      	mov	r5, r1
 8025f26:	4617      	mov	r7, r2
 8025f28:	d84b      	bhi.n	8025fc2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025f2a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025f2e:	1cd3      	adds	r3, r2, #3
 8025f30:	b29b      	uxth	r3, r3
 8025f32:	2b06      	cmp	r3, #6
 8025f34:	d916      	bls.n	8025f64 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025f36:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025fd8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025f3a:	f8cd c004 	str.w	ip, [sp, #4]
 8025f3e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025f42:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025f46:	6900      	ldr	r0, [r0, #16]
 8025f48:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025f4c:	f04f 0c00 	mov.w	ip, #0
 8025f50:	f88d c008 	strb.w	ip, [sp, #8]
 8025f54:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025f58:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025f5c:	6803      	ldr	r3, [r0, #0]
 8025f5e:	a901      	add	r1, sp, #4
 8025f60:	689b      	ldr	r3, [r3, #8]
 8025f62:	4798      	blx	r3
 8025f64:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025f68:	1cd3      	adds	r3, r2, #3
 8025f6a:	b29b      	uxth	r3, r3
 8025f6c:	2b06      	cmp	r3, #6
 8025f6e:	d916      	bls.n	8025f9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025f70:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025fd8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025f74:	f8cd c004 	str.w	ip, [sp, #4]
 8025f78:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025f7c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025f80:	6920      	ldr	r0, [r4, #16]
 8025f82:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025f86:	f04f 0c01 	mov.w	ip, #1
 8025f8a:	f88d c008 	strb.w	ip, [sp, #8]
 8025f8e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025f92:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025f96:	6803      	ldr	r3, [r0, #0]
 8025f98:	a901      	add	r1, sp, #4
 8025f9a:	689b      	ldr	r3, [r3, #8]
 8025f9c:	4798      	blx	r3
 8025f9e:	4b0d      	ldr	r3, [pc, #52]	; (8025fd4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025fa0:	9301      	str	r3, [sp, #4]
 8025fa2:	6920      	ldr	r0, [r4, #16]
 8025fa4:	f88d 5008 	strb.w	r5, [sp, #8]
 8025fa8:	2300      	movs	r3, #0
 8025faa:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025fae:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025fb2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025fb6:	6803      	ldr	r3, [r0, #0]
 8025fb8:	a901      	add	r1, sp, #4
 8025fba:	681b      	ldr	r3, [r3, #0]
 8025fbc:	4798      	blx	r3
 8025fbe:	b005      	add	sp, #20
 8025fc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025fc2:	2900      	cmp	r1, #0
 8025fc4:	d1eb      	bne.n	8025f9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025fc6:	80a2      	strh	r2, [r4, #4]
 8025fc8:	80c6      	strh	r6, [r0, #6]
 8025fca:	60a1      	str	r1, [r4, #8]
 8025fcc:	81a1      	strh	r1, [r4, #12]
 8025fce:	73a1      	strb	r1, [r4, #14]
 8025fd0:	e7e5      	b.n	8025f9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025fd2:	bf00      	nop
 8025fd4:	0802e52c 	.word	0x0802e52c
 8025fd8:	0802e554 	.word	0x0802e554

08025fdc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025fdc:	10c9      	asrs	r1, r1, #3
 8025fde:	2900      	cmp	r1, #0
 8025fe0:	bfb8      	it	lt
 8025fe2:	4249      	neglt	r1, r1
 8025fe4:	2801      	cmp	r0, #1
 8025fe6:	d108      	bne.n	8025ffa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025fe8:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025fec:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025ff0:	4601      	mov	r1, r0
 8025ff2:	dd02      	ble.n	8025ffa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025ff4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025ff8:	4770      	bx	lr
 8025ffa:	29ff      	cmp	r1, #255	; 0xff
 8025ffc:	bfa8      	it	ge
 8025ffe:	21ff      	movge	r1, #255	; 0xff
 8026000:	4608      	mov	r0, r1
 8026002:	4770      	bx	lr

08026004 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026004:	b410      	push	{r4}
 8026006:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802600a:	429c      	cmp	r4, r3
 802600c:	d803      	bhi.n	8026016 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802600e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026012:	f7ed b8ef 	b.w	80131f4 <_ZN8touchgfx7Outline6lineToEii>
 8026016:	f85d 4b04 	ldr.w	r4, [sp], #4
 802601a:	4770      	bx	lr

0802601c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802601c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026020:	b08b      	sub	sp, #44	; 0x2c
 8026022:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026026:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802602a:	9308      	str	r3, [sp, #32]
 802602c:	4606      	mov	r6, r0
 802602e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026032:	9309      	str	r3, [sp, #36]	; 0x24
 8026034:	468a      	mov	sl, r1
 8026036:	f7ed fa4a 	bl	80134ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802603a:	68b5      	ldr	r5, [r6, #8]
 802603c:	4604      	mov	r4, r0
 802603e:	2d00      	cmp	r5, #0
 8026040:	d044      	beq.n	80260cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026042:	6873      	ldr	r3, [r6, #4]
 8026044:	42ab      	cmp	r3, r5
 8026046:	d33d      	bcc.n	80260c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026048:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802604c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026050:	eb02 0b03 	add.w	fp, r2, r3
 8026054:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026058:	fb02 1203 	mla	r2, r2, r3, r1
 802605c:	9205      	str	r2, [sp, #20]
 802605e:	1e6a      	subs	r2, r5, #1
 8026060:	9204      	str	r2, [sp, #16]
 8026062:	f04f 0800 	mov.w	r8, #0
 8026066:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802606a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802606e:	454b      	cmp	r3, r9
 8026070:	463a      	mov	r2, r7
 8026072:	d008      	beq.n	8026086 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026074:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026078:	eb03 0b09 	add.w	fp, r3, r9
 802607c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026080:	fb03 1309 	mla	r3, r3, r9, r1
 8026084:	9305      	str	r3, [sp, #20]
 8026086:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802608a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802608e:	4498      	add	r8, r3
 8026090:	9b04      	ldr	r3, [sp, #16]
 8026092:	3b01      	subs	r3, #1
 8026094:	9304      	str	r3, [sp, #16]
 8026096:	9b04      	ldr	r3, [sp, #16]
 8026098:	3301      	adds	r3, #1
 802609a:	d015      	beq.n	80260c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802609c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80260a0:	42bb      	cmp	r3, r7
 80260a2:	d117      	bne.n	80260d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80260a4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80260a8:	9b04      	ldr	r3, [sp, #16]
 80260aa:	4548      	cmp	r0, r9
 80260ac:	f103 33ff 	add.w	r3, r3, #4294967295
 80260b0:	d17f      	bne.n	80261b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80260b2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80260b6:	4401      	add	r1, r0
 80260b8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80260bc:	4480      	add	r8, r0
 80260be:	e7e9      	b.n	8026094 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80260c0:	461f      	mov	r7, r3
 80260c2:	e044      	b.n	802614e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80260c4:	2000      	movs	r0, #0
 80260c6:	e002      	b.n	80260ce <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80260c8:	2900      	cmp	r1, #0
 80260ca:	d16f      	bne.n	80261ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80260cc:	2001      	movs	r0, #1
 80260ce:	b00b      	add	sp, #44	; 0x2c
 80260d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260d4:	2900      	cmp	r1, #0
 80260d6:	d030      	beq.n	802613a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80260d8:	2f00      	cmp	r7, #0
 80260da:	db29      	blt.n	8026130 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80260dc:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80260e0:	42bb      	cmp	r3, r7
 80260e2:	dd25      	ble.n	8026130 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80260e4:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80260e8:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80260ec:	f7ff ff76 	bl	8025fdc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80260f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80260f2:	fb10 f003 	smulbb	r0, r0, r3
 80260f6:	b280      	uxth	r0, r0
 80260f8:	1c41      	adds	r1, r0, #1
 80260fa:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80260fe:	1209      	asrs	r1, r1, #8
 8026100:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026104:	d014      	beq.n	8026130 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026106:	9808      	ldr	r0, [sp, #32]
 8026108:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802610a:	b2c9      	uxtb	r1, r1
 802610c:	b2ba      	uxth	r2, r7
 802610e:	9102      	str	r1, [sp, #8]
 8026110:	2101      	movs	r1, #1
 8026112:	4413      	add	r3, r2
 8026114:	9101      	str	r1, [sp, #4]
 8026116:	4402      	add	r2, r0
 8026118:	fa0f f18b 	sxth.w	r1, fp
 802611c:	f8da 0000 	ldr.w	r0, [sl]
 8026120:	9100      	str	r1, [sp, #0]
 8026122:	6941      	ldr	r1, [r0, #20]
 8026124:	b21b      	sxth	r3, r3
 8026126:	460d      	mov	r5, r1
 8026128:	b212      	sxth	r2, r2
 802612a:	9905      	ldr	r1, [sp, #20]
 802612c:	4650      	mov	r0, sl
 802612e:	47a8      	blx	r5
 8026130:	9b04      	ldr	r3, [sp, #16]
 8026132:	3301      	adds	r3, #1
 8026134:	f107 0201 	add.w	r2, r7, #1
 8026138:	d0c8      	beq.n	80260cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802613a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802613e:	1abb      	subs	r3, r7, r2
 8026140:	2b00      	cmp	r3, #0
 8026142:	dd31      	ble.n	80261a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026144:	2a00      	cmp	r2, #0
 8026146:	dabb      	bge.n	80260c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026148:	2f00      	cmp	r7, #0
 802614a:	dd2d      	ble.n	80261a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802614c:	2200      	movs	r2, #0
 802614e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026152:	19d1      	adds	r1, r2, r7
 8026154:	4299      	cmp	r1, r3
 8026156:	db02      	blt.n	802615e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026158:	1a9f      	subs	r7, r3, r2
 802615a:	2f00      	cmp	r7, #0
 802615c:	dd24      	ble.n	80261a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802615e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026162:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026166:	f7ff ff39 	bl	8025fdc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802616a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802616c:	fb10 f003 	smulbb	r0, r0, r3
 8026170:	b280      	uxth	r0, r0
 8026172:	1c41      	adds	r1, r0, #1
 8026174:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026178:	1209      	asrs	r1, r1, #8
 802617a:	f011 0fff 	tst.w	r1, #255	; 0xff
 802617e:	d013      	beq.n	80261a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026180:	9808      	ldr	r0, [sp, #32]
 8026182:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026184:	b292      	uxth	r2, r2
 8026186:	b2c9      	uxtb	r1, r1
 8026188:	4413      	add	r3, r2
 802618a:	9102      	str	r1, [sp, #8]
 802618c:	4402      	add	r2, r0
 802618e:	b23f      	sxth	r7, r7
 8026190:	f8da 0000 	ldr.w	r0, [sl]
 8026194:	9701      	str	r7, [sp, #4]
 8026196:	fa0f f18b 	sxth.w	r1, fp
 802619a:	9100      	str	r1, [sp, #0]
 802619c:	6947      	ldr	r7, [r0, #20]
 802619e:	9905      	ldr	r1, [sp, #20]
 80261a0:	b21b      	sxth	r3, r3
 80261a2:	b212      	sxth	r2, r2
 80261a4:	4650      	mov	r0, sl
 80261a6:	47b8      	blx	r7
 80261a8:	464b      	mov	r3, r9
 80261aa:	e75c      	b.n	8026066 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80261ac:	2f00      	cmp	r7, #0
 80261ae:	da95      	bge.n	80260dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80261b0:	e78c      	b.n	80260cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80261b2:	2900      	cmp	r1, #0
 80261b4:	d0f8      	beq.n	80261a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80261b6:	e78f      	b.n	80260d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080261b8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80261b8:	4b4b      	ldr	r3, [pc, #300]	; (80262e8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 80261ba:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80261be:	2500      	movs	r5, #0
 80261c0:	f100 0620 	add.w	r6, r0, #32
 80261c4:	4604      	mov	r4, r0
 80261c6:	e9c0 3100 	strd	r3, r1, [r0]
 80261ca:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80261ce:	e9c0 5504 	strd	r5, r5, [r0, #16]
 80261d2:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80261d6:	f100 0718 	add.w	r7, r0, #24
 80261da:	4630      	mov	r0, r6
 80261dc:	4690      	mov	r8, r2
 80261de:	f7ec fb41 	bl	8012864 <_ZN8touchgfx7OutlineC1Ev>
 80261e2:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80261e6:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80261ea:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80261ee:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80261f2:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80261f6:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80261fa:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 80261fe:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026202:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026206:	f9b8 2000 	ldrsh.w	r2, [r8]
 802620a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802620e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026212:	9500      	str	r5, [sp, #0]
 8026214:	4410      	add	r0, r2
 8026216:	b280      	uxth	r0, r0
 8026218:	fa0f fa80 	sxth.w	sl, r0
 802621c:	45aa      	cmp	sl, r5
 802621e:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026222:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026226:	dd5c      	ble.n	80262e2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026228:	4591      	cmp	r9, r2
 802622a:	dd5a      	ble.n	80262e2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802622c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026230:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026234:	440b      	add	r3, r1
 8026236:	b29b      	uxth	r3, r3
 8026238:	b21d      	sxth	r5, r3
 802623a:	2d00      	cmp	r5, #0
 802623c:	dd51      	ble.n	80262e2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802623e:	458e      	cmp	lr, r1
 8026240:	dd4f      	ble.n	80262e2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026242:	45d1      	cmp	r9, sl
 8026244:	bfb8      	it	lt
 8026246:	fa1f f089 	uxthlt.w	r0, r9
 802624a:	45ae      	cmp	lr, r5
 802624c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026250:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8026254:	bfb8      	it	lt
 8026256:	fa1f f38e 	uxthlt.w	r3, lr
 802625a:	1a80      	subs	r0, r0, r2
 802625c:	1a5b      	subs	r3, r3, r1
 802625e:	f8ad 0004 	strh.w	r0, [sp, #4]
 8026262:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026266:	f8ad 2000 	strh.w	r2, [sp]
 802626a:	f8ad 1002 	strh.w	r1, [sp, #2]
 802626e:	466d      	mov	r5, sp
 8026270:	e895 0003 	ldmia.w	r5, {r0, r1}
 8026274:	e887 0003 	stmia.w	r7, {r0, r1}
 8026278:	f8dc 3000 	ldr.w	r3, [ip]
 802627c:	4660      	mov	r0, ip
 802627e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026280:	4639      	mov	r1, r7
 8026282:	4798      	blx	r3
 8026284:	6861      	ldr	r1, [r4, #4]
 8026286:	4628      	mov	r0, r5
 8026288:	3104      	adds	r1, #4
 802628a:	f7ee fcf1 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802628e:	4638      	mov	r0, r7
 8026290:	f7ee fcaa 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026294:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026298:	f8bd 2000 	ldrh.w	r2, [sp]
 802629c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80262a0:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80262a4:	4630      	mov	r0, r6
 80262a6:	f7ec fac1 	bl	801282c <_ZN8touchgfx7Outline5resetEv>
 80262aa:	f9bd 3000 	ldrsh.w	r3, [sp]
 80262ae:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80262b2:	015b      	lsls	r3, r3, #5
 80262b4:	60a3      	str	r3, [r4, #8]
 80262b6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80262ba:	015b      	lsls	r3, r3, #5
 80262bc:	60e3      	str	r3, [r4, #12]
 80262be:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80262c2:	015b      	lsls	r3, r3, #5
 80262c4:	6123      	str	r3, [r4, #16]
 80262c6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80262ca:	015b      	lsls	r3, r3, #5
 80262cc:	6163      	str	r3, [r4, #20]
 80262ce:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80262d2:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80262d6:	4620      	mov	r0, r4
 80262d8:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80262dc:	b002      	add	sp, #8
 80262de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80262e2:	2300      	movs	r3, #0
 80262e4:	9301      	str	r3, [sp, #4]
 80262e6:	e7c2      	b.n	802626e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 80262e8:	0802e878 	.word	0x0802e878

080262ec <_ZN8touchgfx6Canvas5closeEv>:
 80262ec:	b538      	push	{r3, r4, r5, lr}
 80262ee:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80262f2:	4604      	mov	r4, r0
 80262f4:	b193      	cbz	r3, 802631c <_ZN8touchgfx6Canvas5closeEv+0x30>
 80262f6:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80262fa:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80262fe:	4213      	tst	r3, r2
 8026300:	d10c      	bne.n	802631c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026302:	f100 0520 	add.w	r5, r0, #32
 8026306:	b123      	cbz	r3, 8026312 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026308:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802630c:	4628      	mov	r0, r5
 802630e:	f7ff fe79 	bl	8026004 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026312:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8026316:	4628      	mov	r0, r5
 8026318:	f7ff fe74 	bl	8026004 <_ZN8touchgfx10Rasterizer6lineToEii>
 802631c:	2300      	movs	r3, #0
 802631e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026322:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8026326:	4298      	cmp	r0, r3
 8026328:	bf34      	ite	cc
 802632a:	2000      	movcc	r0, #0
 802632c:	2001      	movcs	r0, #1
 802632e:	bd38      	pop	{r3, r4, r5, pc}

08026330 <_ZN8touchgfx6Canvas6renderEh>:
 8026330:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8026334:	4604      	mov	r4, r0
 8026336:	6840      	ldr	r0, [r0, #4]
 8026338:	6803      	ldr	r3, [r0, #0]
 802633a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802633c:	460d      	mov	r5, r1
 802633e:	4798      	blx	r3
 8026340:	fb10 f105 	smulbb	r1, r0, r5
 8026344:	b289      	uxth	r1, r1
 8026346:	1c4d      	adds	r5, r1, #1
 8026348:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802634c:	122d      	asrs	r5, r5, #8
 802634e:	f000 809d 	beq.w	802648c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026352:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8026356:	2b00      	cmp	r3, #0
 8026358:	f000 8098 	beq.w	802648c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802635c:	4620      	mov	r0, r4
 802635e:	f7ff ffc5 	bl	80262ec <_ZN8touchgfx6Canvas5closeEv>
 8026362:	4607      	mov	r7, r0
 8026364:	2800      	cmp	r0, #0
 8026366:	d048      	beq.n	80263fa <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026368:	6863      	ldr	r3, [r4, #4]
 802636a:	4e49      	ldr	r6, [pc, #292]	; (8026490 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802636c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802636e:	6837      	ldr	r7, [r6, #0]
 8026370:	6803      	ldr	r3, [r0, #0]
 8026372:	689b      	ldr	r3, [r3, #8]
 8026374:	4798      	blx	r3
 8026376:	4601      	mov	r1, r0
 8026378:	4638      	mov	r0, r7
 802637a:	f7ea fbc5 	bl	8010b08 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802637e:	4607      	mov	r7, r0
 8026380:	f7dd fa2e 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 8026384:	6803      	ldr	r3, [r0, #0]
 8026386:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8026388:	4798      	blx	r3
 802638a:	4680      	mov	r8, r0
 802638c:	f7dd fa28 	bl	80037e0 <_ZN8touchgfx3HAL3lcdEv>
 8026390:	6803      	ldr	r3, [r0, #0]
 8026392:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026394:	4798      	blx	r3
 8026396:	280b      	cmp	r0, #11
 8026398:	d85d      	bhi.n	8026456 <_ZN8touchgfx6Canvas6renderEh+0x126>
 802639a:	e8df f000 	tbb	[pc, r0]
 802639e:	5e53      	.short	0x5e53
 80263a0:	325c066e 	.word	0x325c066e
 80263a4:	67676742 	.word	0x67676742
 80263a8:	6767      	.short	0x6767
 80263aa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263ae:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80263b2:	2208      	movs	r2, #8
 80263b4:	fb91 f2f2 	sdiv	r2, r1, r2
 80263b8:	fb08 2303 	mla	r3, r8, r3, r2
 80263bc:	441f      	add	r7, r3
 80263be:	424b      	negs	r3, r1
 80263c0:	f003 0307 	and.w	r3, r3, #7
 80263c4:	f001 0107 	and.w	r1, r1, #7
 80263c8:	bf58      	it	pl
 80263ca:	4259      	negpl	r1, r3
 80263cc:	b2c9      	uxtb	r1, r1
 80263ce:	b2ed      	uxtb	r5, r5
 80263d0:	e9cd 1500 	strd	r1, r5, [sp]
 80263d4:	6860      	ldr	r0, [r4, #4]
 80263d6:	463a      	mov	r2, r7
 80263d8:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80263da:	fa0f f388 	sxth.w	r3, r8
 80263de:	f104 0020 	add.w	r0, r4, #32
 80263e2:	f7ff fe1b 	bl	802601c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80263e6:	6863      	ldr	r3, [r4, #4]
 80263e8:	4607      	mov	r7, r0
 80263ea:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80263ec:	6803      	ldr	r3, [r0, #0]
 80263ee:	691b      	ldr	r3, [r3, #16]
 80263f0:	4798      	blx	r3
 80263f2:	6830      	ldr	r0, [r6, #0]
 80263f4:	6803      	ldr	r3, [r0, #0]
 80263f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80263f8:	4798      	blx	r3
 80263fa:	4638      	mov	r0, r7
 80263fc:	b002      	add	sp, #8
 80263fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026402:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026406:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802640a:	2204      	movs	r2, #4
 802640c:	fb91 f2f2 	sdiv	r2, r1, r2
 8026410:	fb08 2303 	mla	r3, r8, r3, r2
 8026414:	441f      	add	r7, r3
 8026416:	424b      	negs	r3, r1
 8026418:	f003 0303 	and.w	r3, r3, #3
 802641c:	f001 0103 	and.w	r1, r1, #3
 8026420:	e7d2      	b.n	80263c8 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8026422:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026426:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802642a:	2900      	cmp	r1, #0
 802642c:	f04f 0202 	mov.w	r2, #2
 8026430:	fb91 f2f2 	sdiv	r2, r1, r2
 8026434:	f001 0101 	and.w	r1, r1, #1
 8026438:	fb08 2303 	mla	r3, r8, r3, r2
 802643c:	441f      	add	r7, r3
 802643e:	bfb8      	it	lt
 8026440:	4249      	neglt	r1, r1
 8026442:	e7c3      	b.n	80263cc <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8026444:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026448:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802644c:	fb08 f303 	mul.w	r3, r8, r3
 8026450:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026454:	441f      	add	r7, r3
 8026456:	2100      	movs	r1, #0
 8026458:	e7b9      	b.n	80263ce <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802645a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802645e:	fb08 f203 	mul.w	r2, r8, r3
 8026462:	8b23      	ldrh	r3, [r4, #24]
 8026464:	2103      	movs	r1, #3
 8026466:	fb13 2301 	smlabb	r3, r3, r1, r2
 802646a:	e7f3      	b.n	8026454 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802646c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026470:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026474:	fb08 2303 	mla	r3, r8, r3, r2
 8026478:	e7ec      	b.n	8026454 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802647a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802647e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026482:	fb08 f303 	mul.w	r3, r8, r3
 8026486:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802648a:	e7e3      	b.n	8026454 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802648c:	2701      	movs	r7, #1
 802648e:	e7b4      	b.n	80263fa <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026490:	20012e7c 	.word	0x20012e7c

08026494 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8026494:	b510      	push	{r4, lr}
 8026496:	4b07      	ldr	r3, [pc, #28]	; (80264b4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8026498:	781b      	ldrb	r3, [r3, #0]
 802649a:	2b01      	cmp	r3, #1
 802649c:	d108      	bne.n	80264b0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802649e:	6843      	ldr	r3, [r0, #4]
 80264a0:	6814      	ldr	r4, [r2, #0]
 80264a2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80264a6:	680b      	ldr	r3, [r1, #0]
 80264a8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80264ac:	6013      	str	r3, [r2, #0]
 80264ae:	600c      	str	r4, [r1, #0]
 80264b0:	bd10      	pop	{r4, pc}
 80264b2:	bf00      	nop
 80264b4:	20012e74 	.word	0x20012e74

080264b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80264b8:	b513      	push	{r0, r1, r4, lr}
 80264ba:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80264be:	4604      	mov	r4, r0
 80264c0:	e9cd 2100 	strd	r2, r1, [sp]
 80264c4:	b9a3      	cbnz	r3, 80264f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80264c6:	466a      	mov	r2, sp
 80264c8:	a901      	add	r1, sp, #4
 80264ca:	4620      	mov	r0, r4
 80264cc:	f7ff ffe2 	bl	8026494 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80264d0:	68a3      	ldr	r3, [r4, #8]
 80264d2:	9901      	ldr	r1, [sp, #4]
 80264d4:	9a00      	ldr	r2, [sp, #0]
 80264d6:	1ac9      	subs	r1, r1, r3
 80264d8:	68e3      	ldr	r3, [r4, #12]
 80264da:	9101      	str	r1, [sp, #4]
 80264dc:	1ad2      	subs	r2, r2, r3
 80264de:	2a00      	cmp	r2, #0
 80264e0:	9200      	str	r2, [sp, #0]
 80264e2:	da0b      	bge.n	80264fc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80264e4:	2301      	movs	r3, #1
 80264e6:	2900      	cmp	r1, #0
 80264e8:	da0e      	bge.n	8026508 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80264ea:	f043 0304 	orr.w	r3, r3, #4
 80264ee:	e013      	b.n	8026518 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80264f0:	f7ff fefc 	bl	80262ec <_ZN8touchgfx6Canvas5closeEv>
 80264f4:	2800      	cmp	r0, #0
 80264f6:	d1e6      	bne.n	80264c6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80264f8:	b002      	add	sp, #8
 80264fa:	bd10      	pop	{r4, pc}
 80264fc:	6963      	ldr	r3, [r4, #20]
 80264fe:	429a      	cmp	r2, r3
 8026500:	bfac      	ite	ge
 8026502:	2302      	movge	r3, #2
 8026504:	2300      	movlt	r3, #0
 8026506:	e7ee      	b.n	80264e6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8026508:	6920      	ldr	r0, [r4, #16]
 802650a:	4281      	cmp	r1, r0
 802650c:	bfac      	ite	ge
 802650e:	2008      	movge	r0, #8
 8026510:	2000      	movlt	r0, #0
 8026512:	4318      	orrs	r0, r3
 8026514:	b2c3      	uxtb	r3, r0
 8026516:	b158      	cbz	r0, 8026530 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026518:	2200      	movs	r2, #0
 802651a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802651e:	9901      	ldr	r1, [sp, #4]
 8026520:	9a00      	ldr	r2, [sp, #0]
 8026522:	66a1      	str	r1, [r4, #104]	; 0x68
 8026524:	66e2      	str	r2, [r4, #108]	; 0x6c
 8026526:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802652a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802652e:	e7e3      	b.n	80264f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026530:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8026534:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026538:	4298      	cmp	r0, r3
 802653a:	d803      	bhi.n	8026544 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802653c:	f104 0020 	add.w	r0, r4, #32
 8026540:	f7ec fe72 	bl	8013228 <_ZN8touchgfx7Outline6moveToEii>
 8026544:	2301      	movs	r3, #1
 8026546:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802654a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802654e:	2300      	movs	r3, #0
 8026550:	e7e5      	b.n	802651e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8026552:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026554:	ab02      	add	r3, sp, #8
 8026556:	4604      	mov	r4, r0
 8026558:	f843 2d08 	str.w	r2, [r3, #-8]!
 802655c:	9101      	str	r1, [sp, #4]
 802655e:	461a      	mov	r2, r3
 8026560:	a901      	add	r1, sp, #4
 8026562:	f7ff ff97 	bl	8026494 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026566:	68a3      	ldr	r3, [r4, #8]
 8026568:	9901      	ldr	r1, [sp, #4]
 802656a:	9a00      	ldr	r2, [sp, #0]
 802656c:	1ac9      	subs	r1, r1, r3
 802656e:	68e3      	ldr	r3, [r4, #12]
 8026570:	9101      	str	r1, [sp, #4]
 8026572:	1ad2      	subs	r2, r2, r3
 8026574:	2a00      	cmp	r2, #0
 8026576:	9200      	str	r2, [sp, #0]
 8026578:	db1c      	blt.n	80265b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802657a:	6963      	ldr	r3, [r4, #20]
 802657c:	429a      	cmp	r2, r3
 802657e:	bfac      	ite	ge
 8026580:	2002      	movge	r0, #2
 8026582:	2000      	movlt	r0, #0
 8026584:	2900      	cmp	r1, #0
 8026586:	db17      	blt.n	80265b8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8026588:	6923      	ldr	r3, [r4, #16]
 802658a:	4299      	cmp	r1, r3
 802658c:	bfac      	ite	ge
 802658e:	2308      	movge	r3, #8
 8026590:	2300      	movlt	r3, #0
 8026592:	4303      	orrs	r3, r0
 8026594:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8026598:	b2dd      	uxtb	r5, r3
 802659a:	b978      	cbnz	r0, 80265bc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802659c:	f104 0020 	add.w	r0, r4, #32
 80265a0:	f7ff fd30 	bl	8026004 <_ZN8touchgfx10Rasterizer6lineToEii>
 80265a4:	9b01      	ldr	r3, [sp, #4]
 80265a6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80265a8:	9b00      	ldr	r3, [sp, #0]
 80265aa:	6623      	str	r3, [r4, #96]	; 0x60
 80265ac:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80265b0:	b002      	add	sp, #8
 80265b2:	bd70      	pop	{r4, r5, r6, pc}
 80265b4:	2001      	movs	r0, #1
 80265b6:	e7e5      	b.n	8026584 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80265b8:	2304      	movs	r3, #4
 80265ba:	e7ea      	b.n	8026592 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80265bc:	b113      	cbz	r3, 80265c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80265be:	ea10 0305 	ands.w	r3, r0, r5
 80265c2:	d11c      	bne.n	80265fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80265c4:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80265c8:	f104 0620 	add.w	r6, r4, #32
 80265cc:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80265d0:	b98b      	cbnz	r3, 80265f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80265d2:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80265d6:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80265da:	4298      	cmp	r0, r3
 80265dc:	d802      	bhi.n	80265e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80265de:	4630      	mov	r0, r6
 80265e0:	f7ec fe22 	bl	8013228 <_ZN8touchgfx7Outline6moveToEii>
 80265e4:	2301      	movs	r3, #1
 80265e6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80265ea:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80265ee:	e9dd 2100 	ldrd	r2, r1, [sp]
 80265f2:	4630      	mov	r0, r6
 80265f4:	e7d4      	b.n	80265a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80265f6:	4630      	mov	r0, r6
 80265f8:	f7ff fd04 	bl	8026004 <_ZN8touchgfx10Rasterizer6lineToEii>
 80265fc:	e7f7      	b.n	80265ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80265fe:	461d      	mov	r5, r3
 8026600:	e7d0      	b.n	80265a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08026604 <_ZN8touchgfx6CanvasD1Ev>:
 8026604:	b510      	push	{r4, lr}
 8026606:	4b04      	ldr	r3, [pc, #16]	; (8026618 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026608:	4604      	mov	r4, r0
 802660a:	f840 3b20 	str.w	r3, [r0], #32
 802660e:	f7ec f905 	bl	801281c <_ZN8touchgfx7OutlineD1Ev>
 8026612:	4620      	mov	r0, r4
 8026614:	bd10      	pop	{r4, pc}
 8026616:	bf00      	nop
 8026618:	0802e878 	.word	0x0802e878

0802661c <_ZN8touchgfx6CanvasD0Ev>:
 802661c:	b510      	push	{r4, lr}
 802661e:	4604      	mov	r4, r0
 8026620:	f7ff fff0 	bl	8026604 <_ZN8touchgfx6CanvasD1Ev>
 8026624:	4620      	mov	r0, r4
 8026626:	2170      	movs	r1, #112	; 0x70
 8026628:	f002 fd09 	bl	802903e <_ZdlPvj>
 802662c:	4620      	mov	r0, r4
 802662e:	bd10      	pop	{r4, pc}

08026630 <_ZN8touchgfx6CircleD1Ev>:
 8026630:	4770      	bx	lr

08026632 <_ZN8touchgfx6CircleD0Ev>:
 8026632:	b510      	push	{r4, lr}
 8026634:	2148      	movs	r1, #72	; 0x48
 8026636:	4604      	mov	r4, r0
 8026638:	f002 fd01 	bl	802903e <_ZdlPvj>
 802663c:	4620      	mov	r0, r4
 802663e:	bd10      	pop	{r4, pc}

08026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026640:	b508      	push	{r3, lr}
 8026642:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8026646:	f7ea fdb5 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802664a:	bd08      	pop	{r3, pc}

0802664c <_ZN8touchgfx6CircleC1Ev>:
 802664c:	b510      	push	{r4, lr}
 802664e:	4604      	mov	r4, r0
 8026650:	f7ea fc4c 	bl	8010eec <_ZN8touchgfx12CanvasWidgetC1Ev>
 8026654:	4b08      	ldr	r3, [pc, #32]	; (8026678 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8026656:	6023      	str	r3, [r4, #0]
 8026658:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802665c:	2300      	movs	r3, #0
 802665e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8026662:	f24b 4205 	movw	r2, #46085	; 0xb405
 8026666:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802666a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802666e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8026672:	60a3      	str	r3, [r4, #8]
 8026674:	4620      	mov	r0, r4
 8026676:	bd10      	pop	{r4, pc}
 8026678:	0802e88c 	.word	0x0802e88c

0802667c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802667c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026680:	428a      	cmp	r2, r1
 8026682:	4680      	mov	r8, r0
 8026684:	4610      	mov	r0, r2
 8026686:	4699      	mov	r9, r3
 8026688:	bfa6      	itte	ge
 802668a:	460a      	movge	r2, r1
 802668c:	4603      	movge	r3, r0
 802668e:	460b      	movlt	r3, r1
 8026690:	1a99      	subs	r1, r3, r2
 8026692:	b085      	sub	sp, #20
 8026694:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8026698:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802669c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802669e:	bfa4      	itt	ge
 80266a0:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80266a4:	2200      	movge	r2, #0
 80266a6:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80266aa:	9300      	str	r3, [sp, #0]
 80266ac:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80266b0:	f102 0b01 	add.w	fp, r2, #1
 80266b4:	2c00      	cmp	r4, #0
 80266b6:	f040 80af 	bne.w	8026818 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80266ba:	4610      	mov	r0, r2
 80266bc:	9201      	str	r2, [sp, #4]
 80266be:	f7ea fd79 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80266c2:	a903      	add	r1, sp, #12
 80266c4:	9003      	str	r0, [sp, #12]
 80266c6:	4650      	mov	r0, sl
 80266c8:	f7ea fc3c 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266cc:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80266d0:	9a01      	ldr	r2, [sp, #4]
 80266d2:	4408      	add	r0, r1
 80266d4:	f8d9 1000 	ldr.w	r1, [r9]
 80266d8:	4281      	cmp	r1, r0
 80266da:	bfc8      	it	gt
 80266dc:	f8c9 0000 	strgt.w	r0, [r9]
 80266e0:	6839      	ldr	r1, [r7, #0]
 80266e2:	4288      	cmp	r0, r1
 80266e4:	bfc8      	it	gt
 80266e6:	6038      	strgt	r0, [r7, #0]
 80266e8:	4610      	mov	r0, r2
 80266ea:	f7ff ffa9 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80266ee:	a903      	add	r1, sp, #12
 80266f0:	9003      	str	r0, [sp, #12]
 80266f2:	4650      	mov	r0, sl
 80266f4:	f7ea fc26 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266f8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80266fc:	1a10      	subs	r0, r2, r0
 80266fe:	6832      	ldr	r2, [r6, #0]
 8026700:	4282      	cmp	r2, r0
 8026702:	bfc8      	it	gt
 8026704:	6030      	strgt	r0, [r6, #0]
 8026706:	682a      	ldr	r2, [r5, #0]
 8026708:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802670c:	4290      	cmp	r0, r2
 802670e:	fb9b f2f1 	sdiv	r2, fp, r1
 8026712:	fb01 b212 	mls	r2, r1, r2, fp
 8026716:	eba1 0202 	sub.w	r2, r1, r2
 802671a:	bfc8      	it	gt
 802671c:	6028      	strgt	r0, [r5, #0]
 802671e:	fb92 f0f1 	sdiv	r0, r2, r1
 8026722:	fb01 2210 	mls	r2, r1, r0, r2
 8026726:	4493      	add	fp, r2
 8026728:	9b00      	ldr	r3, [sp, #0]
 802672a:	455b      	cmp	r3, fp
 802672c:	db2a      	blt.n	8026784 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802672e:	4658      	mov	r0, fp
 8026730:	f7ea fd40 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026734:	a903      	add	r1, sp, #12
 8026736:	9003      	str	r0, [sp, #12]
 8026738:	4650      	mov	r0, sl
 802673a:	f7ea fc03 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802673e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026742:	4410      	add	r0, r2
 8026744:	f8d9 2000 	ldr.w	r2, [r9]
 8026748:	4282      	cmp	r2, r0
 802674a:	bfc8      	it	gt
 802674c:	f8c9 0000 	strgt.w	r0, [r9]
 8026750:	683a      	ldr	r2, [r7, #0]
 8026752:	4290      	cmp	r0, r2
 8026754:	bfc8      	it	gt
 8026756:	6038      	strgt	r0, [r7, #0]
 8026758:	4658      	mov	r0, fp
 802675a:	f7ff ff71 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802675e:	a903      	add	r1, sp, #12
 8026760:	9003      	str	r0, [sp, #12]
 8026762:	4650      	mov	r0, sl
 8026764:	f7ea fbee 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026768:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802676c:	1a10      	subs	r0, r2, r0
 802676e:	6832      	ldr	r2, [r6, #0]
 8026770:	4282      	cmp	r2, r0
 8026772:	bfc8      	it	gt
 8026774:	6030      	strgt	r0, [r6, #0]
 8026776:	682a      	ldr	r2, [r5, #0]
 8026778:	4290      	cmp	r0, r2
 802677a:	bfc8      	it	gt
 802677c:	6028      	strgt	r0, [r5, #0]
 802677e:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026782:	e7d1      	b.n	8026728 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8026784:	9b00      	ldr	r3, [sp, #0]
 8026786:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802678a:	455b      	cmp	r3, fp
 802678c:	dd27      	ble.n	80267de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802678e:	4618      	mov	r0, r3
 8026790:	f7ea fd10 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026794:	a903      	add	r1, sp, #12
 8026796:	9003      	str	r0, [sp, #12]
 8026798:	4650      	mov	r0, sl
 802679a:	f7ea fbd3 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802679e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80267a2:	4410      	add	r0, r2
 80267a4:	f8d9 2000 	ldr.w	r2, [r9]
 80267a8:	4282      	cmp	r2, r0
 80267aa:	bfc8      	it	gt
 80267ac:	f8c9 0000 	strgt.w	r0, [r9]
 80267b0:	683a      	ldr	r2, [r7, #0]
 80267b2:	4290      	cmp	r0, r2
 80267b4:	bfc8      	it	gt
 80267b6:	6038      	strgt	r0, [r7, #0]
 80267b8:	9800      	ldr	r0, [sp, #0]
 80267ba:	f7ff ff41 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80267be:	a903      	add	r1, sp, #12
 80267c0:	9003      	str	r0, [sp, #12]
 80267c2:	4650      	mov	r0, sl
 80267c4:	f7ea fbbe 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80267c8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80267cc:	1a10      	subs	r0, r2, r0
 80267ce:	6832      	ldr	r2, [r6, #0]
 80267d0:	4282      	cmp	r2, r0
 80267d2:	bfc8      	it	gt
 80267d4:	6030      	strgt	r0, [r6, #0]
 80267d6:	682a      	ldr	r2, [r5, #0]
 80267d8:	4290      	cmp	r0, r2
 80267da:	bfc8      	it	gt
 80267dc:	6028      	strgt	r0, [r5, #0]
 80267de:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80267e2:	f8d9 1000 	ldr.w	r1, [r9]
 80267e6:	4291      	cmp	r1, r2
 80267e8:	bfc8      	it	gt
 80267ea:	f8c9 2000 	strgt.w	r2, [r9]
 80267ee:	683a      	ldr	r2, [r7, #0]
 80267f0:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80267f4:	429a      	cmp	r2, r3
 80267f6:	bfb8      	it	lt
 80267f8:	603b      	strlt	r3, [r7, #0]
 80267fa:	6832      	ldr	r2, [r6, #0]
 80267fc:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026800:	429a      	cmp	r2, r3
 8026802:	bfc8      	it	gt
 8026804:	6033      	strgt	r3, [r6, #0]
 8026806:	682a      	ldr	r2, [r5, #0]
 8026808:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802680c:	429a      	cmp	r2, r3
 802680e:	da00      	bge.n	8026812 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026810:	602b      	str	r3, [r5, #0]
 8026812:	b005      	add	sp, #20
 8026814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026818:	2002      	movs	r0, #2
 802681a:	3401      	adds	r4, #1
 802681c:	fb94 f4f0 	sdiv	r4, r4, r0
 8026820:	4610      	mov	r0, r2
 8026822:	9201      	str	r2, [sp, #4]
 8026824:	f7ea fcc6 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026828:	a903      	add	r1, sp, #12
 802682a:	9003      	str	r0, [sp, #12]
 802682c:	4650      	mov	r0, sl
 802682e:	f7ea fb89 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026832:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026836:	9a01      	ldr	r2, [sp, #4]
 8026838:	4408      	add	r0, r1
 802683a:	f8d9 1000 	ldr.w	r1, [r9]
 802683e:	1b03      	subs	r3, r0, r4
 8026840:	4299      	cmp	r1, r3
 8026842:	bfc8      	it	gt
 8026844:	f8c9 3000 	strgt.w	r3, [r9]
 8026848:	6839      	ldr	r1, [r7, #0]
 802684a:	428b      	cmp	r3, r1
 802684c:	bfc8      	it	gt
 802684e:	603b      	strgt	r3, [r7, #0]
 8026850:	f8d9 1000 	ldr.w	r1, [r9]
 8026854:	4420      	add	r0, r4
 8026856:	4281      	cmp	r1, r0
 8026858:	bfc8      	it	gt
 802685a:	f8c9 0000 	strgt.w	r0, [r9]
 802685e:	6839      	ldr	r1, [r7, #0]
 8026860:	4288      	cmp	r0, r1
 8026862:	bfc8      	it	gt
 8026864:	6038      	strgt	r0, [r7, #0]
 8026866:	4610      	mov	r0, r2
 8026868:	f7ff feea 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802686c:	a903      	add	r1, sp, #12
 802686e:	9003      	str	r0, [sp, #12]
 8026870:	4650      	mov	r0, sl
 8026872:	f7ea fb67 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026876:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802687a:	1a10      	subs	r0, r2, r0
 802687c:	6832      	ldr	r2, [r6, #0]
 802687e:	1b01      	subs	r1, r0, r4
 8026880:	428a      	cmp	r2, r1
 8026882:	bfc8      	it	gt
 8026884:	6031      	strgt	r1, [r6, #0]
 8026886:	682a      	ldr	r2, [r5, #0]
 8026888:	4291      	cmp	r1, r2
 802688a:	bfc8      	it	gt
 802688c:	6029      	strgt	r1, [r5, #0]
 802688e:	6832      	ldr	r2, [r6, #0]
 8026890:	4420      	add	r0, r4
 8026892:	4282      	cmp	r2, r0
 8026894:	bfc8      	it	gt
 8026896:	6030      	strgt	r0, [r6, #0]
 8026898:	682a      	ldr	r2, [r5, #0]
 802689a:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802689e:	4290      	cmp	r0, r2
 80268a0:	fb9b f2f1 	sdiv	r2, fp, r1
 80268a4:	fb01 b212 	mls	r2, r1, r2, fp
 80268a8:	eba1 0202 	sub.w	r2, r1, r2
 80268ac:	bfc8      	it	gt
 80268ae:	6028      	strgt	r0, [r5, #0]
 80268b0:	fb92 f0f1 	sdiv	r0, r2, r1
 80268b4:	fb01 2210 	mls	r2, r1, r0, r2
 80268b8:	4493      	add	fp, r2
 80268ba:	9b00      	ldr	r3, [sp, #0]
 80268bc:	455b      	cmp	r3, fp
 80268be:	db40      	blt.n	8026942 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80268c0:	4658      	mov	r0, fp
 80268c2:	f7ea fc77 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80268c6:	a903      	add	r1, sp, #12
 80268c8:	9003      	str	r0, [sp, #12]
 80268ca:	4650      	mov	r0, sl
 80268cc:	f7ea fb3a 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268d0:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80268d4:	4410      	add	r0, r2
 80268d6:	f8d9 2000 	ldr.w	r2, [r9]
 80268da:	1b01      	subs	r1, r0, r4
 80268dc:	428a      	cmp	r2, r1
 80268de:	bfc8      	it	gt
 80268e0:	f8c9 1000 	strgt.w	r1, [r9]
 80268e4:	683a      	ldr	r2, [r7, #0]
 80268e6:	4291      	cmp	r1, r2
 80268e8:	bfc8      	it	gt
 80268ea:	6039      	strgt	r1, [r7, #0]
 80268ec:	f8d9 2000 	ldr.w	r2, [r9]
 80268f0:	4420      	add	r0, r4
 80268f2:	4282      	cmp	r2, r0
 80268f4:	bfc8      	it	gt
 80268f6:	f8c9 0000 	strgt.w	r0, [r9]
 80268fa:	683a      	ldr	r2, [r7, #0]
 80268fc:	4290      	cmp	r0, r2
 80268fe:	bfc8      	it	gt
 8026900:	6038      	strgt	r0, [r7, #0]
 8026902:	4658      	mov	r0, fp
 8026904:	f7ff fe9c 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026908:	a903      	add	r1, sp, #12
 802690a:	9003      	str	r0, [sp, #12]
 802690c:	4650      	mov	r0, sl
 802690e:	f7ea fb19 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026912:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026916:	1a10      	subs	r0, r2, r0
 8026918:	6832      	ldr	r2, [r6, #0]
 802691a:	1b01      	subs	r1, r0, r4
 802691c:	428a      	cmp	r2, r1
 802691e:	bfc8      	it	gt
 8026920:	6031      	strgt	r1, [r6, #0]
 8026922:	682a      	ldr	r2, [r5, #0]
 8026924:	4291      	cmp	r1, r2
 8026926:	bfc8      	it	gt
 8026928:	6029      	strgt	r1, [r5, #0]
 802692a:	6832      	ldr	r2, [r6, #0]
 802692c:	4420      	add	r0, r4
 802692e:	4282      	cmp	r2, r0
 8026930:	bfc8      	it	gt
 8026932:	6030      	strgt	r0, [r6, #0]
 8026934:	682a      	ldr	r2, [r5, #0]
 8026936:	4290      	cmp	r0, r2
 8026938:	bfc8      	it	gt
 802693a:	6028      	strgt	r0, [r5, #0]
 802693c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026940:	e7bb      	b.n	80268ba <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8026942:	9b00      	ldr	r3, [sp, #0]
 8026944:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026948:	455b      	cmp	r3, fp
 802694a:	f77f af62 	ble.w	8026812 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802694e:	4618      	mov	r0, r3
 8026950:	f7ea fc30 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026954:	a903      	add	r1, sp, #12
 8026956:	9003      	str	r0, [sp, #12]
 8026958:	4650      	mov	r0, sl
 802695a:	f7ea faf3 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802695e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026962:	4410      	add	r0, r2
 8026964:	f8d9 2000 	ldr.w	r2, [r9]
 8026968:	1b01      	subs	r1, r0, r4
 802696a:	428a      	cmp	r2, r1
 802696c:	bfc8      	it	gt
 802696e:	f8c9 1000 	strgt.w	r1, [r9]
 8026972:	683a      	ldr	r2, [r7, #0]
 8026974:	4291      	cmp	r1, r2
 8026976:	bfc8      	it	gt
 8026978:	6039      	strgt	r1, [r7, #0]
 802697a:	f8d9 2000 	ldr.w	r2, [r9]
 802697e:	4420      	add	r0, r4
 8026980:	4282      	cmp	r2, r0
 8026982:	bfc8      	it	gt
 8026984:	f8c9 0000 	strgt.w	r0, [r9]
 8026988:	683b      	ldr	r3, [r7, #0]
 802698a:	4298      	cmp	r0, r3
 802698c:	bfc8      	it	gt
 802698e:	6038      	strgt	r0, [r7, #0]
 8026990:	9800      	ldr	r0, [sp, #0]
 8026992:	f7ff fe55 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026996:	a903      	add	r1, sp, #12
 8026998:	9003      	str	r0, [sp, #12]
 802699a:	4650      	mov	r0, sl
 802699c:	f7ea fad2 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269a0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80269a4:	6832      	ldr	r2, [r6, #0]
 80269a6:	1a18      	subs	r0, r3, r0
 80269a8:	1b03      	subs	r3, r0, r4
 80269aa:	429a      	cmp	r2, r3
 80269ac:	bfc8      	it	gt
 80269ae:	6033      	strgt	r3, [r6, #0]
 80269b0:	682a      	ldr	r2, [r5, #0]
 80269b2:	4293      	cmp	r3, r2
 80269b4:	bfc8      	it	gt
 80269b6:	602b      	strgt	r3, [r5, #0]
 80269b8:	6833      	ldr	r3, [r6, #0]
 80269ba:	4404      	add	r4, r0
 80269bc:	42a3      	cmp	r3, r4
 80269be:	bfc8      	it	gt
 80269c0:	6034      	strgt	r4, [r6, #0]
 80269c2:	682b      	ldr	r3, [r5, #0]
 80269c4:	429c      	cmp	r4, r3
 80269c6:	bfc8      	it	gt
 80269c8:	602c      	strgt	r4, [r5, #0]
 80269ca:	e722      	b.n	8026812 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080269cc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80269cc:	b530      	push	{r4, r5, lr}
 80269ce:	4604      	mov	r4, r0
 80269d0:	4608      	mov	r0, r1
 80269d2:	4611      	mov	r1, r2
 80269d4:	461a      	mov	r2, r3
 80269d6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80269da:	b089      	sub	sp, #36	; 0x24
 80269dc:	015b      	lsls	r3, r3, #5
 80269de:	9304      	str	r3, [sp, #16]
 80269e0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80269e4:	2500      	movs	r5, #0
 80269e6:	015b      	lsls	r3, r3, #5
 80269e8:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80269ec:	ab07      	add	r3, sp, #28
 80269ee:	9302      	str	r3, [sp, #8]
 80269f0:	ab06      	add	r3, sp, #24
 80269f2:	9301      	str	r3, [sp, #4]
 80269f4:	ab05      	add	r3, sp, #20
 80269f6:	9300      	str	r3, [sp, #0]
 80269f8:	ab04      	add	r3, sp, #16
 80269fa:	9505      	str	r5, [sp, #20]
 80269fc:	f7ff fe3e 	bl	802667c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026a00:	2520      	movs	r5, #32
 8026a02:	9a04      	ldr	r2, [sp, #16]
 8026a04:	9805      	ldr	r0, [sp, #20]
 8026a06:	fb92 f2f5 	sdiv	r2, r2, r5
 8026a0a:	fb90 f0f5 	sdiv	r0, r0, r5
 8026a0e:	b292      	uxth	r2, r2
 8026a10:	3002      	adds	r0, #2
 8026a12:	1a80      	subs	r0, r0, r2
 8026a14:	9b06      	ldr	r3, [sp, #24]
 8026a16:	9907      	ldr	r1, [sp, #28]
 8026a18:	fb93 f3f5 	sdiv	r3, r3, r5
 8026a1c:	fb91 f1f5 	sdiv	r1, r1, r5
 8026a20:	b29b      	uxth	r3, r3
 8026a22:	3102      	adds	r1, #2
 8026a24:	1ac9      	subs	r1, r1, r3
 8026a26:	3a01      	subs	r2, #1
 8026a28:	3b01      	subs	r3, #1
 8026a2a:	80a0      	strh	r0, [r4, #4]
 8026a2c:	4620      	mov	r0, r4
 8026a2e:	8022      	strh	r2, [r4, #0]
 8026a30:	8063      	strh	r3, [r4, #2]
 8026a32:	80e1      	strh	r1, [r4, #6]
 8026a34:	b009      	add	sp, #36	; 0x24
 8026a36:	bd30      	pop	{r4, r5, pc}

08026a38 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026a38:	b510      	push	{r4, lr}
 8026a3a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8026a3e:	4604      	mov	r4, r0
 8026a40:	f7ff ffc4 	bl	80269cc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026a44:	4620      	mov	r0, r4
 8026a46:	bd10      	pop	{r4, pc}

08026a48 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8026a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026a4a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8026a4e:	4606      	mov	r6, r0
 8026a50:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8026a54:	6813      	ldr	r3, [r2, #0]
 8026a56:	42a5      	cmp	r5, r4
 8026a58:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8026a5c:	da2b      	bge.n	8026ab6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8026a5e:	42a3      	cmp	r3, r4
 8026a60:	dd14      	ble.n	8026a8c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8026a62:	b168      	cbz	r0, 8026a80 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026a64:	4267      	negs	r7, r4
 8026a66:	fb97 f2f0 	sdiv	r2, r7, r0
 8026a6a:	fb00 7212 	mls	r2, r0, r2, r7
 8026a6e:	1a82      	subs	r2, r0, r2
 8026a70:	fb92 f7f0 	sdiv	r7, r2, r0
 8026a74:	fb00 2017 	mls	r0, r0, r7, r2
 8026a78:	1a24      	subs	r4, r4, r0
 8026a7a:	42ac      	cmp	r4, r5
 8026a7c:	bfb8      	it	lt
 8026a7e:	462c      	movlt	r4, r5
 8026a80:	4630      	mov	r0, r6
 8026a82:	4622      	mov	r2, r4
 8026a84:	f7ff ffa2 	bl	80269cc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026a88:	4630      	mov	r0, r6
 8026a8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026a8c:	42ab      	cmp	r3, r5
 8026a8e:	dd0e      	ble.n	8026aae <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026a90:	b168      	cbz	r0, 8026aae <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026a92:	425f      	negs	r7, r3
 8026a94:	fb97 f2f0 	sdiv	r2, r7, r0
 8026a98:	fb00 7212 	mls	r2, r0, r2, r7
 8026a9c:	1a82      	subs	r2, r0, r2
 8026a9e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026aa2:	fb00 2017 	mls	r0, r0, r7, r2
 8026aa6:	1a1b      	subs	r3, r3, r0
 8026aa8:	42ab      	cmp	r3, r5
 8026aaa:	bfb8      	it	lt
 8026aac:	462b      	movlt	r3, r5
 8026aae:	4622      	mov	r2, r4
 8026ab0:	461c      	mov	r4, r3
 8026ab2:	4613      	mov	r3, r2
 8026ab4:	e7e4      	b.n	8026a80 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026ab6:	42a3      	cmp	r3, r4
 8026ab8:	da10      	bge.n	8026adc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8026aba:	b148      	cbz	r0, 8026ad0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8026abc:	fb94 f2f0 	sdiv	r2, r4, r0
 8026ac0:	fb00 4212 	mls	r2, r0, r2, r4
 8026ac4:	1a82      	subs	r2, r0, r2
 8026ac6:	fb92 f7f0 	sdiv	r7, r2, r0
 8026aca:	fb00 2017 	mls	r0, r0, r7, r2
 8026ace:	4404      	add	r4, r0
 8026ad0:	42a5      	cmp	r5, r4
 8026ad2:	bfa8      	it	ge
 8026ad4:	4625      	movge	r5, r4
 8026ad6:	461c      	mov	r4, r3
 8026ad8:	462b      	mov	r3, r5
 8026ada:	e7d1      	b.n	8026a80 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026adc:	42ab      	cmp	r3, r5
 8026ade:	dacf      	bge.n	8026a80 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026ae0:	2800      	cmp	r0, #0
 8026ae2:	d0cd      	beq.n	8026a80 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026ae4:	fb93 f2f0 	sdiv	r2, r3, r0
 8026ae8:	fb00 3212 	mls	r2, r0, r2, r3
 8026aec:	1a82      	subs	r2, r0, r2
 8026aee:	fb92 f7f0 	sdiv	r7, r2, r0
 8026af2:	fb00 2017 	mls	r0, r0, r7, r2
 8026af6:	4403      	add	r3, r0
 8026af8:	42ab      	cmp	r3, r5
 8026afa:	bfa8      	it	ge
 8026afc:	462b      	movge	r3, r5
 8026afe:	e7bf      	b.n	8026a80 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08026b00 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8026b00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026b04:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8026b08:	42ae      	cmp	r6, r5
 8026b0a:	bfa2      	ittt	ge
 8026b0c:	4633      	movge	r3, r6
 8026b0e:	462e      	movge	r6, r5
 8026b10:	461d      	movge	r5, r3
 8026b12:	1bab      	subs	r3, r5, r6
 8026b14:	468b      	mov	fp, r1
 8026b16:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026b18:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8026b1c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026b20:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026b24:	f04f 0220 	mov.w	r2, #32
 8026b28:	b0ab      	sub	sp, #172	; 0xac
 8026b2a:	4604      	mov	r4, r0
 8026b2c:	bfa4      	itt	ge
 8026b2e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8026b32:	2600      	movge	r6, #0
 8026b34:	fb99 f9f2 	sdiv	r9, r9, r2
 8026b38:	fb9a faf2 	sdiv	sl, sl, r2
 8026b3c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8026b3e:	2900      	cmp	r1, #0
 8026b40:	f000 80f5 	beq.w	8026d2e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8026b44:	f9bb 0000 	ldrsh.w	r0, [fp]
 8026b48:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8026b4c:	eba9 0700 	sub.w	r7, r9, r0
 8026b50:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8026b54:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8026b58:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8026b5c:	ebaa 0802 	sub.w	r8, sl, r2
 8026b60:	4407      	add	r7, r0
 8026b62:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8026b66:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8026b6a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8026b6e:	b23f      	sxth	r7, r7
 8026b70:	4490      	add	r8, r2
 8026b72:	eba9 0707 	sub.w	r7, r9, r7
 8026b76:	fa0f f888 	sxth.w	r8, r8
 8026b7a:	ebaa 0808 	sub.w	r8, sl, r8
 8026b7e:	2f00      	cmp	r7, #0
 8026b80:	bfb8      	it	lt
 8026b82:	427f      	neglt	r7, r7
 8026b84:	f1b8 0f00 	cmp.w	r8, #0
 8026b88:	bfb8      	it	lt
 8026b8a:	f1c8 0800 	rsblt	r8, r8, #0
 8026b8e:	45bc      	cmp	ip, r7
 8026b90:	bfcc      	ite	gt
 8026b92:	f10c 0701 	addgt.w	r7, ip, #1
 8026b96:	3701      	addle	r7, #1
 8026b98:	4540      	cmp	r0, r8
 8026b9a:	bfc8      	it	gt
 8026b9c:	f100 0801 	addgt.w	r8, r0, #1
 8026ba0:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8026ba4:	f100 0001 	add.w	r0, r0, #1
 8026ba8:	ea4f 0060 	mov.w	r0, r0, asr #1
 8026bac:	f04f 0202 	mov.w	r2, #2
 8026bb0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8026bb4:	fb91 f1f2 	sdiv	r1, r1, r2
 8026bb8:	eba3 0301 	sub.w	r3, r3, r1
 8026bbc:	bfd8      	it	le
 8026bbe:	f108 0801 	addle.w	r8, r8, #1
 8026bc2:	9201      	str	r2, [sp, #4]
 8026bc4:	930d      	str	r3, [sp, #52]	; 0x34
 8026bc6:	f7ea fad5 	bl	8011174 <_ZN8touchgfx7CWRUtil4sineEi>
 8026bca:	a92a      	add	r1, sp, #168	; 0xa8
 8026bcc:	fb08 f808 	mul.w	r8, r8, r8
 8026bd0:	f841 0d70 	str.w	r0, [r1, #-112]!
 8026bd4:	a80d      	add	r0, sp, #52	; 0x34
 8026bd6:	f7ea f9b5 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bda:	fb07 8707 	mla	r7, r7, r7, r8
 8026bde:	f04f 0c20 	mov.w	ip, #32
 8026be2:	fb90 f0fc 	sdiv	r0, r0, ip
 8026be6:	4340      	muls	r0, r0
 8026be8:	4287      	cmp	r7, r0
 8026bea:	9a01      	ldr	r2, [sp, #4]
 8026bec:	da04      	bge.n	8026bf8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8026bee:	2401      	movs	r4, #1
 8026bf0:	4620      	mov	r0, r4
 8026bf2:	b02b      	add	sp, #172	; 0xac
 8026bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026bf8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8026bfa:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026bfc:	fb91 f3f2 	sdiv	r3, r1, r2
 8026c00:	4403      	add	r3, r0
 8026c02:	fb93 f3fc 	sdiv	r3, r3, ip
 8026c06:	f9bb 1000 	ldrsh.w	r1, [fp]
 8026c0a:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8026c0e:	440a      	add	r2, r1
 8026c10:	b212      	sxth	r2, r2
 8026c12:	454a      	cmp	r2, r9
 8026c14:	bfa8      	it	ge
 8026c16:	464a      	movge	r2, r9
 8026c18:	428a      	cmp	r2, r1
 8026c1a:	bfac      	ite	ge
 8026c1c:	eba9 0902 	subge.w	r9, r9, r2
 8026c20:	eba9 0901 	sublt.w	r9, r9, r1
 8026c24:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8026c28:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8026c2c:	440a      	add	r2, r1
 8026c2e:	b212      	sxth	r2, r2
 8026c30:	4552      	cmp	r2, sl
 8026c32:	bfa8      	it	ge
 8026c34:	4652      	movge	r2, sl
 8026c36:	428a      	cmp	r2, r1
 8026c38:	bfac      	ite	ge
 8026c3a:	ebaa 0a02 	subge.w	sl, sl, r2
 8026c3e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8026c42:	3301      	adds	r3, #1
 8026c44:	fb0a fa0a 	mul.w	sl, sl, sl
 8026c48:	fb09 a909 	mla	r9, r9, r9, sl
 8026c4c:	435b      	muls	r3, r3
 8026c4e:	4599      	cmp	r9, r3
 8026c50:	dccd      	bgt.n	8026bee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8026c52:	465a      	mov	r2, fp
 8026c54:	4621      	mov	r1, r4
 8026c56:	a80e      	add	r0, sp, #56	; 0x38
 8026c58:	f7ff faae 	bl	80261b8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8026c5c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8026c5e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026c60:	9209      	str	r2, [sp, #36]	; 0x24
 8026c62:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8026c66:	930a      	str	r3, [sp, #40]	; 0x28
 8026c68:	dd07      	ble.n	8026c7a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8026c6a:	2102      	movs	r1, #2
 8026c6c:	fb93 f3f1 	sdiv	r3, r3, r1
 8026c70:	4413      	add	r3, r2
 8026c72:	930a      	str	r3, [sp, #40]	; 0x28
 8026c74:	fb93 f3f1 	sdiv	r3, r3, r1
 8026c78:	9309      	str	r3, [sp, #36]	; 0x24
 8026c7a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026c7e:	4630      	mov	r0, r6
 8026c80:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026c84:	930b      	str	r3, [sp, #44]	; 0x2c
 8026c86:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8026c8a:	f7ea fa93 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026c8e:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8026c92:	f04f 0a02 	mov.w	sl, #2
 8026c96:	f849 0d74 	str.w	r0, [r9, #-116]!
 8026c9a:	a80b      	add	r0, sp, #44	; 0x2c
 8026c9c:	4649      	mov	r1, r9
 8026c9e:	f7ea f951 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ca2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026ca4:	fb90 f0fa 	sdiv	r0, r0, sl
 8026ca8:	eb00 0b03 	add.w	fp, r0, r3
 8026cac:	4630      	mov	r0, r6
 8026cae:	f7ff fcc7 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026cb2:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8026cb6:	017f      	lsls	r7, r7, #5
 8026cb8:	f848 0d78 	str.w	r0, [r8, #-120]!
 8026cbc:	a80b      	add	r0, sp, #44	; 0x2c
 8026cbe:	4641      	mov	r1, r8
 8026cc0:	f7ea f940 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026cc4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026cc6:	fb90 f0fa 	sdiv	r0, r0, sl
 8026cca:	4659      	mov	r1, fp
 8026ccc:	1a12      	subs	r2, r2, r0
 8026cce:	a80e      	add	r0, sp, #56	; 0x38
 8026cd0:	f7ff fbf2 	bl	80264b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8026cd4:	f106 0a20 	add.w	sl, r6, #32
 8026cd8:	bb67      	cbnz	r7, 8026d34 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8026cda:	46b3      	mov	fp, r6
 8026cdc:	45aa      	cmp	sl, r5
 8026cde:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026ce0:	dc33      	bgt.n	8026d4a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8026ce2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026ce4:	4650      	mov	r0, sl
 8026ce6:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8026cea:	920b      	str	r2, [sp, #44]	; 0x2c
 8026cec:	f7ea fa62 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026cf0:	4641      	mov	r1, r8
 8026cf2:	900c      	str	r0, [sp, #48]	; 0x30
 8026cf4:	a80b      	add	r0, sp, #44	; 0x2c
 8026cf6:	f7ea f925 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026cfa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8026cfc:	2302      	movs	r3, #2
 8026cfe:	fb90 f0f3 	sdiv	r0, r0, r3
 8026d02:	eb00 0b02 	add.w	fp, r0, r2
 8026d06:	4650      	mov	r0, sl
 8026d08:	f7ff fc9a 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026d0c:	4649      	mov	r1, r9
 8026d0e:	900d      	str	r0, [sp, #52]	; 0x34
 8026d10:	a80b      	add	r0, sp, #44	; 0x2c
 8026d12:	f7ea f917 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d16:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026d18:	2302      	movs	r3, #2
 8026d1a:	4659      	mov	r1, fp
 8026d1c:	fb90 f0f3 	sdiv	r0, r0, r3
 8026d20:	1a12      	subs	r2, r2, r0
 8026d22:	a80e      	add	r0, sp, #56	; 0x38
 8026d24:	46d3      	mov	fp, sl
 8026d26:	f7ff fc14 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026d2a:	44ba      	add	sl, r7
 8026d2c:	e7d6      	b.n	8026cdc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8026d2e:	fb93 f3f2 	sdiv	r3, r3, r2
 8026d32:	e768      	b.n	8026c06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8026d34:	fb9a f2f7 	sdiv	r2, sl, r7
 8026d38:	fb07 a212 	mls	r2, r7, r2, sl
 8026d3c:	1aba      	subs	r2, r7, r2
 8026d3e:	fb92 f1f7 	sdiv	r1, r2, r7
 8026d42:	fb07 2211 	mls	r2, r7, r1, r2
 8026d46:	4492      	add	sl, r2
 8026d48:	e7c7      	b.n	8026cda <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8026d4a:	45ab      	cmp	fp, r5
 8026d4c:	da23      	bge.n	8026d96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8026d4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d50:	4628      	mov	r0, r5
 8026d52:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8026d56:	920b      	str	r2, [sp, #44]	; 0x2c
 8026d58:	f7ea fa2c 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026d5c:	4641      	mov	r1, r8
 8026d5e:	900c      	str	r0, [sp, #48]	; 0x30
 8026d60:	a80b      	add	r0, sp, #44	; 0x2c
 8026d62:	f7ea f8ef 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d66:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026d68:	f04f 0a02 	mov.w	sl, #2
 8026d6c:	fb90 f0fa 	sdiv	r0, r0, sl
 8026d70:	4403      	add	r3, r0
 8026d72:	4628      	mov	r0, r5
 8026d74:	9301      	str	r3, [sp, #4]
 8026d76:	f7ff fc63 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026d7a:	4649      	mov	r1, r9
 8026d7c:	900d      	str	r0, [sp, #52]	; 0x34
 8026d7e:	a80b      	add	r0, sp, #44	; 0x2c
 8026d80:	f7ea f8e0 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d84:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026d86:	9b01      	ldr	r3, [sp, #4]
 8026d88:	fb90 f0fa 	sdiv	r0, r0, sl
 8026d8c:	4619      	mov	r1, r3
 8026d8e:	1a12      	subs	r2, r2, r0
 8026d90:	a80e      	add	r0, sp, #56	; 0x38
 8026d92:	f7ff fbde 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026d96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026d98:	b99b      	cbnz	r3, 8026dc2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8026d9a:	1bad      	subs	r5, r5, r6
 8026d9c:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8026da0:	da04      	bge.n	8026dac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026da2:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8026da6:	a80e      	add	r0, sp, #56	; 0x38
 8026da8:	f7ff fbd3 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026dac:	21ff      	movs	r1, #255	; 0xff
 8026dae:	a80e      	add	r0, sp, #56	; 0x38
 8026db0:	f7ff fabe 	bl	8026330 <_ZN8touchgfx6Canvas6renderEh>
 8026db4:	4604      	mov	r4, r0
 8026db6:	4b8a      	ldr	r3, [pc, #552]	; (8026fe0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8026db8:	930e      	str	r3, [sp, #56]	; 0x38
 8026dba:	a816      	add	r0, sp, #88	; 0x58
 8026dbc:	f7eb fd2e 	bl	801281c <_ZN8touchgfx7OutlineD1Ev>
 8026dc0:	e716      	b.n	8026bf0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8026dc2:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8026dc6:	429a      	cmp	r2, r3
 8026dc8:	f0c0 8107 	bcc.w	8026fda <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8026dcc:	1bab      	subs	r3, r5, r6
 8026dce:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8026dd2:	9301      	str	r3, [sp, #4]
 8026dd4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026dd8:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8026ddc:	da43      	bge.n	8026e66 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026dde:	4628      	mov	r0, r5
 8026de0:	f7ea f9e8 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026de4:	4649      	mov	r1, r9
 8026de6:	900d      	str	r0, [sp, #52]	; 0x34
 8026de8:	a809      	add	r0, sp, #36	; 0x24
 8026dea:	f7ea f8ab 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026dee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026df0:	18c3      	adds	r3, r0, r3
 8026df2:	4628      	mov	r0, r5
 8026df4:	9303      	str	r3, [sp, #12]
 8026df6:	f7ff fc23 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026dfa:	4649      	mov	r1, r9
 8026dfc:	900d      	str	r0, [sp, #52]	; 0x34
 8026dfe:	a809      	add	r0, sp, #36	; 0x24
 8026e00:	f7ea f8a0 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e04:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026e06:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8026e0a:	1a1b      	subs	r3, r3, r0
 8026e0c:	9302      	str	r3, [sp, #8]
 8026e0e:	9204      	str	r2, [sp, #16]
 8026e10:	eb0a 0305 	add.w	r3, sl, r5
 8026e14:	9a04      	ldr	r2, [sp, #16]
 8026e16:	4293      	cmp	r3, r2
 8026e18:	da25      	bge.n	8026e66 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026e1a:	4618      	mov	r0, r3
 8026e1c:	9306      	str	r3, [sp, #24]
 8026e1e:	f7ea f9c9 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026e22:	4649      	mov	r1, r9
 8026e24:	900d      	str	r0, [sp, #52]	; 0x34
 8026e26:	a80a      	add	r0, sp, #40	; 0x28
 8026e28:	f7ea f88c 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e2c:	9b03      	ldr	r3, [sp, #12]
 8026e2e:	2202      	movs	r2, #2
 8026e30:	fb90 f0f2 	sdiv	r0, r0, r2
 8026e34:	18c3      	adds	r3, r0, r3
 8026e36:	9305      	str	r3, [sp, #20]
 8026e38:	9b06      	ldr	r3, [sp, #24]
 8026e3a:	9207      	str	r2, [sp, #28]
 8026e3c:	4618      	mov	r0, r3
 8026e3e:	f7ff fbff 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026e42:	a92a      	add	r1, sp, #168	; 0xa8
 8026e44:	f841 0d78 	str.w	r0, [r1, #-120]!
 8026e48:	a80a      	add	r0, sp, #40	; 0x28
 8026e4a:	f7ea f87b 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e4e:	9b02      	ldr	r3, [sp, #8]
 8026e50:	9a07      	ldr	r2, [sp, #28]
 8026e52:	9905      	ldr	r1, [sp, #20]
 8026e54:	fb90 f2f2 	sdiv	r2, r0, r2
 8026e58:	a80e      	add	r0, sp, #56	; 0x38
 8026e5a:	1a9a      	subs	r2, r3, r2
 8026e5c:	f7ff fb79 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026e60:	9b06      	ldr	r3, [sp, #24]
 8026e62:	4453      	add	r3, sl
 8026e64:	e7d6      	b.n	8026e14 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8026e66:	45ab      	cmp	fp, r5
 8026e68:	da25      	bge.n	8026eb6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8026e6a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026e6e:	4628      	mov	r0, r5
 8026e70:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026e74:	930b      	str	r3, [sp, #44]	; 0x2c
 8026e76:	f7ea f99d 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026e7a:	4641      	mov	r1, r8
 8026e7c:	900c      	str	r0, [sp, #48]	; 0x30
 8026e7e:	a80b      	add	r0, sp, #44	; 0x2c
 8026e80:	f7ea f860 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e84:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026e86:	2202      	movs	r2, #2
 8026e88:	fb90 f0f2 	sdiv	r0, r0, r2
 8026e8c:	eb00 0903 	add.w	r9, r0, r3
 8026e90:	4628      	mov	r0, r5
 8026e92:	9202      	str	r2, [sp, #8]
 8026e94:	f7ff fbd4 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026e98:	a92a      	add	r1, sp, #168	; 0xa8
 8026e9a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026e9e:	a80b      	add	r0, sp, #44	; 0x2c
 8026ea0:	f7ea f850 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ea4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026ea6:	9a02      	ldr	r2, [sp, #8]
 8026ea8:	fb90 f2f2 	sdiv	r2, r0, r2
 8026eac:	4649      	mov	r1, r9
 8026eae:	1a9a      	subs	r2, r3, r2
 8026eb0:	a80e      	add	r0, sp, #56	; 0x38
 8026eb2:	f7ff fb4e 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026eb6:	46d9      	mov	r9, fp
 8026eb8:	2502      	movs	r5, #2
 8026eba:	45b1      	cmp	r9, r6
 8026ebc:	db25      	blt.n	8026f0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8026ebe:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026ec2:	4648      	mov	r0, r9
 8026ec4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026ec8:	930b      	str	r3, [sp, #44]	; 0x2c
 8026eca:	f7ea f973 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026ece:	4641      	mov	r1, r8
 8026ed0:	900c      	str	r0, [sp, #48]	; 0x30
 8026ed2:	a80b      	add	r0, sp, #44	; 0x2c
 8026ed4:	f7ea f836 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ed8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026eda:	fb90 f0f5 	sdiv	r0, r0, r5
 8026ede:	eb00 0b03 	add.w	fp, r0, r3
 8026ee2:	4648      	mov	r0, r9
 8026ee4:	f7ff fbac 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026ee8:	a90d      	add	r1, sp, #52	; 0x34
 8026eea:	900d      	str	r0, [sp, #52]	; 0x34
 8026eec:	a80b      	add	r0, sp, #44	; 0x2c
 8026eee:	f7ea f829 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ef2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026ef4:	fb90 f0f5 	sdiv	r0, r0, r5
 8026ef8:	4659      	mov	r1, fp
 8026efa:	1a12      	subs	r2, r2, r0
 8026efc:	a80e      	add	r0, sp, #56	; 0x38
 8026efe:	46cb      	mov	fp, r9
 8026f00:	f7ff fb27 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026f04:	eba9 0907 	sub.w	r9, r9, r7
 8026f08:	e7d7      	b.n	8026eba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8026f0a:	455e      	cmp	r6, fp
 8026f0c:	da22      	bge.n	8026f54 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8026f0e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026f12:	4630      	mov	r0, r6
 8026f14:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026f18:	930b      	str	r3, [sp, #44]	; 0x2c
 8026f1a:	f7ea f94b 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026f1e:	4641      	mov	r1, r8
 8026f20:	900c      	str	r0, [sp, #48]	; 0x30
 8026f22:	a80b      	add	r0, sp, #44	; 0x2c
 8026f24:	f7ea f80e 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026f28:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8026f2a:	2502      	movs	r5, #2
 8026f2c:	fb90 f0f5 	sdiv	r0, r0, r5
 8026f30:	4407      	add	r7, r0
 8026f32:	4630      	mov	r0, r6
 8026f34:	f7ff fb84 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026f38:	a92a      	add	r1, sp, #168	; 0xa8
 8026f3a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026f3e:	a80b      	add	r0, sp, #44	; 0x2c
 8026f40:	f7ea f800 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026f44:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026f46:	fb90 f0f5 	sdiv	r0, r0, r5
 8026f4a:	4639      	mov	r1, r7
 8026f4c:	1a12      	subs	r2, r2, r0
 8026f4e:	a80e      	add	r0, sp, #56	; 0x38
 8026f50:	f7ff faff 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026f54:	9b01      	ldr	r3, [sp, #4]
 8026f56:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026f5a:	f6bf af27 	bge.w	8026dac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026f5e:	4630      	mov	r0, r6
 8026f60:	f7ea f928 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026f64:	ad2a      	add	r5, sp, #168	; 0xa8
 8026f66:	f04f 0b02 	mov.w	fp, #2
 8026f6a:	f845 0d74 	str.w	r0, [r5, #-116]!
 8026f6e:	a809      	add	r0, sp, #36	; 0x24
 8026f70:	4629      	mov	r1, r5
 8026f72:	f7e9 ffe7 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026f76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026f78:	eb00 0903 	add.w	r9, r0, r3
 8026f7c:	4630      	mov	r0, r6
 8026f7e:	f7ff fb5f 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026f82:	4629      	mov	r1, r5
 8026f84:	900d      	str	r0, [sp, #52]	; 0x34
 8026f86:	a809      	add	r0, sp, #36	; 0x24
 8026f88:	f7e9 ffdc 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026f8c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026f8e:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8026f92:	eba3 0800 	sub.w	r8, r3, r0
 8026f96:	4454      	add	r4, sl
 8026f98:	42a6      	cmp	r6, r4
 8026f9a:	f77f af07 	ble.w	8026dac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026f9e:	4620      	mov	r0, r4
 8026fa0:	f7ea f908 	bl	80111b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026fa4:	4629      	mov	r1, r5
 8026fa6:	900d      	str	r0, [sp, #52]	; 0x34
 8026fa8:	a80a      	add	r0, sp, #40	; 0x28
 8026faa:	f7e9 ffcb 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026fae:	fb90 f0fb 	sdiv	r0, r0, fp
 8026fb2:	eb00 0709 	add.w	r7, r0, r9
 8026fb6:	4620      	mov	r0, r4
 8026fb8:	f7ff fb42 	bl	8026640 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026fbc:	a90c      	add	r1, sp, #48	; 0x30
 8026fbe:	900c      	str	r0, [sp, #48]	; 0x30
 8026fc0:	a80a      	add	r0, sp, #40	; 0x28
 8026fc2:	f7e9 ffbf 	bl	8010f44 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026fc6:	4639      	mov	r1, r7
 8026fc8:	fb90 f2fb 	sdiv	r2, r0, fp
 8026fcc:	a80e      	add	r0, sp, #56	; 0x38
 8026fce:	eba8 0202 	sub.w	r2, r8, r2
 8026fd2:	f7ff fabe 	bl	8026552 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026fd6:	4454      	add	r4, sl
 8026fd8:	e7de      	b.n	8026f98 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8026fda:	2400      	movs	r4, #0
 8026fdc:	e6eb      	b.n	8026db6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8026fde:	bf00      	nop
 8026fe0:	0802e878 	.word	0x0802e878

08026fe4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026fe4:	b570      	push	{r4, r5, r6, lr}
 8026fe6:	790b      	ldrb	r3, [r1, #4]
 8026fe8:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026fec:	2b00      	cmp	r3, #0
 8026fee:	bf0c      	ite	eq
 8026ff0:	2301      	moveq	r3, #1
 8026ff2:	2300      	movne	r3, #0
 8026ff4:	4604      	mov	r4, r0
 8026ff6:	460e      	mov	r6, r1
 8026ff8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026ffc:	d109      	bne.n	8027012 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026ffe:	b14d      	cbz	r5, 8027014 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027000:	7933      	ldrb	r3, [r6, #4]
 8027002:	2b01      	cmp	r3, #1
 8027004:	d10c      	bne.n	8027020 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027006:	6823      	ldr	r3, [r4, #0]
 8027008:	4620      	mov	r0, r4
 802700a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802700c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027010:	4718      	bx	r3
 8027012:	b12d      	cbz	r5, 8027020 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027014:	6823      	ldr	r3, [r4, #0]
 8027016:	4620      	mov	r0, r4
 8027018:	695b      	ldr	r3, [r3, #20]
 802701a:	4798      	blx	r3
 802701c:	2d00      	cmp	r5, #0
 802701e:	d1ef      	bne.n	8027000 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027020:	bd70      	pop	{r4, r5, r6, pc}

08027022 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027022:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027026:	4770      	bx	lr

08027028 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027028:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802702c:	4770      	bx	lr

0802702e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802702e:	6802      	ldr	r2, [r0, #0]
 8027030:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027034:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027036:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802703a:	4710      	bx	r2

0802703c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802703c:	6802      	ldr	r2, [r0, #0]
 802703e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027042:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027044:	eef0 0a40 	vmov.f32	s1, s0
 8027048:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802704c:	4710      	bx	r2

0802704e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802704e:	6802      	ldr	r2, [r0, #0]
 8027050:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027054:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027056:	eeb0 1a40 	vmov.f32	s2, s0
 802705a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802705e:	4710      	bx	r2

08027060 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027060:	6802      	ldr	r2, [r0, #0]
 8027062:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027066:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027068:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802706c:	4710      	bx	r2

0802706e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802706e:	6802      	ldr	r2, [r0, #0]
 8027070:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027074:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027076:	eef0 0a40 	vmov.f32	s1, s0
 802707a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802707e:	4710      	bx	r2

08027080 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027080:	6802      	ldr	r2, [r0, #0]
 8027082:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027086:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027088:	eeb0 1a40 	vmov.f32	s2, s0
 802708c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027090:	4710      	bx	r2

08027092 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027092:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027096:	4770      	bx	lr

08027098 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027098:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802709c:	4770      	bx	lr

0802709e <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802709e:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 80270a2:	4770      	bx	lr

080270a4 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 80270a4:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 80270a8:	4770      	bx	lr

080270aa <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 80270aa:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 80270ae:	4770      	bx	lr

080270b0 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 80270b0:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 80270b4:	4770      	bx	lr

080270b6 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 80270b6:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 80270ba:	4770      	bx	lr

080270bc <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 80270bc:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 80270c0:	4770      	bx	lr

080270c2 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 80270c2:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 80270c6:	4770      	bx	lr

080270c8 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 80270c8:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 80270cc:	4770      	bx	lr

080270ce <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 80270ce:	ee07 2a90 	vmov	s15, r2
 80270d2:	6803      	ldr	r3, [r0, #0]
 80270d4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80270d8:	ee07 1a90 	vmov	s15, r1
 80270dc:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80270e0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80270e4:	4718      	bx	r3

080270e6 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 80270e6:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 80270ea:	4770      	bx	lr

080270ec <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 80270ec:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 80270f0:	4770      	bx	lr

080270f2 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 80270f2:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 80270f6:	4770      	bx	lr

080270f8 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 80270f8:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 80270fc:	4770      	bx	lr

080270fe <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 80270fe:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027102:	4770      	bx	lr

08027104 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027104:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027108:	4770      	bx	lr

0802710a <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802710a:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802710e:	4770      	bx	lr

08027110 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027110:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027114:	4770      	bx	lr

08027116 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027116:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802711a:	4770      	bx	lr

0802711c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802711c:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027120:	4770      	bx	lr

08027122 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027122:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027126:	4770      	bx	lr

08027128 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027128:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802712c:	4770      	bx	lr

0802712e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802712e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027132:	4770      	bx	lr

08027134 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027134:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027138:	4770      	bx	lr

0802713a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802713a:	b510      	push	{r4, lr}
 802713c:	ed2d 8b04 	vpush	{d8-d9}
 8027140:	6803      	ldr	r3, [r0, #0]
 8027142:	4604      	mov	r4, r0
 8027144:	699b      	ldr	r3, [r3, #24]
 8027146:	eeb0 8a40 	vmov.f32	s16, s0
 802714a:	eef0 8a60 	vmov.f32	s17, s1
 802714e:	eeb0 9a41 	vmov.f32	s18, s2
 8027152:	4798      	blx	r3
 8027154:	6823      	ldr	r3, [r4, #0]
 8027156:	4620      	mov	r0, r4
 8027158:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802715a:	eeb0 1a49 	vmov.f32	s2, s18
 802715e:	eef0 0a68 	vmov.f32	s1, s17
 8027162:	eeb0 0a48 	vmov.f32	s0, s16
 8027166:	4798      	blx	r3
 8027168:	ecbd 8b04 	vpop	{d8-d9}
 802716c:	6823      	ldr	r3, [r4, #0]
 802716e:	4620      	mov	r0, r4
 8027170:	699b      	ldr	r3, [r3, #24]
 8027172:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027176:	4718      	bx	r3

08027178 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027178:	b510      	push	{r4, lr}
 802717a:	ed2d 8b02 	vpush	{d8}
 802717e:	6803      	ldr	r3, [r0, #0]
 8027180:	4604      	mov	r4, r0
 8027182:	699b      	ldr	r3, [r3, #24]
 8027184:	eeb0 8a40 	vmov.f32	s16, s0
 8027188:	4798      	blx	r3
 802718a:	6823      	ldr	r3, [r4, #0]
 802718c:	4620      	mov	r0, r4
 802718e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027192:	eeb0 0a48 	vmov.f32	s0, s16
 8027196:	4798      	blx	r3
 8027198:	ecbd 8b02 	vpop	{d8}
 802719c:	6823      	ldr	r3, [r4, #0]
 802719e:	4620      	mov	r0, r4
 80271a0:	699b      	ldr	r3, [r3, #24]
 80271a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80271a6:	4718      	bx	r3

080271a8 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 80271a8:	2200      	movs	r2, #0
 80271aa:	8002      	strh	r2, [r0, #0]
 80271ac:	8042      	strh	r2, [r0, #2]
 80271ae:	8082      	strh	r2, [r0, #4]
 80271b0:	80c2      	strh	r2, [r0, #6]
 80271b2:	4770      	bx	lr

080271b4 <_ZN8touchgfx13TextureMapperD1Ev>:
 80271b4:	4770      	bx	lr

080271b6 <_ZN8touchgfx13TextureMapperD0Ev>:
 80271b6:	b510      	push	{r4, lr}
 80271b8:	2190      	movs	r1, #144	; 0x90
 80271ba:	4604      	mov	r4, r0
 80271bc:	f001 ff3f 	bl	802903e <_ZdlPvj>
 80271c0:	4620      	mov	r0, r4
 80271c2:	bd10      	pop	{r4, pc}

080271c4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 80271c4:	b538      	push	{r3, r4, r5, lr}
 80271c6:	2500      	movs	r5, #0
 80271c8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80271cc:	2301      	movs	r3, #1
 80271ce:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 80271d2:	4b1f      	ldr	r3, [pc, #124]	; (8027250 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 80271d4:	8085      	strh	r5, [r0, #4]
 80271d6:	80c5      	strh	r5, [r0, #6]
 80271d8:	8105      	strh	r5, [r0, #8]
 80271da:	8145      	strh	r5, [r0, #10]
 80271dc:	8185      	strh	r5, [r0, #12]
 80271de:	81c5      	strh	r5, [r0, #14]
 80271e0:	8205      	strh	r5, [r0, #16]
 80271e2:	8245      	strh	r5, [r0, #18]
 80271e4:	61c5      	str	r5, [r0, #28]
 80271e6:	8405      	strh	r5, [r0, #32]
 80271e8:	8445      	strh	r5, [r0, #34]	; 0x22
 80271ea:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 80271ee:	6003      	str	r3, [r0, #0]
 80271f0:	880b      	ldrh	r3, [r1, #0]
 80271f2:	84c3      	strh	r3, [r0, #38]	; 0x26
 80271f4:	23ff      	movs	r3, #255	; 0xff
 80271f6:	4604      	mov	r4, r0
 80271f8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80271fc:	f7eb f99f 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027200:	4b14      	ldr	r3, [pc, #80]	; (8027254 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027202:	6023      	str	r3, [r4, #0]
 8027204:	2300      	movs	r3, #0
 8027206:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802720a:	4913      	ldr	r1, [pc, #76]	; (8027258 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802720c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802720e:	6323      	str	r3, [r4, #48]	; 0x30
 8027210:	6363      	str	r3, [r4, #52]	; 0x34
 8027212:	63a3      	str	r3, [r4, #56]	; 0x38
 8027214:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027216:	6463      	str	r3, [r4, #68]	; 0x44
 8027218:	64a3      	str	r3, [r4, #72]	; 0x48
 802721a:	6523      	str	r3, [r4, #80]	; 0x50
 802721c:	6563      	str	r3, [r4, #84]	; 0x54
 802721e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027220:	6623      	str	r3, [r4, #96]	; 0x60
 8027222:	66a3      	str	r3, [r4, #104]	; 0x68
 8027224:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027226:	6763      	str	r3, [r4, #116]	; 0x74
 8027228:	67a3      	str	r3, [r4, #120]	; 0x78
 802722a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802722e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027232:	230c      	movs	r3, #12
 8027234:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027238:	6422      	str	r2, [r4, #64]	; 0x40
 802723a:	64e1      	str	r1, [r4, #76]	; 0x4c
 802723c:	65a1      	str	r1, [r4, #88]	; 0x58
 802723e:	6662      	str	r2, [r4, #100]	; 0x64
 8027240:	6722      	str	r2, [r4, #112]	; 0x70
 8027242:	67e2      	str	r2, [r4, #124]	; 0x7c
 8027244:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8027248:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802724c:	4620      	mov	r0, r4
 802724e:	bd38      	pop	{r3, r4, r5, pc}
 8027250:	0802e320 	.word	0x0802e320
 8027254:	0802e904 	.word	0x0802e904
 8027258:	447a0000 	.word	0x447a0000

0802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802725c:	b570      	push	{r4, r5, r6, lr}
 802725e:	ed2d 8b04 	vpush	{d8-d9}
 8027262:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8027266:	add0      	add	r5, sp, #832	; 0x340
 8027268:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802726a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802726e:	4604      	mov	r4, r0
 8027270:	4628      	mov	r0, r5
 8027272:	f7f1 fa7f 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027276:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8027278:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802727c:	4606      	mov	r6, r0
 802727e:	4628      	mov	r0, r5
 8027280:	f7f1 faac 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027284:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8027288:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802728c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802728e:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8027292:	9312      	str	r3, [sp, #72]	; 0x48
 8027294:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027298:	1c72      	adds	r2, r6, #1
 802729a:	3001      	adds	r0, #1
 802729c:	ee76 5ac7 	vsub.f32	s11, s13, s14
 80272a0:	ee07 2a90 	vmov	s15, r2
 80272a4:	ee06 0a90 	vmov	s13, r0
 80272a8:	ee36 6a47 	vsub.f32	s12, s12, s14
 80272ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80272b0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80272b4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80272b8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80272bc:	9316      	str	r3, [sp, #88]	; 0x58
 80272be:	931a      	str	r3, [sp, #104]	; 0x68
 80272c0:	931e      	str	r3, [sp, #120]	; 0x78
 80272c2:	2300      	movs	r3, #0
 80272c4:	9320      	str	r3, [sp, #128]	; 0x80
 80272c6:	9321      	str	r3, [sp, #132]	; 0x84
 80272c8:	9322      	str	r3, [sp, #136]	; 0x88
 80272ca:	9324      	str	r3, [sp, #144]	; 0x90
 80272cc:	9325      	str	r3, [sp, #148]	; 0x94
 80272ce:	9326      	str	r3, [sp, #152]	; 0x98
 80272d0:	9328      	str	r3, [sp, #160]	; 0xa0
 80272d2:	9329      	str	r3, [sp, #164]	; 0xa4
 80272d4:	932a      	str	r3, [sp, #168]	; 0xa8
 80272d6:	932c      	str	r3, [sp, #176]	; 0xb0
 80272d8:	932d      	str	r3, [sp, #180]	; 0xb4
 80272da:	932e      	str	r3, [sp, #184]	; 0xb8
 80272dc:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80272e0:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80272e4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80272e8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80272ec:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 80272f0:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 80272f4:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 80272f8:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80272fc:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8027300:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8027304:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8027308:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802730c:	a830      	add	r0, sp, #192	; 0xc0
 802730e:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8027312:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8027316:	f000 fc43 	bl	8027ba0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802731a:	eeb1 0a49 	vneg.f32	s0, s18
 802731e:	a830      	add	r0, sp, #192	; 0xc0
 8027320:	f000 fd12 	bl	8027d48 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027324:	eeb1 0a68 	vneg.f32	s0, s17
 8027328:	f000 fd1c 	bl	8027d64 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802732c:	eeb1 0a48 	vneg.f32	s0, s16
 8027330:	f000 fd27 	bl	8027d82 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027334:	a840      	add	r0, sp, #256	; 0x100
 8027336:	f000 fc33 	bl	8027ba0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802733a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802733e:	a840      	add	r0, sp, #256	; 0x100
 8027340:	f000 fc86 	bl	8027c50 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8027344:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8027348:	f000 fcac 	bl	8027ca4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802734c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8027350:	f000 fcd1 	bl	8027cf6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8027354:	a850      	add	r0, sp, #320	; 0x140
 8027356:	f000 fc23 	bl	8027ba0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802735a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802735e:	a850      	add	r0, sp, #320	; 0x140
 8027360:	f000 fd1e 	bl	8027da0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8027364:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027368:	f000 fd26 	bl	8027db8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802736c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027370:	f000 fd2f 	bl	8027dd2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8027374:	a860      	add	r0, sp, #384	; 0x180
 8027376:	f000 fc13 	bl	8027ba0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802737a:	eeb0 0a49 	vmov.f32	s0, s18
 802737e:	a860      	add	r0, sp, #384	; 0x180
 8027380:	f000 fce2 	bl	8027d48 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027384:	eeb0 0a68 	vmov.f32	s0, s17
 8027388:	f000 fcec 	bl	8027d64 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802738c:	eeb0 0a48 	vmov.f32	s0, s16
 8027390:	f000 fcf7 	bl	8027d82 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027394:	aa50      	add	r2, sp, #320	; 0x140
 8027396:	a960      	add	r1, sp, #384	; 0x180
 8027398:	a8b0      	add	r0, sp, #704	; 0x2c0
 802739a:	f000 fc1b 	bl	8027bd4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802739e:	4628      	mov	r0, r5
 80273a0:	aa40      	add	r2, sp, #256	; 0x100
 80273a2:	a9b0      	add	r1, sp, #704	; 0x2c0
 80273a4:	f000 fc16 	bl	8027bd4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80273a8:	4629      	mov	r1, r5
 80273aa:	aa30      	add	r2, sp, #192	; 0xc0
 80273ac:	a870      	add	r0, sp, #448	; 0x1c0
 80273ae:	f000 fc11 	bl	8027bd4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80273b2:	a880      	add	r0, sp, #512	; 0x200
 80273b4:	f000 fbf4 	bl	8027ba0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80273b8:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80273bc:	a880      	add	r0, sp, #512	; 0x200
 80273be:	eeb1 0a40 	vneg.f32	s0, s0
 80273c2:	f000 fcc1 	bl	8027d48 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80273c6:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80273ca:	a880      	add	r0, sp, #512	; 0x200
 80273cc:	eeb1 0a40 	vneg.f32	s0, s0
 80273d0:	f000 fcc8 	bl	8027d64 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80273d4:	a890      	add	r0, sp, #576	; 0x240
 80273d6:	f000 fbe3 	bl	8027ba0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80273da:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 80273de:	a890      	add	r0, sp, #576	; 0x240
 80273e0:	f000 fc26 	bl	8027c30 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80273e4:	a8a0      	add	r0, sp, #640	; 0x280
 80273e6:	f000 fbdb 	bl	8027ba0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80273ea:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80273ee:	a8a0      	add	r0, sp, #640	; 0x280
 80273f0:	f000 fcaa 	bl	8027d48 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80273f4:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80273f8:	f000 fcb4 	bl	8027d64 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80273fc:	aa90      	add	r2, sp, #576	; 0x240
 80273fe:	a9a0      	add	r1, sp, #640	; 0x280
 8027400:	a8b0      	add	r0, sp, #704	; 0x2c0
 8027402:	f000 fbe7 	bl	8027bd4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027406:	4628      	mov	r0, r5
 8027408:	aa80      	add	r2, sp, #512	; 0x200
 802740a:	a9b0      	add	r1, sp, #704	; 0x2c0
 802740c:	f000 fbe2 	bl	8027bd4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027410:	4629      	mov	r1, r5
 8027412:	aa70      	add	r2, sp, #448	; 0x1c0
 8027414:	4668      	mov	r0, sp
 8027416:	466d      	mov	r5, sp
 8027418:	f000 fbdc 	bl	8027bd4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802741c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802741e:	ae70      	add	r6, sp, #448	; 0x1c0
 8027420:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027422:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027424:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027426:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027428:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802742a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802742e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8027432:	2500      	movs	r5, #0
 8027434:	0129      	lsls	r1, r5, #4
 8027436:	ab20      	add	r3, sp, #128	; 0x80
 8027438:	185e      	adds	r6, r3, r1
 802743a:	ab10      	add	r3, sp, #64	; 0x40
 802743c:	4419      	add	r1, r3
 802743e:	a870      	add	r0, sp, #448	; 0x1c0
 8027440:	f000 fb7e 	bl	8027b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8027444:	3501      	adds	r5, #1
 8027446:	2d04      	cmp	r5, #4
 8027448:	ed86 0a00 	vstr	s0, [r6]
 802744c:	edc6 0a01 	vstr	s1, [r6, #4]
 8027450:	ed86 1a02 	vstr	s2, [r6, #8]
 8027454:	edc6 1a03 	vstr	s3, [r6, #12]
 8027458:	d1ec      	bne.n	8027434 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802745a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802745e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8027462:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8027466:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802746a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802746e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027472:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8027476:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802747a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802747e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027482:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8027486:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802748a:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802748e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027492:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8027496:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802749a:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802749e:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80274a2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80274a6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80274aa:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80274ae:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80274b2:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80274b6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80274ba:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80274be:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80274c2:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80274c6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80274ca:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80274ce:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80274d2:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80274d6:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80274da:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80274de:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80274e2:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80274e6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80274ea:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80274ee:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80274f2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80274f6:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80274fa:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80274fe:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8027502:	ecbd 8b04 	vpop	{d8-d9}
 8027506:	bd70      	pop	{r4, r5, r6, pc}

08027508 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8027508:	b510      	push	{r4, lr}
 802750a:	4604      	mov	r4, r0
 802750c:	f7eb f817 	bl	801253e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027510:	4620      	mov	r0, r4
 8027512:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027516:	f7ff bea1 	b.w	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802751a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802751a:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802751e:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8027522:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8027526:	f7ff be99 	b.w	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802752a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802752a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802752e:	f7ff be95 	b.w	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027532 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8027532:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8027536:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802753a:	f7ff be8f 	b.w	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802753e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802753e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027542:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802754a:	bfd8      	it	le
 802754c:	eeb0 0a67 	vmovle.f32	s0, s15
 8027550:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8027554:	f7ff be82 	b.w	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027558 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8027558:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802755c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8027560:	f7ff be7c 	b.w	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027564 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8027564:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027568:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802756c:	f7ff be76 	b.w	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027570 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8027570:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027574:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8027578:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802757c:	f7ff be6e 	b.w	802725c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027580 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8027580:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027584:	ed2d 8b04 	vpush	{d8-d9}
 8027588:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802758c:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8027590:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8027594:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8027598:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802759c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275a0:	bf54      	ite	pl
 80275a2:	eeb0 0a69 	vmovpl.f32	s0, s19
 80275a6:	eeb0 0a48 	vmovmi.f32	s0, s16
 80275aa:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80275ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275b2:	bfd8      	it	le
 80275b4:	eeb0 0a49 	vmovle.f32	s0, s18
 80275b8:	eef4 8ac0 	vcmpe.f32	s17, s0
 80275bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275c0:	bfd8      	it	le
 80275c2:	eeb0 0a68 	vmovle.f32	s0, s17
 80275c6:	460c      	mov	r4, r1
 80275c8:	4607      	mov	r7, r0
 80275ca:	f001 fe4f 	bl	802926c <floorf>
 80275ce:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80275d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275d6:	bf58      	it	pl
 80275d8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80275dc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80275e0:	bf56      	itet	pl
 80275e2:	ee10 3a10 	vmovpl	r3, s0
 80275e6:	2600      	movmi	r6, #0
 80275e8:	b21e      	sxthpl	r6, r3
 80275ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275ee:	bfd8      	it	le
 80275f0:	eeb0 8a69 	vmovle.f32	s16, s19
 80275f4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80275f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275fc:	bf58      	it	pl
 80275fe:	eeb0 8a49 	vmovpl.f32	s16, s18
 8027602:	eef4 8ac8 	vcmpe.f32	s17, s16
 8027606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802760a:	bf54      	ite	pl
 802760c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027610:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027614:	f001 fde8 	bl	80291e8 <ceilf>
 8027618:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802761c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027620:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8027624:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027628:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802762c:	ee07 8a90 	vmov	s15, r8
 8027630:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027634:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802763c:	bfd8      	it	le
 802763e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027642:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027646:	bfdc      	itt	le
 8027648:	ee10 3a10 	vmovle	r3, s0
 802764c:	fa0f f883 	sxthle.w	r8, r3
 8027650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027654:	bf54      	ite	pl
 8027656:	eeb0 0a69 	vmovpl.f32	s0, s19
 802765a:	eeb0 0a48 	vmovmi.f32	s0, s16
 802765e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027666:	bfd8      	it	le
 8027668:	eeb0 0a49 	vmovle.f32	s0, s18
 802766c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027674:	bfd8      	it	le
 8027676:	eeb0 0a68 	vmovle.f32	s0, s17
 802767a:	f001 fdf7 	bl	802926c <floorf>
 802767e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027682:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027686:	bf58      	it	pl
 8027688:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802768c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027690:	bf56      	itet	pl
 8027692:	ee10 3a10 	vmovpl	r3, s0
 8027696:	2500      	movmi	r5, #0
 8027698:	b21d      	sxthpl	r5, r3
 802769a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802769e:	bfd8      	it	le
 80276a0:	eeb0 8a69 	vmovle.f32	s16, s19
 80276a4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80276a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80276ac:	bf58      	it	pl
 80276ae:	eeb0 8a49 	vmovpl.f32	s16, s18
 80276b2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80276b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80276ba:	bf54      	ite	pl
 80276bc:	eeb0 0a68 	vmovpl.f32	s0, s17
 80276c0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80276c4:	f001 fd90 	bl	80291e8 <ceilf>
 80276c8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80276cc:	803e      	strh	r6, [r7, #0]
 80276ce:	ee07 3a90 	vmov	s15, r3
 80276d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80276d6:	807d      	strh	r5, [r7, #2]
 80276d8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80276dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80276e0:	bfd8      	it	le
 80276e2:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80276e6:	eba8 0606 	sub.w	r6, r8, r6
 80276ea:	bfdc      	itt	le
 80276ec:	ee10 3a10 	vmovle	r3, s0
 80276f0:	b21b      	sxthle	r3, r3
 80276f2:	1b5d      	subs	r5, r3, r5
 80276f4:	80be      	strh	r6, [r7, #4]
 80276f6:	80fd      	strh	r5, [r7, #6]
 80276f8:	ecbd 8b04 	vpop	{d8-d9}
 80276fc:	4638      	mov	r0, r7
 80276fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08027702 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8027702:	b513      	push	{r0, r1, r4, lr}
 8027704:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027708:	4604      	mov	r4, r0
 802770a:	b143      	cbz	r3, 802771e <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802770c:	4601      	mov	r1, r0
 802770e:	4668      	mov	r0, sp
 8027710:	f7ff ff36 	bl	8027580 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8027714:	6823      	ldr	r3, [r4, #0]
 8027716:	4669      	mov	r1, sp
 8027718:	691b      	ldr	r3, [r3, #16]
 802771a:	4620      	mov	r0, r4
 802771c:	4798      	blx	r3
 802771e:	b002      	add	sp, #8
 8027720:	bd10      	pop	{r4, pc}

08027722 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8027722:	4603      	mov	r3, r0
 8027724:	3026      	adds	r0, #38	; 0x26
 8027726:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802772a:	b90b      	cbnz	r3, 8027730 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802772c:	f7ee be38 	b.w	80163a0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027730:	f7ee be46 	b.w	80163c0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08027734 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8027734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027738:	ed2d 8b04 	vpush	{d8-d9}
 802773c:	4604      	mov	r4, r0
 802773e:	469b      	mov	fp, r3
 8027740:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8027744:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027748:	f9b1 6000 	ldrsh.w	r6, [r1]
 802774c:	8888      	ldrh	r0, [r1, #4]
 802774e:	b0b3      	sub	sp, #204	; 0xcc
 8027750:	4430      	add	r0, r6
 8027752:	b280      	uxth	r0, r0
 8027754:	9206      	str	r2, [sp, #24]
 8027756:	fa0f fe80 	sxth.w	lr, r0
 802775a:	2200      	movs	r2, #0
 802775c:	4596      	cmp	lr, r2
 802775e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8027762:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8027766:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802776a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802776c:	9211      	str	r2, [sp, #68]	; 0x44
 802776e:	f340 8129 	ble.w	80279c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027772:	45b4      	cmp	ip, r6
 8027774:	f340 8126 	ble.w	80279c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027778:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802777c:	88ca      	ldrh	r2, [r1, #6]
 802777e:	442a      	add	r2, r5
 8027780:	b292      	uxth	r2, r2
 8027782:	b211      	sxth	r1, r2
 8027784:	2900      	cmp	r1, #0
 8027786:	f340 811d 	ble.w	80279c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802778a:	42ab      	cmp	r3, r5
 802778c:	f340 811a 	ble.w	80279c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027790:	45f4      	cmp	ip, lr
 8027792:	bfb8      	it	lt
 8027794:	fa1f f08c 	uxthlt.w	r0, ip
 8027798:	428b      	cmp	r3, r1
 802779a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802779e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80277a2:	bfb8      	it	lt
 80277a4:	b29a      	uxthlt	r2, r3
 80277a6:	1b80      	subs	r0, r0, r6
 80277a8:	1b52      	subs	r2, r2, r5
 80277aa:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80277ae:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80277b2:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80277b6:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80277ba:	ab11      	add	r3, sp, #68	; 0x44
 80277bc:	e893 0003 	ldmia.w	r3, {r0, r1}
 80277c0:	6822      	ldr	r2, [r4, #0]
 80277c2:	9307      	str	r3, [sp, #28]
 80277c4:	ad13      	add	r5, sp, #76	; 0x4c
 80277c6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80277c8:	e885 0003 	stmia.w	r5, {r0, r1}
 80277cc:	4629      	mov	r1, r5
 80277ce:	4620      	mov	r0, r4
 80277d0:	4790      	blx	r2
 80277d2:	4621      	mov	r1, r4
 80277d4:	a815      	add	r0, sp, #84	; 0x54
 80277d6:	f7ee fd3f 	bl	8016258 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80277da:	a815      	add	r0, sp, #84	; 0x54
 80277dc:	f7ed fa04 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80277e0:	9b07      	ldr	r3, [sp, #28]
 80277e2:	1d26      	adds	r6, r4, #4
 80277e4:	4618      	mov	r0, r3
 80277e6:	4631      	mov	r1, r6
 80277e8:	f7ed fa42 	bl	8014c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80277ec:	4628      	mov	r0, r5
 80277ee:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80277f2:	f7ed f9f9 	bl	8014be8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80277f6:	4628      	mov	r0, r5
 80277f8:	f7f1 f8a8 	bl	801894c <_ZNK8touchgfx6Bitmap7getDataEv>
 80277fc:	9007      	str	r0, [sp, #28]
 80277fe:	2800      	cmp	r0, #0
 8027800:	f000 80db 	beq.w	80279ba <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8027804:	f8db 2000 	ldr.w	r2, [fp]
 8027808:	9209      	str	r2, [sp, #36]	; 0x24
 802780a:	f8db 2004 	ldr.w	r2, [fp, #4]
 802780e:	920a      	str	r2, [sp, #40]	; 0x28
 8027810:	f8db 2008 	ldr.w	r2, [fp, #8]
 8027814:	920b      	str	r2, [sp, #44]	; 0x2c
 8027816:	f8db 200c 	ldr.w	r2, [fp, #12]
 802781a:	920c      	str	r2, [sp, #48]	; 0x30
 802781c:	f8da 2000 	ldr.w	r2, [sl]
 8027820:	920d      	str	r2, [sp, #52]	; 0x34
 8027822:	f8da 2004 	ldr.w	r2, [sl, #4]
 8027826:	920e      	str	r2, [sp, #56]	; 0x38
 8027828:	f8da 2008 	ldr.w	r2, [sl, #8]
 802782c:	920f      	str	r2, [sp, #60]	; 0x3c
 802782e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8027832:	9210      	str	r2, [sp, #64]	; 0x40
 8027834:	a90d      	add	r1, sp, #52	; 0x34
 8027836:	4632      	mov	r2, r6
 8027838:	a809      	add	r0, sp, #36	; 0x24
 802783a:	f7ed f9fd 	bl	8014c38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802783e:	4632      	mov	r2, r6
 8027840:	a90e      	add	r1, sp, #56	; 0x38
 8027842:	a80a      	add	r0, sp, #40	; 0x28
 8027844:	f7ed f9f8 	bl	8014c38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027848:	4632      	mov	r2, r6
 802784a:	a90f      	add	r1, sp, #60	; 0x3c
 802784c:	a80b      	add	r0, sp, #44	; 0x2c
 802784e:	f7ed f9f3 	bl	8014c38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027852:	4632      	mov	r2, r6
 8027854:	a910      	add	r1, sp, #64	; 0x40
 8027856:	a80c      	add	r0, sp, #48	; 0x30
 8027858:	f7ed f9ee 	bl	8014c38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802785c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8027860:	edd7 4a00 	vldr	s9, [r7]
 8027864:	edd7 5a01 	vldr	s11, [r7, #4]
 8027868:	ed98 4a00 	vldr	s8, [r8]
 802786c:	ed98 5a01 	vldr	s10, [r8, #4]
 8027870:	ed99 9a00 	vldr	s18, [r9]
 8027874:	ed99 8a01 	vldr	s16, [r9, #4]
 8027878:	edd9 8a02 	vldr	s17, [r9, #8]
 802787c:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8027880:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8027884:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8027888:	eef0 6a67 	vmov.f32	s13, s15
 802788c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8027890:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8027894:	eeb0 7a67 	vmov.f32	s14, s15
 8027898:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802789c:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80278a0:	eeb0 6a67 	vmov.f32	s12, s15
 80278a4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80278a8:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80278ac:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80278b0:	ee16 6a10 	vmov	r6, s12
 80278b4:	eeb0 6a67 	vmov.f32	s12, s15
 80278b8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80278bc:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80278c0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80278c4:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80278c8:	68ff      	ldr	r7, [r7, #12]
 80278ca:	9624      	str	r6, [sp, #144]	; 0x90
 80278cc:	ee16 0a10 	vmov	r0, s12
 80278d0:	eeb0 6a67 	vmov.f32	s12, s15
 80278d4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80278d8:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80278dc:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80278e0:	ee16 1a10 	vmov	r1, s12
 80278e4:	eeb0 6a67 	vmov.f32	s12, s15
 80278e8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80278ec:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80278f0:	ee16 2a10 	vmov	r2, s12
 80278f4:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80278f8:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80278fc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027900:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8027904:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027908:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802790c:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027910:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8027914:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027918:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802791c:	922d      	str	r2, [sp, #180]	; 0xb4
 802791e:	4a2b      	ldr	r2, [pc, #172]	; (80279cc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027920:	9b06      	ldr	r3, [sp, #24]
 8027922:	8812      	ldrh	r2, [r2, #0]
 8027924:	9317      	str	r3, [sp, #92]	; 0x5c
 8027926:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802792a:	9b07      	ldr	r3, [sp, #28]
 802792c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027930:	4628      	mov	r0, r5
 8027932:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8027936:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802793a:	9218      	str	r2, [sp, #96]	; 0x60
 802793c:	9319      	str	r3, [sp, #100]	; 0x64
 802793e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8027942:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8027946:	9731      	str	r7, [sp, #196]	; 0xc4
 8027948:	f7f1 f830 	bl	80189ac <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802794c:	901a      	str	r0, [sp, #104]	; 0x68
 802794e:	4628      	mov	r0, r5
 8027950:	f7f0 ff10 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027954:	901b      	str	r0, [sp, #108]	; 0x6c
 8027956:	4628      	mov	r0, r5
 8027958:	f7f0 ff40 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 802795c:	901c      	str	r0, [sp, #112]	; 0x70
 802795e:	4628      	mov	r0, r5
 8027960:	f7f0 ff08 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027964:	eeb4 9a48 	vcmp.f32	s18, s16
 8027968:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802796c:	901d      	str	r0, [sp, #116]	; 0x74
 802796e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8027972:	d107      	bne.n	8027984 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8027974:	eeb4 8a68 	vcmp.f32	s16, s17
 8027978:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802797c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027980:	bf08      	it	eq
 8027982:	461e      	moveq	r6, r3
 8027984:	4b12      	ldr	r3, [pc, #72]	; (80279d0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8027986:	681b      	ldr	r3, [r3, #0]
 8027988:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802798c:	b10a      	cbz	r2, 8027992 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802798e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8027990:	b905      	cbnz	r5, 8027994 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8027992:	689d      	ldr	r5, [r3, #8]
 8027994:	682b      	ldr	r3, [r5, #0]
 8027996:	4620      	mov	r0, r4
 8027998:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802799a:	f7ff fec2 	bl	8027722 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802799e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80279a2:	9604      	str	r6, [sp, #16]
 80279a4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80279a8:	ab13      	add	r3, sp, #76	; 0x4c
 80279aa:	9301      	str	r3, [sp, #4]
 80279ac:	ab15      	add	r3, sp, #84	; 0x54
 80279ae:	9300      	str	r3, [sp, #0]
 80279b0:	aa1e      	add	r2, sp, #120	; 0x78
 80279b2:	ab19      	add	r3, sp, #100	; 0x64
 80279b4:	a917      	add	r1, sp, #92	; 0x5c
 80279b6:	4628      	mov	r0, r5
 80279b8:	47b8      	blx	r7
 80279ba:	b033      	add	sp, #204	; 0xcc
 80279bc:	ecbd 8b04 	vpop	{d8-d9}
 80279c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80279c4:	2300      	movs	r3, #0
 80279c6:	9312      	str	r3, [sp, #72]	; 0x48
 80279c8:	e6f7      	b.n	80277ba <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80279ca:	bf00      	nop
 80279cc:	20012e76 	.word	0x20012e76
 80279d0:	20012e7c 	.word	0x20012e7c

080279d4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80279d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80279d8:	ed2d 8b02 	vpush	{d8}
 80279dc:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80279e0:	b098      	sub	sp, #96	; 0x60
 80279e2:	4604      	mov	r4, r0
 80279e4:	4688      	mov	r8, r1
 80279e6:	2b00      	cmp	r3, #0
 80279e8:	d077      	beq.n	8027ada <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80279ea:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80279ee:	4628      	mov	r0, r5
 80279f0:	f7f0 fec0 	bl	8018774 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80279f4:	ee07 0a90 	vmov	s15, r0
 80279f8:	4628      	mov	r0, r5
 80279fa:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80279fe:	f7f0 feed 	bl	80187dc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027a02:	4b4e      	ldr	r3, [pc, #312]	; (8027b3c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8027a04:	781b      	ldrb	r3, [r3, #0]
 8027a06:	ee07 0a90 	vmov	s15, r0
 8027a0a:	2b01      	cmp	r3, #1
 8027a0c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027a10:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8027a14:	d066      	beq.n	8027ae4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8027a16:	eeb0 6a47 	vmov.f32	s12, s14
 8027a1a:	ee17 3a10 	vmov	r3, s14
 8027a1e:	eeb0 4a48 	vmov.f32	s8, s16
 8027a22:	eeb0 7a48 	vmov.f32	s14, s16
 8027a26:	eef0 4a67 	vmov.f32	s9, s15
 8027a2a:	eeb0 8a67 	vmov.f32	s16, s15
 8027a2e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8027a32:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8027a36:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8027a3a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8027a3e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8027a42:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8027a46:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8027a48:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8027a4a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8027a4c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8027a50:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8027a54:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027a58:	ee73 1a65 	vsub.f32	s3, s6, s11
 8027a5c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8027a60:	ee32 1a45 	vsub.f32	s2, s4, s10
 8027a64:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8027a68:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8027a6c:	eee1 6a21 	vfma.f32	s13, s2, s3
 8027a70:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8027a74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a78:	dd3d      	ble.n	8027af6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8027a7a:	ed8d 5a04 	vstr	s10, [sp, #16]
 8027a7e:	ed8d 2a05 	vstr	s4, [sp, #20]
 8027a82:	edcd 2a06 	vstr	s5, [sp, #24]
 8027a86:	f8cd c01c 	str.w	ip, [sp, #28]
 8027a8a:	edcd 5a08 	vstr	s11, [sp, #32]
 8027a8e:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8027a92:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8027a96:	970b      	str	r7, [sp, #44]	; 0x2c
 8027a98:	960c      	str	r6, [sp, #48]	; 0x30
 8027a9a:	950d      	str	r5, [sp, #52]	; 0x34
 8027a9c:	920e      	str	r2, [sp, #56]	; 0x38
 8027a9e:	900f      	str	r0, [sp, #60]	; 0x3c
 8027aa0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8027aa4:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027aa8:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8027aac:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027ab0:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8027ab4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027ab8:	9316      	str	r3, [sp, #88]	; 0x58
 8027aba:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8027abe:	ab14      	add	r3, sp, #80	; 0x50
 8027ac0:	9303      	str	r3, [sp, #12]
 8027ac2:	ab10      	add	r3, sp, #64	; 0x40
 8027ac4:	9302      	str	r3, [sp, #8]
 8027ac6:	ab0c      	add	r3, sp, #48	; 0x30
 8027ac8:	9301      	str	r3, [sp, #4]
 8027aca:	ab08      	add	r3, sp, #32
 8027acc:	9300      	str	r3, [sp, #0]
 8027ace:	2200      	movs	r2, #0
 8027ad0:	ab04      	add	r3, sp, #16
 8027ad2:	4641      	mov	r1, r8
 8027ad4:	4620      	mov	r0, r4
 8027ad6:	f7ff fe2d 	bl	8027734 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8027ada:	b018      	add	sp, #96	; 0x60
 8027adc:	ecbd 8b02 	vpop	{d8}
 8027ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027ae4:	eeb0 6a48 	vmov.f32	s12, s16
 8027ae8:	eef0 4a47 	vmov.f32	s9, s14
 8027aec:	ee17 3a90 	vmov	r3, s15
 8027af0:	eeb0 4a67 	vmov.f32	s8, s15
 8027af4:	e79b      	b.n	8027a2e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8027af6:	ed8d 5a05 	vstr	s10, [sp, #20]
 8027afa:	ed8d 2a04 	vstr	s4, [sp, #16]
 8027afe:	f8cd c018 	str.w	ip, [sp, #24]
 8027b02:	edcd 2a07 	vstr	s5, [sp, #28]
 8027b06:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8027b0a:	ed8d 3a08 	vstr	s6, [sp, #32]
 8027b0e:	970a      	str	r7, [sp, #40]	; 0x28
 8027b10:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8027b14:	960d      	str	r6, [sp, #52]	; 0x34
 8027b16:	950c      	str	r5, [sp, #48]	; 0x30
 8027b18:	900e      	str	r0, [sp, #56]	; 0x38
 8027b1a:	920f      	str	r2, [sp, #60]	; 0x3c
 8027b1c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027b20:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8027b24:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027b28:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027b2c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027b30:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027b34:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8027b38:	9317      	str	r3, [sp, #92]	; 0x5c
 8027b3a:	e7c0      	b.n	8027abe <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8027b3c:	20012e74 	.word	0x20012e74

08027b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8027b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027b42:	b08d      	sub	sp, #52	; 0x34
 8027b44:	2300      	movs	r3, #0
 8027b46:	9304      	str	r3, [sp, #16]
 8027b48:	9305      	str	r3, [sp, #20]
 8027b4a:	9306      	str	r3, [sp, #24]
 8027b4c:	aa04      	add	r2, sp, #16
 8027b4e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8027b52:	9307      	str	r3, [sp, #28]
 8027b54:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8027b58:	4613      	mov	r3, r2
 8027b5a:	f101 0710 	add.w	r7, r1, #16
 8027b5e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027b9c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8027b62:	460c      	mov	r4, r1
 8027b64:	4605      	mov	r5, r0
 8027b66:	ecb4 7a01 	vldmia	r4!, {s14}
 8027b6a:	ecf5 6a01 	vldmia	r5!, {s13}
 8027b6e:	42bc      	cmp	r4, r7
 8027b70:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027b74:	d1f7      	bne.n	8027b66 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8027b76:	3010      	adds	r0, #16
 8027b78:	42b0      	cmp	r0, r6
 8027b7a:	ece2 7a01 	vstmia	r2!, {s15}
 8027b7e:	d1ee      	bne.n	8027b5e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8027b80:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8027b82:	ac0c      	add	r4, sp, #48	; 0x30
 8027b84:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8027b88:	ed9d 0a08 	vldr	s0, [sp, #32]
 8027b8c:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8027b90:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8027b94:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8027b98:	b00d      	add	sp, #52	; 0x34
 8027b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027b9c:	00000000 	.word	0x00000000

08027ba0 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8027ba0:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8027bd0 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8027ba4:	2300      	movs	r3, #0
 8027ba6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027baa:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8027bae:	2200      	movs	r2, #0
 8027bb0:	4293      	cmp	r3, r2
 8027bb2:	f102 0201 	add.w	r2, r2, #1
 8027bb6:	bf14      	ite	ne
 8027bb8:	eef0 6a47 	vmovne.f32	s13, s14
 8027bbc:	eef0 6a67 	vmoveq.f32	s13, s15
 8027bc0:	2a04      	cmp	r2, #4
 8027bc2:	ece1 6a01 	vstmia	r1!, {s13}
 8027bc6:	d1f3      	bne.n	8027bb0 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8027bc8:	3301      	adds	r3, #1
 8027bca:	2b04      	cmp	r3, #4
 8027bcc:	d1ed      	bne.n	8027baa <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8027bce:	4770      	bx	lr
 8027bd0:	00000000 	.word	0x00000000

08027bd4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8027bd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027bd8:	460c      	mov	r4, r1
 8027bda:	4605      	mov	r5, r0
 8027bdc:	4690      	mov	r8, r2
 8027bde:	f7ff ffdf 	bl	8027ba0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027be2:	4628      	mov	r0, r5
 8027be4:	4621      	mov	r1, r4
 8027be6:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8027bea:	2300      	movs	r3, #0
 8027bec:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027c2c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8027bf0:	eb08 0603 	add.w	r6, r8, r3
 8027bf4:	460f      	mov	r7, r1
 8027bf6:	2400      	movs	r4, #0
 8027bf8:	4632      	mov	r2, r6
 8027bfa:	ecf7 6a01 	vldmia	r7!, {s13}
 8027bfe:	ed92 7a00 	vldr	s14, [r2]
 8027c02:	3401      	adds	r4, #1
 8027c04:	2c04      	cmp	r4, #4
 8027c06:	f106 0610 	add.w	r6, r6, #16
 8027c0a:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027c0e:	d1f3      	bne.n	8027bf8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8027c10:	18c2      	adds	r2, r0, r3
 8027c12:	3304      	adds	r3, #4
 8027c14:	2b10      	cmp	r3, #16
 8027c16:	edc2 7a00 	vstr	s15, [r2]
 8027c1a:	d1e7      	bne.n	8027bec <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8027c1c:	3110      	adds	r1, #16
 8027c1e:	4561      	cmp	r1, ip
 8027c20:	f100 0010 	add.w	r0, r0, #16
 8027c24:	d1e1      	bne.n	8027bea <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8027c26:	4628      	mov	r0, r5
 8027c28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027c2c:	00000000 	.word	0x00000000

08027c30 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8027c30:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027c34:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8027c38:	f100 0320 	add.w	r3, r0, #32
 8027c3c:	3030      	adds	r0, #48	; 0x30
 8027c3e:	ecf3 7a01 	vldmia	r3!, {s15}
 8027c42:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027c46:	4283      	cmp	r3, r0
 8027c48:	edc3 7a03 	vstr	s15, [r3, #12]
 8027c4c:	d1f7      	bne.n	8027c3e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8027c4e:	4770      	bx	lr

08027c50 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8027c50:	b510      	push	{r4, lr}
 8027c52:	ed2d 8b02 	vpush	{d8}
 8027c56:	4604      	mov	r4, r0
 8027c58:	eef0 8a40 	vmov.f32	s17, s0
 8027c5c:	f001 fa7a 	bl	8029154 <sinf>
 8027c60:	eeb0 8a40 	vmov.f32	s16, s0
 8027c64:	eeb0 0a68 	vmov.f32	s0, s17
 8027c68:	f001 fa30 	bl	80290cc <cosf>
 8027c6c:	f104 0310 	add.w	r3, r4, #16
 8027c70:	f104 0220 	add.w	r2, r4, #32
 8027c74:	eeb1 6a48 	vneg.f32	s12, s16
 8027c78:	edd3 7a04 	vldr	s15, [r3, #16]
 8027c7c:	edd3 6a00 	vldr	s13, [r3]
 8027c80:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027c84:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027c88:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027c8c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027c90:	eca3 7a01 	vstmia	r3!, {s14}
 8027c94:	429a      	cmp	r2, r3
 8027c96:	edc3 7a03 	vstr	s15, [r3, #12]
 8027c9a:	d1ed      	bne.n	8027c78 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8027c9c:	ecbd 8b02 	vpop	{d8}
 8027ca0:	4620      	mov	r0, r4
 8027ca2:	bd10      	pop	{r4, pc}

08027ca4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8027ca4:	b510      	push	{r4, lr}
 8027ca6:	ed2d 8b02 	vpush	{d8}
 8027caa:	4604      	mov	r4, r0
 8027cac:	eef0 8a40 	vmov.f32	s17, s0
 8027cb0:	f001 fa50 	bl	8029154 <sinf>
 8027cb4:	eeb0 8a40 	vmov.f32	s16, s0
 8027cb8:	eeb0 0a68 	vmov.f32	s0, s17
 8027cbc:	f001 fa06 	bl	80290cc <cosf>
 8027cc0:	4623      	mov	r3, r4
 8027cc2:	f104 0210 	add.w	r2, r4, #16
 8027cc6:	eeb1 6a48 	vneg.f32	s12, s16
 8027cca:	edd3 7a08 	vldr	s15, [r3, #32]
 8027cce:	edd3 6a00 	vldr	s13, [r3]
 8027cd2:	ee27 7a88 	vmul.f32	s14, s15, s16
 8027cd6:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027cda:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027cde:	eee6 7a26 	vfma.f32	s15, s12, s13
 8027ce2:	eca3 7a01 	vstmia	r3!, {s14}
 8027ce6:	429a      	cmp	r2, r3
 8027ce8:	edc3 7a07 	vstr	s15, [r3, #28]
 8027cec:	d1ed      	bne.n	8027cca <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8027cee:	ecbd 8b02 	vpop	{d8}
 8027cf2:	4620      	mov	r0, r4
 8027cf4:	bd10      	pop	{r4, pc}

08027cf6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8027cf6:	b510      	push	{r4, lr}
 8027cf8:	ed2d 8b02 	vpush	{d8}
 8027cfc:	4604      	mov	r4, r0
 8027cfe:	eef0 8a40 	vmov.f32	s17, s0
 8027d02:	f001 fa27 	bl	8029154 <sinf>
 8027d06:	eeb0 8a40 	vmov.f32	s16, s0
 8027d0a:	eeb0 0a68 	vmov.f32	s0, s17
 8027d0e:	f001 f9dd 	bl	80290cc <cosf>
 8027d12:	4623      	mov	r3, r4
 8027d14:	f104 0210 	add.w	r2, r4, #16
 8027d18:	eeb1 6a48 	vneg.f32	s12, s16
 8027d1c:	edd3 7a04 	vldr	s15, [r3, #16]
 8027d20:	edd3 6a00 	vldr	s13, [r3]
 8027d24:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027d28:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027d2c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027d30:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027d34:	eca3 7a01 	vstmia	r3!, {s14}
 8027d38:	429a      	cmp	r2, r3
 8027d3a:	edc3 7a03 	vstr	s15, [r3, #12]
 8027d3e:	d1ed      	bne.n	8027d1c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8027d40:	ecbd 8b02 	vpop	{d8}
 8027d44:	4620      	mov	r0, r4
 8027d46:	bd10      	pop	{r4, pc}

08027d48 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8027d48:	4603      	mov	r3, r0
 8027d4a:	f100 0210 	add.w	r2, r0, #16
 8027d4e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8027d52:	edd3 7a00 	vldr	s15, [r3]
 8027d56:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027d5a:	ece3 7a01 	vstmia	r3!, {s15}
 8027d5e:	4293      	cmp	r3, r2
 8027d60:	d1f5      	bne.n	8027d4e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8027d62:	4770      	bx	lr

08027d64 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8027d64:	f100 0310 	add.w	r3, r0, #16
 8027d68:	f100 0220 	add.w	r2, r0, #32
 8027d6c:	ed93 7a08 	vldr	s14, [r3, #32]
 8027d70:	edd3 7a00 	vldr	s15, [r3]
 8027d74:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027d78:	ece3 7a01 	vstmia	r3!, {s15}
 8027d7c:	4293      	cmp	r3, r2
 8027d7e:	d1f5      	bne.n	8027d6c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8027d80:	4770      	bx	lr

08027d82 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8027d82:	f100 0320 	add.w	r3, r0, #32
 8027d86:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027d8a:	ed93 7a04 	vldr	s14, [r3, #16]
 8027d8e:	edd3 7a00 	vldr	s15, [r3]
 8027d92:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027d96:	ece3 7a01 	vstmia	r3!, {s15}
 8027d9a:	4293      	cmp	r3, r2
 8027d9c:	d1f5      	bne.n	8027d8a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8027d9e:	4770      	bx	lr

08027da0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8027da0:	4603      	mov	r3, r0
 8027da2:	f100 0210 	add.w	r2, r0, #16
 8027da6:	edd3 7a00 	vldr	s15, [r3]
 8027daa:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027dae:	ece3 7a01 	vstmia	r3!, {s15}
 8027db2:	4293      	cmp	r3, r2
 8027db4:	d1f7      	bne.n	8027da6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8027db6:	4770      	bx	lr

08027db8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8027db8:	f100 0310 	add.w	r3, r0, #16
 8027dbc:	f100 0220 	add.w	r2, r0, #32
 8027dc0:	edd3 7a00 	vldr	s15, [r3]
 8027dc4:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027dc8:	ece3 7a01 	vstmia	r3!, {s15}
 8027dcc:	4293      	cmp	r3, r2
 8027dce:	d1f7      	bne.n	8027dc0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8027dd0:	4770      	bx	lr

08027dd2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8027dd2:	f100 0320 	add.w	r3, r0, #32
 8027dd6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027dda:	edd3 7a00 	vldr	s15, [r3]
 8027dde:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027de2:	ece3 7a01 	vstmia	r3!, {s15}
 8027de6:	4293      	cmp	r3, r2
 8027de8:	d1f7      	bne.n	8027dda <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8027dea:	4770      	bx	lr

08027dec <arm_max_f32>:
 8027dec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027df0:	1e4f      	subs	r7, r1, #1
 8027df2:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8027df6:	f100 0e04 	add.w	lr, r0, #4
 8027dfa:	edd0 7a00 	vldr	s15, [r0]
 8027dfe:	d058      	beq.n	8027eb2 <arm_max_f32+0xc6>
 8027e00:	3014      	adds	r0, #20
 8027e02:	46c4      	mov	ip, r8
 8027e04:	2604      	movs	r6, #4
 8027e06:	2400      	movs	r4, #0
 8027e08:	ed10 6a04 	vldr	s12, [r0, #-16]
 8027e0c:	ed50 6a03 	vldr	s13, [r0, #-12]
 8027e10:	ed10 7a02 	vldr	s14, [r0, #-8]
 8027e14:	ed50 5a01 	vldr	s11, [r0, #-4]
 8027e18:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8027e1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e20:	bfc8      	it	gt
 8027e22:	eef0 7a46 	vmovgt.f32	s15, s12
 8027e26:	f1a6 0503 	sub.w	r5, r6, #3
 8027e2a:	eef4 7ae6 	vcmpe.f32	s15, s13
 8027e2e:	bfc8      	it	gt
 8027e30:	462c      	movgt	r4, r5
 8027e32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e36:	bf48      	it	mi
 8027e38:	eef0 7a66 	vmovmi.f32	s15, s13
 8027e3c:	f1a6 0502 	sub.w	r5, r6, #2
 8027e40:	eef4 7ac7 	vcmpe.f32	s15, s14
 8027e44:	bf48      	it	mi
 8027e46:	462c      	movmi	r4, r5
 8027e48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e4c:	bf48      	it	mi
 8027e4e:	eef0 7a47 	vmovmi.f32	s15, s14
 8027e52:	f106 35ff 	add.w	r5, r6, #4294967295
 8027e56:	eef4 7ae5 	vcmpe.f32	s15, s11
 8027e5a:	bf48      	it	mi
 8027e5c:	462c      	movmi	r4, r5
 8027e5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e62:	bf48      	it	mi
 8027e64:	4634      	movmi	r4, r6
 8027e66:	bf48      	it	mi
 8027e68:	eef0 7a65 	vmovmi.f32	s15, s11
 8027e6c:	f1bc 0c01 	subs.w	ip, ip, #1
 8027e70:	f106 0604 	add.w	r6, r6, #4
 8027e74:	f100 0010 	add.w	r0, r0, #16
 8027e78:	d1c6      	bne.n	8027e08 <arm_max_f32+0x1c>
 8027e7a:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8027e7e:	f017 0003 	ands.w	r0, r7, #3
 8027e82:	d018      	beq.n	8027eb6 <arm_max_f32+0xca>
 8027e84:	1a08      	subs	r0, r1, r0
 8027e86:	ecbe 7a01 	vldmia	lr!, {s14}
 8027e8a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8027e8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e92:	bfc8      	it	gt
 8027e94:	4604      	movgt	r4, r0
 8027e96:	f100 0001 	add.w	r0, r0, #1
 8027e9a:	bfd8      	it	le
 8027e9c:	eeb0 7a67 	vmovle.f32	s14, s15
 8027ea0:	4288      	cmp	r0, r1
 8027ea2:	eef0 7a47 	vmov.f32	s15, s14
 8027ea6:	d1ee      	bne.n	8027e86 <arm_max_f32+0x9a>
 8027ea8:	ed82 7a00 	vstr	s14, [r2]
 8027eac:	601c      	str	r4, [r3, #0]
 8027eae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027eb2:	4644      	mov	r4, r8
 8027eb4:	e7e3      	b.n	8027e7e <arm_max_f32+0x92>
 8027eb6:	eeb0 7a67 	vmov.f32	s14, s15
 8027eba:	e7f5      	b.n	8027ea8 <arm_max_f32+0xbc>

08027ebc <arm_rfft_fast_init_f32>:
 8027ebc:	084b      	lsrs	r3, r1, #1
 8027ebe:	2b80      	cmp	r3, #128	; 0x80
 8027ec0:	b410      	push	{r4}
 8027ec2:	8201      	strh	r1, [r0, #16]
 8027ec4:	8003      	strh	r3, [r0, #0]
 8027ec6:	d047      	beq.n	8027f58 <arm_rfft_fast_init_f32+0x9c>
 8027ec8:	d917      	bls.n	8027efa <arm_rfft_fast_init_f32+0x3e>
 8027eca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8027ece:	d03d      	beq.n	8027f4c <arm_rfft_fast_init_f32+0x90>
 8027ed0:	d929      	bls.n	8027f26 <arm_rfft_fast_init_f32+0x6a>
 8027ed2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8027ed6:	d020      	beq.n	8027f1a <arm_rfft_fast_init_f32+0x5e>
 8027ed8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8027edc:	d113      	bne.n	8027f06 <arm_rfft_fast_init_f32+0x4a>
 8027ede:	4921      	ldr	r1, [pc, #132]	; (8027f64 <arm_rfft_fast_init_f32+0xa8>)
 8027ee0:	4a21      	ldr	r2, [pc, #132]	; (8027f68 <arm_rfft_fast_init_f32+0xac>)
 8027ee2:	4b22      	ldr	r3, [pc, #136]	; (8027f6c <arm_rfft_fast_init_f32+0xb0>)
 8027ee4:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8027ee8:	8184      	strh	r4, [r0, #12]
 8027eea:	6081      	str	r1, [r0, #8]
 8027eec:	6042      	str	r2, [r0, #4]
 8027eee:	6143      	str	r3, [r0, #20]
 8027ef0:	2000      	movs	r0, #0
 8027ef2:	b240      	sxtb	r0, r0
 8027ef4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027ef8:	4770      	bx	lr
 8027efa:	2b20      	cmp	r3, #32
 8027efc:	d01c      	beq.n	8027f38 <arm_rfft_fast_init_f32+0x7c>
 8027efe:	2b40      	cmp	r3, #64	; 0x40
 8027f00:	d006      	beq.n	8027f10 <arm_rfft_fast_init_f32+0x54>
 8027f02:	2b10      	cmp	r3, #16
 8027f04:	d01d      	beq.n	8027f42 <arm_rfft_fast_init_f32+0x86>
 8027f06:	20ff      	movs	r0, #255	; 0xff
 8027f08:	b240      	sxtb	r0, r0
 8027f0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027f0e:	4770      	bx	lr
 8027f10:	2438      	movs	r4, #56	; 0x38
 8027f12:	4917      	ldr	r1, [pc, #92]	; (8027f70 <arm_rfft_fast_init_f32+0xb4>)
 8027f14:	4a17      	ldr	r2, [pc, #92]	; (8027f74 <arm_rfft_fast_init_f32+0xb8>)
 8027f16:	4b18      	ldr	r3, [pc, #96]	; (8027f78 <arm_rfft_fast_init_f32+0xbc>)
 8027f18:	e7e6      	b.n	8027ee8 <arm_rfft_fast_init_f32+0x2c>
 8027f1a:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8027f1e:	4917      	ldr	r1, [pc, #92]	; (8027f7c <arm_rfft_fast_init_f32+0xc0>)
 8027f20:	4a17      	ldr	r2, [pc, #92]	; (8027f80 <arm_rfft_fast_init_f32+0xc4>)
 8027f22:	4b18      	ldr	r3, [pc, #96]	; (8027f84 <arm_rfft_fast_init_f32+0xc8>)
 8027f24:	e7e0      	b.n	8027ee8 <arm_rfft_fast_init_f32+0x2c>
 8027f26:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8027f2a:	d1ec      	bne.n	8027f06 <arm_rfft_fast_init_f32+0x4a>
 8027f2c:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8027f30:	4915      	ldr	r1, [pc, #84]	; (8027f88 <arm_rfft_fast_init_f32+0xcc>)
 8027f32:	4a16      	ldr	r2, [pc, #88]	; (8027f8c <arm_rfft_fast_init_f32+0xd0>)
 8027f34:	4b16      	ldr	r3, [pc, #88]	; (8027f90 <arm_rfft_fast_init_f32+0xd4>)
 8027f36:	e7d7      	b.n	8027ee8 <arm_rfft_fast_init_f32+0x2c>
 8027f38:	2430      	movs	r4, #48	; 0x30
 8027f3a:	4916      	ldr	r1, [pc, #88]	; (8027f94 <arm_rfft_fast_init_f32+0xd8>)
 8027f3c:	4a16      	ldr	r2, [pc, #88]	; (8027f98 <arm_rfft_fast_init_f32+0xdc>)
 8027f3e:	4b17      	ldr	r3, [pc, #92]	; (8027f9c <arm_rfft_fast_init_f32+0xe0>)
 8027f40:	e7d2      	b.n	8027ee8 <arm_rfft_fast_init_f32+0x2c>
 8027f42:	2414      	movs	r4, #20
 8027f44:	4916      	ldr	r1, [pc, #88]	; (8027fa0 <arm_rfft_fast_init_f32+0xe4>)
 8027f46:	4a17      	ldr	r2, [pc, #92]	; (8027fa4 <arm_rfft_fast_init_f32+0xe8>)
 8027f48:	4b17      	ldr	r3, [pc, #92]	; (8027fa8 <arm_rfft_fast_init_f32+0xec>)
 8027f4a:	e7cd      	b.n	8027ee8 <arm_rfft_fast_init_f32+0x2c>
 8027f4c:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8027f50:	4916      	ldr	r1, [pc, #88]	; (8027fac <arm_rfft_fast_init_f32+0xf0>)
 8027f52:	4a17      	ldr	r2, [pc, #92]	; (8027fb0 <arm_rfft_fast_init_f32+0xf4>)
 8027f54:	4b17      	ldr	r3, [pc, #92]	; (8027fb4 <arm_rfft_fast_init_f32+0xf8>)
 8027f56:	e7c7      	b.n	8027ee8 <arm_rfft_fast_init_f32+0x2c>
 8027f58:	24d0      	movs	r4, #208	; 0xd0
 8027f5a:	4917      	ldr	r1, [pc, #92]	; (8027fb8 <arm_rfft_fast_init_f32+0xfc>)
 8027f5c:	4a17      	ldr	r2, [pc, #92]	; (8027fbc <arm_rfft_fast_init_f32+0x100>)
 8027f5e:	4b18      	ldr	r3, [pc, #96]	; (8027fc0 <arm_rfft_fast_init_f32+0x104>)
 8027f60:	e7c2      	b.n	8027ee8 <arm_rfft_fast_init_f32+0x2c>
 8027f62:	bf00      	nop
 8027f64:	0803d818 	.word	0x0803d818
 8027f68:	0802ea10 	.word	0x0802ea10
 8027f6c:	08034b80 	.word	0x08034b80
 8027f70:	08032b10 	.word	0x08032b10
 8027f74:	0803f5d8 	.word	0x0803f5d8
 8027f78:	08041ac8 	.word	0x08041ac8
 8027f7c:	0803b500 	.word	0x0803b500
 8027f80:	08039400 	.word	0x08039400
 8027f84:	08032b80 	.word	0x08032b80
 8027f88:	08041758 	.word	0x08041758
 8027f8c:	08038b80 	.word	0x08038b80
 8027f90:	0803f7d8 	.word	0x0803f7d8
 8027f94:	0803c3b8 	.word	0x0803c3b8
 8027f98:	0803b400 	.word	0x0803b400
 8027f9c:	08032a10 	.word	0x08032a10
 8027fa0:	0803c310 	.word	0x0803c310
 8027fa4:	08039380 	.word	0x08039380
 8027fa8:	0803c338 	.word	0x0803c338
 8027fac:	0803ffd8 	.word	0x0803ffd8
 8027fb0:	0803c818 	.word	0x0803c818
 8027fb4:	08040358 	.word	0x08040358
 8027fb8:	08041cc8 	.word	0x08041cc8
 8027fbc:	0803c418 	.word	0x0803c418
 8027fc0:	08041358 	.word	0x08041358

08027fc4 <arm_rfft_fast_f32>:
 8027fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027fc8:	8a06      	ldrh	r6, [r0, #16]
 8027fca:	0876      	lsrs	r6, r6, #1
 8027fcc:	4607      	mov	r7, r0
 8027fce:	4615      	mov	r5, r2
 8027fd0:	8006      	strh	r6, [r0, #0]
 8027fd2:	460c      	mov	r4, r1
 8027fd4:	2b00      	cmp	r3, #0
 8027fd6:	d15c      	bne.n	8028092 <arm_rfft_fast_f32+0xce>
 8027fd8:	461a      	mov	r2, r3
 8027fda:	2301      	movs	r3, #1
 8027fdc:	f000 fbe6 	bl	80287ac <arm_cfft_f32>
 8027fe0:	edd4 7a00 	vldr	s15, [r4]
 8027fe4:	ed94 7a01 	vldr	s14, [r4, #4]
 8027fe8:	883e      	ldrh	r6, [r7, #0]
 8027fea:	6978      	ldr	r0, [r7, #20]
 8027fec:	ee37 7a07 	vadd.f32	s14, s14, s14
 8027ff0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8027ff4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8027ff8:	ee77 6a87 	vadd.f32	s13, s15, s14
 8027ffc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028000:	3e01      	subs	r6, #1
 8028002:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028006:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802800a:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802800e:	ed85 7a00 	vstr	s14, [r5]
 8028012:	edc5 7a01 	vstr	s15, [r5, #4]
 8028016:	3010      	adds	r0, #16
 8028018:	f105 0210 	add.w	r2, r5, #16
 802801c:	3b08      	subs	r3, #8
 802801e:	f104 0110 	add.w	r1, r4, #16
 8028022:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028026:	ed93 5a02 	vldr	s10, [r3, #8]
 802802a:	ed11 7a01 	vldr	s14, [r1, #-4]
 802802e:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028032:	edd3 5a03 	vldr	s11, [r3, #12]
 8028036:	ed50 6a01 	vldr	s13, [r0, #-4]
 802803a:	ee75 7a64 	vsub.f32	s15, s10, s9
 802803e:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028042:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028046:	ee77 5a65 	vsub.f32	s11, s14, s11
 802804a:	ee66 4a27 	vmul.f32	s9, s12, s15
 802804e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028052:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028056:	ee26 6a04 	vmul.f32	s12, s12, s8
 802805a:	ee66 6a84 	vmul.f32	s13, s13, s8
 802805e:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028062:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028066:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802806a:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802806e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028072:	3e01      	subs	r6, #1
 8028074:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028078:	ed42 7a01 	vstr	s15, [r2, #-4]
 802807c:	f1a3 0308 	sub.w	r3, r3, #8
 8028080:	f101 0108 	add.w	r1, r1, #8
 8028084:	f100 0008 	add.w	r0, r0, #8
 8028088:	f102 0208 	add.w	r2, r2, #8
 802808c:	d1c9      	bne.n	8028022 <arm_rfft_fast_f32+0x5e>
 802808e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028092:	edd1 7a00 	vldr	s15, [r1]
 8028096:	edd1 6a01 	vldr	s13, [r1, #4]
 802809a:	6941      	ldr	r1, [r0, #20]
 802809c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80280a0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80280a4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80280a8:	ee27 7a23 	vmul.f32	s14, s14, s7
 80280ac:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80280b0:	3e01      	subs	r6, #1
 80280b2:	ed82 7a00 	vstr	s14, [r2]
 80280b6:	edc2 7a01 	vstr	s15, [r2, #4]
 80280ba:	00f0      	lsls	r0, r6, #3
 80280bc:	b3ee      	cbz	r6, 802813a <arm_rfft_fast_f32+0x176>
 80280be:	3808      	subs	r0, #8
 80280c0:	f101 0e10 	add.w	lr, r1, #16
 80280c4:	4420      	add	r0, r4
 80280c6:	f104 0110 	add.w	r1, r4, #16
 80280ca:	f102 0c10 	add.w	ip, r2, #16
 80280ce:	ed90 7a02 	vldr	s14, [r0, #8]
 80280d2:	ed51 6a02 	vldr	s13, [r1, #-8]
 80280d6:	ed1e 6a02 	vldr	s12, [lr, #-8]
 80280da:	ed90 4a03 	vldr	s8, [r0, #12]
 80280de:	ed11 5a01 	vldr	s10, [r1, #-4]
 80280e2:	ed5e 5a01 	vldr	s11, [lr, #-4]
 80280e6:	ee76 7ac7 	vsub.f32	s15, s13, s14
 80280ea:	ee74 4a05 	vadd.f32	s9, s8, s10
 80280ee:	ee26 3a27 	vmul.f32	s6, s12, s15
 80280f2:	ee77 6a26 	vadd.f32	s13, s14, s13
 80280f6:	ee35 5a44 	vsub.f32	s10, s10, s8
 80280fa:	ee25 7aa7 	vmul.f32	s14, s11, s15
 80280fe:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028102:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028106:	ee26 6a24 	vmul.f32	s12, s12, s9
 802810a:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802810e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028112:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028116:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802811a:	ee27 7a23 	vmul.f32	s14, s14, s7
 802811e:	3e01      	subs	r6, #1
 8028120:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028124:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028128:	f1a0 0008 	sub.w	r0, r0, #8
 802812c:	f101 0108 	add.w	r1, r1, #8
 8028130:	f10e 0e08 	add.w	lr, lr, #8
 8028134:	f10c 0c08 	add.w	ip, ip, #8
 8028138:	d1c9      	bne.n	80280ce <arm_rfft_fast_f32+0x10a>
 802813a:	4638      	mov	r0, r7
 802813c:	4629      	mov	r1, r5
 802813e:	461a      	mov	r2, r3
 8028140:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028144:	2301      	movs	r3, #1
 8028146:	f000 bb31 	b.w	80287ac <arm_cfft_f32>
 802814a:	bf00      	nop

0802814c <arm_cfft_radix8by2_f32>:
 802814c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028150:	ed2d 8b08 	vpush	{d8-d11}
 8028154:	f8b0 e000 	ldrh.w	lr, [r0]
 8028158:	6842      	ldr	r2, [r0, #4]
 802815a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802815e:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028162:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028166:	4607      	mov	r7, r0
 8028168:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802816c:	f000 80af 	beq.w	80282ce <arm_cfft_radix8by2_f32+0x182>
 8028170:	3310      	adds	r3, #16
 8028172:	18ce      	adds	r6, r1, r3
 8028174:	3210      	adds	r2, #16
 8028176:	4443      	add	r3, r8
 8028178:	f101 0510 	add.w	r5, r1, #16
 802817c:	f108 0410 	add.w	r4, r8, #16
 8028180:	ed54 1a04 	vldr	s3, [r4, #-16]
 8028184:	ed13 4a04 	vldr	s8, [r3, #-16]
 8028188:	ed53 3a03 	vldr	s7, [r3, #-12]
 802818c:	ed53 5a02 	vldr	s11, [r3, #-8]
 8028190:	ed13 5a01 	vldr	s10, [r3, #-4]
 8028194:	ed54 6a03 	vldr	s13, [r4, #-12]
 8028198:	ed14 0a02 	vldr	s0, [r4, #-8]
 802819c:	ed16 2a04 	vldr	s4, [r6, #-16]
 80281a0:	ed56 2a03 	vldr	s5, [r6, #-12]
 80281a4:	ed15 6a03 	vldr	s12, [r5, #-12]
 80281a8:	ed15 7a01 	vldr	s14, [r5, #-4]
 80281ac:	ed15 3a04 	vldr	s6, [r5, #-16]
 80281b0:	ed54 7a01 	vldr	s15, [r4, #-4]
 80281b4:	ed56 0a02 	vldr	s1, [r6, #-8]
 80281b8:	ed16 1a01 	vldr	s2, [r6, #-4]
 80281bc:	ed55 4a02 	vldr	s9, [r5, #-8]
 80281c0:	ee73 ba21 	vadd.f32	s23, s6, s3
 80281c4:	ee36 ba26 	vadd.f32	s22, s12, s13
 80281c8:	ee37 aa27 	vadd.f32	s20, s14, s15
 80281cc:	ee72 9a04 	vadd.f32	s19, s4, s8
 80281d0:	ee32 9aa3 	vadd.f32	s18, s5, s7
 80281d4:	ee31 8a05 	vadd.f32	s16, s2, s10
 80281d8:	ee74 aa80 	vadd.f32	s21, s9, s0
 80281dc:	ee70 8aa5 	vadd.f32	s17, s1, s11
 80281e0:	ed45 ba04 	vstr	s23, [r5, #-16]
 80281e4:	ed05 ba03 	vstr	s22, [r5, #-12]
 80281e8:	ed45 aa02 	vstr	s21, [r5, #-8]
 80281ec:	ed05 aa01 	vstr	s20, [r5, #-4]
 80281f0:	ed06 8a01 	vstr	s16, [r6, #-4]
 80281f4:	ed46 9a04 	vstr	s19, [r6, #-16]
 80281f8:	ed06 9a03 	vstr	s18, [r6, #-12]
 80281fc:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028200:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028204:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028208:	ed12 6a03 	vldr	s12, [r2, #-12]
 802820c:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028210:	ee33 3a61 	vsub.f32	s6, s6, s3
 8028214:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028218:	ee26 8a86 	vmul.f32	s16, s13, s12
 802821c:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028220:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028224:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028228:	ee23 3a06 	vmul.f32	s6, s6, s12
 802822c:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028230:	ee23 6a86 	vmul.f32	s12, s7, s12
 8028234:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028238:	ee36 6a04 	vadd.f32	s12, s12, s8
 802823c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028240:	ee72 3a63 	vsub.f32	s7, s4, s7
 8028244:	ee71 2a88 	vadd.f32	s5, s3, s16
 8028248:	ed44 6a03 	vstr	s13, [r4, #-12]
 802824c:	ed44 2a04 	vstr	s5, [r4, #-16]
 8028250:	ed43 3a04 	vstr	s7, [r3, #-16]
 8028254:	ed03 6a03 	vstr	s12, [r3, #-12]
 8028258:	ee77 7a67 	vsub.f32	s15, s14, s15
 802825c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8028260:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028264:	ed52 5a02 	vldr	s11, [r2, #-8]
 8028268:	ee35 6a41 	vsub.f32	s12, s10, s2
 802826c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8028270:	ee67 3a87 	vmul.f32	s7, s15, s14
 8028274:	ee26 5a87 	vmul.f32	s10, s13, s14
 8028278:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802827c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8028280:	ee64 4a87 	vmul.f32	s9, s9, s14
 8028284:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8028288:	ee26 7a07 	vmul.f32	s14, s12, s14
 802828c:	ee26 6a25 	vmul.f32	s12, s12, s11
 8028290:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8028294:	ee74 5a23 	vadd.f32	s11, s8, s7
 8028298:	ee35 6a46 	vsub.f32	s12, s10, s12
 802829c:	ee37 7a26 	vadd.f32	s14, s14, s13
 80282a0:	f1be 0e01 	subs.w	lr, lr, #1
 80282a4:	ed44 5a02 	vstr	s11, [r4, #-8]
 80282a8:	f105 0510 	add.w	r5, r5, #16
 80282ac:	ed44 7a01 	vstr	s15, [r4, #-4]
 80282b0:	f106 0610 	add.w	r6, r6, #16
 80282b4:	ed03 6a02 	vstr	s12, [r3, #-8]
 80282b8:	ed03 7a01 	vstr	s14, [r3, #-4]
 80282bc:	f102 0210 	add.w	r2, r2, #16
 80282c0:	f104 0410 	add.w	r4, r4, #16
 80282c4:	f103 0310 	add.w	r3, r3, #16
 80282c8:	f47f af5a 	bne.w	8028180 <arm_cfft_radix8by2_f32+0x34>
 80282cc:	687a      	ldr	r2, [r7, #4]
 80282ce:	fa1f f48c 	uxth.w	r4, ip
 80282d2:	4608      	mov	r0, r1
 80282d4:	2302      	movs	r3, #2
 80282d6:	4621      	mov	r1, r4
 80282d8:	f000 fbca 	bl	8028a70 <arm_radix8_butterfly_f32>
 80282dc:	ecbd 8b08 	vpop	{d8-d11}
 80282e0:	4640      	mov	r0, r8
 80282e2:	4621      	mov	r1, r4
 80282e4:	687a      	ldr	r2, [r7, #4]
 80282e6:	2302      	movs	r3, #2
 80282e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80282ec:	f000 bbc0 	b.w	8028a70 <arm_radix8_butterfly_f32>

080282f0 <arm_cfft_radix8by4_f32>:
 80282f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80282f4:	ed2d 8b0a 	vpush	{d8-d12}
 80282f8:	8802      	ldrh	r2, [r0, #0]
 80282fa:	ed91 6a00 	vldr	s12, [r1]
 80282fe:	b08f      	sub	sp, #60	; 0x3c
 8028300:	460f      	mov	r7, r1
 8028302:	0852      	lsrs	r2, r2, #1
 8028304:	0093      	lsls	r3, r2, #2
 8028306:	900c      	str	r0, [sp, #48]	; 0x30
 8028308:	9103      	str	r1, [sp, #12]
 802830a:	6841      	ldr	r1, [r0, #4]
 802830c:	ed97 7a01 	vldr	s14, [r7, #4]
 8028310:	4638      	mov	r0, r7
 8028312:	4418      	add	r0, r3
 8028314:	4606      	mov	r6, r0
 8028316:	9009      	str	r0, [sp, #36]	; 0x24
 8028318:	4418      	add	r0, r3
 802831a:	edd0 6a00 	vldr	s13, [r0]
 802831e:	edd6 3a00 	vldr	s7, [r6]
 8028322:	edd6 2a01 	vldr	s5, [r6, #4]
 8028326:	edd0 7a01 	vldr	s15, [r0, #4]
 802832a:	900a      	str	r0, [sp, #40]	; 0x28
 802832c:	ee76 5a26 	vadd.f32	s11, s12, s13
 8028330:	4604      	mov	r4, r0
 8028332:	4625      	mov	r5, r4
 8028334:	441c      	add	r4, r3
 8028336:	ed94 4a00 	vldr	s8, [r4]
 802833a:	ed94 5a01 	vldr	s10, [r4, #4]
 802833e:	9401      	str	r4, [sp, #4]
 8028340:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8028344:	4630      	mov	r0, r6
 8028346:	ee74 4a24 	vadd.f32	s9, s8, s9
 802834a:	463e      	mov	r6, r7
 802834c:	ee14 ea90 	vmov	lr, s9
 8028350:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028354:	f846 eb08 	str.w	lr, [r6], #8
 8028358:	ee37 6a27 	vadd.f32	s12, s14, s15
 802835c:	edd0 4a01 	vldr	s9, [r0, #4]
 8028360:	9604      	str	r6, [sp, #16]
 8028362:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028366:	9e01      	ldr	r6, [sp, #4]
 8028368:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802836c:	ed96 2a01 	vldr	s4, [r6, #4]
 8028370:	ee36 7a24 	vadd.f32	s14, s12, s9
 8028374:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8028378:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802837c:	ee36 6a62 	vsub.f32	s12, s12, s5
 8028380:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8028384:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8028388:	ee73 3a45 	vsub.f32	s7, s6, s10
 802838c:	4604      	mov	r4, r0
 802838e:	ee36 6a45 	vsub.f32	s12, s12, s10
 8028392:	ee75 6a26 	vadd.f32	s13, s10, s13
 8028396:	46a3      	mov	fp, r4
 8028398:	ee37 7a02 	vadd.f32	s14, s14, s4
 802839c:	ee34 5a84 	vadd.f32	s10, s9, s8
 80283a0:	ee13 8a90 	vmov	r8, s7
 80283a4:	46a4      	mov	ip, r4
 80283a6:	ee75 5ac4 	vsub.f32	s11, s11, s8
 80283aa:	ed87 7a01 	vstr	s14, [r7, #4]
 80283ae:	f84b 8b08 	str.w	r8, [fp], #8
 80283b2:	f1ac 0704 	sub.w	r7, ip, #4
 80283b6:	ed8c 5a01 	vstr	s10, [ip, #4]
 80283ba:	f101 0c08 	add.w	ip, r1, #8
 80283be:	462c      	mov	r4, r5
 80283c0:	f8cd c014 	str.w	ip, [sp, #20]
 80283c4:	ee15 ca90 	vmov	ip, s11
 80283c8:	f844 cb08 	str.w	ip, [r4], #8
 80283cc:	9407      	str	r4, [sp, #28]
 80283ce:	f101 0410 	add.w	r4, r1, #16
 80283d2:	ed85 6a01 	vstr	s12, [r5, #4]
 80283d6:	0852      	lsrs	r2, r2, #1
 80283d8:	9402      	str	r4, [sp, #8]
 80283da:	462c      	mov	r4, r5
 80283dc:	f101 0518 	add.w	r5, r1, #24
 80283e0:	920b      	str	r2, [sp, #44]	; 0x2c
 80283e2:	46b2      	mov	sl, r6
 80283e4:	9506      	str	r5, [sp, #24]
 80283e6:	ee77 7ac4 	vsub.f32	s15, s15, s8
 80283ea:	3a02      	subs	r2, #2
 80283ec:	ee16 5a90 	vmov	r5, s13
 80283f0:	46b6      	mov	lr, r6
 80283f2:	4630      	mov	r0, r6
 80283f4:	0852      	lsrs	r2, r2, #1
 80283f6:	f84a 5b08 	str.w	r5, [sl], #8
 80283fa:	f1a0 0604 	sub.w	r6, r0, #4
 80283fe:	edce 7a01 	vstr	s15, [lr, #4]
 8028402:	9208      	str	r2, [sp, #32]
 8028404:	f000 8130 	beq.w	8028668 <arm_cfft_radix8by4_f32+0x378>
 8028408:	4691      	mov	r9, r2
 802840a:	9a03      	ldr	r2, [sp, #12]
 802840c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8028410:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8028414:	3b08      	subs	r3, #8
 8028416:	f102 0510 	add.w	r5, r2, #16
 802841a:	f101 0c20 	add.w	ip, r1, #32
 802841e:	f1a4 020c 	sub.w	r2, r4, #12
 8028422:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8028426:	4433      	add	r3, r6
 8028428:	3410      	adds	r4, #16
 802842a:	4650      	mov	r0, sl
 802842c:	4659      	mov	r1, fp
 802842e:	ed55 3a02 	vldr	s7, [r5, #-8]
 8028432:	ed14 5a02 	vldr	s10, [r4, #-8]
 8028436:	ed91 7a00 	vldr	s14, [r1]
 802843a:	edd0 7a00 	vldr	s15, [r0]
 802843e:	ed15 4a01 	vldr	s8, [r5, #-4]
 8028442:	ed54 5a01 	vldr	s11, [r4, #-4]
 8028446:	edd0 6a01 	vldr	s13, [r0, #4]
 802844a:	ed91 6a01 	vldr	s12, [r1, #4]
 802844e:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028452:	ee34 0a25 	vadd.f32	s0, s8, s11
 8028456:	ee78 4a07 	vadd.f32	s9, s16, s14
 802845a:	ee74 5a65 	vsub.f32	s11, s8, s11
 802845e:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8028462:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8028466:	ed45 4a02 	vstr	s9, [r5, #-8]
 802846a:	edd1 4a01 	vldr	s9, [r1, #4]
 802846e:	ed90 4a01 	vldr	s8, [r0, #4]
 8028472:	ee70 4a24 	vadd.f32	s9, s0, s9
 8028476:	ee76 aa05 	vadd.f32	s21, s12, s10
 802847a:	ee74 4a84 	vadd.f32	s9, s9, s8
 802847e:	ee35 aac7 	vsub.f32	s20, s11, s14
 8028482:	ed45 4a01 	vstr	s9, [r5, #-4]
 8028486:	edd6 1a00 	vldr	s3, [r6]
 802848a:	edd7 0a00 	vldr	s1, [r7]
 802848e:	ed92 4a02 	vldr	s8, [r2, #8]
 8028492:	edd3 3a02 	vldr	s7, [r3, #8]
 8028496:	ed93 2a01 	vldr	s4, [r3, #4]
 802849a:	ed16 1a01 	vldr	s2, [r6, #-4]
 802849e:	edd2 2a01 	vldr	s5, [r2, #4]
 80284a2:	ed57 9a01 	vldr	s19, [r7, #-4]
 80284a6:	ee70 4aa1 	vadd.f32	s9, s1, s3
 80284aa:	ee39 3a81 	vadd.f32	s6, s19, s2
 80284ae:	ee74 8a84 	vadd.f32	s17, s9, s8
 80284b2:	ee70 1ae1 	vsub.f32	s3, s1, s3
 80284b6:	ee73 8aa8 	vadd.f32	s17, s7, s17
 80284ba:	ee7a aae6 	vsub.f32	s21, s21, s13
 80284be:	ee18 aa90 	vmov	sl, s17
 80284c2:	f847 a908 	str.w	sl, [r7], #-8
 80284c6:	edd2 8a01 	vldr	s17, [r2, #4]
 80284ca:	ed93 9a01 	vldr	s18, [r3, #4]
 80284ce:	ee73 8a28 	vadd.f32	s17, s6, s17
 80284d2:	ee3a aa27 	vadd.f32	s20, s20, s15
 80284d6:	ee78 8a89 	vadd.f32	s17, s17, s18
 80284da:	ee74 0a63 	vsub.f32	s1, s8, s7
 80284de:	edc7 8a01 	vstr	s17, [r7, #4]
 80284e2:	ed18 ba02 	vldr	s22, [r8, #-8]
 80284e6:	ed58 8a01 	vldr	s17, [r8, #-4]
 80284ea:	ee39 1ac1 	vsub.f32	s2, s19, s2
 80284ee:	ee6a ba28 	vmul.f32	s23, s20, s17
 80284f2:	ee2a ca8b 	vmul.f32	s24, s21, s22
 80284f6:	ee71 9ae2 	vsub.f32	s19, s3, s5
 80284fa:	ee30 9a81 	vadd.f32	s18, s1, s2
 80284fe:	ee79 9a82 	vadd.f32	s19, s19, s4
 8028502:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8028506:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802850a:	ee69 baa8 	vmul.f32	s23, s19, s17
 802850e:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8028512:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8028516:	ee69 8a28 	vmul.f32	s17, s18, s17
 802851a:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802851e:	ee1c aa10 	vmov	sl, s24
 8028522:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8028526:	f841 ab08 	str.w	sl, [r1], #8
 802852a:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802852e:	ee3b bacb 	vsub.f32	s22, s23, s22
 8028532:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8028536:	ee33 3a62 	vsub.f32	s6, s6, s5
 802853a:	ed01 aa01 	vstr	s20, [r1, #-4]
 802853e:	edc2 8a01 	vstr	s17, [r2, #4]
 8028542:	ed82 ba02 	vstr	s22, [r2, #8]
 8028546:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802854a:	ee74 3a63 	vsub.f32	s7, s8, s7
 802854e:	ee38 8a47 	vsub.f32	s16, s16, s14
 8028552:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8028556:	ee30 0a46 	vsub.f32	s0, s0, s12
 802855a:	ee33 3a42 	vsub.f32	s6, s6, s4
 802855e:	ee38 8a67 	vsub.f32	s16, s16, s15
 8028562:	ee30 0a66 	vsub.f32	s0, s0, s13
 8028566:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802856a:	ee63 8a04 	vmul.f32	s17, s6, s8
 802856e:	ee28 aa24 	vmul.f32	s20, s16, s9
 8028572:	ee60 9a04 	vmul.f32	s19, s0, s8
 8028576:	ee28 8a04 	vmul.f32	s16, s16, s8
 802857a:	ee20 0a24 	vmul.f32	s0, s0, s9
 802857e:	ee63 3a84 	vmul.f32	s7, s7, s8
 8028582:	ee39 4a68 	vsub.f32	s8, s18, s17
 8028586:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802858a:	ee14 aa10 	vmov	sl, s8
 802858e:	ee30 0a48 	vsub.f32	s0, s0, s16
 8028592:	ee63 4a24 	vmul.f32	s9, s6, s9
 8028596:	ed44 9a02 	vstr	s19, [r4, #-8]
 802859a:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802859e:	ed04 0a01 	vstr	s0, [r4, #-4]
 80285a2:	f846 a908 	str.w	sl, [r6], #-8
 80285a6:	ee35 6a46 	vsub.f32	s12, s10, s12
 80285aa:	ee35 7a87 	vadd.f32	s14, s11, s14
 80285ae:	edc6 3a01 	vstr	s7, [r6, #4]
 80285b2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80285b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80285ba:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 80285be:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 80285c2:	ee67 5a86 	vmul.f32	s11, s15, s12
 80285c6:	ee26 5a87 	vmul.f32	s10, s13, s14
 80285ca:	ee72 2a62 	vsub.f32	s5, s4, s5
 80285ce:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80285d2:	ee72 2ae1 	vsub.f32	s5, s5, s3
 80285d6:	ee75 5a25 	vadd.f32	s11, s10, s11
 80285da:	ee62 0a86 	vmul.f32	s1, s5, s12
 80285de:	ee66 6a86 	vmul.f32	s13, s13, s12
 80285e2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80285e6:	ee21 6a06 	vmul.f32	s12, s2, s12
 80285ea:	ee62 2a87 	vmul.f32	s5, s5, s14
 80285ee:	ee21 1a07 	vmul.f32	s2, s2, s14
 80285f2:	ee15 aa90 	vmov	sl, s11
 80285f6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80285fa:	f840 ab08 	str.w	sl, [r0], #8
 80285fe:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8028602:	ee76 2a22 	vadd.f32	s5, s12, s5
 8028606:	f1b9 0901 	subs.w	r9, r9, #1
 802860a:	ed40 7a01 	vstr	s15, [r0, #-4]
 802860e:	f105 0508 	add.w	r5, r5, #8
 8028612:	ed83 1a02 	vstr	s2, [r3, #8]
 8028616:	edc3 2a01 	vstr	s5, [r3, #4]
 802861a:	f108 0808 	add.w	r8, r8, #8
 802861e:	f1a2 0208 	sub.w	r2, r2, #8
 8028622:	f10c 0c10 	add.w	ip, ip, #16
 8028626:	f104 0408 	add.w	r4, r4, #8
 802862a:	f10e 0e18 	add.w	lr, lr, #24
 802862e:	f1a3 0308 	sub.w	r3, r3, #8
 8028632:	f47f aefc 	bne.w	802842e <arm_cfft_radix8by4_f32+0x13e>
 8028636:	9908      	ldr	r1, [sp, #32]
 8028638:	9802      	ldr	r0, [sp, #8]
 802863a:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802863e:	00cb      	lsls	r3, r1, #3
 8028640:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8028644:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8028648:	9102      	str	r1, [sp, #8]
 802864a:	9904      	ldr	r1, [sp, #16]
 802864c:	4419      	add	r1, r3
 802864e:	9104      	str	r1, [sp, #16]
 8028650:	9905      	ldr	r1, [sp, #20]
 8028652:	4419      	add	r1, r3
 8028654:	9105      	str	r1, [sp, #20]
 8028656:	9907      	ldr	r1, [sp, #28]
 8028658:	449b      	add	fp, r3
 802865a:	4419      	add	r1, r3
 802865c:	449a      	add	sl, r3
 802865e:	9b06      	ldr	r3, [sp, #24]
 8028660:	9107      	str	r1, [sp, #28]
 8028662:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8028666:	9306      	str	r3, [sp, #24]
 8028668:	9a04      	ldr	r2, [sp, #16]
 802866a:	9807      	ldr	r0, [sp, #28]
 802866c:	edd2 3a00 	vldr	s7, [r2]
 8028670:	ed90 4a00 	vldr	s8, [r0]
 8028674:	eddb 7a00 	vldr	s15, [fp]
 8028678:	ed9a 3a00 	vldr	s6, [sl]
 802867c:	edd2 4a01 	vldr	s9, [r2, #4]
 8028680:	ed90 7a01 	vldr	s14, [r0, #4]
 8028684:	ed9b 2a01 	vldr	s4, [fp, #4]
 8028688:	edda 5a01 	vldr	s11, [sl, #4]
 802868c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8028690:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8028692:	ee73 6a84 	vadd.f32	s13, s7, s8
 8028696:	ee34 6a87 	vadd.f32	s12, s9, s14
 802869a:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802869e:	ee34 7ac7 	vsub.f32	s14, s9, s14
 80286a2:	ee33 5a05 	vadd.f32	s10, s6, s10
 80286a6:	ee33 4ac4 	vsub.f32	s8, s7, s8
 80286aa:	ed82 5a00 	vstr	s10, [r2]
 80286ae:	ed9b 5a01 	vldr	s10, [fp, #4]
 80286b2:	edda 4a01 	vldr	s9, [sl, #4]
 80286b6:	ee36 5a05 	vadd.f32	s10, s12, s10
 80286ba:	ee72 3a04 	vadd.f32	s7, s4, s8
 80286be:	ee35 5a24 	vadd.f32	s10, s10, s9
 80286c2:	ee77 4a67 	vsub.f32	s9, s14, s15
 80286c6:	ed82 5a01 	vstr	s10, [r2, #4]
 80286ca:	9a05      	ldr	r2, [sp, #20]
 80286cc:	ee34 5a83 	vadd.f32	s10, s9, s6
 80286d0:	edd2 1a00 	vldr	s3, [r2]
 80286d4:	edd2 2a01 	vldr	s5, [r2, #4]
 80286d8:	9a02      	ldr	r2, [sp, #8]
 80286da:	ee73 3ae5 	vsub.f32	s7, s7, s11
 80286de:	ee36 6a42 	vsub.f32	s12, s12, s4
 80286e2:	ee63 4aa1 	vmul.f32	s9, s7, s3
 80286e6:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80286ea:	ee65 2a22 	vmul.f32	s5, s10, s5
 80286ee:	ee25 5a21 	vmul.f32	s10, s10, s3
 80286f2:	ee74 2aa2 	vadd.f32	s5, s9, s5
 80286f6:	ee35 5a63 	vsub.f32	s10, s10, s7
 80286fa:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80286fe:	edcb 2a00 	vstr	s5, [fp]
 8028702:	ed8b 5a01 	vstr	s10, [fp, #4]
 8028706:	edd2 3a01 	vldr	s7, [r2, #4]
 802870a:	ed92 5a00 	vldr	s10, [r2]
 802870e:	9a06      	ldr	r2, [sp, #24]
 8028710:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028714:	ee36 6a65 	vsub.f32	s12, s12, s11
 8028718:	ee66 4a85 	vmul.f32	s9, s13, s10
 802871c:	ee26 5a05 	vmul.f32	s10, s12, s10
 8028720:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028724:	ee26 6a23 	vmul.f32	s12, s12, s7
 8028728:	ee75 6a66 	vsub.f32	s13, s10, s13
 802872c:	ee34 6a86 	vadd.f32	s12, s9, s12
 8028730:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028734:	ee37 7a27 	vadd.f32	s14, s14, s15
 8028738:	edc0 6a01 	vstr	s13, [r0, #4]
 802873c:	ed80 6a00 	vstr	s12, [r0]
 8028740:	ed92 6a01 	vldr	s12, [r2, #4]
 8028744:	9803      	ldr	r0, [sp, #12]
 8028746:	ee77 7a43 	vsub.f32	s15, s14, s6
 802874a:	ee75 5a84 	vadd.f32	s11, s11, s8
 802874e:	ed92 7a00 	vldr	s14, [r2]
 8028752:	ee65 6a87 	vmul.f32	s13, s11, s14
 8028756:	ee27 7a87 	vmul.f32	s14, s15, s14
 802875a:	ee65 5a86 	vmul.f32	s11, s11, s12
 802875e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8028762:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028766:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802876a:	edca 5a01 	vstr	s11, [sl, #4]
 802876e:	edca 7a00 	vstr	s15, [sl]
 8028772:	6872      	ldr	r2, [r6, #4]
 8028774:	4621      	mov	r1, r4
 8028776:	2304      	movs	r3, #4
 8028778:	f000 f97a 	bl	8028a70 <arm_radix8_butterfly_f32>
 802877c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802877e:	6872      	ldr	r2, [r6, #4]
 8028780:	4621      	mov	r1, r4
 8028782:	2304      	movs	r3, #4
 8028784:	f000 f974 	bl	8028a70 <arm_radix8_butterfly_f32>
 8028788:	980a      	ldr	r0, [sp, #40]	; 0x28
 802878a:	6872      	ldr	r2, [r6, #4]
 802878c:	4621      	mov	r1, r4
 802878e:	2304      	movs	r3, #4
 8028790:	f000 f96e 	bl	8028a70 <arm_radix8_butterfly_f32>
 8028794:	9801      	ldr	r0, [sp, #4]
 8028796:	6872      	ldr	r2, [r6, #4]
 8028798:	4621      	mov	r1, r4
 802879a:	2304      	movs	r3, #4
 802879c:	b00f      	add	sp, #60	; 0x3c
 802879e:	ecbd 8b0a 	vpop	{d8-d12}
 80287a2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80287a6:	f000 b963 	b.w	8028a70 <arm_radix8_butterfly_f32>
 80287aa:	bf00      	nop

080287ac <arm_cfft_f32>:
 80287ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80287b0:	2a01      	cmp	r2, #1
 80287b2:	4606      	mov	r6, r0
 80287b4:	4617      	mov	r7, r2
 80287b6:	460c      	mov	r4, r1
 80287b8:	4698      	mov	r8, r3
 80287ba:	8805      	ldrh	r5, [r0, #0]
 80287bc:	d054      	beq.n	8028868 <arm_cfft_f32+0xbc>
 80287be:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80287c2:	d04c      	beq.n	802885e <arm_cfft_f32+0xb2>
 80287c4:	d916      	bls.n	80287f4 <arm_cfft_f32+0x48>
 80287c6:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 80287ca:	d01a      	beq.n	8028802 <arm_cfft_f32+0x56>
 80287cc:	d95c      	bls.n	8028888 <arm_cfft_f32+0xdc>
 80287ce:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 80287d2:	d044      	beq.n	802885e <arm_cfft_f32+0xb2>
 80287d4:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 80287d8:	d105      	bne.n	80287e6 <arm_cfft_f32+0x3a>
 80287da:	4620      	mov	r0, r4
 80287dc:	4629      	mov	r1, r5
 80287de:	6872      	ldr	r2, [r6, #4]
 80287e0:	2301      	movs	r3, #1
 80287e2:	f000 f945 	bl	8028a70 <arm_radix8_butterfly_f32>
 80287e6:	f1b8 0f00 	cmp.w	r8, #0
 80287ea:	d111      	bne.n	8028810 <arm_cfft_f32+0x64>
 80287ec:	2f01      	cmp	r7, #1
 80287ee:	d016      	beq.n	802881e <arm_cfft_f32+0x72>
 80287f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80287f4:	2d20      	cmp	r5, #32
 80287f6:	d032      	beq.n	802885e <arm_cfft_f32+0xb2>
 80287f8:	d94a      	bls.n	8028890 <arm_cfft_f32+0xe4>
 80287fa:	2d40      	cmp	r5, #64	; 0x40
 80287fc:	d0ed      	beq.n	80287da <arm_cfft_f32+0x2e>
 80287fe:	2d80      	cmp	r5, #128	; 0x80
 8028800:	d1f1      	bne.n	80287e6 <arm_cfft_f32+0x3a>
 8028802:	4630      	mov	r0, r6
 8028804:	4621      	mov	r1, r4
 8028806:	f7ff fca1 	bl	802814c <arm_cfft_radix8by2_f32>
 802880a:	f1b8 0f00 	cmp.w	r8, #0
 802880e:	d0ed      	beq.n	80287ec <arm_cfft_f32+0x40>
 8028810:	4620      	mov	r0, r4
 8028812:	89b1      	ldrh	r1, [r6, #12]
 8028814:	68b2      	ldr	r2, [r6, #8]
 8028816:	f7d7 fceb 	bl	80001f0 <arm_bitreversal_32>
 802881a:	2f01      	cmp	r7, #1
 802881c:	d1e8      	bne.n	80287f0 <arm_cfft_f32+0x44>
 802881e:	ee07 5a90 	vmov	s15, r5
 8028822:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8028826:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802882a:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802882e:	2d00      	cmp	r5, #0
 8028830:	d0de      	beq.n	80287f0 <arm_cfft_f32+0x44>
 8028832:	f104 0108 	add.w	r1, r4, #8
 8028836:	2300      	movs	r3, #0
 8028838:	3301      	adds	r3, #1
 802883a:	429d      	cmp	r5, r3
 802883c:	f101 0108 	add.w	r1, r1, #8
 8028840:	ed11 7a04 	vldr	s14, [r1, #-16]
 8028844:	ed51 7a03 	vldr	s15, [r1, #-12]
 8028848:	ee27 7a26 	vmul.f32	s14, s14, s13
 802884c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8028850:	ed01 7a04 	vstr	s14, [r1, #-16]
 8028854:	ed41 7a03 	vstr	s15, [r1, #-12]
 8028858:	d1ee      	bne.n	8028838 <arm_cfft_f32+0x8c>
 802885a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802885e:	4630      	mov	r0, r6
 8028860:	4621      	mov	r1, r4
 8028862:	f7ff fd45 	bl	80282f0 <arm_cfft_radix8by4_f32>
 8028866:	e7be      	b.n	80287e6 <arm_cfft_f32+0x3a>
 8028868:	b1ad      	cbz	r5, 8028896 <arm_cfft_f32+0xea>
 802886a:	f101 030c 	add.w	r3, r1, #12
 802886e:	2200      	movs	r2, #0
 8028870:	ed53 7a02 	vldr	s15, [r3, #-8]
 8028874:	3201      	adds	r2, #1
 8028876:	eef1 7a67 	vneg.f32	s15, s15
 802887a:	4295      	cmp	r5, r2
 802887c:	ed43 7a02 	vstr	s15, [r3, #-8]
 8028880:	f103 0308 	add.w	r3, r3, #8
 8028884:	d1f4      	bne.n	8028870 <arm_cfft_f32+0xc4>
 8028886:	e79a      	b.n	80287be <arm_cfft_f32+0x12>
 8028888:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802888c:	d0a5      	beq.n	80287da <arm_cfft_f32+0x2e>
 802888e:	e7aa      	b.n	80287e6 <arm_cfft_f32+0x3a>
 8028890:	2d10      	cmp	r5, #16
 8028892:	d0b6      	beq.n	8028802 <arm_cfft_f32+0x56>
 8028894:	e7a7      	b.n	80287e6 <arm_cfft_f32+0x3a>
 8028896:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802889a:	d894      	bhi.n	80287c6 <arm_cfft_f32+0x1a>
 802889c:	e7aa      	b.n	80287f4 <arm_cfft_f32+0x48>
 802889e:	bf00      	nop

080288a0 <arm_cmplx_mag_f32>:
 80288a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80288a4:	ea5f 0892 	movs.w	r8, r2, lsr #2
 80288a8:	b084      	sub	sp, #16
 80288aa:	d07f      	beq.n	80289ac <arm_cmplx_mag_f32+0x10c>
 80288ac:	2700      	movs	r7, #0
 80288ae:	f100 0420 	add.w	r4, r0, #32
 80288b2:	f101 0510 	add.w	r5, r1, #16
 80288b6:	4646      	mov	r6, r8
 80288b8:	e05a      	b.n	8028970 <arm_cmplx_mag_f32+0xd0>
 80288ba:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80288be:	eeb4 0a40 	vcmp.f32	s0, s0
 80288c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80288c6:	f040 80a4 	bne.w	8028a12 <arm_cmplx_mag_f32+0x172>
 80288ca:	ed05 0a04 	vstr	s0, [r5, #-16]
 80288ce:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 80288d2:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 80288d6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80288da:	ee20 0a00 	vmul.f32	s0, s0, s0
 80288de:	ee77 7a80 	vadd.f32	s15, s15, s0
 80288e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80288e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80288ea:	f2c0 808f 	blt.w	8028a0c <arm_cmplx_mag_f32+0x16c>
 80288ee:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80288f2:	eeb4 0a40 	vcmp.f32	s0, s0
 80288f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80288fa:	f040 80af 	bne.w	8028a5c <arm_cmplx_mag_f32+0x1bc>
 80288fe:	ed05 0a03 	vstr	s0, [r5, #-12]
 8028902:	ed54 7a04 	vldr	s15, [r4, #-16]
 8028906:	ed14 0a03 	vldr	s0, [r4, #-12]
 802890a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802890e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028912:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028916:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802891a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802891e:	db72      	blt.n	8028a06 <arm_cmplx_mag_f32+0x166>
 8028920:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028924:	eeb4 0a40 	vcmp.f32	s0, s0
 8028928:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802892c:	f040 808c 	bne.w	8028a48 <arm_cmplx_mag_f32+0x1a8>
 8028930:	ed05 0a02 	vstr	s0, [r5, #-8]
 8028934:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028938:	ed14 0a01 	vldr	s0, [r4, #-4]
 802893c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028940:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028944:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028948:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802894c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028950:	db20      	blt.n	8028994 <arm_cmplx_mag_f32+0xf4>
 8028952:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028956:	eeb4 0a40 	vcmp.f32	s0, s0
 802895a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802895e:	d169      	bne.n	8028a34 <arm_cmplx_mag_f32+0x194>
 8028960:	3e01      	subs	r6, #1
 8028962:	ed05 0a01 	vstr	s0, [r5, #-4]
 8028966:	f104 0420 	add.w	r4, r4, #32
 802896a:	f105 0510 	add.w	r5, r5, #16
 802896e:	d019      	beq.n	80289a4 <arm_cmplx_mag_f32+0x104>
 8028970:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8028974:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8028978:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802897c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028980:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028984:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028988:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802898c:	da95      	bge.n	80288ba <arm_cmplx_mag_f32+0x1a>
 802898e:	f845 7c10 	str.w	r7, [r5, #-16]
 8028992:	e79c      	b.n	80288ce <arm_cmplx_mag_f32+0x2e>
 8028994:	3e01      	subs	r6, #1
 8028996:	f845 7c04 	str.w	r7, [r5, #-4]
 802899a:	f104 0420 	add.w	r4, r4, #32
 802899e:	f105 0510 	add.w	r5, r5, #16
 80289a2:	d1e5      	bne.n	8028970 <arm_cmplx_mag_f32+0xd0>
 80289a4:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 80289a8:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 80289ac:	f012 0503 	ands.w	r5, r2, #3
 80289b0:	d026      	beq.n	8028a00 <arm_cmplx_mag_f32+0x160>
 80289b2:	2600      	movs	r6, #0
 80289b4:	f100 0408 	add.w	r4, r0, #8
 80289b8:	e00c      	b.n	80289d4 <arm_cmplx_mag_f32+0x134>
 80289ba:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80289be:	eeb4 0a40 	vcmp.f32	s0, s0
 80289c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80289c6:	d12e      	bne.n	8028a26 <arm_cmplx_mag_f32+0x186>
 80289c8:	3d01      	subs	r5, #1
 80289ca:	ed01 0a01 	vstr	s0, [r1, #-4]
 80289ce:	f104 0408 	add.w	r4, r4, #8
 80289d2:	d015      	beq.n	8028a00 <arm_cmplx_mag_f32+0x160>
 80289d4:	ed54 7a02 	vldr	s15, [r4, #-8]
 80289d8:	ed14 0a01 	vldr	s0, [r4, #-4]
 80289dc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80289e0:	ee20 0a00 	vmul.f32	s0, s0, s0
 80289e4:	3104      	adds	r1, #4
 80289e6:	ee77 7a80 	vadd.f32	s15, s15, s0
 80289ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80289ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80289f2:	dae2      	bge.n	80289ba <arm_cmplx_mag_f32+0x11a>
 80289f4:	3d01      	subs	r5, #1
 80289f6:	f841 6c04 	str.w	r6, [r1, #-4]
 80289fa:	f104 0408 	add.w	r4, r4, #8
 80289fe:	d1e9      	bne.n	80289d4 <arm_cmplx_mag_f32+0x134>
 8028a00:	b004      	add	sp, #16
 8028a02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028a06:	f845 7c08 	str.w	r7, [r5, #-8]
 8028a0a:	e793      	b.n	8028934 <arm_cmplx_mag_f32+0x94>
 8028a0c:	f845 7c0c 	str.w	r7, [r5, #-12]
 8028a10:	e777      	b.n	8028902 <arm_cmplx_mag_f32+0x62>
 8028a12:	eeb0 0a67 	vmov.f32	s0, s15
 8028a16:	9203      	str	r2, [sp, #12]
 8028a18:	9102      	str	r1, [sp, #8]
 8028a1a:	9001      	str	r0, [sp, #4]
 8028a1c:	f000 fb38 	bl	8029090 <sqrtf>
 8028a20:	a801      	add	r0, sp, #4
 8028a22:	c807      	ldmia	r0, {r0, r1, r2}
 8028a24:	e751      	b.n	80288ca <arm_cmplx_mag_f32+0x2a>
 8028a26:	eeb0 0a67 	vmov.f32	s0, s15
 8028a2a:	9101      	str	r1, [sp, #4]
 8028a2c:	f000 fb30 	bl	8029090 <sqrtf>
 8028a30:	9901      	ldr	r1, [sp, #4]
 8028a32:	e7c9      	b.n	80289c8 <arm_cmplx_mag_f32+0x128>
 8028a34:	eeb0 0a67 	vmov.f32	s0, s15
 8028a38:	9203      	str	r2, [sp, #12]
 8028a3a:	9102      	str	r1, [sp, #8]
 8028a3c:	9001      	str	r0, [sp, #4]
 8028a3e:	f000 fb27 	bl	8029090 <sqrtf>
 8028a42:	a801      	add	r0, sp, #4
 8028a44:	c807      	ldmia	r0, {r0, r1, r2}
 8028a46:	e78b      	b.n	8028960 <arm_cmplx_mag_f32+0xc0>
 8028a48:	eeb0 0a67 	vmov.f32	s0, s15
 8028a4c:	9203      	str	r2, [sp, #12]
 8028a4e:	9102      	str	r1, [sp, #8]
 8028a50:	9001      	str	r0, [sp, #4]
 8028a52:	f000 fb1d 	bl	8029090 <sqrtf>
 8028a56:	a801      	add	r0, sp, #4
 8028a58:	c807      	ldmia	r0, {r0, r1, r2}
 8028a5a:	e769      	b.n	8028930 <arm_cmplx_mag_f32+0x90>
 8028a5c:	eeb0 0a67 	vmov.f32	s0, s15
 8028a60:	9203      	str	r2, [sp, #12]
 8028a62:	9102      	str	r1, [sp, #8]
 8028a64:	9001      	str	r0, [sp, #4]
 8028a66:	f000 fb13 	bl	8029090 <sqrtf>
 8028a6a:	a801      	add	r0, sp, #4
 8028a6c:	c807      	ldmia	r0, {r0, r1, r2}
 8028a6e:	e746      	b.n	80288fe <arm_cmplx_mag_f32+0x5e>

08028a70 <arm_radix8_butterfly_f32>:
 8028a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028a74:	ed2d 8b10 	vpush	{d8-d15}
 8028a78:	b09d      	sub	sp, #116	; 0x74
 8028a7a:	461c      	mov	r4, r3
 8028a7c:	ed9f bac8 	vldr	s22, [pc, #800]	; 8028da0 <arm_radix8_butterfly_f32+0x330>
 8028a80:	921a      	str	r2, [sp, #104]	; 0x68
 8028a82:	1d03      	adds	r3, r0, #4
 8028a84:	4682      	mov	sl, r0
 8028a86:	4689      	mov	r9, r1
 8028a88:	468b      	mov	fp, r1
 8028a8a:	931b      	str	r3, [sp, #108]	; 0x6c
 8028a8c:	9400      	str	r4, [sp, #0]
 8028a8e:	469e      	mov	lr, r3
 8028a90:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8028a94:	005a      	lsls	r2, r3, #1
 8028a96:	18d6      	adds	r6, r2, r3
 8028a98:	18f5      	adds	r5, r6, r3
 8028a9a:	9203      	str	r2, [sp, #12]
 8028a9c:	195a      	adds	r2, r3, r5
 8028a9e:	18d0      	adds	r0, r2, r3
 8028aa0:	00df      	lsls	r7, r3, #3
 8028aa2:	1819      	adds	r1, r3, r0
 8028aa4:	463c      	mov	r4, r7
 8028aa6:	9701      	str	r7, [sp, #4]
 8028aa8:	4457      	add	r7, sl
 8028aaa:	930c      	str	r3, [sp, #48]	; 0x30
 8028aac:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8028ab0:	011b      	lsls	r3, r3, #4
 8028ab2:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8028ab6:	eb07 0c04 	add.w	ip, r7, r4
 8028aba:	9c00      	ldr	r4, [sp, #0]
 8028abc:	9302      	str	r3, [sp, #8]
 8028abe:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8028ac2:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8028ac6:	3204      	adds	r2, #4
 8028ac8:	3104      	adds	r1, #4
 8028aca:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 8028ace:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8028ad2:	f04f 0800 	mov.w	r8, #0
 8028ad6:	eddc 7a00 	vldr	s15, [ip]
 8028ada:	edd7 6a00 	vldr	s13, [r7]
 8028ade:	edd6 3a00 	vldr	s7, [r6]
 8028ae2:	ed5e aa01 	vldr	s21, [lr, #-4]
 8028ae6:	edd5 4a00 	vldr	s9, [r5]
 8028aea:	ed90 2a00 	vldr	s4, [r0]
 8028aee:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028af2:	ed51 0a01 	vldr	s1, [r1, #-4]
 8028af6:	ee77 8a82 	vadd.f32	s17, s15, s4
 8028afa:	ee33 4aa0 	vadd.f32	s8, s7, s1
 8028afe:	ee76 1a87 	vadd.f32	s3, s13, s14
 8028b02:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8028b06:	ee31 6a84 	vadd.f32	s12, s3, s8
 8028b0a:	ee33 5a28 	vadd.f32	s10, s6, s17
 8028b0e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8028b12:	ee75 6a06 	vadd.f32	s13, s10, s12
 8028b16:	ee35 5a46 	vsub.f32	s10, s10, s12
 8028b1a:	ed4e 6a01 	vstr	s13, [lr, #-4]
 8028b1e:	ed85 5a00 	vstr	s10, [r5]
 8028b22:	ed96 1a01 	vldr	s2, [r6, #4]
 8028b26:	edd7 5a01 	vldr	s11, [r7, #4]
 8028b2a:	ed92 aa00 	vldr	s20, [r2]
 8028b2e:	ed91 6a00 	vldr	s12, [r1]
 8028b32:	ed9e 9a00 	vldr	s18, [lr]
 8028b36:	ed95 5a01 	vldr	s10, [r5, #4]
 8028b3a:	eddc 6a01 	vldr	s13, [ip, #4]
 8028b3e:	edd0 9a01 	vldr	s19, [r0, #4]
 8028b42:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8028b46:	ee71 2a46 	vsub.f32	s5, s2, s12
 8028b4a:	ee75 3aca 	vsub.f32	s7, s11, s20
 8028b4e:	ee37 0a60 	vsub.f32	s0, s14, s1
 8028b52:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8028b56:	ee37 7a20 	vadd.f32	s14, s14, s1
 8028b5a:	ee73 2ae2 	vsub.f32	s5, s7, s5
 8028b5e:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8028b62:	ee79 3a05 	vadd.f32	s7, s18, s10
 8028b66:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8028b6a:	ee39 5a45 	vsub.f32	s10, s18, s10
 8028b6e:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8028b72:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8028b76:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8028b7a:	ee31 6a06 	vadd.f32	s12, s2, s12
 8028b7e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8028b82:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8028b86:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8028b8a:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8028b8e:	ee33 3a68 	vsub.f32	s6, s6, s17
 8028b92:	ee36 0a88 	vadd.f32	s0, s13, s16
 8028b96:	ee75 8a86 	vadd.f32	s17, s11, s12
 8028b9a:	ee36 7ac8 	vsub.f32	s14, s13, s16
 8028b9e:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8028ba2:	ee75 6a62 	vsub.f32	s13, s10, s5
 8028ba6:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8028baa:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8028bae:	ee33 1a89 	vadd.f32	s2, s7, s18
 8028bb2:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8028bb6:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8028bba:	ee75 4a22 	vadd.f32	s9, s10, s5
 8028bbe:	ee32 5a27 	vadd.f32	s10, s4, s15
 8028bc2:	ee72 7a67 	vsub.f32	s15, s4, s15
 8028bc6:	ee33 8a06 	vadd.f32	s16, s6, s12
 8028bca:	ee75 2a87 	vadd.f32	s5, s11, s14
 8028bce:	ee31 9a28 	vadd.f32	s18, s2, s17
 8028bd2:	ee33 6a46 	vsub.f32	s12, s6, s12
 8028bd6:	ee74 0a61 	vsub.f32	s1, s8, s3
 8028bda:	ee33 2a80 	vadd.f32	s4, s7, s0
 8028bde:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8028be2:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8028be6:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8028bea:	ee31 1a68 	vsub.f32	s2, s2, s17
 8028bee:	ee34 4a21 	vadd.f32	s8, s8, s3
 8028bf2:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8028bf6:	ee74 4a85 	vadd.f32	s9, s9, s10
 8028bfa:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8028bfe:	44d8      	add	r8, fp
 8028c00:	45c1      	cmp	r9, r8
 8028c02:	ed8e 9a00 	vstr	s18, [lr]
 8028c06:	ed85 1a01 	vstr	s2, [r5, #4]
 8028c0a:	449e      	add	lr, r3
 8028c0c:	ed8c 8a00 	vstr	s16, [ip]
 8028c10:	441d      	add	r5, r3
 8028c12:	ed80 6a00 	vstr	s12, [r0]
 8028c16:	edcc 0a01 	vstr	s1, [ip, #4]
 8028c1a:	ed80 4a01 	vstr	s8, [r0, #4]
 8028c1e:	449c      	add	ip, r3
 8028c20:	ed87 2a00 	vstr	s4, [r7]
 8028c24:	4418      	add	r0, r3
 8028c26:	ed41 3a01 	vstr	s7, [r1, #-4]
 8028c2a:	ed42 2a01 	vstr	s5, [r2, #-4]
 8028c2e:	ed86 7a00 	vstr	s14, [r6]
 8028c32:	ed87 3a01 	vstr	s6, [r7, #4]
 8028c36:	edc1 4a00 	vstr	s9, [r1]
 8028c3a:	441f      	add	r7, r3
 8028c3c:	edc2 5a00 	vstr	s11, [r2]
 8028c40:	4419      	add	r1, r3
 8028c42:	edc6 6a01 	vstr	s13, [r6, #4]
 8028c46:	441a      	add	r2, r3
 8028c48:	441e      	add	r6, r3
 8028c4a:	f63f af44 	bhi.w	8028ad6 <arm_radix8_butterfly_f32+0x66>
 8028c4e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028c50:	2907      	cmp	r1, #7
 8028c52:	4620      	mov	r0, r4
 8028c54:	f240 81e9 	bls.w	802902a <arm_radix8_butterfly_f32+0x5ba>
 8028c58:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8028c5c:	193e      	adds	r6, r7, r4
 8028c5e:	1935      	adds	r5, r6, r4
 8028c60:	9c03      	ldr	r4, [sp, #12]
 8028c62:	9000      	str	r0, [sp, #0]
 8028c64:	4622      	mov	r2, r4
 8028c66:	3201      	adds	r2, #1
 8028c68:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8028c6c:	9900      	ldr	r1, [sp, #0]
 8028c6e:	1828      	adds	r0, r5, r0
 8028c70:	eb00 0e01 	add.w	lr, r0, r1
 8028c74:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028c76:	440a      	add	r2, r1
 8028c78:	eb04 0c01 	add.w	ip, r4, r1
 8028c7c:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8028c80:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8028c84:	9a00      	ldr	r2, [sp, #0]
 8028c86:	940f      	str	r4, [sp, #60]	; 0x3c
 8028c88:	00ed      	lsls	r5, r5, #3
 8028c8a:	9511      	str	r5, [sp, #68]	; 0x44
 8028c8c:	00d5      	lsls	r5, r2, #3
 8028c8e:	950d      	str	r5, [sp, #52]	; 0x34
 8028c90:	9d01      	ldr	r5, [sp, #4]
 8028c92:	3508      	adds	r5, #8
 8028c94:	9516      	str	r5, [sp, #88]	; 0x58
 8028c96:	9d02      	ldr	r5, [sp, #8]
 8028c98:	3508      	adds	r5, #8
 8028c9a:	0114      	lsls	r4, r2, #4
 8028c9c:	9517      	str	r5, [sp, #92]	; 0x5c
 8028c9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028ca0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8028ca2:	940e      	str	r4, [sp, #56]	; 0x38
 8028ca4:	00c0      	lsls	r0, r0, #3
 8028ca6:	9010      	str	r0, [sp, #64]	; 0x40
 8028ca8:	18aa      	adds	r2, r5, r2
 8028caa:	9207      	str	r2, [sp, #28]
 8028cac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8028cae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8028cb0:	18aa      	adds	r2, r5, r2
 8028cb2:	9208      	str	r2, [sp, #32]
 8028cb4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028cb6:	18aa      	adds	r2, r5, r2
 8028cb8:	9209      	str	r2, [sp, #36]	; 0x24
 8028cba:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8028cbe:	f10e 0204 	add.w	r2, lr, #4
 8028cc2:	920a      	str	r2, [sp, #40]	; 0x28
 8028cc4:	00c9      	lsls	r1, r1, #3
 8028cc6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8028cc8:	310c      	adds	r1, #12
 8028cca:	00f6      	lsls	r6, r6, #3
 8028ccc:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8028cd0:	9114      	str	r1, [sp, #80]	; 0x50
 8028cd2:	18a9      	adds	r1, r5, r2
 8028cd4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028cd6:	9612      	str	r6, [sp, #72]	; 0x48
 8028cd8:	00ff      	lsls	r7, r7, #3
 8028cda:	19ae      	adds	r6, r5, r6
 8028cdc:	3008      	adds	r0, #8
 8028cde:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8028ce2:	9606      	str	r6, [sp, #24]
 8028ce4:	9019      	str	r0, [sp, #100]	; 0x64
 8028ce6:	18aa      	adds	r2, r5, r2
 8028ce8:	0164      	lsls	r4, r4, #5
 8028cea:	19ee      	adds	r6, r5, r7
 8028cec:	f10c 000c 	add.w	r0, ip, #12
 8028cf0:	9713      	str	r7, [sp, #76]	; 0x4c
 8028cf2:	9604      	str	r6, [sp, #16]
 8028cf4:	9015      	str	r0, [sp, #84]	; 0x54
 8028cf6:	9103      	str	r1, [sp, #12]
 8028cf8:	9205      	str	r2, [sp, #20]
 8028cfa:	f104 0208 	add.w	r2, r4, #8
 8028cfe:	9218      	str	r2, [sp, #96]	; 0x60
 8028d00:	f04f 0801 	mov.w	r8, #1
 8028d04:	2200      	movs	r2, #0
 8028d06:	f102 0108 	add.w	r1, r2, #8
 8028d0a:	460f      	mov	r7, r1
 8028d0c:	910b      	str	r1, [sp, #44]	; 0x2c
 8028d0e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028d10:	188e      	adds	r6, r1, r2
 8028d12:	9916      	ldr	r1, [sp, #88]	; 0x58
 8028d14:	188d      	adds	r5, r1, r2
 8028d16:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8028d18:	188c      	adds	r4, r1, r2
 8028d1a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8028d1c:	1888      	adds	r0, r1, r2
 8028d1e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8028d20:	eb01 0c02 	add.w	ip, r1, r2
 8028d24:	9915      	ldr	r1, [sp, #84]	; 0x54
 8028d26:	440a      	add	r2, r1
 8028d28:	9903      	ldr	r1, [sp, #12]
 8028d2a:	edd1 fa00 	vldr	s31, [r1]
 8028d2e:	9905      	ldr	r1, [sp, #20]
 8028d30:	ed91 fa00 	vldr	s30, [r1]
 8028d34:	9904      	ldr	r1, [sp, #16]
 8028d36:	edd1 ea00 	vldr	s29, [r1]
 8028d3a:	9906      	ldr	r1, [sp, #24]
 8028d3c:	ed91 ea00 	vldr	s28, [r1]
 8028d40:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028d42:	edd1 da00 	vldr	s27, [r1]
 8028d46:	9908      	ldr	r1, [sp, #32]
 8028d48:	ed91 da00 	vldr	s26, [r1]
 8028d4c:	9907      	ldr	r1, [sp, #28]
 8028d4e:	edd1 ca00 	vldr	s25, [r1]
 8028d52:	9903      	ldr	r1, [sp, #12]
 8028d54:	ed91 ca01 	vldr	s24, [r1, #4]
 8028d58:	9905      	ldr	r1, [sp, #20]
 8028d5a:	edd1 ba01 	vldr	s23, [r1, #4]
 8028d5e:	9904      	ldr	r1, [sp, #16]
 8028d60:	edd1 aa01 	vldr	s21, [r1, #4]
 8028d64:	9906      	ldr	r1, [sp, #24]
 8028d66:	ed91 aa01 	vldr	s20, [r1, #4]
 8028d6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028d6c:	edd1 7a01 	vldr	s15, [r1, #4]
 8028d70:	9908      	ldr	r1, [sp, #32]
 8028d72:	edcd 7a00 	vstr	s15, [sp]
 8028d76:	edd1 7a01 	vldr	s15, [r1, #4]
 8028d7a:	9907      	ldr	r1, [sp, #28]
 8028d7c:	edcd 7a01 	vstr	s15, [sp, #4]
 8028d80:	edd1 7a01 	vldr	s15, [r1, #4]
 8028d84:	eb0a 0e07 	add.w	lr, sl, r7
 8028d88:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8028d8a:	edcd 7a02 	vstr	s15, [sp, #8]
 8028d8e:	eb0c 010a 	add.w	r1, ip, sl
 8028d92:	4456      	add	r6, sl
 8028d94:	4455      	add	r5, sl
 8028d96:	4454      	add	r4, sl
 8028d98:	4450      	add	r0, sl
 8028d9a:	4452      	add	r2, sl
 8028d9c:	46c4      	mov	ip, r8
 8028d9e:	e001      	b.n	8028da4 <arm_radix8_butterfly_f32+0x334>
 8028da0:	3f3504f3 	.word	0x3f3504f3
 8028da4:	ed96 5a00 	vldr	s10, [r6]
 8028da8:	ed52 9a01 	vldr	s19, [r2, #-4]
 8028dac:	ed11 6a01 	vldr	s12, [r1, #-4]
 8028db0:	edd0 7a00 	vldr	s15, [r0]
 8028db4:	ed17 7a01 	vldr	s14, [r7, #-4]
 8028db8:	edde 3a00 	vldr	s7, [lr]
 8028dbc:	ed94 3a00 	vldr	s6, [r4]
 8028dc0:	ed95 2a00 	vldr	s4, [r5]
 8028dc4:	ed9e 0a01 	vldr	s0, [lr, #4]
 8028dc8:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028dcc:	ee32 1a06 	vadd.f32	s2, s4, s12
 8028dd0:	ee33 4a29 	vadd.f32	s8, s6, s19
 8028dd4:	ee77 4a87 	vadd.f32	s9, s15, s14
 8028dd8:	ee78 1a04 	vadd.f32	s3, s16, s8
 8028ddc:	ee71 6a24 	vadd.f32	s13, s2, s9
 8028de0:	ee32 2a46 	vsub.f32	s4, s4, s12
 8028de4:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8028de8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028dec:	ed8e 6a00 	vstr	s12, [lr]
 8028df0:	edd0 8a01 	vldr	s17, [r0, #4]
 8028df4:	ed95 9a01 	vldr	s18, [r5, #4]
 8028df8:	edd1 2a00 	vldr	s5, [r1]
 8028dfc:	ed97 7a00 	vldr	s14, [r7]
 8028e00:	edd4 0a01 	vldr	s1, [r4, #4]
 8028e04:	ed96 6a01 	vldr	s12, [r6, #4]
 8028e08:	edd2 5a00 	vldr	s11, [r2]
 8028e0c:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8028e10:	ee33 3a69 	vsub.f32	s6, s6, s19
 8028e14:	ee39 5a62 	vsub.f32	s10, s18, s5
 8028e18:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8028e1c:	ee38 4a44 	vsub.f32	s8, s16, s8
 8028e20:	ee38 7a87 	vadd.f32	s14, s17, s14
 8028e24:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8028e28:	ee79 2a22 	vadd.f32	s5, s18, s5
 8028e2c:	ee75 8a69 	vsub.f32	s17, s10, s19
 8028e30:	ee32 9a27 	vadd.f32	s18, s4, s15
 8028e34:	ee35 5a29 	vadd.f32	s10, s10, s19
 8028e38:	ee72 7a67 	vsub.f32	s15, s4, s15
 8028e3c:	ee30 2a06 	vadd.f32	s4, s0, s12
 8028e40:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8028e44:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8028e48:	ee32 9a08 	vadd.f32	s18, s4, s16
 8028e4c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8028e50:	ee32 2a48 	vsub.f32	s4, s4, s16
 8028e54:	ee71 4a64 	vsub.f32	s9, s2, s9
 8028e58:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8028e5c:	ee32 1a87 	vadd.f32	s2, s5, s14
 8028e60:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8028e64:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8028e68:	ee30 6a46 	vsub.f32	s12, s0, s12
 8028e6c:	ee73 0a29 	vadd.f32	s1, s6, s19
 8028e70:	ee36 0a28 	vadd.f32	s0, s12, s17
 8028e74:	ee33 3a69 	vsub.f32	s6, s6, s19
 8028e78:	ee32 7a64 	vsub.f32	s14, s4, s9
 8028e7c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8028e80:	ee36 6a68 	vsub.f32	s12, s12, s17
 8028e84:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8028e88:	ee75 8a85 	vadd.f32	s17, s11, s10
 8028e8c:	ee74 3a22 	vadd.f32	s7, s8, s5
 8028e90:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8028e94:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8028e98:	ee79 1a41 	vsub.f32	s3, s18, s2
 8028e9c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8028ea0:	ee76 5a43 	vsub.f32	s11, s12, s6
 8028ea4:	ee74 2a62 	vsub.f32	s5, s8, s5
 8028ea8:	ee72 4a24 	vadd.f32	s9, s4, s9
 8028eac:	ee30 4a60 	vsub.f32	s8, s0, s1
 8028eb0:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8028eb4:	ee30 0a20 	vadd.f32	s0, s0, s1
 8028eb8:	ee77 9a85 	vadd.f32	s19, s15, s10
 8028ebc:	ee36 6a03 	vadd.f32	s12, s12, s6
 8028ec0:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8028ec4:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8028ec8:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8028ecc:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8028ed0:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8028ed4:	ee39 1a01 	vadd.f32	s2, s18, s2
 8028ed8:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8028edc:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8028ee0:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8028ee4:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8028ee8:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8028eec:	ee35 3a03 	vadd.f32	s6, s10, s6
 8028ef0:	ee72 6a66 	vsub.f32	s13, s4, s13
 8028ef4:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8028ef8:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8028efc:	ed9d 4a02 	vldr	s8, [sp, #8]
 8028f00:	ed8e 1a01 	vstr	s2, [lr, #4]
 8028f04:	ee77 3a63 	vsub.f32	s7, s14, s7
 8028f08:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8028f0c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8028f10:	ed86 3a00 	vstr	s6, [r6]
 8028f14:	ee30 9a89 	vadd.f32	s18, s1, s18
 8028f18:	ee32 2a05 	vadd.f32	s4, s4, s10
 8028f1c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8028f20:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8028f24:	ee67 2a22 	vmul.f32	s5, s14, s5
 8028f28:	ee64 1a00 	vmul.f32	s3, s8, s0
 8028f2c:	ee27 7a24 	vmul.f32	s14, s14, s9
 8028f30:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8028f34:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8028f38:	ee64 8a28 	vmul.f32	s17, s8, s17
 8028f3c:	ed9d 4a00 	vldr	s8, [sp]
 8028f40:	edc6 6a01 	vstr	s13, [r6, #4]
 8028f44:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8028f48:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8028f4c:	ee64 9a29 	vmul.f32	s19, s8, s19
 8028f50:	ee24 4a25 	vmul.f32	s8, s8, s11
 8028f54:	ee30 7a87 	vadd.f32	s14, s1, s14
 8028f58:	ee74 4a84 	vadd.f32	s9, s9, s8
 8028f5c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8028f60:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8028f64:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8028f68:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8028f6c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8028f70:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8028f74:	ee75 1a21 	vadd.f32	s3, s10, s3
 8028f78:	ee30 0a68 	vsub.f32	s0, s0, s17
 8028f7c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8028f80:	ee70 0a84 	vadd.f32	s1, s1, s8
 8028f84:	ee36 6a67 	vsub.f32	s12, s12, s15
 8028f88:	44dc      	add	ip, fp
 8028f8a:	45e1      	cmp	r9, ip
 8028f8c:	ed84 9a00 	vstr	s18, [r4]
 8028f90:	edc4 3a01 	vstr	s7, [r4, #4]
 8028f94:	449e      	add	lr, r3
 8028f96:	ed02 7a01 	vstr	s14, [r2, #-4]
 8028f9a:	edc2 2a00 	vstr	s5, [r2]
 8028f9e:	441e      	add	r6, r3
 8028fa0:	ed85 2a00 	vstr	s4, [r5]
 8028fa4:	ed85 8a01 	vstr	s16, [r5, #4]
 8028fa8:	441c      	add	r4, r3
 8028faa:	ed47 1a01 	vstr	s3, [r7, #-4]
 8028fae:	ed87 0a00 	vstr	s0, [r7]
 8028fb2:	441a      	add	r2, r3
 8028fb4:	ed41 4a01 	vstr	s9, [r1, #-4]
 8028fb8:	edc1 9a00 	vstr	s19, [r1]
 8028fbc:	441d      	add	r5, r3
 8028fbe:	edc0 0a00 	vstr	s1, [r0]
 8028fc2:	441f      	add	r7, r3
 8028fc4:	ed80 6a01 	vstr	s12, [r0, #4]
 8028fc8:	4419      	add	r1, r3
 8028fca:	4418      	add	r0, r3
 8028fcc:	f63f aeea 	bhi.w	8028da4 <arm_radix8_butterfly_f32+0x334>
 8028fd0:	9a03      	ldr	r2, [sp, #12]
 8028fd2:	990d      	ldr	r1, [sp, #52]	; 0x34
 8028fd4:	440a      	add	r2, r1
 8028fd6:	9203      	str	r2, [sp, #12]
 8028fd8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8028fda:	9a05      	ldr	r2, [sp, #20]
 8028fdc:	440a      	add	r2, r1
 8028fde:	9205      	str	r2, [sp, #20]
 8028fe0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8028fe2:	9a04      	ldr	r2, [sp, #16]
 8028fe4:	440a      	add	r2, r1
 8028fe6:	9204      	str	r2, [sp, #16]
 8028fe8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8028fea:	9a06      	ldr	r2, [sp, #24]
 8028fec:	440a      	add	r2, r1
 8028fee:	9206      	str	r2, [sp, #24]
 8028ff0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8028ff2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028ff4:	440a      	add	r2, r1
 8028ff6:	9209      	str	r2, [sp, #36]	; 0x24
 8028ff8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8028ffa:	9a08      	ldr	r2, [sp, #32]
 8028ffc:	440a      	add	r2, r1
 8028ffe:	9208      	str	r2, [sp, #32]
 8029000:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029002:	9a07      	ldr	r2, [sp, #28]
 8029004:	440a      	add	r2, r1
 8029006:	9207      	str	r2, [sp, #28]
 8029008:	990c      	ldr	r1, [sp, #48]	; 0x30
 802900a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802900c:	f108 0801 	add.w	r8, r8, #1
 8029010:	3208      	adds	r2, #8
 8029012:	4588      	cmp	r8, r1
 8029014:	920a      	str	r2, [sp, #40]	; 0x28
 8029016:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029018:	f47f ae75 	bne.w	8028d06 <arm_radix8_butterfly_f32+0x296>
 802901c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029020:	9300      	str	r3, [sp, #0]
 8029022:	46c3      	mov	fp, r8
 8029024:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029028:	e532      	b.n	8028a90 <arm_radix8_butterfly_f32+0x20>
 802902a:	b01d      	add	sp, #116	; 0x74
 802902c:	ecbd 8b10 	vpop	{d8-d15}
 8029030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029034 <__aeabi_atexit>:
 8029034:	460b      	mov	r3, r1
 8029036:	4601      	mov	r1, r0
 8029038:	4618      	mov	r0, r3
 802903a:	f000 bef3 	b.w	8029e24 <__cxa_atexit>

0802903e <_ZdlPvj>:
 802903e:	f000 b812 	b.w	8029066 <_ZdlPv>

08029042 <__cxa_guard_acquire>:
 8029042:	6803      	ldr	r3, [r0, #0]
 8029044:	07db      	lsls	r3, r3, #31
 8029046:	d406      	bmi.n	8029056 <__cxa_guard_acquire+0x14>
 8029048:	7843      	ldrb	r3, [r0, #1]
 802904a:	b103      	cbz	r3, 802904e <__cxa_guard_acquire+0xc>
 802904c:	deff      	udf	#255	; 0xff
 802904e:	2301      	movs	r3, #1
 8029050:	7043      	strb	r3, [r0, #1]
 8029052:	4618      	mov	r0, r3
 8029054:	4770      	bx	lr
 8029056:	2000      	movs	r0, #0
 8029058:	4770      	bx	lr

0802905a <__cxa_guard_release>:
 802905a:	2301      	movs	r3, #1
 802905c:	6003      	str	r3, [r0, #0]
 802905e:	4770      	bx	lr

08029060 <__cxa_pure_virtual>:
 8029060:	b508      	push	{r3, lr}
 8029062:	f000 f80f 	bl	8029084 <_ZSt9terminatev>

08029066 <_ZdlPv>:
 8029066:	f000 be29 	b.w	8029cbc <free>

0802906a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802906a:	b508      	push	{r3, lr}
 802906c:	4780      	blx	r0
 802906e:	f000 fdf1 	bl	8029c54 <abort>
	...

08029074 <_ZSt13get_terminatev>:
 8029074:	4b02      	ldr	r3, [pc, #8]	; (8029080 <_ZSt13get_terminatev+0xc>)
 8029076:	6818      	ldr	r0, [r3, #0]
 8029078:	f3bf 8f5b 	dmb	ish
 802907c:	4770      	bx	lr
 802907e:	bf00      	nop
 8029080:	20000104 	.word	0x20000104

08029084 <_ZSt9terminatev>:
 8029084:	b508      	push	{r3, lr}
 8029086:	f7ff fff5 	bl	8029074 <_ZSt13get_terminatev>
 802908a:	f7ff ffee 	bl	802906a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029090 <sqrtf>:
 8029090:	b508      	push	{r3, lr}
 8029092:	ed2d 8b02 	vpush	{d8}
 8029096:	eeb0 8a40 	vmov.f32	s16, s0
 802909a:	f000 f8a1 	bl	80291e0 <__ieee754_sqrtf>
 802909e:	eeb4 8a48 	vcmp.f32	s16, s16
 80290a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80290a6:	d60c      	bvs.n	80290c2 <sqrtf+0x32>
 80290a8:	eddf 8a07 	vldr	s17, [pc, #28]	; 80290c8 <sqrtf+0x38>
 80290ac:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80290b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80290b4:	d505      	bpl.n	80290c2 <sqrtf+0x32>
 80290b6:	f001 f8d3 	bl	802a260 <__errno>
 80290ba:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80290be:	2321      	movs	r3, #33	; 0x21
 80290c0:	6003      	str	r3, [r0, #0]
 80290c2:	ecbd 8b02 	vpop	{d8}
 80290c6:	bd08      	pop	{r3, pc}
 80290c8:	00000000 	.word	0x00000000

080290cc <cosf>:
 80290cc:	ee10 3a10 	vmov	r3, s0
 80290d0:	b507      	push	{r0, r1, r2, lr}
 80290d2:	4a1e      	ldr	r2, [pc, #120]	; (802914c <cosf+0x80>)
 80290d4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80290d8:	4293      	cmp	r3, r2
 80290da:	dc06      	bgt.n	80290ea <cosf+0x1e>
 80290dc:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029150 <cosf+0x84>
 80290e0:	b003      	add	sp, #12
 80290e2:	f85d eb04 	ldr.w	lr, [sp], #4
 80290e6:	f000 b903 	b.w	80292f0 <__kernel_cosf>
 80290ea:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80290ee:	db04      	blt.n	80290fa <cosf+0x2e>
 80290f0:	ee30 0a40 	vsub.f32	s0, s0, s0
 80290f4:	b003      	add	sp, #12
 80290f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80290fa:	4668      	mov	r0, sp
 80290fc:	f000 f99e 	bl	802943c <__ieee754_rem_pio2f>
 8029100:	f000 0003 	and.w	r0, r0, #3
 8029104:	2801      	cmp	r0, #1
 8029106:	d009      	beq.n	802911c <cosf+0x50>
 8029108:	2802      	cmp	r0, #2
 802910a:	d010      	beq.n	802912e <cosf+0x62>
 802910c:	b9b0      	cbnz	r0, 802913c <cosf+0x70>
 802910e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029112:	ed9d 0a00 	vldr	s0, [sp]
 8029116:	f000 f8eb 	bl	80292f0 <__kernel_cosf>
 802911a:	e7eb      	b.n	80290f4 <cosf+0x28>
 802911c:	eddd 0a01 	vldr	s1, [sp, #4]
 8029120:	ed9d 0a00 	vldr	s0, [sp]
 8029124:	f000 f942 	bl	80293ac <__kernel_sinf>
 8029128:	eeb1 0a40 	vneg.f32	s0, s0
 802912c:	e7e2      	b.n	80290f4 <cosf+0x28>
 802912e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029132:	ed9d 0a00 	vldr	s0, [sp]
 8029136:	f000 f8db 	bl	80292f0 <__kernel_cosf>
 802913a:	e7f5      	b.n	8029128 <cosf+0x5c>
 802913c:	eddd 0a01 	vldr	s1, [sp, #4]
 8029140:	ed9d 0a00 	vldr	s0, [sp]
 8029144:	2001      	movs	r0, #1
 8029146:	f000 f931 	bl	80293ac <__kernel_sinf>
 802914a:	e7d3      	b.n	80290f4 <cosf+0x28>
 802914c:	3f490fd8 	.word	0x3f490fd8
 8029150:	00000000 	.word	0x00000000

08029154 <sinf>:
 8029154:	ee10 3a10 	vmov	r3, s0
 8029158:	b507      	push	{r0, r1, r2, lr}
 802915a:	4a1f      	ldr	r2, [pc, #124]	; (80291d8 <sinf+0x84>)
 802915c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029160:	4293      	cmp	r3, r2
 8029162:	dc07      	bgt.n	8029174 <sinf+0x20>
 8029164:	eddf 0a1d 	vldr	s1, [pc, #116]	; 80291dc <sinf+0x88>
 8029168:	2000      	movs	r0, #0
 802916a:	b003      	add	sp, #12
 802916c:	f85d eb04 	ldr.w	lr, [sp], #4
 8029170:	f000 b91c 	b.w	80293ac <__kernel_sinf>
 8029174:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029178:	db04      	blt.n	8029184 <sinf+0x30>
 802917a:	ee30 0a40 	vsub.f32	s0, s0, s0
 802917e:	b003      	add	sp, #12
 8029180:	f85d fb04 	ldr.w	pc, [sp], #4
 8029184:	4668      	mov	r0, sp
 8029186:	f000 f959 	bl	802943c <__ieee754_rem_pio2f>
 802918a:	f000 0003 	and.w	r0, r0, #3
 802918e:	2801      	cmp	r0, #1
 8029190:	d00a      	beq.n	80291a8 <sinf+0x54>
 8029192:	2802      	cmp	r0, #2
 8029194:	d00f      	beq.n	80291b6 <sinf+0x62>
 8029196:	b9c0      	cbnz	r0, 80291ca <sinf+0x76>
 8029198:	eddd 0a01 	vldr	s1, [sp, #4]
 802919c:	ed9d 0a00 	vldr	s0, [sp]
 80291a0:	2001      	movs	r0, #1
 80291a2:	f000 f903 	bl	80293ac <__kernel_sinf>
 80291a6:	e7ea      	b.n	802917e <sinf+0x2a>
 80291a8:	eddd 0a01 	vldr	s1, [sp, #4]
 80291ac:	ed9d 0a00 	vldr	s0, [sp]
 80291b0:	f000 f89e 	bl	80292f0 <__kernel_cosf>
 80291b4:	e7e3      	b.n	802917e <sinf+0x2a>
 80291b6:	eddd 0a01 	vldr	s1, [sp, #4]
 80291ba:	ed9d 0a00 	vldr	s0, [sp]
 80291be:	2001      	movs	r0, #1
 80291c0:	f000 f8f4 	bl	80293ac <__kernel_sinf>
 80291c4:	eeb1 0a40 	vneg.f32	s0, s0
 80291c8:	e7d9      	b.n	802917e <sinf+0x2a>
 80291ca:	eddd 0a01 	vldr	s1, [sp, #4]
 80291ce:	ed9d 0a00 	vldr	s0, [sp]
 80291d2:	f000 f88d 	bl	80292f0 <__kernel_cosf>
 80291d6:	e7f5      	b.n	80291c4 <sinf+0x70>
 80291d8:	3f490fd8 	.word	0x3f490fd8
 80291dc:	00000000 	.word	0x00000000

080291e0 <__ieee754_sqrtf>:
 80291e0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 80291e4:	4770      	bx	lr
	...

080291e8 <ceilf>:
 80291e8:	ee10 3a10 	vmov	r3, s0
 80291ec:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80291f0:	3a7f      	subs	r2, #127	; 0x7f
 80291f2:	2a16      	cmp	r2, #22
 80291f4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80291f8:	dc2a      	bgt.n	8029250 <ceilf+0x68>
 80291fa:	2a00      	cmp	r2, #0
 80291fc:	da11      	bge.n	8029222 <ceilf+0x3a>
 80291fe:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029264 <ceilf+0x7c>
 8029202:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029206:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802920a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802920e:	dd05      	ble.n	802921c <ceilf+0x34>
 8029210:	2b00      	cmp	r3, #0
 8029212:	db23      	blt.n	802925c <ceilf+0x74>
 8029214:	2900      	cmp	r1, #0
 8029216:	bf18      	it	ne
 8029218:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802921c:	ee00 3a10 	vmov	s0, r3
 8029220:	4770      	bx	lr
 8029222:	4911      	ldr	r1, [pc, #68]	; (8029268 <ceilf+0x80>)
 8029224:	4111      	asrs	r1, r2
 8029226:	420b      	tst	r3, r1
 8029228:	d0fa      	beq.n	8029220 <ceilf+0x38>
 802922a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029264 <ceilf+0x7c>
 802922e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029232:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029236:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802923a:	ddef      	ble.n	802921c <ceilf+0x34>
 802923c:	2b00      	cmp	r3, #0
 802923e:	bfc2      	ittt	gt
 8029240:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8029244:	fa40 f202 	asrgt.w	r2, r0, r2
 8029248:	189b      	addgt	r3, r3, r2
 802924a:	ea23 0301 	bic.w	r3, r3, r1
 802924e:	e7e5      	b.n	802921c <ceilf+0x34>
 8029250:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8029254:	d3e4      	bcc.n	8029220 <ceilf+0x38>
 8029256:	ee30 0a00 	vadd.f32	s0, s0, s0
 802925a:	4770      	bx	lr
 802925c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8029260:	e7dc      	b.n	802921c <ceilf+0x34>
 8029262:	bf00      	nop
 8029264:	7149f2ca 	.word	0x7149f2ca
 8029268:	007fffff 	.word	0x007fffff

0802926c <floorf>:
 802926c:	ee10 3a10 	vmov	r3, s0
 8029270:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029274:	3a7f      	subs	r2, #127	; 0x7f
 8029276:	2a16      	cmp	r2, #22
 8029278:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802927c:	dc2a      	bgt.n	80292d4 <floorf+0x68>
 802927e:	2a00      	cmp	r2, #0
 8029280:	da11      	bge.n	80292a6 <floorf+0x3a>
 8029282:	eddf 7a18 	vldr	s15, [pc, #96]	; 80292e4 <floorf+0x78>
 8029286:	ee30 0a27 	vadd.f32	s0, s0, s15
 802928a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802928e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029292:	dd05      	ble.n	80292a0 <floorf+0x34>
 8029294:	2b00      	cmp	r3, #0
 8029296:	da23      	bge.n	80292e0 <floorf+0x74>
 8029298:	4a13      	ldr	r2, [pc, #76]	; (80292e8 <floorf+0x7c>)
 802929a:	2900      	cmp	r1, #0
 802929c:	bf18      	it	ne
 802929e:	4613      	movne	r3, r2
 80292a0:	ee00 3a10 	vmov	s0, r3
 80292a4:	4770      	bx	lr
 80292a6:	4911      	ldr	r1, [pc, #68]	; (80292ec <floorf+0x80>)
 80292a8:	4111      	asrs	r1, r2
 80292aa:	420b      	tst	r3, r1
 80292ac:	d0fa      	beq.n	80292a4 <floorf+0x38>
 80292ae:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80292e4 <floorf+0x78>
 80292b2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80292b6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80292ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292be:	ddef      	ble.n	80292a0 <floorf+0x34>
 80292c0:	2b00      	cmp	r3, #0
 80292c2:	bfbe      	ittt	lt
 80292c4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80292c8:	fa40 f202 	asrlt.w	r2, r0, r2
 80292cc:	189b      	addlt	r3, r3, r2
 80292ce:	ea23 0301 	bic.w	r3, r3, r1
 80292d2:	e7e5      	b.n	80292a0 <floorf+0x34>
 80292d4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80292d8:	d3e4      	bcc.n	80292a4 <floorf+0x38>
 80292da:	ee30 0a00 	vadd.f32	s0, s0, s0
 80292de:	4770      	bx	lr
 80292e0:	2300      	movs	r3, #0
 80292e2:	e7dd      	b.n	80292a0 <floorf+0x34>
 80292e4:	7149f2ca 	.word	0x7149f2ca
 80292e8:	bf800000 	.word	0xbf800000
 80292ec:	007fffff 	.word	0x007fffff

080292f0 <__kernel_cosf>:
 80292f0:	ee10 3a10 	vmov	r3, s0
 80292f4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80292f8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80292fc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029300:	da05      	bge.n	802930e <__kernel_cosf+0x1e>
 8029302:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8029306:	ee17 2a90 	vmov	r2, s15
 802930a:	2a00      	cmp	r2, #0
 802930c:	d03b      	beq.n	8029386 <__kernel_cosf+0x96>
 802930e:	ee20 7a00 	vmul.f32	s14, s0, s0
 8029312:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802938c <__kernel_cosf+0x9c>
 8029316:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8029390 <__kernel_cosf+0xa0>
 802931a:	4a1e      	ldr	r2, [pc, #120]	; (8029394 <__kernel_cosf+0xa4>)
 802931c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029320:	4293      	cmp	r3, r2
 8029322:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8029398 <__kernel_cosf+0xa8>
 8029326:	eee6 7a07 	vfma.f32	s15, s12, s14
 802932a:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802939c <__kernel_cosf+0xac>
 802932e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029332:	eddf 7a1b 	vldr	s15, [pc, #108]	; 80293a0 <__kernel_cosf+0xb0>
 8029336:	eee6 7a07 	vfma.f32	s15, s12, s14
 802933a:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 80293a4 <__kernel_cosf+0xb4>
 802933e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029342:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8029346:	ee26 6a07 	vmul.f32	s12, s12, s14
 802934a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802934e:	eee7 0a06 	vfma.f32	s1, s14, s12
 8029352:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029356:	dc04      	bgt.n	8029362 <__kernel_cosf+0x72>
 8029358:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802935c:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8029360:	4770      	bx	lr
 8029362:	4a11      	ldr	r2, [pc, #68]	; (80293a8 <__kernel_cosf+0xb8>)
 8029364:	4293      	cmp	r3, r2
 8029366:	bfda      	itte	le
 8029368:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802936c:	ee07 3a10 	vmovle	s14, r3
 8029370:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8029374:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029378:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802937c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8029380:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029384:	4770      	bx	lr
 8029386:	eeb0 0a66 	vmov.f32	s0, s13
 802938a:	4770      	bx	lr
 802938c:	ad47d74e 	.word	0xad47d74e
 8029390:	310f74f6 	.word	0x310f74f6
 8029394:	3e999999 	.word	0x3e999999
 8029398:	b493f27c 	.word	0xb493f27c
 802939c:	37d00d01 	.word	0x37d00d01
 80293a0:	bab60b61 	.word	0xbab60b61
 80293a4:	3d2aaaab 	.word	0x3d2aaaab
 80293a8:	3f480000 	.word	0x3f480000

080293ac <__kernel_sinf>:
 80293ac:	ee10 3a10 	vmov	r3, s0
 80293b0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80293b4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80293b8:	da04      	bge.n	80293c4 <__kernel_sinf+0x18>
 80293ba:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80293be:	ee17 3a90 	vmov	r3, s15
 80293c2:	b35b      	cbz	r3, 802941c <__kernel_sinf+0x70>
 80293c4:	ee20 7a00 	vmul.f32	s14, s0, s0
 80293c8:	eddf 7a15 	vldr	s15, [pc, #84]	; 8029420 <__kernel_sinf+0x74>
 80293cc:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8029424 <__kernel_sinf+0x78>
 80293d0:	eea7 6a27 	vfma.f32	s12, s14, s15
 80293d4:	eddf 7a14 	vldr	s15, [pc, #80]	; 8029428 <__kernel_sinf+0x7c>
 80293d8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80293dc:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802942c <__kernel_sinf+0x80>
 80293e0:	eea7 6a87 	vfma.f32	s12, s15, s14
 80293e4:	eddf 7a12 	vldr	s15, [pc, #72]	; 8029430 <__kernel_sinf+0x84>
 80293e8:	ee60 6a07 	vmul.f32	s13, s0, s14
 80293ec:	eee6 7a07 	vfma.f32	s15, s12, s14
 80293f0:	b930      	cbnz	r0, 8029400 <__kernel_sinf+0x54>
 80293f2:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8029434 <__kernel_sinf+0x88>
 80293f6:	eea7 6a27 	vfma.f32	s12, s14, s15
 80293fa:	eea6 0a26 	vfma.f32	s0, s12, s13
 80293fe:	4770      	bx	lr
 8029400:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029404:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8029408:	eee0 7a86 	vfma.f32	s15, s1, s12
 802940c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8029410:	eddf 7a09 	vldr	s15, [pc, #36]	; 8029438 <__kernel_sinf+0x8c>
 8029414:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8029418:	ee30 0a60 	vsub.f32	s0, s0, s1
 802941c:	4770      	bx	lr
 802941e:	bf00      	nop
 8029420:	2f2ec9d3 	.word	0x2f2ec9d3
 8029424:	b2d72f34 	.word	0xb2d72f34
 8029428:	3638ef1b 	.word	0x3638ef1b
 802942c:	b9500d01 	.word	0xb9500d01
 8029430:	3c088889 	.word	0x3c088889
 8029434:	be2aaaab 	.word	0xbe2aaaab
 8029438:	3e2aaaab 	.word	0x3e2aaaab

0802943c <__ieee754_rem_pio2f>:
 802943c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802943e:	ee10 6a10 	vmov	r6, s0
 8029442:	4b86      	ldr	r3, [pc, #536]	; (802965c <__ieee754_rem_pio2f+0x220>)
 8029444:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8029448:	429d      	cmp	r5, r3
 802944a:	b087      	sub	sp, #28
 802944c:	4604      	mov	r4, r0
 802944e:	dc05      	bgt.n	802945c <__ieee754_rem_pio2f+0x20>
 8029450:	2300      	movs	r3, #0
 8029452:	ed80 0a00 	vstr	s0, [r0]
 8029456:	6043      	str	r3, [r0, #4]
 8029458:	2000      	movs	r0, #0
 802945a:	e020      	b.n	802949e <__ieee754_rem_pio2f+0x62>
 802945c:	4b80      	ldr	r3, [pc, #512]	; (8029660 <__ieee754_rem_pio2f+0x224>)
 802945e:	429d      	cmp	r5, r3
 8029460:	dc38      	bgt.n	80294d4 <__ieee754_rem_pio2f+0x98>
 8029462:	2e00      	cmp	r6, #0
 8029464:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8029664 <__ieee754_rem_pio2f+0x228>
 8029468:	4b7f      	ldr	r3, [pc, #508]	; (8029668 <__ieee754_rem_pio2f+0x22c>)
 802946a:	f025 050f 	bic.w	r5, r5, #15
 802946e:	dd18      	ble.n	80294a2 <__ieee754_rem_pio2f+0x66>
 8029470:	429d      	cmp	r5, r3
 8029472:	ee70 7a47 	vsub.f32	s15, s0, s14
 8029476:	bf09      	itett	eq
 8029478:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802966c <__ieee754_rem_pio2f+0x230>
 802947c:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8029670 <__ieee754_rem_pio2f+0x234>
 8029480:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8029484:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8029674 <__ieee754_rem_pio2f+0x238>
 8029488:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802948c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029490:	edc0 6a00 	vstr	s13, [r0]
 8029494:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029498:	edc0 7a01 	vstr	s15, [r0, #4]
 802949c:	2001      	movs	r0, #1
 802949e:	b007      	add	sp, #28
 80294a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80294a2:	429d      	cmp	r5, r3
 80294a4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80294a8:	bf09      	itett	eq
 80294aa:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802966c <__ieee754_rem_pio2f+0x230>
 80294ae:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8029670 <__ieee754_rem_pio2f+0x234>
 80294b2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80294b6:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8029674 <__ieee754_rem_pio2f+0x238>
 80294ba:	ee77 6a87 	vadd.f32	s13, s15, s14
 80294be:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80294c2:	edc0 6a00 	vstr	s13, [r0]
 80294c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80294ca:	edc0 7a01 	vstr	s15, [r0, #4]
 80294ce:	f04f 30ff 	mov.w	r0, #4294967295
 80294d2:	e7e4      	b.n	802949e <__ieee754_rem_pio2f+0x62>
 80294d4:	4b68      	ldr	r3, [pc, #416]	; (8029678 <__ieee754_rem_pio2f+0x23c>)
 80294d6:	429d      	cmp	r5, r3
 80294d8:	dc71      	bgt.n	80295be <__ieee754_rem_pio2f+0x182>
 80294da:	f000 f8db 	bl	8029694 <fabsf>
 80294de:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802967c <__ieee754_rem_pio2f+0x240>
 80294e2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80294e6:	eee0 7a07 	vfma.f32	s15, s0, s14
 80294ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80294ee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80294f2:	ee17 0a90 	vmov	r0, s15
 80294f6:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029664 <__ieee754_rem_pio2f+0x228>
 80294fa:	eea7 0a67 	vfms.f32	s0, s14, s15
 80294fe:	281f      	cmp	r0, #31
 8029500:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029670 <__ieee754_rem_pio2f+0x234>
 8029504:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029508:	eeb1 6a47 	vneg.f32	s12, s14
 802950c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029510:	ee16 2a90 	vmov	r2, s13
 8029514:	dc1c      	bgt.n	8029550 <__ieee754_rem_pio2f+0x114>
 8029516:	495a      	ldr	r1, [pc, #360]	; (8029680 <__ieee754_rem_pio2f+0x244>)
 8029518:	1e47      	subs	r7, r0, #1
 802951a:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802951e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8029522:	428b      	cmp	r3, r1
 8029524:	d014      	beq.n	8029550 <__ieee754_rem_pio2f+0x114>
 8029526:	6022      	str	r2, [r4, #0]
 8029528:	ed94 7a00 	vldr	s14, [r4]
 802952c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029530:	2e00      	cmp	r6, #0
 8029532:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029536:	ed84 0a01 	vstr	s0, [r4, #4]
 802953a:	dab0      	bge.n	802949e <__ieee754_rem_pio2f+0x62>
 802953c:	eeb1 7a47 	vneg.f32	s14, s14
 8029540:	eeb1 0a40 	vneg.f32	s0, s0
 8029544:	ed84 7a00 	vstr	s14, [r4]
 8029548:	ed84 0a01 	vstr	s0, [r4, #4]
 802954c:	4240      	negs	r0, r0
 802954e:	e7a6      	b.n	802949e <__ieee754_rem_pio2f+0x62>
 8029550:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029554:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8029558:	2908      	cmp	r1, #8
 802955a:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802955e:	dde2      	ble.n	8029526 <__ieee754_rem_pio2f+0xea>
 8029560:	eddf 5a42 	vldr	s11, [pc, #264]	; 802966c <__ieee754_rem_pio2f+0x230>
 8029564:	eef0 6a40 	vmov.f32	s13, s0
 8029568:	eee6 6a25 	vfma.f32	s13, s12, s11
 802956c:	ee70 7a66 	vsub.f32	s15, s0, s13
 8029570:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029574:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8029674 <__ieee754_rem_pio2f+0x238>
 8029578:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802957c:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029580:	ee15 2a90 	vmov	r2, s11
 8029584:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029588:	1a5b      	subs	r3, r3, r1
 802958a:	2b19      	cmp	r3, #25
 802958c:	dc04      	bgt.n	8029598 <__ieee754_rem_pio2f+0x15c>
 802958e:	edc4 5a00 	vstr	s11, [r4]
 8029592:	eeb0 0a66 	vmov.f32	s0, s13
 8029596:	e7c7      	b.n	8029528 <__ieee754_rem_pio2f+0xec>
 8029598:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8029684 <__ieee754_rem_pio2f+0x248>
 802959c:	eeb0 0a66 	vmov.f32	s0, s13
 80295a0:	eea6 0a25 	vfma.f32	s0, s12, s11
 80295a4:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80295a8:	eddf 6a37 	vldr	s13, [pc, #220]	; 8029688 <__ieee754_rem_pio2f+0x24c>
 80295ac:	eee6 7a25 	vfma.f32	s15, s12, s11
 80295b0:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80295b4:	ee30 7a67 	vsub.f32	s14, s0, s15
 80295b8:	ed84 7a00 	vstr	s14, [r4]
 80295bc:	e7b4      	b.n	8029528 <__ieee754_rem_pio2f+0xec>
 80295be:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80295c2:	db06      	blt.n	80295d2 <__ieee754_rem_pio2f+0x196>
 80295c4:	ee70 7a40 	vsub.f32	s15, s0, s0
 80295c8:	edc0 7a01 	vstr	s15, [r0, #4]
 80295cc:	edc0 7a00 	vstr	s15, [r0]
 80295d0:	e742      	b.n	8029458 <__ieee754_rem_pio2f+0x1c>
 80295d2:	15ea      	asrs	r2, r5, #23
 80295d4:	3a86      	subs	r2, #134	; 0x86
 80295d6:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80295da:	ee07 3a90 	vmov	s15, r3
 80295de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80295e2:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802968c <__ieee754_rem_pio2f+0x250>
 80295e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80295ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80295ee:	ed8d 7a03 	vstr	s14, [sp, #12]
 80295f2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80295f6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80295fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80295fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029602:	ed8d 7a04 	vstr	s14, [sp, #16]
 8029606:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802960a:	eef5 7a40 	vcmp.f32	s15, #0.0
 802960e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029612:	edcd 7a05 	vstr	s15, [sp, #20]
 8029616:	d11e      	bne.n	8029656 <__ieee754_rem_pio2f+0x21a>
 8029618:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802961c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029620:	bf14      	ite	ne
 8029622:	2302      	movne	r3, #2
 8029624:	2301      	moveq	r3, #1
 8029626:	491a      	ldr	r1, [pc, #104]	; (8029690 <__ieee754_rem_pio2f+0x254>)
 8029628:	9101      	str	r1, [sp, #4]
 802962a:	2102      	movs	r1, #2
 802962c:	9100      	str	r1, [sp, #0]
 802962e:	a803      	add	r0, sp, #12
 8029630:	4621      	mov	r1, r4
 8029632:	f000 f89d 	bl	8029770 <__kernel_rem_pio2f>
 8029636:	2e00      	cmp	r6, #0
 8029638:	f6bf af31 	bge.w	802949e <__ieee754_rem_pio2f+0x62>
 802963c:	edd4 7a00 	vldr	s15, [r4]
 8029640:	eef1 7a67 	vneg.f32	s15, s15
 8029644:	edc4 7a00 	vstr	s15, [r4]
 8029648:	edd4 7a01 	vldr	s15, [r4, #4]
 802964c:	eef1 7a67 	vneg.f32	s15, s15
 8029650:	edc4 7a01 	vstr	s15, [r4, #4]
 8029654:	e77a      	b.n	802954c <__ieee754_rem_pio2f+0x110>
 8029656:	2303      	movs	r3, #3
 8029658:	e7e5      	b.n	8029626 <__ieee754_rem_pio2f+0x1ea>
 802965a:	bf00      	nop
 802965c:	3f490fd8 	.word	0x3f490fd8
 8029660:	4016cbe3 	.word	0x4016cbe3
 8029664:	3fc90f80 	.word	0x3fc90f80
 8029668:	3fc90fd0 	.word	0x3fc90fd0
 802966c:	37354400 	.word	0x37354400
 8029670:	37354443 	.word	0x37354443
 8029674:	2e85a308 	.word	0x2e85a308
 8029678:	43490f80 	.word	0x43490f80
 802967c:	3f22f984 	.word	0x3f22f984
 8029680:	08041e68 	.word	0x08041e68
 8029684:	2e85a300 	.word	0x2e85a300
 8029688:	248d3132 	.word	0x248d3132
 802968c:	43800000 	.word	0x43800000
 8029690:	08041ee8 	.word	0x08041ee8

08029694 <fabsf>:
 8029694:	ee10 3a10 	vmov	r3, s0
 8029698:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802969c:	ee00 3a10 	vmov	s0, r3
 80296a0:	4770      	bx	lr
	...

080296a4 <scalbnf>:
 80296a4:	ee10 3a10 	vmov	r3, s0
 80296a8:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 80296ac:	d02b      	beq.n	8029706 <scalbnf+0x62>
 80296ae:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80296b2:	d302      	bcc.n	80296ba <scalbnf+0x16>
 80296b4:	ee30 0a00 	vadd.f32	s0, s0, s0
 80296b8:	4770      	bx	lr
 80296ba:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 80296be:	d123      	bne.n	8029708 <scalbnf+0x64>
 80296c0:	4b24      	ldr	r3, [pc, #144]	; (8029754 <scalbnf+0xb0>)
 80296c2:	eddf 7a25 	vldr	s15, [pc, #148]	; 8029758 <scalbnf+0xb4>
 80296c6:	4298      	cmp	r0, r3
 80296c8:	ee20 0a27 	vmul.f32	s0, s0, s15
 80296cc:	db17      	blt.n	80296fe <scalbnf+0x5a>
 80296ce:	ee10 3a10 	vmov	r3, s0
 80296d2:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80296d6:	3a19      	subs	r2, #25
 80296d8:	f24c 3150 	movw	r1, #50000	; 0xc350
 80296dc:	4288      	cmp	r0, r1
 80296de:	dd15      	ble.n	802970c <scalbnf+0x68>
 80296e0:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802975c <scalbnf+0xb8>
 80296e4:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8029760 <scalbnf+0xbc>
 80296e8:	ee10 3a10 	vmov	r3, s0
 80296ec:	eeb0 7a67 	vmov.f32	s14, s15
 80296f0:	2b00      	cmp	r3, #0
 80296f2:	bfb8      	it	lt
 80296f4:	eef0 7a66 	vmovlt.f32	s15, s13
 80296f8:	ee27 0a87 	vmul.f32	s0, s15, s14
 80296fc:	4770      	bx	lr
 80296fe:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029764 <scalbnf+0xc0>
 8029702:	ee27 0a80 	vmul.f32	s0, s15, s0
 8029706:	4770      	bx	lr
 8029708:	0dd2      	lsrs	r2, r2, #23
 802970a:	e7e5      	b.n	80296d8 <scalbnf+0x34>
 802970c:	4410      	add	r0, r2
 802970e:	28fe      	cmp	r0, #254	; 0xfe
 8029710:	dce6      	bgt.n	80296e0 <scalbnf+0x3c>
 8029712:	2800      	cmp	r0, #0
 8029714:	dd06      	ble.n	8029724 <scalbnf+0x80>
 8029716:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802971a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802971e:	ee00 3a10 	vmov	s0, r3
 8029722:	4770      	bx	lr
 8029724:	f110 0f16 	cmn.w	r0, #22
 8029728:	da09      	bge.n	802973e <scalbnf+0x9a>
 802972a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029764 <scalbnf+0xc0>
 802972e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8029768 <scalbnf+0xc4>
 8029732:	ee10 3a10 	vmov	r3, s0
 8029736:	eeb0 7a67 	vmov.f32	s14, s15
 802973a:	2b00      	cmp	r3, #0
 802973c:	e7d9      	b.n	80296f2 <scalbnf+0x4e>
 802973e:	3019      	adds	r0, #25
 8029740:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029744:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029748:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802976c <scalbnf+0xc8>
 802974c:	ee07 3a90 	vmov	s15, r3
 8029750:	e7d7      	b.n	8029702 <scalbnf+0x5e>
 8029752:	bf00      	nop
 8029754:	ffff3cb0 	.word	0xffff3cb0
 8029758:	4c000000 	.word	0x4c000000
 802975c:	7149f2ca 	.word	0x7149f2ca
 8029760:	f149f2ca 	.word	0xf149f2ca
 8029764:	0da24260 	.word	0x0da24260
 8029768:	8da24260 	.word	0x8da24260
 802976c:	33000000 	.word	0x33000000

08029770 <__kernel_rem_pio2f>:
 8029770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029774:	ed2d 8b04 	vpush	{d8-d9}
 8029778:	b0d9      	sub	sp, #356	; 0x164
 802977a:	4688      	mov	r8, r1
 802977c:	9002      	str	r0, [sp, #8]
 802977e:	49b8      	ldr	r1, [pc, #736]	; (8029a60 <__kernel_rem_pio2f+0x2f0>)
 8029780:	9866      	ldr	r0, [sp, #408]	; 0x198
 8029782:	9301      	str	r3, [sp, #4]
 8029784:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8029788:	9901      	ldr	r1, [sp, #4]
 802978a:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802978c:	f101 3bff 	add.w	fp, r1, #4294967295
 8029790:	1d11      	adds	r1, r2, #4
 8029792:	db25      	blt.n	80297e0 <__kernel_rem_pio2f+0x70>
 8029794:	1ed0      	subs	r0, r2, #3
 8029796:	bf48      	it	mi
 8029798:	1d10      	addmi	r0, r2, #4
 802979a:	10c0      	asrs	r0, r0, #3
 802979c:	1c45      	adds	r5, r0, #1
 802979e:	00e9      	lsls	r1, r5, #3
 80297a0:	eba0 070b 	sub.w	r7, r0, fp
 80297a4:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8029a70 <__kernel_rem_pio2f+0x300>
 80297a8:	9103      	str	r1, [sp, #12]
 80297aa:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 80297ae:	eb0a 0c0b 	add.w	ip, sl, fp
 80297b2:	ae1c      	add	r6, sp, #112	; 0x70
 80297b4:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 80297b8:	2400      	movs	r4, #0
 80297ba:	4564      	cmp	r4, ip
 80297bc:	dd12      	ble.n	80297e4 <__kernel_rem_pio2f+0x74>
 80297be:	9901      	ldr	r1, [sp, #4]
 80297c0:	ac1c      	add	r4, sp, #112	; 0x70
 80297c2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80297c6:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 80297ca:	f04f 0c00 	mov.w	ip, #0
 80297ce:	45d4      	cmp	ip, sl
 80297d0:	dc27      	bgt.n	8029822 <__kernel_rem_pio2f+0xb2>
 80297d2:	f8dd e008 	ldr.w	lr, [sp, #8]
 80297d6:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8029a70 <__kernel_rem_pio2f+0x300>
 80297da:	4627      	mov	r7, r4
 80297dc:	2600      	movs	r6, #0
 80297de:	e016      	b.n	802980e <__kernel_rem_pio2f+0x9e>
 80297e0:	2000      	movs	r0, #0
 80297e2:	e7db      	b.n	802979c <__kernel_rem_pio2f+0x2c>
 80297e4:	42e7      	cmn	r7, r4
 80297e6:	bf5d      	ittte	pl
 80297e8:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 80297ec:	ee07 1a90 	vmovpl	s15, r1
 80297f0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80297f4:	eef0 7a47 	vmovmi.f32	s15, s14
 80297f8:	ece6 7a01 	vstmia	r6!, {s15}
 80297fc:	3401      	adds	r4, #1
 80297fe:	e7dc      	b.n	80297ba <__kernel_rem_pio2f+0x4a>
 8029800:	ecfe 6a01 	vldmia	lr!, {s13}
 8029804:	ed97 7a00 	vldr	s14, [r7]
 8029808:	eee6 7a87 	vfma.f32	s15, s13, s14
 802980c:	3601      	adds	r6, #1
 802980e:	455e      	cmp	r6, fp
 8029810:	f1a7 0704 	sub.w	r7, r7, #4
 8029814:	ddf4      	ble.n	8029800 <__kernel_rem_pio2f+0x90>
 8029816:	ece9 7a01 	vstmia	r9!, {s15}
 802981a:	f10c 0c01 	add.w	ip, ip, #1
 802981e:	3404      	adds	r4, #4
 8029820:	e7d5      	b.n	80297ce <__kernel_rem_pio2f+0x5e>
 8029822:	a908      	add	r1, sp, #32
 8029824:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8029828:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802982c:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8029a6c <__kernel_rem_pio2f+0x2fc>
 8029830:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8029a68 <__kernel_rem_pio2f+0x2f8>
 8029834:	9105      	str	r1, [sp, #20]
 8029836:	9304      	str	r3, [sp, #16]
 8029838:	4656      	mov	r6, sl
 802983a:	00b3      	lsls	r3, r6, #2
 802983c:	9306      	str	r3, [sp, #24]
 802983e:	ab58      	add	r3, sp, #352	; 0x160
 8029840:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029844:	ac08      	add	r4, sp, #32
 8029846:	ab44      	add	r3, sp, #272	; 0x110
 8029848:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802984c:	46a4      	mov	ip, r4
 802984e:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029852:	4637      	mov	r7, r6
 8029854:	2f00      	cmp	r7, #0
 8029856:	f1a0 0004 	sub.w	r0, r0, #4
 802985a:	dc4a      	bgt.n	80298f2 <__kernel_rem_pio2f+0x182>
 802985c:	4628      	mov	r0, r5
 802985e:	9207      	str	r2, [sp, #28]
 8029860:	f7ff ff20 	bl	80296a4 <scalbnf>
 8029864:	eeb0 8a40 	vmov.f32	s16, s0
 8029868:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802986c:	ee28 0a00 	vmul.f32	s0, s16, s0
 8029870:	f7ff fcfc 	bl	802926c <floorf>
 8029874:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8029878:	eea0 8a67 	vfms.f32	s16, s0, s15
 802987c:	2d00      	cmp	r5, #0
 802987e:	9a07      	ldr	r2, [sp, #28]
 8029880:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8029884:	ee17 9a90 	vmov	r9, s15
 8029888:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802988c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029890:	dd41      	ble.n	8029916 <__kernel_rem_pio2f+0x1a6>
 8029892:	f106 3cff 	add.w	ip, r6, #4294967295
 8029896:	ab08      	add	r3, sp, #32
 8029898:	f1c5 0e08 	rsb	lr, r5, #8
 802989c:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 80298a0:	fa47 f00e 	asr.w	r0, r7, lr
 80298a4:	4481      	add	r9, r0
 80298a6:	fa00 f00e 	lsl.w	r0, r0, lr
 80298aa:	1a3f      	subs	r7, r7, r0
 80298ac:	f1c5 0007 	rsb	r0, r5, #7
 80298b0:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 80298b4:	4107      	asrs	r7, r0
 80298b6:	2f00      	cmp	r7, #0
 80298b8:	dd3c      	ble.n	8029934 <__kernel_rem_pio2f+0x1c4>
 80298ba:	f04f 0e00 	mov.w	lr, #0
 80298be:	f109 0901 	add.w	r9, r9, #1
 80298c2:	4671      	mov	r1, lr
 80298c4:	4576      	cmp	r6, lr
 80298c6:	dc67      	bgt.n	8029998 <__kernel_rem_pio2f+0x228>
 80298c8:	2d00      	cmp	r5, #0
 80298ca:	dd03      	ble.n	80298d4 <__kernel_rem_pio2f+0x164>
 80298cc:	2d01      	cmp	r5, #1
 80298ce:	d074      	beq.n	80299ba <__kernel_rem_pio2f+0x24a>
 80298d0:	2d02      	cmp	r5, #2
 80298d2:	d07b      	beq.n	80299cc <__kernel_rem_pio2f+0x25c>
 80298d4:	2f02      	cmp	r7, #2
 80298d6:	d12d      	bne.n	8029934 <__kernel_rem_pio2f+0x1c4>
 80298d8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80298dc:	ee30 8a48 	vsub.f32	s16, s0, s16
 80298e0:	b341      	cbz	r1, 8029934 <__kernel_rem_pio2f+0x1c4>
 80298e2:	4628      	mov	r0, r5
 80298e4:	9207      	str	r2, [sp, #28]
 80298e6:	f7ff fedd 	bl	80296a4 <scalbnf>
 80298ea:	9a07      	ldr	r2, [sp, #28]
 80298ec:	ee38 8a40 	vsub.f32	s16, s16, s0
 80298f0:	e020      	b.n	8029934 <__kernel_rem_pio2f+0x1c4>
 80298f2:	ee60 7a28 	vmul.f32	s15, s0, s17
 80298f6:	3f01      	subs	r7, #1
 80298f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80298fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029900:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8029904:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029908:	ecac 0a01 	vstmia	ip!, {s0}
 802990c:	ed90 0a00 	vldr	s0, [r0]
 8029910:	ee37 0a80 	vadd.f32	s0, s15, s0
 8029914:	e79e      	b.n	8029854 <__kernel_rem_pio2f+0xe4>
 8029916:	d105      	bne.n	8029924 <__kernel_rem_pio2f+0x1b4>
 8029918:	1e70      	subs	r0, r6, #1
 802991a:	ab08      	add	r3, sp, #32
 802991c:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8029920:	11ff      	asrs	r7, r7, #7
 8029922:	e7c8      	b.n	80298b6 <__kernel_rem_pio2f+0x146>
 8029924:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029928:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802992c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029930:	da30      	bge.n	8029994 <__kernel_rem_pio2f+0x224>
 8029932:	2700      	movs	r7, #0
 8029934:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8029938:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802993c:	f040 809a 	bne.w	8029a74 <__kernel_rem_pio2f+0x304>
 8029940:	1e74      	subs	r4, r6, #1
 8029942:	46a4      	mov	ip, r4
 8029944:	2100      	movs	r1, #0
 8029946:	45d4      	cmp	ip, sl
 8029948:	da47      	bge.n	80299da <__kernel_rem_pio2f+0x26a>
 802994a:	2900      	cmp	r1, #0
 802994c:	d063      	beq.n	8029a16 <__kernel_rem_pio2f+0x2a6>
 802994e:	ab08      	add	r3, sp, #32
 8029950:	3d08      	subs	r5, #8
 8029952:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8029956:	2b00      	cmp	r3, #0
 8029958:	d07f      	beq.n	8029a5a <__kernel_rem_pio2f+0x2ea>
 802995a:	4628      	mov	r0, r5
 802995c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029960:	f7ff fea0 	bl	80296a4 <scalbnf>
 8029964:	1c63      	adds	r3, r4, #1
 8029966:	aa44      	add	r2, sp, #272	; 0x110
 8029968:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8029a6c <__kernel_rem_pio2f+0x2fc>
 802996c:	0099      	lsls	r1, r3, #2
 802996e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029972:	4623      	mov	r3, r4
 8029974:	2b00      	cmp	r3, #0
 8029976:	f280 80ad 	bge.w	8029ad4 <__kernel_rem_pio2f+0x364>
 802997a:	4623      	mov	r3, r4
 802997c:	2b00      	cmp	r3, #0
 802997e:	f2c0 80cb 	blt.w	8029b18 <__kernel_rem_pio2f+0x3a8>
 8029982:	aa44      	add	r2, sp, #272	; 0x110
 8029984:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8029988:	4e36      	ldr	r6, [pc, #216]	; (8029a64 <__kernel_rem_pio2f+0x2f4>)
 802998a:	eddf 7a39 	vldr	s15, [pc, #228]	; 8029a70 <__kernel_rem_pio2f+0x300>
 802998e:	2000      	movs	r0, #0
 8029990:	1ae2      	subs	r2, r4, r3
 8029992:	e0b6      	b.n	8029b02 <__kernel_rem_pio2f+0x392>
 8029994:	2702      	movs	r7, #2
 8029996:	e790      	b.n	80298ba <__kernel_rem_pio2f+0x14a>
 8029998:	6820      	ldr	r0, [r4, #0]
 802999a:	b949      	cbnz	r1, 80299b0 <__kernel_rem_pio2f+0x240>
 802999c:	b118      	cbz	r0, 80299a6 <__kernel_rem_pio2f+0x236>
 802999e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80299a2:	6020      	str	r0, [r4, #0]
 80299a4:	2001      	movs	r0, #1
 80299a6:	f10e 0e01 	add.w	lr, lr, #1
 80299aa:	3404      	adds	r4, #4
 80299ac:	4601      	mov	r1, r0
 80299ae:	e789      	b.n	80298c4 <__kernel_rem_pio2f+0x154>
 80299b0:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 80299b4:	6020      	str	r0, [r4, #0]
 80299b6:	4608      	mov	r0, r1
 80299b8:	e7f5      	b.n	80299a6 <__kernel_rem_pio2f+0x236>
 80299ba:	1e74      	subs	r4, r6, #1
 80299bc:	ab08      	add	r3, sp, #32
 80299be:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80299c2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80299c6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80299ca:	e783      	b.n	80298d4 <__kernel_rem_pio2f+0x164>
 80299cc:	1e74      	subs	r4, r6, #1
 80299ce:	ab08      	add	r3, sp, #32
 80299d0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80299d4:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80299d8:	e7f5      	b.n	80299c6 <__kernel_rem_pio2f+0x256>
 80299da:	ab08      	add	r3, sp, #32
 80299dc:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 80299e0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80299e4:	4301      	orrs	r1, r0
 80299e6:	e7ae      	b.n	8029946 <__kernel_rem_pio2f+0x1d6>
 80299e8:	3001      	adds	r0, #1
 80299ea:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 80299ee:	2f00      	cmp	r7, #0
 80299f0:	d0fa      	beq.n	80299e8 <__kernel_rem_pio2f+0x278>
 80299f2:	9b06      	ldr	r3, [sp, #24]
 80299f4:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 80299f8:	eb0d 0403 	add.w	r4, sp, r3
 80299fc:	9b01      	ldr	r3, [sp, #4]
 80299fe:	18f7      	adds	r7, r6, r3
 8029a00:	ab1c      	add	r3, sp, #112	; 0x70
 8029a02:	f106 0c01 	add.w	ip, r6, #1
 8029a06:	3c4c      	subs	r4, #76	; 0x4c
 8029a08:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8029a0c:	4430      	add	r0, r6
 8029a0e:	4560      	cmp	r0, ip
 8029a10:	da04      	bge.n	8029a1c <__kernel_rem_pio2f+0x2ac>
 8029a12:	4606      	mov	r6, r0
 8029a14:	e711      	b.n	802983a <__kernel_rem_pio2f+0xca>
 8029a16:	9c05      	ldr	r4, [sp, #20]
 8029a18:	2001      	movs	r0, #1
 8029a1a:	e7e6      	b.n	80299ea <__kernel_rem_pio2f+0x27a>
 8029a1c:	9b04      	ldr	r3, [sp, #16]
 8029a1e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029a22:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8029a26:	9306      	str	r3, [sp, #24]
 8029a28:	ee07 3a90 	vmov	s15, r3
 8029a2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029a30:	2600      	movs	r6, #0
 8029a32:	ece7 7a01 	vstmia	r7!, {s15}
 8029a36:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029a70 <__kernel_rem_pio2f+0x300>
 8029a3a:	46b9      	mov	r9, r7
 8029a3c:	455e      	cmp	r6, fp
 8029a3e:	dd04      	ble.n	8029a4a <__kernel_rem_pio2f+0x2da>
 8029a40:	ece4 7a01 	vstmia	r4!, {s15}
 8029a44:	f10c 0c01 	add.w	ip, ip, #1
 8029a48:	e7e1      	b.n	8029a0e <__kernel_rem_pio2f+0x29e>
 8029a4a:	ecfe 6a01 	vldmia	lr!, {s13}
 8029a4e:	ed39 7a01 	vldmdb	r9!, {s14}
 8029a52:	3601      	adds	r6, #1
 8029a54:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029a58:	e7f0      	b.n	8029a3c <__kernel_rem_pio2f+0x2cc>
 8029a5a:	3c01      	subs	r4, #1
 8029a5c:	e777      	b.n	802994e <__kernel_rem_pio2f+0x1de>
 8029a5e:	bf00      	nop
 8029a60:	0804222c 	.word	0x0804222c
 8029a64:	08042200 	.word	0x08042200
 8029a68:	43800000 	.word	0x43800000
 8029a6c:	3b800000 	.word	0x3b800000
 8029a70:	00000000 	.word	0x00000000
 8029a74:	9b03      	ldr	r3, [sp, #12]
 8029a76:	eeb0 0a48 	vmov.f32	s0, s16
 8029a7a:	1a98      	subs	r0, r3, r2
 8029a7c:	f7ff fe12 	bl	80296a4 <scalbnf>
 8029a80:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8029a68 <__kernel_rem_pio2f+0x2f8>
 8029a84:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8029a88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a8c:	db19      	blt.n	8029ac2 <__kernel_rem_pio2f+0x352>
 8029a8e:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8029a6c <__kernel_rem_pio2f+0x2fc>
 8029a92:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029a96:	aa08      	add	r2, sp, #32
 8029a98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029a9c:	1c74      	adds	r4, r6, #1
 8029a9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029aa2:	3508      	adds	r5, #8
 8029aa4:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8029aa8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029aac:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029ab0:	ee10 3a10 	vmov	r3, s0
 8029ab4:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029ab8:	ee17 3a90 	vmov	r3, s15
 8029abc:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8029ac0:	e74b      	b.n	802995a <__kernel_rem_pio2f+0x1ea>
 8029ac2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029ac6:	aa08      	add	r2, sp, #32
 8029ac8:	ee10 3a10 	vmov	r3, s0
 8029acc:	4634      	mov	r4, r6
 8029ace:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029ad2:	e742      	b.n	802995a <__kernel_rem_pio2f+0x1ea>
 8029ad4:	a808      	add	r0, sp, #32
 8029ad6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8029ada:	9001      	str	r0, [sp, #4]
 8029adc:	ee07 0a90 	vmov	s15, r0
 8029ae0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029ae4:	3b01      	subs	r3, #1
 8029ae6:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029aea:	ee20 0a07 	vmul.f32	s0, s0, s14
 8029aee:	ed62 7a01 	vstmdb	r2!, {s15}
 8029af2:	e73f      	b.n	8029974 <__kernel_rem_pio2f+0x204>
 8029af4:	ecf6 6a01 	vldmia	r6!, {s13}
 8029af8:	ecb5 7a01 	vldmia	r5!, {s14}
 8029afc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029b00:	3001      	adds	r0, #1
 8029b02:	4550      	cmp	r0, sl
 8029b04:	dc01      	bgt.n	8029b0a <__kernel_rem_pio2f+0x39a>
 8029b06:	4290      	cmp	r0, r2
 8029b08:	ddf4      	ble.n	8029af4 <__kernel_rem_pio2f+0x384>
 8029b0a:	a858      	add	r0, sp, #352	; 0x160
 8029b0c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8029b10:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8029b14:	3b01      	subs	r3, #1
 8029b16:	e731      	b.n	802997c <__kernel_rem_pio2f+0x20c>
 8029b18:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029b1a:	2b02      	cmp	r3, #2
 8029b1c:	dc09      	bgt.n	8029b32 <__kernel_rem_pio2f+0x3c2>
 8029b1e:	2b00      	cmp	r3, #0
 8029b20:	dc2b      	bgt.n	8029b7a <__kernel_rem_pio2f+0x40a>
 8029b22:	d044      	beq.n	8029bae <__kernel_rem_pio2f+0x43e>
 8029b24:	f009 0007 	and.w	r0, r9, #7
 8029b28:	b059      	add	sp, #356	; 0x164
 8029b2a:	ecbd 8b04 	vpop	{d8-d9}
 8029b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029b32:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029b34:	2b03      	cmp	r3, #3
 8029b36:	d1f5      	bne.n	8029b24 <__kernel_rem_pio2f+0x3b4>
 8029b38:	aa30      	add	r2, sp, #192	; 0xc0
 8029b3a:	1f0b      	subs	r3, r1, #4
 8029b3c:	4413      	add	r3, r2
 8029b3e:	461a      	mov	r2, r3
 8029b40:	4620      	mov	r0, r4
 8029b42:	2800      	cmp	r0, #0
 8029b44:	f1a2 0204 	sub.w	r2, r2, #4
 8029b48:	dc52      	bgt.n	8029bf0 <__kernel_rem_pio2f+0x480>
 8029b4a:	4622      	mov	r2, r4
 8029b4c:	2a01      	cmp	r2, #1
 8029b4e:	f1a3 0304 	sub.w	r3, r3, #4
 8029b52:	dc5d      	bgt.n	8029c10 <__kernel_rem_pio2f+0x4a0>
 8029b54:	ab30      	add	r3, sp, #192	; 0xc0
 8029b56:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8029a70 <__kernel_rem_pio2f+0x300>
 8029b5a:	440b      	add	r3, r1
 8029b5c:	2c01      	cmp	r4, #1
 8029b5e:	dc67      	bgt.n	8029c30 <__kernel_rem_pio2f+0x4c0>
 8029b60:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8029b64:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8029b68:	2f00      	cmp	r7, #0
 8029b6a:	d167      	bne.n	8029c3c <__kernel_rem_pio2f+0x4cc>
 8029b6c:	edc8 6a00 	vstr	s13, [r8]
 8029b70:	ed88 7a01 	vstr	s14, [r8, #4]
 8029b74:	edc8 7a02 	vstr	s15, [r8, #8]
 8029b78:	e7d4      	b.n	8029b24 <__kernel_rem_pio2f+0x3b4>
 8029b7a:	ab30      	add	r3, sp, #192	; 0xc0
 8029b7c:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8029a70 <__kernel_rem_pio2f+0x300>
 8029b80:	440b      	add	r3, r1
 8029b82:	4622      	mov	r2, r4
 8029b84:	2a00      	cmp	r2, #0
 8029b86:	da24      	bge.n	8029bd2 <__kernel_rem_pio2f+0x462>
 8029b88:	b34f      	cbz	r7, 8029bde <__kernel_rem_pio2f+0x46e>
 8029b8a:	eef1 7a47 	vneg.f32	s15, s14
 8029b8e:	edc8 7a00 	vstr	s15, [r8]
 8029b92:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8029b96:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029b9a:	aa31      	add	r2, sp, #196	; 0xc4
 8029b9c:	2301      	movs	r3, #1
 8029b9e:	429c      	cmp	r4, r3
 8029ba0:	da20      	bge.n	8029be4 <__kernel_rem_pio2f+0x474>
 8029ba2:	b10f      	cbz	r7, 8029ba8 <__kernel_rem_pio2f+0x438>
 8029ba4:	eef1 7a67 	vneg.f32	s15, s15
 8029ba8:	edc8 7a01 	vstr	s15, [r8, #4]
 8029bac:	e7ba      	b.n	8029b24 <__kernel_rem_pio2f+0x3b4>
 8029bae:	ab30      	add	r3, sp, #192	; 0xc0
 8029bb0:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8029a70 <__kernel_rem_pio2f+0x300>
 8029bb4:	440b      	add	r3, r1
 8029bb6:	2c00      	cmp	r4, #0
 8029bb8:	da05      	bge.n	8029bc6 <__kernel_rem_pio2f+0x456>
 8029bba:	b10f      	cbz	r7, 8029bc0 <__kernel_rem_pio2f+0x450>
 8029bbc:	eef1 7a67 	vneg.f32	s15, s15
 8029bc0:	edc8 7a00 	vstr	s15, [r8]
 8029bc4:	e7ae      	b.n	8029b24 <__kernel_rem_pio2f+0x3b4>
 8029bc6:	ed33 7a01 	vldmdb	r3!, {s14}
 8029bca:	3c01      	subs	r4, #1
 8029bcc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029bd0:	e7f1      	b.n	8029bb6 <__kernel_rem_pio2f+0x446>
 8029bd2:	ed73 7a01 	vldmdb	r3!, {s15}
 8029bd6:	3a01      	subs	r2, #1
 8029bd8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029bdc:	e7d2      	b.n	8029b84 <__kernel_rem_pio2f+0x414>
 8029bde:	eef0 7a47 	vmov.f32	s15, s14
 8029be2:	e7d4      	b.n	8029b8e <__kernel_rem_pio2f+0x41e>
 8029be4:	ecb2 7a01 	vldmia	r2!, {s14}
 8029be8:	3301      	adds	r3, #1
 8029bea:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029bee:	e7d6      	b.n	8029b9e <__kernel_rem_pio2f+0x42e>
 8029bf0:	edd2 7a00 	vldr	s15, [r2]
 8029bf4:	edd2 6a01 	vldr	s13, [r2, #4]
 8029bf8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029bfc:	3801      	subs	r0, #1
 8029bfe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029c02:	ed82 7a00 	vstr	s14, [r2]
 8029c06:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029c0a:	edc2 7a01 	vstr	s15, [r2, #4]
 8029c0e:	e798      	b.n	8029b42 <__kernel_rem_pio2f+0x3d2>
 8029c10:	edd3 7a00 	vldr	s15, [r3]
 8029c14:	edd3 6a01 	vldr	s13, [r3, #4]
 8029c18:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029c1c:	3a01      	subs	r2, #1
 8029c1e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029c22:	ed83 7a00 	vstr	s14, [r3]
 8029c26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029c2a:	edc3 7a01 	vstr	s15, [r3, #4]
 8029c2e:	e78d      	b.n	8029b4c <__kernel_rem_pio2f+0x3dc>
 8029c30:	ed33 7a01 	vldmdb	r3!, {s14}
 8029c34:	3c01      	subs	r4, #1
 8029c36:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029c3a:	e78f      	b.n	8029b5c <__kernel_rem_pio2f+0x3ec>
 8029c3c:	eef1 6a66 	vneg.f32	s13, s13
 8029c40:	eeb1 7a47 	vneg.f32	s14, s14
 8029c44:	edc8 6a00 	vstr	s13, [r8]
 8029c48:	ed88 7a01 	vstr	s14, [r8, #4]
 8029c4c:	eef1 7a67 	vneg.f32	s15, s15
 8029c50:	e790      	b.n	8029b74 <__kernel_rem_pio2f+0x404>
 8029c52:	bf00      	nop

08029c54 <abort>:
 8029c54:	b508      	push	{r3, lr}
 8029c56:	2006      	movs	r0, #6
 8029c58:	f000 fa3a 	bl	802a0d0 <raise>
 8029c5c:	2001      	movs	r0, #1
 8029c5e:	f7d8 fb7f 	bl	8002360 <_exit>
	...

08029c64 <__assert_func>:
 8029c64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8029c66:	4614      	mov	r4, r2
 8029c68:	461a      	mov	r2, r3
 8029c6a:	4b09      	ldr	r3, [pc, #36]	; (8029c90 <__assert_func+0x2c>)
 8029c6c:	681b      	ldr	r3, [r3, #0]
 8029c6e:	4605      	mov	r5, r0
 8029c70:	68d8      	ldr	r0, [r3, #12]
 8029c72:	b14c      	cbz	r4, 8029c88 <__assert_func+0x24>
 8029c74:	4b07      	ldr	r3, [pc, #28]	; (8029c94 <__assert_func+0x30>)
 8029c76:	9100      	str	r1, [sp, #0]
 8029c78:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8029c7c:	4906      	ldr	r1, [pc, #24]	; (8029c98 <__assert_func+0x34>)
 8029c7e:	462b      	mov	r3, r5
 8029c80:	f000 f982 	bl	8029f88 <fiprintf>
 8029c84:	f7ff ffe6 	bl	8029c54 <abort>
 8029c88:	4b04      	ldr	r3, [pc, #16]	; (8029c9c <__assert_func+0x38>)
 8029c8a:	461c      	mov	r4, r3
 8029c8c:	e7f3      	b.n	8029c76 <__assert_func+0x12>
 8029c8e:	bf00      	nop
 8029c90:	20000160 	.word	0x20000160
 8029c94:	08042238 	.word	0x08042238
 8029c98:	08042245 	.word	0x08042245
 8029c9c:	08042273 	.word	0x08042273

08029ca0 <atexit>:
 8029ca0:	2300      	movs	r3, #0
 8029ca2:	4601      	mov	r1, r0
 8029ca4:	461a      	mov	r2, r3
 8029ca6:	4618      	mov	r0, r3
 8029ca8:	f000 bb16 	b.w	802a2d8 <__register_exitproc>

08029cac <malloc>:
 8029cac:	4b02      	ldr	r3, [pc, #8]	; (8029cb8 <malloc+0xc>)
 8029cae:	4601      	mov	r1, r0
 8029cb0:	6818      	ldr	r0, [r3, #0]
 8029cb2:	f000 b82b 	b.w	8029d0c <_malloc_r>
 8029cb6:	bf00      	nop
 8029cb8:	20000160 	.word	0x20000160

08029cbc <free>:
 8029cbc:	4b02      	ldr	r3, [pc, #8]	; (8029cc8 <free+0xc>)
 8029cbe:	4601      	mov	r1, r0
 8029cc0:	6818      	ldr	r0, [r3, #0]
 8029cc2:	f000 bb67 	b.w	802a394 <_free_r>
 8029cc6:	bf00      	nop
 8029cc8:	20000160 	.word	0x20000160

08029ccc <sbrk_aligned>:
 8029ccc:	b570      	push	{r4, r5, r6, lr}
 8029cce:	4e0e      	ldr	r6, [pc, #56]	; (8029d08 <sbrk_aligned+0x3c>)
 8029cd0:	460c      	mov	r4, r1
 8029cd2:	6831      	ldr	r1, [r6, #0]
 8029cd4:	4605      	mov	r5, r0
 8029cd6:	b911      	cbnz	r1, 8029cde <sbrk_aligned+0x12>
 8029cd8:	f000 faa0 	bl	802a21c <_sbrk_r>
 8029cdc:	6030      	str	r0, [r6, #0]
 8029cde:	4621      	mov	r1, r4
 8029ce0:	4628      	mov	r0, r5
 8029ce2:	f000 fa9b 	bl	802a21c <_sbrk_r>
 8029ce6:	1c43      	adds	r3, r0, #1
 8029ce8:	d00a      	beq.n	8029d00 <sbrk_aligned+0x34>
 8029cea:	1cc4      	adds	r4, r0, #3
 8029cec:	f024 0403 	bic.w	r4, r4, #3
 8029cf0:	42a0      	cmp	r0, r4
 8029cf2:	d007      	beq.n	8029d04 <sbrk_aligned+0x38>
 8029cf4:	1a21      	subs	r1, r4, r0
 8029cf6:	4628      	mov	r0, r5
 8029cf8:	f000 fa90 	bl	802a21c <_sbrk_r>
 8029cfc:	3001      	adds	r0, #1
 8029cfe:	d101      	bne.n	8029d04 <sbrk_aligned+0x38>
 8029d00:	f04f 34ff 	mov.w	r4, #4294967295
 8029d04:	4620      	mov	r0, r4
 8029d06:	bd70      	pop	{r4, r5, r6, pc}
 8029d08:	200137d4 	.word	0x200137d4

08029d0c <_malloc_r>:
 8029d0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029d10:	1ccd      	adds	r5, r1, #3
 8029d12:	f025 0503 	bic.w	r5, r5, #3
 8029d16:	3508      	adds	r5, #8
 8029d18:	2d0c      	cmp	r5, #12
 8029d1a:	bf38      	it	cc
 8029d1c:	250c      	movcc	r5, #12
 8029d1e:	2d00      	cmp	r5, #0
 8029d20:	4607      	mov	r7, r0
 8029d22:	db01      	blt.n	8029d28 <_malloc_r+0x1c>
 8029d24:	42a9      	cmp	r1, r5
 8029d26:	d905      	bls.n	8029d34 <_malloc_r+0x28>
 8029d28:	230c      	movs	r3, #12
 8029d2a:	603b      	str	r3, [r7, #0]
 8029d2c:	2600      	movs	r6, #0
 8029d2e:	4630      	mov	r0, r6
 8029d30:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029d34:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8029e08 <_malloc_r+0xfc>
 8029d38:	f000 f868 	bl	8029e0c <__malloc_lock>
 8029d3c:	f8d8 3000 	ldr.w	r3, [r8]
 8029d40:	461c      	mov	r4, r3
 8029d42:	bb5c      	cbnz	r4, 8029d9c <_malloc_r+0x90>
 8029d44:	4629      	mov	r1, r5
 8029d46:	4638      	mov	r0, r7
 8029d48:	f7ff ffc0 	bl	8029ccc <sbrk_aligned>
 8029d4c:	1c43      	adds	r3, r0, #1
 8029d4e:	4604      	mov	r4, r0
 8029d50:	d155      	bne.n	8029dfe <_malloc_r+0xf2>
 8029d52:	f8d8 4000 	ldr.w	r4, [r8]
 8029d56:	4626      	mov	r6, r4
 8029d58:	2e00      	cmp	r6, #0
 8029d5a:	d145      	bne.n	8029de8 <_malloc_r+0xdc>
 8029d5c:	2c00      	cmp	r4, #0
 8029d5e:	d048      	beq.n	8029df2 <_malloc_r+0xe6>
 8029d60:	6823      	ldr	r3, [r4, #0]
 8029d62:	4631      	mov	r1, r6
 8029d64:	4638      	mov	r0, r7
 8029d66:	eb04 0903 	add.w	r9, r4, r3
 8029d6a:	f000 fa57 	bl	802a21c <_sbrk_r>
 8029d6e:	4581      	cmp	r9, r0
 8029d70:	d13f      	bne.n	8029df2 <_malloc_r+0xe6>
 8029d72:	6821      	ldr	r1, [r4, #0]
 8029d74:	1a6d      	subs	r5, r5, r1
 8029d76:	4629      	mov	r1, r5
 8029d78:	4638      	mov	r0, r7
 8029d7a:	f7ff ffa7 	bl	8029ccc <sbrk_aligned>
 8029d7e:	3001      	adds	r0, #1
 8029d80:	d037      	beq.n	8029df2 <_malloc_r+0xe6>
 8029d82:	6823      	ldr	r3, [r4, #0]
 8029d84:	442b      	add	r3, r5
 8029d86:	6023      	str	r3, [r4, #0]
 8029d88:	f8d8 3000 	ldr.w	r3, [r8]
 8029d8c:	2b00      	cmp	r3, #0
 8029d8e:	d038      	beq.n	8029e02 <_malloc_r+0xf6>
 8029d90:	685a      	ldr	r2, [r3, #4]
 8029d92:	42a2      	cmp	r2, r4
 8029d94:	d12b      	bne.n	8029dee <_malloc_r+0xe2>
 8029d96:	2200      	movs	r2, #0
 8029d98:	605a      	str	r2, [r3, #4]
 8029d9a:	e00f      	b.n	8029dbc <_malloc_r+0xb0>
 8029d9c:	6822      	ldr	r2, [r4, #0]
 8029d9e:	1b52      	subs	r2, r2, r5
 8029da0:	d41f      	bmi.n	8029de2 <_malloc_r+0xd6>
 8029da2:	2a0b      	cmp	r2, #11
 8029da4:	d917      	bls.n	8029dd6 <_malloc_r+0xca>
 8029da6:	1961      	adds	r1, r4, r5
 8029da8:	42a3      	cmp	r3, r4
 8029daa:	6025      	str	r5, [r4, #0]
 8029dac:	bf18      	it	ne
 8029dae:	6059      	strne	r1, [r3, #4]
 8029db0:	6863      	ldr	r3, [r4, #4]
 8029db2:	bf08      	it	eq
 8029db4:	f8c8 1000 	streq.w	r1, [r8]
 8029db8:	5162      	str	r2, [r4, r5]
 8029dba:	604b      	str	r3, [r1, #4]
 8029dbc:	4638      	mov	r0, r7
 8029dbe:	f104 060b 	add.w	r6, r4, #11
 8029dc2:	f000 f829 	bl	8029e18 <__malloc_unlock>
 8029dc6:	f026 0607 	bic.w	r6, r6, #7
 8029dca:	1d23      	adds	r3, r4, #4
 8029dcc:	1af2      	subs	r2, r6, r3
 8029dce:	d0ae      	beq.n	8029d2e <_malloc_r+0x22>
 8029dd0:	1b9b      	subs	r3, r3, r6
 8029dd2:	50a3      	str	r3, [r4, r2]
 8029dd4:	e7ab      	b.n	8029d2e <_malloc_r+0x22>
 8029dd6:	42a3      	cmp	r3, r4
 8029dd8:	6862      	ldr	r2, [r4, #4]
 8029dda:	d1dd      	bne.n	8029d98 <_malloc_r+0x8c>
 8029ddc:	f8c8 2000 	str.w	r2, [r8]
 8029de0:	e7ec      	b.n	8029dbc <_malloc_r+0xb0>
 8029de2:	4623      	mov	r3, r4
 8029de4:	6864      	ldr	r4, [r4, #4]
 8029de6:	e7ac      	b.n	8029d42 <_malloc_r+0x36>
 8029de8:	4634      	mov	r4, r6
 8029dea:	6876      	ldr	r6, [r6, #4]
 8029dec:	e7b4      	b.n	8029d58 <_malloc_r+0x4c>
 8029dee:	4613      	mov	r3, r2
 8029df0:	e7cc      	b.n	8029d8c <_malloc_r+0x80>
 8029df2:	230c      	movs	r3, #12
 8029df4:	603b      	str	r3, [r7, #0]
 8029df6:	4638      	mov	r0, r7
 8029df8:	f000 f80e 	bl	8029e18 <__malloc_unlock>
 8029dfc:	e797      	b.n	8029d2e <_malloc_r+0x22>
 8029dfe:	6025      	str	r5, [r4, #0]
 8029e00:	e7dc      	b.n	8029dbc <_malloc_r+0xb0>
 8029e02:	605b      	str	r3, [r3, #4]
 8029e04:	deff      	udf	#255	; 0xff
 8029e06:	bf00      	nop
 8029e08:	200137d0 	.word	0x200137d0

08029e0c <__malloc_lock>:
 8029e0c:	4801      	ldr	r0, [pc, #4]	; (8029e14 <__malloc_lock+0x8>)
 8029e0e:	f000 ba52 	b.w	802a2b6 <__retarget_lock_acquire_recursive>
 8029e12:	bf00      	nop
 8029e14:	20013919 	.word	0x20013919

08029e18 <__malloc_unlock>:
 8029e18:	4801      	ldr	r0, [pc, #4]	; (8029e20 <__malloc_unlock+0x8>)
 8029e1a:	f000 ba4d 	b.w	802a2b8 <__retarget_lock_release_recursive>
 8029e1e:	bf00      	nop
 8029e20:	20013919 	.word	0x20013919

08029e24 <__cxa_atexit>:
 8029e24:	b510      	push	{r4, lr}
 8029e26:	4c05      	ldr	r4, [pc, #20]	; (8029e3c <__cxa_atexit+0x18>)
 8029e28:	4613      	mov	r3, r2
 8029e2a:	b12c      	cbz	r4, 8029e38 <__cxa_atexit+0x14>
 8029e2c:	460a      	mov	r2, r1
 8029e2e:	4601      	mov	r1, r0
 8029e30:	2002      	movs	r0, #2
 8029e32:	f000 fa51 	bl	802a2d8 <__register_exitproc>
 8029e36:	bd10      	pop	{r4, pc}
 8029e38:	4620      	mov	r0, r4
 8029e3a:	e7fc      	b.n	8029e36 <__cxa_atexit+0x12>
 8029e3c:	0802a2d9 	.word	0x0802a2d9

08029e40 <std>:
 8029e40:	2300      	movs	r3, #0
 8029e42:	b510      	push	{r4, lr}
 8029e44:	4604      	mov	r4, r0
 8029e46:	e9c0 3300 	strd	r3, r3, [r0]
 8029e4a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8029e4e:	6083      	str	r3, [r0, #8]
 8029e50:	8181      	strh	r1, [r0, #12]
 8029e52:	6643      	str	r3, [r0, #100]	; 0x64
 8029e54:	81c2      	strh	r2, [r0, #14]
 8029e56:	6183      	str	r3, [r0, #24]
 8029e58:	4619      	mov	r1, r3
 8029e5a:	2208      	movs	r2, #8
 8029e5c:	305c      	adds	r0, #92	; 0x5c
 8029e5e:	f000 f906 	bl	802a06e <memset>
 8029e62:	4b0d      	ldr	r3, [pc, #52]	; (8029e98 <std+0x58>)
 8029e64:	6263      	str	r3, [r4, #36]	; 0x24
 8029e66:	4b0d      	ldr	r3, [pc, #52]	; (8029e9c <std+0x5c>)
 8029e68:	62a3      	str	r3, [r4, #40]	; 0x28
 8029e6a:	4b0d      	ldr	r3, [pc, #52]	; (8029ea0 <std+0x60>)
 8029e6c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8029e6e:	4b0d      	ldr	r3, [pc, #52]	; (8029ea4 <std+0x64>)
 8029e70:	6323      	str	r3, [r4, #48]	; 0x30
 8029e72:	4b0d      	ldr	r3, [pc, #52]	; (8029ea8 <std+0x68>)
 8029e74:	6224      	str	r4, [r4, #32]
 8029e76:	429c      	cmp	r4, r3
 8029e78:	d006      	beq.n	8029e88 <std+0x48>
 8029e7a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8029e7e:	4294      	cmp	r4, r2
 8029e80:	d002      	beq.n	8029e88 <std+0x48>
 8029e82:	33d0      	adds	r3, #208	; 0xd0
 8029e84:	429c      	cmp	r4, r3
 8029e86:	d105      	bne.n	8029e94 <std+0x54>
 8029e88:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8029e8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029e90:	f000 ba10 	b.w	802a2b4 <__retarget_lock_init_recursive>
 8029e94:	bd10      	pop	{r4, pc}
 8029e96:	bf00      	nop
 8029e98:	08029fe9 	.word	0x08029fe9
 8029e9c:	0802a00b 	.word	0x0802a00b
 8029ea0:	0802a043 	.word	0x0802a043
 8029ea4:	0802a067 	.word	0x0802a067
 8029ea8:	200137d8 	.word	0x200137d8

08029eac <stdio_exit_handler>:
 8029eac:	4a02      	ldr	r2, [pc, #8]	; (8029eb8 <stdio_exit_handler+0xc>)
 8029eae:	4903      	ldr	r1, [pc, #12]	; (8029ebc <stdio_exit_handler+0x10>)
 8029eb0:	4803      	ldr	r0, [pc, #12]	; (8029ec0 <stdio_exit_handler+0x14>)
 8029eb2:	f000 b87b 	b.w	8029fac <_fwalk_sglue>
 8029eb6:	bf00      	nop
 8029eb8:	20000108 	.word	0x20000108
 8029ebc:	0802aae1 	.word	0x0802aae1
 8029ec0:	20000114 	.word	0x20000114

08029ec4 <cleanup_stdio>:
 8029ec4:	6841      	ldr	r1, [r0, #4]
 8029ec6:	4b0c      	ldr	r3, [pc, #48]	; (8029ef8 <cleanup_stdio+0x34>)
 8029ec8:	4299      	cmp	r1, r3
 8029eca:	b510      	push	{r4, lr}
 8029ecc:	4604      	mov	r4, r0
 8029ece:	d001      	beq.n	8029ed4 <cleanup_stdio+0x10>
 8029ed0:	f000 fe06 	bl	802aae0 <_fflush_r>
 8029ed4:	68a1      	ldr	r1, [r4, #8]
 8029ed6:	4b09      	ldr	r3, [pc, #36]	; (8029efc <cleanup_stdio+0x38>)
 8029ed8:	4299      	cmp	r1, r3
 8029eda:	d002      	beq.n	8029ee2 <cleanup_stdio+0x1e>
 8029edc:	4620      	mov	r0, r4
 8029ede:	f000 fdff 	bl	802aae0 <_fflush_r>
 8029ee2:	68e1      	ldr	r1, [r4, #12]
 8029ee4:	4b06      	ldr	r3, [pc, #24]	; (8029f00 <cleanup_stdio+0x3c>)
 8029ee6:	4299      	cmp	r1, r3
 8029ee8:	d004      	beq.n	8029ef4 <cleanup_stdio+0x30>
 8029eea:	4620      	mov	r0, r4
 8029eec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029ef0:	f000 bdf6 	b.w	802aae0 <_fflush_r>
 8029ef4:	bd10      	pop	{r4, pc}
 8029ef6:	bf00      	nop
 8029ef8:	200137d8 	.word	0x200137d8
 8029efc:	20013840 	.word	0x20013840
 8029f00:	200138a8 	.word	0x200138a8

08029f04 <global_stdio_init.part.0>:
 8029f04:	b510      	push	{r4, lr}
 8029f06:	4b0b      	ldr	r3, [pc, #44]	; (8029f34 <global_stdio_init.part.0+0x30>)
 8029f08:	4c0b      	ldr	r4, [pc, #44]	; (8029f38 <global_stdio_init.part.0+0x34>)
 8029f0a:	4a0c      	ldr	r2, [pc, #48]	; (8029f3c <global_stdio_init.part.0+0x38>)
 8029f0c:	601a      	str	r2, [r3, #0]
 8029f0e:	4620      	mov	r0, r4
 8029f10:	2200      	movs	r2, #0
 8029f12:	2104      	movs	r1, #4
 8029f14:	f7ff ff94 	bl	8029e40 <std>
 8029f18:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8029f1c:	2201      	movs	r2, #1
 8029f1e:	2109      	movs	r1, #9
 8029f20:	f7ff ff8e 	bl	8029e40 <std>
 8029f24:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8029f28:	2202      	movs	r2, #2
 8029f2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029f2e:	2112      	movs	r1, #18
 8029f30:	f7ff bf86 	b.w	8029e40 <std>
 8029f34:	20013910 	.word	0x20013910
 8029f38:	200137d8 	.word	0x200137d8
 8029f3c:	08029ead 	.word	0x08029ead

08029f40 <__sfp_lock_acquire>:
 8029f40:	4801      	ldr	r0, [pc, #4]	; (8029f48 <__sfp_lock_acquire+0x8>)
 8029f42:	f000 b9b8 	b.w	802a2b6 <__retarget_lock_acquire_recursive>
 8029f46:	bf00      	nop
 8029f48:	2001391a 	.word	0x2001391a

08029f4c <__sfp_lock_release>:
 8029f4c:	4801      	ldr	r0, [pc, #4]	; (8029f54 <__sfp_lock_release+0x8>)
 8029f4e:	f000 b9b3 	b.w	802a2b8 <__retarget_lock_release_recursive>
 8029f52:	bf00      	nop
 8029f54:	2001391a 	.word	0x2001391a

08029f58 <__sinit>:
 8029f58:	b510      	push	{r4, lr}
 8029f5a:	4604      	mov	r4, r0
 8029f5c:	f7ff fff0 	bl	8029f40 <__sfp_lock_acquire>
 8029f60:	6a23      	ldr	r3, [r4, #32]
 8029f62:	b11b      	cbz	r3, 8029f6c <__sinit+0x14>
 8029f64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029f68:	f7ff bff0 	b.w	8029f4c <__sfp_lock_release>
 8029f6c:	4b04      	ldr	r3, [pc, #16]	; (8029f80 <__sinit+0x28>)
 8029f6e:	6223      	str	r3, [r4, #32]
 8029f70:	4b04      	ldr	r3, [pc, #16]	; (8029f84 <__sinit+0x2c>)
 8029f72:	681b      	ldr	r3, [r3, #0]
 8029f74:	2b00      	cmp	r3, #0
 8029f76:	d1f5      	bne.n	8029f64 <__sinit+0xc>
 8029f78:	f7ff ffc4 	bl	8029f04 <global_stdio_init.part.0>
 8029f7c:	e7f2      	b.n	8029f64 <__sinit+0xc>
 8029f7e:	bf00      	nop
 8029f80:	08029ec5 	.word	0x08029ec5
 8029f84:	20013910 	.word	0x20013910

08029f88 <fiprintf>:
 8029f88:	b40e      	push	{r1, r2, r3}
 8029f8a:	b503      	push	{r0, r1, lr}
 8029f8c:	4601      	mov	r1, r0
 8029f8e:	ab03      	add	r3, sp, #12
 8029f90:	4805      	ldr	r0, [pc, #20]	; (8029fa8 <fiprintf+0x20>)
 8029f92:	f853 2b04 	ldr.w	r2, [r3], #4
 8029f96:	6800      	ldr	r0, [r0, #0]
 8029f98:	9301      	str	r3, [sp, #4]
 8029f9a:	f000 fa71 	bl	802a480 <_vfiprintf_r>
 8029f9e:	b002      	add	sp, #8
 8029fa0:	f85d eb04 	ldr.w	lr, [sp], #4
 8029fa4:	b003      	add	sp, #12
 8029fa6:	4770      	bx	lr
 8029fa8:	20000160 	.word	0x20000160

08029fac <_fwalk_sglue>:
 8029fac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029fb0:	4607      	mov	r7, r0
 8029fb2:	4688      	mov	r8, r1
 8029fb4:	4614      	mov	r4, r2
 8029fb6:	2600      	movs	r6, #0
 8029fb8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8029fbc:	f1b9 0901 	subs.w	r9, r9, #1
 8029fc0:	d505      	bpl.n	8029fce <_fwalk_sglue+0x22>
 8029fc2:	6824      	ldr	r4, [r4, #0]
 8029fc4:	2c00      	cmp	r4, #0
 8029fc6:	d1f7      	bne.n	8029fb8 <_fwalk_sglue+0xc>
 8029fc8:	4630      	mov	r0, r6
 8029fca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029fce:	89ab      	ldrh	r3, [r5, #12]
 8029fd0:	2b01      	cmp	r3, #1
 8029fd2:	d907      	bls.n	8029fe4 <_fwalk_sglue+0x38>
 8029fd4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8029fd8:	3301      	adds	r3, #1
 8029fda:	d003      	beq.n	8029fe4 <_fwalk_sglue+0x38>
 8029fdc:	4629      	mov	r1, r5
 8029fde:	4638      	mov	r0, r7
 8029fe0:	47c0      	blx	r8
 8029fe2:	4306      	orrs	r6, r0
 8029fe4:	3568      	adds	r5, #104	; 0x68
 8029fe6:	e7e9      	b.n	8029fbc <_fwalk_sglue+0x10>

08029fe8 <__sread>:
 8029fe8:	b510      	push	{r4, lr}
 8029fea:	460c      	mov	r4, r1
 8029fec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029ff0:	f000 f8ee 	bl	802a1d0 <_read_r>
 8029ff4:	2800      	cmp	r0, #0
 8029ff6:	bfab      	itete	ge
 8029ff8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8029ffa:	89a3      	ldrhlt	r3, [r4, #12]
 8029ffc:	181b      	addge	r3, r3, r0
 8029ffe:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802a002:	bfac      	ite	ge
 802a004:	6563      	strge	r3, [r4, #84]	; 0x54
 802a006:	81a3      	strhlt	r3, [r4, #12]
 802a008:	bd10      	pop	{r4, pc}

0802a00a <__swrite>:
 802a00a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a00e:	461f      	mov	r7, r3
 802a010:	898b      	ldrh	r3, [r1, #12]
 802a012:	05db      	lsls	r3, r3, #23
 802a014:	4605      	mov	r5, r0
 802a016:	460c      	mov	r4, r1
 802a018:	4616      	mov	r6, r2
 802a01a:	d505      	bpl.n	802a028 <__swrite+0x1e>
 802a01c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a020:	2302      	movs	r3, #2
 802a022:	2200      	movs	r2, #0
 802a024:	f000 f8c2 	bl	802a1ac <_lseek_r>
 802a028:	89a3      	ldrh	r3, [r4, #12]
 802a02a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802a02e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802a032:	81a3      	strh	r3, [r4, #12]
 802a034:	4632      	mov	r2, r6
 802a036:	463b      	mov	r3, r7
 802a038:	4628      	mov	r0, r5
 802a03a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a03e:	f000 b8fd 	b.w	802a23c <_write_r>

0802a042 <__sseek>:
 802a042:	b510      	push	{r4, lr}
 802a044:	460c      	mov	r4, r1
 802a046:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a04a:	f000 f8af 	bl	802a1ac <_lseek_r>
 802a04e:	1c43      	adds	r3, r0, #1
 802a050:	89a3      	ldrh	r3, [r4, #12]
 802a052:	bf15      	itete	ne
 802a054:	6560      	strne	r0, [r4, #84]	; 0x54
 802a056:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802a05a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802a05e:	81a3      	strheq	r3, [r4, #12]
 802a060:	bf18      	it	ne
 802a062:	81a3      	strhne	r3, [r4, #12]
 802a064:	bd10      	pop	{r4, pc}

0802a066 <__sclose>:
 802a066:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a06a:	f000 b839 	b.w	802a0e0 <_close_r>

0802a06e <memset>:
 802a06e:	4402      	add	r2, r0
 802a070:	4603      	mov	r3, r0
 802a072:	4293      	cmp	r3, r2
 802a074:	d100      	bne.n	802a078 <memset+0xa>
 802a076:	4770      	bx	lr
 802a078:	f803 1b01 	strb.w	r1, [r3], #1
 802a07c:	e7f9      	b.n	802a072 <memset+0x4>

0802a07e <_raise_r>:
 802a07e:	291f      	cmp	r1, #31
 802a080:	b538      	push	{r3, r4, r5, lr}
 802a082:	4604      	mov	r4, r0
 802a084:	460d      	mov	r5, r1
 802a086:	d904      	bls.n	802a092 <_raise_r+0x14>
 802a088:	2316      	movs	r3, #22
 802a08a:	6003      	str	r3, [r0, #0]
 802a08c:	f04f 30ff 	mov.w	r0, #4294967295
 802a090:	bd38      	pop	{r3, r4, r5, pc}
 802a092:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802a094:	b112      	cbz	r2, 802a09c <_raise_r+0x1e>
 802a096:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802a09a:	b94b      	cbnz	r3, 802a0b0 <_raise_r+0x32>
 802a09c:	4620      	mov	r0, r4
 802a09e:	f000 f8bb 	bl	802a218 <_getpid_r>
 802a0a2:	462a      	mov	r2, r5
 802a0a4:	4601      	mov	r1, r0
 802a0a6:	4620      	mov	r0, r4
 802a0a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802a0ac:	f000 b8a2 	b.w	802a1f4 <_kill_r>
 802a0b0:	2b01      	cmp	r3, #1
 802a0b2:	d00a      	beq.n	802a0ca <_raise_r+0x4c>
 802a0b4:	1c59      	adds	r1, r3, #1
 802a0b6:	d103      	bne.n	802a0c0 <_raise_r+0x42>
 802a0b8:	2316      	movs	r3, #22
 802a0ba:	6003      	str	r3, [r0, #0]
 802a0bc:	2001      	movs	r0, #1
 802a0be:	e7e7      	b.n	802a090 <_raise_r+0x12>
 802a0c0:	2400      	movs	r4, #0
 802a0c2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802a0c6:	4628      	mov	r0, r5
 802a0c8:	4798      	blx	r3
 802a0ca:	2000      	movs	r0, #0
 802a0cc:	e7e0      	b.n	802a090 <_raise_r+0x12>
	...

0802a0d0 <raise>:
 802a0d0:	4b02      	ldr	r3, [pc, #8]	; (802a0dc <raise+0xc>)
 802a0d2:	4601      	mov	r1, r0
 802a0d4:	6818      	ldr	r0, [r3, #0]
 802a0d6:	f7ff bfd2 	b.w	802a07e <_raise_r>
 802a0da:	bf00      	nop
 802a0dc:	20000160 	.word	0x20000160

0802a0e0 <_close_r>:
 802a0e0:	b538      	push	{r3, r4, r5, lr}
 802a0e2:	4d06      	ldr	r5, [pc, #24]	; (802a0fc <_close_r+0x1c>)
 802a0e4:	2300      	movs	r3, #0
 802a0e6:	4604      	mov	r4, r0
 802a0e8:	4608      	mov	r0, r1
 802a0ea:	602b      	str	r3, [r5, #0]
 802a0ec:	f7d8 f95a 	bl	80023a4 <_close>
 802a0f0:	1c43      	adds	r3, r0, #1
 802a0f2:	d102      	bne.n	802a0fa <_close_r+0x1a>
 802a0f4:	682b      	ldr	r3, [r5, #0]
 802a0f6:	b103      	cbz	r3, 802a0fa <_close_r+0x1a>
 802a0f8:	6023      	str	r3, [r4, #0]
 802a0fa:	bd38      	pop	{r3, r4, r5, pc}
 802a0fc:	20013914 	.word	0x20013914

0802a100 <_reclaim_reent>:
 802a100:	4b29      	ldr	r3, [pc, #164]	; (802a1a8 <_reclaim_reent+0xa8>)
 802a102:	681b      	ldr	r3, [r3, #0]
 802a104:	4283      	cmp	r3, r0
 802a106:	b570      	push	{r4, r5, r6, lr}
 802a108:	4604      	mov	r4, r0
 802a10a:	d04b      	beq.n	802a1a4 <_reclaim_reent+0xa4>
 802a10c:	69c3      	ldr	r3, [r0, #28]
 802a10e:	b143      	cbz	r3, 802a122 <_reclaim_reent+0x22>
 802a110:	68db      	ldr	r3, [r3, #12]
 802a112:	2b00      	cmp	r3, #0
 802a114:	d144      	bne.n	802a1a0 <_reclaim_reent+0xa0>
 802a116:	69e3      	ldr	r3, [r4, #28]
 802a118:	6819      	ldr	r1, [r3, #0]
 802a11a:	b111      	cbz	r1, 802a122 <_reclaim_reent+0x22>
 802a11c:	4620      	mov	r0, r4
 802a11e:	f000 f939 	bl	802a394 <_free_r>
 802a122:	6961      	ldr	r1, [r4, #20]
 802a124:	b111      	cbz	r1, 802a12c <_reclaim_reent+0x2c>
 802a126:	4620      	mov	r0, r4
 802a128:	f000 f934 	bl	802a394 <_free_r>
 802a12c:	69e1      	ldr	r1, [r4, #28]
 802a12e:	b111      	cbz	r1, 802a136 <_reclaim_reent+0x36>
 802a130:	4620      	mov	r0, r4
 802a132:	f000 f92f 	bl	802a394 <_free_r>
 802a136:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802a138:	b111      	cbz	r1, 802a140 <_reclaim_reent+0x40>
 802a13a:	4620      	mov	r0, r4
 802a13c:	f000 f92a 	bl	802a394 <_free_r>
 802a140:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a142:	b111      	cbz	r1, 802a14a <_reclaim_reent+0x4a>
 802a144:	4620      	mov	r0, r4
 802a146:	f000 f925 	bl	802a394 <_free_r>
 802a14a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802a14c:	b111      	cbz	r1, 802a154 <_reclaim_reent+0x54>
 802a14e:	4620      	mov	r0, r4
 802a150:	f000 f920 	bl	802a394 <_free_r>
 802a154:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802a156:	b111      	cbz	r1, 802a15e <_reclaim_reent+0x5e>
 802a158:	4620      	mov	r0, r4
 802a15a:	f000 f91b 	bl	802a394 <_free_r>
 802a15e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802a160:	b111      	cbz	r1, 802a168 <_reclaim_reent+0x68>
 802a162:	4620      	mov	r0, r4
 802a164:	f000 f916 	bl	802a394 <_free_r>
 802a168:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802a16a:	b111      	cbz	r1, 802a172 <_reclaim_reent+0x72>
 802a16c:	4620      	mov	r0, r4
 802a16e:	f000 f911 	bl	802a394 <_free_r>
 802a172:	6a23      	ldr	r3, [r4, #32]
 802a174:	b1b3      	cbz	r3, 802a1a4 <_reclaim_reent+0xa4>
 802a176:	4620      	mov	r0, r4
 802a178:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802a17c:	4718      	bx	r3
 802a17e:	5949      	ldr	r1, [r1, r5]
 802a180:	b941      	cbnz	r1, 802a194 <_reclaim_reent+0x94>
 802a182:	3504      	adds	r5, #4
 802a184:	69e3      	ldr	r3, [r4, #28]
 802a186:	2d80      	cmp	r5, #128	; 0x80
 802a188:	68d9      	ldr	r1, [r3, #12]
 802a18a:	d1f8      	bne.n	802a17e <_reclaim_reent+0x7e>
 802a18c:	4620      	mov	r0, r4
 802a18e:	f000 f901 	bl	802a394 <_free_r>
 802a192:	e7c0      	b.n	802a116 <_reclaim_reent+0x16>
 802a194:	680e      	ldr	r6, [r1, #0]
 802a196:	4620      	mov	r0, r4
 802a198:	f000 f8fc 	bl	802a394 <_free_r>
 802a19c:	4631      	mov	r1, r6
 802a19e:	e7ef      	b.n	802a180 <_reclaim_reent+0x80>
 802a1a0:	2500      	movs	r5, #0
 802a1a2:	e7ef      	b.n	802a184 <_reclaim_reent+0x84>
 802a1a4:	bd70      	pop	{r4, r5, r6, pc}
 802a1a6:	bf00      	nop
 802a1a8:	20000160 	.word	0x20000160

0802a1ac <_lseek_r>:
 802a1ac:	b538      	push	{r3, r4, r5, lr}
 802a1ae:	4d07      	ldr	r5, [pc, #28]	; (802a1cc <_lseek_r+0x20>)
 802a1b0:	4604      	mov	r4, r0
 802a1b2:	4608      	mov	r0, r1
 802a1b4:	4611      	mov	r1, r2
 802a1b6:	2200      	movs	r2, #0
 802a1b8:	602a      	str	r2, [r5, #0]
 802a1ba:	461a      	mov	r2, r3
 802a1bc:	f7d8 f8fe 	bl	80023bc <_lseek>
 802a1c0:	1c43      	adds	r3, r0, #1
 802a1c2:	d102      	bne.n	802a1ca <_lseek_r+0x1e>
 802a1c4:	682b      	ldr	r3, [r5, #0]
 802a1c6:	b103      	cbz	r3, 802a1ca <_lseek_r+0x1e>
 802a1c8:	6023      	str	r3, [r4, #0]
 802a1ca:	bd38      	pop	{r3, r4, r5, pc}
 802a1cc:	20013914 	.word	0x20013914

0802a1d0 <_read_r>:
 802a1d0:	b538      	push	{r3, r4, r5, lr}
 802a1d2:	4d07      	ldr	r5, [pc, #28]	; (802a1f0 <_read_r+0x20>)
 802a1d4:	4604      	mov	r4, r0
 802a1d6:	4608      	mov	r0, r1
 802a1d8:	4611      	mov	r1, r2
 802a1da:	2200      	movs	r2, #0
 802a1dc:	602a      	str	r2, [r5, #0]
 802a1de:	461a      	mov	r2, r3
 802a1e0:	f7d8 f8c4 	bl	800236c <_read>
 802a1e4:	1c43      	adds	r3, r0, #1
 802a1e6:	d102      	bne.n	802a1ee <_read_r+0x1e>
 802a1e8:	682b      	ldr	r3, [r5, #0]
 802a1ea:	b103      	cbz	r3, 802a1ee <_read_r+0x1e>
 802a1ec:	6023      	str	r3, [r4, #0]
 802a1ee:	bd38      	pop	{r3, r4, r5, pc}
 802a1f0:	20013914 	.word	0x20013914

0802a1f4 <_kill_r>:
 802a1f4:	b538      	push	{r3, r4, r5, lr}
 802a1f6:	4d07      	ldr	r5, [pc, #28]	; (802a214 <_kill_r+0x20>)
 802a1f8:	2300      	movs	r3, #0
 802a1fa:	4604      	mov	r4, r0
 802a1fc:	4608      	mov	r0, r1
 802a1fe:	4611      	mov	r1, r2
 802a200:	602b      	str	r3, [r5, #0]
 802a202:	f7d8 f8a5 	bl	8002350 <_kill>
 802a206:	1c43      	adds	r3, r0, #1
 802a208:	d102      	bne.n	802a210 <_kill_r+0x1c>
 802a20a:	682b      	ldr	r3, [r5, #0]
 802a20c:	b103      	cbz	r3, 802a210 <_kill_r+0x1c>
 802a20e:	6023      	str	r3, [r4, #0]
 802a210:	bd38      	pop	{r3, r4, r5, pc}
 802a212:	bf00      	nop
 802a214:	20013914 	.word	0x20013914

0802a218 <_getpid_r>:
 802a218:	f7d8 b898 	b.w	800234c <_getpid>

0802a21c <_sbrk_r>:
 802a21c:	b538      	push	{r3, r4, r5, lr}
 802a21e:	4d06      	ldr	r5, [pc, #24]	; (802a238 <_sbrk_r+0x1c>)
 802a220:	2300      	movs	r3, #0
 802a222:	4604      	mov	r4, r0
 802a224:	4608      	mov	r0, r1
 802a226:	602b      	str	r3, [r5, #0]
 802a228:	f7d8 f8ca 	bl	80023c0 <_sbrk>
 802a22c:	1c43      	adds	r3, r0, #1
 802a22e:	d102      	bne.n	802a236 <_sbrk_r+0x1a>
 802a230:	682b      	ldr	r3, [r5, #0]
 802a232:	b103      	cbz	r3, 802a236 <_sbrk_r+0x1a>
 802a234:	6023      	str	r3, [r4, #0]
 802a236:	bd38      	pop	{r3, r4, r5, pc}
 802a238:	20013914 	.word	0x20013914

0802a23c <_write_r>:
 802a23c:	b538      	push	{r3, r4, r5, lr}
 802a23e:	4d07      	ldr	r5, [pc, #28]	; (802a25c <_write_r+0x20>)
 802a240:	4604      	mov	r4, r0
 802a242:	4608      	mov	r0, r1
 802a244:	4611      	mov	r1, r2
 802a246:	2200      	movs	r2, #0
 802a248:	602a      	str	r2, [r5, #0]
 802a24a:	461a      	mov	r2, r3
 802a24c:	f7d8 f89c 	bl	8002388 <_write>
 802a250:	1c43      	adds	r3, r0, #1
 802a252:	d102      	bne.n	802a25a <_write_r+0x1e>
 802a254:	682b      	ldr	r3, [r5, #0]
 802a256:	b103      	cbz	r3, 802a25a <_write_r+0x1e>
 802a258:	6023      	str	r3, [r4, #0]
 802a25a:	bd38      	pop	{r3, r4, r5, pc}
 802a25c:	20013914 	.word	0x20013914

0802a260 <__errno>:
 802a260:	4b01      	ldr	r3, [pc, #4]	; (802a268 <__errno+0x8>)
 802a262:	6818      	ldr	r0, [r3, #0]
 802a264:	4770      	bx	lr
 802a266:	bf00      	nop
 802a268:	20000160 	.word	0x20000160

0802a26c <__libc_init_array>:
 802a26c:	b570      	push	{r4, r5, r6, lr}
 802a26e:	4d0d      	ldr	r5, [pc, #52]	; (802a2a4 <__libc_init_array+0x38>)
 802a270:	4c0d      	ldr	r4, [pc, #52]	; (802a2a8 <__libc_init_array+0x3c>)
 802a272:	1b64      	subs	r4, r4, r5
 802a274:	10a4      	asrs	r4, r4, #2
 802a276:	2600      	movs	r6, #0
 802a278:	42a6      	cmp	r6, r4
 802a27a:	d109      	bne.n	802a290 <__libc_init_array+0x24>
 802a27c:	4d0b      	ldr	r5, [pc, #44]	; (802a2ac <__libc_init_array+0x40>)
 802a27e:	4c0c      	ldr	r4, [pc, #48]	; (802a2b0 <__libc_init_array+0x44>)
 802a280:	f000 fd70 	bl	802ad64 <_init>
 802a284:	1b64      	subs	r4, r4, r5
 802a286:	10a4      	asrs	r4, r4, #2
 802a288:	2600      	movs	r6, #0
 802a28a:	42a6      	cmp	r6, r4
 802a28c:	d105      	bne.n	802a29a <__libc_init_array+0x2e>
 802a28e:	bd70      	pop	{r4, r5, r6, pc}
 802a290:	f855 3b04 	ldr.w	r3, [r5], #4
 802a294:	4798      	blx	r3
 802a296:	3601      	adds	r6, #1
 802a298:	e7ee      	b.n	802a278 <__libc_init_array+0xc>
 802a29a:	f855 3b04 	ldr.w	r3, [r5], #4
 802a29e:	4798      	blx	r3
 802a2a0:	3601      	adds	r6, #1
 802a2a2:	e7f2      	b.n	802a28a <__libc_init_array+0x1e>
 802a2a4:	0815e808 	.word	0x0815e808
 802a2a8:	0815e808 	.word	0x0815e808
 802a2ac:	0815e808 	.word	0x0815e808
 802a2b0:	0815e81c 	.word	0x0815e81c

0802a2b4 <__retarget_lock_init_recursive>:
 802a2b4:	4770      	bx	lr

0802a2b6 <__retarget_lock_acquire_recursive>:
 802a2b6:	4770      	bx	lr

0802a2b8 <__retarget_lock_release_recursive>:
 802a2b8:	4770      	bx	lr

0802a2ba <memcpy>:
 802a2ba:	440a      	add	r2, r1
 802a2bc:	4291      	cmp	r1, r2
 802a2be:	f100 33ff 	add.w	r3, r0, #4294967295
 802a2c2:	d100      	bne.n	802a2c6 <memcpy+0xc>
 802a2c4:	4770      	bx	lr
 802a2c6:	b510      	push	{r4, lr}
 802a2c8:	f811 4b01 	ldrb.w	r4, [r1], #1
 802a2cc:	f803 4f01 	strb.w	r4, [r3, #1]!
 802a2d0:	4291      	cmp	r1, r2
 802a2d2:	d1f9      	bne.n	802a2c8 <memcpy+0xe>
 802a2d4:	bd10      	pop	{r4, pc}
	...

0802a2d8 <__register_exitproc>:
 802a2d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a2dc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802a390 <__register_exitproc+0xb8>
 802a2e0:	4606      	mov	r6, r0
 802a2e2:	f8d8 0000 	ldr.w	r0, [r8]
 802a2e6:	461f      	mov	r7, r3
 802a2e8:	460d      	mov	r5, r1
 802a2ea:	4691      	mov	r9, r2
 802a2ec:	f7ff ffe3 	bl	802a2b6 <__retarget_lock_acquire_recursive>
 802a2f0:	4b23      	ldr	r3, [pc, #140]	; (802a380 <__register_exitproc+0xa8>)
 802a2f2:	681c      	ldr	r4, [r3, #0]
 802a2f4:	b934      	cbnz	r4, 802a304 <__register_exitproc+0x2c>
 802a2f6:	4c23      	ldr	r4, [pc, #140]	; (802a384 <__register_exitproc+0xac>)
 802a2f8:	601c      	str	r4, [r3, #0]
 802a2fa:	4b23      	ldr	r3, [pc, #140]	; (802a388 <__register_exitproc+0xb0>)
 802a2fc:	b113      	cbz	r3, 802a304 <__register_exitproc+0x2c>
 802a2fe:	681b      	ldr	r3, [r3, #0]
 802a300:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802a304:	6863      	ldr	r3, [r4, #4]
 802a306:	2b1f      	cmp	r3, #31
 802a308:	dd07      	ble.n	802a31a <__register_exitproc+0x42>
 802a30a:	f8d8 0000 	ldr.w	r0, [r8]
 802a30e:	f7ff ffd3 	bl	802a2b8 <__retarget_lock_release_recursive>
 802a312:	f04f 30ff 	mov.w	r0, #4294967295
 802a316:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a31a:	b32e      	cbz	r6, 802a368 <__register_exitproc+0x90>
 802a31c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802a320:	b968      	cbnz	r0, 802a33e <__register_exitproc+0x66>
 802a322:	4b1a      	ldr	r3, [pc, #104]	; (802a38c <__register_exitproc+0xb4>)
 802a324:	2b00      	cmp	r3, #0
 802a326:	d0f0      	beq.n	802a30a <__register_exitproc+0x32>
 802a328:	f44f 7084 	mov.w	r0, #264	; 0x108
 802a32c:	f7ff fcbe 	bl	8029cac <malloc>
 802a330:	2800      	cmp	r0, #0
 802a332:	d0ea      	beq.n	802a30a <__register_exitproc+0x32>
 802a334:	2300      	movs	r3, #0
 802a336:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802a33a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802a33e:	6863      	ldr	r3, [r4, #4]
 802a340:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802a344:	2201      	movs	r2, #1
 802a346:	409a      	lsls	r2, r3
 802a348:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802a34c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802a350:	4313      	orrs	r3, r2
 802a352:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802a356:	2e02      	cmp	r6, #2
 802a358:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802a35c:	bf02      	ittt	eq
 802a35e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802a362:	4313      	orreq	r3, r2
 802a364:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802a368:	6863      	ldr	r3, [r4, #4]
 802a36a:	f8d8 0000 	ldr.w	r0, [r8]
 802a36e:	1c5a      	adds	r2, r3, #1
 802a370:	3302      	adds	r3, #2
 802a372:	6062      	str	r2, [r4, #4]
 802a374:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802a378:	f7ff ff9e 	bl	802a2b8 <__retarget_lock_release_recursive>
 802a37c:	2000      	movs	r0, #0
 802a37e:	e7ca      	b.n	802a316 <__register_exitproc+0x3e>
 802a380:	200139a8 	.word	0x200139a8
 802a384:	2001391c 	.word	0x2001391c
 802a388:	08042274 	.word	0x08042274
 802a38c:	08029cad 	.word	0x08029cad
 802a390:	20000164 	.word	0x20000164

0802a394 <_free_r>:
 802a394:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802a396:	2900      	cmp	r1, #0
 802a398:	d044      	beq.n	802a424 <_free_r+0x90>
 802a39a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802a39e:	9001      	str	r0, [sp, #4]
 802a3a0:	2b00      	cmp	r3, #0
 802a3a2:	f1a1 0404 	sub.w	r4, r1, #4
 802a3a6:	bfb8      	it	lt
 802a3a8:	18e4      	addlt	r4, r4, r3
 802a3aa:	f7ff fd2f 	bl	8029e0c <__malloc_lock>
 802a3ae:	4a1e      	ldr	r2, [pc, #120]	; (802a428 <_free_r+0x94>)
 802a3b0:	9801      	ldr	r0, [sp, #4]
 802a3b2:	6813      	ldr	r3, [r2, #0]
 802a3b4:	b933      	cbnz	r3, 802a3c4 <_free_r+0x30>
 802a3b6:	6063      	str	r3, [r4, #4]
 802a3b8:	6014      	str	r4, [r2, #0]
 802a3ba:	b003      	add	sp, #12
 802a3bc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802a3c0:	f7ff bd2a 	b.w	8029e18 <__malloc_unlock>
 802a3c4:	42a3      	cmp	r3, r4
 802a3c6:	d908      	bls.n	802a3da <_free_r+0x46>
 802a3c8:	6825      	ldr	r5, [r4, #0]
 802a3ca:	1961      	adds	r1, r4, r5
 802a3cc:	428b      	cmp	r3, r1
 802a3ce:	bf01      	itttt	eq
 802a3d0:	6819      	ldreq	r1, [r3, #0]
 802a3d2:	685b      	ldreq	r3, [r3, #4]
 802a3d4:	1949      	addeq	r1, r1, r5
 802a3d6:	6021      	streq	r1, [r4, #0]
 802a3d8:	e7ed      	b.n	802a3b6 <_free_r+0x22>
 802a3da:	461a      	mov	r2, r3
 802a3dc:	685b      	ldr	r3, [r3, #4]
 802a3de:	b10b      	cbz	r3, 802a3e4 <_free_r+0x50>
 802a3e0:	42a3      	cmp	r3, r4
 802a3e2:	d9fa      	bls.n	802a3da <_free_r+0x46>
 802a3e4:	6811      	ldr	r1, [r2, #0]
 802a3e6:	1855      	adds	r5, r2, r1
 802a3e8:	42a5      	cmp	r5, r4
 802a3ea:	d10b      	bne.n	802a404 <_free_r+0x70>
 802a3ec:	6824      	ldr	r4, [r4, #0]
 802a3ee:	4421      	add	r1, r4
 802a3f0:	1854      	adds	r4, r2, r1
 802a3f2:	42a3      	cmp	r3, r4
 802a3f4:	6011      	str	r1, [r2, #0]
 802a3f6:	d1e0      	bne.n	802a3ba <_free_r+0x26>
 802a3f8:	681c      	ldr	r4, [r3, #0]
 802a3fa:	685b      	ldr	r3, [r3, #4]
 802a3fc:	6053      	str	r3, [r2, #4]
 802a3fe:	440c      	add	r4, r1
 802a400:	6014      	str	r4, [r2, #0]
 802a402:	e7da      	b.n	802a3ba <_free_r+0x26>
 802a404:	d902      	bls.n	802a40c <_free_r+0x78>
 802a406:	230c      	movs	r3, #12
 802a408:	6003      	str	r3, [r0, #0]
 802a40a:	e7d6      	b.n	802a3ba <_free_r+0x26>
 802a40c:	6825      	ldr	r5, [r4, #0]
 802a40e:	1961      	adds	r1, r4, r5
 802a410:	428b      	cmp	r3, r1
 802a412:	bf04      	itt	eq
 802a414:	6819      	ldreq	r1, [r3, #0]
 802a416:	685b      	ldreq	r3, [r3, #4]
 802a418:	6063      	str	r3, [r4, #4]
 802a41a:	bf04      	itt	eq
 802a41c:	1949      	addeq	r1, r1, r5
 802a41e:	6021      	streq	r1, [r4, #0]
 802a420:	6054      	str	r4, [r2, #4]
 802a422:	e7ca      	b.n	802a3ba <_free_r+0x26>
 802a424:	b003      	add	sp, #12
 802a426:	bd30      	pop	{r4, r5, pc}
 802a428:	200137d0 	.word	0x200137d0

0802a42c <__sfputc_r>:
 802a42c:	6893      	ldr	r3, [r2, #8]
 802a42e:	3b01      	subs	r3, #1
 802a430:	2b00      	cmp	r3, #0
 802a432:	b410      	push	{r4}
 802a434:	6093      	str	r3, [r2, #8]
 802a436:	da08      	bge.n	802a44a <__sfputc_r+0x1e>
 802a438:	6994      	ldr	r4, [r2, #24]
 802a43a:	42a3      	cmp	r3, r4
 802a43c:	db01      	blt.n	802a442 <__sfputc_r+0x16>
 802a43e:	290a      	cmp	r1, #10
 802a440:	d103      	bne.n	802a44a <__sfputc_r+0x1e>
 802a442:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a446:	f000 bb73 	b.w	802ab30 <__swbuf_r>
 802a44a:	6813      	ldr	r3, [r2, #0]
 802a44c:	1c58      	adds	r0, r3, #1
 802a44e:	6010      	str	r0, [r2, #0]
 802a450:	7019      	strb	r1, [r3, #0]
 802a452:	4608      	mov	r0, r1
 802a454:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a458:	4770      	bx	lr

0802a45a <__sfputs_r>:
 802a45a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a45c:	4606      	mov	r6, r0
 802a45e:	460f      	mov	r7, r1
 802a460:	4614      	mov	r4, r2
 802a462:	18d5      	adds	r5, r2, r3
 802a464:	42ac      	cmp	r4, r5
 802a466:	d101      	bne.n	802a46c <__sfputs_r+0x12>
 802a468:	2000      	movs	r0, #0
 802a46a:	e007      	b.n	802a47c <__sfputs_r+0x22>
 802a46c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a470:	463a      	mov	r2, r7
 802a472:	4630      	mov	r0, r6
 802a474:	f7ff ffda 	bl	802a42c <__sfputc_r>
 802a478:	1c43      	adds	r3, r0, #1
 802a47a:	d1f3      	bne.n	802a464 <__sfputs_r+0xa>
 802a47c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802a480 <_vfiprintf_r>:
 802a480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a484:	460d      	mov	r5, r1
 802a486:	b09d      	sub	sp, #116	; 0x74
 802a488:	4614      	mov	r4, r2
 802a48a:	4698      	mov	r8, r3
 802a48c:	4606      	mov	r6, r0
 802a48e:	b118      	cbz	r0, 802a498 <_vfiprintf_r+0x18>
 802a490:	6a03      	ldr	r3, [r0, #32]
 802a492:	b90b      	cbnz	r3, 802a498 <_vfiprintf_r+0x18>
 802a494:	f7ff fd60 	bl	8029f58 <__sinit>
 802a498:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a49a:	07d9      	lsls	r1, r3, #31
 802a49c:	d405      	bmi.n	802a4aa <_vfiprintf_r+0x2a>
 802a49e:	89ab      	ldrh	r3, [r5, #12]
 802a4a0:	059a      	lsls	r2, r3, #22
 802a4a2:	d402      	bmi.n	802a4aa <_vfiprintf_r+0x2a>
 802a4a4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a4a6:	f7ff ff06 	bl	802a2b6 <__retarget_lock_acquire_recursive>
 802a4aa:	89ab      	ldrh	r3, [r5, #12]
 802a4ac:	071b      	lsls	r3, r3, #28
 802a4ae:	d501      	bpl.n	802a4b4 <_vfiprintf_r+0x34>
 802a4b0:	692b      	ldr	r3, [r5, #16]
 802a4b2:	b99b      	cbnz	r3, 802a4dc <_vfiprintf_r+0x5c>
 802a4b4:	4629      	mov	r1, r5
 802a4b6:	4630      	mov	r0, r6
 802a4b8:	f000 fb78 	bl	802abac <__swsetup_r>
 802a4bc:	b170      	cbz	r0, 802a4dc <_vfiprintf_r+0x5c>
 802a4be:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a4c0:	07dc      	lsls	r4, r3, #31
 802a4c2:	d504      	bpl.n	802a4ce <_vfiprintf_r+0x4e>
 802a4c4:	f04f 30ff 	mov.w	r0, #4294967295
 802a4c8:	b01d      	add	sp, #116	; 0x74
 802a4ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a4ce:	89ab      	ldrh	r3, [r5, #12]
 802a4d0:	0598      	lsls	r0, r3, #22
 802a4d2:	d4f7      	bmi.n	802a4c4 <_vfiprintf_r+0x44>
 802a4d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a4d6:	f7ff feef 	bl	802a2b8 <__retarget_lock_release_recursive>
 802a4da:	e7f3      	b.n	802a4c4 <_vfiprintf_r+0x44>
 802a4dc:	2300      	movs	r3, #0
 802a4de:	9309      	str	r3, [sp, #36]	; 0x24
 802a4e0:	2320      	movs	r3, #32
 802a4e2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802a4e6:	f8cd 800c 	str.w	r8, [sp, #12]
 802a4ea:	2330      	movs	r3, #48	; 0x30
 802a4ec:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802a6a0 <_vfiprintf_r+0x220>
 802a4f0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802a4f4:	f04f 0901 	mov.w	r9, #1
 802a4f8:	4623      	mov	r3, r4
 802a4fa:	469a      	mov	sl, r3
 802a4fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 802a500:	b10a      	cbz	r2, 802a506 <_vfiprintf_r+0x86>
 802a502:	2a25      	cmp	r2, #37	; 0x25
 802a504:	d1f9      	bne.n	802a4fa <_vfiprintf_r+0x7a>
 802a506:	ebba 0b04 	subs.w	fp, sl, r4
 802a50a:	d00b      	beq.n	802a524 <_vfiprintf_r+0xa4>
 802a50c:	465b      	mov	r3, fp
 802a50e:	4622      	mov	r2, r4
 802a510:	4629      	mov	r1, r5
 802a512:	4630      	mov	r0, r6
 802a514:	f7ff ffa1 	bl	802a45a <__sfputs_r>
 802a518:	3001      	adds	r0, #1
 802a51a:	f000 80a9 	beq.w	802a670 <_vfiprintf_r+0x1f0>
 802a51e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a520:	445a      	add	r2, fp
 802a522:	9209      	str	r2, [sp, #36]	; 0x24
 802a524:	f89a 3000 	ldrb.w	r3, [sl]
 802a528:	2b00      	cmp	r3, #0
 802a52a:	f000 80a1 	beq.w	802a670 <_vfiprintf_r+0x1f0>
 802a52e:	2300      	movs	r3, #0
 802a530:	f04f 32ff 	mov.w	r2, #4294967295
 802a534:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802a538:	f10a 0a01 	add.w	sl, sl, #1
 802a53c:	9304      	str	r3, [sp, #16]
 802a53e:	9307      	str	r3, [sp, #28]
 802a540:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802a544:	931a      	str	r3, [sp, #104]	; 0x68
 802a546:	4654      	mov	r4, sl
 802a548:	2205      	movs	r2, #5
 802a54a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a54e:	4854      	ldr	r0, [pc, #336]	; (802a6a0 <_vfiprintf_r+0x220>)
 802a550:	f7d5 feae 	bl	80002b0 <memchr>
 802a554:	9a04      	ldr	r2, [sp, #16]
 802a556:	b9d8      	cbnz	r0, 802a590 <_vfiprintf_r+0x110>
 802a558:	06d1      	lsls	r1, r2, #27
 802a55a:	bf44      	itt	mi
 802a55c:	2320      	movmi	r3, #32
 802a55e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a562:	0713      	lsls	r3, r2, #28
 802a564:	bf44      	itt	mi
 802a566:	232b      	movmi	r3, #43	; 0x2b
 802a568:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a56c:	f89a 3000 	ldrb.w	r3, [sl]
 802a570:	2b2a      	cmp	r3, #42	; 0x2a
 802a572:	d015      	beq.n	802a5a0 <_vfiprintf_r+0x120>
 802a574:	9a07      	ldr	r2, [sp, #28]
 802a576:	4654      	mov	r4, sl
 802a578:	2000      	movs	r0, #0
 802a57a:	f04f 0c0a 	mov.w	ip, #10
 802a57e:	4621      	mov	r1, r4
 802a580:	f811 3b01 	ldrb.w	r3, [r1], #1
 802a584:	3b30      	subs	r3, #48	; 0x30
 802a586:	2b09      	cmp	r3, #9
 802a588:	d94d      	bls.n	802a626 <_vfiprintf_r+0x1a6>
 802a58a:	b1b0      	cbz	r0, 802a5ba <_vfiprintf_r+0x13a>
 802a58c:	9207      	str	r2, [sp, #28]
 802a58e:	e014      	b.n	802a5ba <_vfiprintf_r+0x13a>
 802a590:	eba0 0308 	sub.w	r3, r0, r8
 802a594:	fa09 f303 	lsl.w	r3, r9, r3
 802a598:	4313      	orrs	r3, r2
 802a59a:	9304      	str	r3, [sp, #16]
 802a59c:	46a2      	mov	sl, r4
 802a59e:	e7d2      	b.n	802a546 <_vfiprintf_r+0xc6>
 802a5a0:	9b03      	ldr	r3, [sp, #12]
 802a5a2:	1d19      	adds	r1, r3, #4
 802a5a4:	681b      	ldr	r3, [r3, #0]
 802a5a6:	9103      	str	r1, [sp, #12]
 802a5a8:	2b00      	cmp	r3, #0
 802a5aa:	bfbb      	ittet	lt
 802a5ac:	425b      	neglt	r3, r3
 802a5ae:	f042 0202 	orrlt.w	r2, r2, #2
 802a5b2:	9307      	strge	r3, [sp, #28]
 802a5b4:	9307      	strlt	r3, [sp, #28]
 802a5b6:	bfb8      	it	lt
 802a5b8:	9204      	strlt	r2, [sp, #16]
 802a5ba:	7823      	ldrb	r3, [r4, #0]
 802a5bc:	2b2e      	cmp	r3, #46	; 0x2e
 802a5be:	d10c      	bne.n	802a5da <_vfiprintf_r+0x15a>
 802a5c0:	7863      	ldrb	r3, [r4, #1]
 802a5c2:	2b2a      	cmp	r3, #42	; 0x2a
 802a5c4:	d134      	bne.n	802a630 <_vfiprintf_r+0x1b0>
 802a5c6:	9b03      	ldr	r3, [sp, #12]
 802a5c8:	1d1a      	adds	r2, r3, #4
 802a5ca:	681b      	ldr	r3, [r3, #0]
 802a5cc:	9203      	str	r2, [sp, #12]
 802a5ce:	2b00      	cmp	r3, #0
 802a5d0:	bfb8      	it	lt
 802a5d2:	f04f 33ff 	movlt.w	r3, #4294967295
 802a5d6:	3402      	adds	r4, #2
 802a5d8:	9305      	str	r3, [sp, #20]
 802a5da:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802a6b0 <_vfiprintf_r+0x230>
 802a5de:	7821      	ldrb	r1, [r4, #0]
 802a5e0:	2203      	movs	r2, #3
 802a5e2:	4650      	mov	r0, sl
 802a5e4:	f7d5 fe64 	bl	80002b0 <memchr>
 802a5e8:	b138      	cbz	r0, 802a5fa <_vfiprintf_r+0x17a>
 802a5ea:	9b04      	ldr	r3, [sp, #16]
 802a5ec:	eba0 000a 	sub.w	r0, r0, sl
 802a5f0:	2240      	movs	r2, #64	; 0x40
 802a5f2:	4082      	lsls	r2, r0
 802a5f4:	4313      	orrs	r3, r2
 802a5f6:	3401      	adds	r4, #1
 802a5f8:	9304      	str	r3, [sp, #16]
 802a5fa:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a5fe:	4829      	ldr	r0, [pc, #164]	; (802a6a4 <_vfiprintf_r+0x224>)
 802a600:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802a604:	2206      	movs	r2, #6
 802a606:	f7d5 fe53 	bl	80002b0 <memchr>
 802a60a:	2800      	cmp	r0, #0
 802a60c:	d03f      	beq.n	802a68e <_vfiprintf_r+0x20e>
 802a60e:	4b26      	ldr	r3, [pc, #152]	; (802a6a8 <_vfiprintf_r+0x228>)
 802a610:	bb1b      	cbnz	r3, 802a65a <_vfiprintf_r+0x1da>
 802a612:	9b03      	ldr	r3, [sp, #12]
 802a614:	3307      	adds	r3, #7
 802a616:	f023 0307 	bic.w	r3, r3, #7
 802a61a:	3308      	adds	r3, #8
 802a61c:	9303      	str	r3, [sp, #12]
 802a61e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a620:	443b      	add	r3, r7
 802a622:	9309      	str	r3, [sp, #36]	; 0x24
 802a624:	e768      	b.n	802a4f8 <_vfiprintf_r+0x78>
 802a626:	fb0c 3202 	mla	r2, ip, r2, r3
 802a62a:	460c      	mov	r4, r1
 802a62c:	2001      	movs	r0, #1
 802a62e:	e7a6      	b.n	802a57e <_vfiprintf_r+0xfe>
 802a630:	2300      	movs	r3, #0
 802a632:	3401      	adds	r4, #1
 802a634:	9305      	str	r3, [sp, #20]
 802a636:	4619      	mov	r1, r3
 802a638:	f04f 0c0a 	mov.w	ip, #10
 802a63c:	4620      	mov	r0, r4
 802a63e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802a642:	3a30      	subs	r2, #48	; 0x30
 802a644:	2a09      	cmp	r2, #9
 802a646:	d903      	bls.n	802a650 <_vfiprintf_r+0x1d0>
 802a648:	2b00      	cmp	r3, #0
 802a64a:	d0c6      	beq.n	802a5da <_vfiprintf_r+0x15a>
 802a64c:	9105      	str	r1, [sp, #20]
 802a64e:	e7c4      	b.n	802a5da <_vfiprintf_r+0x15a>
 802a650:	fb0c 2101 	mla	r1, ip, r1, r2
 802a654:	4604      	mov	r4, r0
 802a656:	2301      	movs	r3, #1
 802a658:	e7f0      	b.n	802a63c <_vfiprintf_r+0x1bc>
 802a65a:	ab03      	add	r3, sp, #12
 802a65c:	9300      	str	r3, [sp, #0]
 802a65e:	462a      	mov	r2, r5
 802a660:	4b12      	ldr	r3, [pc, #72]	; (802a6ac <_vfiprintf_r+0x22c>)
 802a662:	a904      	add	r1, sp, #16
 802a664:	4630      	mov	r0, r6
 802a666:	f3af 8000 	nop.w
 802a66a:	4607      	mov	r7, r0
 802a66c:	1c78      	adds	r0, r7, #1
 802a66e:	d1d6      	bne.n	802a61e <_vfiprintf_r+0x19e>
 802a670:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a672:	07d9      	lsls	r1, r3, #31
 802a674:	d405      	bmi.n	802a682 <_vfiprintf_r+0x202>
 802a676:	89ab      	ldrh	r3, [r5, #12]
 802a678:	059a      	lsls	r2, r3, #22
 802a67a:	d402      	bmi.n	802a682 <_vfiprintf_r+0x202>
 802a67c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a67e:	f7ff fe1b 	bl	802a2b8 <__retarget_lock_release_recursive>
 802a682:	89ab      	ldrh	r3, [r5, #12]
 802a684:	065b      	lsls	r3, r3, #25
 802a686:	f53f af1d 	bmi.w	802a4c4 <_vfiprintf_r+0x44>
 802a68a:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a68c:	e71c      	b.n	802a4c8 <_vfiprintf_r+0x48>
 802a68e:	ab03      	add	r3, sp, #12
 802a690:	9300      	str	r3, [sp, #0]
 802a692:	462a      	mov	r2, r5
 802a694:	4b05      	ldr	r3, [pc, #20]	; (802a6ac <_vfiprintf_r+0x22c>)
 802a696:	a904      	add	r1, sp, #16
 802a698:	4630      	mov	r0, r6
 802a69a:	f000 f879 	bl	802a790 <_printf_i>
 802a69e:	e7e4      	b.n	802a66a <_vfiprintf_r+0x1ea>
 802a6a0:	08042278 	.word	0x08042278
 802a6a4:	08042282 	.word	0x08042282
 802a6a8:	00000000 	.word	0x00000000
 802a6ac:	0802a45b 	.word	0x0802a45b
 802a6b0:	0804227e 	.word	0x0804227e

0802a6b4 <_printf_common>:
 802a6b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802a6b8:	4616      	mov	r6, r2
 802a6ba:	4699      	mov	r9, r3
 802a6bc:	688a      	ldr	r2, [r1, #8]
 802a6be:	690b      	ldr	r3, [r1, #16]
 802a6c0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802a6c4:	4293      	cmp	r3, r2
 802a6c6:	bfb8      	it	lt
 802a6c8:	4613      	movlt	r3, r2
 802a6ca:	6033      	str	r3, [r6, #0]
 802a6cc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802a6d0:	4607      	mov	r7, r0
 802a6d2:	460c      	mov	r4, r1
 802a6d4:	b10a      	cbz	r2, 802a6da <_printf_common+0x26>
 802a6d6:	3301      	adds	r3, #1
 802a6d8:	6033      	str	r3, [r6, #0]
 802a6da:	6823      	ldr	r3, [r4, #0]
 802a6dc:	0699      	lsls	r1, r3, #26
 802a6de:	bf42      	ittt	mi
 802a6e0:	6833      	ldrmi	r3, [r6, #0]
 802a6e2:	3302      	addmi	r3, #2
 802a6e4:	6033      	strmi	r3, [r6, #0]
 802a6e6:	6825      	ldr	r5, [r4, #0]
 802a6e8:	f015 0506 	ands.w	r5, r5, #6
 802a6ec:	d106      	bne.n	802a6fc <_printf_common+0x48>
 802a6ee:	f104 0a19 	add.w	sl, r4, #25
 802a6f2:	68e3      	ldr	r3, [r4, #12]
 802a6f4:	6832      	ldr	r2, [r6, #0]
 802a6f6:	1a9b      	subs	r3, r3, r2
 802a6f8:	42ab      	cmp	r3, r5
 802a6fa:	dc26      	bgt.n	802a74a <_printf_common+0x96>
 802a6fc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802a700:	1e13      	subs	r3, r2, #0
 802a702:	6822      	ldr	r2, [r4, #0]
 802a704:	bf18      	it	ne
 802a706:	2301      	movne	r3, #1
 802a708:	0692      	lsls	r2, r2, #26
 802a70a:	d42b      	bmi.n	802a764 <_printf_common+0xb0>
 802a70c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802a710:	4649      	mov	r1, r9
 802a712:	4638      	mov	r0, r7
 802a714:	47c0      	blx	r8
 802a716:	3001      	adds	r0, #1
 802a718:	d01e      	beq.n	802a758 <_printf_common+0xa4>
 802a71a:	6823      	ldr	r3, [r4, #0]
 802a71c:	6922      	ldr	r2, [r4, #16]
 802a71e:	f003 0306 	and.w	r3, r3, #6
 802a722:	2b04      	cmp	r3, #4
 802a724:	bf02      	ittt	eq
 802a726:	68e5      	ldreq	r5, [r4, #12]
 802a728:	6833      	ldreq	r3, [r6, #0]
 802a72a:	1aed      	subeq	r5, r5, r3
 802a72c:	68a3      	ldr	r3, [r4, #8]
 802a72e:	bf0c      	ite	eq
 802a730:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802a734:	2500      	movne	r5, #0
 802a736:	4293      	cmp	r3, r2
 802a738:	bfc4      	itt	gt
 802a73a:	1a9b      	subgt	r3, r3, r2
 802a73c:	18ed      	addgt	r5, r5, r3
 802a73e:	2600      	movs	r6, #0
 802a740:	341a      	adds	r4, #26
 802a742:	42b5      	cmp	r5, r6
 802a744:	d11a      	bne.n	802a77c <_printf_common+0xc8>
 802a746:	2000      	movs	r0, #0
 802a748:	e008      	b.n	802a75c <_printf_common+0xa8>
 802a74a:	2301      	movs	r3, #1
 802a74c:	4652      	mov	r2, sl
 802a74e:	4649      	mov	r1, r9
 802a750:	4638      	mov	r0, r7
 802a752:	47c0      	blx	r8
 802a754:	3001      	adds	r0, #1
 802a756:	d103      	bne.n	802a760 <_printf_common+0xac>
 802a758:	f04f 30ff 	mov.w	r0, #4294967295
 802a75c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a760:	3501      	adds	r5, #1
 802a762:	e7c6      	b.n	802a6f2 <_printf_common+0x3e>
 802a764:	18e1      	adds	r1, r4, r3
 802a766:	1c5a      	adds	r2, r3, #1
 802a768:	2030      	movs	r0, #48	; 0x30
 802a76a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802a76e:	4422      	add	r2, r4
 802a770:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802a774:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802a778:	3302      	adds	r3, #2
 802a77a:	e7c7      	b.n	802a70c <_printf_common+0x58>
 802a77c:	2301      	movs	r3, #1
 802a77e:	4622      	mov	r2, r4
 802a780:	4649      	mov	r1, r9
 802a782:	4638      	mov	r0, r7
 802a784:	47c0      	blx	r8
 802a786:	3001      	adds	r0, #1
 802a788:	d0e6      	beq.n	802a758 <_printf_common+0xa4>
 802a78a:	3601      	adds	r6, #1
 802a78c:	e7d9      	b.n	802a742 <_printf_common+0x8e>
	...

0802a790 <_printf_i>:
 802a790:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802a794:	7e0f      	ldrb	r7, [r1, #24]
 802a796:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802a798:	2f78      	cmp	r7, #120	; 0x78
 802a79a:	4691      	mov	r9, r2
 802a79c:	4680      	mov	r8, r0
 802a79e:	460c      	mov	r4, r1
 802a7a0:	469a      	mov	sl, r3
 802a7a2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802a7a6:	d807      	bhi.n	802a7b8 <_printf_i+0x28>
 802a7a8:	2f62      	cmp	r7, #98	; 0x62
 802a7aa:	d80a      	bhi.n	802a7c2 <_printf_i+0x32>
 802a7ac:	2f00      	cmp	r7, #0
 802a7ae:	f000 80d4 	beq.w	802a95a <_printf_i+0x1ca>
 802a7b2:	2f58      	cmp	r7, #88	; 0x58
 802a7b4:	f000 80c0 	beq.w	802a938 <_printf_i+0x1a8>
 802a7b8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802a7bc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802a7c0:	e03a      	b.n	802a838 <_printf_i+0xa8>
 802a7c2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802a7c6:	2b15      	cmp	r3, #21
 802a7c8:	d8f6      	bhi.n	802a7b8 <_printf_i+0x28>
 802a7ca:	a101      	add	r1, pc, #4	; (adr r1, 802a7d0 <_printf_i+0x40>)
 802a7cc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802a7d0:	0802a829 	.word	0x0802a829
 802a7d4:	0802a83d 	.word	0x0802a83d
 802a7d8:	0802a7b9 	.word	0x0802a7b9
 802a7dc:	0802a7b9 	.word	0x0802a7b9
 802a7e0:	0802a7b9 	.word	0x0802a7b9
 802a7e4:	0802a7b9 	.word	0x0802a7b9
 802a7e8:	0802a83d 	.word	0x0802a83d
 802a7ec:	0802a7b9 	.word	0x0802a7b9
 802a7f0:	0802a7b9 	.word	0x0802a7b9
 802a7f4:	0802a7b9 	.word	0x0802a7b9
 802a7f8:	0802a7b9 	.word	0x0802a7b9
 802a7fc:	0802a941 	.word	0x0802a941
 802a800:	0802a869 	.word	0x0802a869
 802a804:	0802a8fb 	.word	0x0802a8fb
 802a808:	0802a7b9 	.word	0x0802a7b9
 802a80c:	0802a7b9 	.word	0x0802a7b9
 802a810:	0802a963 	.word	0x0802a963
 802a814:	0802a7b9 	.word	0x0802a7b9
 802a818:	0802a869 	.word	0x0802a869
 802a81c:	0802a7b9 	.word	0x0802a7b9
 802a820:	0802a7b9 	.word	0x0802a7b9
 802a824:	0802a903 	.word	0x0802a903
 802a828:	682b      	ldr	r3, [r5, #0]
 802a82a:	1d1a      	adds	r2, r3, #4
 802a82c:	681b      	ldr	r3, [r3, #0]
 802a82e:	602a      	str	r2, [r5, #0]
 802a830:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802a834:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802a838:	2301      	movs	r3, #1
 802a83a:	e09f      	b.n	802a97c <_printf_i+0x1ec>
 802a83c:	6820      	ldr	r0, [r4, #0]
 802a83e:	682b      	ldr	r3, [r5, #0]
 802a840:	0607      	lsls	r7, r0, #24
 802a842:	f103 0104 	add.w	r1, r3, #4
 802a846:	6029      	str	r1, [r5, #0]
 802a848:	d501      	bpl.n	802a84e <_printf_i+0xbe>
 802a84a:	681e      	ldr	r6, [r3, #0]
 802a84c:	e003      	b.n	802a856 <_printf_i+0xc6>
 802a84e:	0646      	lsls	r6, r0, #25
 802a850:	d5fb      	bpl.n	802a84a <_printf_i+0xba>
 802a852:	f9b3 6000 	ldrsh.w	r6, [r3]
 802a856:	2e00      	cmp	r6, #0
 802a858:	da03      	bge.n	802a862 <_printf_i+0xd2>
 802a85a:	232d      	movs	r3, #45	; 0x2d
 802a85c:	4276      	negs	r6, r6
 802a85e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a862:	485a      	ldr	r0, [pc, #360]	; (802a9cc <_printf_i+0x23c>)
 802a864:	230a      	movs	r3, #10
 802a866:	e012      	b.n	802a88e <_printf_i+0xfe>
 802a868:	682b      	ldr	r3, [r5, #0]
 802a86a:	6820      	ldr	r0, [r4, #0]
 802a86c:	1d19      	adds	r1, r3, #4
 802a86e:	6029      	str	r1, [r5, #0]
 802a870:	0605      	lsls	r5, r0, #24
 802a872:	d501      	bpl.n	802a878 <_printf_i+0xe8>
 802a874:	681e      	ldr	r6, [r3, #0]
 802a876:	e002      	b.n	802a87e <_printf_i+0xee>
 802a878:	0641      	lsls	r1, r0, #25
 802a87a:	d5fb      	bpl.n	802a874 <_printf_i+0xe4>
 802a87c:	881e      	ldrh	r6, [r3, #0]
 802a87e:	4853      	ldr	r0, [pc, #332]	; (802a9cc <_printf_i+0x23c>)
 802a880:	2f6f      	cmp	r7, #111	; 0x6f
 802a882:	bf0c      	ite	eq
 802a884:	2308      	moveq	r3, #8
 802a886:	230a      	movne	r3, #10
 802a888:	2100      	movs	r1, #0
 802a88a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802a88e:	6865      	ldr	r5, [r4, #4]
 802a890:	60a5      	str	r5, [r4, #8]
 802a892:	2d00      	cmp	r5, #0
 802a894:	bfa2      	ittt	ge
 802a896:	6821      	ldrge	r1, [r4, #0]
 802a898:	f021 0104 	bicge.w	r1, r1, #4
 802a89c:	6021      	strge	r1, [r4, #0]
 802a89e:	b90e      	cbnz	r6, 802a8a4 <_printf_i+0x114>
 802a8a0:	2d00      	cmp	r5, #0
 802a8a2:	d04b      	beq.n	802a93c <_printf_i+0x1ac>
 802a8a4:	4615      	mov	r5, r2
 802a8a6:	fbb6 f1f3 	udiv	r1, r6, r3
 802a8aa:	fb03 6711 	mls	r7, r3, r1, r6
 802a8ae:	5dc7      	ldrb	r7, [r0, r7]
 802a8b0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802a8b4:	4637      	mov	r7, r6
 802a8b6:	42bb      	cmp	r3, r7
 802a8b8:	460e      	mov	r6, r1
 802a8ba:	d9f4      	bls.n	802a8a6 <_printf_i+0x116>
 802a8bc:	2b08      	cmp	r3, #8
 802a8be:	d10b      	bne.n	802a8d8 <_printf_i+0x148>
 802a8c0:	6823      	ldr	r3, [r4, #0]
 802a8c2:	07de      	lsls	r6, r3, #31
 802a8c4:	d508      	bpl.n	802a8d8 <_printf_i+0x148>
 802a8c6:	6923      	ldr	r3, [r4, #16]
 802a8c8:	6861      	ldr	r1, [r4, #4]
 802a8ca:	4299      	cmp	r1, r3
 802a8cc:	bfde      	ittt	le
 802a8ce:	2330      	movle	r3, #48	; 0x30
 802a8d0:	f805 3c01 	strble.w	r3, [r5, #-1]
 802a8d4:	f105 35ff 	addle.w	r5, r5, #4294967295
 802a8d8:	1b52      	subs	r2, r2, r5
 802a8da:	6122      	str	r2, [r4, #16]
 802a8dc:	f8cd a000 	str.w	sl, [sp]
 802a8e0:	464b      	mov	r3, r9
 802a8e2:	aa03      	add	r2, sp, #12
 802a8e4:	4621      	mov	r1, r4
 802a8e6:	4640      	mov	r0, r8
 802a8e8:	f7ff fee4 	bl	802a6b4 <_printf_common>
 802a8ec:	3001      	adds	r0, #1
 802a8ee:	d14a      	bne.n	802a986 <_printf_i+0x1f6>
 802a8f0:	f04f 30ff 	mov.w	r0, #4294967295
 802a8f4:	b004      	add	sp, #16
 802a8f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a8fa:	6823      	ldr	r3, [r4, #0]
 802a8fc:	f043 0320 	orr.w	r3, r3, #32
 802a900:	6023      	str	r3, [r4, #0]
 802a902:	4833      	ldr	r0, [pc, #204]	; (802a9d0 <_printf_i+0x240>)
 802a904:	2778      	movs	r7, #120	; 0x78
 802a906:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802a90a:	6823      	ldr	r3, [r4, #0]
 802a90c:	6829      	ldr	r1, [r5, #0]
 802a90e:	061f      	lsls	r7, r3, #24
 802a910:	f851 6b04 	ldr.w	r6, [r1], #4
 802a914:	d402      	bmi.n	802a91c <_printf_i+0x18c>
 802a916:	065f      	lsls	r7, r3, #25
 802a918:	bf48      	it	mi
 802a91a:	b2b6      	uxthmi	r6, r6
 802a91c:	07df      	lsls	r7, r3, #31
 802a91e:	bf48      	it	mi
 802a920:	f043 0320 	orrmi.w	r3, r3, #32
 802a924:	6029      	str	r1, [r5, #0]
 802a926:	bf48      	it	mi
 802a928:	6023      	strmi	r3, [r4, #0]
 802a92a:	b91e      	cbnz	r6, 802a934 <_printf_i+0x1a4>
 802a92c:	6823      	ldr	r3, [r4, #0]
 802a92e:	f023 0320 	bic.w	r3, r3, #32
 802a932:	6023      	str	r3, [r4, #0]
 802a934:	2310      	movs	r3, #16
 802a936:	e7a7      	b.n	802a888 <_printf_i+0xf8>
 802a938:	4824      	ldr	r0, [pc, #144]	; (802a9cc <_printf_i+0x23c>)
 802a93a:	e7e4      	b.n	802a906 <_printf_i+0x176>
 802a93c:	4615      	mov	r5, r2
 802a93e:	e7bd      	b.n	802a8bc <_printf_i+0x12c>
 802a940:	682b      	ldr	r3, [r5, #0]
 802a942:	6826      	ldr	r6, [r4, #0]
 802a944:	6961      	ldr	r1, [r4, #20]
 802a946:	1d18      	adds	r0, r3, #4
 802a948:	6028      	str	r0, [r5, #0]
 802a94a:	0635      	lsls	r5, r6, #24
 802a94c:	681b      	ldr	r3, [r3, #0]
 802a94e:	d501      	bpl.n	802a954 <_printf_i+0x1c4>
 802a950:	6019      	str	r1, [r3, #0]
 802a952:	e002      	b.n	802a95a <_printf_i+0x1ca>
 802a954:	0670      	lsls	r0, r6, #25
 802a956:	d5fb      	bpl.n	802a950 <_printf_i+0x1c0>
 802a958:	8019      	strh	r1, [r3, #0]
 802a95a:	2300      	movs	r3, #0
 802a95c:	6123      	str	r3, [r4, #16]
 802a95e:	4615      	mov	r5, r2
 802a960:	e7bc      	b.n	802a8dc <_printf_i+0x14c>
 802a962:	682b      	ldr	r3, [r5, #0]
 802a964:	1d1a      	adds	r2, r3, #4
 802a966:	602a      	str	r2, [r5, #0]
 802a968:	681d      	ldr	r5, [r3, #0]
 802a96a:	6862      	ldr	r2, [r4, #4]
 802a96c:	2100      	movs	r1, #0
 802a96e:	4628      	mov	r0, r5
 802a970:	f7d5 fc9e 	bl	80002b0 <memchr>
 802a974:	b108      	cbz	r0, 802a97a <_printf_i+0x1ea>
 802a976:	1b40      	subs	r0, r0, r5
 802a978:	6060      	str	r0, [r4, #4]
 802a97a:	6863      	ldr	r3, [r4, #4]
 802a97c:	6123      	str	r3, [r4, #16]
 802a97e:	2300      	movs	r3, #0
 802a980:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a984:	e7aa      	b.n	802a8dc <_printf_i+0x14c>
 802a986:	6923      	ldr	r3, [r4, #16]
 802a988:	462a      	mov	r2, r5
 802a98a:	4649      	mov	r1, r9
 802a98c:	4640      	mov	r0, r8
 802a98e:	47d0      	blx	sl
 802a990:	3001      	adds	r0, #1
 802a992:	d0ad      	beq.n	802a8f0 <_printf_i+0x160>
 802a994:	6823      	ldr	r3, [r4, #0]
 802a996:	079b      	lsls	r3, r3, #30
 802a998:	d413      	bmi.n	802a9c2 <_printf_i+0x232>
 802a99a:	68e0      	ldr	r0, [r4, #12]
 802a99c:	9b03      	ldr	r3, [sp, #12]
 802a99e:	4298      	cmp	r0, r3
 802a9a0:	bfb8      	it	lt
 802a9a2:	4618      	movlt	r0, r3
 802a9a4:	e7a6      	b.n	802a8f4 <_printf_i+0x164>
 802a9a6:	2301      	movs	r3, #1
 802a9a8:	4632      	mov	r2, r6
 802a9aa:	4649      	mov	r1, r9
 802a9ac:	4640      	mov	r0, r8
 802a9ae:	47d0      	blx	sl
 802a9b0:	3001      	adds	r0, #1
 802a9b2:	d09d      	beq.n	802a8f0 <_printf_i+0x160>
 802a9b4:	3501      	adds	r5, #1
 802a9b6:	68e3      	ldr	r3, [r4, #12]
 802a9b8:	9903      	ldr	r1, [sp, #12]
 802a9ba:	1a5b      	subs	r3, r3, r1
 802a9bc:	42ab      	cmp	r3, r5
 802a9be:	dcf2      	bgt.n	802a9a6 <_printf_i+0x216>
 802a9c0:	e7eb      	b.n	802a99a <_printf_i+0x20a>
 802a9c2:	2500      	movs	r5, #0
 802a9c4:	f104 0619 	add.w	r6, r4, #25
 802a9c8:	e7f5      	b.n	802a9b6 <_printf_i+0x226>
 802a9ca:	bf00      	nop
 802a9cc:	08042289 	.word	0x08042289
 802a9d0:	0804229a 	.word	0x0804229a

0802a9d4 <__sflush_r>:
 802a9d4:	898a      	ldrh	r2, [r1, #12]
 802a9d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a9da:	4605      	mov	r5, r0
 802a9dc:	0710      	lsls	r0, r2, #28
 802a9de:	460c      	mov	r4, r1
 802a9e0:	d458      	bmi.n	802aa94 <__sflush_r+0xc0>
 802a9e2:	684b      	ldr	r3, [r1, #4]
 802a9e4:	2b00      	cmp	r3, #0
 802a9e6:	dc05      	bgt.n	802a9f4 <__sflush_r+0x20>
 802a9e8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802a9ea:	2b00      	cmp	r3, #0
 802a9ec:	dc02      	bgt.n	802a9f4 <__sflush_r+0x20>
 802a9ee:	2000      	movs	r0, #0
 802a9f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a9f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802a9f6:	2e00      	cmp	r6, #0
 802a9f8:	d0f9      	beq.n	802a9ee <__sflush_r+0x1a>
 802a9fa:	2300      	movs	r3, #0
 802a9fc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802aa00:	682f      	ldr	r7, [r5, #0]
 802aa02:	6a21      	ldr	r1, [r4, #32]
 802aa04:	602b      	str	r3, [r5, #0]
 802aa06:	d032      	beq.n	802aa6e <__sflush_r+0x9a>
 802aa08:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802aa0a:	89a3      	ldrh	r3, [r4, #12]
 802aa0c:	075a      	lsls	r2, r3, #29
 802aa0e:	d505      	bpl.n	802aa1c <__sflush_r+0x48>
 802aa10:	6863      	ldr	r3, [r4, #4]
 802aa12:	1ac0      	subs	r0, r0, r3
 802aa14:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802aa16:	b10b      	cbz	r3, 802aa1c <__sflush_r+0x48>
 802aa18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802aa1a:	1ac0      	subs	r0, r0, r3
 802aa1c:	2300      	movs	r3, #0
 802aa1e:	4602      	mov	r2, r0
 802aa20:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802aa22:	6a21      	ldr	r1, [r4, #32]
 802aa24:	4628      	mov	r0, r5
 802aa26:	47b0      	blx	r6
 802aa28:	1c43      	adds	r3, r0, #1
 802aa2a:	89a3      	ldrh	r3, [r4, #12]
 802aa2c:	d106      	bne.n	802aa3c <__sflush_r+0x68>
 802aa2e:	6829      	ldr	r1, [r5, #0]
 802aa30:	291d      	cmp	r1, #29
 802aa32:	d82b      	bhi.n	802aa8c <__sflush_r+0xb8>
 802aa34:	4a29      	ldr	r2, [pc, #164]	; (802aadc <__sflush_r+0x108>)
 802aa36:	410a      	asrs	r2, r1
 802aa38:	07d6      	lsls	r6, r2, #31
 802aa3a:	d427      	bmi.n	802aa8c <__sflush_r+0xb8>
 802aa3c:	2200      	movs	r2, #0
 802aa3e:	6062      	str	r2, [r4, #4]
 802aa40:	04d9      	lsls	r1, r3, #19
 802aa42:	6922      	ldr	r2, [r4, #16]
 802aa44:	6022      	str	r2, [r4, #0]
 802aa46:	d504      	bpl.n	802aa52 <__sflush_r+0x7e>
 802aa48:	1c42      	adds	r2, r0, #1
 802aa4a:	d101      	bne.n	802aa50 <__sflush_r+0x7c>
 802aa4c:	682b      	ldr	r3, [r5, #0]
 802aa4e:	b903      	cbnz	r3, 802aa52 <__sflush_r+0x7e>
 802aa50:	6560      	str	r0, [r4, #84]	; 0x54
 802aa52:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802aa54:	602f      	str	r7, [r5, #0]
 802aa56:	2900      	cmp	r1, #0
 802aa58:	d0c9      	beq.n	802a9ee <__sflush_r+0x1a>
 802aa5a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802aa5e:	4299      	cmp	r1, r3
 802aa60:	d002      	beq.n	802aa68 <__sflush_r+0x94>
 802aa62:	4628      	mov	r0, r5
 802aa64:	f7ff fc96 	bl	802a394 <_free_r>
 802aa68:	2000      	movs	r0, #0
 802aa6a:	6360      	str	r0, [r4, #52]	; 0x34
 802aa6c:	e7c0      	b.n	802a9f0 <__sflush_r+0x1c>
 802aa6e:	2301      	movs	r3, #1
 802aa70:	4628      	mov	r0, r5
 802aa72:	47b0      	blx	r6
 802aa74:	1c41      	adds	r1, r0, #1
 802aa76:	d1c8      	bne.n	802aa0a <__sflush_r+0x36>
 802aa78:	682b      	ldr	r3, [r5, #0]
 802aa7a:	2b00      	cmp	r3, #0
 802aa7c:	d0c5      	beq.n	802aa0a <__sflush_r+0x36>
 802aa7e:	2b1d      	cmp	r3, #29
 802aa80:	d001      	beq.n	802aa86 <__sflush_r+0xb2>
 802aa82:	2b16      	cmp	r3, #22
 802aa84:	d101      	bne.n	802aa8a <__sflush_r+0xb6>
 802aa86:	602f      	str	r7, [r5, #0]
 802aa88:	e7b1      	b.n	802a9ee <__sflush_r+0x1a>
 802aa8a:	89a3      	ldrh	r3, [r4, #12]
 802aa8c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802aa90:	81a3      	strh	r3, [r4, #12]
 802aa92:	e7ad      	b.n	802a9f0 <__sflush_r+0x1c>
 802aa94:	690f      	ldr	r7, [r1, #16]
 802aa96:	2f00      	cmp	r7, #0
 802aa98:	d0a9      	beq.n	802a9ee <__sflush_r+0x1a>
 802aa9a:	0793      	lsls	r3, r2, #30
 802aa9c:	680e      	ldr	r6, [r1, #0]
 802aa9e:	bf08      	it	eq
 802aaa0:	694b      	ldreq	r3, [r1, #20]
 802aaa2:	600f      	str	r7, [r1, #0]
 802aaa4:	bf18      	it	ne
 802aaa6:	2300      	movne	r3, #0
 802aaa8:	eba6 0807 	sub.w	r8, r6, r7
 802aaac:	608b      	str	r3, [r1, #8]
 802aaae:	f1b8 0f00 	cmp.w	r8, #0
 802aab2:	dd9c      	ble.n	802a9ee <__sflush_r+0x1a>
 802aab4:	6a21      	ldr	r1, [r4, #32]
 802aab6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802aab8:	4643      	mov	r3, r8
 802aaba:	463a      	mov	r2, r7
 802aabc:	4628      	mov	r0, r5
 802aabe:	47b0      	blx	r6
 802aac0:	2800      	cmp	r0, #0
 802aac2:	dc06      	bgt.n	802aad2 <__sflush_r+0xfe>
 802aac4:	89a3      	ldrh	r3, [r4, #12]
 802aac6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802aaca:	81a3      	strh	r3, [r4, #12]
 802aacc:	f04f 30ff 	mov.w	r0, #4294967295
 802aad0:	e78e      	b.n	802a9f0 <__sflush_r+0x1c>
 802aad2:	4407      	add	r7, r0
 802aad4:	eba8 0800 	sub.w	r8, r8, r0
 802aad8:	e7e9      	b.n	802aaae <__sflush_r+0xda>
 802aada:	bf00      	nop
 802aadc:	dfbffffe 	.word	0xdfbffffe

0802aae0 <_fflush_r>:
 802aae0:	b538      	push	{r3, r4, r5, lr}
 802aae2:	690b      	ldr	r3, [r1, #16]
 802aae4:	4605      	mov	r5, r0
 802aae6:	460c      	mov	r4, r1
 802aae8:	b913      	cbnz	r3, 802aaf0 <_fflush_r+0x10>
 802aaea:	2500      	movs	r5, #0
 802aaec:	4628      	mov	r0, r5
 802aaee:	bd38      	pop	{r3, r4, r5, pc}
 802aaf0:	b118      	cbz	r0, 802aafa <_fflush_r+0x1a>
 802aaf2:	6a03      	ldr	r3, [r0, #32]
 802aaf4:	b90b      	cbnz	r3, 802aafa <_fflush_r+0x1a>
 802aaf6:	f7ff fa2f 	bl	8029f58 <__sinit>
 802aafa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802aafe:	2b00      	cmp	r3, #0
 802ab00:	d0f3      	beq.n	802aaea <_fflush_r+0xa>
 802ab02:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802ab04:	07d0      	lsls	r0, r2, #31
 802ab06:	d404      	bmi.n	802ab12 <_fflush_r+0x32>
 802ab08:	0599      	lsls	r1, r3, #22
 802ab0a:	d402      	bmi.n	802ab12 <_fflush_r+0x32>
 802ab0c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ab0e:	f7ff fbd2 	bl	802a2b6 <__retarget_lock_acquire_recursive>
 802ab12:	4628      	mov	r0, r5
 802ab14:	4621      	mov	r1, r4
 802ab16:	f7ff ff5d 	bl	802a9d4 <__sflush_r>
 802ab1a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ab1c:	07da      	lsls	r2, r3, #31
 802ab1e:	4605      	mov	r5, r0
 802ab20:	d4e4      	bmi.n	802aaec <_fflush_r+0xc>
 802ab22:	89a3      	ldrh	r3, [r4, #12]
 802ab24:	059b      	lsls	r3, r3, #22
 802ab26:	d4e1      	bmi.n	802aaec <_fflush_r+0xc>
 802ab28:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ab2a:	f7ff fbc5 	bl	802a2b8 <__retarget_lock_release_recursive>
 802ab2e:	e7dd      	b.n	802aaec <_fflush_r+0xc>

0802ab30 <__swbuf_r>:
 802ab30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ab32:	460e      	mov	r6, r1
 802ab34:	4614      	mov	r4, r2
 802ab36:	4605      	mov	r5, r0
 802ab38:	b118      	cbz	r0, 802ab42 <__swbuf_r+0x12>
 802ab3a:	6a03      	ldr	r3, [r0, #32]
 802ab3c:	b90b      	cbnz	r3, 802ab42 <__swbuf_r+0x12>
 802ab3e:	f7ff fa0b 	bl	8029f58 <__sinit>
 802ab42:	69a3      	ldr	r3, [r4, #24]
 802ab44:	60a3      	str	r3, [r4, #8]
 802ab46:	89a3      	ldrh	r3, [r4, #12]
 802ab48:	071a      	lsls	r2, r3, #28
 802ab4a:	d525      	bpl.n	802ab98 <__swbuf_r+0x68>
 802ab4c:	6923      	ldr	r3, [r4, #16]
 802ab4e:	b31b      	cbz	r3, 802ab98 <__swbuf_r+0x68>
 802ab50:	6823      	ldr	r3, [r4, #0]
 802ab52:	6922      	ldr	r2, [r4, #16]
 802ab54:	1a98      	subs	r0, r3, r2
 802ab56:	6963      	ldr	r3, [r4, #20]
 802ab58:	b2f6      	uxtb	r6, r6
 802ab5a:	4283      	cmp	r3, r0
 802ab5c:	4637      	mov	r7, r6
 802ab5e:	dc04      	bgt.n	802ab6a <__swbuf_r+0x3a>
 802ab60:	4621      	mov	r1, r4
 802ab62:	4628      	mov	r0, r5
 802ab64:	f7ff ffbc 	bl	802aae0 <_fflush_r>
 802ab68:	b9e0      	cbnz	r0, 802aba4 <__swbuf_r+0x74>
 802ab6a:	68a3      	ldr	r3, [r4, #8]
 802ab6c:	3b01      	subs	r3, #1
 802ab6e:	60a3      	str	r3, [r4, #8]
 802ab70:	6823      	ldr	r3, [r4, #0]
 802ab72:	1c5a      	adds	r2, r3, #1
 802ab74:	6022      	str	r2, [r4, #0]
 802ab76:	701e      	strb	r6, [r3, #0]
 802ab78:	6962      	ldr	r2, [r4, #20]
 802ab7a:	1c43      	adds	r3, r0, #1
 802ab7c:	429a      	cmp	r2, r3
 802ab7e:	d004      	beq.n	802ab8a <__swbuf_r+0x5a>
 802ab80:	89a3      	ldrh	r3, [r4, #12]
 802ab82:	07db      	lsls	r3, r3, #31
 802ab84:	d506      	bpl.n	802ab94 <__swbuf_r+0x64>
 802ab86:	2e0a      	cmp	r6, #10
 802ab88:	d104      	bne.n	802ab94 <__swbuf_r+0x64>
 802ab8a:	4621      	mov	r1, r4
 802ab8c:	4628      	mov	r0, r5
 802ab8e:	f7ff ffa7 	bl	802aae0 <_fflush_r>
 802ab92:	b938      	cbnz	r0, 802aba4 <__swbuf_r+0x74>
 802ab94:	4638      	mov	r0, r7
 802ab96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802ab98:	4621      	mov	r1, r4
 802ab9a:	4628      	mov	r0, r5
 802ab9c:	f000 f806 	bl	802abac <__swsetup_r>
 802aba0:	2800      	cmp	r0, #0
 802aba2:	d0d5      	beq.n	802ab50 <__swbuf_r+0x20>
 802aba4:	f04f 37ff 	mov.w	r7, #4294967295
 802aba8:	e7f4      	b.n	802ab94 <__swbuf_r+0x64>
	...

0802abac <__swsetup_r>:
 802abac:	b538      	push	{r3, r4, r5, lr}
 802abae:	4b2a      	ldr	r3, [pc, #168]	; (802ac58 <__swsetup_r+0xac>)
 802abb0:	4605      	mov	r5, r0
 802abb2:	6818      	ldr	r0, [r3, #0]
 802abb4:	460c      	mov	r4, r1
 802abb6:	b118      	cbz	r0, 802abc0 <__swsetup_r+0x14>
 802abb8:	6a03      	ldr	r3, [r0, #32]
 802abba:	b90b      	cbnz	r3, 802abc0 <__swsetup_r+0x14>
 802abbc:	f7ff f9cc 	bl	8029f58 <__sinit>
 802abc0:	89a3      	ldrh	r3, [r4, #12]
 802abc2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802abc6:	0718      	lsls	r0, r3, #28
 802abc8:	d422      	bmi.n	802ac10 <__swsetup_r+0x64>
 802abca:	06d9      	lsls	r1, r3, #27
 802abcc:	d407      	bmi.n	802abde <__swsetup_r+0x32>
 802abce:	2309      	movs	r3, #9
 802abd0:	602b      	str	r3, [r5, #0]
 802abd2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802abd6:	81a3      	strh	r3, [r4, #12]
 802abd8:	f04f 30ff 	mov.w	r0, #4294967295
 802abdc:	e034      	b.n	802ac48 <__swsetup_r+0x9c>
 802abde:	0758      	lsls	r0, r3, #29
 802abe0:	d512      	bpl.n	802ac08 <__swsetup_r+0x5c>
 802abe2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802abe4:	b141      	cbz	r1, 802abf8 <__swsetup_r+0x4c>
 802abe6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802abea:	4299      	cmp	r1, r3
 802abec:	d002      	beq.n	802abf4 <__swsetup_r+0x48>
 802abee:	4628      	mov	r0, r5
 802abf0:	f7ff fbd0 	bl	802a394 <_free_r>
 802abf4:	2300      	movs	r3, #0
 802abf6:	6363      	str	r3, [r4, #52]	; 0x34
 802abf8:	89a3      	ldrh	r3, [r4, #12]
 802abfa:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802abfe:	81a3      	strh	r3, [r4, #12]
 802ac00:	2300      	movs	r3, #0
 802ac02:	6063      	str	r3, [r4, #4]
 802ac04:	6923      	ldr	r3, [r4, #16]
 802ac06:	6023      	str	r3, [r4, #0]
 802ac08:	89a3      	ldrh	r3, [r4, #12]
 802ac0a:	f043 0308 	orr.w	r3, r3, #8
 802ac0e:	81a3      	strh	r3, [r4, #12]
 802ac10:	6923      	ldr	r3, [r4, #16]
 802ac12:	b94b      	cbnz	r3, 802ac28 <__swsetup_r+0x7c>
 802ac14:	89a3      	ldrh	r3, [r4, #12]
 802ac16:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802ac1a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ac1e:	d003      	beq.n	802ac28 <__swsetup_r+0x7c>
 802ac20:	4621      	mov	r1, r4
 802ac22:	4628      	mov	r0, r5
 802ac24:	f000 f840 	bl	802aca8 <__smakebuf_r>
 802ac28:	89a0      	ldrh	r0, [r4, #12]
 802ac2a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ac2e:	f010 0301 	ands.w	r3, r0, #1
 802ac32:	d00a      	beq.n	802ac4a <__swsetup_r+0x9e>
 802ac34:	2300      	movs	r3, #0
 802ac36:	60a3      	str	r3, [r4, #8]
 802ac38:	6963      	ldr	r3, [r4, #20]
 802ac3a:	425b      	negs	r3, r3
 802ac3c:	61a3      	str	r3, [r4, #24]
 802ac3e:	6923      	ldr	r3, [r4, #16]
 802ac40:	b943      	cbnz	r3, 802ac54 <__swsetup_r+0xa8>
 802ac42:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ac46:	d1c4      	bne.n	802abd2 <__swsetup_r+0x26>
 802ac48:	bd38      	pop	{r3, r4, r5, pc}
 802ac4a:	0781      	lsls	r1, r0, #30
 802ac4c:	bf58      	it	pl
 802ac4e:	6963      	ldrpl	r3, [r4, #20]
 802ac50:	60a3      	str	r3, [r4, #8]
 802ac52:	e7f4      	b.n	802ac3e <__swsetup_r+0x92>
 802ac54:	2000      	movs	r0, #0
 802ac56:	e7f7      	b.n	802ac48 <__swsetup_r+0x9c>
 802ac58:	20000160 	.word	0x20000160

0802ac5c <__swhatbuf_r>:
 802ac5c:	b570      	push	{r4, r5, r6, lr}
 802ac5e:	460c      	mov	r4, r1
 802ac60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ac64:	2900      	cmp	r1, #0
 802ac66:	b096      	sub	sp, #88	; 0x58
 802ac68:	4615      	mov	r5, r2
 802ac6a:	461e      	mov	r6, r3
 802ac6c:	da0d      	bge.n	802ac8a <__swhatbuf_r+0x2e>
 802ac6e:	89a3      	ldrh	r3, [r4, #12]
 802ac70:	f013 0f80 	tst.w	r3, #128	; 0x80
 802ac74:	f04f 0100 	mov.w	r1, #0
 802ac78:	bf0c      	ite	eq
 802ac7a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802ac7e:	2340      	movne	r3, #64	; 0x40
 802ac80:	2000      	movs	r0, #0
 802ac82:	6031      	str	r1, [r6, #0]
 802ac84:	602b      	str	r3, [r5, #0]
 802ac86:	b016      	add	sp, #88	; 0x58
 802ac88:	bd70      	pop	{r4, r5, r6, pc}
 802ac8a:	466a      	mov	r2, sp
 802ac8c:	f000 f848 	bl	802ad20 <_fstat_r>
 802ac90:	2800      	cmp	r0, #0
 802ac92:	dbec      	blt.n	802ac6e <__swhatbuf_r+0x12>
 802ac94:	9901      	ldr	r1, [sp, #4]
 802ac96:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802ac9a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802ac9e:	4259      	negs	r1, r3
 802aca0:	4159      	adcs	r1, r3
 802aca2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802aca6:	e7eb      	b.n	802ac80 <__swhatbuf_r+0x24>

0802aca8 <__smakebuf_r>:
 802aca8:	898b      	ldrh	r3, [r1, #12]
 802acaa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802acac:	079d      	lsls	r5, r3, #30
 802acae:	4606      	mov	r6, r0
 802acb0:	460c      	mov	r4, r1
 802acb2:	d507      	bpl.n	802acc4 <__smakebuf_r+0x1c>
 802acb4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802acb8:	6023      	str	r3, [r4, #0]
 802acba:	6123      	str	r3, [r4, #16]
 802acbc:	2301      	movs	r3, #1
 802acbe:	6163      	str	r3, [r4, #20]
 802acc0:	b002      	add	sp, #8
 802acc2:	bd70      	pop	{r4, r5, r6, pc}
 802acc4:	ab01      	add	r3, sp, #4
 802acc6:	466a      	mov	r2, sp
 802acc8:	f7ff ffc8 	bl	802ac5c <__swhatbuf_r>
 802accc:	9900      	ldr	r1, [sp, #0]
 802acce:	4605      	mov	r5, r0
 802acd0:	4630      	mov	r0, r6
 802acd2:	f7ff f81b 	bl	8029d0c <_malloc_r>
 802acd6:	b948      	cbnz	r0, 802acec <__smakebuf_r+0x44>
 802acd8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802acdc:	059a      	lsls	r2, r3, #22
 802acde:	d4ef      	bmi.n	802acc0 <__smakebuf_r+0x18>
 802ace0:	f023 0303 	bic.w	r3, r3, #3
 802ace4:	f043 0302 	orr.w	r3, r3, #2
 802ace8:	81a3      	strh	r3, [r4, #12]
 802acea:	e7e3      	b.n	802acb4 <__smakebuf_r+0xc>
 802acec:	89a3      	ldrh	r3, [r4, #12]
 802acee:	6020      	str	r0, [r4, #0]
 802acf0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802acf4:	81a3      	strh	r3, [r4, #12]
 802acf6:	9b00      	ldr	r3, [sp, #0]
 802acf8:	6163      	str	r3, [r4, #20]
 802acfa:	9b01      	ldr	r3, [sp, #4]
 802acfc:	6120      	str	r0, [r4, #16]
 802acfe:	b15b      	cbz	r3, 802ad18 <__smakebuf_r+0x70>
 802ad00:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ad04:	4630      	mov	r0, r6
 802ad06:	f000 f81d 	bl	802ad44 <_isatty_r>
 802ad0a:	b128      	cbz	r0, 802ad18 <__smakebuf_r+0x70>
 802ad0c:	89a3      	ldrh	r3, [r4, #12]
 802ad0e:	f023 0303 	bic.w	r3, r3, #3
 802ad12:	f043 0301 	orr.w	r3, r3, #1
 802ad16:	81a3      	strh	r3, [r4, #12]
 802ad18:	89a3      	ldrh	r3, [r4, #12]
 802ad1a:	431d      	orrs	r5, r3
 802ad1c:	81a5      	strh	r5, [r4, #12]
 802ad1e:	e7cf      	b.n	802acc0 <__smakebuf_r+0x18>

0802ad20 <_fstat_r>:
 802ad20:	b538      	push	{r3, r4, r5, lr}
 802ad22:	4d07      	ldr	r5, [pc, #28]	; (802ad40 <_fstat_r+0x20>)
 802ad24:	2300      	movs	r3, #0
 802ad26:	4604      	mov	r4, r0
 802ad28:	4608      	mov	r0, r1
 802ad2a:	4611      	mov	r1, r2
 802ad2c:	602b      	str	r3, [r5, #0]
 802ad2e:	f7d7 fb3d 	bl	80023ac <_fstat>
 802ad32:	1c43      	adds	r3, r0, #1
 802ad34:	d102      	bne.n	802ad3c <_fstat_r+0x1c>
 802ad36:	682b      	ldr	r3, [r5, #0]
 802ad38:	b103      	cbz	r3, 802ad3c <_fstat_r+0x1c>
 802ad3a:	6023      	str	r3, [r4, #0]
 802ad3c:	bd38      	pop	{r3, r4, r5, pc}
 802ad3e:	bf00      	nop
 802ad40:	20013914 	.word	0x20013914

0802ad44 <_isatty_r>:
 802ad44:	b538      	push	{r3, r4, r5, lr}
 802ad46:	4d06      	ldr	r5, [pc, #24]	; (802ad60 <_isatty_r+0x1c>)
 802ad48:	2300      	movs	r3, #0
 802ad4a:	4604      	mov	r4, r0
 802ad4c:	4608      	mov	r0, r1
 802ad4e:	602b      	str	r3, [r5, #0]
 802ad50:	f7d7 fb32 	bl	80023b8 <_isatty>
 802ad54:	1c43      	adds	r3, r0, #1
 802ad56:	d102      	bne.n	802ad5e <_isatty_r+0x1a>
 802ad58:	682b      	ldr	r3, [r5, #0]
 802ad5a:	b103      	cbz	r3, 802ad5e <_isatty_r+0x1a>
 802ad5c:	6023      	str	r3, [r4, #0]
 802ad5e:	bd38      	pop	{r3, r4, r5, pc}
 802ad60:	20013914 	.word	0x20013914

0802ad64 <_init>:
 802ad64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ad66:	bf00      	nop
 802ad68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ad6a:	bc08      	pop	{r3}
 802ad6c:	469e      	mov	lr, r3
 802ad6e:	4770      	bx	lr

0802ad70 <_fini>:
 802ad70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ad72:	bf00      	nop
 802ad74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ad76:	bc08      	pop	{r3}
 802ad78:	469e      	mov	lr, r3
 802ad7a:	4770      	bx	lr


STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00028b58  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003f54  08028d08  08028d08  00038d08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000223a  0802cc5c  0802cc5c  0003cc5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000000f0  0802ee98  0802ee98  0003ee98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000005b4  0802ef88  0802ef88  0003ef88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  0802f53c  0802f53c  0003f53c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0814856c  0814856c  00160168  2**0
                  CONTENTS
  8 .ARM          00000008  0814856c  0814856c  0015856c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08148574  08148574  00160168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08148574  08148574  00158574  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08148588  08148588  00158588  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08148590  00160000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001428c  20000168  081486f8  00160168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200143f4  081486f8  001643f4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00160168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00170000  2**2
                  ALLOC
 17 .comment      000000c2  00000000  00000000  00160198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00092a17  00000000  00000000  0016025a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001f2c71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0026cd73  00000000  00000000  001f2d04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002fa46  00000000  00000000  0045fa77  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004400  00000000  00000000  0048f4c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011dcbc  00000000  00000000  004938c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 000077ca  00000000  00000000  005b157c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0002ff82  00000000  00000000  005b8d46  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  00039cb9  00000000  00000000  005e8cc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c904  00000000  00000000  00622984  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08028cf0 	.word	0x08028cf0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	08028cf0 	.word	0x08028cf0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800058c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000590:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000592:	e003      	b.n	800059c <LoopCopyDataInit>

08000594 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000594:	4b0c      	ldr	r3, [pc, #48]	; (80005c8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000596:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000598:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059a:	3104      	adds	r1, #4

0800059c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800059c:	480b      	ldr	r0, [pc, #44]	; (80005cc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800059e:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a4:	d3f6      	bcc.n	8000594 <CopyDataInit>
  ldr  r2, =_sbss
 80005a6:	4a0b      	ldr	r2, [pc, #44]	; (80005d4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005a8:	e002      	b.n	80005b0 <LoopFillZerobss>

080005aa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005aa:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005ac:	f842 3b04 	str.w	r3, [r2], #4

080005b0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b4:	d3f9      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005b6:	f007 ff1b 	bl	80083f0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ba:	f027 fe1d 	bl	80281f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005be:	f000 ff5f 	bl	8001480 <main>
  bx  lr    
 80005c2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005c8:	08148590 	.word	0x08148590
  ldr  r0, =_sdata
 80005cc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d0:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005d4:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005d8:	200143f4 	.word	0x200143f4

080005dc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC_IRQHandler>
	...

080005e0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005e6:	f000 fd35 	bl	8001054 <touchgfx_components_init>
  touchgfx_init();
}
 80005ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005ee:	f000 bcbd 	b.w	8000f6c <touchgfx_init>
 80005f2:	bf00      	nop

080005f4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f4:	f000 bd30 	b.w	8001058 <touchgfx_taskEntry>

080005f8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f8:	4770      	bx	lr

080005fa <_ZN20STM32TouchControllerD0Ev>:
 80005fa:	b510      	push	{r4, lr}
 80005fc:	2104      	movs	r1, #4
 80005fe:	4604      	mov	r4, r0
 8000600:	f026 fd05 	bl	802700e <_ZdlPvj>
 8000604:	4620      	mov	r0, r4
 8000606:	bd10      	pop	{r4, pc}

08000608 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000608:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060a:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060c:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000610:	4b0c      	ldr	r3, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000614:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	6863      	ldr	r3, [r4, #4]
 8000618:	4798      	blx	r3
 800061a:	f640 0311 	movw	r3, #2065	; 0x811
 800061e:	4298      	cmp	r0, r3
 8000620:	d10a      	bne.n	8000638 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000622:	4d09      	ldr	r5, [pc, #36]	; (8000648 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000626:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	2082      	movs	r0, #130	; 0x82
 800062a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800062c:	682b      	ldr	r3, [r5, #0]
 800062e:	2082      	movs	r0, #130	; 0x82
 8000630:	68db      	ldr	r3, [r3, #12]
 8000632:	4798      	blx	r3
 8000634:	2000      	movs	r0, #0
    }

    return ret;
}
 8000636:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000638:	2001      	movs	r0, #1
 800063a:	e7fc      	b.n	8000636 <_Z11BSP_TS_Inittt+0x2e>
 800063c:	20000184 	.word	0x20000184
 8000640:	20000050 	.word	0x20000050
 8000644:	20000186 	.word	0x20000186
 8000648:	20000188 	.word	0x20000188

0800064c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800064c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000650:	20f0      	movs	r0, #240	; 0xf0
 8000652:	f7ff bfd9 	b.w	8000608 <_Z11BSP_TS_Inittt>
	...

08000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065a:	4d33      	ldr	r5, [pc, #204]	; (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800065c:	682b      	ldr	r3, [r5, #0]
{
 800065e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	2082      	movs	r0, #130	; 0x82
 8000664:	4798      	blx	r3
 8000666:	b280      	uxth	r0, r0
 8000668:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066a:	2800      	cmp	r0, #0
 800066c:	d04a      	beq.n	8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066e:	682b      	ldr	r3, [r5, #0]
 8000670:	f10d 0206 	add.w	r2, sp, #6
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	a901      	add	r1, sp, #4
 8000678:	2082      	movs	r0, #130	; 0x82
 800067a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800067c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000680:	f640 6274 	movw	r2, #3700	; 0xe74
 8000684:	4293      	cmp	r3, r2
 8000686:	d93f      	bls.n	8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000688:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800068c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000690:	1ad2      	subs	r2, r2, r3
 8000692:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000694:	2a0a      	cmp	r2, #10
 8000696:	d93d      	bls.n	8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000698:	230b      	movs	r3, #11
 800069a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800069e:	4b23      	ldr	r3, [pc, #140]	; (800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80006a0:	881b      	ldrh	r3, [r3, #0]
 80006a2:	429a      	cmp	r2, r3
 80006a4:	d901      	bls.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80006a6:	3b01      	subs	r3, #1
 80006a8:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006ae:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d830      	bhi.n	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80006b6:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006ba:	330e      	adds	r3, #14
 80006bc:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006be:	210f      	movs	r1, #15
 80006c0:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006c4:	491a      	ldr	r1, [pc, #104]	; (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006c6:	8809      	ldrh	r1, [r1, #0]
 80006c8:	428b      	cmp	r3, r1
 80006ca:	d901      	bls.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80006cc:	3901      	subs	r1, #1
 80006ce:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4e18      	ldr	r6, [pc, #96]	; (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	4d19      	ldr	r5, [pc, #100]	; (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d8:	4283      	cmp	r3, r0
 80006da:	b281      	uxth	r1, r0
 80006dc:	bf8c      	ite	hi
 80006de:	1a59      	subhi	r1, r3, r1
 80006e0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e2:	b2b8      	uxth	r0, r7
 80006e4:	42ba      	cmp	r2, r7
 80006e6:	bf8c      	ite	hi
 80006e8:	1a10      	subhi	r0, r2, r0
 80006ea:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006f0:	4401      	add	r1, r0
 80006f2:	2905      	cmp	r1, #5
        {
            _x = x;
 80006f4:	bfc8      	it	gt
 80006f6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006f8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006fa:	bfc8      	it	gt
 80006fc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006fe:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	80a3      	strh	r3, [r4, #4]
    }
}
 8000704:	b003      	add	sp, #12
 8000706:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000708:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 800070a:	bf9c      	itt	ls
 800070c:	23b4      	movls	r3, #180	; 0xb4
 800070e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000712:	e7bb      	b.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000714:	2200      	movs	r2, #0
 8000716:	e7c8      	b.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000718:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800071c:	3308      	adds	r3, #8
 800071e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000720:	2b0e      	cmp	r3, #14
 8000722:	d8cc      	bhi.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	e7d3      	b.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000728:	20000188 	.word	0x20000188
 800072c:	20000186 	.word	0x20000186
 8000730:	20000184 	.word	0x20000184
 8000734:	2000018c 	.word	0x2000018c
 8000738:	20000190 	.word	0x20000190

0800073c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800073c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800073e:	4668      	mov	r0, sp
{
 8000740:	460d      	mov	r5, r1
 8000742:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000744:	f7ff ff88 	bl	8000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000748:	f8bd 0000 	ldrh.w	r0, [sp]
 800074c:	b148      	cbz	r0, 8000762 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800074e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000752:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000754:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000758:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800075a:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800075c:	223c      	movs	r2, #60	; 0x3c
 800075e:	601a      	str	r2, [r3, #0]
        return true;
 8000760:	2001      	movs	r0, #1
}
 8000762:	b003      	add	sp, #12
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop
 8000768:	20000014 	.word	0x20000014

0800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800076c:	b110      	cbz	r0, 8000774 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800076e:	2802      	cmp	r0, #2
 8000770:	d009      	beq.n	8000786 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000772:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000774:	4b07      	ldr	r3, [pc, #28]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	fab2 f282 	clz	r2, r2
 800077c:	0952      	lsrs	r2, r2, #5
 800077e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000780:	4805      	ldr	r0, [pc, #20]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	f008 b969 	b.w	8008a58 <HAL_GPIO_WritePin>
 8000786:	4b03      	ldr	r3, [pc, #12]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000788:	689a      	ldr	r2, [r3, #8]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2110      	movs	r1, #16
 8000792:	e7f5      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000794:	20000194 	.word	0x20000194
 8000798:	40021000 	.word	0x40021000

0800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800079c:	b110      	cbz	r0, 80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079e:	2802      	cmp	r0, #2
 80007a0:	d009      	beq.n	80007b6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007a2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a4:	4b07      	ldr	r3, [pc, #28]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	3a00      	subs	r2, #0
 80007aa:	bf18      	it	ne
 80007ac:	2201      	movne	r2, #1
 80007ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	4805      	ldr	r0, [pc, #20]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b2:	f008 b951 	b.w	8008a58 <HAL_GPIO_WritePin>
 80007b6:	4b03      	ldr	r3, [pc, #12]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2110      	movs	r1, #16
 80007c2:	e7f5      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80007c4:	20000194 	.word	0x20000194
 80007c8:	40021000 	.word	0x40021000

080007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007cc:	b110      	cbz	r0, 80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ce:	2802      	cmp	r0, #2
 80007d0:	d004      	beq.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007d6:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80007d8:	f008 b942 	b.w	8008a60 <HAL_GPIO_TogglePin>
 80007dc:	2110      	movs	r1, #16
 80007de:	e7fa      	b.n	80007d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80007e0:	40021000 	.word	0x40021000

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2802      	cmp	r0, #2
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80007fa:	f008 f927 	bl	8008a4c <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000800:	2110      	movs	r1, #16
 8000802:	e7f9      	b.n	80007f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000804:	40021000 	.word	0x40021000

08000808 <_ZN8touchgfx4GPIO4initEv>:
{
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	4d08      	ldr	r5, [pc, #32]	; (800082c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800080c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800080e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000810:	b2e0      	uxtb	r0, r4
 8000812:	f7ff ffe7 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000816:	b118      	cbz	r0, 8000820 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000818:	682b      	ldr	r3, [r5, #0]
 800081a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800081c:	bf18      	it	ne
 800081e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000820:	3401      	adds	r4, #1
 8000822:	2c05      	cmp	r4, #5
 8000824:	f105 0504 	add.w	r5, r5, #4
 8000828:	d1f2      	bne.n	8000810 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	20000194 	.word	0x20000194

08000830 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000830:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000832:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000836:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800083a:	4770      	bx	lr

0800083c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800083c:	2000      	movs	r0, #0
 800083e:	4770      	bx	lr

08000840 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000840:	4b03      	ldr	r3, [pc, #12]	; (8000850 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000842:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000844:	3900      	subs	r1, #0
 8000846:	bf18      	it	ne
 8000848:	2101      	movne	r1, #1
 800084a:	7019      	strb	r1, [r3, #0]
    }
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	200137bb 	.word	0x200137bb

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000872:	4770      	bx	lr

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000878:	b510      	push	{r4, lr}
 800087a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800087c:	f000 fcd8 	bl	8001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	4903      	ldr	r1, [pc, #12]	; (8000890 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000884:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000888:	4620      	mov	r0, r4
}
 800088a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800088e:	4718      	bx	r3
 8000890:	d0000000 	.word	0xd0000000

08000894 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000894:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000896:	6803      	ldr	r3, [r0, #0]
{
 8000898:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800089a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800089e:	4798      	blx	r3
    enableInterrupts();
 80008a0:	6823      	ldr	r3, [r4, #0]
 80008a2:	4620      	mov	r0, r4
 80008a4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008a6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008a8:	f000 f8ec 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	4620      	mov	r0, r4
 80008b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008b2:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008b4:	2029      	movs	r0, #41	; 0x29
 80008b6:	f001 f8e5 	bl	8001a84 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80008ba:	f000 f8e3 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	4620      	mov	r0, r4
 80008c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008c4:	4798      	blx	r3
    for (;;)
 80008c6:	e7f8      	b.n	80008ba <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080008c8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c8:	b510      	push	{r4, lr}
 80008ca:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008cc:	f00f fbd2 	bl	8010074 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008d0:	6823      	ldr	r3, [r4, #0]
 80008d2:	4620      	mov	r0, r4
 80008d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80008d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008dc:	4718      	bx	r3

080008de <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80008de:	f000 bc99 	b.w	8001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080008e2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008e2:	f000 bc9d 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008e6:	f000 bcc1 	b.w	800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008ea <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008ea:	f000 bc6f 	b.w	80011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ee <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ee:	f000 bcc9 	b.w	8001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008f2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008f2:	f000 bcd1 	b.w	8001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080008f6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80008f6:	f000 bc73 	b.w	80011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080008fa <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008fa:	f00e be27 	b.w	800f54c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008fe <_ZN11TouchGFXHALD0Ev>:
 80008fe:	b510      	push	{r4, lr}
 8000900:	217c      	movs	r1, #124	; 0x7c
 8000902:	4604      	mov	r4, r0
 8000904:	f026 fb83 	bl	802700e <_ZdlPvj>
 8000908:	4620      	mov	r0, r4
 800090a:	bd10      	pop	{r4, pc}

0800090c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800090c:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000910:	b11b      	cbz	r3, 800091a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000912:	6840      	ldr	r0, [r0, #4]
 8000914:	6803      	ldr	r3, [r0, #0]
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	4718      	bx	r3
    }
 800091a:	4618      	mov	r0, r3
 800091c:	4770      	bx	lr
	...

08000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000920:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000922:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000926:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 800092a:	4b0c      	ldr	r3, [pc, #48]	; (800095c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800092c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800092e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000930:	d009      	beq.n	8000946 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000932:	b93a      	cbnz	r2, 8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000934:	4a0a      	ldr	r2, [pc, #40]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000936:	490b      	ldr	r1, [pc, #44]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000938:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800093a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800093c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800093e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000940:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000942:	701a      	strb	r2, [r3, #0]
    }
 8000944:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000946:	2a00      	cmp	r2, #0
 8000948:	d0fc      	beq.n	8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094a:	4a05      	ldr	r2, [pc, #20]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800094c:	4905      	ldr	r1, [pc, #20]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000950:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000952:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000954:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000956:	2200      	movs	r2, #0
 8000958:	e7f3      	b.n	8000942 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800095a:	bf00      	nop
 800095c:	200137b4 	.word	0x200137b4
 8000960:	200137b0 	.word	0x200137b0
 8000964:	200137b2 	.word	0x200137b2

08000968 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	460d      	mov	r5, r1
 800096c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800096e:	b935      	cbnz	r5, 800097e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000970:	4b09      	ldr	r3, [pc, #36]	; (8000998 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000972:	4a0a      	ldr	r2, [pc, #40]	; (800099c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000974:	480a      	ldr	r0, [pc, #40]	; (80009a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000976:	f240 21d2 	movw	r1, #722	; 0x2d2
 800097a:	f027 f939 	bl	8027bf0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800097e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000982:	4b08      	ldr	r3, [pc, #32]	; (80009a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000984:	3a00      	subs	r2, #0
 8000986:	bf18      	it	ne
 8000988:	2201      	movne	r2, #1
 800098a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800098c:	6803      	ldr	r3, [r0, #0]
    }
 800098e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000992:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000996:	4718      	bx	r3
 8000998:	08028d60 	.word	0x08028d60
 800099c:	08028d98 	.word	0x08028d98
 80009a0:	08028de6 	.word	0x08028de6
 80009a4:	200137ba 	.word	0x200137ba

080009a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009a8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009aa:	4b09      	ldr	r3, [pc, #36]	; (80009d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009ac:	881b      	ldrh	r3, [r3, #0]
 80009ae:	428b      	cmp	r3, r1
 80009b0:	d803      	bhi.n	80009ba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009b2:	4b08      	ldr	r3, [pc, #32]	; (80009d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009b4:	881b      	ldrh	r3, [r3, #0]
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d905      	bls.n	80009c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009bc:	4a07      	ldr	r2, [pc, #28]	; (80009dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009be:	4808      	ldr	r0, [pc, #32]	; (80009e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009c0:	219e      	movs	r1, #158	; 0x9e
 80009c2:	f027 f915 	bl	8027bf0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009c6:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009c8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009ca:	4b07      	ldr	r3, [pc, #28]	; (80009e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80009cc:	801a      	strh	r2, [r3, #0]
    }
 80009ce:	bd08      	pop	{r3, pc}
 80009d0:	200137b0 	.word	0x200137b0
 80009d4:	200137b2 	.word	0x200137b2
 80009d8:	08028e2b 	.word	0x08028e2b
 80009dc:	08028e8e 	.word	0x08028e8e
 80009e0:	08028de6 	.word	0x08028de6
 80009e4:	200137b6 	.word	0x200137b6
 80009e8:	200137b8 	.word	0x200137b8

080009ec <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009ec:	2101      	movs	r1, #1
{
 80009ee:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009f0:	2200      	movs	r2, #0
 80009f2:	4608      	mov	r0, r1
 80009f4:	f00b fbb4 	bl	800c160 <osSemaphoreNew>
 80009f8:	4b0a      	ldr	r3, [pc, #40]	; (8000a24 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80009fa:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80009fc:	b928      	cbnz	r0, 8000a0a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80009fe:	4b0a      	ldr	r3, [pc, #40]	; (8000a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a00:	4a0a      	ldr	r2, [pc, #40]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a02:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a04:	480a      	ldr	r0, [pc, #40]	; (8000a30 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a06:	f027 f8f3 	bl	8027bf0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	2104      	movs	r1, #4
 8000a0e:	2001      	movs	r0, #1
 8000a10:	f00b fc5a 	bl	800c2c8 <osMessageQueueNew>
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a16:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a18:	b918      	cbnz	r0, 8000a22 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a1c:	4a03      	ldr	r2, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a1e:	212c      	movs	r1, #44	; 0x2c
 8000a20:	e7f0      	b.n	8000a04 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a22:	bd08      	pop	{r3, pc}
 8000a24:	200001a8 	.word	0x200001a8
 8000a28:	08028fac 	.word	0x08028fac
 8000a2c:	08028ff5 	.word	0x08028ff5
 8000a30:	08029024 	.word	0x08029024
 8000a34:	200001a4 	.word	0x200001a4
 8000a38:	0802909e 	.word	0x0802909e

08000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a3c:	4b02      	ldr	r3, [pc, #8]	; (8000a48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a3e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a42:	6818      	ldr	r0, [r3, #0]
 8000a44:	f00b bbe0 	b.w	800c208 <osSemaphoreAcquire>
 8000a48:	200001a8 	.word	0x200001a8

08000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a4c:	4b01      	ldr	r3, [pc, #4]	; (8000a54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a4e:	6818      	ldr	r0, [r3, #0]
 8000a50:	f00b bc0e 	b.w	800c270 <osSemaphoreRelease>
 8000a54:	200001a8 	.word	0x200001a8

08000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000a58:	4b02      	ldr	r3, [pc, #8]	; (8000a64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	6818      	ldr	r0, [r3, #0]
 8000a5e:	f00b bbd3 	b.w	800c208 <osSemaphoreAcquire>
 8000a62:	bf00      	nop
 8000a64:	200001a8 	.word	0x200001a8

08000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000a68:	f7ff bff0 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a6c:	4803      	ldr	r0, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000a6e:	4904      	ldr	r1, [pc, #16]	; (8000a80 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a70:	6800      	ldr	r0, [r0, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	461a      	mov	r2, r3
 8000a76:	f00b bc61 	b.w	800c33c <osMessageQueuePut>
 8000a7a:	bf00      	nop
 8000a7c:	200001a4 	.word	0x200001a4
 8000a80:	20000004 	.word	0x20000004

08000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a84:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a86:	4c08      	ldr	r4, [pc, #32]	; (8000aa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a88:	2300      	movs	r3, #0
 8000a8a:	461a      	mov	r2, r3
 8000a8c:	a901      	add	r1, sp, #4
 8000a8e:	6820      	ldr	r0, [r4, #0]
 8000a90:	f00b fc8a 	bl	800c3a8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a94:	6820      	ldr	r0, [r4, #0]
 8000a96:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	a901      	add	r1, sp, #4
 8000a9e:	f00b fc83 	bl	800c3a8 <osMessageQueueGet>
}
 8000aa2:	b002      	add	sp, #8
 8000aa4:	bd10      	pop	{r4, pc}
 8000aa6:	bf00      	nop
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000aac:	6803      	ldr	r3, [r0, #0]
 8000aae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ab0:	4718      	bx	r3

08000ab2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000ab2:	2001      	movs	r0, #1
 8000ab4:	4770      	bx	lr

08000ab6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000ab6:	6803      	ldr	r3, [r0, #0]
 8000ab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000aba:	4718      	bx	r3

08000abc <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000abc:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000abe:	2300      	movs	r3, #0
 8000ac0:	9301      	str	r3, [sp, #4]
 8000ac2:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ac6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000aca:	631a      	str	r2, [r3, #48]	; 0x30
 8000acc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ace:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000ad2:	9201      	str	r2, [sp, #4]
 8000ad4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000ad6:	691a      	ldr	r2, [r3, #16]
 8000ad8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000adc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000ade:	691a      	ldr	r2, [r3, #16]
 8000ae0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000ae4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <_ZN8STM32DMA10initializeEv+0x40>)
 8000ae8:	4a05      	ldr	r2, [pc, #20]	; (8000b00 <_ZN8STM32DMA10initializeEv+0x44>)
 8000aea:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000aec:	4b05      	ldr	r3, [pc, #20]	; (8000b04 <_ZN8STM32DMA10initializeEv+0x48>)
 8000aee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000af2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000af4:	b002      	add	sp, #8
 8000af6:	4770      	bx	lr
 8000af8:	40023800 	.word	0x40023800
 8000afc:	20002634 	.word	0x20002634
 8000b00:	08000b49 	.word	0x08000b49
 8000b04:	e000e100 	.word	0xe000e100

08000b08 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b08:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b0c:	4770      	bx	lr
	...

08000b10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b10:	4b05      	ldr	r3, [pc, #20]	; (8000b28 <_ZN8STM32DMAD1Ev+0x18>)
 8000b12:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b14:	4b05      	ldr	r3, [pc, #20]	; (8000b2c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b16:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b1a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b22:	f3bf 8f6f 	isb	sy
}
 8000b26:	4770      	bx	lr
 8000b28:	08029268 	.word	0x08029268
 8000b2c:	e000e100 	.word	0xe000e100

08000b30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b30:	b510      	push	{r4, lr}
 8000b32:	4604      	mov	r4, r0
}
 8000b34:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b38:	f7ff ffea 	bl	8000b10 <_ZN8STM32DMAD1Ev>
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	f026 fa66 	bl	802700e <_ZdlPvj>
 8000b42:	4620      	mov	r0, r4
 8000b44:	bd10      	pop	{r4, pc}
	...

08000b48 <DMA2D_XferCpltCallback>:
        return instance;
 8000b48:	4b02      	ldr	r3, [pc, #8]	; (8000b54 <DMA2D_XferCpltCallback+0xc>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b4e:	6803      	ldr	r3, [r0, #0]
 8000b50:	695b      	ldr	r3, [r3, #20]
 8000b52:	4718      	bx	r3
 8000b54:	200137bc 	.word	0x200137bc

08000b58 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000b5c:	4625      	mov	r5, r4
 8000b5e:	4b0a      	ldr	r3, [pc, #40]	; (8000b88 <_ZN8STM32DMAC1Ev+0x30>)
 8000b60:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b62:	2600      	movs	r6, #0
 8000b64:	6060      	str	r0, [r4, #4]
 8000b66:	7226      	strb	r6, [r4, #8]
 8000b68:	7266      	strb	r6, [r4, #9]
 8000b6a:	f845 3b20 	str.w	r3, [r5], #32
 8000b6e:	2260      	movs	r2, #96	; 0x60
 8000b70:	4629      	mov	r1, r5
 8000b72:	f00f fbd7 	bl	8010324 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000b76:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b7a:	60ee      	str	r6, [r5, #12]
 8000b7c:	3524      	adds	r5, #36	; 0x24
 8000b7e:	42ab      	cmp	r3, r5
 8000b80:	d1fb      	bne.n	8000b7a <_ZN8STM32DMAC1Ev+0x22>
}
 8000b82:	4620      	mov	r0, r4
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	bf00      	nop
 8000b88:	08029268 	.word	0x08029268

08000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b8c:	b508      	push	{r3, lr}
    switch (format)
 8000b8e:	290b      	cmp	r1, #11
 8000b90:	d80b      	bhi.n	8000baa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000b92:	e8df f001 	tbb	[pc, r1]
 8000b96:	0612      	.short	0x0612
 8000b98:	0a0a0a10 	.word	0x0a0a0a10
 8000b9c:	0808080a 	.word	0x0808080a
 8000ba0:	0808      	.short	0x0808
 8000ba2:	2001      	movs	r0, #1
}
 8000ba4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000ba6:	2005      	movs	r0, #5
        break;
 8000ba8:	e7fc      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000baa:	4b05      	ldr	r3, [pc, #20]	; (8000bc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bac:	4a05      	ldr	r2, [pc, #20]	; (8000bc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bae:	4806      	ldr	r0, [pc, #24]	; (8000bc8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000bb0:	2165      	movs	r1, #101	; 0x65
 8000bb2:	f027 f81d 	bl	8027bf0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000bb6:	2000      	movs	r0, #0
 8000bb8:	e7f4      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000bba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bbc:	e7f2      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bbe:	bf00      	nop
 8000bc0:	080290e0 	.word	0x080290e0
 8000bc4:	080290fb 	.word	0x080290fb
 8000bc8:	08029145 	.word	0x08029145

08000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bcc:	b508      	push	{r3, lr}
    switch (format)
 8000bce:	290a      	cmp	r1, #10
 8000bd0:	d809      	bhi.n	8000be6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000bd2:	e8df f001 	tbb	[pc, r1]
 8000bd6:	0610      	.short	0x0610
 8000bd8:	0808080e 	.word	0x0808080e
 8000bdc:	06060608 	.word	0x06060608
 8000be0:	06          	.byte	0x06
 8000be1:	00          	.byte	0x00
 8000be2:	2001      	movs	r0, #1
}
 8000be4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000be6:	4b05      	ldr	r3, [pc, #20]	; (8000bfc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000be8:	4a05      	ldr	r2, [pc, #20]	; (8000c00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bea:	4806      	ldr	r0, [pc, #24]	; (8000c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bec:	2186      	movs	r1, #134	; 0x86
 8000bee:	f026 ffff 	bl	8027bf0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	e7f6      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000bf6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bf8:	e7f4      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bfa:	bf00      	nop
 8000bfc:	080290e0 	.word	0x080290e0
 8000c00:	080291bd 	.word	0x080291bd
 8000c04:	08029145 	.word	0x08029145

08000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000c10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c12:	4641      	mov	r1, r8
{
 8000c14:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c16:	f7ff ffb9 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1a:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c20:	4649      	mov	r1, r9
 8000c22:	4638      	mov	r0, r7
 8000c24:	f7ff ffb2 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c28:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	f7ff ffcd 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c32:	8aa1      	ldrh	r1, [r4, #20]
 8000c34:	8b62      	ldrh	r2, [r4, #26]
 8000c36:	4b43      	ldr	r3, [pc, #268]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c38:	1a52      	subs	r2, r2, r1
 8000c3a:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3c:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c3e:	8b22      	ldrh	r2, [r4, #24]
 8000c40:	1a52      	subs	r2, r2, r1
 8000c42:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c44:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c46:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c48:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c4c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4e:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c50:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c52:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c54:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000c56:	6827      	ldr	r7, [r4, #0]
 8000c58:	2f80      	cmp	r7, #128	; 0x80
 8000c5a:	d028      	beq.n	8000cae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000c5c:	7f22      	ldrb	r2, [r4, #28]
 8000c5e:	d80f      	bhi.n	8000c80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000c60:	2f20      	cmp	r7, #32
 8000c62:	d065      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c64:	2f40      	cmp	r7, #64	; 0x40
 8000c66:	d063      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c68:	2f04      	cmp	r7, #4
 8000c6a:	d01a      	beq.n	8000ca2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c6c:	4b35      	ldr	r3, [pc, #212]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c6e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000c72:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c76:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c78:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c7a:	d05f      	beq.n	8000d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000c7c:	4a32      	ldr	r2, [pc, #200]	; (8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c7e:	e044      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000c80:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000c84:	d004      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000c86:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000c8a:	d1ef      	bne.n	8000c6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c8c:	492f      	ldr	r1, [pc, #188]	; (8000d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c8e:	e000      	b.n	8000c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c90:	492f      	ldr	r1, [pc, #188]	; (8000d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c92:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000c96:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c98:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c9a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c9c:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9e:	6158      	str	r0, [r3, #20]
 8000ca0:	e032      	b.n	8000d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ca6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000caa:	61da      	str	r2, [r3, #28]
 8000cac:	e7f6      	b.n	8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000cae:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000cb0:	1d3a      	adds	r2, r7, #4
 8000cb2:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb4:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cb6:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb8:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000cbc:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000cc0:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cc2:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cc6:	b142      	cbz	r2, 8000cda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000cc8:	2a01      	cmp	r2, #1
 8000cca:	d021      	beq.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000ccc:	4b21      	ldr	r3, [pc, #132]	; (8000d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000cce:	4a22      	ldr	r2, [pc, #136]	; (8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000cd0:	4822      	ldr	r0, [pc, #136]	; (8000d5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000cd2:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000cd6:	f026 ff8b 	bl	8027bf0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000cda:	69da      	ldr	r2, [r3, #28]
 8000cdc:	8879      	ldrh	r1, [r7, #2]
 8000cde:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000ce2:	3901      	subs	r1, #1
 8000ce4:	f022 0210 	bic.w	r2, r2, #16
 8000ce8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000cec:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000cee:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000cf0:	4b14      	ldr	r3, [pc, #80]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf2:	69da      	ldr	r2, [r3, #28]
 8000cf4:	f042 0220 	orr.w	r2, r2, #32
 8000cf8:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000cfa:	69da      	ldr	r2, [r3, #28]
 8000cfc:	0692      	lsls	r2, r2, #26
 8000cfe:	d4fc      	bmi.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d00:	2210      	movs	r2, #16
 8000d02:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d04:	2900      	cmp	r1, #0
 8000d06:	d0b9      	beq.n	8000c7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d08:	4a15      	ldr	r2, [pc, #84]	; (8000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d0a:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d10:	69da      	ldr	r2, [r3, #28]
 8000d12:	8878      	ldrh	r0, [r7, #2]
 8000d14:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d18:	3801      	subs	r0, #1
 8000d1a:	f022 0210 	bic.w	r2, r2, #16
 8000d1e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000d22:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d24:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000d28:	bf18      	it	ne
 8000d2a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d2c:	61da      	str	r2, [r3, #28]
                break;
 8000d2e:	e7df      	b.n	8000cf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d30:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d34:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000d36:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d3a:	e7b6      	b.n	8000caa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d3c:	f240 2201 	movw	r2, #513	; 0x201
 8000d40:	e7e3      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000d42:	bf00      	nop
 8000d44:	4002b000 	.word	0x4002b000
 8000d48:	00010201 	.word	0x00010201
 8000d4c:	00020009 	.word	0x00020009
 8000d50:	0002000a 	.word	0x0002000a
 8000d54:	08029208 	.word	0x08029208
 8000d58:	08029222 	.word	0x08029222
 8000d5c:	08029145 	.word	0x08029145
 8000d60:	00020201 	.word	0x00020201

08000d64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d68:	7f89      	ldrb	r1, [r1, #30]
 8000d6a:	f7ff ff2f 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d6e:	8aa5      	ldrh	r5, [r4, #20]
 8000d70:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d72:	4b16      	ldr	r3, [pc, #88]	; (8000dcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d74:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d76:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d78:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d7c:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d7e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d80:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	1b52      	subs	r2, r2, r5
 8000d84:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d86:	6825      	ldr	r5, [r4, #0]
 8000d88:	2d08      	cmp	r5, #8
 8000d8a:	d10e      	bne.n	8000daa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d90:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d92:	7f20      	ldrb	r0, [r4, #28]
 8000d94:	4a0e      	ldr	r2, [pc, #56]	; (8000dd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d96:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d9a:	61da      	str	r2, [r3, #28]
 8000d9c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d9e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000da0:	4a0c      	ldr	r2, [pc, #48]	; (8000dd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000da6:	601a      	str	r2, [r3, #0]
    }
}
 8000da8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000daa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000dac:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000dae:	611a      	str	r2, [r3, #16]
 8000db0:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000db2:	0a0a      	lsrs	r2, r1, #8
 8000db4:	0948      	lsrs	r0, r1, #5
 8000db6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000dbe:	4302      	orrs	r2, r0
 8000dc0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000dc4:	430a      	orrs	r2, r1
 8000dc6:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dc8:	4a03      	ldr	r2, [pc, #12]	; (8000dd8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000dca:	e7ec      	b.n	8000da6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000dcc:	4002b000 	.word	0x4002b000
 8000dd0:	00010009 	.word	0x00010009
 8000dd4:	00020201 	.word	0x00020201
 8000dd8:	00030201 	.word	0x00030201

08000ddc <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ddc:	4b03      	ldr	r3, [pc, #12]	; (8000dec <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000dde:	681a      	ldr	r2, [r3, #0]
 8000de0:	07d2      	lsls	r2, r2, #31
 8000de2:	d4fc      	bmi.n	8000dde <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000de4:	2223      	movs	r2, #35	; 0x23
 8000de6:	609a      	str	r2, [r3, #8]
}
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop
 8000dec:	4002b000 	.word	0x4002b000

08000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000df0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000df2:	4c0f      	ldr	r4, [pc, #60]	; (8000e30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000df4:	6825      	ldr	r5, [r4, #0]
 8000df6:	07ed      	lsls	r5, r5, #31
 8000df8:	d4fc      	bmi.n	8000df4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfa:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000dfc:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfe:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e00:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e04:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000e06:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e08:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e0a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000e0c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000e0e:	d00a      	beq.n	8000e26 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e10:	4908      	ldr	r1, [pc, #32]	; (8000e34 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e12:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e14:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000e18:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000e1a:	4b07      	ldr	r3, [pc, #28]	; (8000e38 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000e1c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000e1e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000e20:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e22:	6023      	str	r3, [r4, #0]
    }
}
 8000e24:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000e26:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000e28:	9b03      	ldr	r3, [sp, #12]
 8000e2a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e2c:	4b03      	ldr	r3, [pc, #12]	; (8000e3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000e2e:	e7f8      	b.n	8000e22 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000e30:	4002b000 	.word	0x4002b000
 8000e34:	00010009 	.word	0x00010009
 8000e38:	00020001 	.word	0x00020001
 8000e3c:	00030001 	.word	0x00030001

08000e40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e40:	2001      	movs	r0, #1
 8000e42:	4770      	bx	lr

08000e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e44:	2038      	movs	r0, #56	; 0x38
 8000e46:	4770      	bx	lr

08000e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e48:	2338      	movs	r3, #56	; 0x38
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e52:	2338      	movs	r3, #56	; 0x38
 8000e54:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e58:	3008      	adds	r0, #8
 8000e5a:	4770      	bx	lr

08000e5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	4770      	bx	lr

08000e60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e60:	f241 30e4 	movw	r0, #5092	; 0x13e4
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e6a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e6e:	3008      	adds	r0, #8
 8000e70:	4770      	bx	lr

08000e72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e72:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e76:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e7a:	3008      	adds	r0, #8
 8000e7c:	4770      	bx	lr

08000e7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7e:	2001      	movs	r0, #1
 8000e80:	4770      	bx	lr

08000e82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e82:	2010      	movs	r0, #16
 8000e84:	4770      	bx	lr

08000e86 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e86:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e8a:	3008      	adds	r0, #8
 8000e8c:	4770      	bx	lr

08000e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e8e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e92:	3008      	adds	r0, #8
 8000e94:	4770      	bx	lr

08000e96 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000e96:	4608      	mov	r0, r1
 8000e98:	f002 ba3c 	b.w	8003314 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e9c:	b510      	push	{r4, lr}
 8000e9e:	4b03      	ldr	r3, [pc, #12]	; (8000eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000ea0:	6003      	str	r3, [r0, #0]
 8000ea2:	4604      	mov	r4, r0
 8000ea4:	f00d fedb 	bl	800ec5e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	bd10      	pop	{r4, pc}
 8000eac:	08029320 	.word	0x08029320

08000eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000eb0:	b510      	push	{r4, lr}
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	f7ff fff2 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	2140      	movs	r1, #64	; 0x40
 8000ebc:	f026 f8a7 	bl	802700e <_ZdlPvj>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	bd10      	pop	{r4, pc}

08000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ec4:	b510      	push	{r4, lr}
 8000ec6:	4b03      	ldr	r3, [pc, #12]	; (8000ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ec8:	6003      	str	r3, [r0, #0]
 8000eca:	4604      	mov	r4, r0
 8000ecc:	f00d fec7 	bl	800ec5e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	bd10      	pop	{r4, pc}
 8000ed4:	080292ec 	.word	0x080292ec

08000ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	4604      	mov	r4, r0
 8000edc:	f7ff fff2 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f241 31ec 	movw	r1, #5100	; 0x13ec
 8000ee6:	f026 f892 	bl	802700e <_ZdlPvj>
 8000eea:	4620      	mov	r0, r4
 8000eec:	bd10      	pop	{r4, pc}
	...

08000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ef0:	b510      	push	{r4, lr}
 8000ef2:	4b03      	ldr	r3, [pc, #12]	; (8000f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ef4:	6003      	str	r3, [r0, #0]
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f00d feb1 	bl	800ec5e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	bd10      	pop	{r4, pc}
 8000f00:	080292b8 	.word	0x080292b8

08000f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f04:	b510      	push	{r4, lr}
 8000f06:	4604      	mov	r4, r0
 8000f08:	f7ff fff2 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	2118      	movs	r1, #24
 8000f10:	f026 f87d 	bl	802700e <_ZdlPvj>
 8000f14:	4620      	mov	r0, r4
 8000f16:	bd10      	pop	{r4, pc}

08000f18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f18:	b510      	push	{r4, lr}
 8000f1a:	4b09      	ldr	r3, [pc, #36]	; (8000f40 <_ZN12FrontendHeapD1Ev+0x28>)
 8000f1c:	6003      	str	r3, [r0, #0]
 8000f1e:	4604      	mov	r4, r0
 8000f20:	f500 50a0 	add.w	r0, r0, #5120	; 0x1400
 8000f24:	3018      	adds	r0, #24
 8000f26:	f7ff ffb9 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f2a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f2e:	f7ff ffc9 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f32:	f104 0014 	add.w	r0, r4, #20
 8000f36:	f7ff ffdb 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	bd10      	pop	{r4, pc}
 8000f3e:	bf00      	nop
 8000f40:	08029354 	.word	0x08029354

08000f44 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f44:	b508      	push	{r3, lr}
 8000f46:	4802      	ldr	r0, [pc, #8]	; (8000f50 <__tcf_0+0xc>)
 8000f48:	f7ff ffe6 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f4c:	bd08      	pop	{r3, pc}
 8000f4e:	bf00      	nop
 8000f50:	200001b0 	.word	0x200001b0

08000f54 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f54:	b510      	push	{r4, lr}
 8000f56:	4604      	mov	r4, r0
 8000f58:	f7ff ffde 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	f241 51bc 	movw	r1, #5564	; 0x15bc
 8000f62:	f026 f854 	bl	802700e <_ZdlPvj>
 8000f66:	4620      	mov	r0, r4
 8000f68:	bd10      	pop	{r4, pc}
	...

08000f6c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f70:	f001 f97e 	bl	8002270 <_ZN14BitmapDatabase11getInstanceEv>
 8000f74:	4605      	mov	r5, r0
 8000f76:	f001 f97f 	bl	8002278 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f7a:	2400      	movs	r4, #0
 8000f7c:	4601      	mov	r1, r0
 8000f7e:	4623      	mov	r3, r4
 8000f80:	4628      	mov	r0, r5
 8000f82:	4622      	mov	r2, r4
 8000f84:	9400      	str	r4, [sp, #0]
 8000f86:	f016 fced 	bl	8017964 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f8a:	4b26      	ldr	r3, [pc, #152]	; (8001024 <touchgfx_init+0xb8>)
 8000f8c:	4a26      	ldr	r2, [pc, #152]	; (8001028 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f8e:	4d27      	ldr	r5, [pc, #156]	; (800102c <touchgfx_init+0xc0>)
 8000f90:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f92:	4620      	mov	r0, r4
 8000f94:	f006 fb20 	bl	80075d8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f98:	4825      	ldr	r0, [pc, #148]	; (8001030 <touchgfx_init+0xc4>)
 8000f9a:	f016 fc4b 	bl	8017834 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f9e:	682b      	ldr	r3, [r5, #0]
 8000fa0:	f3bf 8f5b 	dmb	ish
 8000fa4:	07db      	lsls	r3, r3, #31
 8000fa6:	d436      	bmi.n	8001016 <touchgfx_init+0xaa>
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f026 f832 	bl	8027012 <__cxa_guard_acquire>
 8000fae:	b390      	cbz	r0, 8001016 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000fb0:	4c20      	ldr	r4, [pc, #128]	; (8001034 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000fb2:	4b21      	ldr	r3, [pc, #132]	; (8001038 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8000fb4:	4f21      	ldr	r7, [pc, #132]	; (800103c <touchgfx_init+0xd0>)
 8000fb6:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000fb8:	f504 56a3 	add.w	r6, r4, #5216	; 0x1460
        : presenterStorage(pres),
 8000fbc:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000fc0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000fc4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fc6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fca:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fcc:	6126      	str	r6, [r4, #16]
 8000fce:	f00d fe47 	bl	800ec60 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fd2:	4b1b      	ldr	r3, [pc, #108]	; (8001040 <touchgfx_init+0xd4>)
 8000fd4:	6163      	str	r3, [r4, #20]
 8000fd6:	4640      	mov	r0, r8
 8000fd8:	f00d fe42 	bl	800ec60 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fdc:	4b19      	ldr	r3, [pc, #100]	; (8001044 <touchgfx_init+0xd8>)
 8000fde:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fe0:	4638      	mov	r0, r7
 8000fe2:	f00d fe3d 	bl	800ec60 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fe6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000fea:	4a17      	ldr	r2, [pc, #92]	; (8001048 <touchgfx_init+0xdc>)
 8000fec:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 8000ff0:	f503 608b 	add.w	r0, r3, #1112	; 0x458
 8000ff4:	f006 febc 	bl	8007d70 <_ZN5ModelC1Ev>
 8000ff8:	4622      	mov	r2, r4
 8000ffa:	f1a6 0108 	sub.w	r1, r6, #8
 8000ffe:	4630      	mov	r0, r6
 8001000:	f006 fc02 	bl	8007808 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001004:	4630      	mov	r0, r6
 8001006:	f002 f985 	bl	8003314 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <touchgfx_init+0xe0>)
 800100c:	f026 fe0e 	bl	8027c2c <atexit>
 8001010:	4628      	mov	r0, r5
 8001012:	f026 f80a 	bl	802702a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001016:	480e      	ldr	r0, [pc, #56]	; (8001050 <touchgfx_init+0xe4>)
}
 8001018:	b002      	add	sp, #8
 800101a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800101e:	f7ff bc2b 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001022:	bf00      	nop
 8001024:	20013820 	.word	0x20013820
 8001028:	2000258c 	.word	0x2000258c
 800102c:	200001ac 	.word	0x200001ac
 8001030:	20000008 	.word	0x20000008
 8001034:	200001b0 	.word	0x200001b0
 8001038:	08029354 	.word	0x08029354
 800103c:	200015c8 	.word	0x200015c8
 8001040:	080292b8 	.word	0x080292b8
 8001044:	080292ec 	.word	0x080292ec
 8001048:	08029320 	.word	0x08029320
 800104c:	08000f45 	.word	0x08000f45
 8001050:	20002510 	.word	0x20002510

08001054 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001054:	4770      	bx	lr
	...

08001058 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001058:	4801      	ldr	r0, [pc, #4]	; (8001060 <touchgfx_taskEntry+0x8>)
 800105a:	f7ff bc1b 	b.w	8000894 <_ZN11TouchGFXHAL9taskEntryEv>
 800105e:	bf00      	nop
 8001060:	20002510 	.word	0x20002510

08001064 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001064:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001066:	4e22      	ldr	r6, [pc, #136]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001068:	4c22      	ldr	r4, [pc, #136]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800106a:	4d23      	ldr	r5, [pc, #140]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800106c:	4b23      	ldr	r3, [pc, #140]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800106e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001070:	4630      	mov	r0, r6
 8001072:	f7ff fd71 	bl	8000b58 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001076:	4628      	mov	r0, r5
 8001078:	f01a ff40 	bl	801befc <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800107c:	4b20      	ldr	r3, [pc, #128]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800107e:	4821      	ldr	r0, [pc, #132]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001080:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001082:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001084:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8001088:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 800108c:	491e      	ldr	r1, [pc, #120]	; (8001108 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800108e:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8001090:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001094:	491d      	ldr	r1, [pc, #116]	; (800110c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001096:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001098:	491d      	ldr	r1, [pc, #116]	; (8001110 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800109a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800109e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a0:	21f0      	movs	r1, #240	; 0xf0
 80010a2:	8001      	strh	r1, [r0, #0]
 80010a4:	481b      	ldr	r0, [pc, #108]	; (8001114 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80010a6:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010aa:	481b      	ldr	r0, [pc, #108]	; (8001118 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80010ac:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80010b4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010b8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010bc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010c0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80010c4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80010c8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010cc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80010d0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80010d4:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80010d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010da:	8001      	strh	r1, [r0, #0]
 80010dc:	480f      	ldr	r0, [pc, #60]	; (800111c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010de:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010e0:	490f      	ldr	r1, [pc, #60]	; (8001120 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010e2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010e4:	2201      	movs	r2, #1
 80010e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010ea:	4a0e      	ldr	r2, [pc, #56]	; (8001124 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010ec:	601a      	str	r2, [r3, #0]
}
 80010ee:	bd70      	pop	{r4, r5, r6, pc}
 80010f0:	20001770 	.word	0x20001770
 80010f4:	2000176c 	.word	0x2000176c
 80010f8:	20002590 	.word	0x20002590
 80010fc:	08028d50 	.word	0x08028d50
 8001100:	20002510 	.word	0x20002510
 8001104:	200137b0 	.word	0x200137b0
 8001108:	01000001 	.word	0x01000001
 800110c:	01010000 	.word	0x01010000
 8001110:	200137bc 	.word	0x200137bc
 8001114:	200137b6 	.word	0x200137b6
 8001118:	200137b2 	.word	0x200137b2
 800111c:	200137b8 	.word	0x200137b8
 8001120:	200137b4 	.word	0x200137b4
 8001124:	08028edc 	.word	0x08028edc

08001128 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001128:	4801      	ldr	r0, [pc, #4]	; (8001130 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800112a:	f7ff bcf1 	b.w	8000b10 <_ZN8STM32DMAD1Ev>
 800112e:	bf00      	nop
 8001130:	20001770 	.word	0x20001770

08001134 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001134:	2000      	movs	r0, #0
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001138:	8081      	strh	r1, [r0, #4]
    }
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800113c:	80c1      	strh	r1, [r0, #6]
    }
 800113e:	4770      	bx	lr

08001140 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001140:	8101      	strh	r1, [r0, #8]
    }
 8001142:	4770      	bx	lr

08001144 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001144:	8141      	strh	r1, [r0, #10]
    }
 8001146:	4770      	bx	lr

08001148 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001148:	4770      	bx	lr

0800114a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800114a:	4770      	bx	lr

0800114c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800114c:	4770      	bx	lr

0800114e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800114e:	4770      	bx	lr

08001150 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001150:	4770      	bx	lr

08001152 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001152:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001154:	88c4      	ldrh	r4, [r0, #6]
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	1b12      	subs	r2, r2, r4
 800115a:	8884      	ldrh	r4, [r0, #4]
 800115c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800115e:	1b09      	subs	r1, r1, r4
 8001160:	b212      	sxth	r2, r2
    }
 8001162:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001166:	b209      	sxth	r1, r1
 8001168:	4718      	bx	r3

0800116a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800116a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800116e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001170:	f04f 33ff 	mov.w	r3, #4294967295
 8001174:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001176:	6813      	ldr	r3, [r2, #0]
 8001178:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800117a:	6010      	str	r0, [r2, #0]
    }
 800117c:	4770      	bx	lr

0800117e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800117e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001182:	b11a      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001184:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001188:	b102      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800118a:	6018      	str	r0, [r3, #0]
        }
    }
 800118c:	4770      	bx	lr

0800118e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800118e:	2000      	movs	r0, #0
 8001190:	4770      	bx	lr

08001192 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001192:	888b      	ldrh	r3, [r1, #4]
 8001194:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001196:	2001      	movs	r0, #1
 8001198:	4770      	bx	lr

0800119a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800119a:	4770      	bx	lr

0800119c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800119c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80011a0:	4770      	bx	lr

080011a2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80011a2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80011a6:	4770      	bx	lr

080011a8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80011a8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80011aa:	2200      	movs	r2, #0
        return rect.width;
 80011ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80011b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80011b4:	8002      	strh	r2, [r0, #0]
 80011b6:	8042      	strh	r2, [r0, #2]
 80011b8:	8084      	strh	r4, [r0, #4]
 80011ba:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80011bc:	bd10      	pop	{r4, pc}

080011be <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80011be:	2200      	movs	r2, #0
 80011c0:	8002      	strh	r2, [r0, #0]
 80011c2:	8042      	strh	r2, [r0, #2]
 80011c4:	8082      	strh	r2, [r0, #4]
 80011c6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80011c8:	4770      	bx	lr
	...

080011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011cc:	4b03      	ldr	r3, [pc, #12]	; (80011dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80011ce:	2290      	movs	r2, #144	; 0x90
 80011d0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80011d4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e000e100 	.word	0xe000e100

080011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e0:	4a09      	ldr	r2, [pc, #36]	; (8001208 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80011e2:	490a      	ldr	r1, [pc, #40]	; (800120c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80011e4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011e6:	480a      	ldr	r0, [pc, #40]	; (8001210 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80011ec:	3b01      	subs	r3, #1
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011f2:	6911      	ldr	r1, [r2, #16]
 80011f4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80011f8:	3901      	subs	r1, #1
 80011fa:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011fc:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011fe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001200:	f043 0301 	orr.w	r3, r3, #1
 8001204:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001206:	4770      	bx	lr
 8001208:	40016800 	.word	0x40016800
 800120c:	20002616 	.word	0x20002616
 8001210:	20002614 	.word	0x20002614

08001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001214:	4b01      	ldr	r3, [pc, #4]	; (800121c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001216:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800121a:	4770      	bx	lr
 800121c:	40016800 	.word	0x40016800

08001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001220:	4b02      	ldr	r3, [pc, #8]	; (800122c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001222:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001224:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001228:	625a      	str	r2, [r3, #36]	; 0x24
}
 800122a:	4770      	bx	lr
 800122c:	40016800 	.word	0x40016800

08001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	4604      	mov	r4, r0
    HAL::initialize();
 8001234:	f00e f9df 	bl	800f5f6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800123c:	f013 f988 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
 8001240:	4601      	mov	r1, r0
 8001242:	4620      	mov	r0, r4
 8001244:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001246:	6823      	ldr	r3, [r4, #0]
 8001248:	4a05      	ldr	r2, [pc, #20]	; (8001260 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800124a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800124e:	4620      	mov	r0, r4
 8001250:	46ac      	mov	ip, r5
 8001252:	2300      	movs	r3, #0
}
 8001254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001258:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800125c:	4760      	bx	ip
 800125e:	bf00      	nop
 8001260:	d004b000 	.word	0xd004b000

08001264 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001264:	f00e b9ae 	b.w	800f5c4 <_ZN8touchgfx3HAL10beginFrameEv>

08001268 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001268:	f00e b9b8 	b.w	800f5dc <_ZN8touchgfx3HAL8endFrameEv>

0800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800126c:	f00e b974 	b.w	800f558 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001270 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001270:	f00e bad5 	b.w	800f81e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001274:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001278:	b112      	cbz	r2, 8001280 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800127a:	6803      	ldr	r3, [r0, #0]
 800127c:	695b      	ldr	r3, [r3, #20]
 800127e:	4718      	bx	r3
    }
 8001280:	4770      	bx	lr
	...

08001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001284:	4b03      	ldr	r3, [pc, #12]	; (8001294 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001286:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800128a:	609a      	str	r2, [r3, #8]
 800128c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001290:	609a      	str	r2, [r3, #8]
}
 8001292:	4770      	bx	lr
 8001294:	e000e100 	.word	0xe000e100

08001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b08      	ldr	r3, [pc, #32]	; (80012bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800129e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012a6:	f3bf 8f6f 	isb	sy
 80012aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80012ae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012b6:	f3bf 8f6f 	isb	sy
}
 80012ba:	4770      	bx	lr
 80012bc:	e000e100 	.word	0xe000e100

080012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80012c0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80012c2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80012c4:	4e12      	ldr	r6, [pc, #72]	; (8001310 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80012c6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80012c8:	4b12      	ldr	r3, [pc, #72]	; (8001314 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80012ca:	6003      	str	r3, [r0, #0]
 80012cc:	6833      	ldr	r3, [r6, #0]
 80012ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80012d2:	4605      	mov	r5, r0
 80012d4:	b10a      	cbz	r2, 80012da <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80012d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012d8:	b900      	cbnz	r0, 80012dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80012da:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80012dc:	6803      	ldr	r3, [r0, #0]
 80012de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012e0:	4798      	blx	r3
        return auxiliaryLCD;
 80012e2:	6833      	ldr	r3, [r6, #0]
 80012e4:	fab0 f480 	clz	r4, r0
 80012e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012ea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80012ec:	b130      	cbz	r0, 80012fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80012ee:	6803      	ldr	r3, [r0, #0]
 80012f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012f2:	4798      	blx	r3
 80012f4:	2800      	cmp	r0, #0
 80012f6:	bf08      	it	eq
 80012f8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80012fc:	b92c      	cbnz	r4, 800130a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80012fe:	4b06      	ldr	r3, [pc, #24]	; (8001318 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001300:	4a06      	ldr	r2, [pc, #24]	; (800131c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001302:	4807      	ldr	r0, [pc, #28]	; (8001320 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001304:	212c      	movs	r1, #44	; 0x2c
 8001306:	f026 fc73 	bl	8027bf0 <__assert_func>
    }
 800130a:	4628      	mov	r0, r5
 800130c:	bd70      	pop	{r4, r5, r6, pc}
 800130e:	bf00      	nop
 8001310:	200137bc 	.word	0x200137bc
 8001314:	08029464 	.word	0x08029464
 8001318:	08029360 	.word	0x08029360
 800131c:	080293be 	.word	0x080293be
 8001320:	080293f7 	.word	0x080293f7

08001324 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001324:	b510      	push	{r4, lr}
        return instance;
 8001326:	4c14      	ldr	r4, [pc, #80]	; (8001378 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	b323      	cbz	r3, 8001376 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800132c:	4b13      	ldr	r3, [pc, #76]	; (800137c <HAL_LTDC_LineEventCallback+0x58>)
 800132e:	4a14      	ldr	r2, [pc, #80]	; (8001380 <HAL_LTDC_LineEventCallback+0x5c>)
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	8811      	ldrh	r1, [r2, #0]
 8001334:	428b      	cmp	r3, r1
 8001336:	d113      	bne.n	8001360 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001338:	4b12      	ldr	r3, [pc, #72]	; (8001384 <HAL_LTDC_LineEventCallback+0x60>)
 800133a:	8819      	ldrh	r1, [r3, #0]
 800133c:	f009 f9a8 	bl	800a690 <HAL_LTDC_ProgramLineEvent>
 8001340:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001342:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001346:	3301      	adds	r3, #1
 8001348:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800134c:	f7ff fb8e 	bl	8000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001350:	6820      	ldr	r0, [r4, #0]
 8001352:	f00e fe8f 	bl	8010074 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800135a:	2000      	movs	r0, #0
 800135c:	f7ff ba06 	b.w	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001360:	f009 f996 	bl	800a690 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001364:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001366:	6803      	ldr	r3, [r0, #0]
 8001368:	6a1b      	ldr	r3, [r3, #32]
 800136a:	4798      	blx	r3
    }
 800136c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001370:	2000      	movs	r0, #0
 8001372:	f7ff ba13 	b.w	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001376:	bd10      	pop	{r4, pc}
 8001378:	200137bc 	.word	0x200137bc
 800137c:	40016800 	.word	0x40016800
 8001380:	20002616 	.word	0x20002616
 8001384:	20002614 	.word	0x20002614

08001388 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001388:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800138a:	2064      	movs	r0, #100	; 0x64
 800138c:	f00a feda 	bl	800c144 <osDelay>
  for(;;)
 8001390:	e7fb      	b.n	800138a <StartDefaultTask+0x2>
 8001392:	bf00      	nop

08001394 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	4c10      	ldr	r4, [pc, #64]	; (80013d8 <StartTimeoutTask+0x44>)
 8001398:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80013e4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800139c:	4f0f      	ldr	r7, [pc, #60]	; (80013dc <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800139e:	4e10      	ldr	r6, [pc, #64]	; (80013e0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80013a0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013a2:	2300      	movs	r3, #0
 80013a4:	461a      	mov	r2, r3
 80013a6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80013a8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013aa:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80013ae:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013b0:	f00a ffc4 	bl	800c33c <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80013b4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80013b6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013b8:	4638      	mov	r0, r7
 80013ba:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80013bc:	b912      	cbnz	r2, 80013c4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80013be:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013c0:	f007 fb4a 	bl	8008a58 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80013c4:	4630      	mov	r0, r6
 80013c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ca:	f007 fb49 	bl	8008a60 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80013ce:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013d2:	f00a feb7 	bl	800c144 <osDelay>
	  sleep_timeout_value--;
 80013d6:	e7e3      	b.n	80013a0 <StartTimeoutTask+0xc>
 80013d8:	20000014 	.word	0x20000014
 80013dc:	40021000 	.word	0x40021000
 80013e0:	40021800 	.word	0x40021800
 80013e4:	20002620 	.word	0x20002620

080013e8 <SystemClock_Config>:
{
 80013e8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ea:	2400      	movs	r4, #0
{
 80013ec:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ee:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80013f2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013f6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013fa:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013fe:	4a1e      	ldr	r2, [pc, #120]	; (8001478 <SystemClock_Config+0x90>)
 8001400:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001402:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001404:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001406:	4b1d      	ldr	r3, [pc, #116]	; (800147c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001408:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800140c:	6411      	str	r1, [r2, #64]	; 0x40
 800140e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001410:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001414:	9201      	str	r2, [sp, #4]
 8001416:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001418:	9402      	str	r4, [sp, #8]
 800141a:	681a      	ldr	r2, [r3, #0]
 800141c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	681b      	ldr	r3, [r3, #0]
 8001424:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001428:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800142a:	2201      	movs	r2, #1
 800142c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001430:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001434:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001436:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001438:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800143a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800143e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001442:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001446:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001448:	2202      	movs	r2, #2
 800144a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800144c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800144e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001452:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001454:	f009 f93e 	bl	800a6d4 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001458:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800145a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800145e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001462:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001466:	a803      	add	r0, sp, #12
 8001468:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800146a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800146e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001470:	f009 fb48 	bl	800ab04 <HAL_RCC_ClockConfig>
}
 8001474:	b015      	add	sp, #84	; 0x54
 8001476:	bd30      	pop	{r4, r5, pc}
 8001478:	40023800 	.word	0x40023800
 800147c:	40007000 	.word	0x40007000

08001480 <main>:
{
 8001480:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001484:	2400      	movs	r4, #0
{
 8001486:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001488:	f006 ffc0 	bl	800840c <HAL_Init>
  SystemClock_Config();
 800148c:	f7ff ffac 	bl	80013e8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001490:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001494:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001498:	4bc1      	ldr	r3, [pc, #772]	; (80017a0 <main+0x320>)
 800149a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149c:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800149e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014a0:	48c0      	ldr	r0, [pc, #768]	; (80017a4 <main+0x324>)
  hi2c3.Instance = I2C3;
 80014a2:	4dc1      	ldr	r5, [pc, #772]	; (80017a8 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a4:	f041 0110 	orr.w	r1, r1, #16
 80014a8:	6319      	str	r1, [r3, #48]	; 0x30
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ac:	f001 0110 	and.w	r1, r1, #16
 80014b0:	9100      	str	r1, [sp, #0]
 80014b2:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014b4:	9401      	str	r4, [sp, #4]
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f041 0120 	orr.w	r1, r1, #32
 80014bc:	6319      	str	r1, [r3, #48]	; 0x30
 80014be:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c0:	f001 0120 	and.w	r1, r1, #32
 80014c4:	9101      	str	r1, [sp, #4]
 80014c6:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014c8:	9402      	str	r4, [sp, #8]
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80014d0:	6319      	str	r1, [r3, #48]	; 0x30
 80014d2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d4:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80014d8:	9102      	str	r1, [sp, #8]
 80014da:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014dc:	9403      	str	r4, [sp, #12]
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f041 0104 	orr.w	r1, r1, #4
 80014e4:	6319      	str	r1, [r3, #48]	; 0x30
 80014e6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e8:	f001 0104 	and.w	r1, r1, #4
 80014ec:	9103      	str	r1, [sp, #12]
 80014ee:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014f0:	9404      	str	r4, [sp, #16]
 80014f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014f4:	f041 0101 	orr.w	r1, r1, #1
 80014f8:	6319      	str	r1, [r3, #48]	; 0x30
 80014fa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014fc:	f001 0101 	and.w	r1, r1, #1
 8001500:	9104      	str	r1, [sp, #16]
 8001502:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001504:	9405      	str	r4, [sp, #20]
 8001506:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001508:	f041 0102 	orr.w	r1, r1, #2
 800150c:	6319      	str	r1, [r3, #48]	; 0x30
 800150e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001510:	f001 0102 	and.w	r1, r1, #2
 8001514:	9105      	str	r1, [sp, #20]
 8001516:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001518:	9406      	str	r4, [sp, #24]
 800151a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800151c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001520:	6319      	str	r1, [r3, #48]	; 0x30
 8001522:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001524:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001528:	9106      	str	r1, [sp, #24]
 800152a:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800152c:	9407      	str	r4, [sp, #28]
 800152e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001530:	f041 0108 	orr.w	r1, r1, #8
 8001534:	6319      	str	r1, [r3, #48]	; 0x30
 8001536:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001538:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800153c:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001540:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001542:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001544:	f007 fa88 	bl	8008a58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001548:	4896      	ldr	r0, [pc, #600]	; (80017a4 <main+0x324>)
 800154a:	2120      	movs	r1, #32
 800154c:	2201      	movs	r2, #1
 800154e:	f007 fa83 	bl	8008a58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001552:	4896      	ldr	r0, [pc, #600]	; (80017ac <main+0x32c>)
 8001554:	4622      	mov	r2, r4
 8001556:	2104      	movs	r1, #4
 8001558:	f007 fa7e 	bl	8008a58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800155c:	4894      	ldr	r0, [pc, #592]	; (80017b0 <main+0x330>)
 800155e:	4622      	mov	r2, r4
 8001560:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001564:	f007 fa78 	bl	8008a58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001568:	2201      	movs	r2, #1
 800156a:	4892      	ldr	r0, [pc, #584]	; (80017b4 <main+0x334>)
 800156c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001570:	f007 fa72 	bl	8008a58 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001574:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001576:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800157a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800157c:	4889      	ldr	r0, [pc, #548]	; (80017a4 <main+0x324>)
 800157e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001580:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001584:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001588:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800158c:	f007 f920 	bl	80087d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001590:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001594:	4883      	ldr	r0, [pc, #524]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001596:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800159a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800159c:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800159e:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a0:	f007 f916 	bl	80087d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a4:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015a6:	487f      	ldr	r0, [pc, #508]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015aa:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ac:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ae:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015b2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b8:	f007 f90a 	bl	80087d0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015bc:	487b      	ldr	r0, [pc, #492]	; (80017ac <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015be:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015c2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015c4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c8:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ca:	f007 f901 	bl	80087d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015ce:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d2:	4877      	ldr	r0, [pc, #476]	; (80017b0 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015d4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015dc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	f007 f8f7 	bl	80087d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015e6:	4874      	ldr	r0, [pc, #464]	; (80017b8 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015ea:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015ec:	230f      	movs	r3, #15
 80015ee:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015f0:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f4:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015f8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015fa:	f007 f8e9 	bl	80087d0 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80015fe:	486d      	ldr	r0, [pc, #436]	; (80017b4 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001600:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001604:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001606:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800160a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800160c:	f007 f8e0 	bl	80087d0 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001610:	4622      	mov	r2, r4
 8001612:	2105      	movs	r1, #5
 8001614:	2009      	movs	r0, #9
 8001616:	f006 ff49 	bl	80084ac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 800161a:	2009      	movs	r0, #9
 800161c:	f006 ff84 	bl	8008528 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001620:	4866      	ldr	r0, [pc, #408]	; (80017bc <main+0x33c>)
 8001622:	4b67      	ldr	r3, [pc, #412]	; (80017c0 <main+0x340>)
 8001624:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001626:	f006 ff8d 	bl	8008544 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800162a:	4966      	ldr	r1, [pc, #408]	; (80017c4 <main+0x344>)
 800162c:	4b66      	ldr	r3, [pc, #408]	; (80017c8 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800162e:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001630:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001634:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001638:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800163a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800163e:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001642:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001646:	f007 fc6d 	bl	8008f24 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800164a:	2110      	movs	r1, #16
 800164c:	4628      	mov	r0, r5
 800164e:	f008 fe35 	bl	800a2bc <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001652:	4621      	mov	r1, r4
 8001654:	4628      	mov	r0, r5
 8001656:	f008 fe51 	bl	800a2fc <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800165a:	f8df c184 	ldr.w	ip, [pc, #388]	; 80017e0 <main+0x360>
  hspi5.Instance = SPI5;
 800165e:	485b      	ldr	r0, [pc, #364]	; (80017cc <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001660:	4d5b      	ldr	r5, [pc, #364]	; (80017d0 <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001662:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001664:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001668:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166c:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001670:	2318      	movs	r3, #24
 8001672:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001676:	230a      	movs	r3, #10
 8001678:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800167a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800167e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001682:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001686:	f009 fd2b 	bl	800b0e0 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 800168a:	2307      	movs	r3, #7
 800168c:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 800168e:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001690:	4b50      	ldr	r3, [pc, #320]	; (80017d4 <main+0x354>)
 8001692:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001694:	2040      	movs	r0, #64	; 0x40
 8001696:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800169a:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800169e:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016a6:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016aa:	a90f      	add	r1, sp, #60	; 0x3c
 80016ac:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ae:	622b      	str	r3, [r5, #32]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b0:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016b4:	f8c5 a00c 	str.w	sl, [r5, #12]
  SdramTiming.RPDelay = 2;
 80016b8:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016bc:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016be:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016c0:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016c4:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80016c8:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80016ca:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016cc:	f009 fc16 	bl	800aefc <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d4:	a90b      	add	r1, sp, #44	; 0x2c
 80016d6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016d8:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016dc:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80016e0:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e2:	f009 fc2d 	bl	800af40 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016e6:	4630      	mov	r0, r6
 80016e8:	f006 febc 	bl	8008464 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f0:	a90b      	add	r1, sp, #44	; 0x2c
 80016f2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016f4:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016f8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016fc:	f009 fc20 	bl	800af40 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001700:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001704:	a90b      	add	r1, sp, #44	; 0x2c
 8001706:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001708:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800170c:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001710:	f009 fc16 	bl	800af40 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001714:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001718:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800171a:	9b08      	ldr	r3, [sp, #32]
 800171c:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800171e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001722:	a90b      	add	r1, sp, #44	; 0x2c
 8001724:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001726:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 800172a:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800172c:	f009 fc08 	bl	800af40 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001730:	4628      	mov	r0, r5
 8001732:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001736:	4d28      	ldr	r5, [pc, #160]	; (80017d8 <main+0x358>)
  htim1.Instance = TIM1;
 8001738:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80017e4 <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800173c:	f009 fc1e 	bl	800af7c <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001740:	2234      	movs	r2, #52	; 0x34
 8001742:	4621      	mov	r1, r4
 8001744:	a80f      	add	r0, sp, #60	; 0x3c
 8001746:	f026 fc58 	bl	8027ffa <memset>
  hltdc.Instance = LTDC;
 800174a:	4b24      	ldr	r3, [pc, #144]	; (80017dc <main+0x35c>)
 800174c:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 800174e:	2309      	movs	r3, #9
 8001750:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001752:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001754:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8001758:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800175a:	f240 190d 	movw	r9, #269	; 0x10d
 800175e:	f240 1343 	movw	r3, #323	; 0x143
 8001762:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8001766:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001768:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800176c:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800176e:	f240 1a17 	movw	sl, #279	; 0x117
 8001772:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001776:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001778:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800177c:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001780:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001784:	f008 fdde 	bl	800a344 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001788:	23f0      	movs	r3, #240	; 0xf0
 800178a:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 800178c:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 800178e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001792:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001794:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001796:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001798:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 800179c:	e024      	b.n	80017e8 <main+0x368>
 800179e:	bf00      	nop
 80017a0:	40023800 	.word	0x40023800
 80017a4:	40021000 	.word	0x40021000
 80017a8:	20002674 	.word	0x20002674
 80017ac:	40020800 	.word	0x40020800
 80017b0:	40020c00 	.word	0x40020c00
 80017b4:	40021800 	.word	0x40021800
 80017b8:	40020000 	.word	0x40020000
 80017bc:	2000262c 	.word	0x2000262c
 80017c0:	40023000 	.word	0x40023000
 80017c4:	40005c00 	.word	0x40005c00
 80017c8:	000186a0 	.word	0x000186a0
 80017cc:	200027a4 	.word	0x200027a4
 80017d0:	20002770 	.word	0x20002770
 80017d4:	a0000140 	.word	0xa0000140
 80017d8:	200026c8 	.word	0x200026c8
 80017dc:	40016800 	.word	0x40016800
 80017e0:	40015000 	.word	0x40015000
 80017e4:	200027fc 	.word	0x200027fc
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017e8:	4622      	mov	r2, r4
 80017ea:	a90f      	add	r1, sp, #60	; 0x3c
 80017ec:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017ee:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017f0:	2305      	movs	r3, #5
 80017f2:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 80017f6:	4d4b      	ldr	r5, [pc, #300]	; (8001924 <main+0x4a4>)
  pLayerCfg.WindowX0 = 0;
 80017f8:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 80017fa:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017fc:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 80017fe:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001800:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001802:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001806:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800180a:	f008 fe71 	bl	800a4f0 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800180e:	4b46      	ldr	r3, [pc, #280]	; (8001928 <main+0x4a8>)
 8001810:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001816:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001818:	4d44      	ldr	r5, [pc, #272]	; (800192c <main+0x4ac>)
  LcdDrv->DisplayOff();
 800181a:	68db      	ldr	r3, [r3, #12]
 800181c:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800181e:	4b44      	ldr	r3, [pc, #272]	; (8001930 <main+0x4b0>)
 8001820:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001822:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001826:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800182a:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 800182c:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 8001830:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001832:	f006 feb1 	bl	8008598 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001836:	4631      	mov	r1, r6
 8001838:	4628      	mov	r0, r5
 800183a:	f006 ff73 	bl	8008724 <HAL_DMA2D_ConfigLayer>
  htim1.Init.Period = 65535;
 800183e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001842:	4b3c      	ldr	r3, [pc, #240]	; (8001934 <main+0x4b4>)
  htim3.Instance = TIM3;
 8001844:	4d3c      	ldr	r5, [pc, #240]	; (8001938 <main+0x4b8>)
  htim1.Instance = TIM1;
 8001846:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800184a:	4640      	mov	r0, r8
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800184c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001850:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001854:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001858:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 800185c:	e9c8 4404 	strd	r4, r4, [r8, #16]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001860:	9413      	str	r4, [sp, #76]	; 0x4c
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001862:	f8c8 4018 	str.w	r4, [r8, #24]
  htim1.Init.Period = 65535;
 8001866:	f8c8 600c 	str.w	r6, [r8, #12]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800186a:	f00a f829 	bl	800b8c0 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800186e:	a90f      	add	r1, sp, #60	; 0x3c
 8001870:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001872:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001876:	f00a f99d 	bl	800bbb4 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800187a:	a90b      	add	r1, sp, #44	; 0x2c
 800187c:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800187e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001882:	f00a fad5 	bl	800be30 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001886:	4b2d      	ldr	r3, [pc, #180]	; (800193c <main+0x4bc>)
 8001888:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800188a:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800188c:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8001890:	60ee      	str	r6, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001892:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001894:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001896:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800189a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800189e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80018a2:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018a6:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018a8:	9409      	str	r4, [sp, #36]	; 0x24
 80018aa:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80018ac:	f00a f808 	bl	800b8c0 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018b4:	a90b      	add	r1, sp, #44	; 0x2c
 80018b6:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b8:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018ba:	f00a f8cb 	bl	800ba54 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018be:	a90f      	add	r1, sp, #60	; 0x3c
 80018c0:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80018c2:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018c6:	f00a f975 	bl	800bbb4 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018ca:	a909      	add	r1, sp, #36	; 0x24
 80018cc:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018ce:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018d2:	f00a faad 	bl	800be30 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80018d6:	f7fe fe85 	bl	80005e4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018da:	f7fe fe81 	bl	80005e0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80018de:	f00a fbb9 	bl	800c054 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018e2:	4a17      	ldr	r2, [pc, #92]	; (8001940 <main+0x4c0>)
 80018e4:	4639      	mov	r1, r7
 80018e6:	4658      	mov	r0, fp
 80018e8:	f00a fcee 	bl	800c2c8 <osMessageQueueNew>
 80018ec:	4b15      	ldr	r3, [pc, #84]	; (8001944 <main+0x4c4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018ee:	4a16      	ldr	r2, [pc, #88]	; (8001948 <main+0x4c8>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018f0:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018f2:	4621      	mov	r1, r4
 80018f4:	4815      	ldr	r0, [pc, #84]	; (800194c <main+0x4cc>)
 80018f6:	f00a fbd9 	bl	800c0ac <osThreadNew>
 80018fa:	4b15      	ldr	r3, [pc, #84]	; (8001950 <main+0x4d0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018fc:	4a15      	ldr	r2, [pc, #84]	; (8001954 <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fe:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001900:	4621      	mov	r1, r4
 8001902:	4815      	ldr	r0, [pc, #84]	; (8001958 <main+0x4d8>)
 8001904:	f00a fbd2 	bl	800c0ac <osThreadNew>
 8001908:	4b14      	ldr	r3, [pc, #80]	; (800195c <main+0x4dc>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190a:	4a15      	ldr	r2, [pc, #84]	; (8001960 <main+0x4e0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800190c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190e:	4621      	mov	r1, r4
 8001910:	4814      	ldr	r0, [pc, #80]	; (8001964 <main+0x4e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001912:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001914:	f00a fbca 	bl	800c0ac <osThreadNew>
 8001918:	4b13      	ldr	r3, [pc, #76]	; (8001968 <main+0x4e8>)
 800191a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800191c:	f00a fbac 	bl	800c078 <osKernelStart>
  while (1)
 8001920:	e7fe      	b.n	8001920 <main+0x4a0>
 8001922:	bf00      	nop
 8001924:	2000261c 	.word	0x2000261c
 8001928:	20000018 	.word	0x20000018
 800192c:	20002634 	.word	0x20002634
 8001930:	4002b000 	.word	0x4002b000
 8001934:	40010000 	.word	0x40010000
 8001938:	20002844 	.word	0x20002844
 800193c:	40000400 	.word	0x40000400
 8001940:	080294d4 	.word	0x080294d4
 8001944:	20002620 	.word	0x20002620
 8001948:	08029510 	.word	0x08029510
 800194c:	08001389 	.word	0x08001389
 8001950:	20002628 	.word	0x20002628
 8001954:	080294b0 	.word	0x080294b0
 8001958:	080005f5 	.word	0x080005f5
 800195c:	20002618 	.word	0x20002618
 8001960:	080294ec 	.word	0x080294ec
 8001964:	08001395 	.word	0x08001395
 8001968:	20002624 	.word	0x20002624

0800196c <IOE_Init>:
 800196c:	4770      	bx	lr
 800196e:	bf00      	nop

08001970 <IOE_ITConfig>:
 8001970:	4770      	bx	lr
 8001972:	bf00      	nop

08001974 <IOE_Write>:
{
 8001974:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001976:	4c09      	ldr	r4, [pc, #36]	; (800199c <IOE_Write+0x28>)
{
 8001978:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800197a:	6824      	ldr	r4, [r4, #0]
 800197c:	9402      	str	r4, [sp, #8]
{
 800197e:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001980:	2301      	movs	r3, #1
 8001982:	f88d 4017 	strb.w	r4, [sp, #23]
 8001986:	f10d 0417 	add.w	r4, sp, #23
 800198a:	460a      	mov	r2, r1
 800198c:	9301      	str	r3, [sp, #4]
 800198e:	4601      	mov	r1, r0
 8001990:	9400      	str	r4, [sp, #0]
 8001992:	4803      	ldr	r0, [pc, #12]	; (80019a0 <IOE_Write+0x2c>)
 8001994:	f007 fb8e 	bl	80090b4 <HAL_I2C_Mem_Write>
}
 8001998:	b006      	add	sp, #24
 800199a:	bd10      	pop	{r4, pc}
 800199c:	2000000c 	.word	0x2000000c
 80019a0:	20002674 	.word	0x20002674

080019a4 <IOE_Read>:
{
 80019a4:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019a6:	4b0b      	ldr	r3, [pc, #44]	; (80019d4 <IOE_Read+0x30>)
{
 80019a8:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	9302      	str	r3, [sp, #8]
{
 80019ae:	4684      	mov	ip, r0
 80019b0:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b2:	2301      	movs	r3, #1
 80019b4:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019b8:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ba:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019be:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019c2:	4661      	mov	r1, ip
 80019c4:	4804      	ldr	r0, [pc, #16]	; (80019d8 <IOE_Read+0x34>)
 80019c6:	f007 fc67 	bl	8009298 <HAL_I2C_Mem_Read>
}
 80019ca:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019ce:	b007      	add	sp, #28
 80019d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80019d4:	2000000c 	.word	0x2000000c
 80019d8:	20002674 	.word	0x20002674

080019dc <IOE_ReadMultiple>:
{
 80019dc:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019de:	4c09      	ldr	r4, [pc, #36]	; (8001a04 <IOE_ReadMultiple+0x28>)
{
 80019e0:	b084      	sub	sp, #16
 80019e2:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019e4:	6820      	ldr	r0, [r4, #0]
 80019e6:	9002      	str	r0, [sp, #8]
 80019e8:	e9cd 2300 	strd	r2, r3, [sp]
 80019ec:	4806      	ldr	r0, [pc, #24]	; (8001a08 <IOE_ReadMultiple+0x2c>)
 80019ee:	460a      	mov	r2, r1
 80019f0:	2301      	movs	r3, #1
 80019f2:	4661      	mov	r1, ip
 80019f4:	f007 fc50 	bl	8009298 <HAL_I2C_Mem_Read>
}
 80019f8:	3800      	subs	r0, #0
 80019fa:	bf18      	it	ne
 80019fc:	2001      	movne	r0, #1
 80019fe:	b004      	add	sp, #16
 8001a00:	bd10      	pop	{r4, pc}
 8001a02:	bf00      	nop
 8001a04:	2000000c 	.word	0x2000000c
 8001a08:	20002674 	.word	0x20002674

08001a0c <IOE_Delay>:
 8001a0c:	f006 bd2a 	b.w	8008464 <HAL_Delay>

08001a10 <LCD_IO_Init>:
{
 8001a10:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a12:	4806      	ldr	r0, [pc, #24]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a14:	2200      	movs	r2, #0
 8001a16:	2104      	movs	r1, #4
 8001a18:	f007 f81e 	bl	8008a58 <HAL_GPIO_WritePin>
}
 8001a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a20:	4802      	ldr	r0, [pc, #8]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a22:	2201      	movs	r2, #1
 8001a24:	2104      	movs	r1, #4
 8001a26:	f007 b817 	b.w	8008a58 <HAL_GPIO_WritePin>
 8001a2a:	bf00      	nop
 8001a2c:	40020800 	.word	0x40020800

08001a30 <LCD_IO_WriteData>:
{
 8001a30:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a32:	4d10      	ldr	r5, [pc, #64]	; (8001a74 <LCD_IO_WriteData+0x44>)
{
 8001a34:	b083      	sub	sp, #12
 8001a36:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a38:	2201      	movs	r2, #1
 8001a3a:	480f      	ldr	r0, [pc, #60]	; (8001a78 <LCD_IO_WriteData+0x48>)
 8001a3c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a40:	f007 f80a 	bl	8008a58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a44:	4628      	mov	r0, r5
 8001a46:	2200      	movs	r2, #0
 8001a48:	2104      	movs	r1, #4
 8001a4a:	f007 f805 	bl	8008a58 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a4e:	4b0b      	ldr	r3, [pc, #44]	; (8001a7c <LCD_IO_WriteData+0x4c>)
 8001a50:	480b      	ldr	r0, [pc, #44]	; (8001a80 <LCD_IO_WriteData+0x50>)
 8001a52:	681b      	ldr	r3, [r3, #0]
 8001a54:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a58:	f10d 0106 	add.w	r1, sp, #6
 8001a5c:	2201      	movs	r2, #1
 8001a5e:	f009 fba1 	bl	800b1a4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a62:	2201      	movs	r2, #1
 8001a64:	2104      	movs	r1, #4
 8001a66:	4628      	mov	r0, r5
}
 8001a68:	b003      	add	sp, #12
 8001a6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6e:	f006 bff3 	b.w	8008a58 <HAL_GPIO_WritePin>
 8001a72:	bf00      	nop
 8001a74:	40020800 	.word	0x40020800
 8001a78:	40020c00 	.word	0x40020c00
 8001a7c:	20000010 	.word	0x20000010
 8001a80:	200027a4 	.word	0x200027a4

08001a84 <LCD_IO_WriteReg>:
{
 8001a84:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a86:	4d10      	ldr	r5, [pc, #64]	; (8001ac8 <LCD_IO_WriteReg+0x44>)
{
 8001a88:	b083      	sub	sp, #12
 8001a8a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	480f      	ldr	r0, [pc, #60]	; (8001acc <LCD_IO_WriteReg+0x48>)
 8001a90:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a94:	f006 ffe0 	bl	8008a58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a98:	4628      	mov	r0, r5
 8001a9a:	2200      	movs	r2, #0
 8001a9c:	2104      	movs	r1, #4
 8001a9e:	f006 ffdb 	bl	8008a58 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aa2:	4b0b      	ldr	r3, [pc, #44]	; (8001ad0 <LCD_IO_WriteReg+0x4c>)
 8001aa4:	480b      	ldr	r0, [pc, #44]	; (8001ad4 <LCD_IO_WriteReg+0x50>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001aa8:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aac:	f10d 0106 	add.w	r1, sp, #6
 8001ab0:	2201      	movs	r2, #1
 8001ab2:	f009 fb77 	bl	800b1a4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ab6:	2201      	movs	r2, #1
 8001ab8:	2104      	movs	r1, #4
 8001aba:	4628      	mov	r0, r5
}
 8001abc:	b003      	add	sp, #12
 8001abe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	f006 bfc9 	b.w	8008a58 <HAL_GPIO_WritePin>
 8001ac6:	bf00      	nop
 8001ac8:	40020800 	.word	0x40020800
 8001acc:	40020c00 	.word	0x40020c00
 8001ad0:	20000010 	.word	0x20000010
 8001ad4:	200027a4 	.word	0x200027a4

08001ad8 <LCD_IO_ReadData>:
{
 8001ad8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001adc:	4e19      	ldr	r6, [pc, #100]	; (8001b44 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ade:	4f1a      	ldr	r7, [pc, #104]	; (8001b48 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ae0:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b4c <LCD_IO_ReadData+0x74>
 8001ae4:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b50 <LCD_IO_ReadData+0x78>
{
 8001ae8:	b083      	sub	sp, #12
 8001aea:	460c      	mov	r4, r1
 8001aec:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aee:	2200      	movs	r2, #0
 8001af0:	4630      	mov	r0, r6
 8001af2:	2104      	movs	r1, #4
 8001af4:	f006 ffb0 	bl	8008a58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001af8:	4638      	mov	r0, r7
 8001afa:	2200      	movs	r2, #0
 8001afc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b00:	f006 ffaa 	bl	8008a58 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b04:	f8d9 3000 	ldr.w	r3, [r9]
 8001b08:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b0c:	a901      	add	r1, sp, #4
 8001b0e:	2201      	movs	r2, #1
 8001b10:	4640      	mov	r0, r8
 8001b12:	f009 fb47 	bl	800b1a4 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b16:	f8d9 3000 	ldr.w	r3, [r9]
 8001b1a:	4622      	mov	r2, r4
 8001b1c:	a901      	add	r1, sp, #4
 8001b1e:	4640      	mov	r0, r8
 8001b20:	f009 fde8 	bl	800b6f4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b24:	4638      	mov	r0, r7
 8001b26:	2201      	movs	r2, #1
 8001b28:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b2c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b2e:	f006 ff93 	bl	8008a58 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b32:	4630      	mov	r0, r6
 8001b34:	2201      	movs	r2, #1
 8001b36:	2104      	movs	r1, #4
 8001b38:	f006 ff8e 	bl	8008a58 <HAL_GPIO_WritePin>
}
 8001b3c:	4620      	mov	r0, r4
 8001b3e:	b003      	add	sp, #12
 8001b40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b44:	40020800 	.word	0x40020800
 8001b48:	40020c00 	.word	0x40020c00
 8001b4c:	20000010 	.word	0x20000010
 8001b50:	200027a4 	.word	0x200027a4

08001b54 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b54:	f006 bc86 	b.w	8008464 <HAL_Delay>

08001b58 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b58:	4b03      	ldr	r3, [pc, #12]	; (8001b68 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b5a:	6802      	ldr	r2, [r0, #0]
 8001b5c:	429a      	cmp	r2, r3
 8001b5e:	d000      	beq.n	8001b62 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b60:	4770      	bx	lr
    HAL_IncTick();
 8001b62:	f006 bc6d 	b.w	8008440 <HAL_IncTick>
 8001b66:	bf00      	nop
 8001b68:	40001000 	.word	0x40001000

08001b6c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b6c:	4770      	bx	lr
 8001b6e:	bf00      	nop

08001b70 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b70:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b72:	4b0e      	ldr	r3, [pc, #56]	; (8001bac <HAL_MspInit+0x3c>)
 8001b74:	2200      	movs	r2, #0
 8001b76:	9200      	str	r2, [sp, #0]
 8001b78:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b7a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b7e:	6459      	str	r1, [r3, #68]	; 0x44
 8001b80:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001b82:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001b86:	9000      	str	r0, [sp, #0]
 8001b88:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b8a:	9201      	str	r2, [sp, #4]
 8001b8c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001b8e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001b92:	6418      	str	r0, [r3, #64]	; 0x40
 8001b94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b96:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b9a:	9301      	str	r3, [sp, #4]
 8001b9c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b9e:	210f      	movs	r1, #15
 8001ba0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ba4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ba6:	f006 bc81 	b.w	80084ac <HAL_NVIC_SetPriority>
 8001baa:	bf00      	nop
 8001bac:	40023800 	.word	0x40023800

08001bb0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bb0:	4b0b      	ldr	r3, [pc, #44]	; (8001be0 <HAL_CRC_MspInit+0x30>)
 8001bb2:	6802      	ldr	r2, [r0, #0]
 8001bb4:	429a      	cmp	r2, r3
 8001bb6:	d000      	beq.n	8001bba <HAL_CRC_MspInit+0xa>
 8001bb8:	4770      	bx	lr
{
 8001bba:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bbc:	2200      	movs	r2, #0
 8001bbe:	9201      	str	r2, [sp, #4]
 8001bc0:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001bc4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bc8:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001bcc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001bd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bd6:	9301      	str	r3, [sp, #4]
 8001bd8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bda:	b002      	add	sp, #8
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop
 8001be0:	40023000 	.word	0x40023000

08001be4 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001be4:	4b0e      	ldr	r3, [pc, #56]	; (8001c20 <HAL_DMA2D_MspInit+0x3c>)
 8001be6:	6802      	ldr	r2, [r0, #0]
 8001be8:	429a      	cmp	r2, r3
 8001bea:	d000      	beq.n	8001bee <HAL_DMA2D_MspInit+0xa>
 8001bec:	4770      	bx	lr
{
 8001bee:	b500      	push	{lr}
 8001bf0:	b083      	sub	sp, #12
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bf2:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	9201      	str	r2, [sp, #4]
 8001bfa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001bfc:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c00:	6319      	str	r1, [r3, #48]	; 0x30
 8001c02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c04:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c08:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c0a:	205a      	movs	r0, #90	; 0x5a
 8001c0c:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c0e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c10:	f006 fc4c 	bl	80084ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c14:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c16:	b003      	add	sp, #12
 8001c18:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c1c:	f006 bc84 	b.w	8008528 <HAL_NVIC_EnableIRQ>
 8001c20:	4002b000 	.word	0x4002b000

08001c24 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c24:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001c28:	4b2e      	ldr	r3, [pc, #184]	; (8001ce4 <HAL_I2C_MspInit+0xc0>)
 8001c2a:	6802      	ldr	r2, [r0, #0]
{
 8001c2c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c2e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001c30:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c32:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001c36:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001c3a:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001c3c:	d002      	beq.n	8001c44 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c3e:	b00a      	add	sp, #40	; 0x28
 8001c40:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c44:	4d28      	ldr	r5, [pc, #160]	; (8001ce8 <HAL_I2C_MspInit+0xc4>)
 8001c46:	9401      	str	r4, [sp, #4]
 8001c48:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c4a:	4828      	ldr	r0, [pc, #160]	; (8001cec <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c4c:	f043 0304 	orr.w	r3, r3, #4
 8001c50:	632b      	str	r3, [r5, #48]	; 0x30
 8001c52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c54:	f003 0304 	and.w	r3, r3, #4
 8001c58:	9301      	str	r3, [sp, #4]
 8001c5a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c5c:	9402      	str	r4, [sp, #8]
 8001c5e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c60:	f043 0301 	orr.w	r3, r3, #1
 8001c64:	632b      	str	r3, [r5, #48]	; 0x30
 8001c66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c68:	f003 0301 	and.w	r3, r3, #1
 8001c6c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c6e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c72:	f04f 0801 	mov.w	r8, #1
 8001c76:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c7a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c7c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c7e:	2312      	movs	r3, #18
 8001c80:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c84:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c88:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c8a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c8c:	f006 fda0 	bl	80087d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c90:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c92:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001c96:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c98:	4815      	ldr	r0, [pc, #84]	; (8001cf0 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c9a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c9c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ca0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ca4:	f006 fd94 	bl	80087d0 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ca8:	9403      	str	r4, [sp, #12]
 8001caa:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cac:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cb0:	642b      	str	r3, [r5, #64]	; 0x40
 8001cb2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cb4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cb8:	4622      	mov	r2, r4
 8001cba:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cbc:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cbe:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cc0:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cc2:	f006 fbf3 	bl	80084ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001cc6:	2048      	movs	r0, #72	; 0x48
 8001cc8:	f006 fc2e 	bl	8008528 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001ccc:	6a2b      	ldr	r3, [r5, #32]
 8001cce:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cd2:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001cd4:	6a2b      	ldr	r3, [r5, #32]
 8001cd6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001cda:	622b      	str	r3, [r5, #32]
}
 8001cdc:	b00a      	add	sp, #40	; 0x28
 8001cde:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001ce2:	bf00      	nop
 8001ce4:	40005c00 	.word	0x40005c00
 8001ce8:	40023800 	.word	0x40023800
 8001cec:	40020800 	.word	0x40020800
 8001cf0:	40020000 	.word	0x40020000

08001cf4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cf8:	4604      	mov	r4, r0
 8001cfa:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cfc:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cfe:	2230      	movs	r2, #48	; 0x30
 8001d00:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d02:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001d06:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001d0a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d0c:	f026 f975 	bl	8027ffa <memset>
  if(hltdc->Instance==LTDC)
 8001d10:	4b67      	ldr	r3, [pc, #412]	; (8001eb0 <HAL_LTDC_MspInit+0x1bc>)
 8001d12:	6822      	ldr	r2, [r4, #0]
 8001d14:	429a      	cmp	r2, r3
 8001d16:	d002      	beq.n	8001d1e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d18:	b01a      	add	sp, #104	; 0x68
 8001d1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d1e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d20:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d22:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d24:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d26:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d28:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d2c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d2e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d30:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d32:	f008 ffb7 	bl	800aca4 <HAL_RCCEx_PeriphCLKConfig>
 8001d36:	2800      	cmp	r0, #0
 8001d38:	f040 80b7 	bne.w	8001eaa <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d3c:	4b5d      	ldr	r3, [pc, #372]	; (8001eb4 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d3e:	485e      	ldr	r0, [pc, #376]	; (8001eb8 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d40:	2400      	movs	r4, #0
 8001d42:	9401      	str	r4, [sp, #4]
 8001d44:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d46:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d4a:	645a      	str	r2, [r3, #68]	; 0x44
 8001d4c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d4e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d52:	9201      	str	r2, [sp, #4]
 8001d54:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d56:	9402      	str	r4, [sp, #8]
 8001d58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d5a:	f042 0220 	orr.w	r2, r2, #32
 8001d5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d62:	f002 0220 	and.w	r2, r2, #32
 8001d66:	9202      	str	r2, [sp, #8]
 8001d68:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d6a:	9403      	str	r4, [sp, #12]
 8001d6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6e:	f042 0201 	orr.w	r2, r2, #1
 8001d72:	631a      	str	r2, [r3, #48]	; 0x30
 8001d74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d76:	f002 0201 	and.w	r2, r2, #1
 8001d7a:	9203      	str	r2, [sp, #12]
 8001d7c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d7e:	9404      	str	r4, [sp, #16]
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f042 0202 	orr.w	r2, r2, #2
 8001d86:	631a      	str	r2, [r3, #48]	; 0x30
 8001d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8a:	f002 0202 	and.w	r2, r2, #2
 8001d8e:	9204      	str	r2, [sp, #16]
 8001d90:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d92:	9405      	str	r4, [sp, #20]
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d9e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001da2:	9205      	str	r2, [sp, #20]
 8001da4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001da6:	9406      	str	r4, [sp, #24]
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f042 0204 	orr.w	r2, r2, #4
 8001dae:	631a      	str	r2, [r3, #48]	; 0x30
 8001db0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db2:	f002 0204 	and.w	r2, r2, #4
 8001db6:	9206      	str	r2, [sp, #24]
 8001db8:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dba:	9407      	str	r4, [sp, #28]
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f042 0208 	orr.w	r2, r2, #8
 8001dc2:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc6:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dca:	2600      	movs	r6, #0
 8001dcc:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dce:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dd0:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dd2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dd4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001dd8:	2302      	movs	r3, #2
 8001dda:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001dde:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001de2:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001de4:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de6:	f006 fcf3 	bl	80087d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dea:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dec:	f641 0258 	movw	r2, #6232	; 0x1858
 8001df0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df2:	4832      	ldr	r0, [pc, #200]	; (8001ebc <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001df6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001dfa:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dfe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e02:	f006 fce5 	bl	80087d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e06:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e08:	2203      	movs	r2, #3
 8001e0a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e0c:	482c      	ldr	r0, [pc, #176]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e0e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e12:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e16:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1a:	f006 fcd9 	bl	80087d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e20:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001e24:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e26:	4826      	ldr	r0, [pc, #152]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e28:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e2a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e2e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e32:	f006 fccd 	bl	80087d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e36:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e38:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001e3c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e3e:	4821      	ldr	r0, [pc, #132]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e40:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e42:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e46:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e4a:	f006 fcc1 	bl	80087d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e4e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e50:	22c0      	movs	r2, #192	; 0xc0
 8001e52:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e54:	481c      	ldr	r0, [pc, #112]	; (8001ec8 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e56:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e58:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e5c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e60:	f006 fcb6 	bl	80087d0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e64:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e66:	2208      	movs	r2, #8
 8001e68:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e6a:	4818      	ldr	r0, [pc, #96]	; (8001ecc <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e6c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e6e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e72:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e76:	f006 fcab 	bl	80087d0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e7c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e82:	4810      	ldr	r0, [pc, #64]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e84:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e88:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e8c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e90:	f006 fc9e 	bl	80087d0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001e94:	4622      	mov	r2, r4
 8001e96:	2105      	movs	r1, #5
 8001e98:	2058      	movs	r0, #88	; 0x58
 8001e9a:	f006 fb07 	bl	80084ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e9e:	2058      	movs	r0, #88	; 0x58
 8001ea0:	f006 fb42 	bl	8008528 <HAL_NVIC_EnableIRQ>
}
 8001ea4:	b01a      	add	sp, #104	; 0x68
 8001ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001eaa:	f7ff fe5f 	bl	8001b6c <Error_Handler>
 8001eae:	e745      	b.n	8001d3c <HAL_LTDC_MspInit+0x48>
 8001eb0:	40016800 	.word	0x40016800
 8001eb4:	40023800 	.word	0x40023800
 8001eb8:	40021400 	.word	0x40021400
 8001ebc:	40020000 	.word	0x40020000
 8001ec0:	40020400 	.word	0x40020400
 8001ec4:	40021800 	.word	0x40021800
 8001ec8:	40020800 	.word	0x40020800
 8001ecc:	40020c00 	.word	0x40020c00

08001ed0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ed0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001ed2:	4a1b      	ldr	r2, [pc, #108]	; (8001f40 <HAL_SPI_MspInit+0x70>)
 8001ed4:	6801      	ldr	r1, [r0, #0]
{
 8001ed6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ed8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001eda:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001edc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001ee0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001ee4:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001ee6:	d001      	beq.n	8001eec <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ee8:	b008      	add	sp, #32
 8001eea:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001eec:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001ef0:	9300      	str	r3, [sp, #0]
 8001ef2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001ef4:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001ef8:	6450      	str	r0, [r2, #68]	; 0x44
 8001efa:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001efc:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001f00:	9000      	str	r0, [sp, #0]
 8001f02:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f04:	9301      	str	r3, [sp, #4]
 8001f06:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f08:	480e      	ldr	r0, [pc, #56]	; (8001f44 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f0a:	f043 0320 	orr.w	r3, r3, #32
 8001f0e:	6313      	str	r3, [r2, #48]	; 0x30
 8001f10:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f12:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001f38 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f16:	f003 0320 	and.w	r3, r3, #32
 8001f1a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f1c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f1e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f20:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f22:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f26:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f2a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f2c:	f006 fc50 	bl	80087d0 <HAL_GPIO_Init>
}
 8001f30:	b008      	add	sp, #32
 8001f32:	bd10      	pop	{r4, pc}
 8001f34:	f3af 8000 	nop.w
 8001f38:	00000380 	.word	0x00000380
 8001f3c:	00000002 	.word	0x00000002
 8001f40:	40015000 	.word	0x40015000
 8001f44:	40021400 	.word	0x40021400

08001f48 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001f48:	4a12      	ldr	r2, [pc, #72]	; (8001f94 <HAL_TIM_Base_MspInit+0x4c>)
 8001f4a:	6803      	ldr	r3, [r0, #0]
 8001f4c:	4293      	cmp	r3, r2
{
 8001f4e:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8001f50:	d012      	beq.n	8001f78 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001f52:	4a11      	ldr	r2, [pc, #68]	; (8001f98 <HAL_TIM_Base_MspInit+0x50>)
 8001f54:	4293      	cmp	r3, r2
 8001f56:	d001      	beq.n	8001f5c <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001f58:	b002      	add	sp, #8
 8001f5a:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001f5c:	4b0f      	ldr	r3, [pc, #60]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f5e:	2200      	movs	r2, #0
 8001f60:	9201      	str	r2, [sp, #4]
 8001f62:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f64:	f042 0202 	orr.w	r2, r2, #2
 8001f68:	641a      	str	r2, [r3, #64]	; 0x40
 8001f6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f6c:	f003 0302 	and.w	r3, r3, #2
 8001f70:	9301      	str	r3, [sp, #4]
 8001f72:	9b01      	ldr	r3, [sp, #4]
}
 8001f74:	b002      	add	sp, #8
 8001f76:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f78:	4b08      	ldr	r3, [pc, #32]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	9200      	str	r2, [sp, #0]
 8001f7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f80:	f042 0201 	orr.w	r2, r2, #1
 8001f84:	645a      	str	r2, [r3, #68]	; 0x44
 8001f86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f88:	f003 0301 	and.w	r3, r3, #1
 8001f8c:	9300      	str	r3, [sp, #0]
 8001f8e:	9b00      	ldr	r3, [sp, #0]
}
 8001f90:	b002      	add	sp, #8
 8001f92:	4770      	bx	lr
 8001f94:	40010000 	.word	0x40010000
 8001f98:	40000400 	.word	0x40000400
 8001f9c:	40023800 	.word	0x40023800

08001fa0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001fa2:	4b2b      	ldr	r3, [pc, #172]	; (8002050 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa4:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001fa6:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fa8:	2200      	movs	r2, #0
 8001faa:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001fac:	2c00      	cmp	r4, #0
 8001fae:	d14c      	bne.n	800204a <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001fb0:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb2:	4a28      	ldr	r2, [pc, #160]	; (8002054 <HAL_SDRAM_MspInit+0xb4>)
 8001fb4:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001fb6:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb8:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fba:	4827      	ldr	r0, [pc, #156]	; (8002058 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fbc:	433b      	orrs	r3, r7
 8001fbe:	6393      	str	r3, [r2, #56]	; 0x38
 8001fc0:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001fc2:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc4:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fc6:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fc8:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fcc:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fce:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fd0:	2302      	movs	r3, #2
 8001fd2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fda:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fdc:	f006 fbf8 	bl	80087d0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe0:	481e      	ldr	r0, [pc, #120]	; (800205c <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001fe2:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fe6:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fe8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fec:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff0:	f006 fbee 	bl	80087d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ff4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ff8:	4819      	ldr	r0, [pc, #100]	; (8002060 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ffa:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ffc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ffe:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002002:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002006:	f006 fbe3 	bl	80087d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800200a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800200e:	4815      	ldr	r0, [pc, #84]	; (8002064 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002010:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002012:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002014:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002018:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800201c:	f006 fbd8 	bl	80087d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002020:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002024:	4810      	ldr	r0, [pc, #64]	; (8002068 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002026:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002028:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800202a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800202e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002032:	f006 fbcd 	bl	80087d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002036:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002038:	480c      	ldr	r0, [pc, #48]	; (800206c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800203a:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800203c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800203e:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002042:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002044:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002046:	f006 fbc3 	bl	80087d0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800204a:	b009      	add	sp, #36	; 0x24
 800204c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800204e:	bf00      	nop
 8002050:	2000288c 	.word	0x2000288c
 8002054:	40023800 	.word	0x40023800
 8002058:	40021400 	.word	0x40021400
 800205c:	40020800 	.word	0x40020800
 8002060:	40021800 	.word	0x40021800
 8002064:	40021000 	.word	0x40021000
 8002068:	40020c00 	.word	0x40020c00
 800206c:	40020400 	.word	0x40020400

08002070 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002070:	b570      	push	{r4, r5, r6, lr}
 8002072:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002074:	4b23      	ldr	r3, [pc, #140]	; (8002104 <HAL_InitTick+0x94>)
 8002076:	2200      	movs	r2, #0
 8002078:	9202      	str	r2, [sp, #8]
 800207a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800207c:	f042 0210 	orr.w	r2, r2, #16
 8002080:	641a      	str	r2, [r3, #64]	; 0x40
 8002082:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002084:	f003 0310 	and.w	r3, r3, #16
 8002088:	9302      	str	r3, [sp, #8]
{
 800208a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800208c:	a901      	add	r1, sp, #4
 800208e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002090:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002092:	f008 fde5 	bl	800ac60 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002096:	9b06      	ldr	r3, [sp, #24]
 8002098:	b9d3      	cbnz	r3, 80020d0 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800209a:	f008 fdd1 	bl	800ac40 <HAL_RCC_GetPCLK1Freq>
 800209e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a0:	4a19      	ldr	r2, [pc, #100]	; (8002108 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020a2:	4c1a      	ldr	r4, [pc, #104]	; (800210c <HAL_InitTick+0x9c>)
 80020a4:	491a      	ldr	r1, [pc, #104]	; (8002110 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a6:	fba2 2303 	umull	r2, r3, r2, r3
 80020aa:	0c9b      	lsrs	r3, r3, #18
 80020ac:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80020ae:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80020b0:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80020b4:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020b6:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80020ba:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020bc:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020be:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020c0:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80020c2:	f009 fbfd 	bl	800b8c0 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80020c6:	4606      	mov	r6, r0
 80020c8:	b130      	cbz	r0, 80020d8 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80020ca:	4630      	mov	r0, r6
 80020cc:	b008      	add	sp, #32
 80020ce:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80020d0:	f008 fdb6 	bl	800ac40 <HAL_RCC_GetPCLK1Freq>
 80020d4:	0043      	lsls	r3, r0, #1
 80020d6:	e7e3      	b.n	80020a0 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80020d8:	4620      	mov	r0, r4
 80020da:	f009 fc7f 	bl	800b9dc <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80020de:	4606      	mov	r6, r0
 80020e0:	2800      	cmp	r0, #0
 80020e2:	d1f2      	bne.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80020e4:	2036      	movs	r0, #54	; 0x36
 80020e6:	f006 fa1f 	bl	8008528 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80020ea:	2d0f      	cmp	r5, #15
 80020ec:	d901      	bls.n	80020f2 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80020ee:	2601      	movs	r6, #1
 80020f0:	e7eb      	b.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80020f2:	4632      	mov	r2, r6
 80020f4:	4629      	mov	r1, r5
 80020f6:	2036      	movs	r0, #54	; 0x36
 80020f8:	f006 f9d8 	bl	80084ac <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80020fc:	4b05      	ldr	r3, [pc, #20]	; (8002114 <HAL_InitTick+0xa4>)
 80020fe:	601d      	str	r5, [r3, #0]
 8002100:	e7e3      	b.n	80020ca <HAL_InitTick+0x5a>
 8002102:	bf00      	nop
 8002104:	40023800 	.word	0x40023800
 8002108:	431bde83 	.word	0x431bde83
 800210c:	20002890 	.word	0x20002890
 8002110:	40001000 	.word	0x40001000
 8002114:	20000080 	.word	0x20000080

08002118 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002118:	4770      	bx	lr
 800211a:	bf00      	nop

0800211c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800211c:	e7fe      	b.n	800211c <HardFault_Handler>
 800211e:	bf00      	nop

08002120 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002120:	e7fe      	b.n	8002120 <MemManage_Handler>
 8002122:	bf00      	nop

08002124 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002124:	e7fe      	b.n	8002124 <BusFault_Handler>
 8002126:	bf00      	nop

08002128 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002128:	e7fe      	b.n	8002128 <UsageFault_Handler>
 800212a:	bf00      	nop

0800212c <DebugMon_Handler>:
 800212c:	4770      	bx	lr
 800212e:	bf00      	nop

08002130 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002130:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002132:	20c8      	movs	r0, #200	; 0xc8
 8002134:	f006 f996 	bl	8008464 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002138:	4804      	ldr	r0, [pc, #16]	; (800214c <EXTI3_IRQHandler+0x1c>)
 800213a:	2200      	movs	r2, #0
 800213c:	2120      	movs	r1, #32
 800213e:	f006 fc8b 	bl	8008a58 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002142:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002146:	2008      	movs	r0, #8
 8002148:	f006 bc96 	b.w	8008a78 <HAL_GPIO_EXTI_IRQHandler>
 800214c:	40021000 	.word	0x40021000

08002150 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002150:	4801      	ldr	r0, [pc, #4]	; (8002158 <TIM6_DAC_IRQHandler+0x8>)
 8002152:	f009 bdc3 	b.w	800bcdc <HAL_TIM_IRQHandler>
 8002156:	bf00      	nop
 8002158:	20002890 	.word	0x20002890

0800215c <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 800215c:	4801      	ldr	r0, [pc, #4]	; (8002164 <I2C3_EV_IRQHandler+0x8>)
 800215e:	f007 bbeb 	b.w	8009938 <HAL_I2C_EV_IRQHandler>
 8002162:	bf00      	nop
 8002164:	20002674 	.word	0x20002674

08002168 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002168:	4801      	ldr	r0, [pc, #4]	; (8002170 <LTDC_IRQHandler+0x8>)
 800216a:	f008 b95f 	b.w	800a42c <HAL_LTDC_IRQHandler>
 800216e:	bf00      	nop
 8002170:	200026c8 	.word	0x200026c8

08002174 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002174:	4801      	ldr	r0, [pc, #4]	; (800217c <DMA2D_IRQHandler+0x8>)
 8002176:	f006 ba41 	b.w	80085fc <HAL_DMA2D_IRQHandler>
 800217a:	bf00      	nop
 800217c:	20002634 	.word	0x20002634

08002180 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002180:	2001      	movs	r0, #1
 8002182:	4770      	bx	lr

08002184 <_kill>:

int _kill(int pid, int sig)
{
 8002184:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002186:	f026 f831 	bl	80281ec <__errno>
 800218a:	2316      	movs	r3, #22
 800218c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800218e:	f04f 30ff 	mov.w	r0, #4294967295
 8002192:	bd08      	pop	{r3, pc}

08002194 <_exit>:

void _exit (int status)
{
 8002194:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002196:	f026 f829 	bl	80281ec <__errno>
 800219a:	2316      	movs	r3, #22
 800219c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800219e:	e7fe      	b.n	800219e <_exit+0xa>

080021a0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80021a0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021a2:	1e16      	subs	r6, r2, #0
 80021a4:	dd07      	ble.n	80021b6 <_read+0x16>
 80021a6:	460c      	mov	r4, r1
 80021a8:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80021aa:	f3af 8000 	nop.w
 80021ae:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021b2:	42a5      	cmp	r5, r4
 80021b4:	d1f9      	bne.n	80021aa <_read+0xa>
	}

return len;
}
 80021b6:	4630      	mov	r0, r6
 80021b8:	bd70      	pop	{r4, r5, r6, pc}
 80021ba:	bf00      	nop

080021bc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80021bc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021be:	1e16      	subs	r6, r2, #0
 80021c0:	dd07      	ble.n	80021d2 <_write+0x16>
 80021c2:	460c      	mov	r4, r1
 80021c4:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80021c6:	f814 0b01 	ldrb.w	r0, [r4], #1
 80021ca:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ce:	42ac      	cmp	r4, r5
 80021d0:	d1f9      	bne.n	80021c6 <_write+0xa>
	}
	return len;
}
 80021d2:	4630      	mov	r0, r6
 80021d4:	bd70      	pop	{r4, r5, r6, pc}
 80021d6:	bf00      	nop

080021d8 <_close>:

int _close(int file)
{
	return -1;
}
 80021d8:	f04f 30ff 	mov.w	r0, #4294967295
 80021dc:	4770      	bx	lr
 80021de:	bf00      	nop

080021e0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021e0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021e4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021e6:	2000      	movs	r0, #0
 80021e8:	4770      	bx	lr
 80021ea:	bf00      	nop

080021ec <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021ec:	2001      	movs	r0, #1
 80021ee:	4770      	bx	lr

080021f0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80021f0:	2000      	movs	r0, #0
 80021f2:	4770      	bx	lr

080021f4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80021f4:	4a0b      	ldr	r2, [pc, #44]	; (8002224 <_sbrk+0x30>)
{
 80021f6:	b508      	push	{r3, lr}
 80021f8:	4603      	mov	r3, r0
	if (heap_end == 0)
 80021fa:	6810      	ldr	r0, [r2, #0]
 80021fc:	b128      	cbz	r0, 800220a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80021fe:	4403      	add	r3, r0
 8002200:	4669      	mov	r1, sp
 8002202:	428b      	cmp	r3, r1
 8002204:	d807      	bhi.n	8002216 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002206:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002208:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800220a:	4807      	ldr	r0, [pc, #28]	; (8002228 <_sbrk+0x34>)
 800220c:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800220e:	4403      	add	r3, r0
 8002210:	4669      	mov	r1, sp
 8002212:	428b      	cmp	r3, r1
 8002214:	d9f7      	bls.n	8002206 <_sbrk+0x12>
		errno = ENOMEM;
 8002216:	f025 ffe9 	bl	80281ec <__errno>
 800221a:	230c      	movs	r3, #12
 800221c:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800221e:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002222:	bd08      	pop	{r3, pc}
 8002224:	200028d8 	.word	0x200028d8
 8002228:	200143f8 	.word	0x200143f8

0800222c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800222c:	4770      	bx	lr

0800222e <_ZN23ApplicationFontProviderD0Ev>:
 800222e:	b510      	push	{r4, lr}
 8002230:	2104      	movs	r1, #4
 8002232:	4604      	mov	r4, r0
 8002234:	f024 feeb 	bl	802700e <_ZdlPvj>
 8002238:	4620      	mov	r0, r4
 800223a:	bd10      	pop	{r4, pc}

0800223c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800223c:	b508      	push	{r3, lr}
    switch (typography)
 800223e:	2903      	cmp	r1, #3
 8002240:	d813      	bhi.n	800226a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002242:	e8df f001 	tbb	[pc, r1]
 8002246:	0602      	.short	0x0602
 8002248:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800224a:	f005 fa11 	bl	8007670 <_ZN17TypedTextDatabase8getFontsEv>
 800224e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002250:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002252:	f005 fa0d 	bl	8007670 <_ZN17TypedTextDatabase8getFontsEv>
 8002256:	6840      	ldr	r0, [r0, #4]
 8002258:	e7fa      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800225a:	f005 fa09 	bl	8007670 <_ZN17TypedTextDatabase8getFontsEv>
 800225e:	6880      	ldr	r0, [r0, #8]
 8002260:	e7f6      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002262:	f005 fa05 	bl	8007670 <_ZN17TypedTextDatabase8getFontsEv>
 8002266:	68c0      	ldr	r0, [r0, #12]
 8002268:	e7f2      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800226a:	2000      	movs	r0, #0
 800226c:	e7f0      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002270 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002270:	4800      	ldr	r0, [pc, #0]	; (8002274 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002272:	4770      	bx	lr
 8002274:	08029548 	.word	0x08029548

08002278 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002278:	200d      	movs	r0, #13
 800227a:	4770      	bx	lr

0800227c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800227c:	b513      	push	{r0, r1, r4, lr}
 800227e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002280:	b151      	cbz	r1, 8002298 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002282:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002284:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002286:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800228a:	aa01      	add	r2, sp, #4
 800228c:	689c      	ldr	r4, [r3, #8]
 800228e:	f10d 0303 	add.w	r3, sp, #3
 8002292:	47a0      	blx	r4
        return glyph;
    }
 8002294:	b002      	add	sp, #8
 8002296:	bd10      	pop	{r4, pc}
            return 0;
 8002298:	4608      	mov	r0, r1
 800229a:	e7fb      	b.n	8002294 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800229c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800229c:	89c0      	ldrh	r0, [r0, #14]
 800229e:	4770      	bx	lr

080022a0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022a0:	8a00      	ldrh	r0, [r0, #16]
 80022a2:	4770      	bx	lr

080022a4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80022a4:	88c0      	ldrh	r0, [r0, #6]
 80022a6:	4770      	bx	lr

080022a8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80022a8:	8880      	ldrh	r0, [r0, #4]
 80022aa:	4770      	bx	lr

080022ac <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022ac:	7a80      	ldrb	r0, [r0, #10]
    }
 80022ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022b2:	4770      	bx	lr

080022b4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022b4:	7a80      	ldrb	r0, [r0, #10]
    }
 80022b6:	09c0      	lsrs	r0, r0, #7
 80022b8:	4770      	bx	lr

080022ba <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022ba:	4770      	bx	lr

080022bc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022bc:	4770      	bx	lr

080022be <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022be:	4770      	bx	lr

080022c0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022c0:	4770      	bx	lr

080022c2 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80022c2:	4770      	bx	lr

080022c4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022c4:	4770      	bx	lr

080022c6 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80022c6:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80022c8:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80022ca:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80022cc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022ce:	466d      	mov	r5, sp
 80022d0:	4601      	mov	r1, r0
 80022d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80022d6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022d8:	4628      	mov	r0, r5
 80022da:	4798      	blx	r3
 80022dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80022e0:	343c      	adds	r4, #60	; 0x3c
 80022e2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80022e6:	b005      	add	sp, #20
 80022e8:	bd30      	pop	{r4, r5, pc}

080022ea <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80022ea:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80022ec:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80022ee:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80022f0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022f2:	466d      	mov	r5, sp
 80022f4:	4601      	mov	r1, r0
 80022f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80022fa:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022fc:	4628      	mov	r0, r5
 80022fe:	4798      	blx	r3
 8002300:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002304:	343c      	adds	r4, #60	; 0x3c
 8002306:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800230a:	b005      	add	sp, #20
 800230c:	bd30      	pop	{r4, r5, pc}

0800230e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800230e:	2200      	movs	r2, #0
 8002310:	8002      	strh	r2, [r0, #0]
 8002312:	8042      	strh	r2, [r0, #2]
 8002314:	8082      	strh	r2, [r0, #4]
 8002316:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002318:	4770      	bx	lr

0800231a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800231a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800231e:	4770      	bx	lr

08002320 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002320:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002322:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002324:	4604      	mov	r4, r0
        setX(x);
 8002326:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002328:	4615      	mov	r5, r2
        setX(x);
 800232a:	4798      	blx	r3
        setBaselineY(baselineY);
 800232c:	6823      	ldr	r3, [r4, #0]
 800232e:	4629      	mov	r1, r5
 8002330:	4620      	mov	r0, r4
 8002332:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002334:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002338:	4718      	bx	r3

0800233a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800233a:	2000      	movs	r0, #0
 800233c:	4770      	bx	lr

0800233e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800233e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002340:	4770      	bx	lr

08002342 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002342:	4770      	bx	lr

08002344 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002344:	4770      	bx	lr

08002346 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002346:	4770      	bx	lr

08002348 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002348:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800234a:	68c2      	ldr	r2, [r0, #12]
 800234c:	6844      	ldr	r4, [r0, #4]
 800234e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002350:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002352:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002356:	07d2      	lsls	r2, r2, #31
 8002358:	bf48      	it	mi
 800235a:	5962      	ldrmi	r2, [r4, r5]
 800235c:	689b      	ldr	r3, [r3, #8]
    }
 800235e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002360:	bf48      	it	mi
 8002362:	58d3      	ldrmi	r3, [r2, r3]
 8002364:	4718      	bx	r3

08002366 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002366:	6843      	ldr	r3, [r0, #4]
 8002368:	b12b      	cbz	r3, 8002376 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800236a:	6883      	ldr	r3, [r0, #8]
 800236c:	b92b      	cbnz	r3, 800237a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800236e:	68c0      	ldr	r0, [r0, #12]
 8002370:	f000 0001 	and.w	r0, r0, #1
 8002374:	4770      	bx	lr
 8002376:	4618      	mov	r0, r3
 8002378:	4770      	bx	lr
 800237a:	2001      	movs	r0, #1
    }
 800237c:	4770      	bx	lr

0800237e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800237e:	b510      	push	{r4, lr}
    }
 8002380:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002382:	4604      	mov	r4, r0
    }
 8002384:	f024 fe43 	bl	802700e <_ZdlPvj>
 8002388:	4620      	mov	r0, r4
 800238a:	bd10      	pop	{r4, pc}

0800238c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800238c:	b510      	push	{r4, lr}
 800238e:	214c      	movs	r1, #76	; 0x4c
 8002390:	4604      	mov	r4, r0
 8002392:	f024 fe3c 	bl	802700e <_ZdlPvj>
 8002396:	4620      	mov	r0, r4
 8002398:	bd10      	pop	{r4, pc}

0800239a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800239a:	b510      	push	{r4, lr}
 800239c:	2110      	movs	r1, #16
 800239e:	4604      	mov	r4, r0
 80023a0:	f024 fe35 	bl	802700e <_ZdlPvj>
 80023a4:	4620      	mov	r0, r4
 80023a6:	bd10      	pop	{r4, pc}

080023a8 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023a8:	b510      	push	{r4, lr}
 80023aa:	4b03      	ldr	r3, [pc, #12]	; (80023b8 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 80023ac:	6003      	str	r3, [r0, #0]
 80023ae:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023b0:	f010 fbcc 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023b4:	4620      	mov	r0, r4
 80023b6:	bd10      	pop	{r4, pc}
 80023b8:	080298b4 	.word	0x080298b4

080023bc <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023bc:	b507      	push	{r0, r1, r2, lr}
 80023be:	4b07      	ldr	r3, [pc, #28]	; (80023dc <_ZN19CalibrationViewBaseD0Ev+0x20>)
 80023c0:	6003      	str	r3, [r0, #0]
 80023c2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023c4:	f010 fbc2 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023c8:	9801      	ldr	r0, [sp, #4]
 80023ca:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80023ce:	f024 fe1e 	bl	802700e <_ZdlPvj>
 80023d2:	9801      	ldr	r0, [sp, #4]
 80023d4:	b003      	add	sp, #12
 80023d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80023da:	bf00      	nop
 80023dc:	080298b4 	.word	0x080298b4

080023e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80023e0:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80023e2:	f7fe ff47 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80023e6:	bd08      	pop	{r3, pc}

080023e8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023e8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023ea:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023ec:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80023ee:	4b12      	ldr	r3, [pc, #72]	; (8002438 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80023f0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023f2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023f4:	b28d      	uxth	r5, r1
 80023f6:	b92b      	cbnz	r3, 8002404 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80023f8:	4b10      	ldr	r3, [pc, #64]	; (800243c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80023fa:	4a11      	ldr	r2, [pc, #68]	; (8002440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80023fc:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80023fe:	4811      	ldr	r0, [pc, #68]	; (8002444 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002400:	f025 fbf6 	bl	8027bf0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002404:	4910      	ldr	r1, [pc, #64]	; (8002448 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002406:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002408:	8809      	ldrh	r1, [r1, #0]
 800240a:	4291      	cmp	r1, r2
 800240c:	d803      	bhi.n	8002416 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800240e:	4b0f      	ldr	r3, [pc, #60]	; (800244c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002410:	4a0b      	ldr	r2, [pc, #44]	; (8002440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002412:	216d      	movs	r1, #109	; 0x6d
 8002414:	e7f3      	b.n	80023fe <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002416:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800241a:	4b0d      	ldr	r3, [pc, #52]	; (8002450 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002426:	4798      	blx	r3
 8002428:	1a28      	subs	r0, r5, r0
 800242a:	b201      	sxth	r1, r0
 800242c:	4633      	mov	r3, r6
 800242e:	4620      	mov	r0, r4
    }
 8002430:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002434:	4718      	bx	r3
 8002436:	bf00      	nop
 8002438:	20013814 	.word	0x20013814
 800243c:	0802964c 	.word	0x0802964c
 8002440:	0802968e 	.word	0x0802968e
 8002444:	080296c9 	.word	0x080296c9
 8002448:	20013818 	.word	0x20013818
 800244c:	08029710 	.word	0x08029710
 8002450:	2001381c 	.word	0x2001381c

08002454 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002454:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002456:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800245a:	4299      	cmp	r1, r3
{
 800245c:	4604      	mov	r4, r0
 800245e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002460:	d103      	bne.n	800246a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002462:	f012 f875 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002466:	f000 ff65 	bl	8003334 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800246a:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 800246e:	42a5      	cmp	r5, r4
 8002470:	d105      	bne.n	800247e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8002472:	f012 f86d 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
    }
}
 8002476:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800247a:	f001 b81b 	b.w	80034b4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
}
 800247e:	bd38      	pop	{r3, r4, r5, pc}

08002480 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002480:	2200      	movs	r2, #0
 8002482:	f04f 31ff 	mov.w	r1, #4294967295
 8002486:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800248a:	6082      	str	r2, [r0, #8]
    }
 800248c:	4770      	bx	lr

0800248e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800248e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002490:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002492:	4604      	mov	r4, r0
        setX(x);
 8002494:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002496:	4615      	mov	r5, r2
        setX(x);
 8002498:	4798      	blx	r3
        setY(y);
 800249a:	6823      	ldr	r3, [r4, #0]
 800249c:	4629      	mov	r1, r5
 800249e:	4620      	mov	r0, r4
 80024a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80024a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80024a6:	4718      	bx	r3

080024a8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80024a8:	b570      	push	{r4, r5, r6, lr}
 80024aa:	4604      	mov	r4, r0
 80024ac:	461d      	mov	r5, r3
 80024ae:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80024b2:	f7ff ffec 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80024b6:	6823      	ldr	r3, [r4, #0]
 80024b8:	4629      	mov	r1, r5
 80024ba:	4620      	mov	r0, r4
 80024bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80024be:	4798      	blx	r3
        setHeight(height);
 80024c0:	6823      	ldr	r3, [r4, #0]
 80024c2:	4631      	mov	r1, r6
 80024c4:	4620      	mov	r0, r4
 80024c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80024c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80024cc:	4718      	bx	r3
	...

080024d0 <_ZN8touchgfx6WidgetC1Ev>:
 80024d0:	2200      	movs	r2, #0
 80024d2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024d6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80024da:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80024de:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80024e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80024e6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80024e8:	4a01      	ldr	r2, [pc, #4]	; (80024f0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80024ea:	6002      	str	r2, [r0, #0]
 80024ec:	4770      	bx	lr
 80024ee:	bf00      	nop
 80024f0:	08029794 	.word	0x08029794

080024f4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80024f4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024f6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80024f8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024fa:	2100      	movs	r1, #0
 80024fc:	f025 fd7d 	bl	8027ffa <memset>
 8002500:	4620      	mov	r0, r4
 8002502:	f7ff ffe5 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8002506:	4b0a      	ldr	r3, [pc, #40]	; (8002530 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002508:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800250a:	4b0a      	ldr	r3, [pc, #40]	; (8002534 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 800250c:	62a3      	str	r3, [r4, #40]	; 0x28
 800250e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002512:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002514:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002518:	2300      	movs	r3, #0
 800251a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800251e:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002522:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002526:	8723      	strh	r3, [r4, #56]	; 0x38
 8002528:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 800252a:	4620      	mov	r0, r4
 800252c:	bd10      	pop	{r4, pc}
 800252e:	bf00      	nop
 8002530:	0802bed0 	.word	0x0802bed0
 8002534:	080297fc 	.word	0x080297fc

08002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002538:	4b1a      	ldr	r3, [pc, #104]	; (80025a4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800253a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 800253c:	881b      	ldrh	r3, [r3, #0]
 800253e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002540:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002542:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002544:	d92b      	bls.n	800259e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002546:	4b18      	ldr	r3, [pc, #96]	; (80025a8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002548:	681b      	ldr	r3, [r3, #0]
 800254a:	b92b      	cbnz	r3, 8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800254c:	4b17      	ldr	r3, [pc, #92]	; (80025ac <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800254e:	4a18      	ldr	r2, [pc, #96]	; (80025b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002550:	4818      	ldr	r0, [pc, #96]	; (80025b4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002552:	216c      	movs	r1, #108	; 0x6c
 8002554:	f025 fb4c 	bl	8027bf0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002558:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800255c:	4b16      	ldr	r3, [pc, #88]	; (80025b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002564:	4b15      	ldr	r3, [pc, #84]	; (80025bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002566:	6818      	ldr	r0, [r3, #0]
 8002568:	f005 f872 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800256c:	682b      	ldr	r3, [r5, #0]
 800256e:	9001      	str	r0, [sp, #4]
 8002570:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002572:	4628      	mov	r0, r5
 8002574:	4798      	blx	r3
 8002576:	682b      	ldr	r3, [r5, #0]
 8002578:	9901      	ldr	r1, [sp, #4]
 800257a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800257c:	4604      	mov	r4, r0
 800257e:	4628      	mov	r0, r5
 8002580:	4798      	blx	r3
 8002582:	682b      	ldr	r3, [r5, #0]
 8002584:	9901      	ldr	r1, [sp, #4]
 8002586:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002588:	fb14 f400 	smulbb	r4, r4, r0
 800258c:	4628      	mov	r0, r5
 800258e:	4798      	blx	r3
 8002590:	b2a4      	uxth	r4, r4
 8002592:	1823      	adds	r3, r4, r0
 8002594:	b21b      	sxth	r3, r3
 8002596:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800259a:	b002      	add	sp, #8
 800259c:	bd70      	pop	{r4, r5, r6, pc}
 800259e:	2300      	movs	r3, #0
 80025a0:	e7f9      	b.n	8002596 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80025a2:	bf00      	nop
 80025a4:	20013818 	.word	0x20013818
 80025a8:	20013814 	.word	0x20013814
 80025ac:	0802964c 	.word	0x0802964c
 80025b0:	0802968e 	.word	0x0802968e
 80025b4:	080296c9 	.word	0x080296c9
 80025b8:	2001381c 	.word	0x2001381c
 80025bc:	20013820 	.word	0x20013820

080025c0 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 80025c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025c4:	ed2d 8b06 	vpush	{d8-d10}
 80025c8:	4604      	mov	r4, r0
 80025ca:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80025cc:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80025ce:	2500      	movs	r5, #0
 80025d0:	f013 fc3e 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 80025d4:	4b66      	ldr	r3, [pc, #408]	; (8002770 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80025d6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80025d8:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80025dc:	2226      	movs	r2, #38	; 0x26
 80025de:	4629      	mov	r1, r5
 80025e0:	4658      	mov	r0, fp
 80025e2:	f025 fd0a 	bl	8027ffa <memset>
 80025e6:	4658      	mov	r0, fp
 80025e8:	f7ff ff72 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 80025ec:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80025f0:	26ff      	movs	r6, #255	; 0xff
 80025f2:	4b60      	ldr	r3, [pc, #384]	; (8002774 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80025f4:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80025f6:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80025f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80025fc:	4629      	mov	r1, r5
 80025fe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002602:	4650      	mov	r0, sl
        : color(col)
 8002604:	66a5      	str	r5, [r4, #104]	; 0x68
 8002606:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800260a:	f025 fcf6 	bl	8027ffa <memset>
 800260e:	4650      	mov	r0, sl
 8002610:	f7ff ff5e 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8002614:	4b58      	ldr	r3, [pc, #352]	; (8002778 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 8002616:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002618:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800261c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002620:	a90a      	add	r1, sp, #40	; 0x28
 8002622:	4650      	mov	r0, sl
 8002624:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002628:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800262c:	f00f fa87 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002630:	4648      	mov	r0, r9
 8002632:	f7ff ff5f 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8002636:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800263a:	4b50      	ldr	r3, [pc, #320]	; (800277c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 800263c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002640:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002644:	4638      	mov	r0, r7
 8002646:	f00e f943 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 800264a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800264e:	4618      	mov	r0, r3
 8002650:	9303      	str	r3, [sp, #12]
 8002652:	f7fe fe35 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002656:	4b4a      	ldr	r3, [pc, #296]	; (8002780 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002658:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800265c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002660:	3324      	adds	r3, #36	; 0x24
 8002662:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002666:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800266a:	4640      	mov	r0, r8
 800266c:	f7ff ff42 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8002670:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002674:	4618      	mov	r0, r3
 8002676:	ee08 3a10 	vmov	s16, r3
 800267a:	f7ff ff3b 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 800267e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002682:	4618      	mov	r0, r3
 8002684:	ee08 3a90 	vmov	s17, r3
 8002688:	f7ff ff34 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 800268c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002690:	4618      	mov	r0, r3
 8002692:	ee09 3a10 	vmov	s18, r3
 8002696:	f00f fb93 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800269a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800269e:	4618      	mov	r0, r3
 80026a0:	ee09 3a90 	vmov	s19, r3
 80026a4:	f00f fb8c 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80026a8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80026ac:	4618      	mov	r0, r3
 80026ae:	ee0a 3a10 	vmov	s20, r3
 80026b2:	f00f fb85 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80026b6:	4a33      	ldr	r2, [pc, #204]	; (8002784 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 80026b8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80026bc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80026c0:	4a31      	ldr	r2, [pc, #196]	; (8002788 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80026c2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80026c6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80026ca:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80026ce:	f010 fa33 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80026d2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80026d6:	462a      	mov	r2, r5
 80026d8:	4658      	mov	r0, fp
 80026da:	9300      	str	r3, [sp, #0]
 80026dc:	4629      	mov	r1, r5
 80026de:	23f0      	movs	r3, #240	; 0xf0
 80026e0:	f7ff fee2 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80026e4:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80026e6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80026ea:	66a3      	str	r3, [r4, #104]	; 0x68
 80026ec:	4659      	mov	r1, fp
 80026ee:	4630      	mov	r0, r6
 80026f0:	f00c fc96 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80026f4:	462a      	mov	r2, r5
 80026f6:	4650      	mov	r0, sl
 80026f8:	4629      	mov	r1, r5
 80026fa:	f7ff fec8 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80026fe:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002700:	4650      	mov	r0, sl
 8002702:	a90a      	add	r1, sp, #40	; 0x28
 8002704:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002708:	f00f fa19 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800270c:	4651      	mov	r1, sl
 800270e:	4630      	mov	r0, r6
 8002710:	f00c fc86 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002714:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002718:	2159      	movs	r1, #89	; 0x59
 800271a:	4648      	mov	r0, r9
 800271c:	f7ff feb7 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002720:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002724:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002728:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800272c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002730:	4650      	mov	r0, sl
 8002732:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002736:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800273a:	4649      	mov	r1, r9
 800273c:	4798      	blx	r3
 800273e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002742:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002746:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800274a:	4b10      	ldr	r3, [pc, #64]	; (800278c <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 800274c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800274e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002752:	b92b      	cbnz	r3, 8002760 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002754:	4b0e      	ldr	r3, [pc, #56]	; (8002790 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002756:	4a0f      	ldr	r2, [pc, #60]	; (8002794 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002758:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800275a:	480f      	ldr	r0, [pc, #60]	; (8002798 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800275c:	f025 fa48 	bl	8027bf0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002760:	4b0e      	ldr	r3, [pc, #56]	; (800279c <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002762:	881b      	ldrh	r3, [r3, #0]
 8002764:	2b07      	cmp	r3, #7
 8002766:	d81d      	bhi.n	80027a4 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002768:	4b0d      	ldr	r3, [pc, #52]	; (80027a0 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800276a:	4a0a      	ldr	r2, [pc, #40]	; (8002794 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800276c:	2161      	movs	r1, #97	; 0x61
 800276e:	e7f4      	b.n	800275a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002770:	080298b4 	.word	0x080298b4
 8002774:	0802bf60 	.word	0x0802bf60
 8002778:	0802c128 	.word	0x0802c128
 800277c:	0802980c 	.word	0x0802980c
 8002780:	0802bc94 	.word	0x0802bc94
 8002784:	0802989c 	.word	0x0802989c
 8002788:	08002455 	.word	0x08002455
 800278c:	20013814 	.word	0x20013814
 8002790:	0802964c 	.word	0x0802964c
 8002794:	0802974e 	.word	0x0802974e
 8002798:	080296c9 	.word	0x080296c9
 800279c:	20013818 	.word	0x20013818
 80027a0:	08029710 	.word	0x08029710
        return texts->getText(typedTextId);
 80027a4:	4b91      	ldr	r3, [pc, #580]	; (80029ec <_ZN19CalibrationViewBaseC1Ev+0x42c>)
 80027a6:	2107      	movs	r1, #7
 80027a8:	6818      	ldr	r0, [r3, #0]
 80027aa:	f004 ff51 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 80027ae:	4a90      	ldr	r2, [pc, #576]	; (80029f0 <_ZN19CalibrationViewBaseC1Ev+0x430>)
 80027b0:	4603      	mov	r3, r0
 80027b2:	2104      	movs	r1, #4
 80027b4:	4650      	mov	r0, sl
 80027b6:	f015 f82f 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80027ba:	4648      	mov	r0, r9
        wc1 = value;
 80027bc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80027c0:	f00e fdc2 	bl	8011348 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80027c4:	4b8b      	ldr	r3, [pc, #556]	; (80029f4 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 80027c6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 80027c8:	a90a      	add	r1, sp, #40	; 0x28
 80027ca:	2308      	movs	r3, #8
 80027cc:	4648      	mov	r0, r9
 80027ce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80027d2:	f00e fdd9 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80027d6:	4649      	mov	r1, r9
 80027d8:	4630      	mov	r0, r6
 80027da:	f00c fc21 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80027de:	230a      	movs	r3, #10
 80027e0:	9300      	str	r3, [sp, #0]
 80027e2:	2232      	movs	r2, #50	; 0x32
 80027e4:	23f0      	movs	r3, #240	; 0xf0
 80027e6:	4629      	mov	r1, r5
 80027e8:	4638      	mov	r0, r7
 80027ea:	f7ff fe5d 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 80027ee:	9b03      	ldr	r3, [sp, #12]
 80027f0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80027f4:	22a0      	movs	r2, #160	; 0xa0
 80027f6:	4611      	mov	r1, r2
 80027f8:	4638      	mov	r0, r7
 80027fa:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80027fe:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002802:	f00e f97b 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002806:	22a0      	movs	r2, #160	; 0xa0
 8002808:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800280c:	4638      	mov	r0, r7
 800280e:	f00e f980 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002812:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002816:	2b20      	cmp	r3, #32
 8002818:	d005      	beq.n	8002826 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800281a:	2320      	movs	r3, #32
 800281c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002820:	4638      	mov	r0, r7
 8002822:	f00e f875 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002826:	4638      	mov	r0, r7
 8002828:	2101      	movs	r1, #1
 800282a:	f00e f97d 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800282e:	4639      	mov	r1, r7
 8002830:	4630      	mov	r0, r6
 8002832:	ad04      	add	r5, sp, #16
        color = newColor;
 8002834:	f04f 37ff 	mov.w	r7, #4294967295
 8002838:	f00c fbf2 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800283c:	f04f 0900 	mov.w	r9, #0
    textArea3.setXY(70, 60);
 8002840:	223c      	movs	r2, #60	; 0x3c
 8002842:	4640      	mov	r0, r8
 8002844:	2146      	movs	r1, #70	; 0x46
 8002846:	f7ff fe22 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800284a:	f8a4 919c 	strh.w	r9, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800284e:	4641      	mov	r1, r8
 8002850:	4628      	mov	r0, r5
        color = newColor;
 8002852:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8002856:	f00e fafd 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800285a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800285e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002862:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002866:	f8df a18c 	ldr.w	sl, [pc, #396]	; 80029f4 <_ZN19CalibrationViewBaseC1Ev+0x434>
 800286a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 800286e:	a90a      	add	r1, sp, #40	; 0x28
 8002870:	4640      	mov	r0, r8
 8002872:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8002876:	f00e fd87 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800287a:	4641      	mov	r1, r8
 800287c:	4630      	mov	r0, r6
 800287e:	f00c fbcf 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002882:	ee18 0a10 	vmov	r0, s16
 8002886:	2223      	movs	r2, #35	; 0x23
 8002888:	2145      	movs	r1, #69	; 0x45
 800288a:	f7ff fe00 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800288e:	ee18 1a10 	vmov	r1, s16
        linespace = space;
 8002892:	f8a4 91e4 	strh.w	r9, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002896:	4628      	mov	r0, r5
        color = newColor;
 8002898:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800289c:	f00e fada 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80028a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028a4:	ee18 3a10 	vmov	r3, s16
 80028a8:	333c      	adds	r3, #60	; 0x3c
 80028aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80028ae:	233d      	movs	r3, #61	; 0x3d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 80028b0:	ee18 0a10 	vmov	r0, s16
 80028b4:	a90a      	add	r1, sp, #40	; 0x28
 80028b6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80028ba:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80028be:	f00e fd63 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80028c2:	ee18 1a10 	vmov	r1, s16
 80028c6:	4630      	mov	r0, r6
 80028c8:	f00c fbaa 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80028cc:	ee18 0a90 	vmov	r0, s17
 80028d0:	220c      	movs	r2, #12
 80028d2:	2136      	movs	r1, #54	; 0x36
 80028d4:	f7ff fddb 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80028d8:	ee18 1a90 	vmov	r1, s17
        linespace = space;
 80028dc:	f8a4 922c 	strh.w	r9, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80028e0:	4628      	mov	r0, r5
        color = newColor;
 80028e2:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80028e6:	f00e fab5 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80028ea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028ee:	ee18 3a90 	vmov	r3, s17
 80028f2:	333c      	adds	r3, #60	; 0x3c
 80028f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80028f8:	233c      	movs	r3, #60	; 0x3c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 80028fa:	ee18 0a90 	vmov	r0, s17
 80028fe:	a90a      	add	r1, sp, #40	; 0x28
 8002900:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002904:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8002908:	f00e fd3e 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800290c:	ee18 1a90 	vmov	r1, s17
 8002910:	4630      	mov	r0, r6
 8002912:	f00c fb85 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002916:	ee19 0a10 	vmov	r0, s18
 800291a:	22f0      	movs	r2, #240	; 0xf0
 800291c:	2121      	movs	r1, #33	; 0x21
 800291e:	f7ff fdb6 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8002922:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002926:	aa0a      	add	r2, sp, #40	; 0x28
 8002928:	f04f 0802 	mov.w	r8, #2
 800292c:	a909      	add	r1, sp, #36	; 0x24
 800292e:	ee19 0a10 	vmov	r0, s18
 8002932:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002936:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800293a:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800293e:	f00e ff08 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002942:	233b      	movs	r3, #59	; 0x3b
 8002944:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
        updateTextPosition();
 8002948:	ee19 0a10 	vmov	r0, s18
    buttonWithLabel3.setAction(buttonCallback);
 800294c:	3510      	adds	r5, #16
 800294e:	f7ff fdf3 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002952:	ee19 1a10 	vmov	r1, s18
 8002956:	4630      	mov	r0, r6
        colorPressed = col;
 8002958:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800295c:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002960:	f00c fb5e 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002964:	ee19 0a90 	vmov	r0, s19
 8002968:	22aa      	movs	r2, #170	; 0xaa
 800296a:	2121      	movs	r1, #33	; 0x21
 800296c:	f7ff fd8f 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002970:	aa0a      	add	r2, sp, #40	; 0x28
 8002972:	a909      	add	r1, sp, #36	; 0x24
 8002974:	ee19 0a90 	vmov	r0, s19
 8002978:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800297c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002980:	f00e fee7 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002984:	233a      	movs	r3, #58	; 0x3a
 8002986:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800298a:	ee19 0a90 	vmov	r0, s19
 800298e:	f7ff fdd3 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002992:	ee19 1a90 	vmov	r1, s19
 8002996:	4630      	mov	r0, r6
        colorPressed = col;
 8002998:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800299c:	f00c fb40 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80029a0:	ee1a 0a10 	vmov	r0, s20
 80029a4:	2264      	movs	r2, #100	; 0x64
 80029a6:	2121      	movs	r1, #33	; 0x21
 80029a8:	f7ff fd71 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80029ac:	aa0a      	add	r2, sp, #40	; 0x28
 80029ae:	a909      	add	r1, sp, #36	; 0x24
 80029b0:	ee1a 0a10 	vmov	r0, s20
 80029b4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80029b8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80029bc:	f00e fec9 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80029c0:	2339      	movs	r3, #57	; 0x39
        updateTextPosition();
 80029c2:	ee1a 0a10 	vmov	r0, s20
 80029c6:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80029ca:	f7ff fdb5 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80029ce:	4630      	mov	r0, r6
        colorPressed = col;
 80029d0:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80029d4:	ee1a 1a10 	vmov	r1, s20
 80029d8:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80029dc:	f00c fb20 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80029e0:	4620      	mov	r0, r4
 80029e2:	b00d      	add	sp, #52	; 0x34
 80029e4:	ecbd 8b06 	vpop	{d8-d10}
 80029e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029ec:	20013820 	.word	0x20013820
 80029f0:	08029786 	.word	0x08029786
 80029f4:	080297fc 	.word	0x080297fc

080029f8 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 80029f8:	4770      	bx	lr

080029fa <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029fa:	4770      	bx	lr

080029fc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029fc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029fe:	68c2      	ldr	r2, [r0, #12]
 8002a00:	6844      	ldr	r4, [r0, #4]
 8002a02:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a04:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a06:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a0a:	07d2      	lsls	r2, r2, #31
 8002a0c:	bf48      	it	mi
 8002a0e:	5962      	ldrmi	r2, [r4, r5]
 8002a10:	689b      	ldr	r3, [r3, #8]
    }
 8002a12:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a14:	bf48      	it	mi
 8002a16:	58d3      	ldrmi	r3, [r2, r3]
 8002a18:	4718      	bx	r3

08002a1a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a1a:	6843      	ldr	r3, [r0, #4]
 8002a1c:	b12b      	cbz	r3, 8002a2a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a1e:	6883      	ldr	r3, [r0, #8]
 8002a20:	b92b      	cbnz	r3, 8002a2e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a22:	68c0      	ldr	r0, [r0, #12]
 8002a24:	f000 0001 	and.w	r0, r0, #1
 8002a28:	4770      	bx	lr
 8002a2a:	4618      	mov	r0, r3
 8002a2c:	4770      	bx	lr
 8002a2e:	2001      	movs	r0, #1
    }
 8002a30:	4770      	bx	lr

08002a32 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a32:	b510      	push	{r4, lr}
 8002a34:	2110      	movs	r1, #16
 8002a36:	4604      	mov	r4, r0
 8002a38:	f024 fae9 	bl	802700e <_ZdlPvj>
 8002a3c:	4620      	mov	r0, r4
 8002a3e:	bd10      	pop	{r4, pc}

08002a40 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002a40:	b510      	push	{r4, lr}
 8002a42:	4b03      	ldr	r3, [pc, #12]	; (8002a50 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8002a44:	6003      	str	r3, [r0, #0]
 8002a46:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002a48:	f010 f880 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	bd10      	pop	{r4, pc}
 8002a50:	08029900 	.word	0x08029900

08002a54 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002a54:	b507      	push	{r0, r1, r2, lr}
 8002a56:	4b07      	ldr	r3, [pc, #28]	; (8002a74 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8002a58:	6003      	str	r3, [r0, #0]
 8002a5a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002a5c:	f010 f876 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002a60:	9801      	ldr	r0, [sp, #4]
 8002a62:	f241 015c 	movw	r1, #4188	; 0x105c
 8002a66:	f024 fad2 	bl	802700e <_ZdlPvj>
 8002a6a:	9801      	ldr	r0, [sp, #4]
 8002a6c:	b003      	add	sp, #12
 8002a6e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002a72:	bf00      	nop
 8002a74:	08029900 	.word	0x08029900

08002a78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002a78:	3098      	adds	r0, #152	; 0x98
 8002a7a:	4288      	cmp	r0, r1
{
 8002a7c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002a7e:	d105      	bne.n	8002a8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002a80:	f011 fd66 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002a84:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002a88:	f000 bd04 	b.w	8003494 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002a8c:	bd08      	pop	{r3, pc}
	...

08002a90 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a94:	ed2d 8b02 	vpush	{d8}
 8002a98:	4604      	mov	r4, r0
 8002a9a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002a9c:	46a1      	mov	r9, r4
 8002a9e:	2500      	movs	r5, #0
 8002aa0:	f013 f9d6 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8002aa4:	4ba5      	ldr	r3, [pc, #660]	; (8002d3c <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8002aa6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002aa8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002aac:	2226      	movs	r2, #38	; 0x26
 8002aae:	4629      	mov	r1, r5
 8002ab0:	4648      	mov	r0, r9
 8002ab2:	f025 faa2 	bl	8027ffa <memset>
 8002ab6:	4648      	mov	r0, r9
 8002ab8:	f7ff fd0a 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8002abc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002ac0:	26ff      	movs	r6, #255	; 0xff
 8002ac2:	4b9f      	ldr	r3, [pc, #636]	; (8002d40 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8002ac4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002ac6:	2226      	movs	r2, #38	; 0x26
 8002ac8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002acc:	4629      	mov	r1, r5
 8002ace:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002ad2:	4640      	mov	r0, r8
 8002ad4:	66a5      	str	r5, [r4, #104]	; 0x68
 8002ad6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ada:	f025 fa8e 	bl	8027ffa <memset>
 8002ade:	4640      	mov	r0, r8
 8002ae0:	f7ff fcf6 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8002ae4:	4b97      	ldr	r3, [pc, #604]	; (8002d44 <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 8002ae6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002ae8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002aec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002af0:	a90a      	add	r1, sp, #40	; 0x28
 8002af2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002af6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002af8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002afc:	f00f f81f 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002b00:	4658      	mov	r0, fp
 8002b02:	f00f f95d 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002b06:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002b0a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002b0e:	4618      	mov	r0, r3
 8002b10:	ee08 3a90 	vmov	s17, r3
 8002b14:	f7ff fcee 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8002b18:	4638      	mov	r0, r7
 8002b1a:	f00d fed9 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 8002b1e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002b22:	4618      	mov	r0, r3
 8002b24:	9303      	str	r3, [sp, #12]
 8002b26:	f7fe fbcb 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002b2a:	4b87      	ldr	r3, [pc, #540]	; (8002d48 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 8002b2c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002b30:	3324      	adds	r3, #36	; 0x24
 8002b32:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002b36:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002b3a:	4618      	mov	r0, r3
 8002b3c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002b40:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002b44:	ee08 3a10 	vmov	s16, r3
 8002b48:	f7ff fcd4 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8002b4c:	4650      	mov	r0, sl
 8002b4e:	f7ff fcd1 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002b52:	4a7e      	ldr	r2, [pc, #504]	; (8002d4c <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8002b54:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002b58:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002b5c:	4a7c      	ldr	r2, [pc, #496]	; (8002d50 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002b5e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002b62:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002b66:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002b6a:	f00f ffe5 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002b6e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002b72:	462a      	mov	r2, r5
 8002b74:	4648      	mov	r0, r9
 8002b76:	9300      	str	r3, [sp, #0]
 8002b78:	4629      	mov	r1, r5
 8002b7a:	23f0      	movs	r3, #240	; 0xf0
 8002b7c:	f7ff fc94 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002b80:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002b82:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002b86:	66a3      	str	r3, [r4, #104]	; 0x68
 8002b88:	4649      	mov	r1, r9
 8002b8a:	4630      	mov	r0, r6
 8002b8c:	f00c fa48 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002b90:	462a      	mov	r2, r5
 8002b92:	4640      	mov	r0, r8
 8002b94:	4629      	mov	r1, r5
 8002b96:	f7ff fc7a 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8002b9a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002b9c:	4640      	mov	r0, r8
 8002b9e:	a90a      	add	r1, sp, #40	; 0x28
 8002ba0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ba4:	f00e ffcb 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ba8:	4641      	mov	r1, r8
 8002baa:	4630      	mov	r0, r6
 8002bac:	f00c fa38 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002bb0:	4658      	mov	r0, fp
 8002bb2:	f240 1201 	movw	r2, #257	; 0x101
 8002bb6:	2121      	movs	r1, #33	; 0x21
 8002bb8:	f7ff fc69 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8002bbc:	f04f 0802 	mov.w	r8, #2
 8002bc0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002bc2:	aa0a      	add	r2, sp, #40	; 0x28
 8002bc4:	a909      	add	r1, sp, #36	; 0x24
 8002bc6:	4658      	mov	r0, fp
 8002bc8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002bcc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002bd0:	f00e fdbf 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002bd4:	4658      	mov	r0, fp
 8002bd6:	f8a4 80d0 	strh.w	r8, [r4, #208]	; 0xd0
 8002bda:	f7ff fcad 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002bde:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002be2:	330c      	adds	r3, #12
        color = col;
 8002be4:	f04f 39ff 	mov.w	r9, #4294967295
 8002be8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002bec:	4659      	mov	r1, fp
 8002bee:	4630      	mov	r0, r6
        colorPressed = col;
 8002bf0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002bf4:	f00c fa14 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002bf8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 8002bfc:	223c      	movs	r2, #60	; 0x3c
 8002bfe:	ee18 0a90 	vmov	r0, s17
 8002c02:	213a      	movs	r1, #58	; 0x3a
 8002c04:	f7ff fc43 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8002c08:	ee18 1a90 	vmov	r1, s17
 8002c0c:	4640      	mov	r0, r8
        color = newColor;
 8002c0e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002c12:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002c16:	f00e f91d 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c1a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002c1e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002c22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002c26:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8002d54 <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 8002c2a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002c2e:	2301      	movs	r3, #1
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8002c30:	ee18 0a90 	vmov	r0, s17
 8002c34:	a90a      	add	r1, sp, #40	; 0x28
 8002c36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c3a:	f00e fba5 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c3e:	ee18 1a90 	vmov	r1, s17
 8002c42:	4630      	mov	r0, r6
 8002c44:	f00c f9ec 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002c48:	230a      	movs	r3, #10
 8002c4a:	9300      	str	r3, [sp, #0]
 8002c4c:	2232      	movs	r2, #50	; 0x32
 8002c4e:	23f0      	movs	r3, #240	; 0xf0
 8002c50:	4629      	mov	r1, r5
 8002c52:	4638      	mov	r0, r7
 8002c54:	f7ff fc28 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002c58:	9b03      	ldr	r3, [sp, #12]
 8002c5a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c5e:	22a0      	movs	r2, #160	; 0xa0
 8002c60:	4611      	mov	r1, r2
 8002c62:	4638      	mov	r0, r7
 8002c64:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002c68:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002c6c:	f00d ff46 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c70:	22a0      	movs	r2, #160	; 0xa0
 8002c72:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002c76:	4638      	mov	r0, r7
 8002c78:	f00d ff4b 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002c7c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002c80:	2b20      	cmp	r3, #32
 8002c82:	d005      	beq.n	8002c90 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002c84:	2320      	movs	r3, #32
 8002c86:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002c8a:	4638      	mov	r0, r7
 8002c8c:	f00d fe40 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002c90:	4638      	mov	r0, r7
 8002c92:	2101      	movs	r1, #1
 8002c94:	f00d ff48 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002c98:	4639      	mov	r1, r7
 8002c9a:	4630      	mov	r0, r6
 8002c9c:	f00c f9c0 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002ca0:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002ca4:	ee18 0a10 	vmov	r0, s16
 8002ca8:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002caa:	2500      	movs	r5, #0
 8002cac:	2145      	movs	r1, #69	; 0x45
 8002cae:	f7ff fbee 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002cb2:	ee18 1a10 	vmov	r1, s16
 8002cb6:	4640      	mov	r0, r8
        color = newColor;
 8002cb8:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002cbc:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002cc0:	f00e f8c8 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002cc4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002cc8:	ee18 3a10 	vmov	r3, s16
 8002ccc:	333c      	adds	r3, #60	; 0x3c
 8002cce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002cd2:	2303      	movs	r3, #3
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8002cd4:	ee18 0a10 	vmov	r0, s16
 8002cd8:	a90a      	add	r1, sp, #40	; 0x28
 8002cda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002cde:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002ce2:	f00e fb51 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ce6:	ee18 1a10 	vmov	r1, s16
 8002cea:	4630      	mov	r0, r6
 8002cec:	f00c f998 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002cf0:	220c      	movs	r2, #12
 8002cf2:	4650      	mov	r0, sl
 8002cf4:	2136      	movs	r1, #54	; 0x36
 8002cf6:	f7ff fbca 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8002cfa:	4651      	mov	r1, sl
 8002cfc:	4640      	mov	r0, r8
        color = newColor;
 8002cfe:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002d02:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002d06:	f00e f8a5 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d0a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002d0e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002d12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d16:	2304      	movs	r3, #4
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8002d18:	a90a      	add	r1, sp, #40	; 0x28
 8002d1a:	4650      	mov	r0, sl
 8002d1c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d20:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002d24:	f00e fb30 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d28:	4630      	mov	r0, r6
 8002d2a:	4651      	mov	r1, sl
 8002d2c:	f00c f978 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002d30:	4620      	mov	r0, r4
 8002d32:	b00d      	add	sp, #52	; 0x34
 8002d34:	ecbd 8b02 	vpop	{d8}
 8002d38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d3c:	08029900 	.word	0x08029900
 8002d40:	0802bf60 	.word	0x0802bf60
 8002d44:	0802c128 	.word	0x0802c128
 8002d48:	0802bc94 	.word	0x0802bc94
 8002d4c:	080298e8 	.word	0x080298e8
 8002d50:	08002a79 	.word	0x08002a79
 8002d54:	080297fc 	.word	0x080297fc

08002d58 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002d58:	4770      	bx	lr

08002d5a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002d5a:	4770      	bx	lr

08002d5c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002d5c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8002d60:	6808      	ldr	r0, [r1, #0]
 8002d62:	6849      	ldr	r1, [r1, #4]
 8002d64:	c303      	stmia	r3!, {r0, r1}
    }
 8002d66:	4770      	bx	lr

08002d68 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002d68:	4770      	bx	lr

08002d6a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002d6a:	4770      	bx	lr

08002d6c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002d6c:	6041      	str	r1, [r0, #4]
    }
 8002d6e:	4770      	bx	lr

08002d70 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8002d70:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d72:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8002d74:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002d78:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002d7c:	8002      	strh	r2, [r0, #0]
 8002d7e:	8042      	strh	r2, [r0, #2]
 8002d80:	8084      	strh	r4, [r0, #4]
 8002d82:	80c1      	strh	r1, [r0, #6]
        }
 8002d84:	bd10      	pop	{r4, pc}

08002d86 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8002d86:	4770      	bx	lr

08002d88 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002d88:	4770      	bx	lr
	...

08002d8c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002d8c:	4b06      	ldr	r3, [pc, #24]	; (8002da8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002d8e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002d92:	2300      	movs	r3, #0
 8002d94:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002d98:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002d9c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002da0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8002da4:	4770      	bx	lr
 8002da6:	bf00      	nop
 8002da8:	08003149 	.word	0x08003149

08002dac <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002dac:	2301      	movs	r3, #1
 8002dae:	7203      	strb	r3, [r0, #8]
    }
 8002db0:	4770      	bx	lr

08002db2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8002db2:	4770      	bx	lr

08002db4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8002db4:	4770      	bx	lr

08002db6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8002db6:	4770      	bx	lr

08002db8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002db8:	4770      	bx	lr

08002dba <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002dba:	4770      	bx	lr

08002dbc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8002dbc:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002dbe:	6840      	ldr	r0, [r0, #4]
 8002dc0:	6803      	ldr	r3, [r0, #0]
 8002dc2:	3110      	adds	r1, #16
 8002dc4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002dc6:	4718      	bx	r3

08002dc8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8002dc8:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002dca:	6840      	ldr	r0, [r0, #4]
 8002dcc:	6803      	ldr	r3, [r0, #0]
 8002dce:	3110      	adds	r1, #16
 8002dd0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002dd2:	4718      	bx	r3

08002dd4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8002dd4:	4770      	bx	lr

08002dd6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8002dd6:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8002dd8:	6840      	ldr	r0, [r0, #4]
 8002dda:	6803      	ldr	r3, [r0, #0]
 8002ddc:	3110      	adds	r1, #16
 8002dde:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002de0:	4718      	bx	r3

08002de2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8002de2:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8002de4:	6840      	ldr	r0, [r0, #4]
 8002de6:	6803      	ldr	r3, [r0, #0]
 8002de8:	3110      	adds	r1, #16
 8002dea:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002dec:	4718      	bx	r3

08002dee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8002dee:	4770      	bx	lr

08002df0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002df0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002df2:	68c2      	ldr	r2, [r0, #12]
 8002df4:	6841      	ldr	r1, [r0, #4]
 8002df6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002df8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002dfa:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002dfe:	07d2      	lsls	r2, r2, #31
 8002e00:	bf48      	it	mi
 8002e02:	590a      	ldrmi	r2, [r1, r4]
 8002e04:	689b      	ldr	r3, [r3, #8]
    }
 8002e06:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002e0a:	bf48      	it	mi
 8002e0c:	58d3      	ldrmi	r3, [r2, r3]
 8002e0e:	4718      	bx	r3

08002e10 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002e10:	6843      	ldr	r3, [r0, #4]
 8002e12:	b12b      	cbz	r3, 8002e20 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002e14:	6883      	ldr	r3, [r0, #8]
 8002e16:	b92b      	cbnz	r3, 8002e24 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002e18:	68c0      	ldr	r0, [r0, #12]
 8002e1a:	f000 0001 	and.w	r0, r0, #1
 8002e1e:	4770      	bx	lr
 8002e20:	4618      	mov	r0, r3
 8002e22:	4770      	bx	lr
 8002e24:	2001      	movs	r0, #1
    }
 8002e26:	4770      	bx	lr

08002e28 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002e28:	b510      	push	{r4, lr}
 8002e2a:	210c      	movs	r1, #12
 8002e2c:	4604      	mov	r4, r0
 8002e2e:	f024 f8ee 	bl	802700e <_ZdlPvj>
 8002e32:	4620      	mov	r0, r4
 8002e34:	bd10      	pop	{r4, pc}

08002e36 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002e36:	b510      	push	{r4, lr}
 8002e38:	2110      	movs	r1, #16
 8002e3a:	4604      	mov	r4, r0
 8002e3c:	f024 f8e7 	bl	802700e <_ZdlPvj>
 8002e40:	4620      	mov	r0, r4
 8002e42:	bd10      	pop	{r4, pc}

08002e44 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002e44:	b510      	push	{r4, lr}
 8002e46:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002e4a:	4604      	mov	r4, r0
 8002e4c:	f024 f8df 	bl	802700e <_ZdlPvj>
 8002e50:	4620      	mov	r0, r4
 8002e52:	bd10      	pop	{r4, pc}

08002e54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8002e54:	b510      	push	{r4, lr}
 8002e56:	2138      	movs	r1, #56	; 0x38
 8002e58:	4604      	mov	r4, r0
 8002e5a:	f024 f8d8 	bl	802700e <_ZdlPvj>
 8002e5e:	4620      	mov	r0, r4
 8002e60:	bd10      	pop	{r4, pc}

08002e62 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8002e62:	b510      	push	{r4, lr}
 8002e64:	2128      	movs	r1, #40	; 0x28
 8002e66:	4604      	mov	r4, r0
 8002e68:	f024 f8d1 	bl	802700e <_ZdlPvj>
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	bd10      	pop	{r4, pc}

08002e70 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8002e70:	b510      	push	{r4, lr}
 8002e72:	2138      	movs	r1, #56	; 0x38
 8002e74:	4604      	mov	r4, r0
 8002e76:	f024 f8ca 	bl	802700e <_ZdlPvj>
 8002e7a:	4620      	mov	r0, r4
 8002e7c:	bd10      	pop	{r4, pc}

08002e7e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002e7e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002e80:	f011 fb66 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
 8002e84:	6803      	ldr	r3, [r0, #0]
    }
 8002e86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002e8a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002e8c:	4718      	bx	r3
	...

08002e90 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002e90:	b513      	push	{r0, r1, r4, lr}
 8002e92:	4604      	mov	r4, r0
        animationCounter++;
 8002e94:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002e96:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002e98:	3001      	adds	r0, #1
 8002e9a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002e9c:	4298      	cmp	r0, r3
        animationCounter++;
 8002e9e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002ea0:	d905      	bls.n	8002eae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8002ea2:	2301      	movs	r3, #1
 8002ea4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002ea6:	2300      	movs	r3, #0
 8002ea8:	72a3      	strb	r3, [r4, #10]
    }
 8002eaa:	b002      	add	sp, #8
 8002eac:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002eae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002eb2:	2100      	movs	r1, #0
 8002eb4:	f013 f97e 	bl	80161b4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002eb8:	f010 0201 	ands.w	r2, r0, #1
 8002ebc:	b283      	uxth	r3, r0
 8002ebe:	d12a      	bne.n	8002f16 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002ec0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002ec2:	4a19      	ldr	r2, [pc, #100]	; (8002f28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8002ec4:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8002ec8:	89e3      	ldrh	r3, [r4, #14]
 8002eca:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8002ecc:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8002ed0:	82a0      	strh	r0, [r4, #20]
 8002ed2:	2000      	movs	r0, #0
 8002ed4:	1ad2      	subs	r2, r2, r3
 8002ed6:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8002eda:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8002edc:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8002ede:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8002ee0:	4a12      	ldr	r2, [pc, #72]	; (8002f2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8002ee2:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8002ee6:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8002ee8:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8002eec:	691b      	ldr	r3, [r3, #16]
 8002eee:	f8ad 1000 	strh.w	r1, [sp]
 8002ef2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8002ef6:	4669      	mov	r1, sp
 8002ef8:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002efa:	7aa3      	ldrb	r3, [r4, #10]
 8002efc:	2b01      	cmp	r3, #1
 8002efe:	d1d4      	bne.n	8002eaa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8002f00:	4b0b      	ldr	r3, [pc, #44]	; (8002f30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8002f02:	781b      	ldrb	r3, [r3, #0]
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	d0d0      	beq.n	8002eaa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002f08:	f011 fb22 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002f0c:	b002      	add	sp, #8
 8002f0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002f12:	f011 bb23 	b.w	801455c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002f16:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002f1a:	2800      	cmp	r0, #0
 8002f1c:	bfd8      	it	le
 8002f1e:	460a      	movle	r2, r1
 8002f20:	4413      	add	r3, r2
 8002f22:	81e3      	strh	r3, [r4, #14]
 8002f24:	e7cd      	b.n	8002ec2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8002f26:	bf00      	nop
 8002f28:	200137b0 	.word	0x200137b0
 8002f2c:	200137b2 	.word	0x200137b2
 8002f30:	200137ba 	.word	0x200137ba

08002f34 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002f34:	b510      	push	{r4, lr}
 8002f36:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002f38:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8002f3c:	b158      	cbz	r0, 8002f56 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002f3e:	6803      	ldr	r3, [r0, #0]
 8002f40:	68db      	ldr	r3, [r3, #12]
 8002f42:	4798      	blx	r3
 8002f44:	b138      	cbz	r0, 8002f56 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002f46:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8002f4a:	6803      	ldr	r3, [r0, #0]
 8002f4c:	689b      	ldr	r3, [r3, #8]
 8002f4e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002f50:	2300      	movs	r3, #0
 8002f52:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8002f56:	bd10      	pop	{r4, pc}

08002f58 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8002f58:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002f5c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8002f60:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002f62:	68a8      	ldr	r0, [r5, #8]
 8002f64:	6803      	ldr	r3, [r0, #0]
 8002f66:	6a1b      	ldr	r3, [r3, #32]
 8002f68:	4798      	blx	r3
 8002f6a:	2897      	cmp	r0, #151	; 0x97
 8002f6c:	d805      	bhi.n	8002f7a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8002f6e:	4b46      	ldr	r3, [pc, #280]	; (8003088 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8002f70:	4a46      	ldr	r2, [pc, #280]	; (800308c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8002f72:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002f74:	4846      	ldr	r0, [pc, #280]	; (8003090 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8002f76:	f024 fe3b 	bl	8027bf0 <__assert_func>
 8002f7a:	6868      	ldr	r0, [r5, #4]
 8002f7c:	6803      	ldr	r3, [r0, #0]
 8002f7e:	6a1b      	ldr	r3, [r3, #32]
 8002f80:	4798      	blx	r3
 8002f82:	280f      	cmp	r0, #15
 8002f84:	d803      	bhi.n	8002f8e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8002f86:	4b43      	ldr	r3, [pc, #268]	; (8003094 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8002f88:	4a40      	ldr	r2, [pc, #256]	; (800308c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8002f8a:	21a4      	movs	r1, #164	; 0xa4
 8002f8c:	e7f2      	b.n	8002f74 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002f8e:	68e8      	ldr	r0, [r5, #12]
 8002f90:	6803      	ldr	r3, [r0, #0]
 8002f92:	6a1b      	ldr	r3, [r3, #32]
 8002f94:	4798      	blx	r3
 8002f96:	280b      	cmp	r0, #11
 8002f98:	d803      	bhi.n	8002fa2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8002f9a:	4b3f      	ldr	r3, [pc, #252]	; (8003098 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8002f9c:	4a3b      	ldr	r2, [pc, #236]	; (800308c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8002f9e:	21a5      	movs	r1, #165	; 0xa5
 8002fa0:	e7e8      	b.n	8002f74 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8002fa2:	f011 fad5 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002fa6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80030a0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002faa:	3004      	adds	r0, #4
 8002fac:	f011 fb36 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002fb0:	f8d9 0000 	ldr.w	r0, [r9]
 8002fb4:	b110      	cbz	r0, 8002fbc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002fb6:	6803      	ldr	r3, [r0, #0]
 8002fb8:	68db      	ldr	r3, [r3, #12]
 8002fba:	4798      	blx	r3
    if (*currentTrans)
 8002fbc:	f8d9 0000 	ldr.w	r0, [r9]
 8002fc0:	b110      	cbz	r0, 8002fc8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002fc2:	6803      	ldr	r3, [r0, #0]
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	4798      	blx	r3
    if (*currentScreen)
 8002fc8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80030a4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8002fcc:	f8d8 0000 	ldr.w	r0, [r8]
 8002fd0:	b110      	cbz	r0, 8002fd8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002fd2:	6803      	ldr	r3, [r0, #0]
 8002fd4:	695b      	ldr	r3, [r3, #20]
 8002fd6:	4798      	blx	r3
    if (*currentPresenter)
 8002fd8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002fdc:	b110      	cbz	r0, 8002fe4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002fde:	6803      	ldr	r3, [r0, #0]
 8002fe0:	685b      	ldr	r3, [r3, #4]
 8002fe2:	4798      	blx	r3
    if (*currentScreen)
 8002fe4:	f8d8 0000 	ldr.w	r0, [r8]
 8002fe8:	b110      	cbz	r0, 8002ff0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002fea:	6803      	ldr	r3, [r0, #0]
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	4798      	blx	r3
    if (*currentPresenter)
 8002ff0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002ff4:	b110      	cbz	r0, 8002ffc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002ff6:	6803      	ldr	r3, [r0, #0]
 8002ff8:	689b      	ldr	r3, [r3, #8]
 8002ffa:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002ffc:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002ffe:	6803      	ldr	r3, [r0, #0]
 8003000:	2100      	movs	r1, #0
 8003002:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003004:	4798      	blx	r3
        : screenContainer(0), done(false)
 8003006:	f04f 0b00 	mov.w	fp, #0
 800300a:	4b24      	ldr	r3, [pc, #144]	; (800309c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800300c:	6003      	str	r3, [r0, #0]
 800300e:	4604      	mov	r4, r0
 8003010:	f8c0 b004 	str.w	fp, [r0, #4]
 8003014:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003018:	68a8      	ldr	r0, [r5, #8]
 800301a:	6803      	ldr	r3, [r0, #0]
 800301c:	4659      	mov	r1, fp
 800301e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003020:	4798      	blx	r3
 8003022:	4606      	mov	r6, r0
 8003024:	f004 ff56 	bl	8007ed4 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003028:	6868      	ldr	r0, [r5, #4]
 800302a:	6803      	ldr	r3, [r0, #0]
 800302c:	4659      	mov	r1, fp
 800302e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003030:	4798      	blx	r3
 8003032:	4631      	mov	r1, r6
 8003034:	4605      	mov	r5, r0
 8003036:	f004 ff29 	bl	8007e8c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800303a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800303e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003042:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003046:	b1e5      	cbz	r5, 8003082 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003048:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800304a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800304e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003050:	f8c5 a008 	str.w	sl, [r5, #8]
 8003054:	4630      	mov	r0, r6
 8003056:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003058:	63f5      	str	r5, [r6, #60]	; 0x3c
 800305a:	4798      	blx	r3
    newPresenter->activate();
 800305c:	682b      	ldr	r3, [r5, #0]
 800305e:	4628      	mov	r0, r5
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003064:	4621      	mov	r1, r4
 8003066:	4630      	mov	r0, r6
 8003068:	f013 f89e 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800306c:	6823      	ldr	r3, [r4, #0]
 800306e:	4620      	mov	r0, r4
 8003070:	691b      	ldr	r3, [r3, #16]
 8003072:	4798      	blx	r3
    newTransition->invalidate();
 8003074:	6823      	ldr	r3, [r4, #0]
 8003076:	695b      	ldr	r3, [r3, #20]
 8003078:	4620      	mov	r0, r4
}
 800307a:	b001      	add	sp, #4
 800307c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003080:	4718      	bx	r3
    model->bind(newPresenter);
 8003082:	462b      	mov	r3, r5
 8003084:	e7e1      	b.n	800304a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8003086:	bf00      	nop
 8003088:	0802992c 	.word	0x0802992c
 800308c:	080299ba 	.word	0x080299ba
 8003090:	08029ac8 	.word	0x08029ac8
 8003094:	08029b0f 	.word	0x08029b0f
 8003098:	08029bb2 	.word	0x08029bb2
 800309c:	0802aea8 	.word	0x0802aea8
 80030a0:	20013804 	.word	0x20013804
 80030a4:	20013800 	.word	0x20013800

080030a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80030a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80030aa:	4604      	mov	r4, r0
        animationCounter++;
 80030ac:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80030ae:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80030b0:	3001      	adds	r0, #1
 80030b2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80030b4:	4298      	cmp	r0, r3
        animationCounter++;
 80030b6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80030b8:	d905      	bls.n	80030c6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80030ba:	2301      	movs	r3, #1
 80030bc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80030be:	2300      	movs	r3, #0
 80030c0:	72a3      	strb	r3, [r4, #10]
    }
 80030c2:	b003      	add	sp, #12
 80030c4:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80030c6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80030ca:	2100      	movs	r1, #0
 80030cc:	f013 f872 	bl	80161b4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80030d0:	f010 0201 	ands.w	r2, r0, #1
 80030d4:	b283      	uxth	r3, r0
 80030d6:	d128      	bne.n	800312a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80030d8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80030da:	4b18      	ldr	r3, [pc, #96]	; (800313c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80030dc:	4818      	ldr	r0, [pc, #96]	; (8003140 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80030de:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80030e0:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80030e2:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80030e4:	f9b0 0000 	ldrsh.w	r0, [r0]
 80030e8:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80030ec:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80030ee:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80030f0:	442b      	add	r3, r5
 80030f2:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80030f4:	b212      	sxth	r2, r2
 80030f6:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80030fa:	6803      	ldr	r3, [r0, #0]
 80030fc:	8322      	strh	r2, [r4, #24]
 80030fe:	f8ad 2000 	strh.w	r2, [sp]
 8003102:	2200      	movs	r2, #0
 8003104:	691b      	ldr	r3, [r3, #16]
 8003106:	f8ad 2002 	strh.w	r2, [sp, #2]
 800310a:	4669      	mov	r1, sp
 800310c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800310e:	7aa3      	ldrb	r3, [r4, #10]
 8003110:	2b01      	cmp	r3, #1
 8003112:	d1d6      	bne.n	80030c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003114:	4b0b      	ldr	r3, [pc, #44]	; (8003144 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8003116:	781b      	ldrb	r3, [r3, #0]
 8003118:	2b00      	cmp	r3, #0
 800311a:	d0d2      	beq.n	80030c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800311c:	f011 fa18 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003120:	b003      	add	sp, #12
 8003122:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003126:	f011 ba19 	b.w	801455c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800312a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800312e:	2800      	cmp	r0, #0
 8003130:	bfd8      	it	le
 8003132:	460a      	movle	r2, r1
 8003134:	4413      	add	r3, r2
 8003136:	81e3      	strh	r3, [r4, #14]
 8003138:	e7cf      	b.n	80030da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800313a:	bf00      	nop
 800313c:	200137b0 	.word	0x200137b0
 8003140:	200137b2 	.word	0x200137b2
 8003144:	200137ba 	.word	0x200137ba

08003148 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8003148:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800314c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003150:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003152:	68a8      	ldr	r0, [r5, #8]
 8003154:	6803      	ldr	r3, [r0, #0]
 8003156:	6a1b      	ldr	r3, [r3, #32]
 8003158:	4798      	blx	r3
 800315a:	f241 137b 	movw	r3, #4475	; 0x117b
 800315e:	4298      	cmp	r0, r3
 8003160:	d805      	bhi.n	800316e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8003162:	4b46      	ldr	r3, [pc, #280]	; (800327c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8003164:	4a46      	ldr	r2, [pc, #280]	; (8003280 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003166:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003168:	4846      	ldr	r0, [pc, #280]	; (8003284 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 800316a:	f024 fd41 	bl	8027bf0 <__assert_func>
 800316e:	6868      	ldr	r0, [r5, #4]
 8003170:	6803      	ldr	r3, [r0, #0]
 8003172:	6a1b      	ldr	r3, [r3, #32]
 8003174:	4798      	blx	r3
 8003176:	280f      	cmp	r0, #15
 8003178:	d803      	bhi.n	8003182 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 800317a:	4b43      	ldr	r3, [pc, #268]	; (8003288 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 800317c:	4a40      	ldr	r2, [pc, #256]	; (8003280 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800317e:	21a4      	movs	r1, #164	; 0xa4
 8003180:	e7f2      	b.n	8003168 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003182:	68e8      	ldr	r0, [r5, #12]
 8003184:	6803      	ldr	r3, [r0, #0]
 8003186:	6a1b      	ldr	r3, [r3, #32]
 8003188:	4798      	blx	r3
 800318a:	280b      	cmp	r0, #11
 800318c:	d803      	bhi.n	8003196 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 800318e:	4b3f      	ldr	r3, [pc, #252]	; (800328c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8003190:	4a3b      	ldr	r2, [pc, #236]	; (8003280 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003192:	21a5      	movs	r1, #165	; 0xa5
 8003194:	e7e8      	b.n	8003168 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003196:	f011 f9db 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800319a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003294 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 800319e:	3004      	adds	r0, #4
 80031a0:	f011 fa3c 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80031a4:	f8d9 0000 	ldr.w	r0, [r9]
 80031a8:	b110      	cbz	r0, 80031b0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80031aa:	6803      	ldr	r3, [r0, #0]
 80031ac:	68db      	ldr	r3, [r3, #12]
 80031ae:	4798      	blx	r3
    if (*currentTrans)
 80031b0:	f8d9 0000 	ldr.w	r0, [r9]
 80031b4:	b110      	cbz	r0, 80031bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80031b6:	6803      	ldr	r3, [r0, #0]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	4798      	blx	r3
    if (*currentScreen)
 80031bc:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003298 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 80031c0:	f8d8 0000 	ldr.w	r0, [r8]
 80031c4:	b110      	cbz	r0, 80031cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80031c6:	6803      	ldr	r3, [r0, #0]
 80031c8:	695b      	ldr	r3, [r3, #20]
 80031ca:	4798      	blx	r3
    if (*currentPresenter)
 80031cc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80031d0:	b110      	cbz	r0, 80031d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80031d2:	6803      	ldr	r3, [r0, #0]
 80031d4:	685b      	ldr	r3, [r3, #4]
 80031d6:	4798      	blx	r3
    if (*currentScreen)
 80031d8:	f8d8 0000 	ldr.w	r0, [r8]
 80031dc:	b110      	cbz	r0, 80031e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80031de:	6803      	ldr	r3, [r0, #0]
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	4798      	blx	r3
    if (*currentPresenter)
 80031e4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80031e8:	b110      	cbz	r0, 80031f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80031ea:	6803      	ldr	r3, [r0, #0]
 80031ec:	689b      	ldr	r3, [r3, #8]
 80031ee:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80031f0:	68e8      	ldr	r0, [r5, #12]
 80031f2:	6803      	ldr	r3, [r0, #0]
 80031f4:	2100      	movs	r1, #0
 80031f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80031f8:	4798      	blx	r3
 80031fa:	f04f 0b00 	mov.w	fp, #0
 80031fe:	4b24      	ldr	r3, [pc, #144]	; (8003290 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003200:	6003      	str	r3, [r0, #0]
 8003202:	4604      	mov	r4, r0
 8003204:	f8c0 b004 	str.w	fp, [r0, #4]
 8003208:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800320c:	68a8      	ldr	r0, [r5, #8]
 800320e:	6803      	ldr	r3, [r0, #0]
 8003210:	4659      	mov	r1, fp
 8003212:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003214:	4798      	blx	r3
 8003216:	4606      	mov	r6, r0
 8003218:	f004 fb5e 	bl	80078d8 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800321c:	6868      	ldr	r0, [r5, #4]
 800321e:	6803      	ldr	r3, [r0, #0]
 8003220:	4659      	mov	r1, fp
 8003222:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003224:	4798      	blx	r3
 8003226:	4631      	mov	r1, r6
 8003228:	4605      	mov	r5, r0
 800322a:	f004 fb2f 	bl	800788c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800322e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003232:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003236:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800323a:	b1e5      	cbz	r5, 8003276 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 800323c:	1d2b      	adds	r3, r5, #4
 800323e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003242:	6833      	ldr	r3, [r6, #0]
 8003244:	f8c5 a008 	str.w	sl, [r5, #8]
 8003248:	4630      	mov	r0, r6
 800324a:	68db      	ldr	r3, [r3, #12]
 800324c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800324e:	4798      	blx	r3
    newPresenter->activate();
 8003250:	682b      	ldr	r3, [r5, #0]
 8003252:	4628      	mov	r0, r5
 8003254:	681b      	ldr	r3, [r3, #0]
 8003256:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003258:	4621      	mov	r1, r4
 800325a:	4630      	mov	r0, r6
 800325c:	f012 ffa4 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003260:	6823      	ldr	r3, [r4, #0]
 8003262:	4620      	mov	r0, r4
 8003264:	691b      	ldr	r3, [r3, #16]
 8003266:	4798      	blx	r3
    newTransition->invalidate();
 8003268:	6823      	ldr	r3, [r4, #0]
 800326a:	695b      	ldr	r3, [r3, #20]
 800326c:	4620      	mov	r0, r4
}
 800326e:	b001      	add	sp, #4
 8003270:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003274:	4718      	bx	r3
    model->bind(newPresenter);
 8003276:	462b      	mov	r3, r5
 8003278:	e7e1      	b.n	800323e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 800327a:	bf00      	nop
 800327c:	0802992c 	.word	0x0802992c
 8003280:	08029c55 	.word	0x08029c55
 8003284:	08029ac8 	.word	0x08029ac8
 8003288:	08029b0f 	.word	0x08029b0f
 800328c:	08029bb2 	.word	0x08029bb2
 8003290:	0802aea8 	.word	0x0802aea8
 8003294:	20013804 	.word	0x20013804
 8003298:	20013800 	.word	0x20013800

0800329c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800329c:	4b04      	ldr	r3, [pc, #16]	; (80032b0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80032a4:	b10a      	cbz	r2, 80032aa <_ZN8touchgfx3HAL3lcdEv+0xe>
 80032a6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80032a8:	b900      	cbnz	r0, 80032ac <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80032aa:	6898      	ldr	r0, [r3, #8]
    }
 80032ac:	4770      	bx	lr
 80032ae:	bf00      	nop
 80032b0:	200137bc 	.word	0x200137bc

080032b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80032b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80032b6:	4604      	mov	r4, r0
 80032b8:	4617      	mov	r7, r2
 80032ba:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80032bc:	f011 fa7c 	bl	80147b8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80032c0:	4b10      	ldr	r3, [pc, #64]	; (8003304 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80032c2:	601c      	str	r4, [r3, #0]
      model(m)
 80032c4:	4b10      	ldr	r3, [pc, #64]	; (8003308 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80032c6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80032c8:	4b10      	ldr	r3, [pc, #64]	; (800330c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 80032ca:	2500      	movs	r5, #0
 80032cc:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80032d0:	4b0f      	ldr	r3, [pc, #60]	; (8003310 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80032d2:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80032d6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80032d8:	6803      	ldr	r3, [r0, #0]
 80032da:	2101      	movs	r1, #1
 80032dc:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80032de:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80032e2:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80032e6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80032e8:	4628      	mov	r0, r5
 80032ea:	f004 f975 	bl	80075d8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80032ee:	f7ff ffd5 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 80032f2:	f01a fc32 	bl	801db5a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80032f6:	f7ff ffd1 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 80032fa:	f01a fca9 	bl	801dc50 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80032fe:	4620      	mov	r0, r4
 8003300:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003302:	bf00      	nop
 8003304:	20013810 	.word	0x20013810
 8003308:	0802ae54 	.word	0x0802ae54
 800330c:	0802ae3c 	.word	0x0802ae3c
 8003310:	200137bc 	.word	0x200137bc

08003314 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003314:	4b06      	ldr	r3, [pc, #24]	; (8003330 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8003316:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800331a:	2300      	movs	r3, #0
 800331c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003320:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003324:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003328:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800332c:	4770      	bx	lr
 800332e:	bf00      	nop
 8003330:	08003149 	.word	0x08003149

08003334 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8003334:	4b06      	ldr	r3, [pc, #24]	; (8003350 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8003336:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800333a:	2300      	movs	r3, #0
 800333c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003340:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003344:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003348:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800334c:	4770      	bx	lr
 800334e:	bf00      	nop
 8003350:	08003939 	.word	0x08003939

08003354 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003354:	4b06      	ldr	r3, [pc, #24]	; (8003370 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003356:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800335a:	2300      	movs	r3, #0
 800335c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003360:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003364:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003368:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800336c:	4770      	bx	lr
 800336e:	bf00      	nop
 8003370:	0800461d 	.word	0x0800461d

08003374 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8003374:	4b06      	ldr	r3, [pc, #24]	; (8003390 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8003376:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800337a:	2300      	movs	r3, #0
 800337c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003380:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003384:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003388:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800338c:	4770      	bx	lr
 800338e:	bf00      	nop
 8003390:	080037f9 	.word	0x080037f9

08003394 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8003394:	4b06      	ldr	r3, [pc, #24]	; (80033b0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8003396:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800339a:	2300      	movs	r3, #0
 800339c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80033a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80033a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80033a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80033ac:	4770      	bx	lr
 80033ae:	bf00      	nop
 80033b0:	080044dd 	.word	0x080044dd

080033b4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80033b4:	4b06      	ldr	r3, [pc, #24]	; (80033d0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80033b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80033ba:	2300      	movs	r3, #0
 80033bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80033c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80033c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80033c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80033cc:	4770      	bx	lr
 80033ce:	bf00      	nop
 80033d0:	0800439d 	.word	0x0800439d

080033d4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 80033d4:	4b06      	ldr	r3, [pc, #24]	; (80033f0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 80033d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80033da:	2300      	movs	r3, #0
 80033dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80033e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80033e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80033e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80033ec:	4770      	bx	lr
 80033ee:	bf00      	nop
 80033f0:	0800425d 	.word	0x0800425d

080033f4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 80033f4:	4b06      	ldr	r3, [pc, #24]	; (8003410 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 80033f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80033fa:	2300      	movs	r3, #0
 80033fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003400:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003404:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003408:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800340c:	4770      	bx	lr
 800340e:	bf00      	nop
 8003410:	0800411d 	.word	0x0800411d

08003414 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003414:	4b06      	ldr	r3, [pc, #24]	; (8003430 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003416:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800341a:	2300      	movs	r3, #0
 800341c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003420:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003424:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003428:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800342c:	4770      	bx	lr
 800342e:	bf00      	nop
 8003430:	080036b9 	.word	0x080036b9

08003434 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003434:	4b06      	ldr	r3, [pc, #24]	; (8003450 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003436:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800343a:	2300      	movs	r3, #0
 800343c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003440:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003444:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003448:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800344c:	4770      	bx	lr
 800344e:	bf00      	nop
 8003450:	08003fdd 	.word	0x08003fdd

08003454 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003454:	4b06      	ldr	r3, [pc, #24]	; (8003470 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003456:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800345a:	2300      	movs	r3, #0
 800345c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003460:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003464:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003468:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800346c:	4770      	bx	lr
 800346e:	bf00      	nop
 8003470:	08003e9d 	.word	0x08003e9d

08003474 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8003474:	4b06      	ldr	r3, [pc, #24]	; (8003490 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8003476:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800347a:	2300      	movs	r3, #0
 800347c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003480:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003484:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003488:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800348c:	4770      	bx	lr
 800348e:	bf00      	nop
 8003490:	08003d5d 	.word	0x08003d5d

08003494 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8003494:	4b06      	ldr	r3, [pc, #24]	; (80034b0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8003496:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800349a:	2300      	movs	r3, #0
 800349c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80034a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80034a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80034a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80034ac:	4770      	bx	lr
 80034ae:	bf00      	nop
 80034b0:	08003579 	.word	0x08003579

080034b4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80034b4:	4b06      	ldr	r3, [pc, #24]	; (80034d0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80034b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80034ba:	2300      	movs	r3, #0
 80034bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80034c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80034c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80034c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80034cc:	4770      	bx	lr
 80034ce:	bf00      	nop
 80034d0:	08003c1d 	.word	0x08003c1d

080034d4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80034d4:	4b06      	ldr	r3, [pc, #24]	; (80034f0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80034d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80034da:	2300      	movs	r3, #0
 80034dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80034e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80034e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80034e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80034ec:	4770      	bx	lr
 80034ee:	bf00      	nop
 80034f0:	08003add 	.word	0x08003add

080034f4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80034f4:	4b06      	ldr	r3, [pc, #24]	; (8003510 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80034f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80034fa:	2300      	movs	r3, #0
 80034fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003500:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003504:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003508:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800350c:	4770      	bx	lr
 800350e:	bf00      	nop
 8003510:	08002f59 	.word	0x08002f59

08003514 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003514:	6803      	ldr	r3, [r0, #0]
 8003516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003518:	4718      	bx	r3
	...

0800351c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 800351c:	4b12      	ldr	r3, [pc, #72]	; (8003568 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800351e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003520:	6003      	str	r3, [r0, #0]
 8003522:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003526:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003528:	4b10      	ldr	r3, [pc, #64]	; (800356c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800352a:	7241      	strb	r1, [r0, #9]
 800352c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800352e:	4910      	ldr	r1, [pc, #64]	; (8003570 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003530:	4b10      	ldr	r3, [pc, #64]	; (8003574 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003532:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003536:	f9b3 3000 	ldrsh.w	r3, [r3]
 800353a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 800353c:	2200      	movs	r2, #0
 800353e:	6042      	str	r2, [r0, #4]
 8003540:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003542:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003544:	81c2      	strh	r2, [r0, #14]
          solid()
 8003546:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800354a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800354e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003552:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003556:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003558:	9100      	str	r1, [sp, #0]
 800355a:	3010      	adds	r0, #16
 800355c:	4611      	mov	r1, r2
 800355e:	f7fe ffa3 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003562:	4620      	mov	r0, r4
 8003564:	b002      	add	sp, #8
 8003566:	bd10      	pop	{r4, pc}
 8003568:	0802aef0 	.word	0x0802aef0
 800356c:	0802add4 	.word	0x0802add4
 8003570:	200137b2 	.word	0x200137b2
 8003574:	200137b0 	.word	0x200137b0

08003578 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003578:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800357c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003580:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003582:	68a0      	ldr	r0, [r4, #8]
 8003584:	6803      	ldr	r3, [r0, #0]
 8003586:	6a1b      	ldr	r3, [r3, #32]
 8003588:	4798      	blx	r3
 800358a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800358e:	d205      	bcs.n	800359c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003590:	4b42      	ldr	r3, [pc, #264]	; (800369c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8003592:	4a43      	ldr	r2, [pc, #268]	; (80036a0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003594:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003596:	4843      	ldr	r0, [pc, #268]	; (80036a4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003598:	f024 fb2a 	bl	8027bf0 <__assert_func>
 800359c:	6860      	ldr	r0, [r4, #4]
 800359e:	6803      	ldr	r3, [r0, #0]
 80035a0:	6a1b      	ldr	r3, [r3, #32]
 80035a2:	4798      	blx	r3
 80035a4:	280f      	cmp	r0, #15
 80035a6:	d803      	bhi.n	80035b0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 80035a8:	4b3f      	ldr	r3, [pc, #252]	; (80036a8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 80035aa:	4a3d      	ldr	r2, [pc, #244]	; (80036a0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 80035ac:	21a4      	movs	r1, #164	; 0xa4
 80035ae:	e7f2      	b.n	8003596 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80035b0:	68e0      	ldr	r0, [r4, #12]
 80035b2:	6803      	ldr	r3, [r0, #0]
 80035b4:	6a1b      	ldr	r3, [r3, #32]
 80035b6:	4798      	blx	r3
 80035b8:	2837      	cmp	r0, #55	; 0x37
 80035ba:	d803      	bhi.n	80035c4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 80035bc:	4b3b      	ldr	r3, [pc, #236]	; (80036ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 80035be:	4a38      	ldr	r2, [pc, #224]	; (80036a0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 80035c0:	21a5      	movs	r1, #165	; 0xa5
 80035c2:	e7e8      	b.n	8003596 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80035c4:	f010 ffc4 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80035c8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80036b0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 80035cc:	3004      	adds	r0, #4
 80035ce:	f011 f825 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80035d2:	f8d9 0000 	ldr.w	r0, [r9]
 80035d6:	b110      	cbz	r0, 80035de <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80035d8:	6803      	ldr	r3, [r0, #0]
 80035da:	68db      	ldr	r3, [r3, #12]
 80035dc:	4798      	blx	r3
    if (*currentTrans)
 80035de:	f8d9 0000 	ldr.w	r0, [r9]
 80035e2:	b110      	cbz	r0, 80035ea <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80035e4:	6803      	ldr	r3, [r0, #0]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	4798      	blx	r3
    if (*currentScreen)
 80035ea:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80036b4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 80035ee:	f8d8 0000 	ldr.w	r0, [r8]
 80035f2:	b110      	cbz	r0, 80035fa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80035f4:	6803      	ldr	r3, [r0, #0]
 80035f6:	695b      	ldr	r3, [r3, #20]
 80035f8:	4798      	blx	r3
    if (*currentPresenter)
 80035fa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80035fe:	b110      	cbz	r0, 8003606 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003600:	6803      	ldr	r3, [r0, #0]
 8003602:	685b      	ldr	r3, [r3, #4]
 8003604:	4798      	blx	r3
    if (*currentScreen)
 8003606:	f8d8 0000 	ldr.w	r0, [r8]
 800360a:	b110      	cbz	r0, 8003612 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 800360c:	6803      	ldr	r3, [r0, #0]
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	4798      	blx	r3
    if (*currentPresenter)
 8003612:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003616:	b110      	cbz	r0, 800361e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003618:	6803      	ldr	r3, [r0, #0]
 800361a:	689b      	ldr	r3, [r3, #8]
 800361c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800361e:	68e0      	ldr	r0, [r4, #12]
 8003620:	2100      	movs	r1, #0
 8003622:	f7ff ff77 	bl	8003514 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003626:	2114      	movs	r1, #20
 8003628:	4605      	mov	r5, r0
 800362a:	f7ff ff77 	bl	800351c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800362e:	68a0      	ldr	r0, [r4, #8]
 8003630:	6803      	ldr	r3, [r0, #0]
 8003632:	2100      	movs	r1, #0
 8003634:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003636:	4798      	blx	r3
 8003638:	4606      	mov	r6, r0
 800363a:	f004 f86b 	bl	8007714 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800363e:	6860      	ldr	r0, [r4, #4]
 8003640:	6803      	ldr	r3, [r0, #0]
 8003642:	2100      	movs	r1, #0
 8003644:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003646:	4798      	blx	r3
 8003648:	4631      	mov	r1, r6
 800364a:	4604      	mov	r4, r0
 800364c:	f004 f83c 	bl	80076c8 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003650:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003654:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003658:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800365c:	b1dc      	cbz	r4, 8003696 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 800365e:	1d23      	adds	r3, r4, #4
 8003660:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003664:	6833      	ldr	r3, [r6, #0]
 8003666:	f8c4 a008 	str.w	sl, [r4, #8]
 800366a:	4630      	mov	r0, r6
 800366c:	68db      	ldr	r3, [r3, #12]
 800366e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003670:	4798      	blx	r3
    newPresenter->activate();
 8003672:	6823      	ldr	r3, [r4, #0]
 8003674:	4620      	mov	r0, r4
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800367a:	4629      	mov	r1, r5
 800367c:	4630      	mov	r0, r6
 800367e:	f012 fd93 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003682:	682b      	ldr	r3, [r5, #0]
 8003684:	4628      	mov	r0, r5
 8003686:	691b      	ldr	r3, [r3, #16]
 8003688:	4798      	blx	r3
    newTransition->invalidate();
 800368a:	682b      	ldr	r3, [r5, #0]
 800368c:	4628      	mov	r0, r5
 800368e:	695b      	ldr	r3, [r3, #20]
}
 8003690:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003694:	4718      	bx	r3
    model->bind(newPresenter);
 8003696:	4623      	mov	r3, r4
 8003698:	e7e2      	b.n	8003660 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 800369a:	bf00      	nop
 800369c:	0802992c 	.word	0x0802992c
 80036a0:	08029d5d 	.word	0x08029d5d
 80036a4:	08029ac8 	.word	0x08029ac8
 80036a8:	08029b0f 	.word	0x08029b0f
 80036ac:	08029bb2 	.word	0x08029bb2
 80036b0:	20013804 	.word	0x20013804
 80036b4:	20013800 	.word	0x20013800

080036b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 80036b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80036bc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80036c0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80036c2:	68a0      	ldr	r0, [r4, #8]
 80036c4:	6803      	ldr	r3, [r0, #0]
 80036c6:	6a1b      	ldr	r3, [r3, #32]
 80036c8:	4798      	blx	r3
 80036ca:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80036ce:	d205      	bcs.n	80036dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 80036d0:	4b42      	ldr	r3, [pc, #264]	; (80037dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 80036d2:	4a43      	ldr	r2, [pc, #268]	; (80037e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80036d4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80036d6:	4843      	ldr	r0, [pc, #268]	; (80037e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 80036d8:	f024 fa8a 	bl	8027bf0 <__assert_func>
 80036dc:	6860      	ldr	r0, [r4, #4]
 80036de:	6803      	ldr	r3, [r0, #0]
 80036e0:	6a1b      	ldr	r3, [r3, #32]
 80036e2:	4798      	blx	r3
 80036e4:	280f      	cmp	r0, #15
 80036e6:	d803      	bhi.n	80036f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 80036e8:	4b3f      	ldr	r3, [pc, #252]	; (80037e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 80036ea:	4a3d      	ldr	r2, [pc, #244]	; (80037e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80036ec:	21a4      	movs	r1, #164	; 0xa4
 80036ee:	e7f2      	b.n	80036d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80036f0:	68e0      	ldr	r0, [r4, #12]
 80036f2:	6803      	ldr	r3, [r0, #0]
 80036f4:	6a1b      	ldr	r3, [r3, #32]
 80036f6:	4798      	blx	r3
 80036f8:	2837      	cmp	r0, #55	; 0x37
 80036fa:	d803      	bhi.n	8003704 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 80036fc:	4b3b      	ldr	r3, [pc, #236]	; (80037ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80036fe:	4a38      	ldr	r2, [pc, #224]	; (80037e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003700:	21a5      	movs	r1, #165	; 0xa5
 8003702:	e7e8      	b.n	80036d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003704:	f010 ff24 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003708:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80037f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 800370c:	3004      	adds	r0, #4
 800370e:	f010 ff85 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003712:	f8d9 0000 	ldr.w	r0, [r9]
 8003716:	b110      	cbz	r0, 800371e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003718:	6803      	ldr	r3, [r0, #0]
 800371a:	68db      	ldr	r3, [r3, #12]
 800371c:	4798      	blx	r3
    if (*currentTrans)
 800371e:	f8d9 0000 	ldr.w	r0, [r9]
 8003722:	b110      	cbz	r0, 800372a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003724:	6803      	ldr	r3, [r0, #0]
 8003726:	681b      	ldr	r3, [r3, #0]
 8003728:	4798      	blx	r3
    if (*currentScreen)
 800372a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80037f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 800372e:	f8d8 0000 	ldr.w	r0, [r8]
 8003732:	b110      	cbz	r0, 800373a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003734:	6803      	ldr	r3, [r0, #0]
 8003736:	695b      	ldr	r3, [r3, #20]
 8003738:	4798      	blx	r3
    if (*currentPresenter)
 800373a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800373e:	b110      	cbz	r0, 8003746 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003740:	6803      	ldr	r3, [r0, #0]
 8003742:	685b      	ldr	r3, [r3, #4]
 8003744:	4798      	blx	r3
    if (*currentScreen)
 8003746:	f8d8 0000 	ldr.w	r0, [r8]
 800374a:	b110      	cbz	r0, 8003752 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 800374c:	6803      	ldr	r3, [r0, #0]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	4798      	blx	r3
    if (*currentPresenter)
 8003752:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003756:	b110      	cbz	r0, 800375e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003758:	6803      	ldr	r3, [r0, #0]
 800375a:	689b      	ldr	r3, [r3, #8]
 800375c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800375e:	68e0      	ldr	r0, [r4, #12]
 8003760:	2100      	movs	r1, #0
 8003762:	f7ff fed7 	bl	8003514 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003766:	2114      	movs	r1, #20
 8003768:	4605      	mov	r5, r0
 800376a:	f7ff fed7 	bl	800351c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800376e:	68a0      	ldr	r0, [r4, #8]
 8003770:	6803      	ldr	r3, [r0, #0]
 8003772:	2100      	movs	r1, #0
 8003774:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003776:	4798      	blx	r3
 8003778:	4606      	mov	r6, r0
 800377a:	f004 f96d 	bl	8007a58 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800377e:	6860      	ldr	r0, [r4, #4]
 8003780:	6803      	ldr	r3, [r0, #0]
 8003782:	2100      	movs	r1, #0
 8003784:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003786:	4798      	blx	r3
 8003788:	4631      	mov	r1, r6
 800378a:	4604      	mov	r4, r0
 800378c:	f004 f93e 	bl	8007a0c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003790:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003794:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003798:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800379c:	b1dc      	cbz	r4, 80037d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 800379e:	1d23      	adds	r3, r4, #4
 80037a0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80037a4:	6833      	ldr	r3, [r6, #0]
 80037a6:	f8c4 a008 	str.w	sl, [r4, #8]
 80037aa:	4630      	mov	r0, r6
 80037ac:	68db      	ldr	r3, [r3, #12]
 80037ae:	63f4      	str	r4, [r6, #60]	; 0x3c
 80037b0:	4798      	blx	r3
    newPresenter->activate();
 80037b2:	6823      	ldr	r3, [r4, #0]
 80037b4:	4620      	mov	r0, r4
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80037ba:	4629      	mov	r1, r5
 80037bc:	4630      	mov	r0, r6
 80037be:	f012 fcf3 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80037c2:	682b      	ldr	r3, [r5, #0]
 80037c4:	4628      	mov	r0, r5
 80037c6:	691b      	ldr	r3, [r3, #16]
 80037c8:	4798      	blx	r3
    newTransition->invalidate();
 80037ca:	682b      	ldr	r3, [r5, #0]
 80037cc:	4628      	mov	r0, r5
 80037ce:	695b      	ldr	r3, [r3, #20]
}
 80037d0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80037d4:	4718      	bx	r3
    model->bind(newPresenter);
 80037d6:	4623      	mov	r3, r4
 80037d8:	e7e2      	b.n	80037a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 80037da:	bf00      	nop
 80037dc:	0802992c 	.word	0x0802992c
 80037e0:	08029e7b 	.word	0x08029e7b
 80037e4:	08029ac8 	.word	0x08029ac8
 80037e8:	08029b0f 	.word	0x08029b0f
 80037ec:	08029bb2 	.word	0x08029bb2
 80037f0:	20013804 	.word	0x20013804
 80037f4:	20013800 	.word	0x20013800

080037f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80037f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80037fc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003800:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003802:	68a0      	ldr	r0, [r4, #8]
 8003804:	6803      	ldr	r3, [r0, #0]
 8003806:	6a1b      	ldr	r3, [r3, #32]
 8003808:	4798      	blx	r3
 800380a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800380e:	d205      	bcs.n	800381c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003810:	4b42      	ldr	r3, [pc, #264]	; (800391c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003812:	4a43      	ldr	r2, [pc, #268]	; (8003920 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003814:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003816:	4843      	ldr	r0, [pc, #268]	; (8003924 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003818:	f024 f9ea 	bl	8027bf0 <__assert_func>
 800381c:	6860      	ldr	r0, [r4, #4]
 800381e:	6803      	ldr	r3, [r0, #0]
 8003820:	6a1b      	ldr	r3, [r3, #32]
 8003822:	4798      	blx	r3
 8003824:	280f      	cmp	r0, #15
 8003826:	d803      	bhi.n	8003830 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003828:	4b3f      	ldr	r3, [pc, #252]	; (8003928 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 800382a:	4a3d      	ldr	r2, [pc, #244]	; (8003920 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 800382c:	21a4      	movs	r1, #164	; 0xa4
 800382e:	e7f2      	b.n	8003816 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003830:	68e0      	ldr	r0, [r4, #12]
 8003832:	6803      	ldr	r3, [r0, #0]
 8003834:	6a1b      	ldr	r3, [r3, #32]
 8003836:	4798      	blx	r3
 8003838:	2837      	cmp	r0, #55	; 0x37
 800383a:	d803      	bhi.n	8003844 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 800383c:	4b3b      	ldr	r3, [pc, #236]	; (800392c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 800383e:	4a38      	ldr	r2, [pc, #224]	; (8003920 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003840:	21a5      	movs	r1, #165	; 0xa5
 8003842:	e7e8      	b.n	8003816 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003844:	f010 fe84 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003848:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003930 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 800384c:	3004      	adds	r0, #4
 800384e:	f010 fee5 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003852:	f8d9 0000 	ldr.w	r0, [r9]
 8003856:	b110      	cbz	r0, 800385e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003858:	6803      	ldr	r3, [r0, #0]
 800385a:	68db      	ldr	r3, [r3, #12]
 800385c:	4798      	blx	r3
    if (*currentTrans)
 800385e:	f8d9 0000 	ldr.w	r0, [r9]
 8003862:	b110      	cbz	r0, 800386a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003864:	6803      	ldr	r3, [r0, #0]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	4798      	blx	r3
    if (*currentScreen)
 800386a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003934 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 800386e:	f8d8 0000 	ldr.w	r0, [r8]
 8003872:	b110      	cbz	r0, 800387a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003874:	6803      	ldr	r3, [r0, #0]
 8003876:	695b      	ldr	r3, [r3, #20]
 8003878:	4798      	blx	r3
    if (*currentPresenter)
 800387a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800387e:	b110      	cbz	r0, 8003886 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003880:	6803      	ldr	r3, [r0, #0]
 8003882:	685b      	ldr	r3, [r3, #4]
 8003884:	4798      	blx	r3
    if (*currentScreen)
 8003886:	f8d8 0000 	ldr.w	r0, [r8]
 800388a:	b110      	cbz	r0, 8003892 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 800388c:	6803      	ldr	r3, [r0, #0]
 800388e:	681b      	ldr	r3, [r3, #0]
 8003890:	4798      	blx	r3
    if (*currentPresenter)
 8003892:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003896:	b110      	cbz	r0, 800389e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003898:	6803      	ldr	r3, [r0, #0]
 800389a:	689b      	ldr	r3, [r3, #8]
 800389c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800389e:	68e0      	ldr	r0, [r4, #12]
 80038a0:	2100      	movs	r1, #0
 80038a2:	f7ff fe37 	bl	8003514 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80038a6:	2114      	movs	r1, #20
 80038a8:	4605      	mov	r5, r0
 80038aa:	f7ff fe37 	bl	800351c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80038ae:	68a0      	ldr	r0, [r4, #8]
 80038b0:	6803      	ldr	r3, [r0, #0]
 80038b2:	2100      	movs	r1, #0
 80038b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038b6:	4798      	blx	r3
 80038b8:	4606      	mov	r6, r0
 80038ba:	f004 f86d 	bl	8007998 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80038be:	6860      	ldr	r0, [r4, #4]
 80038c0:	6803      	ldr	r3, [r0, #0]
 80038c2:	2100      	movs	r1, #0
 80038c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038c6:	4798      	blx	r3
 80038c8:	4631      	mov	r1, r6
 80038ca:	4604      	mov	r4, r0
 80038cc:	f004 f83e 	bl	800794c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80038d0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80038d4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80038d8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80038dc:	b1dc      	cbz	r4, 8003916 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 80038de:	1d23      	adds	r3, r4, #4
 80038e0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80038e4:	6833      	ldr	r3, [r6, #0]
 80038e6:	f8c4 a008 	str.w	sl, [r4, #8]
 80038ea:	4630      	mov	r0, r6
 80038ec:	68db      	ldr	r3, [r3, #12]
 80038ee:	63f4      	str	r4, [r6, #60]	; 0x3c
 80038f0:	4798      	blx	r3
    newPresenter->activate();
 80038f2:	6823      	ldr	r3, [r4, #0]
 80038f4:	4620      	mov	r0, r4
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80038fa:	4629      	mov	r1, r5
 80038fc:	4630      	mov	r0, r6
 80038fe:	f012 fc53 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003902:	682b      	ldr	r3, [r5, #0]
 8003904:	4628      	mov	r0, r5
 8003906:	691b      	ldr	r3, [r3, #16]
 8003908:	4798      	blx	r3
    newTransition->invalidate();
 800390a:	682b      	ldr	r3, [r5, #0]
 800390c:	4628      	mov	r0, r5
 800390e:	695b      	ldr	r3, [r3, #20]
}
 8003910:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003914:	4718      	bx	r3
    model->bind(newPresenter);
 8003916:	4623      	mov	r3, r4
 8003918:	e7e2      	b.n	80038e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 800391a:	bf00      	nop
 800391c:	0802992c 	.word	0x0802992c
 8003920:	08029fab 	.word	0x08029fab
 8003924:	08029ac8 	.word	0x08029ac8
 8003928:	08029b0f 	.word	0x08029b0f
 800392c:	08029bb2 	.word	0x08029bb2
 8003930:	20013804 	.word	0x20013804
 8003934:	20013800 	.word	0x20013800

08003938 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003938:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800393c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003940:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003942:	68a0      	ldr	r0, [r4, #8]
 8003944:	6803      	ldr	r3, [r0, #0]
 8003946:	6a1b      	ldr	r3, [r3, #32]
 8003948:	4798      	blx	r3
 800394a:	f241 137b 	movw	r3, #4475	; 0x117b
 800394e:	4298      	cmp	r0, r3
 8003950:	d805      	bhi.n	800395e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003952:	4b42      	ldr	r3, [pc, #264]	; (8003a5c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003954:	4a42      	ldr	r2, [pc, #264]	; (8003a60 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003956:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003958:	4842      	ldr	r0, [pc, #264]	; (8003a64 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 800395a:	f024 f949 	bl	8027bf0 <__assert_func>
 800395e:	6860      	ldr	r0, [r4, #4]
 8003960:	6803      	ldr	r3, [r0, #0]
 8003962:	6a1b      	ldr	r3, [r3, #32]
 8003964:	4798      	blx	r3
 8003966:	280f      	cmp	r0, #15
 8003968:	d803      	bhi.n	8003972 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 800396a:	4b3f      	ldr	r3, [pc, #252]	; (8003a68 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 800396c:	4a3c      	ldr	r2, [pc, #240]	; (8003a60 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800396e:	21a4      	movs	r1, #164	; 0xa4
 8003970:	e7f2      	b.n	8003958 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003972:	68e0      	ldr	r0, [r4, #12]
 8003974:	6803      	ldr	r3, [r0, #0]
 8003976:	6a1b      	ldr	r3, [r3, #32]
 8003978:	4798      	blx	r3
 800397a:	2837      	cmp	r0, #55	; 0x37
 800397c:	d803      	bhi.n	8003986 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 800397e:	4b3b      	ldr	r3, [pc, #236]	; (8003a6c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003980:	4a37      	ldr	r2, [pc, #220]	; (8003a60 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003982:	21a5      	movs	r1, #165	; 0xa5
 8003984:	e7e8      	b.n	8003958 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003986:	f010 fde3 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800398a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003a70 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 800398e:	3004      	adds	r0, #4
 8003990:	f010 fe44 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003994:	f8d9 0000 	ldr.w	r0, [r9]
 8003998:	b110      	cbz	r0, 80039a0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800399a:	6803      	ldr	r3, [r0, #0]
 800399c:	68db      	ldr	r3, [r3, #12]
 800399e:	4798      	blx	r3
    if (*currentTrans)
 80039a0:	f8d9 0000 	ldr.w	r0, [r9]
 80039a4:	b110      	cbz	r0, 80039ac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 80039a6:	6803      	ldr	r3, [r0, #0]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	4798      	blx	r3
    if (*currentScreen)
 80039ac:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003a74 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 80039b0:	f8d8 0000 	ldr.w	r0, [r8]
 80039b4:	b110      	cbz	r0, 80039bc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80039b6:	6803      	ldr	r3, [r0, #0]
 80039b8:	695b      	ldr	r3, [r3, #20]
 80039ba:	4798      	blx	r3
    if (*currentPresenter)
 80039bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039c0:	b110      	cbz	r0, 80039c8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 80039c2:	6803      	ldr	r3, [r0, #0]
 80039c4:	685b      	ldr	r3, [r3, #4]
 80039c6:	4798      	blx	r3
    if (*currentScreen)
 80039c8:	f8d8 0000 	ldr.w	r0, [r8]
 80039cc:	b110      	cbz	r0, 80039d4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 80039ce:	6803      	ldr	r3, [r0, #0]
 80039d0:	681b      	ldr	r3, [r3, #0]
 80039d2:	4798      	blx	r3
    if (*currentPresenter)
 80039d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039d8:	b110      	cbz	r0, 80039e0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80039da:	6803      	ldr	r3, [r0, #0]
 80039dc:	689b      	ldr	r3, [r3, #8]
 80039de:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80039e0:	68e0      	ldr	r0, [r4, #12]
 80039e2:	2100      	movs	r1, #0
 80039e4:	f7ff fd96 	bl	8003514 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80039e8:	2114      	movs	r1, #20
 80039ea:	4605      	mov	r5, r0
 80039ec:	f7ff fd96 	bl	800351c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80039f0:	68a0      	ldr	r0, [r4, #8]
 80039f2:	6803      	ldr	r3, [r0, #0]
 80039f4:	2100      	movs	r1, #0
 80039f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039f8:	4798      	blx	r3
 80039fa:	4606      	mov	r6, r0
 80039fc:	f003 ff6c 	bl	80078d8 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003a00:	6860      	ldr	r0, [r4, #4]
 8003a02:	6803      	ldr	r3, [r0, #0]
 8003a04:	2100      	movs	r1, #0
 8003a06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a08:	4798      	blx	r3
 8003a0a:	4631      	mov	r1, r6
 8003a0c:	4604      	mov	r4, r0
 8003a0e:	f003 ff3d 	bl	800788c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003a12:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003a16:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003a1a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003a1e:	b1dc      	cbz	r4, 8003a58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8003a20:	1d23      	adds	r3, r4, #4
 8003a22:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003a26:	6833      	ldr	r3, [r6, #0]
 8003a28:	f8c4 a008 	str.w	sl, [r4, #8]
 8003a2c:	4630      	mov	r0, r6
 8003a2e:	68db      	ldr	r3, [r3, #12]
 8003a30:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003a32:	4798      	blx	r3
    newPresenter->activate();
 8003a34:	6823      	ldr	r3, [r4, #0]
 8003a36:	4620      	mov	r0, r4
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003a3c:	4629      	mov	r1, r5
 8003a3e:	4630      	mov	r0, r6
 8003a40:	f012 fbb2 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003a44:	682b      	ldr	r3, [r5, #0]
 8003a46:	4628      	mov	r0, r5
 8003a48:	691b      	ldr	r3, [r3, #16]
 8003a4a:	4798      	blx	r3
    newTransition->invalidate();
 8003a4c:	682b      	ldr	r3, [r5, #0]
 8003a4e:	4628      	mov	r0, r5
 8003a50:	695b      	ldr	r3, [r3, #20]
}
 8003a52:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a56:	4718      	bx	r3
    model->bind(newPresenter);
 8003a58:	4623      	mov	r3, r4
 8003a5a:	e7e2      	b.n	8003a22 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8003a5c:	0802992c 	.word	0x0802992c
 8003a60:	0802a0c9 	.word	0x0802a0c9
 8003a64:	08029ac8 	.word	0x08029ac8
 8003a68:	08029b0f 	.word	0x08029b0f
 8003a6c:	08029bb2 	.word	0x08029bb2
 8003a70:	20013804 	.word	0x20013804
 8003a74:	20013800 	.word	0x20013800

08003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003a78:	6803      	ldr	r3, [r0, #0]
 8003a7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a7c:	4718      	bx	r3
	...

08003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003a80:	4b12      	ldr	r3, [pc, #72]	; (8003acc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003a82:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003a84:	6003      	str	r3, [r0, #0]
 8003a86:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003a8a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003a8c:	4b10      	ldr	r3, [pc, #64]	; (8003ad0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003a8e:	7241      	strb	r1, [r0, #9]
 8003a90:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003a92:	4910      	ldr	r1, [pc, #64]	; (8003ad4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003a94:	4b10      	ldr	r3, [pc, #64]	; (8003ad8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003a96:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003a9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003a9e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003aa0:	2200      	movs	r2, #0
 8003aa2:	6042      	str	r2, [r0, #4]
 8003aa4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003aa6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003aa8:	81c2      	strh	r2, [r0, #14]
          solid()
 8003aaa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003aae:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003ab2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003ab6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003aba:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003abc:	9100      	str	r1, [sp, #0]
 8003abe:	3010      	adds	r0, #16
 8003ac0:	4611      	mov	r1, r2
 8003ac2:	f7fe fcf1 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003ac6:	4620      	mov	r0, r4
 8003ac8:	b002      	add	sp, #8
 8003aca:	bd10      	pop	{r4, pc}
 8003acc:	0802aecc 	.word	0x0802aecc
 8003ad0:	0802add4 	.word	0x0802add4
 8003ad4:	200137b2 	.word	0x200137b2
 8003ad8:	200137b0 	.word	0x200137b0

08003adc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8003adc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ae0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ae4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003ae6:	68a0      	ldr	r0, [r4, #8]
 8003ae8:	6803      	ldr	r3, [r0, #0]
 8003aea:	6a1b      	ldr	r3, [r3, #32]
 8003aec:	4798      	blx	r3
 8003aee:	f241 03af 	movw	r3, #4271	; 0x10af
 8003af2:	4298      	cmp	r0, r3
 8003af4:	d805      	bhi.n	8003b02 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8003af6:	4b42      	ldr	r3, [pc, #264]	; (8003c00 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8003af8:	4a42      	ldr	r2, [pc, #264]	; (8003c04 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003afa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003afc:	4842      	ldr	r0, [pc, #264]	; (8003c08 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8003afe:	f024 f877 	bl	8027bf0 <__assert_func>
 8003b02:	6860      	ldr	r0, [r4, #4]
 8003b04:	6803      	ldr	r3, [r0, #0]
 8003b06:	6a1b      	ldr	r3, [r3, #32]
 8003b08:	4798      	blx	r3
 8003b0a:	280f      	cmp	r0, #15
 8003b0c:	d803      	bhi.n	8003b16 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8003b0e:	4b3f      	ldr	r3, [pc, #252]	; (8003c0c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8003b10:	4a3c      	ldr	r2, [pc, #240]	; (8003c04 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003b12:	21a4      	movs	r1, #164	; 0xa4
 8003b14:	e7f2      	b.n	8003afc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003b16:	68e0      	ldr	r0, [r4, #12]
 8003b18:	6803      	ldr	r3, [r0, #0]
 8003b1a:	6a1b      	ldr	r3, [r3, #32]
 8003b1c:	4798      	blx	r3
 8003b1e:	2837      	cmp	r0, #55	; 0x37
 8003b20:	d803      	bhi.n	8003b2a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8003b22:	4b3b      	ldr	r3, [pc, #236]	; (8003c10 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8003b24:	4a37      	ldr	r2, [pc, #220]	; (8003c04 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003b26:	21a5      	movs	r1, #165	; 0xa5
 8003b28:	e7e8      	b.n	8003afc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003b2a:	f010 fd11 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003b2e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003c14 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8003b32:	3004      	adds	r0, #4
 8003b34:	f010 fd72 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003b38:	f8d9 0000 	ldr.w	r0, [r9]
 8003b3c:	b110      	cbz	r0, 8003b44 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003b3e:	6803      	ldr	r3, [r0, #0]
 8003b40:	68db      	ldr	r3, [r3, #12]
 8003b42:	4798      	blx	r3
    if (*currentTrans)
 8003b44:	f8d9 0000 	ldr.w	r0, [r9]
 8003b48:	b110      	cbz	r0, 8003b50 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003b4a:	6803      	ldr	r3, [r0, #0]
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	4798      	blx	r3
    if (*currentScreen)
 8003b50:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003c18 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8003b54:	f8d8 0000 	ldr.w	r0, [r8]
 8003b58:	b110      	cbz	r0, 8003b60 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003b5a:	6803      	ldr	r3, [r0, #0]
 8003b5c:	695b      	ldr	r3, [r3, #20]
 8003b5e:	4798      	blx	r3
    if (*currentPresenter)
 8003b60:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b64:	b110      	cbz	r0, 8003b6c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003b66:	6803      	ldr	r3, [r0, #0]
 8003b68:	685b      	ldr	r3, [r3, #4]
 8003b6a:	4798      	blx	r3
    if (*currentScreen)
 8003b6c:	f8d8 0000 	ldr.w	r0, [r8]
 8003b70:	b110      	cbz	r0, 8003b78 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003b72:	6803      	ldr	r3, [r0, #0]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	4798      	blx	r3
    if (*currentPresenter)
 8003b78:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b7c:	b110      	cbz	r0, 8003b84 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003b7e:	6803      	ldr	r3, [r0, #0]
 8003b80:	689b      	ldr	r3, [r3, #8]
 8003b82:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b84:	68e0      	ldr	r0, [r4, #12]
 8003b86:	2100      	movs	r1, #0
 8003b88:	f7ff ff76 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003b8c:	2114      	movs	r1, #20
 8003b8e:	4605      	mov	r5, r0
 8003b90:	f7ff ff76 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b94:	68a0      	ldr	r0, [r4, #8]
 8003b96:	6803      	ldr	r3, [r0, #0]
 8003b98:	2100      	movs	r1, #0
 8003b9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b9c:	4798      	blx	r3
 8003b9e:	4606      	mov	r6, r0
 8003ba0:	f004 f940 	bl	8007e24 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ba4:	6860      	ldr	r0, [r4, #4]
 8003ba6:	6803      	ldr	r3, [r0, #0]
 8003ba8:	2100      	movs	r1, #0
 8003baa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bac:	4798      	blx	r3
 8003bae:	4631      	mov	r1, r6
 8003bb0:	4604      	mov	r4, r0
 8003bb2:	f004 f911 	bl	8007dd8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8003bb6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003bba:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003bbe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003bc2:	b1dc      	cbz	r4, 8003bfc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8003bc4:	1d23      	adds	r3, r4, #4
 8003bc6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003bca:	6833      	ldr	r3, [r6, #0]
 8003bcc:	f8c4 a008 	str.w	sl, [r4, #8]
 8003bd0:	4630      	mov	r0, r6
 8003bd2:	68db      	ldr	r3, [r3, #12]
 8003bd4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003bd6:	4798      	blx	r3
    newPresenter->activate();
 8003bd8:	6823      	ldr	r3, [r4, #0]
 8003bda:	4620      	mov	r0, r4
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003be0:	4629      	mov	r1, r5
 8003be2:	4630      	mov	r0, r6
 8003be4:	f012 fae0 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003be8:	682b      	ldr	r3, [r5, #0]
 8003bea:	4628      	mov	r0, r5
 8003bec:	691b      	ldr	r3, [r3, #16]
 8003bee:	4798      	blx	r3
    newTransition->invalidate();
 8003bf0:	682b      	ldr	r3, [r5, #0]
 8003bf2:	4628      	mov	r0, r5
 8003bf4:	695b      	ldr	r3, [r3, #20]
}
 8003bf6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bfa:	4718      	bx	r3
    model->bind(newPresenter);
 8003bfc:	4623      	mov	r3, r4
 8003bfe:	e7e2      	b.n	8003bc6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8003c00:	0802992c 	.word	0x0802992c
 8003c04:	0802a1e3 	.word	0x0802a1e3
 8003c08:	08029ac8 	.word	0x08029ac8
 8003c0c:	08029b0f 	.word	0x08029b0f
 8003c10:	08029bb2 	.word	0x08029bb2
 8003c14:	20013804 	.word	0x20013804
 8003c18:	20013800 	.word	0x20013800

08003c1c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8003c1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c20:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003c24:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c26:	68a0      	ldr	r0, [r4, #8]
 8003c28:	6803      	ldr	r3, [r0, #0]
 8003c2a:	6a1b      	ldr	r3, [r3, #32]
 8003c2c:	4798      	blx	r3
 8003c2e:	f241 035b 	movw	r3, #4187	; 0x105b
 8003c32:	4298      	cmp	r0, r3
 8003c34:	d805      	bhi.n	8003c42 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8003c36:	4b42      	ldr	r3, [pc, #264]	; (8003d40 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8003c38:	4a42      	ldr	r2, [pc, #264]	; (8003d44 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8003c3a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c3c:	4842      	ldr	r0, [pc, #264]	; (8003d48 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8003c3e:	f023 ffd7 	bl	8027bf0 <__assert_func>
 8003c42:	6860      	ldr	r0, [r4, #4]
 8003c44:	6803      	ldr	r3, [r0, #0]
 8003c46:	6a1b      	ldr	r3, [r3, #32]
 8003c48:	4798      	blx	r3
 8003c4a:	280f      	cmp	r0, #15
 8003c4c:	d803      	bhi.n	8003c56 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8003c4e:	4b3f      	ldr	r3, [pc, #252]	; (8003d4c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8003c50:	4a3c      	ldr	r2, [pc, #240]	; (8003d44 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8003c52:	21a4      	movs	r1, #164	; 0xa4
 8003c54:	e7f2      	b.n	8003c3c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c56:	68e0      	ldr	r0, [r4, #12]
 8003c58:	6803      	ldr	r3, [r0, #0]
 8003c5a:	6a1b      	ldr	r3, [r3, #32]
 8003c5c:	4798      	blx	r3
 8003c5e:	2837      	cmp	r0, #55	; 0x37
 8003c60:	d803      	bhi.n	8003c6a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8003c62:	4b3b      	ldr	r3, [pc, #236]	; (8003d50 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8003c64:	4a37      	ldr	r2, [pc, #220]	; (8003d44 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8003c66:	21a5      	movs	r1, #165	; 0xa5
 8003c68:	e7e8      	b.n	8003c3c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003c6a:	f010 fc71 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c6e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003d54 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8003c72:	3004      	adds	r0, #4
 8003c74:	f010 fcd2 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c78:	f8d9 0000 	ldr.w	r0, [r9]
 8003c7c:	b110      	cbz	r0, 8003c84 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003c7e:	6803      	ldr	r3, [r0, #0]
 8003c80:	68db      	ldr	r3, [r3, #12]
 8003c82:	4798      	blx	r3
    if (*currentTrans)
 8003c84:	f8d9 0000 	ldr.w	r0, [r9]
 8003c88:	b110      	cbz	r0, 8003c90 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003c8a:	6803      	ldr	r3, [r0, #0]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	4798      	blx	r3
    if (*currentScreen)
 8003c90:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003d58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8003c94:	f8d8 0000 	ldr.w	r0, [r8]
 8003c98:	b110      	cbz	r0, 8003ca0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003c9a:	6803      	ldr	r3, [r0, #0]
 8003c9c:	695b      	ldr	r3, [r3, #20]
 8003c9e:	4798      	blx	r3
    if (*currentPresenter)
 8003ca0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ca4:	b110      	cbz	r0, 8003cac <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003ca6:	6803      	ldr	r3, [r0, #0]
 8003ca8:	685b      	ldr	r3, [r3, #4]
 8003caa:	4798      	blx	r3
    if (*currentScreen)
 8003cac:	f8d8 0000 	ldr.w	r0, [r8]
 8003cb0:	b110      	cbz	r0, 8003cb8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003cb2:	6803      	ldr	r3, [r0, #0]
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	4798      	blx	r3
    if (*currentPresenter)
 8003cb8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003cbc:	b110      	cbz	r0, 8003cc4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003cbe:	6803      	ldr	r3, [r0, #0]
 8003cc0:	689b      	ldr	r3, [r3, #8]
 8003cc2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003cc4:	68e0      	ldr	r0, [r4, #12]
 8003cc6:	2100      	movs	r1, #0
 8003cc8:	f7ff fed6 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003ccc:	2114      	movs	r1, #20
 8003cce:	4605      	mov	r5, r0
 8003cd0:	f7ff fed6 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003cd4:	68a0      	ldr	r0, [r4, #8]
 8003cd6:	6803      	ldr	r3, [r0, #0]
 8003cd8:	2100      	movs	r1, #0
 8003cda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cdc:	4798      	blx	r3
 8003cde:	4606      	mov	r6, r0
 8003ce0:	f003 fd72 	bl	80077c8 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ce4:	6860      	ldr	r0, [r4, #4]
 8003ce6:	6803      	ldr	r3, [r0, #0]
 8003ce8:	2100      	movs	r1, #0
 8003cea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cec:	4798      	blx	r3
 8003cee:	4631      	mov	r1, r6
 8003cf0:	4604      	mov	r4, r0
 8003cf2:	f003 fd43 	bl	800777c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8003cf6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003cfa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003cfe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003d02:	b1dc      	cbz	r4, 8003d3c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8003d04:	1d23      	adds	r3, r4, #4
 8003d06:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003d0a:	6833      	ldr	r3, [r6, #0]
 8003d0c:	f8c4 a008 	str.w	sl, [r4, #8]
 8003d10:	4630      	mov	r0, r6
 8003d12:	68db      	ldr	r3, [r3, #12]
 8003d14:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003d16:	4798      	blx	r3
    newPresenter->activate();
 8003d18:	6823      	ldr	r3, [r4, #0]
 8003d1a:	4620      	mov	r0, r4
 8003d1c:	681b      	ldr	r3, [r3, #0]
 8003d1e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d20:	4629      	mov	r1, r5
 8003d22:	4630      	mov	r0, r6
 8003d24:	f012 fa40 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d28:	682b      	ldr	r3, [r5, #0]
 8003d2a:	4628      	mov	r0, r5
 8003d2c:	691b      	ldr	r3, [r3, #16]
 8003d2e:	4798      	blx	r3
    newTransition->invalidate();
 8003d30:	682b      	ldr	r3, [r5, #0]
 8003d32:	4628      	mov	r0, r5
 8003d34:	695b      	ldr	r3, [r3, #20]
}
 8003d36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d3a:	4718      	bx	r3
    model->bind(newPresenter);
 8003d3c:	4623      	mov	r3, r4
 8003d3e:	e7e2      	b.n	8003d06 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8003d40:	0802992c 	.word	0x0802992c
 8003d44:	0802a303 	.word	0x0802a303
 8003d48:	08029ac8 	.word	0x08029ac8
 8003d4c:	08029b0f 	.word	0x08029b0f
 8003d50:	08029bb2 	.word	0x08029bb2
 8003d54:	20013804 	.word	0x20013804
 8003d58:	20013800 	.word	0x20013800

08003d5c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8003d5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003d60:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003d64:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003d66:	68a0      	ldr	r0, [r4, #8]
 8003d68:	6803      	ldr	r3, [r0, #0]
 8003d6a:	6a1b      	ldr	r3, [r3, #32]
 8003d6c:	4798      	blx	r3
 8003d6e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003d72:	d205      	bcs.n	8003d80 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8003d74:	4b42      	ldr	r3, [pc, #264]	; (8003e80 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 8003d76:	4a43      	ldr	r2, [pc, #268]	; (8003e84 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8003d78:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d7a:	4843      	ldr	r0, [pc, #268]	; (8003e88 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8003d7c:	f023 ff38 	bl	8027bf0 <__assert_func>
 8003d80:	6860      	ldr	r0, [r4, #4]
 8003d82:	6803      	ldr	r3, [r0, #0]
 8003d84:	6a1b      	ldr	r3, [r3, #32]
 8003d86:	4798      	blx	r3
 8003d88:	280f      	cmp	r0, #15
 8003d8a:	d803      	bhi.n	8003d94 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8003d8c:	4b3f      	ldr	r3, [pc, #252]	; (8003e8c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8003d8e:	4a3d      	ldr	r2, [pc, #244]	; (8003e84 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8003d90:	21a4      	movs	r1, #164	; 0xa4
 8003d92:	e7f2      	b.n	8003d7a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d94:	68e0      	ldr	r0, [r4, #12]
 8003d96:	6803      	ldr	r3, [r0, #0]
 8003d98:	6a1b      	ldr	r3, [r3, #32]
 8003d9a:	4798      	blx	r3
 8003d9c:	2837      	cmp	r0, #55	; 0x37
 8003d9e:	d803      	bhi.n	8003da8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8003da0:	4b3b      	ldr	r3, [pc, #236]	; (8003e90 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8003da2:	4a38      	ldr	r2, [pc, #224]	; (8003e84 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8003da4:	21a5      	movs	r1, #165	; 0xa5
 8003da6:	e7e8      	b.n	8003d7a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003da8:	f010 fbd2 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003dac:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e94 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8003db0:	3004      	adds	r0, #4
 8003db2:	f010 fc33 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003db6:	f8d9 0000 	ldr.w	r0, [r9]
 8003dba:	b110      	cbz	r0, 8003dc2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003dbc:	6803      	ldr	r3, [r0, #0]
 8003dbe:	68db      	ldr	r3, [r3, #12]
 8003dc0:	4798      	blx	r3
    if (*currentTrans)
 8003dc2:	f8d9 0000 	ldr.w	r0, [r9]
 8003dc6:	b110      	cbz	r0, 8003dce <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003dc8:	6803      	ldr	r3, [r0, #0]
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	4798      	blx	r3
    if (*currentScreen)
 8003dce:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003e98 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8003dd2:	f8d8 0000 	ldr.w	r0, [r8]
 8003dd6:	b110      	cbz	r0, 8003dde <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003dd8:	6803      	ldr	r3, [r0, #0]
 8003dda:	695b      	ldr	r3, [r3, #20]
 8003ddc:	4798      	blx	r3
    if (*currentPresenter)
 8003dde:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003de2:	b110      	cbz	r0, 8003dea <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003de4:	6803      	ldr	r3, [r0, #0]
 8003de6:	685b      	ldr	r3, [r3, #4]
 8003de8:	4798      	blx	r3
    if (*currentScreen)
 8003dea:	f8d8 0000 	ldr.w	r0, [r8]
 8003dee:	b110      	cbz	r0, 8003df6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003df0:	6803      	ldr	r3, [r0, #0]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	4798      	blx	r3
    if (*currentPresenter)
 8003df6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003dfa:	b110      	cbz	r0, 8003e02 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003dfc:	6803      	ldr	r3, [r0, #0]
 8003dfe:	689b      	ldr	r3, [r3, #8]
 8003e00:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003e02:	68e0      	ldr	r0, [r4, #12]
 8003e04:	2100      	movs	r1, #0
 8003e06:	f7ff fe37 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003e0a:	2114      	movs	r1, #20
 8003e0c:	4605      	mov	r5, r0
 8003e0e:	f7ff fe37 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003e12:	68a0      	ldr	r0, [r4, #8]
 8003e14:	6803      	ldr	r3, [r0, #0]
 8003e16:	2100      	movs	r1, #0
 8003e18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e1a:	4798      	blx	r3
 8003e1c:	4606      	mov	r6, r0
 8003e1e:	f003 fc79 	bl	8007714 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003e22:	6860      	ldr	r0, [r4, #4]
 8003e24:	6803      	ldr	r3, [r0, #0]
 8003e26:	2100      	movs	r1, #0
 8003e28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e2a:	4798      	blx	r3
 8003e2c:	4631      	mov	r1, r6
 8003e2e:	4604      	mov	r4, r0
 8003e30:	f003 fc4a 	bl	80076c8 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003e34:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003e38:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003e3c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003e40:	b1dc      	cbz	r4, 8003e7a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 8003e42:	1d23      	adds	r3, r4, #4
 8003e44:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003e48:	6833      	ldr	r3, [r6, #0]
 8003e4a:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e4e:	4630      	mov	r0, r6
 8003e50:	68db      	ldr	r3, [r3, #12]
 8003e52:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003e54:	4798      	blx	r3
    newPresenter->activate();
 8003e56:	6823      	ldr	r3, [r4, #0]
 8003e58:	4620      	mov	r0, r4
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003e5e:	4629      	mov	r1, r5
 8003e60:	4630      	mov	r0, r6
 8003e62:	f012 f9a1 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003e66:	682b      	ldr	r3, [r5, #0]
 8003e68:	4628      	mov	r0, r5
 8003e6a:	691b      	ldr	r3, [r3, #16]
 8003e6c:	4798      	blx	r3
    newTransition->invalidate();
 8003e6e:	682b      	ldr	r3, [r5, #0]
 8003e70:	4628      	mov	r0, r5
 8003e72:	695b      	ldr	r3, [r3, #20]
}
 8003e74:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e78:	4718      	bx	r3
    model->bind(newPresenter);
 8003e7a:	4623      	mov	r3, r4
 8003e7c:	e7e2      	b.n	8003e44 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8003e7e:	bf00      	nop
 8003e80:	0802992c 	.word	0x0802992c
 8003e84:	0802a429 	.word	0x0802a429
 8003e88:	08029ac8 	.word	0x08029ac8
 8003e8c:	08029b0f 	.word	0x08029b0f
 8003e90:	08029bb2 	.word	0x08029bb2
 8003e94:	20013804 	.word	0x20013804
 8003e98:	20013800 	.word	0x20013800

08003e9c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8003e9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ea0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ea4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003ea6:	68a0      	ldr	r0, [r4, #8]
 8003ea8:	6803      	ldr	r3, [r0, #0]
 8003eaa:	6a1b      	ldr	r3, [r3, #32]
 8003eac:	4798      	blx	r3
 8003eae:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003eb2:	4298      	cmp	r0, r3
 8003eb4:	d805      	bhi.n	8003ec2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8003eb6:	4b42      	ldr	r3, [pc, #264]	; (8003fc0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8003eb8:	4a42      	ldr	r2, [pc, #264]	; (8003fc4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8003eba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003ebc:	4842      	ldr	r0, [pc, #264]	; (8003fc8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8003ebe:	f023 fe97 	bl	8027bf0 <__assert_func>
 8003ec2:	6860      	ldr	r0, [r4, #4]
 8003ec4:	6803      	ldr	r3, [r0, #0]
 8003ec6:	6a1b      	ldr	r3, [r3, #32]
 8003ec8:	4798      	blx	r3
 8003eca:	280f      	cmp	r0, #15
 8003ecc:	d803      	bhi.n	8003ed6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8003ece:	4b3f      	ldr	r3, [pc, #252]	; (8003fcc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8003ed0:	4a3c      	ldr	r2, [pc, #240]	; (8003fc4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8003ed2:	21a4      	movs	r1, #164	; 0xa4
 8003ed4:	e7f2      	b.n	8003ebc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ed6:	68e0      	ldr	r0, [r4, #12]
 8003ed8:	6803      	ldr	r3, [r0, #0]
 8003eda:	6a1b      	ldr	r3, [r3, #32]
 8003edc:	4798      	blx	r3
 8003ede:	2837      	cmp	r0, #55	; 0x37
 8003ee0:	d803      	bhi.n	8003eea <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8003ee2:	4b3b      	ldr	r3, [pc, #236]	; (8003fd0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8003ee4:	4a37      	ldr	r2, [pc, #220]	; (8003fc4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8003ee6:	21a5      	movs	r1, #165	; 0xa5
 8003ee8:	e7e8      	b.n	8003ebc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003eea:	f010 fb31 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003eee:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003fd4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8003ef2:	3004      	adds	r0, #4
 8003ef4:	f010 fb92 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ef8:	f8d9 0000 	ldr.w	r0, [r9]
 8003efc:	b110      	cbz	r0, 8003f04 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003efe:	6803      	ldr	r3, [r0, #0]
 8003f00:	68db      	ldr	r3, [r3, #12]
 8003f02:	4798      	blx	r3
    if (*currentTrans)
 8003f04:	f8d9 0000 	ldr.w	r0, [r9]
 8003f08:	b110      	cbz	r0, 8003f10 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003f0a:	6803      	ldr	r3, [r0, #0]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	4798      	blx	r3
    if (*currentScreen)
 8003f10:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003fd8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8003f14:	f8d8 0000 	ldr.w	r0, [r8]
 8003f18:	b110      	cbz	r0, 8003f20 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003f1a:	6803      	ldr	r3, [r0, #0]
 8003f1c:	695b      	ldr	r3, [r3, #20]
 8003f1e:	4798      	blx	r3
    if (*currentPresenter)
 8003f20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f24:	b110      	cbz	r0, 8003f2c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003f26:	6803      	ldr	r3, [r0, #0]
 8003f28:	685b      	ldr	r3, [r3, #4]
 8003f2a:	4798      	blx	r3
    if (*currentScreen)
 8003f2c:	f8d8 0000 	ldr.w	r0, [r8]
 8003f30:	b110      	cbz	r0, 8003f38 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003f32:	6803      	ldr	r3, [r0, #0]
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	4798      	blx	r3
    if (*currentPresenter)
 8003f38:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f3c:	b110      	cbz	r0, 8003f44 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003f3e:	6803      	ldr	r3, [r0, #0]
 8003f40:	689b      	ldr	r3, [r3, #8]
 8003f42:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003f44:	68e0      	ldr	r0, [r4, #12]
 8003f46:	2100      	movs	r1, #0
 8003f48:	f7ff fd96 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003f4c:	2114      	movs	r1, #20
 8003f4e:	4605      	mov	r5, r0
 8003f50:	f7ff fd96 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f54:	68a0      	ldr	r0, [r4, #8]
 8003f56:	6803      	ldr	r3, [r0, #0]
 8003f58:	2100      	movs	r1, #0
 8003f5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f5c:	4798      	blx	r3
 8003f5e:	4606      	mov	r6, r0
 8003f60:	f003 fe16 	bl	8007b90 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f64:	6860      	ldr	r0, [r4, #4]
 8003f66:	6803      	ldr	r3, [r0, #0]
 8003f68:	2100      	movs	r1, #0
 8003f6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f6c:	4798      	blx	r3
 8003f6e:	4631      	mov	r1, r6
 8003f70:	4604      	mov	r4, r0
 8003f72:	f003 fde7 	bl	8007b44 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8003f76:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f7a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f7e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f82:	b1dc      	cbz	r4, 8003fbc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8003f84:	1d23      	adds	r3, r4, #4
 8003f86:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f8a:	6833      	ldr	r3, [r6, #0]
 8003f8c:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f90:	4630      	mov	r0, r6
 8003f92:	68db      	ldr	r3, [r3, #12]
 8003f94:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f96:	4798      	blx	r3
    newPresenter->activate();
 8003f98:	6823      	ldr	r3, [r4, #0]
 8003f9a:	4620      	mov	r0, r4
 8003f9c:	681b      	ldr	r3, [r3, #0]
 8003f9e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003fa0:	4629      	mov	r1, r5
 8003fa2:	4630      	mov	r0, r6
 8003fa4:	f012 f900 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003fa8:	682b      	ldr	r3, [r5, #0]
 8003faa:	4628      	mov	r0, r5
 8003fac:	691b      	ldr	r3, [r3, #16]
 8003fae:	4798      	blx	r3
    newTransition->invalidate();
 8003fb0:	682b      	ldr	r3, [r5, #0]
 8003fb2:	4628      	mov	r0, r5
 8003fb4:	695b      	ldr	r3, [r3, #20]
}
 8003fb6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fba:	4718      	bx	r3
    model->bind(newPresenter);
 8003fbc:	4623      	mov	r3, r4
 8003fbe:	e7e2      	b.n	8003f86 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8003fc0:	0802992c 	.word	0x0802992c
 8003fc4:	0802a547 	.word	0x0802a547
 8003fc8:	08029ac8 	.word	0x08029ac8
 8003fcc:	08029b0f 	.word	0x08029b0f
 8003fd0:	08029bb2 	.word	0x08029bb2
 8003fd4:	20013804 	.word	0x20013804
 8003fd8:	20013800 	.word	0x20013800

08003fdc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8003fdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003fe0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003fe4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003fe6:	68a0      	ldr	r0, [r4, #8]
 8003fe8:	6803      	ldr	r3, [r0, #0]
 8003fea:	6a1b      	ldr	r3, [r3, #32]
 8003fec:	4798      	blx	r3
 8003fee:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003ff2:	4298      	cmp	r0, r3
 8003ff4:	d805      	bhi.n	8004002 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8003ff6:	4b42      	ldr	r3, [pc, #264]	; (8004100 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8003ff8:	4a42      	ldr	r2, [pc, #264]	; (8004104 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8003ffa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003ffc:	4842      	ldr	r0, [pc, #264]	; (8004108 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8003ffe:	f023 fdf7 	bl	8027bf0 <__assert_func>
 8004002:	6860      	ldr	r0, [r4, #4]
 8004004:	6803      	ldr	r3, [r0, #0]
 8004006:	6a1b      	ldr	r3, [r3, #32]
 8004008:	4798      	blx	r3
 800400a:	280f      	cmp	r0, #15
 800400c:	d803      	bhi.n	8004016 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 800400e:	4b3f      	ldr	r3, [pc, #252]	; (800410c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8004010:	4a3c      	ldr	r2, [pc, #240]	; (8004104 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004012:	21a4      	movs	r1, #164	; 0xa4
 8004014:	e7f2      	b.n	8003ffc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004016:	68e0      	ldr	r0, [r4, #12]
 8004018:	6803      	ldr	r3, [r0, #0]
 800401a:	6a1b      	ldr	r3, [r3, #32]
 800401c:	4798      	blx	r3
 800401e:	2837      	cmp	r0, #55	; 0x37
 8004020:	d803      	bhi.n	800402a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8004022:	4b3b      	ldr	r3, [pc, #236]	; (8004110 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8004024:	4a37      	ldr	r2, [pc, #220]	; (8004104 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004026:	21a5      	movs	r1, #165	; 0xa5
 8004028:	e7e8      	b.n	8003ffc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800402a:	f010 fa91 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800402e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004114 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8004032:	3004      	adds	r0, #4
 8004034:	f010 faf2 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004038:	f8d9 0000 	ldr.w	r0, [r9]
 800403c:	b110      	cbz	r0, 8004044 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800403e:	6803      	ldr	r3, [r0, #0]
 8004040:	68db      	ldr	r3, [r3, #12]
 8004042:	4798      	blx	r3
    if (*currentTrans)
 8004044:	f8d9 0000 	ldr.w	r0, [r9]
 8004048:	b110      	cbz	r0, 8004050 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800404a:	6803      	ldr	r3, [r0, #0]
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	4798      	blx	r3
    if (*currentScreen)
 8004050:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004118 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8004054:	f8d8 0000 	ldr.w	r0, [r8]
 8004058:	b110      	cbz	r0, 8004060 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800405a:	6803      	ldr	r3, [r0, #0]
 800405c:	695b      	ldr	r3, [r3, #20]
 800405e:	4798      	blx	r3
    if (*currentPresenter)
 8004060:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004064:	b110      	cbz	r0, 800406c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004066:	6803      	ldr	r3, [r0, #0]
 8004068:	685b      	ldr	r3, [r3, #4]
 800406a:	4798      	blx	r3
    if (*currentScreen)
 800406c:	f8d8 0000 	ldr.w	r0, [r8]
 8004070:	b110      	cbz	r0, 8004078 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004072:	6803      	ldr	r3, [r0, #0]
 8004074:	681b      	ldr	r3, [r3, #0]
 8004076:	4798      	blx	r3
    if (*currentPresenter)
 8004078:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800407c:	b110      	cbz	r0, 8004084 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800407e:	6803      	ldr	r3, [r0, #0]
 8004080:	689b      	ldr	r3, [r3, #8]
 8004082:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004084:	68e0      	ldr	r0, [r4, #12]
 8004086:	2100      	movs	r1, #0
 8004088:	f7ff fcf6 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800408c:	2114      	movs	r1, #20
 800408e:	4605      	mov	r5, r0
 8004090:	f7ff fcf6 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004094:	68a0      	ldr	r0, [r4, #8]
 8004096:	6803      	ldr	r3, [r0, #0]
 8004098:	2100      	movs	r1, #0
 800409a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800409c:	4798      	blx	r3
 800409e:	4606      	mov	r6, r0
 80040a0:	f003 fd34 	bl	8007b0c <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80040a4:	6860      	ldr	r0, [r4, #4]
 80040a6:	6803      	ldr	r3, [r0, #0]
 80040a8:	2100      	movs	r1, #0
 80040aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040ac:	4798      	blx	r3
 80040ae:	4631      	mov	r1, r6
 80040b0:	4604      	mov	r4, r0
 80040b2:	f003 fd05 	bl	8007ac0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80040b6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80040ba:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80040be:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80040c2:	b1dc      	cbz	r4, 80040fc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80040c4:	1d23      	adds	r3, r4, #4
 80040c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80040ca:	6833      	ldr	r3, [r6, #0]
 80040cc:	f8c4 a008 	str.w	sl, [r4, #8]
 80040d0:	4630      	mov	r0, r6
 80040d2:	68db      	ldr	r3, [r3, #12]
 80040d4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80040d6:	4798      	blx	r3
    newPresenter->activate();
 80040d8:	6823      	ldr	r3, [r4, #0]
 80040da:	4620      	mov	r0, r4
 80040dc:	681b      	ldr	r3, [r3, #0]
 80040de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80040e0:	4629      	mov	r1, r5
 80040e2:	4630      	mov	r0, r6
 80040e4:	f012 f860 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80040e8:	682b      	ldr	r3, [r5, #0]
 80040ea:	4628      	mov	r0, r5
 80040ec:	691b      	ldr	r3, [r3, #16]
 80040ee:	4798      	blx	r3
    newTransition->invalidate();
 80040f0:	682b      	ldr	r3, [r5, #0]
 80040f2:	4628      	mov	r0, r5
 80040f4:	695b      	ldr	r3, [r3, #20]
}
 80040f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040fa:	4718      	bx	r3
    model->bind(newPresenter);
 80040fc:	4623      	mov	r3, r4
 80040fe:	e7e2      	b.n	80040c6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8004100:	0802992c 	.word	0x0802992c
 8004104:	0802a68b 	.word	0x0802a68b
 8004108:	08029ac8 	.word	0x08029ac8
 800410c:	08029b0f 	.word	0x08029b0f
 8004110:	08029bb2 	.word	0x08029bb2
 8004114:	20013804 	.word	0x20013804
 8004118:	20013800 	.word	0x20013800

0800411c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 800411c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004120:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004124:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004126:	68a0      	ldr	r0, [r4, #8]
 8004128:	6803      	ldr	r3, [r0, #0]
 800412a:	6a1b      	ldr	r3, [r3, #32]
 800412c:	4798      	blx	r3
 800412e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004132:	d205      	bcs.n	8004140 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8004134:	4b42      	ldr	r3, [pc, #264]	; (8004240 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8004136:	4a43      	ldr	r2, [pc, #268]	; (8004244 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004138:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800413a:	4843      	ldr	r0, [pc, #268]	; (8004248 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 800413c:	f023 fd58 	bl	8027bf0 <__assert_func>
 8004140:	6860      	ldr	r0, [r4, #4]
 8004142:	6803      	ldr	r3, [r0, #0]
 8004144:	6a1b      	ldr	r3, [r3, #32]
 8004146:	4798      	blx	r3
 8004148:	280f      	cmp	r0, #15
 800414a:	d803      	bhi.n	8004154 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 800414c:	4b3f      	ldr	r3, [pc, #252]	; (800424c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800414e:	4a3d      	ldr	r2, [pc, #244]	; (8004244 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004150:	21a4      	movs	r1, #164	; 0xa4
 8004152:	e7f2      	b.n	800413a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004154:	68e0      	ldr	r0, [r4, #12]
 8004156:	6803      	ldr	r3, [r0, #0]
 8004158:	6a1b      	ldr	r3, [r3, #32]
 800415a:	4798      	blx	r3
 800415c:	2837      	cmp	r0, #55	; 0x37
 800415e:	d803      	bhi.n	8004168 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004160:	4b3b      	ldr	r3, [pc, #236]	; (8004250 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8004162:	4a38      	ldr	r2, [pc, #224]	; (8004244 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004164:	21a5      	movs	r1, #165	; 0xa5
 8004166:	e7e8      	b.n	800413a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004168:	f010 f9f2 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800416c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004254 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004170:	3004      	adds	r0, #4
 8004172:	f010 fa53 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004176:	f8d9 0000 	ldr.w	r0, [r9]
 800417a:	b110      	cbz	r0, 8004182 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800417c:	6803      	ldr	r3, [r0, #0]
 800417e:	68db      	ldr	r3, [r3, #12]
 8004180:	4798      	blx	r3
    if (*currentTrans)
 8004182:	f8d9 0000 	ldr.w	r0, [r9]
 8004186:	b110      	cbz	r0, 800418e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004188:	6803      	ldr	r3, [r0, #0]
 800418a:	681b      	ldr	r3, [r3, #0]
 800418c:	4798      	blx	r3
    if (*currentScreen)
 800418e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004258 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8004192:	f8d8 0000 	ldr.w	r0, [r8]
 8004196:	b110      	cbz	r0, 800419e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004198:	6803      	ldr	r3, [r0, #0]
 800419a:	695b      	ldr	r3, [r3, #20]
 800419c:	4798      	blx	r3
    if (*currentPresenter)
 800419e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041a2:	b110      	cbz	r0, 80041aa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80041a4:	6803      	ldr	r3, [r0, #0]
 80041a6:	685b      	ldr	r3, [r3, #4]
 80041a8:	4798      	blx	r3
    if (*currentScreen)
 80041aa:	f8d8 0000 	ldr.w	r0, [r8]
 80041ae:	b110      	cbz	r0, 80041b6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80041b0:	6803      	ldr	r3, [r0, #0]
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	4798      	blx	r3
    if (*currentPresenter)
 80041b6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041ba:	b110      	cbz	r0, 80041c2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80041bc:	6803      	ldr	r3, [r0, #0]
 80041be:	689b      	ldr	r3, [r3, #8]
 80041c0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80041c2:	68e0      	ldr	r0, [r4, #12]
 80041c4:	2100      	movs	r1, #0
 80041c6:	f7ff fc57 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80041ca:	2114      	movs	r1, #20
 80041cc:	4605      	mov	r5, r0
 80041ce:	f7ff fc57 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80041d2:	68a0      	ldr	r0, [r4, #8]
 80041d4:	6803      	ldr	r3, [r0, #0]
 80041d6:	2100      	movs	r1, #0
 80041d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041da:	4798      	blx	r3
 80041dc:	4606      	mov	r6, r0
 80041de:	f003 fc3b 	bl	8007a58 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80041e2:	6860      	ldr	r0, [r4, #4]
 80041e4:	6803      	ldr	r3, [r0, #0]
 80041e6:	2100      	movs	r1, #0
 80041e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041ea:	4798      	blx	r3
 80041ec:	4631      	mov	r1, r6
 80041ee:	4604      	mov	r4, r0
 80041f0:	f003 fc0c 	bl	8007a0c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80041f4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80041f8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80041fc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004200:	b1dc      	cbz	r4, 800423a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8004202:	1d23      	adds	r3, r4, #4
 8004204:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004208:	6833      	ldr	r3, [r6, #0]
 800420a:	f8c4 a008 	str.w	sl, [r4, #8]
 800420e:	4630      	mov	r0, r6
 8004210:	68db      	ldr	r3, [r3, #12]
 8004212:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004214:	4798      	blx	r3
    newPresenter->activate();
 8004216:	6823      	ldr	r3, [r4, #0]
 8004218:	4620      	mov	r0, r4
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800421e:	4629      	mov	r1, r5
 8004220:	4630      	mov	r0, r6
 8004222:	f011 ffc1 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004226:	682b      	ldr	r3, [r5, #0]
 8004228:	4628      	mov	r0, r5
 800422a:	691b      	ldr	r3, [r3, #16]
 800422c:	4798      	blx	r3
    newTransition->invalidate();
 800422e:	682b      	ldr	r3, [r5, #0]
 8004230:	4628      	mov	r0, r5
 8004232:	695b      	ldr	r3, [r3, #20]
}
 8004234:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004238:	4718      	bx	r3
    model->bind(newPresenter);
 800423a:	4623      	mov	r3, r4
 800423c:	e7e2      	b.n	8004204 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 800423e:	bf00      	nop
 8004240:	0802992c 	.word	0x0802992c
 8004244:	0802a7cb 	.word	0x0802a7cb
 8004248:	08029ac8 	.word	0x08029ac8
 800424c:	08029b0f 	.word	0x08029b0f
 8004250:	08029bb2 	.word	0x08029bb2
 8004254:	20013804 	.word	0x20013804
 8004258:	20013800 	.word	0x20013800

0800425c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 800425c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004260:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004264:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004266:	68a0      	ldr	r0, [r4, #8]
 8004268:	6803      	ldr	r3, [r0, #0]
 800426a:	6a1b      	ldr	r3, [r3, #32]
 800426c:	4798      	blx	r3
 800426e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004272:	4298      	cmp	r0, r3
 8004274:	d805      	bhi.n	8004282 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8004276:	4b42      	ldr	r3, [pc, #264]	; (8004380 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004278:	4a42      	ldr	r2, [pc, #264]	; (8004384 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800427a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800427c:	4842      	ldr	r0, [pc, #264]	; (8004388 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 800427e:	f023 fcb7 	bl	8027bf0 <__assert_func>
 8004282:	6860      	ldr	r0, [r4, #4]
 8004284:	6803      	ldr	r3, [r0, #0]
 8004286:	6a1b      	ldr	r3, [r3, #32]
 8004288:	4798      	blx	r3
 800428a:	280f      	cmp	r0, #15
 800428c:	d803      	bhi.n	8004296 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800428e:	4b3f      	ldr	r3, [pc, #252]	; (800438c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004290:	4a3c      	ldr	r2, [pc, #240]	; (8004384 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004292:	21a4      	movs	r1, #164	; 0xa4
 8004294:	e7f2      	b.n	800427c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004296:	68e0      	ldr	r0, [r4, #12]
 8004298:	6803      	ldr	r3, [r0, #0]
 800429a:	6a1b      	ldr	r3, [r3, #32]
 800429c:	4798      	blx	r3
 800429e:	2837      	cmp	r0, #55	; 0x37
 80042a0:	d803      	bhi.n	80042aa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 80042a2:	4b3b      	ldr	r3, [pc, #236]	; (8004390 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 80042a4:	4a37      	ldr	r2, [pc, #220]	; (8004384 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80042a6:	21a5      	movs	r1, #165	; 0xa5
 80042a8:	e7e8      	b.n	800427c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80042aa:	f010 f951 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80042ae:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004394 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80042b2:	3004      	adds	r0, #4
 80042b4:	f010 f9b2 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80042b8:	f8d9 0000 	ldr.w	r0, [r9]
 80042bc:	b110      	cbz	r0, 80042c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80042be:	6803      	ldr	r3, [r0, #0]
 80042c0:	68db      	ldr	r3, [r3, #12]
 80042c2:	4798      	blx	r3
    if (*currentTrans)
 80042c4:	f8d9 0000 	ldr.w	r0, [r9]
 80042c8:	b110      	cbz	r0, 80042d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80042ca:	6803      	ldr	r3, [r0, #0]
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	4798      	blx	r3
    if (*currentScreen)
 80042d0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004398 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80042d4:	f8d8 0000 	ldr.w	r0, [r8]
 80042d8:	b110      	cbz	r0, 80042e0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80042da:	6803      	ldr	r3, [r0, #0]
 80042dc:	695b      	ldr	r3, [r3, #20]
 80042de:	4798      	blx	r3
    if (*currentPresenter)
 80042e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042e4:	b110      	cbz	r0, 80042ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80042e6:	6803      	ldr	r3, [r0, #0]
 80042e8:	685b      	ldr	r3, [r3, #4]
 80042ea:	4798      	blx	r3
    if (*currentScreen)
 80042ec:	f8d8 0000 	ldr.w	r0, [r8]
 80042f0:	b110      	cbz	r0, 80042f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80042f2:	6803      	ldr	r3, [r0, #0]
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	4798      	blx	r3
    if (*currentPresenter)
 80042f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042fc:	b110      	cbz	r0, 8004304 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80042fe:	6803      	ldr	r3, [r0, #0]
 8004300:	689b      	ldr	r3, [r3, #8]
 8004302:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004304:	68e0      	ldr	r0, [r4, #12]
 8004306:	2100      	movs	r1, #0
 8004308:	f7ff fbb6 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800430c:	2114      	movs	r1, #20
 800430e:	4605      	mov	r5, r0
 8004310:	f7ff fbb6 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004314:	68a0      	ldr	r0, [r4, #8]
 8004316:	6803      	ldr	r3, [r0, #0]
 8004318:	2100      	movs	r1, #0
 800431a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800431c:	4798      	blx	r3
 800431e:	4606      	mov	r6, r0
 8004320:	f003 fd1a 	bl	8007d58 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004324:	6860      	ldr	r0, [r4, #4]
 8004326:	6803      	ldr	r3, [r0, #0]
 8004328:	2100      	movs	r1, #0
 800432a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800432c:	4798      	blx	r3
 800432e:	4631      	mov	r1, r6
 8004330:	4604      	mov	r4, r0
 8004332:	f003 fceb 	bl	8007d0c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004336:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800433a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800433e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004342:	b1dc      	cbz	r4, 800437c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004344:	1d23      	adds	r3, r4, #4
 8004346:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800434a:	6833      	ldr	r3, [r6, #0]
 800434c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004350:	4630      	mov	r0, r6
 8004352:	68db      	ldr	r3, [r3, #12]
 8004354:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004356:	4798      	blx	r3
    newPresenter->activate();
 8004358:	6823      	ldr	r3, [r4, #0]
 800435a:	4620      	mov	r0, r4
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004360:	4629      	mov	r1, r5
 8004362:	4630      	mov	r0, r6
 8004364:	f011 ff20 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004368:	682b      	ldr	r3, [r5, #0]
 800436a:	4628      	mov	r0, r5
 800436c:	691b      	ldr	r3, [r3, #16]
 800436e:	4798      	blx	r3
    newTransition->invalidate();
 8004370:	682b      	ldr	r3, [r5, #0]
 8004372:	4628      	mov	r0, r5
 8004374:	695b      	ldr	r3, [r3, #20]
}
 8004376:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800437a:	4718      	bx	r3
    model->bind(newPresenter);
 800437c:	4623      	mov	r3, r4
 800437e:	e7e2      	b.n	8004346 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004380:	0802992c 	.word	0x0802992c
 8004384:	0802a8fb 	.word	0x0802a8fb
 8004388:	08029ac8 	.word	0x08029ac8
 800438c:	08029b0f 	.word	0x08029b0f
 8004390:	08029bb2 	.word	0x08029bb2
 8004394:	20013804 	.word	0x20013804
 8004398:	20013800 	.word	0x20013800

0800439c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 800439c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80043a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80043a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80043a6:	68a0      	ldr	r0, [r4, #8]
 80043a8:	6803      	ldr	r3, [r0, #0]
 80043aa:	6a1b      	ldr	r3, [r3, #32]
 80043ac:	4798      	blx	r3
 80043ae:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80043b2:	4298      	cmp	r0, r3
 80043b4:	d805      	bhi.n	80043c2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 80043b6:	4b42      	ldr	r3, [pc, #264]	; (80044c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 80043b8:	4a42      	ldr	r2, [pc, #264]	; (80044c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80043ba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043bc:	4842      	ldr	r0, [pc, #264]	; (80044c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 80043be:	f023 fc17 	bl	8027bf0 <__assert_func>
 80043c2:	6860      	ldr	r0, [r4, #4]
 80043c4:	6803      	ldr	r3, [r0, #0]
 80043c6:	6a1b      	ldr	r3, [r3, #32]
 80043c8:	4798      	blx	r3
 80043ca:	280f      	cmp	r0, #15
 80043cc:	d803      	bhi.n	80043d6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80043ce:	4b3f      	ldr	r3, [pc, #252]	; (80044cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80043d0:	4a3c      	ldr	r2, [pc, #240]	; (80044c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80043d2:	21a4      	movs	r1, #164	; 0xa4
 80043d4:	e7f2      	b.n	80043bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043d6:	68e0      	ldr	r0, [r4, #12]
 80043d8:	6803      	ldr	r3, [r0, #0]
 80043da:	6a1b      	ldr	r3, [r3, #32]
 80043dc:	4798      	blx	r3
 80043de:	2837      	cmp	r0, #55	; 0x37
 80043e0:	d803      	bhi.n	80043ea <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80043e2:	4b3b      	ldr	r3, [pc, #236]	; (80044d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80043e4:	4a37      	ldr	r2, [pc, #220]	; (80044c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80043e6:	21a5      	movs	r1, #165	; 0xa5
 80043e8:	e7e8      	b.n	80043bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043ea:	f010 f8b1 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043ee:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80044d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80043f2:	3004      	adds	r0, #4
 80043f4:	f010 f912 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043f8:	f8d9 0000 	ldr.w	r0, [r9]
 80043fc:	b110      	cbz	r0, 8004404 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80043fe:	6803      	ldr	r3, [r0, #0]
 8004400:	68db      	ldr	r3, [r3, #12]
 8004402:	4798      	blx	r3
    if (*currentTrans)
 8004404:	f8d9 0000 	ldr.w	r0, [r9]
 8004408:	b110      	cbz	r0, 8004410 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800440a:	6803      	ldr	r3, [r0, #0]
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	4798      	blx	r3
    if (*currentScreen)
 8004410:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80044d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004414:	f8d8 0000 	ldr.w	r0, [r8]
 8004418:	b110      	cbz	r0, 8004420 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800441a:	6803      	ldr	r3, [r0, #0]
 800441c:	695b      	ldr	r3, [r3, #20]
 800441e:	4798      	blx	r3
    if (*currentPresenter)
 8004420:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004424:	b110      	cbz	r0, 800442c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004426:	6803      	ldr	r3, [r0, #0]
 8004428:	685b      	ldr	r3, [r3, #4]
 800442a:	4798      	blx	r3
    if (*currentScreen)
 800442c:	f8d8 0000 	ldr.w	r0, [r8]
 8004430:	b110      	cbz	r0, 8004438 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004432:	6803      	ldr	r3, [r0, #0]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	4798      	blx	r3
    if (*currentPresenter)
 8004438:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800443c:	b110      	cbz	r0, 8004444 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800443e:	6803      	ldr	r3, [r0, #0]
 8004440:	689b      	ldr	r3, [r3, #8]
 8004442:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004444:	68e0      	ldr	r0, [r4, #12]
 8004446:	2100      	movs	r1, #0
 8004448:	f7ff fb16 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800444c:	2114      	movs	r1, #20
 800444e:	4605      	mov	r5, r0
 8004450:	f7ff fb16 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004454:	68a0      	ldr	r0, [r4, #8]
 8004456:	6803      	ldr	r3, [r0, #0]
 8004458:	2100      	movs	r1, #0
 800445a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800445c:	4798      	blx	r3
 800445e:	4606      	mov	r6, r0
 8004460:	f003 fc38 	bl	8007cd4 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004464:	6860      	ldr	r0, [r4, #4]
 8004466:	6803      	ldr	r3, [r0, #0]
 8004468:	2100      	movs	r1, #0
 800446a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800446c:	4798      	blx	r3
 800446e:	4631      	mov	r1, r6
 8004470:	4604      	mov	r4, r0
 8004472:	f003 fc09 	bl	8007c88 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004476:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800447a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800447e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004482:	b1dc      	cbz	r4, 80044bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004484:	1d23      	adds	r3, r4, #4
 8004486:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800448a:	6833      	ldr	r3, [r6, #0]
 800448c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004490:	4630      	mov	r0, r6
 8004492:	68db      	ldr	r3, [r3, #12]
 8004494:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004496:	4798      	blx	r3
    newPresenter->activate();
 8004498:	6823      	ldr	r3, [r4, #0]
 800449a:	4620      	mov	r0, r4
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80044a0:	4629      	mov	r1, r5
 80044a2:	4630      	mov	r0, r6
 80044a4:	f011 fe80 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80044a8:	682b      	ldr	r3, [r5, #0]
 80044aa:	4628      	mov	r0, r5
 80044ac:	691b      	ldr	r3, [r3, #16]
 80044ae:	4798      	blx	r3
    newTransition->invalidate();
 80044b0:	682b      	ldr	r3, [r5, #0]
 80044b2:	4628      	mov	r0, r5
 80044b4:	695b      	ldr	r3, [r3, #20]
}
 80044b6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80044ba:	4718      	bx	r3
    model->bind(newPresenter);
 80044bc:	4623      	mov	r3, r4
 80044be:	e7e2      	b.n	8004486 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 80044c0:	0802992c 	.word	0x0802992c
 80044c4:	0802aa3d 	.word	0x0802aa3d
 80044c8:	08029ac8 	.word	0x08029ac8
 80044cc:	08029b0f 	.word	0x08029b0f
 80044d0:	08029bb2 	.word	0x08029bb2
 80044d4:	20013804 	.word	0x20013804
 80044d8:	20013800 	.word	0x20013800

080044dc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80044dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80044e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044e6:	68a0      	ldr	r0, [r4, #8]
 80044e8:	6803      	ldr	r3, [r0, #0]
 80044ea:	6a1b      	ldr	r3, [r3, #32]
 80044ec:	4798      	blx	r3
 80044ee:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80044f2:	d205      	bcs.n	8004500 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80044f4:	4b42      	ldr	r3, [pc, #264]	; (8004600 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80044f6:	4a43      	ldr	r2, [pc, #268]	; (8004604 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80044f8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044fa:	4843      	ldr	r0, [pc, #268]	; (8004608 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80044fc:	f023 fb78 	bl	8027bf0 <__assert_func>
 8004500:	6860      	ldr	r0, [r4, #4]
 8004502:	6803      	ldr	r3, [r0, #0]
 8004504:	6a1b      	ldr	r3, [r3, #32]
 8004506:	4798      	blx	r3
 8004508:	280f      	cmp	r0, #15
 800450a:	d803      	bhi.n	8004514 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 800450c:	4b3f      	ldr	r3, [pc, #252]	; (800460c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 800450e:	4a3d      	ldr	r2, [pc, #244]	; (8004604 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004510:	21a4      	movs	r1, #164	; 0xa4
 8004512:	e7f2      	b.n	80044fa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004514:	68e0      	ldr	r0, [r4, #12]
 8004516:	6803      	ldr	r3, [r0, #0]
 8004518:	6a1b      	ldr	r3, [r3, #32]
 800451a:	4798      	blx	r3
 800451c:	2837      	cmp	r0, #55	; 0x37
 800451e:	d803      	bhi.n	8004528 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004520:	4b3b      	ldr	r3, [pc, #236]	; (8004610 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004522:	4a38      	ldr	r2, [pc, #224]	; (8004604 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004524:	21a5      	movs	r1, #165	; 0xa5
 8004526:	e7e8      	b.n	80044fa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004528:	f010 f812 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800452c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004614 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004530:	3004      	adds	r0, #4
 8004532:	f010 f873 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004536:	f8d9 0000 	ldr.w	r0, [r9]
 800453a:	b110      	cbz	r0, 8004542 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800453c:	6803      	ldr	r3, [r0, #0]
 800453e:	68db      	ldr	r3, [r3, #12]
 8004540:	4798      	blx	r3
    if (*currentTrans)
 8004542:	f8d9 0000 	ldr.w	r0, [r9]
 8004546:	b110      	cbz	r0, 800454e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004548:	6803      	ldr	r3, [r0, #0]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	4798      	blx	r3
    if (*currentScreen)
 800454e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004618 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004552:	f8d8 0000 	ldr.w	r0, [r8]
 8004556:	b110      	cbz	r0, 800455e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004558:	6803      	ldr	r3, [r0, #0]
 800455a:	695b      	ldr	r3, [r3, #20]
 800455c:	4798      	blx	r3
    if (*currentPresenter)
 800455e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004562:	b110      	cbz	r0, 800456a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004564:	6803      	ldr	r3, [r0, #0]
 8004566:	685b      	ldr	r3, [r3, #4]
 8004568:	4798      	blx	r3
    if (*currentScreen)
 800456a:	f8d8 0000 	ldr.w	r0, [r8]
 800456e:	b110      	cbz	r0, 8004576 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004570:	6803      	ldr	r3, [r0, #0]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	4798      	blx	r3
    if (*currentPresenter)
 8004576:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800457a:	b110      	cbz	r0, 8004582 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800457c:	6803      	ldr	r3, [r0, #0]
 800457e:	689b      	ldr	r3, [r3, #8]
 8004580:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004582:	68e0      	ldr	r0, [r4, #12]
 8004584:	2100      	movs	r1, #0
 8004586:	f7ff fa77 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800458a:	2114      	movs	r1, #20
 800458c:	4605      	mov	r5, r0
 800458e:	f7ff fa77 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004592:	68a0      	ldr	r0, [r4, #8]
 8004594:	6803      	ldr	r3, [r0, #0]
 8004596:	2100      	movs	r1, #0
 8004598:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800459a:	4798      	blx	r3
 800459c:	4606      	mov	r6, r0
 800459e:	f003 fb3f 	bl	8007c20 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045a2:	6860      	ldr	r0, [r4, #4]
 80045a4:	6803      	ldr	r3, [r0, #0]
 80045a6:	2100      	movs	r1, #0
 80045a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045aa:	4798      	blx	r3
 80045ac:	4631      	mov	r1, r6
 80045ae:	4604      	mov	r4, r0
 80045b0:	f003 fb10 	bl	8007bd4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 80045b4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80045b8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045bc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045c0:	b1dc      	cbz	r4, 80045fa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 80045c2:	1d23      	adds	r3, r4, #4
 80045c4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045c8:	6833      	ldr	r3, [r6, #0]
 80045ca:	f8c4 a008 	str.w	sl, [r4, #8]
 80045ce:	4630      	mov	r0, r6
 80045d0:	68db      	ldr	r3, [r3, #12]
 80045d2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80045d4:	4798      	blx	r3
    newPresenter->activate();
 80045d6:	6823      	ldr	r3, [r4, #0]
 80045d8:	4620      	mov	r0, r4
 80045da:	681b      	ldr	r3, [r3, #0]
 80045dc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045de:	4629      	mov	r1, r5
 80045e0:	4630      	mov	r0, r6
 80045e2:	f011 fde1 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045e6:	682b      	ldr	r3, [r5, #0]
 80045e8:	4628      	mov	r0, r5
 80045ea:	691b      	ldr	r3, [r3, #16]
 80045ec:	4798      	blx	r3
    newTransition->invalidate();
 80045ee:	682b      	ldr	r3, [r5, #0]
 80045f0:	4628      	mov	r0, r5
 80045f2:	695b      	ldr	r3, [r3, #20]
}
 80045f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80045f8:	4718      	bx	r3
    model->bind(newPresenter);
 80045fa:	4623      	mov	r3, r4
 80045fc:	e7e2      	b.n	80045c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 80045fe:	bf00      	nop
 8004600:	0802992c 	.word	0x0802992c
 8004604:	0802ab7f 	.word	0x0802ab7f
 8004608:	08029ac8 	.word	0x08029ac8
 800460c:	08029b0f 	.word	0x08029b0f
 8004610:	08029bb2 	.word	0x08029bb2
 8004614:	20013804 	.word	0x20013804
 8004618:	20013800 	.word	0x20013800

0800461c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 800461c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004620:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004624:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004626:	68a0      	ldr	r0, [r4, #8]
 8004628:	6803      	ldr	r3, [r0, #0]
 800462a:	6a1b      	ldr	r3, [r3, #32]
 800462c:	4798      	blx	r3
 800462e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004632:	d205      	bcs.n	8004640 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004634:	4b42      	ldr	r3, [pc, #264]	; (8004740 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004636:	4a43      	ldr	r2, [pc, #268]	; (8004744 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004638:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800463a:	4843      	ldr	r0, [pc, #268]	; (8004748 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 800463c:	f023 fad8 	bl	8027bf0 <__assert_func>
 8004640:	6860      	ldr	r0, [r4, #4]
 8004642:	6803      	ldr	r3, [r0, #0]
 8004644:	6a1b      	ldr	r3, [r3, #32]
 8004646:	4798      	blx	r3
 8004648:	280f      	cmp	r0, #15
 800464a:	d803      	bhi.n	8004654 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 800464c:	4b3f      	ldr	r3, [pc, #252]	; (800474c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 800464e:	4a3d      	ldr	r2, [pc, #244]	; (8004744 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004650:	21a4      	movs	r1, #164	; 0xa4
 8004652:	e7f2      	b.n	800463a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004654:	68e0      	ldr	r0, [r4, #12]
 8004656:	6803      	ldr	r3, [r0, #0]
 8004658:	6a1b      	ldr	r3, [r3, #32]
 800465a:	4798      	blx	r3
 800465c:	2837      	cmp	r0, #55	; 0x37
 800465e:	d803      	bhi.n	8004668 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004660:	4b3b      	ldr	r3, [pc, #236]	; (8004750 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004662:	4a38      	ldr	r2, [pc, #224]	; (8004744 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004664:	21a5      	movs	r1, #165	; 0xa5
 8004666:	e7e8      	b.n	800463a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004668:	f00f ff72 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800466c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004754 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004670:	3004      	adds	r0, #4
 8004672:	f00f ffd3 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004676:	f8d9 0000 	ldr.w	r0, [r9]
 800467a:	b110      	cbz	r0, 8004682 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800467c:	6803      	ldr	r3, [r0, #0]
 800467e:	68db      	ldr	r3, [r3, #12]
 8004680:	4798      	blx	r3
    if (*currentTrans)
 8004682:	f8d9 0000 	ldr.w	r0, [r9]
 8004686:	b110      	cbz	r0, 800468e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004688:	6803      	ldr	r3, [r0, #0]
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	4798      	blx	r3
    if (*currentScreen)
 800468e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004758 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004692:	f8d8 0000 	ldr.w	r0, [r8]
 8004696:	b110      	cbz	r0, 800469e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004698:	6803      	ldr	r3, [r0, #0]
 800469a:	695b      	ldr	r3, [r3, #20]
 800469c:	4798      	blx	r3
    if (*currentPresenter)
 800469e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046a2:	b110      	cbz	r0, 80046aa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80046a4:	6803      	ldr	r3, [r0, #0]
 80046a6:	685b      	ldr	r3, [r3, #4]
 80046a8:	4798      	blx	r3
    if (*currentScreen)
 80046aa:	f8d8 0000 	ldr.w	r0, [r8]
 80046ae:	b110      	cbz	r0, 80046b6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80046b0:	6803      	ldr	r3, [r0, #0]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	4798      	blx	r3
    if (*currentPresenter)
 80046b6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046ba:	b110      	cbz	r0, 80046c2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80046bc:	6803      	ldr	r3, [r0, #0]
 80046be:	689b      	ldr	r3, [r3, #8]
 80046c0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80046c2:	68e0      	ldr	r0, [r4, #12]
 80046c4:	2100      	movs	r1, #0
 80046c6:	f7ff f9d7 	bl	8003a78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80046ca:	2114      	movs	r1, #20
 80046cc:	4605      	mov	r5, r0
 80046ce:	f7ff f9d7 	bl	8003a80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046d2:	68a0      	ldr	r0, [r4, #8]
 80046d4:	6803      	ldr	r3, [r0, #0]
 80046d6:	2100      	movs	r1, #0
 80046d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046da:	4798      	blx	r3
 80046dc:	4606      	mov	r6, r0
 80046de:	f003 f95b 	bl	8007998 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046e2:	6860      	ldr	r0, [r4, #4]
 80046e4:	6803      	ldr	r3, [r0, #0]
 80046e6:	2100      	movs	r1, #0
 80046e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046ea:	4798      	blx	r3
 80046ec:	4631      	mov	r1, r6
 80046ee:	4604      	mov	r4, r0
 80046f0:	f003 f92c 	bl	800794c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80046f4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80046f8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046fc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004700:	b1dc      	cbz	r4, 800473a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004702:	1d23      	adds	r3, r4, #4
 8004704:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004708:	6833      	ldr	r3, [r6, #0]
 800470a:	f8c4 a008 	str.w	sl, [r4, #8]
 800470e:	4630      	mov	r0, r6
 8004710:	68db      	ldr	r3, [r3, #12]
 8004712:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004714:	4798      	blx	r3
    newPresenter->activate();
 8004716:	6823      	ldr	r3, [r4, #0]
 8004718:	4620      	mov	r0, r4
 800471a:	681b      	ldr	r3, [r3, #0]
 800471c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800471e:	4629      	mov	r1, r5
 8004720:	4630      	mov	r0, r6
 8004722:	f011 fd41 	bl	80161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004726:	682b      	ldr	r3, [r5, #0]
 8004728:	4628      	mov	r0, r5
 800472a:	691b      	ldr	r3, [r3, #16]
 800472c:	4798      	blx	r3
    newTransition->invalidate();
 800472e:	682b      	ldr	r3, [r5, #0]
 8004730:	4628      	mov	r0, r5
 8004732:	695b      	ldr	r3, [r3, #20]
}
 8004734:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004738:	4718      	bx	r3
    model->bind(newPresenter);
 800473a:	4623      	mov	r3, r4
 800473c:	e7e2      	b.n	8004704 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 800473e:	bf00      	nop
 8004740:	0802992c 	.word	0x0802992c
 8004744:	0802acab 	.word	0x0802acab
 8004748:	08029ac8 	.word	0x08029ac8
 800474c:	08029b0f 	.word	0x08029b0f
 8004750:	08029bb2 	.word	0x08029bb2
 8004754:	20013804 	.word	0x20013804
 8004758:	20013800 	.word	0x20013800

0800475c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800475c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800475e:	4770      	bx	lr

08004760 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004760:	4770      	bx	lr

08004762 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004762:	4770      	bx	lr

08004764 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004764:	b510      	push	{r4, lr}
}
 8004766:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 800476a:	4604      	mov	r4, r0
}
 800476c:	f022 fc4f 	bl	802700e <_ZdlPvj>
 8004770:	4620      	mov	r0, r4
 8004772:	bd10      	pop	{r4, pc}

08004774 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004778:	f44f 7380 	mov.w	r3, #256	; 0x100
 800477c:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 800477e:	2600      	movs	r6, #0
 8004780:	ed2d 8b02 	vpush	{d8}
 8004784:	8483      	strh	r3, [r0, #36]	; 0x24
 8004786:	4bb3      	ldr	r3, [pc, #716]	; (8004a54 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
          firstChild(0)
 8004788:	6286      	str	r6, [r0, #40]	; 0x28
 800478a:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800478e:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004792:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004796:	e9c0 6607 	strd	r6, r6, [r0, #28]
 800479a:	f848 3b2c 	str.w	r3, [r8], #44
 800479e:	b08b      	sub	sp, #44	; 0x2c
 80047a0:	4604      	mov	r4, r0
 80047a2:	4640      	mov	r0, r8
 80047a4:	f7fd fea6 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 80047a8:	f104 0374 	add.w	r3, r4, #116	; 0x74
 80047ac:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 80047b0:	4618      	mov	r0, r3
 80047b2:	9303      	str	r3, [sp, #12]
 80047b4:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 80047b8:	f7fd fe9c 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 80047bc:	4658      	mov	r0, fp
 80047be:	f7fd fe99 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 80047c2:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 80047c6:	4da4      	ldr	r5, [pc, #656]	; (8004a58 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
        : TextArea()
 80047c8:	4650      	mov	r0, sl
 80047ca:	f7fd fe93 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80047ce:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 80047d2:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 80047d6:	4648      	mov	r0, r9
 80047d8:	f7fd fe8c 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 80047dc:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 80047e0:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 80047e4:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80047e6:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 80047ea:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 80047ee:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 80047f2:	f7fd fe7f 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80047f6:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 80047fa:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 80047fe:	4638      	mov	r0, r7
 8004800:	f00c fe60 	bl	80114c4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004804:	4a95      	ldr	r2, [pc, #596]	; (8004a5c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004806:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004808:	4640      	mov	r0, r8
 800480a:	226d      	movs	r2, #109	; 0x6d
 800480c:	21d9      	movs	r1, #217	; 0xd9
 800480e:	ad04      	add	r5, sp, #16
 8004810:	f7fd fe3d 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004814:	f04f 33ff 	mov.w	r3, #4294967295
 8004818:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 800481a:	4641      	mov	r1, r8
 800481c:	4628      	mov	r0, r5
        linespace = space;
 800481e:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004822:	f00c fb17 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004826:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800482a:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 800482e:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004832:	4b8b      	ldr	r3, [pc, #556]	; (8004a60 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 8004834:	9308      	str	r3, [sp, #32]
 8004836:	2222      	movs	r2, #34	; 0x22
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004838:	a908      	add	r1, sp, #32
 800483a:	4640      	mov	r0, r8
 800483c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004840:	f00c fda2 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8004844:	4641      	mov	r1, r8
 8004846:	4620      	mov	r0, r4
 8004848:	f00a fbea 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 800484c:	9b03      	ldr	r3, [sp, #12]
 800484e:	4631      	mov	r1, r6
 8004850:	4618      	mov	r0, r3
 8004852:	226d      	movs	r2, #109	; 0x6d
 8004854:	f7fd fe1b 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8004858:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 800485a:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 800485e:	f04f 32ff 	mov.w	r2, #4294967295
 8004862:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8004866:	4619      	mov	r1, r3
 8004868:	4628      	mov	r0, r5
 800486a:	f00c faf3 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800486e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004872:	4b7b      	ldr	r3, [pc, #492]	; (8004a60 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 8004874:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8004876:	9b03      	ldr	r3, [sp, #12]
 8004878:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 800487c:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004880:	2223      	movs	r2, #35	; 0x23
 8004882:	a908      	add	r1, sp, #32
 8004884:	4618      	mov	r0, r3
 8004886:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800488a:	f00c fd7d 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 800488e:	9b03      	ldr	r3, [sp, #12]
 8004890:	4620      	mov	r0, r4
 8004892:	4619      	mov	r1, r3
 8004894:	f00a fbc4 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004898:	4632      	mov	r2, r6
 800489a:	4658      	mov	r0, fp
 800489c:	2171      	movs	r1, #113	; 0x71
 800489e:	f7fd fdf6 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80048a2:	f04f 32ff 	mov.w	r2, #4294967295
 80048a6:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 80048aa:	4659      	mov	r1, fp
 80048ac:	4628      	mov	r0, r5
        linespace = space;
 80048ae:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 80048b2:	f00c facf 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80048b6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80048ba:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 80048be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80048c2:	4b67      	ldr	r3, [pc, #412]	; (8004a60 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 80048c4:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 80048c6:	a908      	add	r1, sp, #32
 80048c8:	2324      	movs	r3, #36	; 0x24
 80048ca:	4658      	mov	r0, fp
 80048cc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80048d0:	f00c fd5a 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 80048d4:	4659      	mov	r1, fp
 80048d6:	4620      	mov	r0, r4
 80048d8:	f00a fba2 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 80048dc:	4650      	mov	r0, sl
 80048de:	227c      	movs	r2, #124	; 0x7c
 80048e0:	214c      	movs	r1, #76	; 0x4c
 80048e2:	f7fd fdd4 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80048e6:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 80048ea:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 80048ee:	f04f 32ff 	mov.w	r2, #4294967295
 80048f2:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 80048f6:	4651      	mov	r1, sl
 80048f8:	4628      	mov	r0, r5
 80048fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80048fe:	4798      	blx	r3
 8004900:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004904:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004908:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800490c:	4b54      	ldr	r3, [pc, #336]	; (8004a60 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 800490e:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8004910:	a908      	add	r1, sp, #32
 8004912:	2321      	movs	r3, #33	; 0x21
 8004914:	4650      	mov	r0, sl
 8004916:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800491a:	f00c fd35 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 800491e:	4651      	mov	r1, sl
 8004920:	4620      	mov	r0, r4
 8004922:	f00a fb7d 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8004926:	4648      	mov	r0, r9
 8004928:	228b      	movs	r2, #139	; 0x8b
 800492a:	2156      	movs	r1, #86	; 0x56
 800492c:	f7fd fdaf 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8004930:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8004934:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8004938:	f04f 32ff 	mov.w	r2, #4294967295
 800493c:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8004940:	4649      	mov	r1, r9
 8004942:	4628      	mov	r0, r5
 8004944:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004948:	4798      	blx	r3
 800494a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800494e:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8004952:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004956:	4b42      	ldr	r3, [pc, #264]	; (8004a60 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 8004958:	9308      	str	r3, [sp, #32]
 800495a:	2320      	movs	r3, #32
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 800495c:	eb0d 0103 	add.w	r1, sp, r3
 8004960:	4648      	mov	r0, r9
 8004962:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004966:	f00c fd0f 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 800496a:	4649      	mov	r1, r9
 800496c:	4620      	mov	r0, r4
 800496e:	f00a fb57 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8004972:	ee18 0a10 	vmov	r0, s16
 8004976:	229a      	movs	r2, #154	; 0x9a
 8004978:	2156      	movs	r1, #86	; 0x56
 800497a:	f7fd fd88 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800497e:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8004982:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8004986:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 800498a:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 800498e:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8004992:	4628      	mov	r0, r5
 8004994:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004998:	4798      	blx	r3
 800499a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800499e:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 80049a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80049a6:	4b2e      	ldr	r3, [pc, #184]	; (8004a60 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 80049a8:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 80049aa:	ee18 0a10 	vmov	r0, s16
 80049ae:	231f      	movs	r3, #31
 80049b0:	a908      	add	r1, sp, #32
 80049b2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80049b6:	f00c fce7 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 80049ba:	ee18 1a10 	vmov	r1, s16
 80049be:	4620      	mov	r0, r4
 80049c0:	f00a fb2e 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80049c4:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80049c6:	a908      	add	r1, sp, #32
 80049c8:	4638      	mov	r0, r7
 80049ca:	f8ad 3020 	strh.w	r3, [sp, #32]
 80049ce:	f00a fab9 	bl	800ef44 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 80049d2:	2212      	movs	r2, #18
 80049d4:	4638      	mov	r0, r7
 80049d6:	211c      	movs	r1, #28
 80049d8:	f7fd fd59 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80049dc:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80049e0:	4638      	mov	r0, r7
 80049e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80049e4:	21b8      	movs	r1, #184	; 0xb8
 80049e6:	4798      	blx	r3
        setHeight(height);
 80049e8:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80049ec:	4638      	mov	r0, r7
 80049ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80049f0:	216a      	movs	r1, #106	; 0x6a
 80049f2:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 80049f4:	225c      	movs	r2, #92	; 0x5c
 80049f6:	4611      	mov	r1, r2
 80049f8:	4638      	mov	r0, r7
 80049fa:	f00c fe0e 	bl	801161a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 80049fe:	4638      	mov	r0, r7
 8004a00:	225a      	movs	r2, #90	; 0x5a
 8004a02:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004a06:	f00c fe8d 	bl	8011724 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8004a0a:	4633      	mov	r3, r6
 8004a0c:	225a      	movs	r2, #90	; 0x5a
 8004a0e:	4638      	mov	r0, r7
 8004a10:	9600      	str	r6, [sp, #0]
 8004a12:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004a16:	f00a f942 	bl	800ec9e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8004a1a:	4631      	mov	r1, r6
 8004a1c:	4638      	mov	r0, r7
 8004a1e:	f00c fe2b 	bl	8011678 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8004a22:	2335      	movs	r3, #53	; 0x35
 8004a24:	2208      	movs	r2, #8
 8004a26:	4638      	mov	r0, r7
 8004a28:	2105      	movs	r1, #5
 8004a2a:	f00c fde1 	bl	80115f0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004a2e:	4638      	mov	r0, r7
 8004a30:	2101      	movs	r1, #1
 8004a32:	f00c fd7f 	bl	8011534 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004a36:	4638      	mov	r0, r7
 8004a38:	2101      	movs	r1, #1
 8004a3a:	f00c fd7e 	bl	801153a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8004a3e:	4620      	mov	r0, r4
 8004a40:	4639      	mov	r1, r7
 8004a42:	f00a faed 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004a46:	4620      	mov	r0, r4
 8004a48:	b00b      	add	sp, #44	; 0x2c
 8004a4a:	ecbd 8b02 	vpop	{d8}
 8004a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a52:	bf00      	nop
 8004a54:	0802af14 	.word	0x0802af14
 8004a58:	0802980c 	.word	0x0802980c
 8004a5c:	00a900f0 	.word	0x00a900f0
 8004a60:	080297fc 	.word	0x080297fc

08004a64 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004a64:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004a66:	4770      	bx	lr

08004a68 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004a68:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004a6a:	4770      	bx	lr

08004a6c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004a6c:	4770      	bx	lr

08004a6e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004a6e:	888b      	ldrh	r3, [r1, #4]
 8004a70:	69c0      	ldr	r0, [r0, #28]
 8004a72:	680a      	ldr	r2, [r1, #0]
 8004a74:	0adb      	lsrs	r3, r3, #11
 8004a76:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004a7a:	4410      	add	r0, r2
 8004a7c:	4770      	bx	lr

08004a7e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004a7e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004a80:	b1c2      	cbz	r2, 8004ab4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004a82:	7b13      	ldrb	r3, [r2, #12]
 8004a84:	b1b3      	cbz	r3, 8004ab4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004a86:	7b54      	ldrb	r4, [r2, #13]
 8004a88:	7ad2      	ldrb	r2, [r2, #11]
 8004a8a:	0224      	lsls	r4, r4, #8
 8004a8c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004a90:	4314      	orrs	r4, r2
 8004a92:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004a94:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004a96:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004a9a:	8813      	ldrh	r3, [r2, #0]
 8004a9c:	428b      	cmp	r3, r1
 8004a9e:	d102      	bne.n	8004aa6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004aa0:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004aa4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004aa6:	d805      	bhi.n	8004ab4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004aa8:	3801      	subs	r0, #1
 8004aaa:	b280      	uxth	r0, r0
 8004aac:	3204      	adds	r2, #4
 8004aae:	2800      	cmp	r0, #0
 8004ab0:	d1f3      	bne.n	8004a9a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004ab2:	e7f7      	b.n	8004aa4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004ab4:	2000      	movs	r0, #0
 8004ab6:	e7f5      	b.n	8004aa4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004ab8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004ab8:	b510      	push	{r4, lr}
 8004aba:	212c      	movs	r1, #44	; 0x2c
 8004abc:	4604      	mov	r4, r0
 8004abe:	f022 faa6 	bl	802700e <_ZdlPvj>
 8004ac2:	4620      	mov	r0, r4
 8004ac4:	bd10      	pop	{r4, pc}
	...

08004ac8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004ac8:	b530      	push	{r4, r5, lr}
 8004aca:	b08b      	sub	sp, #44	; 0x2c
 8004acc:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004ace:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8004ad2:	9508      	str	r5, [sp, #32]
 8004ad4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8004ad8:	9507      	str	r5, [sp, #28]
 8004ada:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8004ade:	9506      	str	r5, [sp, #24]
 8004ae0:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8004ae4:	9505      	str	r5, [sp, #20]
 8004ae6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8004aea:	9504      	str	r5, [sp, #16]
 8004aec:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8004af0:	9503      	str	r5, [sp, #12]
 8004af2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8004af6:	9502      	str	r5, [sp, #8]
 8004af8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8004afc:	9501      	str	r5, [sp, #4]
 8004afe:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8004b02:	9500      	str	r5, [sp, #0]
 8004b04:	f010 feba 	bl	801587c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004b08:	4b06      	ldr	r3, [pc, #24]	; (8004b24 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8004b0a:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8004b0c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004b0e:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8004b10:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004b12:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8004b14:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004b16:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8004b18:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004b1a:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8004b1c:	4620      	mov	r0, r4
 8004b1e:	b00b      	add	sp, #44	; 0x2c
 8004b20:	bd30      	pop	{r4, r5, pc}
 8004b22:	bf00      	nop
 8004b24:	0802afa8 	.word	0x0802afa8

08004b28 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8004b28:	4770      	bx	lr

08004b2a <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004b2a:	4770      	bx	lr

08004b2c <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004b2c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004b2e:	68c2      	ldr	r2, [r0, #12]
 8004b30:	6844      	ldr	r4, [r0, #4]
 8004b32:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004b34:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004b36:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004b3a:	07d2      	lsls	r2, r2, #31
 8004b3c:	bf48      	it	mi
 8004b3e:	5962      	ldrmi	r2, [r4, r5]
 8004b40:	689b      	ldr	r3, [r3, #8]
    }
 8004b42:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004b44:	bf48      	it	mi
 8004b46:	58d3      	ldrmi	r3, [r2, r3]
 8004b48:	4718      	bx	r3

08004b4a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004b4a:	6843      	ldr	r3, [r0, #4]
 8004b4c:	b12b      	cbz	r3, 8004b5a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004b4e:	6883      	ldr	r3, [r0, #8]
 8004b50:	b92b      	cbnz	r3, 8004b5e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004b52:	68c0      	ldr	r0, [r0, #12]
 8004b54:	f000 0001 	and.w	r0, r0, #1
 8004b58:	4770      	bx	lr
 8004b5a:	4618      	mov	r0, r3
 8004b5c:	4770      	bx	lr
 8004b5e:	2001      	movs	r0, #1
    }
 8004b60:	4770      	bx	lr

08004b62 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004b62:	b510      	push	{r4, lr}
 8004b64:	2110      	movs	r1, #16
 8004b66:	4604      	mov	r4, r0
 8004b68:	f022 fa51 	bl	802700e <_ZdlPvj>
 8004b6c:	4620      	mov	r0, r4
 8004b6e:	bd10      	pop	{r4, pc}

08004b70 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8004b70:	b510      	push	{r4, lr}
 8004b72:	4b03      	ldr	r3, [pc, #12]	; (8004b80 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8004b74:	6003      	str	r3, [r0, #0]
 8004b76:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004b78:	f00d ffe8 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004b7c:	4620      	mov	r0, r4
 8004b7e:	bd10      	pop	{r4, pc}
 8004b80:	0802b020 	.word	0x0802b020

08004b84 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8004b84:	b507      	push	{r0, r1, r2, lr}
 8004b86:	4b07      	ldr	r3, [pc, #28]	; (8004ba4 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8004b88:	6003      	str	r3, [r0, #0]
 8004b8a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004b8c:	f00d ffde 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004b90:	9801      	ldr	r0, [sp, #4]
 8004b92:	f241 117c 	movw	r1, #4476	; 0x117c
 8004b96:	f022 fa3a 	bl	802700e <_ZdlPvj>
 8004b9a:	9801      	ldr	r0, [sp, #4]
 8004b9c:	b003      	add	sp, #12
 8004b9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004ba2:	bf00      	nop
 8004ba4:	0802b020 	.word	0x0802b020

08004ba8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004ba8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8004baa:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8004bae:	4299      	cmp	r1, r3
{
 8004bb0:	4604      	mov	r4, r0
 8004bb2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8004bb4:	d103      	bne.n	8004bbe <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004bb6:	f00f fccb 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8004bba:	f7fe fbcb 	bl	8003354 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8004bbe:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004bc2:	429d      	cmp	r5, r3
 8004bc4:	d103      	bne.n	8004bce <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8004bc6:	f00f fcc3 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 8004bca:	f7fe fc53 	bl	8003474 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8004bce:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004bd2:	429d      	cmp	r5, r3
 8004bd4:	d103      	bne.n	8004bde <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8004bd6:	f00f fcbb 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8004bda:	f7fe fc7b 	bl	80034d4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8004bde:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8004be2:	42a5      	cmp	r5, r4
 8004be4:	d10a      	bne.n	8004bfc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8004be6:	4806      	ldr	r0, [pc, #24]	; (8004c00 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8004be8:	2200      	movs	r2, #0
 8004bea:	2120      	movs	r1, #32
 8004bec:	f003 ff34 	bl	8008a58 <HAL_GPIO_WritePin>
 8004bf0:	f00f fcae 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8004bf4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8004bf8:	f7fe bc7c 	b.w	80034f4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8004bfc:	bd38      	pop	{r3, r4, r5, pc}
 8004bfe:	bf00      	nop
 8004c00:	40021000 	.word	0x40021000

08004c04 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8004c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c08:	ed2d 8b06 	vpush	{d8-d10}
 8004c0c:	4604      	mov	r4, r0
 8004c0e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8004c10:	46a3      	mov	fp, r4
        : presenter(0)
 8004c12:	2500      	movs	r5, #0
 8004c14:	f011 f91c 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8004c18:	4b6a      	ldr	r3, [pc, #424]	; (8004dc4 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8004c1a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004c1c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8004c20:	2226      	movs	r2, #38	; 0x26
 8004c22:	4629      	mov	r1, r5
 8004c24:	4658      	mov	r0, fp
 8004c26:	f023 f9e8 	bl	8027ffa <memset>
 8004c2a:	4658      	mov	r0, fp
 8004c2c:	f7fd fc50 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8004c30:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8004c34:	26ff      	movs	r6, #255	; 0xff
 8004c36:	4b64      	ldr	r3, [pc, #400]	; (8004dc8 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8004c38:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8004c3a:	2226      	movs	r2, #38	; 0x26
 8004c3c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004c40:	4629      	mov	r1, r5
 8004c42:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8004c46:	4650      	mov	r0, sl
        : color(col)
 8004c48:	66a5      	str	r5, [r4, #104]	; 0x68
 8004c4a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8004c4e:	f023 f9d4 	bl	8027ffa <memset>
 8004c52:	4650      	mov	r0, sl
 8004c54:	f7fd fc3c 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8004c58:	4b5c      	ldr	r3, [pc, #368]	; (8004dcc <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8004c5a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8004c5c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8004c60:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8004c64:	a90c      	add	r1, sp, #48	; 0x30
 8004c66:	4650      	mov	r0, sl
 8004c68:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8004c6c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8004c70:	f00c ff65 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8004c74:	4648      	mov	r0, r9
 8004c76:	f7fd fc3d 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8004c7a:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8004c7e:	4b54      	ldr	r3, [pc, #336]	; (8004dd0 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8004c80:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8004c84:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8004c88:	4638      	mov	r0, r7
 8004c8a:	f00b fe21 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 8004c8e:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004c92:	4618      	mov	r0, r3
 8004c94:	9303      	str	r3, [sp, #12]
 8004c96:	f7fc fb13 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004c9a:	4b4e      	ldr	r3, [pc, #312]	; (8004dd4 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8004c9c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8004ca0:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8004ca4:	3324      	adds	r3, #36	; 0x24
 8004ca6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8004caa:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8004cae:	4640      	mov	r0, r8
 8004cb0:	f7fd fc20 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8004cb4:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8004cb8:	4618      	mov	r0, r3
 8004cba:	ee08 3a10 	vmov	s16, r3
 8004cbe:	f7fd fc19 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8004cc2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8004cc6:	4618      	mov	r0, r3
 8004cc8:	ee08 3a90 	vmov	s17, r3
 8004ccc:	f7fd fc12 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8004cd0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004cd4:	4618      	mov	r0, r3
 8004cd6:	ee09 3a10 	vmov	s18, r3
 8004cda:	f00d f871 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004cde:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004ce2:	4618      	mov	r0, r3
 8004ce4:	ee09 3a90 	vmov	s19, r3
 8004ce8:	f00d f86a 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004cec:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8004cf0:	4618      	mov	r0, r3
 8004cf2:	ee0a 3a10 	vmov	s20, r3
 8004cf6:	f00d f863 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004cfa:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8004cfe:	4618      	mov	r0, r3
 8004d00:	ee0a 3a90 	vmov	s21, r3
 8004d04:	f00c fef4 	bl	8011af0 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004d08:	4a33      	ldr	r2, [pc, #204]	; (8004dd8 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8004d0a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8004d0e:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8004d12:	4a32      	ldr	r2, [pc, #200]	; (8004ddc <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004d14:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004d18:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8004d1c:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8004d20:	f00d ff0a 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8004d24:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004d28:	462a      	mov	r2, r5
 8004d2a:	4658      	mov	r0, fp
 8004d2c:	9300      	str	r3, [sp, #0]
 8004d2e:	4629      	mov	r1, r5
 8004d30:	23f0      	movs	r3, #240	; 0xf0
 8004d32:	f7fd fbb9 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d36:	1d26      	adds	r6, r4, #4
        color = newColor;
 8004d38:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004d3c:	66a3      	str	r3, [r4, #104]	; 0x68
 8004d3e:	4659      	mov	r1, fp
 8004d40:	4630      	mov	r0, r6
 8004d42:	f00a f96d 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8004d46:	462a      	mov	r2, r5
 8004d48:	4650      	mov	r0, sl
 8004d4a:	4629      	mov	r1, r5
 8004d4c:	f7fd fb9f 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8004d50:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8004d52:	4650      	mov	r0, sl
 8004d54:	a90c      	add	r1, sp, #48	; 0x30
 8004d56:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8004d5a:	f00c fef0 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004d5e:	4651      	mov	r1, sl
 8004d60:	4630      	mov	r0, r6
 8004d62:	f00a f95d 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8004d66:	f44f 729a 	mov.w	r2, #308	; 0x134
 8004d6a:	2156      	movs	r1, #86	; 0x56
 8004d6c:	4648      	mov	r0, r9
 8004d6e:	f7fd fb8e 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8004d72:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8004d76:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8004d7a:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8004d7e:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8004d82:	4650      	mov	r0, sl
 8004d84:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004d88:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8004d8c:	4649      	mov	r1, r9
 8004d8e:	4798      	blx	r3
 8004d90:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8004d94:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8004d98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004d9c:	4b10      	ldr	r3, [pc, #64]	; (8004de0 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8004d9e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8004da0:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8004da4:	b92b      	cbnz	r3, 8004db2 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8004da6:	4b0f      	ldr	r3, [pc, #60]	; (8004de4 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8004da8:	4a0f      	ldr	r2, [pc, #60]	; (8004de8 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8004daa:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004dac:	480f      	ldr	r0, [pc, #60]	; (8004dec <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8004dae:	f022 ff1f 	bl	8027bf0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004db2:	4b0f      	ldr	r3, [pc, #60]	; (8004df0 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004db4:	881b      	ldrh	r3, [r3, #0]
 8004db6:	2b1d      	cmp	r3, #29
 8004db8:	d81e      	bhi.n	8004df8 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8004dba:	4b0e      	ldr	r3, [pc, #56]	; (8004df4 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8004dbc:	4a0a      	ldr	r2, [pc, #40]	; (8004de8 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8004dbe:	2161      	movs	r1, #97	; 0x61
 8004dc0:	e7f4      	b.n	8004dac <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8004dc2:	bf00      	nop
 8004dc4:	0802b020 	.word	0x0802b020
 8004dc8:	0802bf60 	.word	0x0802bf60
 8004dcc:	0802c128 	.word	0x0802c128
 8004dd0:	0802980c 	.word	0x0802980c
 8004dd4:	0802bc94 	.word	0x0802bc94
 8004dd8:	0802b008 	.word	0x0802b008
 8004ddc:	08004ba9 	.word	0x08004ba9
 8004de0:	20013814 	.word	0x20013814
 8004de4:	0802964c 	.word	0x0802964c
 8004de8:	0802974e 	.word	0x0802974e
 8004dec:	080296c9 	.word	0x080296c9
 8004df0:	20013818 	.word	0x20013818
 8004df4:	08029710 	.word	0x08029710
        return texts->getText(typedTextId);
 8004df8:	4ba5      	ldr	r3, [pc, #660]	; (8005090 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8004dfa:	211d      	movs	r1, #29
 8004dfc:	6818      	ldr	r0, [r3, #0]
 8004dfe:	f002 fc27 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8004e02:	4aa4      	ldr	r2, [pc, #656]	; (8005094 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8004e04:	4603      	mov	r3, r0
 8004e06:	2104      	movs	r1, #4
 8004e08:	4650      	mov	r0, sl
 8004e0a:	f012 fd05 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8004e0e:	4648      	mov	r0, r9
        wc1 = value;
 8004e10:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8004e14:	f00c fa98 	bl	8011348 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004e18:	4b9f      	ldr	r3, [pc, #636]	; (8005098 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8004e1a:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8004e1c:	a90c      	add	r1, sp, #48	; 0x30
 8004e1e:	231e      	movs	r3, #30
 8004e20:	4648      	mov	r0, r9
 8004e22:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004e26:	f00c faaf 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004e2a:	4649      	mov	r1, r9
 8004e2c:	4630      	mov	r0, r6
 8004e2e:	f00a f8f7 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004e32:	230a      	movs	r3, #10
 8004e34:	9300      	str	r3, [sp, #0]
 8004e36:	2232      	movs	r2, #50	; 0x32
 8004e38:	23f0      	movs	r3, #240	; 0xf0
 8004e3a:	4629      	mov	r1, r5
 8004e3c:	4638      	mov	r0, r7
 8004e3e:	f7fd fb33 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004e42:	9b03      	ldr	r3, [sp, #12]
 8004e44:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004e48:	22a0      	movs	r2, #160	; 0xa0
 8004e4a:	4611      	mov	r1, r2
 8004e4c:	4638      	mov	r0, r7
 8004e4e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004e52:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8004e56:	f00b fe51 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004e5a:	22a0      	movs	r2, #160	; 0xa0
 8004e5c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8004e60:	4638      	mov	r0, r7
 8004e62:	f00b fe56 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8004e66:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8004e6a:	2b20      	cmp	r3, #32
 8004e6c:	d005      	beq.n	8004e7a <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8004e6e:	2320      	movs	r3, #32
 8004e70:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8004e74:	4638      	mov	r0, r7
 8004e76:	f00b fd4b 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004e7a:	4638      	mov	r0, r7
 8004e7c:	2101      	movs	r1, #1
 8004e7e:	f00b fe53 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004e82:	4639      	mov	r1, r7
 8004e84:	4630      	mov	r0, r6
 8004e86:	ad04      	add	r5, sp, #16
        color = newColor;
 8004e88:	f04f 37ff 	mov.w	r7, #4294967295
 8004e8c:	f00a f8c8 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8004e90:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8004e94:	2223      	movs	r2, #35	; 0x23
 8004e96:	4640      	mov	r0, r8
 8004e98:	2145      	movs	r1, #69	; 0x45
 8004e9a:	f7fd faf8 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004e9e:	4641      	mov	r1, r8
 8004ea0:	4628      	mov	r0, r5
        color = newColor;
 8004ea2:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8004ea6:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8004eaa:	f00b ffd3 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004eae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8004eb2:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8004eb6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8004eba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004ebe:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005098 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8004ec2:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8004ec6:	2343      	movs	r3, #67	; 0x43
 8004ec8:	4649      	mov	r1, r9
 8004eca:	4640      	mov	r0, r8
 8004ecc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004ed0:	f00c fa5a 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ed4:	4641      	mov	r1, r8
 8004ed6:	4630      	mov	r0, r6
 8004ed8:	f00a f8a2 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8004edc:	ee18 0a10 	vmov	r0, s16
 8004ee0:	220c      	movs	r2, #12
 8004ee2:	2136      	movs	r1, #54	; 0x36
 8004ee4:	f7fd fad3 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8004ee8:	ee18 1a10 	vmov	r1, s16
 8004eec:	4628      	mov	r0, r5
        color = newColor;
 8004eee:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8004ef2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8004ef6:	f00b ffad 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004efa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004efe:	ee18 3a10 	vmov	r3, s16
 8004f02:	333c      	adds	r3, #60	; 0x3c
 8004f04:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f08:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8004f0a:	ee18 0a10 	vmov	r0, s16
 8004f0e:	4649      	mov	r1, r9
 8004f10:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004f14:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8004f18:	f00c fa36 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f1c:	ee18 1a10 	vmov	r1, s16
 8004f20:	4630      	mov	r0, r6
 8004f22:	f00a f87d 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8004f26:	ee18 0a90 	vmov	r0, s17
 8004f2a:	223c      	movs	r2, #60	; 0x3c
 8004f2c:	2158      	movs	r1, #88	; 0x58
 8004f2e:	f7fd faae 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8004f32:	ee18 1a90 	vmov	r1, s17
 8004f36:	4628      	mov	r0, r5
        color = newColor;
 8004f38:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8004f3c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8004f40:	f00b ff88 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f44:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f48:	ee18 3a90 	vmov	r3, s17
 8004f4c:	333c      	adds	r3, #60	; 0x3c
 8004f4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f52:	230d      	movs	r3, #13
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8004f54:	ee18 0a90 	vmov	r0, s17
 8004f58:	4649      	mov	r1, r9
 8004f5a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004f5e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8004f62:	f00c fa11 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f66:	ee18 1a90 	vmov	r1, s17
 8004f6a:	4630      	mov	r0, r6
 8004f6c:	f00a f858 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8004f70:	ee19 0a10 	vmov	r0, s18
 8004f74:	22f0      	movs	r2, #240	; 0xf0
 8004f76:	2121      	movs	r1, #33	; 0x21
 8004f78:	f7fd fa89 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8004f7c:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004f80:	464a      	mov	r2, r9
 8004f82:	f04f 0802 	mov.w	r8, #2
 8004f86:	a90b      	add	r1, sp, #44	; 0x2c
 8004f88:	ee19 0a10 	vmov	r0, s18
 8004f8c:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004f90:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8004f94:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004f98:	f00c fbdb 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8004f9c:	2345      	movs	r3, #69	; 0x45
 8004f9e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8004fa2:	350c      	adds	r5, #12
        updateTextPosition();
 8004fa4:	ee19 0a10 	vmov	r0, s18
 8004fa8:	f7fd fac6 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004fac:	ee19 1a10 	vmov	r1, s18
 8004fb0:	4630      	mov	r0, r6
        colorPressed = col;
 8004fb2:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8004fb6:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8004fba:	f00a f831 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8004fbe:	ee19 0a90 	vmov	r0, s19
 8004fc2:	22aa      	movs	r2, #170	; 0xaa
 8004fc4:	2121      	movs	r1, #33	; 0x21
 8004fc6:	f7fd fa62 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004fca:	464a      	mov	r2, r9
 8004fcc:	a90b      	add	r1, sp, #44	; 0x2c
 8004fce:	ee19 0a90 	vmov	r0, s19
 8004fd2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004fd6:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8004fda:	f00c fbba 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004fde:	2346      	movs	r3, #70	; 0x46
 8004fe0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8004fe4:	ee19 0a90 	vmov	r0, s19
 8004fe8:	f7fd faa6 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004fec:	ee19 1a90 	vmov	r1, s19
 8004ff0:	4630      	mov	r0, r6
        colorPressed = col;
 8004ff2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8004ff6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8004ffa:	f00a f811 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8004ffe:	ee1a 0a10 	vmov	r0, s20
 8005002:	2264      	movs	r2, #100	; 0x64
 8005004:	2121      	movs	r1, #33	; 0x21
 8005006:	f7fd fa42 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800500a:	464a      	mov	r2, r9
 800500c:	a90b      	add	r1, sp, #44	; 0x2c
 800500e:	ee1a 0a10 	vmov	r0, s20
 8005012:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005016:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800501a:	f00c fb9a 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800501e:	2347      	movs	r3, #71	; 0x47
 8005020:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005024:	ee1a 0a10 	vmov	r0, s20
 8005028:	f7fd fa86 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800502c:	ee1a 1a10 	vmov	r1, s20
 8005030:	4630      	mov	r0, r6
        colorPressed = col;
 8005032:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005036:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800503a:	f009 fff1 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 800503e:	ee1a 0a90 	vmov	r0, s21
 8005042:	2205      	movs	r2, #5
 8005044:	21c6      	movs	r1, #198	; 0xc6
 8005046:	f7fd fa22 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800504a:	2301      	movs	r3, #1
 800504c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005050:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8005052:	ee1a 0a90 	vmov	r0, s21
 8005056:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800505a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800505e:	aa0a      	add	r2, sp, #40	; 0x28
 8005060:	ab0b      	add	r3, sp, #44	; 0x2c
 8005062:	a909      	add	r1, sp, #36	; 0x24
 8005064:	f8cd 9000 	str.w	r9, [sp]
 8005068:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 800506c:	f00c fcab 	bl	80119c6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005070:	4630      	mov	r0, r6
 8005072:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8005076:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800507a:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800507e:	f009 ffcf 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005082:	4620      	mov	r0, r4
 8005084:	b00f      	add	sp, #60	; 0x3c
 8005086:	ecbd 8b06 	vpop	{d8-d10}
 800508a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800508e:	bf00      	nop
 8005090:	20013820 	.word	0x20013820
 8005094:	08029786 	.word	0x08029786
 8005098:	080297fc 	.word	0x080297fc

0800509c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 800509c:	4770      	bx	lr

0800509e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800509e:	4770      	bx	lr

080050a0 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80050a0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80050a2:	68c2      	ldr	r2, [r0, #12]
 80050a4:	6844      	ldr	r4, [r0, #4]
 80050a6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80050a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80050aa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80050ae:	07d2      	lsls	r2, r2, #31
 80050b0:	bf48      	it	mi
 80050b2:	5962      	ldrmi	r2, [r4, r5]
 80050b4:	689b      	ldr	r3, [r3, #8]
    }
 80050b6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80050b8:	bf48      	it	mi
 80050ba:	58d3      	ldrmi	r3, [r2, r3]
 80050bc:	4718      	bx	r3

080050be <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80050be:	6843      	ldr	r3, [r0, #4]
 80050c0:	b12b      	cbz	r3, 80050ce <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80050c2:	6883      	ldr	r3, [r0, #8]
 80050c4:	b92b      	cbnz	r3, 80050d2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80050c6:	68c0      	ldr	r0, [r0, #12]
 80050c8:	f000 0001 	and.w	r0, r0, #1
 80050cc:	4770      	bx	lr
 80050ce:	4618      	mov	r0, r3
 80050d0:	4770      	bx	lr
 80050d2:	2001      	movs	r0, #1
    }
 80050d4:	4770      	bx	lr

080050d6 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80050d6:	b510      	push	{r4, lr}
 80050d8:	2110      	movs	r1, #16
 80050da:	4604      	mov	r4, r0
 80050dc:	f021 ff97 	bl	802700e <_ZdlPvj>
 80050e0:	4620      	mov	r0, r4
 80050e2:	bd10      	pop	{r4, pc}

080050e4 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80050e4:	b510      	push	{r4, lr}
 80050e6:	4b03      	ldr	r3, [pc, #12]	; (80050f4 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80050e8:	6003      	str	r3, [r0, #0]
 80050ea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80050ec:	f00d fd2e 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80050f0:	4620      	mov	r0, r4
 80050f2:	bd10      	pop	{r4, pc}
 80050f4:	0802b06c 	.word	0x0802b06c

080050f8 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80050f8:	b507      	push	{r0, r1, r2, lr}
 80050fa:	4b07      	ldr	r3, [pc, #28]	; (8005118 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80050fc:	6003      	str	r3, [r0, #0]
 80050fe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005100:	f00d fd24 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005104:	9801      	ldr	r0, [sp, #4]
 8005106:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800510a:	f021 ff80 	bl	802700e <_ZdlPvj>
 800510e:	9801      	ldr	r0, [sp, #4]
 8005110:	b003      	add	sp, #12
 8005112:	f85d fb04 	ldr.w	pc, [sp], #4
 8005116:	bf00      	nop
 8005118:	0802b06c 	.word	0x0802b06c

0800511c <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800511c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800511e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005122:	4299      	cmp	r1, r3
{
 8005124:	4604      	mov	r4, r0
 8005126:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005128:	d103      	bne.n	8005132 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800512a:	f00f fa11 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 800512e:	f7fe f901 	bl	8003334 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005132:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005136:	429d      	cmp	r5, r3
 8005138:	d103      	bne.n	8005142 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800513a:	f00f fa09 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800513e:	f7fe f929 	bl	8003394 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005142:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005146:	42a5      	cmp	r5, r4
 8005148:	d105      	bne.n	8005156 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800514a:	f00f fa01 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 800514e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8005152:	f7fe b94f 	b.w	80033f4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8005156:	bd38      	pop	{r3, r4, r5, pc}

08005158 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800515c:	ed2d 8b06 	vpush	{d8-d10}
 8005160:	4604      	mov	r4, r0
 8005162:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005164:	46a3      	mov	fp, r4
 8005166:	2500      	movs	r5, #0
 8005168:	f010 fe72 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 800516c:	4b66      	ldr	r3, [pc, #408]	; (8005308 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 800516e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005170:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005174:	2226      	movs	r2, #38	; 0x26
 8005176:	4629      	mov	r1, r5
 8005178:	4658      	mov	r0, fp
 800517a:	f022 ff3e 	bl	8027ffa <memset>
 800517e:	4658      	mov	r0, fp
 8005180:	f7fd f9a6 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8005184:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005188:	26ff      	movs	r6, #255	; 0xff
 800518a:	4b60      	ldr	r3, [pc, #384]	; (800530c <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 800518c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800518e:	2226      	movs	r2, #38	; 0x26
 8005190:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005194:	4629      	mov	r1, r5
 8005196:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800519a:	4650      	mov	r0, sl
 800519c:	66a5      	str	r5, [r4, #104]	; 0x68
 800519e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80051a2:	f022 ff2a 	bl	8027ffa <memset>
 80051a6:	4650      	mov	r0, sl
 80051a8:	f7fd f992 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 80051ac:	4b58      	ldr	r3, [pc, #352]	; (8005310 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 80051ae:	66e3      	str	r3, [r4, #108]	; 0x6c
 80051b0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80051b4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80051b8:	a90a      	add	r1, sp, #40	; 0x28
 80051ba:	4650      	mov	r0, sl
 80051bc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80051c0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80051c4:	f00c fcbb 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80051c8:	4648      	mov	r0, r9
 80051ca:	f7fd f993 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80051ce:	4b51      	ldr	r3, [pc, #324]	; (8005314 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80051d0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80051d4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80051d8:	4618      	mov	r0, r3
 80051da:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80051de:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80051e2:	ee08 3a90 	vmov	s17, r3
 80051e6:	f7fd f985 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 80051ea:	4638      	mov	r0, r7
 80051ec:	f00b fb70 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 80051f0:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80051f4:	4618      	mov	r0, r3
 80051f6:	9303      	str	r3, [sp, #12]
 80051f8:	f7fc f862 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80051fc:	4b46      	ldr	r3, [pc, #280]	; (8005318 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80051fe:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005202:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005206:	3324      	adds	r3, #36	; 0x24
 8005208:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 800520c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005210:	4640      	mov	r0, r8
 8005212:	f7fd f96f 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8005216:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800521a:	4618      	mov	r0, r3
 800521c:	ee08 3a10 	vmov	s16, r3
 8005220:	f7fd f968 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8005224:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005228:	4618      	mov	r0, r3
 800522a:	ee09 3a10 	vmov	s18, r3
 800522e:	f00c fdc7 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005232:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005236:	4618      	mov	r0, r3
 8005238:	ee09 3a90 	vmov	s19, r3
 800523c:	f00c fdc0 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005240:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005244:	4618      	mov	r0, r3
 8005246:	ee0a 3a10 	vmov	s20, r3
 800524a:	f00c fdb9 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800524e:	4a33      	ldr	r2, [pc, #204]	; (800531c <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005250:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005254:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005258:	4a31      	ldr	r2, [pc, #196]	; (8005320 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800525a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800525e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005262:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005266:	f00d fc67 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800526a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800526e:	462a      	mov	r2, r5
 8005270:	4658      	mov	r0, fp
 8005272:	9300      	str	r3, [sp, #0]
 8005274:	4629      	mov	r1, r5
 8005276:	23f0      	movs	r3, #240	; 0xf0
 8005278:	f7fd f916 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800527c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800527e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005282:	66a3      	str	r3, [r4, #104]	; 0x68
 8005284:	4659      	mov	r1, fp
 8005286:	4630      	mov	r0, r6
 8005288:	f009 feca 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800528c:	462a      	mov	r2, r5
 800528e:	4650      	mov	r0, sl
 8005290:	4629      	mov	r1, r5
 8005292:	f7fd f8fc 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8005296:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005298:	4650      	mov	r0, sl
 800529a:	a90a      	add	r1, sp, #40	; 0x28
 800529c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80052a0:	f00c fc4d 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80052a4:	4651      	mov	r1, sl
 80052a6:	4630      	mov	r0, r6
 80052a8:	f009 feba 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80052ac:	f44f 729a 	mov.w	r2, #308	; 0x134
 80052b0:	2156      	movs	r1, #86	; 0x56
 80052b2:	4648      	mov	r0, r9
 80052b4:	f7fd f8eb 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80052b8:	f04f 33ff 	mov.w	r3, #4294967295
 80052bc:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80052c0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80052c4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80052c8:	f10d 0b10 	add.w	fp, sp, #16
 80052cc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80052d0:	4649      	mov	r1, r9
 80052d2:	4658      	mov	r0, fp
 80052d4:	4798      	blx	r3
 80052d6:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80052da:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80052de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80052e2:	4b10      	ldr	r3, [pc, #64]	; (8005324 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80052e4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80052e6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80052ea:	b92b      	cbnz	r3, 80052f8 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 80052ec:	4b0e      	ldr	r3, [pc, #56]	; (8005328 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 80052ee:	4a0f      	ldr	r2, [pc, #60]	; (800532c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80052f0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80052f2:	480f      	ldr	r0, [pc, #60]	; (8005330 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80052f4:	f022 fc7c 	bl	8027bf0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80052f8:	4b0e      	ldr	r3, [pc, #56]	; (8005334 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80052fa:	881b      	ldrh	r3, [r3, #0]
 80052fc:	2b0e      	cmp	r3, #14
 80052fe:	d81d      	bhi.n	800533c <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005300:	4b0d      	ldr	r3, [pc, #52]	; (8005338 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005302:	4a0a      	ldr	r2, [pc, #40]	; (800532c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005304:	2161      	movs	r1, #97	; 0x61
 8005306:	e7f4      	b.n	80052f2 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8005308:	0802b06c 	.word	0x0802b06c
 800530c:	0802bf60 	.word	0x0802bf60
 8005310:	0802c128 	.word	0x0802c128
 8005314:	0802980c 	.word	0x0802980c
 8005318:	0802bc94 	.word	0x0802bc94
 800531c:	0802b054 	.word	0x0802b054
 8005320:	0800511d 	.word	0x0800511d
 8005324:	20013814 	.word	0x20013814
 8005328:	0802964c 	.word	0x0802964c
 800532c:	0802974e 	.word	0x0802974e
 8005330:	080296c9 	.word	0x080296c9
 8005334:	20013818 	.word	0x20013818
 8005338:	08029710 	.word	0x08029710
        return texts->getText(typedTextId);
 800533c:	4b95      	ldr	r3, [pc, #596]	; (8005594 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 800533e:	210e      	movs	r1, #14
 8005340:	6818      	ldr	r0, [r3, #0]
 8005342:	f002 f985 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8005346:	4a94      	ldr	r2, [pc, #592]	; (8005598 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005348:	4603      	mov	r3, r0
 800534a:	2104      	movs	r1, #4
 800534c:	4650      	mov	r0, sl
 800534e:	f012 fa63 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005352:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005356:	4648      	mov	r0, r9
 8005358:	f00b fff6 	bl	8011348 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800535c:	f8df a23c 	ldr.w	sl, [pc, #572]	; 800559c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005360:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005364:	230f      	movs	r3, #15
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005366:	a90a      	add	r1, sp, #40	; 0x28
 8005368:	4648      	mov	r0, r9
 800536a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800536e:	f00c f80b 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005372:	4649      	mov	r1, r9
 8005374:	4630      	mov	r0, r6
 8005376:	f009 fe53 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 800537a:	223c      	movs	r2, #60	; 0x3c
 800537c:	ee18 0a90 	vmov	r0, s17
 8005380:	213d      	movs	r1, #61	; 0x3d
 8005382:	f7fd f884 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005386:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800538a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800538e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005392:	4658      	mov	r0, fp
        linespace = space;
 8005394:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005398:	f00b fd5c 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800539c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80053a0:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80053a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80053a8:	231c      	movs	r3, #28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 80053aa:	ee18 0a90 	vmov	r0, s17
 80053ae:	a90a      	add	r1, sp, #40	; 0x28
 80053b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80053b4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80053b8:	f00b ffe6 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053bc:	ee18 1a90 	vmov	r1, s17
 80053c0:	4630      	mov	r0, r6
 80053c2:	f009 fe2d 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80053c6:	230a      	movs	r3, #10
 80053c8:	9300      	str	r3, [sp, #0]
 80053ca:	2232      	movs	r2, #50	; 0x32
 80053cc:	23f0      	movs	r3, #240	; 0xf0
 80053ce:	4629      	mov	r1, r5
 80053d0:	4638      	mov	r0, r7
 80053d2:	f7fd f869 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80053d6:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80053da:	22a0      	movs	r2, #160	; 0xa0
 80053dc:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80053e0:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80053e4:	9b03      	ldr	r3, [sp, #12]
 80053e6:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80053ea:	4611      	mov	r1, r2
 80053ec:	4638      	mov	r0, r7
 80053ee:	f00b fb85 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80053f2:	22a0      	movs	r2, #160	; 0xa0
 80053f4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80053f8:	4638      	mov	r0, r7
 80053fa:	f00b fb8a 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80053fe:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005402:	2b20      	cmp	r3, #32
 8005404:	d005      	beq.n	8005412 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005406:	2320      	movs	r3, #32
 8005408:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 800540c:	4638      	mov	r0, r7
 800540e:	f00b fa7f 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005412:	4638      	mov	r0, r7
 8005414:	2101      	movs	r1, #1
 8005416:	f00b fb87 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800541a:	4639      	mov	r1, r7
 800541c:	4630      	mov	r0, r6
 800541e:	f009 fdff 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005422:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005426:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005428:	2223      	movs	r2, #35	; 0x23
 800542a:	4640      	mov	r0, r8
        linespace = space;
 800542c:	f04f 0a00 	mov.w	sl, #0
 8005430:	2145      	movs	r1, #69	; 0x45
 8005432:	f7fd f82c 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005436:	4641      	mov	r1, r8
 8005438:	4638      	mov	r0, r7
        color = newColor;
 800543a:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 800543e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005442:	f00b fd07 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005446:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800544a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800544e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005452:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800559c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005456:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800545a:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 800545c:	a90a      	add	r1, sp, #40	; 0x28
 800545e:	4640      	mov	r0, r8
 8005460:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005464:	f00b ff90 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005468:	4641      	mov	r1, r8
 800546a:	4630      	mov	r0, r6
 800546c:	f009 fdd8 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005470:	ee18 0a10 	vmov	r0, s16
 8005474:	220c      	movs	r2, #12
 8005476:	2136      	movs	r1, #54	; 0x36
 8005478:	f7fd f809 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800547c:	ee18 1a10 	vmov	r1, s16
 8005480:	4638      	mov	r0, r7
        color = newColor;
 8005482:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005486:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800548a:	f00b fce3 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800548e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005492:	ee18 3a10 	vmov	r3, s16
 8005496:	333c      	adds	r3, #60	; 0x3c
 8005498:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800549c:	2342      	movs	r3, #66	; 0x42
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800549e:	ee18 0a10 	vmov	r0, s16
 80054a2:	a90a      	add	r1, sp, #40	; 0x28
 80054a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80054a8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80054ac:	f00b ff6c 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054b0:	ee18 1a10 	vmov	r1, s16
 80054b4:	4630      	mov	r0, r6
 80054b6:	f009 fdb3 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80054ba:	ee19 0a10 	vmov	r0, s18
 80054be:	22f0      	movs	r2, #240	; 0xf0
 80054c0:	2121      	movs	r1, #33	; 0x21
 80054c2:	f7fc ffe4 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80054c6:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054ca:	aa0a      	add	r2, sp, #40	; 0x28
 80054cc:	f04f 0802 	mov.w	r8, #2
 80054d0:	a909      	add	r1, sp, #36	; 0x24
 80054d2:	ee19 0a10 	vmov	r0, s18
 80054d6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80054da:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80054de:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054e2:	f00c f936 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80054e6:	2340      	movs	r3, #64	; 0x40
 80054e8:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80054ec:	3710      	adds	r7, #16
        updateTextPosition();
 80054ee:	ee19 0a10 	vmov	r0, s18
 80054f2:	f7fd f821 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80054f6:	ee19 1a10 	vmov	r1, s18
 80054fa:	4630      	mov	r0, r6
        colorPressed = col;
 80054fc:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005500:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005504:	f009 fd8c 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005508:	ee19 0a90 	vmov	r0, s19
 800550c:	22aa      	movs	r2, #170	; 0xaa
 800550e:	2121      	movs	r1, #33	; 0x21
 8005510:	f7fc ffbd 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005514:	aa0a      	add	r2, sp, #40	; 0x28
 8005516:	a909      	add	r1, sp, #36	; 0x24
 8005518:	ee19 0a90 	vmov	r0, s19
 800551c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005520:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005524:	f00c f915 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005528:	233f      	movs	r3, #63	; 0x3f
 800552a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800552e:	ee19 0a90 	vmov	r0, s19
 8005532:	f7fd f801 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005536:	ee19 1a90 	vmov	r1, s19
 800553a:	4630      	mov	r0, r6
        colorPressed = col;
 800553c:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005540:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005544:	f009 fd6c 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005548:	ee1a 0a10 	vmov	r0, s20
 800554c:	2264      	movs	r2, #100	; 0x64
 800554e:	2121      	movs	r1, #33	; 0x21
 8005550:	f7fc ff9d 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005554:	aa0a      	add	r2, sp, #40	; 0x28
 8005556:	a909      	add	r1, sp, #36	; 0x24
 8005558:	ee1a 0a10 	vmov	r0, s20
 800555c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005560:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005564:	f00c f8f5 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005568:	233e      	movs	r3, #62	; 0x3e
        updateTextPosition();
 800556a:	ee1a 0a10 	vmov	r0, s20
 800556e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005572:	f7fc ffe1 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005576:	4630      	mov	r0, r6
        colorPressed = col;
 8005578:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 800557c:	ee1a 1a10 	vmov	r1, s20
 8005580:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005584:	f009 fd4c 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005588:	4620      	mov	r0, r4
 800558a:	b00d      	add	sp, #52	; 0x34
 800558c:	ecbd 8b06 	vpop	{d8-d10}
 8005590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005594:	20013820 	.word	0x20013820
 8005598:	08029786 	.word	0x08029786
 800559c:	080297fc 	.word	0x080297fc

080055a0 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 80055a0:	4770      	bx	lr

080055a2 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80055a2:	4770      	bx	lr

080055a4 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80055a4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80055a6:	68c2      	ldr	r2, [r0, #12]
 80055a8:	6844      	ldr	r4, [r0, #4]
 80055aa:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80055ac:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80055ae:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80055b2:	07d2      	lsls	r2, r2, #31
 80055b4:	bf48      	it	mi
 80055b6:	5962      	ldrmi	r2, [r4, r5]
 80055b8:	689b      	ldr	r3, [r3, #8]
    }
 80055ba:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80055bc:	bf48      	it	mi
 80055be:	58d3      	ldrmi	r3, [r2, r3]
 80055c0:	4718      	bx	r3

080055c2 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80055c2:	6843      	ldr	r3, [r0, #4]
 80055c4:	b12b      	cbz	r3, 80055d2 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80055c6:	6883      	ldr	r3, [r0, #8]
 80055c8:	b92b      	cbnz	r3, 80055d6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80055ca:	68c0      	ldr	r0, [r0, #12]
 80055cc:	f000 0001 	and.w	r0, r0, #1
 80055d0:	4770      	bx	lr
 80055d2:	4618      	mov	r0, r3
 80055d4:	4770      	bx	lr
 80055d6:	2001      	movs	r0, #1
    }
 80055d8:	4770      	bx	lr

080055da <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80055da:	b510      	push	{r4, lr}
 80055dc:	2110      	movs	r1, #16
 80055de:	4604      	mov	r4, r0
 80055e0:	f021 fd15 	bl	802700e <_ZdlPvj>
 80055e4:	4620      	mov	r0, r4
 80055e6:	bd10      	pop	{r4, pc}

080055e8 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80055e8:	b510      	push	{r4, lr}
 80055ea:	4b03      	ldr	r3, [pc, #12]	; (80055f8 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 80055ec:	6003      	str	r3, [r0, #0]
 80055ee:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055f0:	f00d faac 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055f4:	4620      	mov	r0, r4
 80055f6:	bd10      	pop	{r4, pc}
 80055f8:	0802b0b8 	.word	0x0802b0b8

080055fc <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80055fc:	b507      	push	{r0, r1, r2, lr}
 80055fe:	4b07      	ldr	r3, [pc, #28]	; (800561c <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005600:	6003      	str	r3, [r0, #0]
 8005602:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005604:	f00d faa2 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005608:	9801      	ldr	r0, [sp, #4]
 800560a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800560e:	f021 fcfe 	bl	802700e <_ZdlPvj>
 8005612:	9801      	ldr	r0, [sp, #4]
 8005614:	b003      	add	sp, #12
 8005616:	f85d fb04 	ldr.w	pc, [sp], #4
 800561a:	bf00      	nop
 800561c:	0802b0b8 	.word	0x0802b0b8

08005620 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005620:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005622:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005626:	4299      	cmp	r1, r3
{
 8005628:	4604      	mov	r4, r0
 800562a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800562c:	d103      	bne.n	8005636 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800562e:	f00e ff8f 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005632:	f7fd fe9f 	bl	8003374 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005636:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800563a:	429d      	cmp	r5, r3
 800563c:	d103      	bne.n	8005646 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800563e:	f00e ff87 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005642:	f7fd ff07 	bl	8003454 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005646:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 800564a:	42a5      	cmp	r5, r4
 800564c:	d105      	bne.n	800565a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800564e:	f00e ff7f 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005652:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005656:	f7fd beed 	b.w	8003434 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 800565a:	bd38      	pop	{r3, r4, r5, pc}

0800565c <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 800565c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005660:	ed2d 8b06 	vpush	{d8-d10}
 8005664:	4604      	mov	r4, r0
 8005666:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005668:	46a3      	mov	fp, r4
 800566a:	2500      	movs	r5, #0
 800566c:	f010 fbf0 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8005670:	4b67      	ldr	r3, [pc, #412]	; (8005810 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005672:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005674:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005678:	2226      	movs	r2, #38	; 0x26
 800567a:	4629      	mov	r1, r5
 800567c:	4658      	mov	r0, fp
 800567e:	f022 fcbc 	bl	8027ffa <memset>
 8005682:	4658      	mov	r0, fp
 8005684:	f7fc ff24 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8005688:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800568c:	26ff      	movs	r6, #255	; 0xff
 800568e:	4b61      	ldr	r3, [pc, #388]	; (8005814 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005690:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005692:	2226      	movs	r2, #38	; 0x26
 8005694:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005698:	4629      	mov	r1, r5
 800569a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800569e:	4650      	mov	r0, sl
 80056a0:	66a5      	str	r5, [r4, #104]	; 0x68
 80056a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80056a6:	f022 fca8 	bl	8027ffa <memset>
 80056aa:	4650      	mov	r0, sl
 80056ac:	f7fc ff10 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 80056b0:	4b59      	ldr	r3, [pc, #356]	; (8005818 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 80056b2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80056b4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80056b8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80056bc:	a90a      	add	r1, sp, #40	; 0x28
 80056be:	4650      	mov	r0, sl
 80056c0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80056c4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80056c8:	f00c fa39 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80056cc:	4648      	mov	r0, r9
 80056ce:	f7fc ff11 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 80056d2:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80056d6:	4b51      	ldr	r3, [pc, #324]	; (800581c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 80056d8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80056dc:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80056e0:	4638      	mov	r0, r7
 80056e2:	f00b f8f5 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 80056e6:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80056ea:	4618      	mov	r0, r3
 80056ec:	9303      	str	r3, [sp, #12]
 80056ee:	f7fb fde7 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80056f2:	4b4b      	ldr	r3, [pc, #300]	; (8005820 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 80056f4:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80056f8:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80056fc:	3324      	adds	r3, #36	; 0x24
 80056fe:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005702:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005706:	4640      	mov	r0, r8
 8005708:	f7fc fef4 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 800570c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005710:	4618      	mov	r0, r3
 8005712:	ee08 3a10 	vmov	s16, r3
 8005716:	f7fc feed 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 800571a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800571e:	4618      	mov	r0, r3
 8005720:	ee08 3a90 	vmov	s17, r3
 8005724:	f7fc fee6 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8005728:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800572c:	4618      	mov	r0, r3
 800572e:	ee09 3a10 	vmov	s18, r3
 8005732:	f00c fb45 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005736:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800573a:	4618      	mov	r0, r3
 800573c:	ee09 3a90 	vmov	s19, r3
 8005740:	f00c fb3e 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005744:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005748:	4618      	mov	r0, r3
 800574a:	ee0a 3a10 	vmov	s20, r3
 800574e:	f00c fb37 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005752:	4a34      	ldr	r2, [pc, #208]	; (8005824 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
 8005754:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005758:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800575c:	4a32      	ldr	r2, [pc, #200]	; (8005828 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800575e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005762:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005766:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800576a:	f00d f9e5 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800576e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005772:	462a      	mov	r2, r5
 8005774:	4658      	mov	r0, fp
 8005776:	9300      	str	r3, [sp, #0]
 8005778:	4629      	mov	r1, r5
 800577a:	23f0      	movs	r3, #240	; 0xf0
 800577c:	f7fc fe94 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005780:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005782:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005786:	66a3      	str	r3, [r4, #104]	; 0x68
 8005788:	4659      	mov	r1, fp
 800578a:	4630      	mov	r0, r6
 800578c:	f009 fc48 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005790:	462a      	mov	r2, r5
 8005792:	4650      	mov	r0, sl
 8005794:	4629      	mov	r1, r5
 8005796:	f7fc fe7a 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800579a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800579c:	4650      	mov	r0, sl
 800579e:	a90a      	add	r1, sp, #40	; 0x28
 80057a0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80057a4:	f00c f9cb 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80057a8:	4651      	mov	r1, sl
 80057aa:	4630      	mov	r0, r6
 80057ac:	f009 fc38 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80057b0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80057b4:	2156      	movs	r1, #86	; 0x56
 80057b6:	4648      	mov	r0, r9
 80057b8:	f7fc fe69 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80057bc:	f8d4 2098 	ldr.w	r2, [r4, #152]	; 0x98
        linespace = space;
 80057c0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80057c4:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80057c8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80057cc:	4650      	mov	r0, sl
 80057ce:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        color = newColor;
 80057d2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80057d6:	4649      	mov	r1, r9
 80057d8:	4790      	blx	r2
 80057da:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80057de:	f104 0cd4 	add.w	ip, r4, #212	; 0xd4
 80057e2:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80057e6:	4a11      	ldr	r2, [pc, #68]	; (800582c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 80057e8:	6812      	ldr	r2, [r2, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80057ea:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80057ee:	2309      	movs	r3, #9
 80057f0:	b92a      	cbnz	r2, 80057fe <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a2>
 80057f2:	4b0f      	ldr	r3, [pc, #60]	; (8005830 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80057f4:	4a0f      	ldr	r2, [pc, #60]	; (8005834 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 80057f6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80057f8:	480f      	ldr	r0, [pc, #60]	; (8005838 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
 80057fa:	f022 f9f9 	bl	8027bf0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80057fe:	4a0f      	ldr	r2, [pc, #60]	; (800583c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005800:	8812      	ldrh	r2, [r2, #0]
 8005802:	2a09      	cmp	r2, #9
 8005804:	d81e      	bhi.n	8005844 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e8>
 8005806:	4b0e      	ldr	r3, [pc, #56]	; (8005840 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>)
 8005808:	4a0a      	ldr	r2, [pc, #40]	; (8005834 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 800580a:	2161      	movs	r1, #97	; 0x61
 800580c:	e7f4      	b.n	80057f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19c>
 800580e:	bf00      	nop
 8005810:	0802b0b8 	.word	0x0802b0b8
 8005814:	0802bf60 	.word	0x0802bf60
 8005818:	0802c128 	.word	0x0802c128
 800581c:	0802980c 	.word	0x0802980c
 8005820:	0802bc94 	.word	0x0802bc94
 8005824:	0802b0a0 	.word	0x0802b0a0
 8005828:	08005621 	.word	0x08005621
 800582c:	20013814 	.word	0x20013814
 8005830:	0802964c 	.word	0x0802964c
 8005834:	0802974e 	.word	0x0802974e
 8005838:	080296c9 	.word	0x080296c9
 800583c:	20013818 	.word	0x20013818
 8005840:	08029710 	.word	0x08029710
        return texts->getText(typedTextId);
 8005844:	4619      	mov	r1, r3
 8005846:	4b93      	ldr	r3, [pc, #588]	; (8005a94 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005848:	6818      	ldr	r0, [r3, #0]
 800584a:	f001 ff01 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 800584e:	4a92      	ldr	r2, [pc, #584]	; (8005a98 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005850:	4603      	mov	r3, r0
 8005852:	2104      	movs	r1, #4
 8005854:	4650      	mov	r0, sl
 8005856:	f011 ffdf 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800585a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800585e:	4648      	mov	r0, r9
 8005860:	f00b fd72 	bl	8011348 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005864:	f04f 0a0a 	mov.w	sl, #10
 8005868:	4b8c      	ldr	r3, [pc, #560]	; (8005a9c <_ZN28Measurement_AccurateViewBaseC1Ev+0x440>)
 800586a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 800586c:	a90a      	add	r1, sp, #40	; 0x28
 800586e:	4648      	mov	r0, r9
 8005870:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8005874:	f00b fd88 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005878:	4649      	mov	r1, r9
 800587a:	4630      	mov	r0, r6
 800587c:	f009 fbd0 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005880:	23f0      	movs	r3, #240	; 0xf0
 8005882:	2232      	movs	r2, #50	; 0x32
 8005884:	4629      	mov	r1, r5
 8005886:	4638      	mov	r0, r7
 8005888:	f8cd a000 	str.w	sl, [sp]
 800588c:	f7fc fe0c 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005890:	9b03      	ldr	r3, [sp, #12]
 8005892:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005896:	22a0      	movs	r2, #160	; 0xa0
 8005898:	4611      	mov	r1, r2
 800589a:	4638      	mov	r0, r7
 800589c:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80058a0:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80058a4:	f00b f92a 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80058a8:	22a0      	movs	r2, #160	; 0xa0
 80058aa:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80058ae:	4638      	mov	r0, r7
 80058b0:	f00b f92f 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80058b4:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80058b8:	2b20      	cmp	r3, #32
 80058ba:	d005      	beq.n	80058c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x26c>
        lineWidthQ5 = widthQ5;
 80058bc:	2320      	movs	r3, #32
 80058be:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80058c2:	4638      	mov	r0, r7
 80058c4:	f00b f824 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80058c8:	4638      	mov	r0, r7
 80058ca:	2101      	movs	r1, #1
 80058cc:	f00b f92c 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80058d0:	4639      	mov	r1, r7
 80058d2:	4630      	mov	r0, r6
 80058d4:	ad04      	add	r5, sp, #16
        color = newColor;
 80058d6:	f04f 37ff 	mov.w	r7, #4294967295
 80058da:	f009 fba1 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80058de:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80058e2:	2223      	movs	r2, #35	; 0x23
 80058e4:	4640      	mov	r0, r8
 80058e6:	2145      	movs	r1, #69	; 0x45
 80058e8:	f7fc fdd1 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80058ec:	4641      	mov	r1, r8
 80058ee:	4628      	mov	r0, r5
        color = newColor;
 80058f0:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80058f4:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80058f8:	f00b faac 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80058fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005900:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005904:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005908:	f8df 9190 	ldr.w	r9, [pc, #400]	; 8005a9c <_ZN28Measurement_AccurateViewBaseC1Ev+0x440>
 800590c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005910:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005912:	a90a      	add	r1, sp, #40	; 0x28
 8005914:	4640      	mov	r0, r8
 8005916:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800591a:	f00b fd35 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800591e:	4641      	mov	r1, r8
 8005920:	4630      	mov	r0, r6
 8005922:	f009 fb7d 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005926:	ee18 0a10 	vmov	r0, s16
 800592a:	220c      	movs	r2, #12
 800592c:	2136      	movs	r1, #54	; 0x36
 800592e:	f7fc fdae 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8005932:	ee18 1a10 	vmov	r1, s16
 8005936:	4628      	mov	r0, r5
        color = newColor;
 8005938:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800593c:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005940:	f00b fa88 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005944:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005948:	ee18 3a10 	vmov	r3, s16
 800594c:	333c      	adds	r3, #60	; 0x3c
 800594e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005952:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8005954:	ee18 0a10 	vmov	r0, s16
 8005958:	a90a      	add	r1, sp, #40	; 0x28
 800595a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800595e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005962:	f00b fd11 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005966:	ee18 1a10 	vmov	r1, s16
 800596a:	4630      	mov	r0, r6
 800596c:	f009 fb58 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8005970:	ee18 0a90 	vmov	r0, s17
 8005974:	223c      	movs	r2, #60	; 0x3c
 8005976:	2121      	movs	r1, #33	; 0x21
 8005978:	f7fc fd89 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800597c:	ee18 1a90 	vmov	r1, s17
 8005980:	4628      	mov	r0, r5
        color = newColor;
 8005982:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005986:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800598a:	f00b fa63 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800598e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005992:	ee18 3a90 	vmov	r3, s17
 8005996:	333c      	adds	r3, #60	; 0x3c
 8005998:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800599c:	2318      	movs	r3, #24
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 800599e:	ee18 0a90 	vmov	r0, s17
 80059a2:	a90a      	add	r1, sp, #40	; 0x28
 80059a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80059a8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80059ac:	f00b fcec 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80059b0:	ee18 1a90 	vmov	r1, s17
 80059b4:	4630      	mov	r0, r6
 80059b6:	f009 fb33 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80059ba:	ee19 0a10 	vmov	r0, s18
 80059be:	22f0      	movs	r2, #240	; 0xf0
 80059c0:	2121      	movs	r1, #33	; 0x21
 80059c2:	f7fc fd64 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80059c6:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059ca:	aa0a      	add	r2, sp, #40	; 0x28
 80059cc:	f04f 0802 	mov.w	r8, #2
 80059d0:	a909      	add	r1, sp, #36	; 0x24
 80059d2:	ee19 0a10 	vmov	r0, s18
 80059d6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80059da:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80059de:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059e2:	f00b feb6 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80059e6:	232d      	movs	r3, #45	; 0x2d
 80059e8:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80059ec:	3510      	adds	r5, #16
        updateTextPosition();
 80059ee:	ee19 0a10 	vmov	r0, s18
 80059f2:	f7fc fda1 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80059f6:	ee19 1a10 	vmov	r1, s18
 80059fa:	4630      	mov	r0, r6
        colorPressed = col;
 80059fc:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005a00:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005a04:	f009 fb0c 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005a08:	ee19 0a90 	vmov	r0, s19
 8005a0c:	22aa      	movs	r2, #170	; 0xaa
 8005a0e:	2121      	movs	r1, #33	; 0x21
 8005a10:	f7fc fd3d 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a14:	aa0a      	add	r2, sp, #40	; 0x28
 8005a16:	a909      	add	r1, sp, #36	; 0x24
 8005a18:	ee19 0a90 	vmov	r0, s19
 8005a1c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a20:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a24:	f00b fe95 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a28:	232c      	movs	r3, #44	; 0x2c
 8005a2a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005a2e:	ee19 0a90 	vmov	r0, s19
 8005a32:	f7fc fd81 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a36:	ee19 1a90 	vmov	r1, s19
 8005a3a:	4630      	mov	r0, r6
        colorPressed = col;
 8005a3c:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005a40:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005a44:	f009 faec 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005a48:	ee1a 0a10 	vmov	r0, s20
 8005a4c:	2264      	movs	r2, #100	; 0x64
 8005a4e:	2121      	movs	r1, #33	; 0x21
 8005a50:	f7fc fd1d 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a54:	aa0a      	add	r2, sp, #40	; 0x28
 8005a56:	a909      	add	r1, sp, #36	; 0x24
 8005a58:	ee1a 0a10 	vmov	r0, s20
 8005a5c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a60:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a64:	f00b fe75 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a68:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8005a6a:	ee1a 0a10 	vmov	r0, s20
 8005a6e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005a72:	f7fc fd61 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a76:	4630      	mov	r0, r6
        colorPressed = col;
 8005a78:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005a7c:	ee1a 1a10 	vmov	r1, s20
 8005a80:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005a84:	f009 facc 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005a88:	4620      	mov	r0, r4
 8005a8a:	b00d      	add	sp, #52	; 0x34
 8005a8c:	ecbd 8b06 	vpop	{d8-d10}
 8005a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a94:	20013820 	.word	0x20013820
 8005a98:	08029786 	.word	0x08029786
 8005a9c:	080297fc 	.word	0x080297fc

08005aa0 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005aa0:	4770      	bx	lr

08005aa2 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005aa2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005aa4:	68c2      	ldr	r2, [r0, #12]
 8005aa6:	6844      	ldr	r4, [r0, #4]
 8005aa8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005aaa:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005aac:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005ab0:	07d2      	lsls	r2, r2, #31
 8005ab2:	bf48      	it	mi
 8005ab4:	5962      	ldrmi	r2, [r4, r5]
 8005ab6:	689b      	ldr	r3, [r3, #8]
    }
 8005ab8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005aba:	bf48      	it	mi
 8005abc:	58d3      	ldrmi	r3, [r2, r3]
 8005abe:	4718      	bx	r3

08005ac0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005ac0:	6843      	ldr	r3, [r0, #4]
 8005ac2:	b12b      	cbz	r3, 8005ad0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005ac4:	6883      	ldr	r3, [r0, #8]
 8005ac6:	b92b      	cbnz	r3, 8005ad4 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005ac8:	68c0      	ldr	r0, [r0, #12]
 8005aca:	f000 0001 	and.w	r0, r0, #1
 8005ace:	4770      	bx	lr
 8005ad0:	4618      	mov	r0, r3
 8005ad2:	4770      	bx	lr
 8005ad4:	2001      	movs	r0, #1
    }
 8005ad6:	4770      	bx	lr

08005ad8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005ad8:	b510      	push	{r4, lr}
 8005ada:	2110      	movs	r1, #16
 8005adc:	4604      	mov	r4, r0
 8005ade:	f021 fa96 	bl	802700e <_ZdlPvj>
 8005ae2:	4620      	mov	r0, r4
 8005ae4:	bd10      	pop	{r4, pc}

08005ae6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8005ae6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8005aea:	f001 beb7 	b.w	800785c <_ZN17Gauge_with_Values10initializeEv>

08005aee <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8005aee:	3098      	adds	r0, #152	; 0x98
 8005af0:	4288      	cmp	r0, r1
{
 8005af2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8005af4:	d105      	bne.n	8005b02 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005af6:	f00e fd2b 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8005afa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8005afe:	f7fd bc89 	b.w	8003414 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8005b02:	bd08      	pop	{r3, pc}

08005b04 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005b04:	b510      	push	{r4, lr}
 8005b06:	4b07      	ldr	r3, [pc, #28]	; (8005b24 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8005b08:	6003      	str	r3, [r0, #0]
 8005b0a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b0c:	f00d f81e 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8005b10:	4b05      	ldr	r3, [pc, #20]	; (8005b28 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8005b12:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8005b16:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8005b1a:	f7fe fe21 	bl	8004760 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8005b1e:	4620      	mov	r0, r4
 8005b20:	bd10      	pop	{r4, pc}
 8005b22:	bf00      	nop
 8005b24:	0802b104 	.word	0x0802b104
 8005b28:	0802b5f0 	.word	0x0802b5f0

08005b2c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005b2c:	b510      	push	{r4, lr}
 8005b2e:	4604      	mov	r4, r0
}
 8005b30:	f7ff ffe8 	bl	8005b04 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8005b34:	4620      	mov	r0, r4
 8005b36:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8005b3a:	f021 fa68 	bl	802700e <_ZdlPvj>
 8005b3e:	4620      	mov	r0, r4
 8005b40:	bd10      	pop	{r4, pc}
	...

08005b44 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8005b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b48:	ed2d 8b04 	vpush	{d8-d9}
 8005b4c:	4604      	mov	r4, r0
 8005b4e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8005b50:	46a1      	mov	r9, r4
 8005b52:	2500      	movs	r5, #0
 8005b54:	f010 f97c 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8005b58:	4bac      	ldr	r3, [pc, #688]	; (8005e0c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 8005b5a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005b5c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8005b60:	2226      	movs	r2, #38	; 0x26
 8005b62:	4629      	mov	r1, r5
 8005b64:	4648      	mov	r0, r9
 8005b66:	f022 fa48 	bl	8027ffa <memset>
 8005b6a:	4648      	mov	r0, r9
 8005b6c:	f7fc fcb0 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8005b70:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8005b74:	26ff      	movs	r6, #255	; 0xff
 8005b76:	4ba6      	ldr	r3, [pc, #664]	; (8005e10 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8005b78:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005b7a:	2226      	movs	r2, #38	; 0x26
 8005b7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005b80:	4629      	mov	r1, r5
 8005b82:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005b86:	4640      	mov	r0, r8
 8005b88:	66a5      	str	r5, [r4, #104]	; 0x68
 8005b8a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005b8e:	f022 fa34 	bl	8027ffa <memset>
 8005b92:	4640      	mov	r0, r8
 8005b94:	f7fc fc9c 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8005b98:	4b9e      	ldr	r3, [pc, #632]	; (8005e14 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8005b9a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005b9c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005ba0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005ba4:	a90a      	add	r1, sp, #40	; 0x28
 8005ba6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8005ba8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005bac:	f00b ffc7 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005bb0:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8005bb4:	4618      	mov	r0, r3
 8005bb6:	ee08 3a10 	vmov	s16, r3
 8005bba:	f00c f901 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005bbe:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8005bc2:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8005bc6:	4618      	mov	r0, r3
 8005bc8:	ee08 3a90 	vmov	s17, r3
 8005bcc:	f7fc fc92 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8005bd0:	4638      	mov	r0, r7
 8005bd2:	f00a fe7d 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 8005bd6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005bda:	4618      	mov	r0, r3
 8005bdc:	9303      	str	r3, [sp, #12]
 8005bde:	f7fb fb6f 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005be2:	4b8d      	ldr	r3, [pc, #564]	; (8005e18 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8005be4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8005be8:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8005bec:	3324      	adds	r3, #36	; 0x24
 8005bee:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8005bf2:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8005bf6:	4658      	mov	r0, fp
 8005bf8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8005bfc:	f7fc fc7a 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8005c00:	4650      	mov	r0, sl
 8005c02:	f7fc fc77 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8005c06:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8005c0a:	4618      	mov	r0, r3
 8005c0c:	ee09 3a10 	vmov	s18, r3
 8005c10:	f001 fe1a 	bl	8007848 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005c14:	4a81      	ldr	r2, [pc, #516]	; (8005e1c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 8005c16:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005c1a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8005c1e:	4a80      	ldr	r2, [pc, #512]	; (8005e20 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005c20:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005c24:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8005c28:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8005c2c:	f00c ff84 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005c30:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005c34:	462a      	mov	r2, r5
 8005c36:	4648      	mov	r0, r9
 8005c38:	9300      	str	r3, [sp, #0]
 8005c3a:	4629      	mov	r1, r5
 8005c3c:	23f0      	movs	r3, #240	; 0xf0
 8005c3e:	f7fc fc33 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c42:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005c44:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005c48:	66a3      	str	r3, [r4, #104]	; 0x68
 8005c4a:	4649      	mov	r1, r9
 8005c4c:	4630      	mov	r0, r6
 8005c4e:	f009 f9e7 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005c52:	462a      	mov	r2, r5
 8005c54:	4640      	mov	r0, r8
 8005c56:	4629      	mov	r1, r5
 8005c58:	f7fc fc19 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8005c5c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005c5e:	4640      	mov	r0, r8
 8005c60:	a90a      	add	r1, sp, #40	; 0x28
 8005c62:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c66:	f00b ff6a 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005c6a:	4641      	mov	r1, r8
 8005c6c:	4630      	mov	r0, r6
 8005c6e:	f009 f9d7 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8005c72:	ee18 0a10 	vmov	r0, s16
 8005c76:	f240 1201 	movw	r2, #257	; 0x101
 8005c7a:	2121      	movs	r1, #33	; 0x21
 8005c7c:	f7fc fc07 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8005c80:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c82:	aa0a      	add	r2, sp, #40	; 0x28
 8005c84:	a909      	add	r1, sp, #36	; 0x24
 8005c86:	ee18 0a10 	vmov	r0, s16
 8005c8a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005c8e:	2302      	movs	r3, #2
 8005c90:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c94:	f00b fd5d 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005c98:	2314      	movs	r3, #20
        updateTextPosition();
 8005c9a:	ee18 0a10 	vmov	r0, s16
 8005c9e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8005ca2:	f7fc fc49 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8005ca6:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8005caa:	3314      	adds	r3, #20
        color = col;
 8005cac:	f04f 39ff 	mov.w	r9, #4294967295
 8005cb0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8005cb4:	ee18 1a10 	vmov	r1, s16
 8005cb8:	4630      	mov	r0, r6
        colorPressed = col;
 8005cba:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8005cbe:	f009 f9af 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005cc2:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8005cc6:	223c      	movs	r2, #60	; 0x3c
 8005cc8:	ee18 0a90 	vmov	r0, s17
 8005ccc:	2117      	movs	r1, #23
 8005cce:	f7fc fbde 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8005cd2:	ee18 1a90 	vmov	r1, s17
 8005cd6:	4640      	mov	r0, r8
        color = newColor;
 8005cd8:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8005cdc:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005ce0:	f00b f8b8 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ce4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005ce8:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8005cec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8005cf0:	4b4c      	ldr	r3, [pc, #304]	; (8005e24 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8005cf2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8005cf4:	ee18 0a90 	vmov	r0, s17
 8005cf8:	2315      	movs	r3, #21
 8005cfa:	a90a      	add	r1, sp, #40	; 0x28
 8005cfc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d00:	f00b fb42 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d04:	ee18 1a90 	vmov	r1, s17
 8005d08:	4630      	mov	r0, r6
 8005d0a:	f009 f989 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005d0e:	230a      	movs	r3, #10
 8005d10:	9300      	str	r3, [sp, #0]
 8005d12:	2232      	movs	r2, #50	; 0x32
 8005d14:	23f0      	movs	r3, #240	; 0xf0
 8005d16:	4629      	mov	r1, r5
 8005d18:	4638      	mov	r0, r7
 8005d1a:	f7fc fbc5 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d1e:	9b03      	ldr	r3, [sp, #12]
 8005d20:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d24:	22a0      	movs	r2, #160	; 0xa0
 8005d26:	4611      	mov	r1, r2
 8005d28:	4638      	mov	r0, r7
 8005d2a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005d2e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8005d32:	f00a fee3 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d36:	22a0      	movs	r2, #160	; 0xa0
 8005d38:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005d3c:	4638      	mov	r0, r7
 8005d3e:	f00a fee8 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005d42:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8005d46:	2b20      	cmp	r3, #32
 8005d48:	d005      	beq.n	8005d56 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8005d4a:	2320      	movs	r3, #32
 8005d4c:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8005d50:	4638      	mov	r0, r7
 8005d52:	f00a fddd 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005d56:	4638      	mov	r0, r7
 8005d58:	2101      	movs	r1, #1
 8005d5a:	f00a fee5 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005d5e:	4639      	mov	r1, r7
 8005d60:	4630      	mov	r0, r6
 8005d62:	f009 f95d 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005d66:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8005d68:	2223      	movs	r2, #35	; 0x23
 8005d6a:	4658      	mov	r0, fp
        color = newColor;
 8005d6c:	f04f 39ff 	mov.w	r9, #4294967295
 8005d70:	2145      	movs	r1, #69	; 0x45
 8005d72:	f7fc fb8c 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005d76:	4659      	mov	r1, fp
 8005d78:	4640      	mov	r0, r8
        color = newColor;
 8005d7a:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8005d7e:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8005d82:	f00b f867 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d86:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005d8a:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8005d8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005d92:	4f24      	ldr	r7, [pc, #144]	; (8005e24 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8005d94:	970a      	str	r7, [sp, #40]	; 0x28
 8005d96:	2316      	movs	r3, #22
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8005d98:	a90a      	add	r1, sp, #40	; 0x28
 8005d9a:	4658      	mov	r0, fp
 8005d9c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005da0:	f00b faf2 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005da4:	4659      	mov	r1, fp
 8005da6:	4630      	mov	r0, r6
 8005da8:	f009 f93a 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005dac:	220c      	movs	r2, #12
 8005dae:	4650      	mov	r0, sl
 8005db0:	2136      	movs	r1, #54	; 0x36
 8005db2:	f7fc fb6c 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8005db6:	4651      	mov	r1, sl
 8005db8:	4640      	mov	r0, r8
        color = newColor;
 8005dba:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8005dbe:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8005dc2:	f00b f847 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005dc6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005dca:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8005dce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005dd2:	2317      	movs	r3, #23
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8005dd4:	a90a      	add	r1, sp, #40	; 0x28
 8005dd6:	4650      	mov	r0, sl
 8005dd8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ddc:	970a      	str	r7, [sp, #40]	; 0x28
 8005dde:	f00b fad3 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005de2:	4651      	mov	r1, sl
 8005de4:	4630      	mov	r0, r6
 8005de6:	f009 f91b 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8005dea:	ee19 0a10 	vmov	r0, s18
 8005dee:	224e      	movs	r2, #78	; 0x4e
 8005df0:	4629      	mov	r1, r5
 8005df2:	f7fc fb4c 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8005df6:	4630      	mov	r0, r6
 8005df8:	ee19 1a10 	vmov	r1, s18
 8005dfc:	f009 f910 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005e00:	4620      	mov	r0, r4
 8005e02:	b00d      	add	sp, #52	; 0x34
 8005e04:	ecbd 8b04 	vpop	{d8-d9}
 8005e08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e0c:	0802b104 	.word	0x0802b104
 8005e10:	0802bf60 	.word	0x0802bf60
 8005e14:	0802c128 	.word	0x0802c128
 8005e18:	0802bc94 	.word	0x0802bc94
 8005e1c:	0802b0ec 	.word	0x0802b0ec
 8005e20:	08005aef 	.word	0x08005aef
 8005e24:	080297fc 	.word	0x080297fc

08005e28 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005e28:	4770      	bx	lr

08005e2a <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005e2a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005e2c:	68c2      	ldr	r2, [r0, #12]
 8005e2e:	6844      	ldr	r4, [r0, #4]
 8005e30:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005e32:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005e34:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005e38:	07d2      	lsls	r2, r2, #31
 8005e3a:	bf48      	it	mi
 8005e3c:	5962      	ldrmi	r2, [r4, r5]
 8005e3e:	689b      	ldr	r3, [r3, #8]
    }
 8005e40:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005e42:	bf48      	it	mi
 8005e44:	58d3      	ldrmi	r3, [r2, r3]
 8005e46:	4718      	bx	r3

08005e48 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005e48:	6843      	ldr	r3, [r0, #4]
 8005e4a:	b12b      	cbz	r3, 8005e58 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005e4c:	6883      	ldr	r3, [r0, #8]
 8005e4e:	b92b      	cbnz	r3, 8005e5c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005e50:	68c0      	ldr	r0, [r0, #12]
 8005e52:	f000 0001 	and.w	r0, r0, #1
 8005e56:	4770      	bx	lr
 8005e58:	4618      	mov	r0, r3
 8005e5a:	4770      	bx	lr
 8005e5c:	2001      	movs	r0, #1
    }
 8005e5e:	4770      	bx	lr

08005e60 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005e60:	b510      	push	{r4, lr}
 8005e62:	2110      	movs	r1, #16
 8005e64:	4604      	mov	r4, r0
 8005e66:	f021 f8d2 	bl	802700e <_ZdlPvj>
 8005e6a:	4620      	mov	r0, r4
 8005e6c:	bd10      	pop	{r4, pc}

08005e6e <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8005e6e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8005e72:	f001 bcf3 	b.w	800785c <_ZN17Gauge_with_Values10initializeEv>

08005e76 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8005e76:	3098      	adds	r0, #152	; 0x98
 8005e78:	4288      	cmp	r0, r1
{
 8005e7a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8005e7c:	d105      	bne.n	8005e8a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005e7e:	f00e fb67 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8005e82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8005e86:	f7fd bac5 	b.w	8003414 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8005e8a:	bd08      	pop	{r3, pc}

08005e8c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8005e8c:	b510      	push	{r4, lr}
 8005e8e:	4b07      	ldr	r3, [pc, #28]	; (8005eac <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8005e90:	6003      	str	r3, [r0, #0]
 8005e92:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005e94:	f00c fe5a 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8005e98:	4b05      	ldr	r3, [pc, #20]	; (8005eb0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 8005e9a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8005e9e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8005ea2:	f7fe fc5d 	bl	8004760 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8005ea6:	4620      	mov	r0, r4
 8005ea8:	bd10      	pop	{r4, pc}
 8005eaa:	bf00      	nop
 8005eac:	0802b150 	.word	0x0802b150
 8005eb0:	0802b5f0 	.word	0x0802b5f0

08005eb4 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8005eb4:	b510      	push	{r4, lr}
 8005eb6:	4604      	mov	r4, r0
}
 8005eb8:	f7ff ffe8 	bl	8005e8c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8005ebc:	4620      	mov	r0, r4
 8005ebe:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8005ec2:	f021 f8a4 	bl	802700e <_ZdlPvj>
 8005ec6:	4620      	mov	r0, r4
 8005ec8:	bd10      	pop	{r4, pc}
	...

08005ecc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8005ecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ed0:	ed2d 8b04 	vpush	{d8-d9}
 8005ed4:	4604      	mov	r4, r0
 8005ed6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8005ed8:	46a1      	mov	r9, r4
 8005eda:	2500      	movs	r5, #0
 8005edc:	f00f ffb8 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8005ee0:	4bac      	ldr	r3, [pc, #688]	; (8006194 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 8005ee2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005ee4:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8005ee8:	2226      	movs	r2, #38	; 0x26
 8005eea:	4629      	mov	r1, r5
 8005eec:	4648      	mov	r0, r9
 8005eee:	f022 f884 	bl	8027ffa <memset>
 8005ef2:	4648      	mov	r0, r9
 8005ef4:	f7fc faec 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8005ef8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8005efc:	26ff      	movs	r6, #255	; 0xff
 8005efe:	4ba6      	ldr	r3, [pc, #664]	; (8006198 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8005f00:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005f02:	2226      	movs	r2, #38	; 0x26
 8005f04:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005f08:	4629      	mov	r1, r5
 8005f0a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005f0e:	4640      	mov	r0, r8
 8005f10:	66a5      	str	r5, [r4, #104]	; 0x68
 8005f12:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005f16:	f022 f870 	bl	8027ffa <memset>
 8005f1a:	4640      	mov	r0, r8
 8005f1c:	f7fc fad8 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8005f20:	4b9e      	ldr	r3, [pc, #632]	; (800619c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 8005f22:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005f24:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005f28:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005f2c:	a90a      	add	r1, sp, #40	; 0x28
 8005f2e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8005f30:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005f34:	f00b fe03 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005f38:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8005f3c:	4618      	mov	r0, r3
 8005f3e:	ee08 3a10 	vmov	s16, r3
 8005f42:	f00b ff3d 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005f46:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8005f4a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8005f4e:	4618      	mov	r0, r3
 8005f50:	ee08 3a90 	vmov	s17, r3
 8005f54:	f7fc face 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8005f58:	4638      	mov	r0, r7
 8005f5a:	f00a fcb9 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 8005f5e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005f62:	4618      	mov	r0, r3
 8005f64:	9303      	str	r3, [sp, #12]
 8005f66:	f7fb f9ab 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005f6a:	4b8d      	ldr	r3, [pc, #564]	; (80061a0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8005f6c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8005f70:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8005f74:	3324      	adds	r3, #36	; 0x24
 8005f76:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8005f7a:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8005f7e:	4658      	mov	r0, fp
 8005f80:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8005f84:	f7fc fab6 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8005f88:	4650      	mov	r0, sl
 8005f8a:	f7fc fab3 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8005f8e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8005f92:	4618      	mov	r0, r3
 8005f94:	ee09 3a10 	vmov	s18, r3
 8005f98:	f001 fc56 	bl	8007848 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005f9c:	4a81      	ldr	r2, [pc, #516]	; (80061a4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 8005f9e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005fa2:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8005fa6:	4a80      	ldr	r2, [pc, #512]	; (80061a8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005fa8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005fac:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8005fb0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8005fb4:	f00c fdc0 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005fb8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005fbc:	462a      	mov	r2, r5
 8005fbe:	4648      	mov	r0, r9
 8005fc0:	9300      	str	r3, [sp, #0]
 8005fc2:	4629      	mov	r1, r5
 8005fc4:	23f0      	movs	r3, #240	; 0xf0
 8005fc6:	f7fc fa6f 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fca:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005fcc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005fd0:	66a3      	str	r3, [r4, #104]	; 0x68
 8005fd2:	4649      	mov	r1, r9
 8005fd4:	4630      	mov	r0, r6
 8005fd6:	f009 f823 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005fda:	462a      	mov	r2, r5
 8005fdc:	4640      	mov	r0, r8
 8005fde:	4629      	mov	r1, r5
 8005fe0:	f7fc fa55 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8005fe4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005fe6:	4640      	mov	r0, r8
 8005fe8:	a90a      	add	r1, sp, #40	; 0x28
 8005fea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005fee:	f00b fda6 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005ff2:	4641      	mov	r1, r8
 8005ff4:	4630      	mov	r0, r6
 8005ff6:	f009 f813 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8005ffa:	ee18 0a10 	vmov	r0, s16
 8005ffe:	f240 1201 	movw	r2, #257	; 0x101
 8006002:	2121      	movs	r1, #33	; 0x21
 8006004:	f7fc fa43 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006008:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800600a:	aa0a      	add	r2, sp, #40	; 0x28
 800600c:	a909      	add	r1, sp, #36	; 0x24
 800600e:	ee18 0a10 	vmov	r0, s16
 8006012:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006016:	2302      	movs	r3, #2
 8006018:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800601c:	f00b fb99 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006020:	2310      	movs	r3, #16
        updateTextPosition();
 8006022:	ee18 0a10 	vmov	r0, s16
 8006026:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800602a:	f7fc fa85 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800602e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006032:	3314      	adds	r3, #20
        color = col;
 8006034:	f04f 39ff 	mov.w	r9, #4294967295
 8006038:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800603c:	ee18 1a10 	vmov	r1, s16
 8006040:	4630      	mov	r0, r6
        colorPressed = col;
 8006042:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006046:	f008 ffeb 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800604a:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800604e:	223c      	movs	r2, #60	; 0x3c
 8006050:	ee18 0a90 	vmov	r0, s17
 8006054:	2117      	movs	r1, #23
 8006056:	f7fc fa1a 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800605a:	ee18 1a90 	vmov	r1, s17
 800605e:	4640      	mov	r0, r8
        color = newColor;
 8006060:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006064:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006068:	f00a fef4 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800606c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006070:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006074:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006078:	4b4c      	ldr	r3, [pc, #304]	; (80061ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800607a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 800607c:	ee18 0a90 	vmov	r0, s17
 8006080:	2311      	movs	r3, #17
 8006082:	a90a      	add	r1, sp, #40	; 0x28
 8006084:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006088:	f00b f97e 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800608c:	ee18 1a90 	vmov	r1, s17
 8006090:	4630      	mov	r0, r6
 8006092:	f008 ffc5 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006096:	230a      	movs	r3, #10
 8006098:	9300      	str	r3, [sp, #0]
 800609a:	2232      	movs	r2, #50	; 0x32
 800609c:	23f0      	movs	r3, #240	; 0xf0
 800609e:	4629      	mov	r1, r5
 80060a0:	4638      	mov	r0, r7
 80060a2:	f7fc fa01 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80060a6:	9b03      	ldr	r3, [sp, #12]
 80060a8:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80060ac:	22a0      	movs	r2, #160	; 0xa0
 80060ae:	4611      	mov	r1, r2
 80060b0:	4638      	mov	r0, r7
 80060b2:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80060b6:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80060ba:	f00a fd1f 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80060be:	22a0      	movs	r2, #160	; 0xa0
 80060c0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80060c4:	4638      	mov	r0, r7
 80060c6:	f00a fd24 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80060ca:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80060ce:	2b20      	cmp	r3, #32
 80060d0:	d005      	beq.n	80060de <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80060d2:	2320      	movs	r3, #32
 80060d4:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80060d8:	4638      	mov	r0, r7
 80060da:	f00a fc19 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80060de:	4638      	mov	r0, r7
 80060e0:	2101      	movs	r1, #1
 80060e2:	f00a fd21 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80060e6:	4639      	mov	r1, r7
 80060e8:	4630      	mov	r0, r6
 80060ea:	f008 ff99 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80060ee:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80060f0:	2223      	movs	r2, #35	; 0x23
 80060f2:	4658      	mov	r0, fp
        color = newColor;
 80060f4:	f04f 39ff 	mov.w	r9, #4294967295
 80060f8:	2145      	movs	r1, #69	; 0x45
 80060fa:	f7fc f9c8 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80060fe:	4659      	mov	r1, fp
 8006100:	4640      	mov	r0, r8
        color = newColor;
 8006102:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8006106:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800610a:	f00a fea3 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800610e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006112:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006116:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800611a:	4f24      	ldr	r7, [pc, #144]	; (80061ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800611c:	970a      	str	r7, [sp, #40]	; 0x28
 800611e:	2312      	movs	r3, #18
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006120:	a90a      	add	r1, sp, #40	; 0x28
 8006122:	4658      	mov	r0, fp
 8006124:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006128:	f00b f92e 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800612c:	4659      	mov	r1, fp
 800612e:	4630      	mov	r0, r6
 8006130:	f008 ff76 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006134:	220c      	movs	r2, #12
 8006136:	4650      	mov	r0, sl
 8006138:	2136      	movs	r1, #54	; 0x36
 800613a:	f7fc f9a8 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800613e:	4651      	mov	r1, sl
 8006140:	4640      	mov	r0, r8
        color = newColor;
 8006142:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8006146:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800614a:	f00a fe83 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800614e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006152:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006156:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800615a:	2313      	movs	r3, #19
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 800615c:	a90a      	add	r1, sp, #40	; 0x28
 800615e:	4650      	mov	r0, sl
 8006160:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006164:	970a      	str	r7, [sp, #40]	; 0x28
 8006166:	f00b f90f 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800616a:	4651      	mov	r1, sl
 800616c:	4630      	mov	r0, r6
 800616e:	f008 ff57 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006172:	ee19 0a10 	vmov	r0, s18
 8006176:	224e      	movs	r2, #78	; 0x4e
 8006178:	4629      	mov	r1, r5
 800617a:	f7fc f988 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800617e:	4630      	mov	r0, r6
 8006180:	ee19 1a10 	vmov	r1, s18
 8006184:	f008 ff4c 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006188:	4620      	mov	r0, r4
 800618a:	b00d      	add	sp, #52	; 0x34
 800618c:	ecbd 8b04 	vpop	{d8-d9}
 8006190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006194:	0802b150 	.word	0x0802b150
 8006198:	0802bf60 	.word	0x0802bf60
 800619c:	0802c128 	.word	0x0802c128
 80061a0:	0802bc94 	.word	0x0802bc94
 80061a4:	0802b138 	.word	0x0802b138
 80061a8:	08005e77 	.word	0x08005e77
 80061ac:	080297fc 	.word	0x080297fc

080061b0 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80061b0:	4770      	bx	lr

080061b2 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80061b2:	4770      	bx	lr

080061b4 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80061b4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80061b6:	68c2      	ldr	r2, [r0, #12]
 80061b8:	6844      	ldr	r4, [r0, #4]
 80061ba:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80061bc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80061be:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80061c2:	07d2      	lsls	r2, r2, #31
 80061c4:	bf48      	it	mi
 80061c6:	5962      	ldrmi	r2, [r4, r5]
 80061c8:	689b      	ldr	r3, [r3, #8]
    }
 80061ca:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80061cc:	bf48      	it	mi
 80061ce:	58d3      	ldrmi	r3, [r2, r3]
 80061d0:	4718      	bx	r3

080061d2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80061d2:	6843      	ldr	r3, [r0, #4]
 80061d4:	b12b      	cbz	r3, 80061e2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80061d6:	6883      	ldr	r3, [r0, #8]
 80061d8:	b92b      	cbnz	r3, 80061e6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80061da:	68c0      	ldr	r0, [r0, #12]
 80061dc:	f000 0001 	and.w	r0, r0, #1
 80061e0:	4770      	bx	lr
 80061e2:	4618      	mov	r0, r3
 80061e4:	4770      	bx	lr
 80061e6:	2001      	movs	r0, #1
    }
 80061e8:	4770      	bx	lr

080061ea <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80061ea:	b510      	push	{r4, lr}
 80061ec:	2110      	movs	r1, #16
 80061ee:	4604      	mov	r4, r0
 80061f0:	f020 ff0d 	bl	802700e <_ZdlPvj>
 80061f4:	4620      	mov	r0, r4
 80061f6:	bd10      	pop	{r4, pc}

080061f8 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80061f8:	b510      	push	{r4, lr}
 80061fa:	4b03      	ldr	r3, [pc, #12]	; (8006208 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80061fc:	6003      	str	r3, [r0, #0]
 80061fe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006200:	f00c fca4 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006204:	4620      	mov	r0, r4
 8006206:	bd10      	pop	{r4, pc}
 8006208:	0802b19c 	.word	0x0802b19c

0800620c <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800620c:	b507      	push	{r0, r1, r2, lr}
 800620e:	4b07      	ldr	r3, [pc, #28]	; (800622c <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006210:	6003      	str	r3, [r0, #0]
 8006212:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006214:	f00c fc9a 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006218:	9801      	ldr	r0, [sp, #4]
 800621a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800621e:	f020 fef6 	bl	802700e <_ZdlPvj>
 8006222:	9801      	ldr	r0, [sp, #4]
 8006224:	b003      	add	sp, #12
 8006226:	f85d fb04 	ldr.w	pc, [sp], #4
 800622a:	bf00      	nop
 800622c:	0802b19c 	.word	0x0802b19c

08006230 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006230:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006232:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006236:	4299      	cmp	r1, r3
{
 8006238:	4604      	mov	r4, r0
 800623a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800623c:	d103      	bne.n	8006246 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800623e:	f00e f987 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006242:	f7fd f897 	bl	8003374 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006246:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800624a:	429d      	cmp	r5, r3
 800624c:	d103      	bne.n	8006256 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800624e:	f00e f97f 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006252:	f7fd f8af 	bl	80033b4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006256:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800625a:	42a5      	cmp	r5, r4
 800625c:	d105      	bne.n	800626a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800625e:	f00e f977 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006262:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006266:	f7fd b8b5 	b.w	80033d4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 800626a:	bd38      	pop	{r3, r4, r5, pc}

0800626c <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 800626c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006270:	ed2d 8b06 	vpush	{d8-d10}
 8006274:	4604      	mov	r4, r0
 8006276:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006278:	46a3      	mov	fp, r4
 800627a:	2500      	movs	r5, #0
 800627c:	f00f fde8 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8006280:	4b66      	ldr	r3, [pc, #408]	; (800641c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006282:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006284:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006288:	2226      	movs	r2, #38	; 0x26
 800628a:	4629      	mov	r1, r5
 800628c:	4658      	mov	r0, fp
 800628e:	f021 feb4 	bl	8027ffa <memset>
 8006292:	4658      	mov	r0, fp
 8006294:	f7fc f91c 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8006298:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800629c:	26ff      	movs	r6, #255	; 0xff
 800629e:	4b60      	ldr	r3, [pc, #384]	; (8006420 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80062a0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80062a2:	2226      	movs	r2, #38	; 0x26
 80062a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80062a8:	4629      	mov	r1, r5
 80062aa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80062ae:	4650      	mov	r0, sl
 80062b0:	66a5      	str	r5, [r4, #104]	; 0x68
 80062b2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80062b6:	f021 fea0 	bl	8027ffa <memset>
 80062ba:	4650      	mov	r0, sl
 80062bc:	f7fc f908 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 80062c0:	4b58      	ldr	r3, [pc, #352]	; (8006424 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 80062c2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80062c4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80062c8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80062cc:	a90a      	add	r1, sp, #40	; 0x28
 80062ce:	4650      	mov	r0, sl
 80062d0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80062d4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80062d8:	f00b fc31 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80062dc:	4648      	mov	r0, r9
 80062de:	f7fc f909 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80062e2:	4b51      	ldr	r3, [pc, #324]	; (8006428 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 80062e4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80062e8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80062ec:	4618      	mov	r0, r3
 80062ee:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80062f2:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80062f6:	ee08 3a90 	vmov	s17, r3
 80062fa:	f7fc f8fb 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 80062fe:	4638      	mov	r0, r7
 8006300:	f00a fae6 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 8006304:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006308:	4618      	mov	r0, r3
 800630a:	9303      	str	r3, [sp, #12]
 800630c:	f7fa ffd8 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006310:	4b46      	ldr	r3, [pc, #280]	; (800642c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006312:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006316:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800631a:	3324      	adds	r3, #36	; 0x24
 800631c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006320:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006324:	4640      	mov	r0, r8
 8006326:	f7fc f8e5 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 800632a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800632e:	4618      	mov	r0, r3
 8006330:	ee08 3a10 	vmov	s16, r3
 8006334:	f7fc f8de 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8006338:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800633c:	4618      	mov	r0, r3
 800633e:	ee09 3a10 	vmov	s18, r3
 8006342:	f00b fd3d 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006346:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800634a:	4618      	mov	r0, r3
 800634c:	ee09 3a90 	vmov	s19, r3
 8006350:	f00b fd36 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006354:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006358:	4618      	mov	r0, r3
 800635a:	ee0a 3a10 	vmov	s20, r3
 800635e:	f00b fd2f 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006362:	4a33      	ldr	r2, [pc, #204]	; (8006430 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006364:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006368:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800636c:	4a31      	ldr	r2, [pc, #196]	; (8006434 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800636e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006372:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006376:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800637a:	f00c fbdd 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800637e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006382:	462a      	mov	r2, r5
 8006384:	4658      	mov	r0, fp
 8006386:	9300      	str	r3, [sp, #0]
 8006388:	4629      	mov	r1, r5
 800638a:	23f0      	movs	r3, #240	; 0xf0
 800638c:	f7fc f88c 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006390:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006392:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006396:	66a3      	str	r3, [r4, #104]	; 0x68
 8006398:	4659      	mov	r1, fp
 800639a:	4630      	mov	r0, r6
 800639c:	f008 fe40 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80063a0:	462a      	mov	r2, r5
 80063a2:	4650      	mov	r0, sl
 80063a4:	4629      	mov	r1, r5
 80063a6:	f7fc f872 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80063aa:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80063ac:	4650      	mov	r0, sl
 80063ae:	a90a      	add	r1, sp, #40	; 0x28
 80063b0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80063b4:	f00b fbc3 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80063b8:	4651      	mov	r1, sl
 80063ba:	4630      	mov	r0, r6
 80063bc:	f008 fe30 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80063c0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80063c4:	2156      	movs	r1, #86	; 0x56
 80063c6:	4648      	mov	r0, r9
 80063c8:	f7fc f861 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80063cc:	f04f 33ff 	mov.w	r3, #4294967295
 80063d0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80063d4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80063d8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80063dc:	f10d 0b10 	add.w	fp, sp, #16
 80063e0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80063e4:	4649      	mov	r1, r9
 80063e6:	4658      	mov	r0, fp
 80063e8:	4798      	blx	r3
 80063ea:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80063ee:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80063f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80063f6:	4b10      	ldr	r3, [pc, #64]	; (8006438 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 80063f8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 80063fa:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80063fe:	b92b      	cbnz	r3, 800640c <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006400:	4b0e      	ldr	r3, [pc, #56]	; (800643c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006402:	4a0f      	ldr	r2, [pc, #60]	; (8006440 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006404:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006406:	480f      	ldr	r0, [pc, #60]	; (8006444 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006408:	f021 fbf2 	bl	8027bf0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800640c:	4b0e      	ldr	r3, [pc, #56]	; (8006448 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800640e:	881b      	ldrh	r3, [r3, #0]
 8006410:	2b0b      	cmp	r3, #11
 8006412:	d81d      	bhi.n	8006450 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006414:	4b0d      	ldr	r3, [pc, #52]	; (800644c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006416:	4a0a      	ldr	r2, [pc, #40]	; (8006440 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006418:	2161      	movs	r1, #97	; 0x61
 800641a:	e7f4      	b.n	8006406 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 800641c:	0802b19c 	.word	0x0802b19c
 8006420:	0802bf60 	.word	0x0802bf60
 8006424:	0802c128 	.word	0x0802c128
 8006428:	0802980c 	.word	0x0802980c
 800642c:	0802bc94 	.word	0x0802bc94
 8006430:	0802b184 	.word	0x0802b184
 8006434:	08006231 	.word	0x08006231
 8006438:	20013814 	.word	0x20013814
 800643c:	0802964c 	.word	0x0802964c
 8006440:	0802974e 	.word	0x0802974e
 8006444:	080296c9 	.word	0x080296c9
 8006448:	20013818 	.word	0x20013818
 800644c:	08029710 	.word	0x08029710
        return texts->getText(typedTextId);
 8006450:	4b95      	ldr	r3, [pc, #596]	; (80066a8 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8006452:	210b      	movs	r1, #11
 8006454:	6818      	ldr	r0, [r3, #0]
 8006456:	f001 f8fb 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 800645a:	4a94      	ldr	r2, [pc, #592]	; (80066ac <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 800645c:	4603      	mov	r3, r0
 800645e:	2104      	movs	r1, #4
 8006460:	4650      	mov	r0, sl
 8006462:	f011 f9d9 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006466:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800646a:	4648      	mov	r0, r9
 800646c:	f00a ff6c 	bl	8011348 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006470:	f8df a23c 	ldr.w	sl, [pc, #572]	; 80066b0 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8006474:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006478:	230c      	movs	r3, #12
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 800647a:	a90a      	add	r1, sp, #40	; 0x28
 800647c:	4648      	mov	r0, r9
 800647e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006482:	f00a ff81 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006486:	4649      	mov	r1, r9
 8006488:	4630      	mov	r0, r6
 800648a:	f008 fdc9 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 800648e:	223c      	movs	r2, #60	; 0x3c
 8006490:	ee18 0a90 	vmov	r0, s17
 8006494:	2129      	movs	r1, #41	; 0x29
 8006496:	f7fb fffa 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800649a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800649e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80064a2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80064a6:	4658      	mov	r0, fp
        linespace = space;
 80064a8:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80064ac:	f00a fcd2 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064b0:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80064b4:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80064b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064bc:	231b      	movs	r3, #27
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 80064be:	ee18 0a90 	vmov	r0, s17
 80064c2:	a90a      	add	r1, sp, #40	; 0x28
 80064c4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80064c8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80064cc:	f00a ff5c 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064d0:	ee18 1a90 	vmov	r1, s17
 80064d4:	4630      	mov	r0, r6
 80064d6:	f008 fda3 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80064da:	230a      	movs	r3, #10
 80064dc:	9300      	str	r3, [sp, #0]
 80064de:	2232      	movs	r2, #50	; 0x32
 80064e0:	23f0      	movs	r3, #240	; 0xf0
 80064e2:	4629      	mov	r1, r5
 80064e4:	4638      	mov	r0, r7
 80064e6:	f7fb ffdf 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064ea:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80064ee:	22a0      	movs	r2, #160	; 0xa0
 80064f0:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80064f4:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80064f8:	9b03      	ldr	r3, [sp, #12]
 80064fa:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80064fe:	4611      	mov	r1, r2
 8006500:	4638      	mov	r0, r7
 8006502:	f00a fafb 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006506:	22a0      	movs	r2, #160	; 0xa0
 8006508:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800650c:	4638      	mov	r0, r7
 800650e:	f00a fb00 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006512:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006516:	2b20      	cmp	r3, #32
 8006518:	d005      	beq.n	8006526 <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 800651a:	2320      	movs	r3, #32
 800651c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006520:	4638      	mov	r0, r7
 8006522:	f00a f9f5 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006526:	4638      	mov	r0, r7
 8006528:	2101      	movs	r1, #1
 800652a:	f00a fafd 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800652e:	4639      	mov	r1, r7
 8006530:	4630      	mov	r0, r6
 8006532:	f008 fd75 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006536:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800653a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 800653c:	2223      	movs	r2, #35	; 0x23
 800653e:	4640      	mov	r0, r8
        linespace = space;
 8006540:	f04f 0a00 	mov.w	sl, #0
 8006544:	2145      	movs	r1, #69	; 0x45
 8006546:	f7fb ffa2 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800654a:	4641      	mov	r1, r8
 800654c:	4638      	mov	r0, r7
        color = newColor;
 800654e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006552:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006556:	f00a fc7d 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800655a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800655e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006562:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006566:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80066b0 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 800656a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800656e:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006570:	a90a      	add	r1, sp, #40	; 0x28
 8006572:	4640      	mov	r0, r8
 8006574:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006578:	f00a ff06 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800657c:	4641      	mov	r1, r8
 800657e:	4630      	mov	r0, r6
 8006580:	f008 fd4e 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006584:	ee18 0a10 	vmov	r0, s16
 8006588:	220c      	movs	r2, #12
 800658a:	2136      	movs	r1, #54	; 0x36
 800658c:	f7fb ff7f 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006590:	ee18 1a10 	vmov	r1, s16
 8006594:	4638      	mov	r0, r7
        color = newColor;
 8006596:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800659a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800659e:	f00a fc59 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065a2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80065a6:	ee18 3a10 	vmov	r3, s16
 80065aa:	333c      	adds	r3, #60	; 0x3c
 80065ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065b0:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 80065b2:	ee18 0a10 	vmov	r0, s16
 80065b6:	a90a      	add	r1, sp, #40	; 0x28
 80065b8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065bc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80065c0:	f00a fee2 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065c4:	ee18 1a10 	vmov	r1, s16
 80065c8:	4630      	mov	r0, r6
 80065ca:	f008 fd29 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80065ce:	ee19 0a10 	vmov	r0, s18
 80065d2:	22f0      	movs	r2, #240	; 0xf0
 80065d4:	2121      	movs	r1, #33	; 0x21
 80065d6:	f7fb ff5a 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80065da:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065de:	aa0a      	add	r2, sp, #40	; 0x28
 80065e0:	f04f 0802 	mov.w	r8, #2
 80065e4:	a909      	add	r1, sp, #36	; 0x24
 80065e6:	ee19 0a10 	vmov	r0, s18
 80065ea:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80065ee:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80065f2:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065f6:	f00b f8ac 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80065fa:	2332      	movs	r3, #50	; 0x32
 80065fc:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006600:	3710      	adds	r7, #16
        updateTextPosition();
 8006602:	ee19 0a10 	vmov	r0, s18
 8006606:	f7fb ff97 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800660a:	ee19 1a10 	vmov	r1, s18
 800660e:	4630      	mov	r0, r6
        colorPressed = col;
 8006610:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006614:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006618:	f008 fd02 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800661c:	ee19 0a90 	vmov	r0, s19
 8006620:	22aa      	movs	r2, #170	; 0xaa
 8006622:	2121      	movs	r1, #33	; 0x21
 8006624:	f7fb ff33 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006628:	aa0a      	add	r2, sp, #40	; 0x28
 800662a:	a909      	add	r1, sp, #36	; 0x24
 800662c:	ee19 0a90 	vmov	r0, s19
 8006630:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006634:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006638:	f00b f88b 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800663c:	2331      	movs	r3, #49	; 0x31
 800663e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006642:	ee19 0a90 	vmov	r0, s19
 8006646:	f7fb ff77 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800664a:	ee19 1a90 	vmov	r1, s19
 800664e:	4630      	mov	r0, r6
        colorPressed = col;
 8006650:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006654:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006658:	f008 fce2 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800665c:	ee1a 0a10 	vmov	r0, s20
 8006660:	2264      	movs	r2, #100	; 0x64
 8006662:	2121      	movs	r1, #33	; 0x21
 8006664:	f7fb ff13 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006668:	aa0a      	add	r2, sp, #40	; 0x28
 800666a:	a909      	add	r1, sp, #36	; 0x24
 800666c:	ee1a 0a10 	vmov	r0, s20
 8006670:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006674:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006678:	f00b f86b 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800667c:	2330      	movs	r3, #48	; 0x30
        updateTextPosition();
 800667e:	ee1a 0a10 	vmov	r0, s20
 8006682:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006686:	f7fb ff57 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800668a:	4630      	mov	r0, r6
        colorPressed = col;
 800668c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006690:	ee1a 1a10 	vmov	r1, s20
 8006694:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006698:	f008 fcc2 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800669c:	4620      	mov	r0, r4
 800669e:	b00d      	add	sp, #52	; 0x34
 80066a0:	ecbd 8b06 	vpop	{d8-d10}
 80066a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066a8:	20013820 	.word	0x20013820
 80066ac:	08029786 	.word	0x08029786
 80066b0:	080297fc 	.word	0x080297fc

080066b4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066b4:	4770      	bx	lr

080066b6 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80066b6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066b8:	68c2      	ldr	r2, [r0, #12]
 80066ba:	6844      	ldr	r4, [r0, #4]
 80066bc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80066be:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80066c0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80066c4:	07d2      	lsls	r2, r2, #31
 80066c6:	bf48      	it	mi
 80066c8:	5962      	ldrmi	r2, [r4, r5]
 80066ca:	689b      	ldr	r3, [r3, #8]
    }
 80066cc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066ce:	bf48      	it	mi
 80066d0:	58d3      	ldrmi	r3, [r2, r3]
 80066d2:	4718      	bx	r3

080066d4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80066d4:	6843      	ldr	r3, [r0, #4]
 80066d6:	b12b      	cbz	r3, 80066e4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80066d8:	6883      	ldr	r3, [r0, #8]
 80066da:	b92b      	cbnz	r3, 80066e8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80066dc:	68c0      	ldr	r0, [r0, #12]
 80066de:	f000 0001 	and.w	r0, r0, #1
 80066e2:	4770      	bx	lr
 80066e4:	4618      	mov	r0, r3
 80066e6:	4770      	bx	lr
 80066e8:	2001      	movs	r0, #1
    }
 80066ea:	4770      	bx	lr

080066ec <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066ec:	b510      	push	{r4, lr}
 80066ee:	2110      	movs	r1, #16
 80066f0:	4604      	mov	r4, r0
 80066f2:	f020 fc8c 	bl	802700e <_ZdlPvj>
 80066f6:	4620      	mov	r0, r4
 80066f8:	bd10      	pop	{r4, pc}

080066fa <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80066fa:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80066fe:	f001 b8ad 	b.w	800785c <_ZN17Gauge_with_Values10initializeEv>

08006702 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_1PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006702:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8006706:	4288      	cmp	r0, r1
{
 8006708:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800670a:	d105      	bne.n	8006718 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_1PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800670c:	f00d ff20 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8006710:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006714:	f7fc be3e 	b.w	8003394 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006718:	bd08      	pop	{r3, pc}
	...

0800671c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 800671c:	b510      	push	{r4, lr}
 800671e:	4b07      	ldr	r3, [pc, #28]	; (800673c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x20>)
 8006720:	6003      	str	r3, [r0, #0]
 8006722:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006724:	f00c fa12 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006728:	4b05      	ldr	r3, [pc, #20]	; (8006740 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x24>)
 800672a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800672e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006732:	f7fe f815 	bl	8004760 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006736:	4620      	mov	r0, r4
 8006738:	bd10      	pop	{r4, pc}
 800673a:	bf00      	nop
 800673c:	0802b1e8 	.word	0x0802b1e8
 8006740:	0802b5f0 	.word	0x0802b5f0

08006744 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006744:	b510      	push	{r4, lr}
 8006746:	4604      	mov	r4, r0
}
 8006748:	f7ff ffe8 	bl	800671c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800674c:	4620      	mov	r0, r4
 800674e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006752:	f020 fc5c 	bl	802700e <_ZdlPvj>
 8006756:	4620      	mov	r0, r4
 8006758:	bd10      	pop	{r4, pc}
	...

0800675c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 800675c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006760:	ed2d 8b04 	vpush	{d8-d9}
 8006764:	4604      	mov	r4, r0
 8006766:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8006768:	46a2      	mov	sl, r4
 800676a:	2500      	movs	r5, #0
 800676c:	f00f fb70 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8006770:	4baf      	ldr	r3, [pc, #700]	; (8006a30 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006772:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006774:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006778:	2226      	movs	r2, #38	; 0x26
 800677a:	4629      	mov	r1, r5
 800677c:	4650      	mov	r0, sl
 800677e:	f021 fc3c 	bl	8027ffa <memset>
 8006782:	4650      	mov	r0, sl
 8006784:	f7fb fea4 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8006788:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 800678c:	26ff      	movs	r6, #255	; 0xff
 800678e:	4ba9      	ldr	r3, [pc, #676]	; (8006a34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006790:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006792:	2226      	movs	r2, #38	; 0x26
 8006794:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006798:	4629      	mov	r1, r5
 800679a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800679e:	4648      	mov	r0, r9
 80067a0:	66a5      	str	r5, [r4, #104]	; 0x68
 80067a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067a6:	f021 fc28 	bl	8027ffa <memset>
 80067aa:	4648      	mov	r0, r9
 80067ac:	f7fb fe90 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 80067b0:	4ba1      	ldr	r3, [pc, #644]	; (8006a38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80067b2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80067b4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80067b8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80067bc:	a90a      	add	r1, sp, #40	; 0x28
 80067be:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 80067c0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80067c4:	f00b f9bb 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80067c8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80067cc:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 80067d0:	4618      	mov	r0, r3
 80067d2:	ee08 3a10 	vmov	s16, r3
 80067d6:	f7fb fe8d 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 80067da:	4638      	mov	r0, r7
 80067dc:	f00a f878 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 80067e0:	f504 73a8 	add.w	r3, r4, #336	; 0x150
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80067e4:	4618      	mov	r0, r3
 80067e6:	9303      	str	r3, [sp, #12]
 80067e8:	f7fa fd6a 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067ec:	4b93      	ldr	r3, [pc, #588]	; (8006a3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80067ee:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 80067f2:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80067f6:	3324      	adds	r3, #36	; 0x24
 80067f8:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
 80067fc:	f8c4 515c 	str.w	r5, [r4, #348]	; 0x15c
 8006800:	4640      	mov	r0, r8
 8006802:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006806:	f7fb fe75 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 800680a:	4658      	mov	r0, fp
 800680c:	f7fb fe72 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8006810:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8006814:	4618      	mov	r0, r3
 8006816:	ee08 3a90 	vmov	s17, r3
 800681a:	f00b fad1 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800681e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006822:	4618      	mov	r0, r3
 8006824:	ee09 3a10 	vmov	s18, r3
 8006828:	f001 f80e 	bl	8007848 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800682c:	4a84      	ldr	r2, [pc, #528]	; (8006a40 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 800682e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006832:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006836:	4a83      	ldr	r2, [pc, #524]	; (8006a44 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006838:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800683c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006840:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006844:	f00c f978 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006848:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800684c:	462a      	mov	r2, r5
 800684e:	4650      	mov	r0, sl
 8006850:	9300      	str	r3, [sp, #0]
 8006852:	4629      	mov	r1, r5
 8006854:	23f0      	movs	r3, #240	; 0xf0
 8006856:	f7fb fe27 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800685a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800685c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006860:	66a3      	str	r3, [r4, #104]	; 0x68
 8006862:	4651      	mov	r1, sl
 8006864:	4630      	mov	r0, r6
 8006866:	f008 fbdb 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800686a:	462a      	mov	r2, r5
 800686c:	4648      	mov	r0, r9
 800686e:	4629      	mov	r1, r5
 8006870:	f7fb fe0d 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006874:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006876:	4648      	mov	r0, r9
 8006878:	a90a      	add	r1, sp, #40	; 0x28
 800687a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800687e:	f00b f95e 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006882:	4649      	mov	r1, r9
 8006884:	4630      	mov	r0, r6
 8006886:	f008 fbcb 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800688a:	f04f 39ff 	mov.w	r9, #4294967295
    textArea3.setXY(31, 60);
 800688e:	223c      	movs	r2, #60	; 0x3c
 8006890:	ee18 0a10 	vmov	r0, s16
 8006894:	211f      	movs	r1, #31
        boundingArea = calculateBoundingArea();
 8006896:	f10d 0a10 	add.w	sl, sp, #16
 800689a:	f7fb fdf8 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800689e:	ee18 1a10 	vmov	r1, s16
 80068a2:	4650      	mov	r0, sl
        color = newColor;
 80068a4:	f8c4 90c8 	str.w	r9, [r4, #200]	; 0xc8
        linespace = space;
 80068a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80068ac:	f00a fad2 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068b0:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80068b4:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80068b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80068bc:	4b62      	ldr	r3, [pc, #392]	; (8006a48 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80068be:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80068c0:	ee18 0a10 	vmov	r0, s16
 80068c4:	231a      	movs	r3, #26
 80068c6:	a90a      	add	r1, sp, #40	; 0x28
 80068c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068cc:	f00a fd5c 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068d0:	ee18 1a10 	vmov	r1, s16
 80068d4:	4630      	mov	r0, r6
 80068d6:	f008 fba3 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80068da:	230a      	movs	r3, #10
 80068dc:	9300      	str	r3, [sp, #0]
 80068de:	2232      	movs	r2, #50	; 0x32
 80068e0:	23f0      	movs	r3, #240	; 0xf0
 80068e2:	4629      	mov	r1, r5
 80068e4:	4638      	mov	r0, r7
 80068e6:	f7fb fddf 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80068ea:	9b03      	ldr	r3, [sp, #12]
 80068ec:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80068f0:	22a0      	movs	r2, #160	; 0xa0
 80068f2:	4611      	mov	r1, r2
 80068f4:	4638      	mov	r0, r7
 80068f6:	f8c4 915c 	str.w	r9, [r4, #348]	; 0x15c
        color565 = LCD16bpp::getNativeColor(painterColor);
 80068fa:	f8a4 9160 	strh.w	r9, [r4, #352]	; 0x160
 80068fe:	f00a f8fd 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006902:	22a0      	movs	r2, #160	; 0xa0
 8006904:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006908:	4638      	mov	r0, r7
 800690a:	f00a f902 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800690e:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8006912:	2b20      	cmp	r3, #32
 8006914:	d005      	beq.n	8006922 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x1c6>
        lineWidthQ5 = widthQ5;
 8006916:	2320      	movs	r3, #32
 8006918:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        updateCachedShape();
 800691c:	4638      	mov	r0, r7
 800691e:	f009 fff7 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006922:	4638      	mov	r0, r7
 8006924:	2101      	movs	r1, #1
 8006926:	f00a f8ff 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800692a:	4639      	mov	r1, r7
 800692c:	4630      	mov	r0, r6
 800692e:	f008 fb77 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006932:	ad04      	add	r5, sp, #16
        color = newColor;
 8006934:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8006938:	f04f 0900 	mov.w	r9, #0
    textArea2.setXY(69, 35);
 800693c:	2223      	movs	r2, #35	; 0x23
 800693e:	4640      	mov	r0, r8
 8006940:	2145      	movs	r1, #69	; 0x45
 8006942:	f7fb fda4 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006946:	4641      	mov	r1, r8
 8006948:	4628      	mov	r0, r5
        color = newColor;
 800694a:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 800694e:	f8a4 9198 	strh.w	r9, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8006952:	f00a fa7f 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006956:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800695a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800695e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006962:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8006a48 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>
 8006966:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800696a:	2327      	movs	r3, #39	; 0x27
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 800696c:	a90a      	add	r1, sp, #40	; 0x28
 800696e:	4640      	mov	r0, r8
 8006970:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006974:	f00a fd08 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006978:	4641      	mov	r1, r8
 800697a:	4630      	mov	r0, r6
 800697c:	f008 fb50 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006980:	220c      	movs	r2, #12
 8006982:	4658      	mov	r0, fp
 8006984:	2136      	movs	r1, #54	; 0x36
 8006986:	f7fb fd82 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800698a:	4659      	mov	r1, fp
 800698c:	4628      	mov	r0, r5
        color = newColor;
 800698e:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006992:	f8a4 91e0 	strh.w	r9, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006996:	f00a fa5d 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800699a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800699e:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80069a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069a6:	2326      	movs	r3, #38	; 0x26
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80069a8:	a90a      	add	r1, sp, #40	; 0x28
 80069aa:	4658      	mov	r0, fp
 80069ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069b0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80069b4:	f00a fce8 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069b8:	4659      	mov	r1, fp
 80069ba:	4630      	mov	r0, r6
 80069bc:	f008 fb30 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 80069c0:	ee18 0a90 	vmov	r0, s17
 80069c4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80069c8:	2121      	movs	r1, #33	; 0x21
 80069ca:	f7fb fd60 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80069ce:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069d0:	aa0a      	add	r2, sp, #40	; 0x28
 80069d2:	a909      	add	r1, sp, #36	; 0x24
 80069d4:	ee18 0a90 	vmov	r0, s17
 80069d8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80069dc:	2302      	movs	r3, #2
 80069de:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80069e2:	f00a feb6 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80069e6:	2325      	movs	r3, #37	; 0x25
        updateTextPosition();
 80069e8:	ee18 0a90 	vmov	r0, s17
 80069ec:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80069f0:	f7fb fda2 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80069f4:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80069f8:	3314      	adds	r3, #20
 80069fa:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80069fe:	ee18 1a90 	vmov	r1, s17
 8006a02:	4630      	mov	r0, r6
        colorPressed = col;
 8006a04:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8006a08:	f008 fb0a 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006a0c:	ee19 0a10 	vmov	r0, s18
 8006a10:	224e      	movs	r2, #78	; 0x4e
 8006a12:	4649      	mov	r1, r9
 8006a14:	f7fb fd3b 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006a18:	4630      	mov	r0, r6
 8006a1a:	ee19 1a10 	vmov	r1, s18
 8006a1e:	f008 faff 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006a22:	4620      	mov	r0, r4
 8006a24:	b00d      	add	sp, #52	; 0x34
 8006a26:	ecbd 8b04 	vpop	{d8-d9}
 8006a2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a2e:	bf00      	nop
 8006a30:	0802b1e8 	.word	0x0802b1e8
 8006a34:	0802bf60 	.word	0x0802bf60
 8006a38:	0802c128 	.word	0x0802c128
 8006a3c:	0802bc94 	.word	0x0802bc94
 8006a40:	0802b1d0 	.word	0x0802b1d0
 8006a44:	08006703 	.word	0x08006703
 8006a48:	080297fc 	.word	0x080297fc

08006a4c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a4c:	4770      	bx	lr

08006a4e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006a4e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a50:	68c2      	ldr	r2, [r0, #12]
 8006a52:	6844      	ldr	r4, [r0, #4]
 8006a54:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006a56:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006a58:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006a5c:	07d2      	lsls	r2, r2, #31
 8006a5e:	bf48      	it	mi
 8006a60:	5962      	ldrmi	r2, [r4, r5]
 8006a62:	689b      	ldr	r3, [r3, #8]
    }
 8006a64:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a66:	bf48      	it	mi
 8006a68:	58d3      	ldrmi	r3, [r2, r3]
 8006a6a:	4718      	bx	r3

08006a6c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006a6c:	6843      	ldr	r3, [r0, #4]
 8006a6e:	b12b      	cbz	r3, 8006a7c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006a70:	6883      	ldr	r3, [r0, #8]
 8006a72:	b92b      	cbnz	r3, 8006a80 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006a74:	68c0      	ldr	r0, [r0, #12]
 8006a76:	f000 0001 	and.w	r0, r0, #1
 8006a7a:	4770      	bx	lr
 8006a7c:	4618      	mov	r0, r3
 8006a7e:	4770      	bx	lr
 8006a80:	2001      	movs	r0, #1
    }
 8006a82:	4770      	bx	lr

08006a84 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a84:	b510      	push	{r4, lr}
 8006a86:	2110      	movs	r1, #16
 8006a88:	4604      	mov	r4, r0
 8006a8a:	f020 fac0 	bl	802700e <_ZdlPvj>
 8006a8e:	4620      	mov	r0, r4
 8006a90:	bd10      	pop	{r4, pc}

08006a92 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006a92:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006a96:	f000 bee1 	b.w	800785c <_ZN17Gauge_with_Values10initializeEv>

08006a9a <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006a9a:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8006a9e:	4288      	cmp	r0, r1
{
 8006aa0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006aa2:	d105      	bne.n	8006ab0 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006aa4:	f00d fd54 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8006aa8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006aac:	f7fc bc72 	b.w	8003394 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006ab0:	bd08      	pop	{r3, pc}
	...

08006ab4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8006ab4:	b510      	push	{r4, lr}
 8006ab6:	4b07      	ldr	r3, [pc, #28]	; (8006ad4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8006ab8:	6003      	str	r3, [r0, #0]
 8006aba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006abc:	f00c f846 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006ac0:	4b05      	ldr	r3, [pc, #20]	; (8006ad8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8006ac2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006ac6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006aca:	f7fd fe49 	bl	8004760 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006ace:	4620      	mov	r0, r4
 8006ad0:	bd10      	pop	{r4, pc}
 8006ad2:	bf00      	nop
 8006ad4:	0802b234 	.word	0x0802b234
 8006ad8:	0802b5f0 	.word	0x0802b5f0

08006adc <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8006adc:	b510      	push	{r4, lr}
 8006ade:	4604      	mov	r4, r0
}
 8006ae0:	f7ff ffe8 	bl	8006ab4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8006ae4:	4620      	mov	r0, r4
 8006ae6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006aea:	f020 fa90 	bl	802700e <_ZdlPvj>
 8006aee:	4620      	mov	r0, r4
 8006af0:	bd10      	pop	{r4, pc}
	...

08006af4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8006af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006af8:	ed2d 8b04 	vpush	{d8-d9}
 8006afc:	4604      	mov	r4, r0
 8006afe:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8006b00:	46a3      	mov	fp, r4
 8006b02:	2500      	movs	r5, #0
 8006b04:	f00f f9a4 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8006b08:	4bae      	ldr	r3, [pc, #696]	; (8006dc4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 8006b0a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006b0c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006b10:	2226      	movs	r2, #38	; 0x26
 8006b12:	4629      	mov	r1, r5
 8006b14:	4658      	mov	r0, fp
 8006b16:	f021 fa70 	bl	8027ffa <memset>
 8006b1a:	4658      	mov	r0, fp
 8006b1c:	f7fb fcd8 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8006b20:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006b24:	26ff      	movs	r6, #255	; 0xff
 8006b26:	4ba8      	ldr	r3, [pc, #672]	; (8006dc8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8006b28:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006b2a:	2226      	movs	r2, #38	; 0x26
 8006b2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006b30:	4629      	mov	r1, r5
 8006b32:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006b36:	66a5      	str	r5, [r4, #104]	; 0x68
 8006b38:	4650      	mov	r0, sl
 8006b3a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006b3e:	f021 fa5c 	bl	8027ffa <memset>
 8006b42:	4650      	mov	r0, sl
 8006b44:	f7fb fcc4 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8006b48:	4ba0      	ldr	r3, [pc, #640]	; (8006dcc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 8006b4a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006b4c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006b50:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006b54:	a90a      	add	r1, sp, #40	; 0x28
 8006b56:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006b5a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006b5e:	4650      	mov	r0, sl
 8006b60:	f00a ffed 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006b64:	4638      	mov	r0, r7
 8006b66:	f009 feb3 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 8006b6a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006b6e:	4618      	mov	r0, r3
 8006b70:	9303      	str	r3, [sp, #12]
 8006b72:	f7fa fba5 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006b76:	4b96      	ldr	r3, [pc, #600]	; (8006dd0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8006b78:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8006b7c:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8006b80:	3324      	adds	r3, #36	; 0x24
 8006b82:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8006b86:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8006b8a:	4648      	mov	r0, r9
 8006b8c:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8006b90:	f7fb fcb0 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8006b94:	4640      	mov	r0, r8
 8006b96:	f7fb fcad 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8006b9a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006b9e:	4618      	mov	r0, r3
 8006ba0:	ee08 3a10 	vmov	s16, r3
 8006ba4:	f7fb fca6 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8006ba8:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8006bac:	4618      	mov	r0, r3
 8006bae:	ee08 3a90 	vmov	s17, r3
 8006bb2:	f00b f905 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006bb6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006bba:	4618      	mov	r0, r3
 8006bbc:	ee09 3a10 	vmov	s18, r3
 8006bc0:	f000 fe42 	bl	8007848 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006bc4:	4a83      	ldr	r2, [pc, #524]	; (8006dd4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 8006bc6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006bca:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006bce:	4a82      	ldr	r2, [pc, #520]	; (8006dd8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006bd0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006bd4:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006bd8:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006bdc:	f00b ffac 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006be0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006be4:	462a      	mov	r2, r5
 8006be6:	9300      	str	r3, [sp, #0]
 8006be8:	4629      	mov	r1, r5
 8006bea:	23f0      	movs	r3, #240	; 0xf0
 8006bec:	4658      	mov	r0, fp
 8006bee:	f7fb fc5b 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bf2:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006bf4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006bf8:	66a3      	str	r3, [r4, #104]	; 0x68
 8006bfa:	4659      	mov	r1, fp
 8006bfc:	4630      	mov	r0, r6
 8006bfe:	f008 fa0f 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006c02:	462a      	mov	r2, r5
 8006c04:	4629      	mov	r1, r5
 8006c06:	4650      	mov	r0, sl
 8006c08:	f7fb fc41 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006c0c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006c0e:	a90a      	add	r1, sp, #40	; 0x28
 8006c10:	4650      	mov	r0, sl
 8006c12:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c16:	f00a ff92 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c1a:	4651      	mov	r1, sl
 8006c1c:	4630      	mov	r0, r6
 8006c1e:	f008 f9ff 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006c22:	230a      	movs	r3, #10
 8006c24:	9300      	str	r3, [sp, #0]
 8006c26:	2232      	movs	r2, #50	; 0x32
 8006c28:	23f0      	movs	r3, #240	; 0xf0
 8006c2a:	4629      	mov	r1, r5
 8006c2c:	4638      	mov	r0, r7
 8006c2e:	f7fb fc3b 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c32:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c36:	22a0      	movs	r2, #160	; 0xa0
 8006c38:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006c3c:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8006c40:	9b03      	ldr	r3, [sp, #12]
 8006c42:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006c46:	4611      	mov	r1, r2
 8006c48:	4638      	mov	r0, r7
 8006c4a:	f009 ff57 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c4e:	22a0      	movs	r2, #160	; 0xa0
 8006c50:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006c54:	4638      	mov	r0, r7
 8006c56:	f009 ff5c 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006c5a:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8006c5e:	2b20      	cmp	r3, #32
 8006c60:	d005      	beq.n	8006c6e <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 8006c62:	2320      	movs	r3, #32
 8006c64:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8006c68:	4638      	mov	r0, r7
 8006c6a:	f009 fe51 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006c6e:	4638      	mov	r0, r7
 8006c70:	2101      	movs	r1, #1
 8006c72:	f009 ff59 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006c76:	4639      	mov	r1, r7
 8006c78:	4630      	mov	r0, r6
 8006c7a:	ad04      	add	r5, sp, #16
 8006c7c:	f008 f9d0 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006c80:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8006c84:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006c88:	2223      	movs	r2, #35	; 0x23
 8006c8a:	4648      	mov	r0, r9
 8006c8c:	2145      	movs	r1, #69	; 0x45
 8006c8e:	f7fb fbfe 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006c92:	4649      	mov	r1, r9
 8006c94:	4628      	mov	r0, r5
        color = newColor;
 8006c96:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8006c9a:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8006c9e:	f00a f8d9 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ca2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006ca6:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8006caa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006cae:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006ddc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8006cb2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006cb6:	232a      	movs	r3, #42	; 0x2a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8006cb8:	a90a      	add	r1, sp, #40	; 0x28
 8006cba:	4648      	mov	r0, r9
 8006cbc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006cc0:	f00a fb62 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cc4:	4649      	mov	r1, r9
 8006cc6:	4630      	mov	r0, r6
 8006cc8:	f008 f9aa 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8006ccc:	223c      	movs	r2, #60	; 0x3c
 8006cce:	4640      	mov	r0, r8
 8006cd0:	211f      	movs	r1, #31
 8006cd2:	f7fb fbdc 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006cd6:	4641      	mov	r1, r8
 8006cd8:	4628      	mov	r0, r5
        color = newColor;
 8006cda:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8006cde:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8006ce2:	f00a f8b7 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ce6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006cea:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006cee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006cf2:	2319      	movs	r3, #25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8006cf4:	a90a      	add	r1, sp, #40	; 0x28
 8006cf6:	4640      	mov	r0, r8
 8006cf8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006cfc:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d00:	f00a fb42 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d04:	4641      	mov	r1, r8
 8006d06:	4630      	mov	r0, r6
 8006d08:	f008 f98a 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006d0c:	ee18 0a10 	vmov	r0, s16
 8006d10:	220c      	movs	r2, #12
 8006d12:	2136      	movs	r1, #54	; 0x36
 8006d14:	f7fb fbbb 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006d18:	ee18 1a10 	vmov	r1, s16
 8006d1c:	4628      	mov	r0, r5
        color = newColor;
 8006d1e:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006d22:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006d26:	f00a f895 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006d2e:	ee18 3a10 	vmov	r3, s16
 8006d32:	333c      	adds	r3, #60	; 0x3c
 8006d34:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d38:	2329      	movs	r3, #41	; 0x29
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8006d3a:	ee18 0a10 	vmov	r0, s16
 8006d3e:	a90a      	add	r1, sp, #40	; 0x28
 8006d40:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d44:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d48:	f00a fb1e 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d4c:	ee18 1a10 	vmov	r1, s16
 8006d50:	4630      	mov	r0, r6
 8006d52:	f008 f965 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006d56:	ee18 0a90 	vmov	r0, s17
 8006d5a:	f240 1201 	movw	r2, #257	; 0x101
 8006d5e:	2121      	movs	r1, #33	; 0x21
 8006d60:	f7fb fb95 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006d64:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d66:	aa0a      	add	r2, sp, #40	; 0x28
 8006d68:	a909      	add	r1, sp, #36	; 0x24
 8006d6a:	ee18 0a90 	vmov	r0, s17
 8006d6e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006d72:	2302      	movs	r3, #2
 8006d74:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d78:	f00a fceb 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006d7c:	2328      	movs	r3, #40	; 0x28
        updateTextPosition();
 8006d7e:	ee18 0a90 	vmov	r0, s17
 8006d82:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8006d86:	f7fb fbd7 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006d8a:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006d8e:	3314      	adds	r3, #20
 8006d90:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8006d94:	ee18 1a90 	vmov	r1, s17
 8006d98:	4630      	mov	r0, r6
        colorPressed = col;
 8006d9a:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8006d9e:	f008 f93f 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006da2:	ee19 0a10 	vmov	r0, s18
 8006da6:	224e      	movs	r2, #78	; 0x4e
 8006da8:	4651      	mov	r1, sl
 8006daa:	f7fb fb70 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006dae:	4630      	mov	r0, r6
 8006db0:	ee19 1a10 	vmov	r1, s18
 8006db4:	f008 f934 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006db8:	4620      	mov	r0, r4
 8006dba:	b00d      	add	sp, #52	; 0x34
 8006dbc:	ecbd 8b04 	vpop	{d8-d9}
 8006dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006dc4:	0802b234 	.word	0x0802b234
 8006dc8:	0802bf60 	.word	0x0802bf60
 8006dcc:	0802c128 	.word	0x0802c128
 8006dd0:	0802bc94 	.word	0x0802bc94
 8006dd4:	0802b21c 	.word	0x0802b21c
 8006dd8:	08006a9b 	.word	0x08006a9b
 8006ddc:	080297fc 	.word	0x080297fc

08006de0 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8006de0:	4770      	bx	lr

08006de2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006de2:	4770      	bx	lr

08006de4 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006de4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006de6:	68c2      	ldr	r2, [r0, #12]
 8006de8:	6844      	ldr	r4, [r0, #4]
 8006dea:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006dec:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006dee:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006df2:	07d2      	lsls	r2, r2, #31
 8006df4:	bf48      	it	mi
 8006df6:	5962      	ldrmi	r2, [r4, r5]
 8006df8:	689b      	ldr	r3, [r3, #8]
    }
 8006dfa:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006dfc:	bf48      	it	mi
 8006dfe:	58d3      	ldrmi	r3, [r2, r3]
 8006e00:	4718      	bx	r3

08006e02 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006e02:	6843      	ldr	r3, [r0, #4]
 8006e04:	b12b      	cbz	r3, 8006e12 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006e06:	6883      	ldr	r3, [r0, #8]
 8006e08:	b92b      	cbnz	r3, 8006e16 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006e0a:	68c0      	ldr	r0, [r0, #12]
 8006e0c:	f000 0001 	and.w	r0, r0, #1
 8006e10:	4770      	bx	lr
 8006e12:	4618      	mov	r0, r3
 8006e14:	4770      	bx	lr
 8006e16:	2001      	movs	r0, #1
    }
 8006e18:	4770      	bx	lr

08006e1a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006e1a:	b510      	push	{r4, lr}
 8006e1c:	2110      	movs	r1, #16
 8006e1e:	4604      	mov	r4, r0
 8006e20:	f020 f8f5 	bl	802700e <_ZdlPvj>
 8006e24:	4620      	mov	r0, r4
 8006e26:	bd10      	pop	{r4, pc}

08006e28 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8006e28:	b510      	push	{r4, lr}
 8006e2a:	4b03      	ldr	r3, [pc, #12]	; (8006e38 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8006e2c:	6003      	str	r3, [r0, #0]
 8006e2e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e30:	f00b fe8c 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e34:	4620      	mov	r0, r4
 8006e36:	bd10      	pop	{r4, pc}
 8006e38:	0802b280 	.word	0x0802b280

08006e3c <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8006e3c:	b507      	push	{r0, r1, r2, lr}
 8006e3e:	4b07      	ldr	r3, [pc, #28]	; (8006e5c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8006e40:	6003      	str	r3, [r0, #0]
 8006e42:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e44:	f00b fe82 	bl	8012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e48:	9801      	ldr	r0, [sp, #4]
 8006e4a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8006e4e:	f020 f8de 	bl	802700e <_ZdlPvj>
 8006e52:	9801      	ldr	r0, [sp, #4]
 8006e54:	b003      	add	sp, #12
 8006e56:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e5a:	bf00      	nop
 8006e5c:	0802b280 	.word	0x0802b280

08006e60 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006e60:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8006e64:	4288      	cmp	r0, r1
{
 8006e66:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006e68:	d105      	bne.n	8006e76 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e6a:	f00d fb71 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8006e6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006e72:	f7fc ba5f 	b.w	8003334 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8006e76:	bd08      	pop	{r3, pc}

08006e78 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8006e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e7c:	ed2d 8b04 	vpush	{d8-d9}
 8006e80:	4604      	mov	r4, r0
 8006e82:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8006e84:	46a3      	mov	fp, r4
 8006e86:	2500      	movs	r5, #0
 8006e88:	f00e ffe2 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8006e8c:	4bd2      	ldr	r3, [pc, #840]	; (80071d8 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8006e8e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e90:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006e94:	2226      	movs	r2, #38	; 0x26
 8006e96:	4629      	mov	r1, r5
 8006e98:	4658      	mov	r0, fp
 8006e9a:	f021 f8ae 	bl	8027ffa <memset>
 8006e9e:	4658      	mov	r0, fp
 8006ea0:	f7fb fb16 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8006ea4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006ea8:	26ff      	movs	r6, #255	; 0xff
 8006eaa:	4bcc      	ldr	r3, [pc, #816]	; (80071dc <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8006eac:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006eae:	2226      	movs	r2, #38	; 0x26
 8006eb0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006eb4:	4629      	mov	r1, r5
 8006eb6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006eba:	4650      	mov	r0, sl
 8006ebc:	66a5      	str	r5, [r4, #104]	; 0x68
 8006ebe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006ec2:	f021 f89a 	bl	8027ffa <memset>
 8006ec6:	4650      	mov	r0, sl
 8006ec8:	f7fb fb02 	bl	80024d0 <_ZN8touchgfx6WidgetC1Ev>
 8006ecc:	4bc4      	ldr	r3, [pc, #784]	; (80071e0 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8006ece:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006ed0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006ed4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006ed8:	a90a      	add	r1, sp, #40	; 0x28
 8006eda:	4650      	mov	r0, sl
 8006edc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006ee0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006ee4:	f00a fe2b 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006ee8:	4648      	mov	r0, r9
 8006eea:	f7fb fb03 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8006eee:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006ef2:	4bbc      	ldr	r3, [pc, #752]	; (80071e4 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8006ef4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006ef8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006efc:	4638      	mov	r0, r7
 8006efe:	f009 fce7 	bl	80108d0 <_ZN8touchgfx4LineC1Ev>
 8006f02:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006f06:	4618      	mov	r0, r3
 8006f08:	9303      	str	r3, [sp, #12]
 8006f0a:	f7fa f9d9 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f0e:	4bb6      	ldr	r3, [pc, #728]	; (80071e8 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8006f10:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006f14:	3324      	adds	r3, #36	; 0x24
 8006f16:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006f1a:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8006f1e:	4618      	mov	r0, r3
 8006f20:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006f24:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006f28:	ee09 3a10 	vmov	s18, r3
 8006f2c:	f00a ff48 	bl	8011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f30:	4640      	mov	r0, r8
 8006f32:	f7fb fadf 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8006f36:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006f3a:	4618      	mov	r0, r3
 8006f3c:	ee08 3a10 	vmov	s16, r3
 8006f40:	f7fb fad8 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
 8006f44:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006f48:	4618      	mov	r0, r3
 8006f4a:	ee08 3a90 	vmov	s17, r3
 8006f4e:	f7fb fad1 	bl	80024f4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f52:	4aa6      	ldr	r2, [pc, #664]	; (80071ec <_ZN20Project_InfoViewBaseC1Ev+0x374>)
 8006f54:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006f58:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8006f5c:	4aa4      	ldr	r2, [pc, #656]	; (80071f0 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006f5e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006f62:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8006f66:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8006f6a:	f00b fde5 	bl	8012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006f6e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006f72:	462a      	mov	r2, r5
 8006f74:	4658      	mov	r0, fp
 8006f76:	9300      	str	r3, [sp, #0]
 8006f78:	4629      	mov	r1, r5
 8006f7a:	23f0      	movs	r3, #240	; 0xf0
 8006f7c:	f7fb fa94 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f80:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006f82:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006f86:	66a3      	str	r3, [r4, #104]	; 0x68
 8006f88:	4659      	mov	r1, fp
 8006f8a:	4630      	mov	r0, r6
 8006f8c:	f008 f848 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006f90:	462a      	mov	r2, r5
 8006f92:	4650      	mov	r0, sl
 8006f94:	4629      	mov	r1, r5
 8006f96:	f7fb fa7a 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006f9a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006f9c:	4650      	mov	r0, sl
 8006f9e:	a90a      	add	r1, sp, #40	; 0x28
 8006fa0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006fa4:	f00a fdcb 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006fa8:	4651      	mov	r1, sl
 8006faa:	4630      	mov	r0, r6
 8006fac:	f008 f838 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006fb0:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006fb4:	2156      	movs	r1, #86	; 0x56
 8006fb6:	4648      	mov	r0, r9
 8006fb8:	f7fb fa69 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8006fbc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006fc0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006fc4:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006fc8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006fcc:	4650      	mov	r0, sl
 8006fce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006fd2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006fd6:	4649      	mov	r1, r9
 8006fd8:	4798      	blx	r3
 8006fda:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006fde:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006fe2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006fe6:	4b83      	ldr	r3, [pc, #524]	; (80071f4 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8006fe8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8006fea:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8006fee:	b92b      	cbnz	r3, 8006ffc <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8006ff0:	4b81      	ldr	r3, [pc, #516]	; (80071f8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8006ff2:	4a82      	ldr	r2, [pc, #520]	; (80071fc <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8006ff4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ff6:	4882      	ldr	r0, [pc, #520]	; (8007200 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
 8006ff8:	f020 fdfa 	bl	8027bf0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006ffc:	4b81      	ldr	r3, [pc, #516]	; (8007204 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ffe:	881b      	ldrh	r3, [r3, #0]
 8007000:	2b05      	cmp	r3, #5
 8007002:	d803      	bhi.n	800700c <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007004:	4b80      	ldr	r3, [pc, #512]	; (8007208 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007006:	4a7d      	ldr	r2, [pc, #500]	; (80071fc <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007008:	2161      	movs	r1, #97	; 0x61
 800700a:	e7f4      	b.n	8006ff6 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 800700c:	4b7f      	ldr	r3, [pc, #508]	; (800720c <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 800700e:	2105      	movs	r1, #5
 8007010:	6818      	ldr	r0, [r3, #0]
 8007012:	f000 fb1d 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8007016:	4a7e      	ldr	r2, [pc, #504]	; (8007210 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007018:	4603      	mov	r3, r0
 800701a:	2104      	movs	r1, #4
 800701c:	4650      	mov	r0, sl
 800701e:	f010 fbfb 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007022:	4648      	mov	r0, r9
        wc1 = value;
 8007024:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007028:	f00a f98e 	bl	8011348 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800702c:	4b79      	ldr	r3, [pc, #484]	; (8007214 <_ZN20Project_InfoViewBaseC1Ev+0x39c>)
 800702e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007030:	a90a      	add	r1, sp, #40	; 0x28
 8007032:	2306      	movs	r3, #6
 8007034:	4648      	mov	r0, r9
 8007036:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800703a:	f00a f9a5 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800703e:	4649      	mov	r1, r9
 8007040:	4630      	mov	r0, r6
 8007042:	f007 ffed 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007046:	230a      	movs	r3, #10
 8007048:	9300      	str	r3, [sp, #0]
 800704a:	2232      	movs	r2, #50	; 0x32
 800704c:	23f0      	movs	r3, #240	; 0xf0
 800704e:	4629      	mov	r1, r5
 8007050:	4638      	mov	r0, r7
 8007052:	f7fb fa29 	bl	80024a8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007056:	9b03      	ldr	r3, [sp, #12]
 8007058:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800705c:	22a0      	movs	r2, #160	; 0xa0
 800705e:	4611      	mov	r1, r2
 8007060:	4638      	mov	r0, r7
 8007062:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007066:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800706a:	f009 fd47 	bl	8010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800706e:	22a0      	movs	r2, #160	; 0xa0
 8007070:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007074:	4638      	mov	r0, r7
 8007076:	f009 fd4c 	bl	8010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800707a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800707e:	2b20      	cmp	r3, #32
 8007080:	d005      	beq.n	800708e <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007082:	2320      	movs	r3, #32
 8007084:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007088:	4638      	mov	r0, r7
 800708a:	f009 fc41 	bl	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800708e:	4638      	mov	r0, r7
 8007090:	2101      	movs	r1, #1
 8007092:	f009 fd49 	bl	8010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007096:	4639      	mov	r1, r7
 8007098:	4630      	mov	r0, r6
 800709a:	f007 ffc1 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800709e:	ee19 0a10 	vmov	r0, s18
 80070a2:	22f0      	movs	r2, #240	; 0xf0
 80070a4:	2121      	movs	r1, #33	; 0x21
 80070a6:	f7fb f9f2 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80070aa:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070ac:	aa0a      	add	r2, sp, #40	; 0x28
 80070ae:	a909      	add	r1, sp, #36	; 0x24
 80070b0:	ee19 0a10 	vmov	r0, s18
 80070b4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80070b8:	2302      	movs	r3, #2
 80070ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80070be:	f00a fb48 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80070c2:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 80070c4:	ee19 0a10 	vmov	r0, s18
 80070c8:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 80070cc:	f7fb fa34 	bl	8002538 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80070d0:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80070d4:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80070d8:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80070dc:	ee19 1a10 	vmov	r1, s18
 80070e0:	4630      	mov	r0, r6
        colorPressed = col;
 80070e2:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80070e6:	ad04      	add	r5, sp, #16
 80070e8:	f007 ff9a 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80070ec:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80070f0:	225b      	movs	r2, #91	; 0x5b
 80070f2:	4640      	mov	r0, r8
 80070f4:	2105      	movs	r1, #5
 80070f6:	f7fb f9ca 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80070fa:	4641      	mov	r1, r8
 80070fc:	4628      	mov	r0, r5
        color = newColor;
 80070fe:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007102:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007106:	f009 fea5 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800710a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800710e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007112:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007116:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 8007214 <_ZN20Project_InfoViewBaseC1Ev+0x39c>
 800711a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800711e:	f04f 0b36 	mov.w	fp, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007122:	a90a      	add	r1, sp, #40	; 0x28
 8007124:	4640      	mov	r0, r8
 8007126:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800712a:	f00a f92d 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800712e:	4641      	mov	r1, r8
 8007130:	4630      	mov	r0, r6
 8007132:	f007 ff75 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007136:	ee18 0a10 	vmov	r0, s16
 800713a:	2223      	movs	r2, #35	; 0x23
 800713c:	2145      	movs	r1, #69	; 0x45
 800713e:	f7fb f9a6 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8007142:	ee18 1a10 	vmov	r1, s16
 8007146:	4628      	mov	r0, r5
        color = newColor;
 8007148:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800714c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007150:	f009 fe80 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007154:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007158:	ee18 3a10 	vmov	r3, s16
 800715c:	333c      	adds	r3, #60	; 0x3c
 800715e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007162:	2338      	movs	r3, #56	; 0x38
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007164:	ee18 0a10 	vmov	r0, s16
 8007168:	a90a      	add	r1, sp, #40	; 0x28
 800716a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800716e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007172:	f00a f909 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007176:	ee18 1a10 	vmov	r1, s16
 800717a:	4630      	mov	r0, r6
 800717c:	f007 ff50 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007180:	ee18 0a90 	vmov	r0, s17
 8007184:	220c      	movs	r2, #12
 8007186:	4659      	mov	r1, fp
 8007188:	f7fb f981 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800718c:	ee18 1a90 	vmov	r1, s17
 8007190:	4628      	mov	r0, r5
        color = newColor;
 8007192:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007196:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 800719a:	f009 fe5b 	bl	8010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800719e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071a2:	ee18 3a90 	vmov	r3, s17
 80071a6:	333c      	adds	r3, #60	; 0x3c
 80071a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071ac:	2337      	movs	r3, #55	; 0x37
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 80071ae:	ee18 0a90 	vmov	r0, s17
 80071b2:	a90a      	add	r1, sp, #40	; 0x28
 80071b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071b8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80071bc:	f00a f8e4 	bl	8011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071c0:	4630      	mov	r0, r6
 80071c2:	ee18 1a90 	vmov	r1, s17
 80071c6:	f007 ff2b 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80071ca:	4620      	mov	r0, r4
 80071cc:	b00d      	add	sp, #52	; 0x34
 80071ce:	ecbd 8b04 	vpop	{d8-d9}
 80071d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071d6:	bf00      	nop
 80071d8:	0802b280 	.word	0x0802b280
 80071dc:	0802bf60 	.word	0x0802bf60
 80071e0:	0802c128 	.word	0x0802c128
 80071e4:	0802980c 	.word	0x0802980c
 80071e8:	0802bc94 	.word	0x0802bc94
 80071ec:	0802b268 	.word	0x0802b268
 80071f0:	08006e61 	.word	0x08006e61
 80071f4:	20013814 	.word	0x20013814
 80071f8:	0802964c 	.word	0x0802964c
 80071fc:	0802974e 	.word	0x0802974e
 8007200:	080296c9 	.word	0x080296c9
 8007204:	20013818 	.word	0x20013818
 8007208:	08029710 	.word	0x08029710
 800720c:	20013820 	.word	0x20013820
 8007210:	08029786 	.word	0x08029786
 8007214:	080297fc 	.word	0x080297fc

08007218 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007218:	4770      	bx	lr

0800721a <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800721a:	4770      	bx	lr

0800721c <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800721c:	b510      	push	{r4, lr}
}
 800721e:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007220:	4604      	mov	r4, r0
}
 8007222:	f01f fef4 	bl	802700e <_ZdlPvj>
 8007226:	4620      	mov	r0, r4
 8007228:	bd10      	pop	{r4, pc}
	...

0800722c <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800722c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007230:	4604      	mov	r4, r0
 8007232:	4626      	mov	r6, r4
 8007234:	f00e fe0c 	bl	8015e50 <_ZN8touchgfx6ScreenC1Ev>
 8007238:	2500      	movs	r5, #0
 800723a:	4b2e      	ldr	r3, [pc, #184]	; (80072f4 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800723c:	63e5      	str	r5, [r4, #60]	; 0x3c
 800723e:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007242:	4b2d      	ldr	r3, [pc, #180]	; (80072f8 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007244:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007246:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800724a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800724e:	23ff      	movs	r3, #255	; 0xff
 8007250:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007254:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007258:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800725c:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007260:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007264:	4a25      	ldr	r2, [pc, #148]	; (80072fc <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007266:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800726a:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800726e:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007270:	a901      	add	r1, sp, #4
 8007272:	4638      	mov	r0, r7
 8007274:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007278:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800727c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007280:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007284:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007288:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800728c:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007290:	66a5      	str	r5, [r4, #104]	; 0x68
 8007292:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007296:	f00a fc52 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800729a:	462a      	mov	r2, r5
 800729c:	4629      	mov	r1, r5
 800729e:	4630      	mov	r0, r6
 80072a0:	f7fb f8f5 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80072a4:	4630      	mov	r0, r6
 80072a6:	21f0      	movs	r1, #240	; 0xf0
 80072a8:	f7f9 ff4a 	bl	8001140 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80072ac:	4630      	mov	r0, r6
 80072ae:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80072b2:	f7f9 ff47 	bl	8001144 <_ZN8touchgfx8Drawable9setHeightEs>
 80072b6:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 80072ba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80072be:	66a3      	str	r3, [r4, #104]	; 0x68
 80072c0:	4631      	mov	r1, r6
 80072c2:	4640      	mov	r0, r8
 80072c4:	f007 feac 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 80072c8:	462a      	mov	r2, r5
 80072ca:	4638      	mov	r0, r7
 80072cc:	f06f 0102 	mvn.w	r1, #2
 80072d0:	f7fb f8dd 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 80072d4:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 80072d6:	a901      	add	r1, sp, #4
 80072d8:	4638      	mov	r0, r7
 80072da:	f8ad 3004 	strh.w	r3, [sp, #4]
 80072de:	f00a fc2e 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80072e2:	4640      	mov	r0, r8
 80072e4:	4639      	mov	r1, r7
 80072e6:	f007 fe9b 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80072ea:	4620      	mov	r0, r4
 80072ec:	b002      	add	sp, #8
 80072ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80072f2:	bf00      	nop
 80072f4:	0802b2b4 	.word	0x0802b2b4
 80072f8:	0802bf60 	.word	0x0802bf60
 80072fc:	0802c128 	.word	0x0802c128

08007300 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007300:	4770      	bx	lr
	...

08007304 <_Z23getFont_verdana_10_4bppv>:
{
 8007304:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007306:	4d17      	ldr	r5, [pc, #92]	; (8007364 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007308:	682c      	ldr	r4, [r5, #0]
 800730a:	f3bf 8f5b 	dmb	ish
 800730e:	f014 0401 	ands.w	r4, r4, #1
{
 8007312:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007314:	d122      	bne.n	800735c <_Z23getFont_verdana_10_4bppv+0x58>
 8007316:	4628      	mov	r0, r5
 8007318:	f01f fe7b 	bl	8027012 <__cxa_guard_acquire>
 800731c:	b1f0      	cbz	r0, 800735c <_Z23getFont_verdana_10_4bppv+0x58>
 800731e:	233f      	movs	r3, #63	; 0x3f
 8007320:	9309      	str	r3, [sp, #36]	; 0x24
 8007322:	4b11      	ldr	r3, [pc, #68]	; (8007368 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007324:	9308      	str	r3, [sp, #32]
 8007326:	4b11      	ldr	r3, [pc, #68]	; (800736c <_Z23getFont_verdana_10_4bppv+0x68>)
 8007328:	9307      	str	r3, [sp, #28]
 800732a:	2301      	movs	r3, #1
 800732c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007330:	9304      	str	r3, [sp, #16]
 8007332:	2304      	movs	r3, #4
 8007334:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007338:	230a      	movs	r3, #10
 800733a:	490d      	ldr	r1, [pc, #52]	; (8007370 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800733c:	9300      	str	r3, [sp, #0]
 800733e:	225f      	movs	r2, #95	; 0x5f
 8007340:	230c      	movs	r3, #12
 8007342:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007346:	480b      	ldr	r0, [pc, #44]	; (8007374 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007348:	940a      	str	r4, [sp, #40]	; 0x28
 800734a:	9401      	str	r4, [sp, #4]
 800734c:	f7fd fbbc 	bl	8004ac8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007350:	4809      	ldr	r0, [pc, #36]	; (8007378 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007352:	f020 fc6b 	bl	8027c2c <atexit>
 8007356:	4628      	mov	r0, r5
 8007358:	f01f fe67 	bl	802702a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800735c:	4805      	ldr	r0, [pc, #20]	; (8007374 <_Z23getFont_verdana_10_4bppv+0x70>)
 800735e:	b00f      	add	sp, #60	; 0x3c
 8007360:	bd30      	pop	{r4, r5, pc}
 8007362:	bf00      	nop
 8007364:	200028dc 	.word	0x200028dc
 8007368:	0802ee98 	.word	0x0802ee98
 800736c:	0802ef78 	.word	0x0802ef78
 8007370:	0802e500 	.word	0x0802e500
 8007374:	200028e0 	.word	0x200028e0
 8007378:	08007301 	.word	0x08007301

0800737c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 32, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800737c:	4770      	bx	lr
	...

08007380 <_Z23getFont_verdana_12_4bppv>:
{
 8007380:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 32, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007382:	4d17      	ldr	r5, [pc, #92]	; (80073e0 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007384:	682c      	ldr	r4, [r5, #0]
 8007386:	f3bf 8f5b 	dmb	ish
 800738a:	f014 0401 	ands.w	r4, r4, #1
{
 800738e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 32, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007390:	d122      	bne.n	80073d8 <_Z23getFont_verdana_12_4bppv+0x58>
 8007392:	4628      	mov	r0, r5
 8007394:	f01f fe3d 	bl	8027012 <__cxa_guard_acquire>
 8007398:	b1f0      	cbz	r0, 80073d8 <_Z23getFont_verdana_12_4bppv+0x58>
 800739a:	233f      	movs	r3, #63	; 0x3f
 800739c:	9309      	str	r3, [sp, #36]	; 0x24
 800739e:	4b11      	ldr	r3, [pc, #68]	; (80073e4 <_Z23getFont_verdana_12_4bppv+0x64>)
 80073a0:	9308      	str	r3, [sp, #32]
 80073a2:	4b11      	ldr	r3, [pc, #68]	; (80073e8 <_Z23getFont_verdana_12_4bppv+0x68>)
 80073a4:	9307      	str	r3, [sp, #28]
 80073a6:	2301      	movs	r3, #1
 80073a8:	e9cd 4305 	strd	r4, r3, [sp, #20]
 80073ac:	9304      	str	r3, [sp, #16]
 80073ae:	2304      	movs	r3, #4
 80073b0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80073b4:	230c      	movs	r3, #12
 80073b6:	490d      	ldr	r1, [pc, #52]	; (80073ec <_Z23getFont_verdana_12_4bppv+0x6c>)
 80073b8:	9300      	str	r3, [sp, #0]
 80073ba:	2220      	movs	r2, #32
 80073bc:	230f      	movs	r3, #15
 80073be:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80073c2:	480b      	ldr	r0, [pc, #44]	; (80073f0 <_Z23getFont_verdana_12_4bppv+0x70>)
 80073c4:	940a      	str	r4, [sp, #40]	; 0x28
 80073c6:	9401      	str	r4, [sp, #4]
 80073c8:	f7fd fb7e 	bl	8004ac8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80073cc:	4809      	ldr	r0, [pc, #36]	; (80073f4 <_Z23getFont_verdana_12_4bppv+0x74>)
 80073ce:	f020 fc2d 	bl	8027c2c <atexit>
 80073d2:	4628      	mov	r0, r5
 80073d4:	f01f fe29 	bl	802702a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 80073d8:	4805      	ldr	r0, [pc, #20]	; (80073f0 <_Z23getFont_verdana_12_4bppv+0x70>)
 80073da:	b00f      	add	sp, #60	; 0x3c
 80073dc:	bd30      	pop	{r4, r5, pc}
 80073de:	bf00      	nop
 80073e0:	2000290c 	.word	0x2000290c
 80073e4:	0802eecc 	.word	0x0802eecc
 80073e8:	0802ef7c 	.word	0x0802ef7c
 80073ec:	0802ea34 	.word	0x0802ea34
 80073f0:	20002910 	.word	0x20002910
 80073f4:	0800737d 	.word	0x0800737d

080073f8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80073f8:	4770      	bx	lr
	...

080073fc <_Z23getFont_verdana_19_4bppv>:
{
 80073fc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80073fe:	4d17      	ldr	r5, [pc, #92]	; (800745c <_Z23getFont_verdana_19_4bppv+0x60>)
 8007400:	682c      	ldr	r4, [r5, #0]
 8007402:	f3bf 8f5b 	dmb	ish
 8007406:	f014 0401 	ands.w	r4, r4, #1
{
 800740a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800740c:	d122      	bne.n	8007454 <_Z23getFont_verdana_19_4bppv+0x58>
 800740e:	4628      	mov	r0, r5
 8007410:	f01f fdff 	bl	8027012 <__cxa_guard_acquire>
 8007414:	b1f0      	cbz	r0, 8007454 <_Z23getFont_verdana_19_4bppv+0x58>
 8007416:	233f      	movs	r3, #63	; 0x3f
 8007418:	9309      	str	r3, [sp, #36]	; 0x24
 800741a:	4b11      	ldr	r3, [pc, #68]	; (8007460 <_Z23getFont_verdana_19_4bppv+0x64>)
 800741c:	9308      	str	r3, [sp, #32]
 800741e:	4b11      	ldr	r3, [pc, #68]	; (8007464 <_Z23getFont_verdana_19_4bppv+0x68>)
 8007420:	9307      	str	r3, [sp, #28]
 8007422:	2301      	movs	r3, #1
 8007424:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007428:	9304      	str	r3, [sp, #16]
 800742a:	2304      	movs	r3, #4
 800742c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007430:	2313      	movs	r3, #19
 8007432:	490d      	ldr	r1, [pc, #52]	; (8007468 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007434:	9300      	str	r3, [sp, #0]
 8007436:	222f      	movs	r2, #47	; 0x2f
 8007438:	2317      	movs	r3, #23
 800743a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800743e:	480b      	ldr	r0, [pc, #44]	; (800746c <_Z23getFont_verdana_19_4bppv+0x70>)
 8007440:	940a      	str	r4, [sp, #40]	; 0x28
 8007442:	9401      	str	r4, [sp, #4]
 8007444:	f7fd fb40 	bl	8004ac8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007448:	4809      	ldr	r0, [pc, #36]	; (8007470 <_Z23getFont_verdana_19_4bppv+0x74>)
 800744a:	f020 fbef 	bl	8027c2c <atexit>
 800744e:	4628      	mov	r0, r5
 8007450:	f01f fdeb 	bl	802702a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007454:	4805      	ldr	r0, [pc, #20]	; (800746c <_Z23getFont_verdana_19_4bppv+0x70>)
 8007456:	b00f      	add	sp, #60	; 0x3c
 8007458:	bd30      	pop	{r4, r5, pc}
 800745a:	bf00      	nop
 800745c:	2000293c 	.word	0x2000293c
 8007460:	0802eed0 	.word	0x0802eed0
 8007464:	0802ef80 	.word	0x0802ef80
 8007468:	0802ebf4 	.word	0x0802ebf4
 800746c:	20002940 	.word	0x20002940
 8007470:	080073f9 	.word	0x080073f9

08007474 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007474:	4770      	bx	lr
	...

08007478 <_Z23getFont_verdana_40_4bppv>:
{
 8007478:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800747a:	4d16      	ldr	r5, [pc, #88]	; (80074d4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800747c:	682c      	ldr	r4, [r5, #0]
 800747e:	f3bf 8f5b 	dmb	ish
 8007482:	f014 0401 	ands.w	r4, r4, #1
{
 8007486:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007488:	d120      	bne.n	80074cc <_Z23getFont_verdana_40_4bppv+0x54>
 800748a:	4628      	mov	r0, r5
 800748c:	f01f fdc1 	bl	8027012 <__cxa_guard_acquire>
 8007490:	b1e0      	cbz	r0, 80074cc <_Z23getFont_verdana_40_4bppv+0x54>
 8007492:	233f      	movs	r3, #63	; 0x3f
 8007494:	9309      	str	r3, [sp, #36]	; 0x24
 8007496:	4b10      	ldr	r3, [pc, #64]	; (80074d8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007498:	9308      	str	r3, [sp, #32]
 800749a:	4b10      	ldr	r3, [pc, #64]	; (80074dc <_Z23getFont_verdana_40_4bppv+0x64>)
 800749c:	4910      	ldr	r1, [pc, #64]	; (80074e0 <_Z23getFont_verdana_40_4bppv+0x68>)
 800749e:	4811      	ldr	r0, [pc, #68]	; (80074e4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80074a0:	940a      	str	r4, [sp, #40]	; 0x28
 80074a2:	2201      	movs	r2, #1
 80074a4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80074a8:	2304      	movs	r3, #4
 80074aa:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80074ae:	2328      	movs	r3, #40	; 0x28
 80074b0:	9300      	str	r3, [sp, #0]
 80074b2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80074b6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80074ba:	9405      	str	r4, [sp, #20]
 80074bc:	f7fd fb04 	bl	8004ac8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80074c0:	4809      	ldr	r0, [pc, #36]	; (80074e8 <_Z23getFont_verdana_40_4bppv+0x70>)
 80074c2:	f020 fbb3 	bl	8027c2c <atexit>
 80074c6:	4628      	mov	r0, r5
 80074c8:	f01f fdaf 	bl	802702a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80074cc:	4805      	ldr	r0, [pc, #20]	; (80074e4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80074ce:	b00f      	add	sp, #60	; 0x3c
 80074d0:	bd30      	pop	{r4, r5, pc}
 80074d2:	bf00      	nop
 80074d4:	2000296c 	.word	0x2000296c
 80074d8:	0802ef74 	.word	0x0802ef74
 80074dc:	0802ef84 	.word	0x0802ef84
 80074e0:	0802ee88 	.word	0x0802ee88
 80074e4:	20002970 	.word	0x20002970
 80074e8:	08007475 	.word	0x08007475

080074ec <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80074ec:	2000      	movs	r0, #0
 80074ee:	4770      	bx	lr

080074f0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80074f0:	2000      	movs	r0, #0
 80074f2:	4770      	bx	lr

080074f4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80074f4:	b40e      	push	{r1, r2, r3}
 80074f6:	b503      	push	{r0, r1, lr}
 80074f8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80074fa:	2100      	movs	r1, #0
{
 80074fc:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007500:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007502:	f00d ffe3 	bl	80154cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007506:	b002      	add	sp, #8
 8007508:	f85d eb04 	ldr.w	lr, [sp], #4
 800750c:	b003      	add	sp, #12
 800750e:	4770      	bx	lr

08007510 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007510:	b40c      	push	{r2, r3}
 8007512:	b507      	push	{r0, r1, r2, lr}
 8007514:	ab04      	add	r3, sp, #16
 8007516:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800751a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800751c:	f00d ffd6 	bl	80154cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007520:	b003      	add	sp, #12
 8007522:	f85d eb04 	ldr.w	lr, [sp], #4
 8007526:	b002      	add	sp, #8
 8007528:	4770      	bx	lr
	...

0800752c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800752c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800752e:	b510      	push	{r4, lr}
 8007530:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007532:	b373      	cbz	r3, 8007592 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007534:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007536:	b92b      	cbnz	r3, 8007544 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007538:	4b18      	ldr	r3, [pc, #96]	; (800759c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800753a:	4a19      	ldr	r2, [pc, #100]	; (80075a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800753c:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800753e:	4819      	ldr	r0, [pc, #100]	; (80075a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007540:	f020 fb56 	bl	8027bf0 <__assert_func>
            return buffer[pos];
 8007544:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007546:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800754a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800754c:	b30b      	cbz	r3, 8007592 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800754e:	f00f fbba 	bl	8016cc6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007552:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007554:	2b01      	cmp	r3, #1
 8007556:	d803      	bhi.n	8007560 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007558:	4b13      	ldr	r3, [pc, #76]	; (80075a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800755a:	4a14      	ldr	r2, [pc, #80]	; (80075ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800755c:	21cb      	movs	r1, #203	; 0xcb
 800755e:	e7ee      	b.n	800753e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007560:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007562:	1c53      	adds	r3, r2, #1
 8007564:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007566:	2b09      	cmp	r3, #9
 8007568:	4619      	mov	r1, r3
 800756a:	bf88      	it	hi
 800756c:	f1a3 010a 	subhi.w	r1, r3, #10
 8007570:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007574:	f640 103f 	movw	r0, #2367	; 0x93f
 8007578:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800757a:	4281      	cmp	r1, r0
 800757c:	d109      	bne.n	8007592 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800757e:	2b0a      	cmp	r3, #10
 8007580:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007584:	bf28      	it	cs
 8007586:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007588:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800758c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800758e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007590:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007592:	4620      	mov	r0, r4
}
 8007594:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007598:	f00f ba98 	b.w	8016acc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800759c:	0802b2e0 	.word	0x0802b2e0
 80075a0:	0802b2e9 	.word	0x0802b2e9
 80075a4:	0802b394 	.word	0x0802b394
 80075a8:	0802b3de 	.word	0x0802b3de
 80075ac:	0802b3ec 	.word	0x0802b3ec

080075b0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80075b0:	f00f ba53 	b.w	8016a5a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080075b4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80075b4:	b510      	push	{r4, lr}
 80075b6:	b086      	sub	sp, #24
 80075b8:	ac02      	add	r4, sp, #8
 80075ba:	e884 0006 	stmia.w	r4, {r1, r2}
 80075be:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80075c0:	ab0a      	add	r3, sp, #40	; 0x28
 80075c2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80075c4:	9301      	str	r3, [sp, #4]
 80075c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80075c8:	9300      	str	r3, [sp, #0]
 80075ca:	4621      	mov	r1, r4
 80075cc:	9b08      	ldr	r3, [sp, #32]
 80075ce:	f00c fb41 	bl	8013c54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80075d2:	b006      	add	sp, #24
 80075d4:	bd10      	pop	{r4, pc}
	...

080075d8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80075d8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80075da:	bb18      	cbnz	r0, 8007624 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80075dc:	4b12      	ldr	r3, [pc, #72]	; (8007628 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80075de:	4813      	ldr	r0, [pc, #76]	; (800762c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80075e0:	681c      	ldr	r4, [r3, #0]
 80075e2:	4913      	ldr	r1, [pc, #76]	; (8007630 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80075e4:	b1b4      	cbz	r4, 8007614 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80075e6:	6822      	ldr	r2, [r4, #0]
 80075e8:	4422      	add	r2, r4
 80075ea:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80075ec:	6862      	ldr	r2, [r4, #4]
 80075ee:	4422      	add	r2, r4
 80075f0:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80075f2:	68a2      	ldr	r2, [r4, #8]
 80075f4:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80075f6:	4b0f      	ldr	r3, [pc, #60]	; (8007634 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80075f8:	2200      	movs	r2, #0
 80075fa:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80075fc:	f000 f838 	bl	8007670 <_ZN17TypedTextDatabase8getFontsEv>
 8007600:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8007602:	f000 f833 	bl	800766c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007606:	4b0c      	ldr	r3, [pc, #48]	; (8007638 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007608:	601c      	str	r4, [r3, #0]
        fonts = f;
 800760a:	4b0c      	ldr	r3, [pc, #48]	; (800763c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800760c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800760e:	4b0c      	ldr	r3, [pc, #48]	; (8007640 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8007610:	8018      	strh	r0, [r3, #0]
    }
}
 8007612:	e007      	b.n	8007624 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8007614:	4b0b      	ldr	r3, [pc, #44]	; (8007644 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8007616:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007618:	4b0b      	ldr	r3, [pc, #44]	; (8007648 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800761a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800761c:	4b0b      	ldr	r3, [pc, #44]	; (800764c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800761e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8007620:	2c00      	cmp	r4, #0
 8007622:	d1e8      	bne.n	80075f6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007624:	bd38      	pop	{r3, r4, r5, pc}
 8007626:	bf00      	nop
 8007628:	2000299c 	.word	0x2000299c
 800762c:	200029a0 	.word	0x200029a0
 8007630:	200029a4 	.word	0x200029a4
 8007634:	200029a8 	.word	0x200029a8
 8007638:	20013814 	.word	0x20013814
 800763c:	2001381c 	.word	0x2001381c
 8007640:	20013818 	.word	0x20013818
 8007644:	0802f0a8 	.word	0x0802f0a8
 8007648:	0802ef88 	.word	0x0802ef88
 800764c:	0802f538 	.word	0x0802f538

08007650 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8007650:	4b04      	ldr	r3, [pc, #16]	; (8007664 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8007652:	681b      	ldr	r3, [r3, #0]
 8007654:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007658:	4b03      	ldr	r3, [pc, #12]	; (8007668 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800765a:	681b      	ldr	r3, [r3, #0]
}
 800765c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007660:	4770      	bx	lr
 8007662:	bf00      	nop
 8007664:	200029a4 	.word	0x200029a4
 8007668:	200029a0 	.word	0x200029a0

0800766c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800766c:	2048      	movs	r0, #72	; 0x48
 800766e:	4770      	bx	lr

08007670 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007670:	4800      	ldr	r0, [pc, #0]	; (8007674 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007672:	4770      	bx	lr
 8007674:	200029ac 	.word	0x200029ac

08007678 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007678:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800767a:	f7ff febf 	bl	80073fc <_Z23getFont_verdana_19_4bppv>
};
 800767e:	4c06      	ldr	r4, [pc, #24]	; (8007698 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8007680:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8007682:	f7ff fef9 	bl	8007478 <_Z23getFont_verdana_40_4bppv>
};
 8007686:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8007688:	f7ff fe3c 	bl	8007304 <_Z23getFont_verdana_10_4bppv>
};
 800768c:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800768e:	f7ff fe77 	bl	8007380 <_Z23getFont_verdana_12_4bppv>
};
 8007692:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8007694:	bd10      	pop	{r4, pc}
 8007696:	bf00      	nop
 8007698:	200029ac 	.word	0x200029ac

0800769c <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 800769c:	4770      	bx	lr

0800769e <_ZThn4_N20CalibrationPresenterD1Ev>:
 800769e:	3804      	subs	r0, #4
 80076a0:	4770      	bx	lr

080076a2 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 80076a2:	4770      	bx	lr

080076a4 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80076a4:	68c0      	ldr	r0, [r0, #12]
 80076a6:	6803      	ldr	r3, [r0, #0]
 80076a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80076aa:	4718      	bx	r3

080076ac <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80076ac:	f1a0 0004 	sub.w	r0, r0, #4
 80076b0:	f7ff bff8 	b.w	80076a4 <_ZN20CalibrationPresenter15setTimeoutValueEi>

080076b4 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 80076b4:	b510      	push	{r4, lr}
 80076b6:	2110      	movs	r1, #16
 80076b8:	4604      	mov	r4, r0
 80076ba:	f01f fca8 	bl	802700e <_ZdlPvj>
 80076be:	4620      	mov	r0, r4
 80076c0:	bd10      	pop	{r4, pc}

080076c2 <_ZThn4_N20CalibrationPresenterD0Ev>:
 80076c2:	f1a0 0004 	sub.w	r0, r0, #4
 80076c6:	e7f5      	b.n	80076b4 <_ZN20CalibrationPresenterD0Ev>

080076c8 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 80076c8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80076ca:	2200      	movs	r2, #0
 80076cc:	6082      	str	r2, [r0, #8]
    : view(v)
 80076ce:	4a04      	ldr	r2, [pc, #16]	; (80076e0 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 80076d0:	60c1      	str	r1, [r0, #12]
 80076d2:	f102 0408 	add.w	r4, r2, #8
 80076d6:	3224      	adds	r2, #36	; 0x24
 80076d8:	6004      	str	r4, [r0, #0]
 80076da:	6042      	str	r2, [r0, #4]
}
 80076dc:	bd10      	pop	{r4, pc}
 80076de:	bf00      	nop
 80076e0:	0802b4c0 	.word	0x0802b4c0

080076e4 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 80076e4:	4770      	bx	lr
	...

080076e8 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 80076e8:	b510      	push	{r4, lr}
 80076ea:	4b03      	ldr	r3, [pc, #12]	; (80076f8 <_ZN15CalibrationViewD1Ev+0x10>)
 80076ec:	6003      	str	r3, [r0, #0]
 80076ee:	4604      	mov	r4, r0
 80076f0:	f7fa fe5a 	bl	80023a8 <_ZN19CalibrationViewBaseD1Ev>
 80076f4:	4620      	mov	r0, r4
 80076f6:	bd10      	pop	{r4, pc}
 80076f8:	0802b4fc 	.word	0x0802b4fc

080076fc <_ZN15CalibrationViewD0Ev>:
 80076fc:	b510      	push	{r4, lr}
 80076fe:	4604      	mov	r4, r0
 8007700:	f7ff fff2 	bl	80076e8 <_ZN15CalibrationViewD1Ev>
 8007704:	4620      	mov	r0, r4
 8007706:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800770a:	f01f fc80 	bl	802700e <_ZdlPvj>
 800770e:	4620      	mov	r0, r4
 8007710:	bd10      	pop	{r4, pc}
	...

08007714 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8007714:	b510      	push	{r4, lr}
 8007716:	4604      	mov	r4, r0
 8007718:	f7fa ff52 	bl	80025c0 <_ZN19CalibrationViewBaseC1Ev>
 800771c:	4b01      	ldr	r3, [pc, #4]	; (8007724 <_ZN15CalibrationViewC1Ev+0x10>)
 800771e:	6023      	str	r3, [r4, #0]
}
 8007720:	4620      	mov	r0, r4
 8007722:	bd10      	pop	{r4, pc}
 8007724:	0802b4fc 	.word	0x0802b4fc

08007728 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8007728:	f7fa be0b 	b.w	8002342 <_ZN19CalibrationViewBase11setupScreenEv>

0800772c <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 800772c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800772e:	4a0a      	ldr	r2, [pc, #40]	; (8007758 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8007730:	4605      	mov	r5, r0
 8007732:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007734:	460b      	mov	r3, r1
 8007736:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800773a:	2104      	movs	r1, #4
 800773c:	f010 f86c 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007740:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007744:	f00d ffec 	bl	8015720 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007748:	b92c      	cbnz	r4, 8007756 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 800774a:	f00c ff01 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800774e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007752:	f7fb becf 	b.w	80034f4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007756:	bd38      	pop	{r3, r4, r5, pc}
 8007758:	0802b4f0 	.word	0x0802b4f0

0800775c <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800775c:	4770      	bx	lr

0800775e <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800775e:	3804      	subs	r0, #4
 8007760:	4770      	bx	lr

08007762 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8007762:	4770      	bx	lr

08007764 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8007764:	4770      	bx	lr

08007766 <_ZN24Calibration_PadPresenterD0Ev>:
 8007766:	b510      	push	{r4, lr}
 8007768:	2110      	movs	r1, #16
 800776a:	4604      	mov	r4, r0
 800776c:	f01f fc4f 	bl	802700e <_ZdlPvj>
 8007770:	4620      	mov	r0, r4
 8007772:	bd10      	pop	{r4, pc}

08007774 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8007774:	f1a0 0004 	sub.w	r0, r0, #4
 8007778:	e7f5      	b.n	8007766 <_ZN24Calibration_PadPresenterD0Ev>

0800777a <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800777a:	4770      	bx	lr

0800777c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800777c:	b510      	push	{r4, lr}
 800777e:	2200      	movs	r2, #0
 8007780:	6082      	str	r2, [r0, #8]
    : view(v)
 8007782:	4a04      	ldr	r2, [pc, #16]	; (8007794 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8007784:	60c1      	str	r1, [r0, #12]
 8007786:	f102 0408 	add.w	r4, r2, #8
 800778a:	3224      	adds	r2, #36	; 0x24
 800778c:	6004      	str	r4, [r0, #0]
 800778e:	6042      	str	r2, [r0, #4]
}
 8007790:	bd10      	pop	{r4, pc}
 8007792:	bf00      	nop
 8007794:	0802b52c 	.word	0x0802b52c

08007798 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8007798:	4770      	bx	lr

0800779a <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800779a:	4770      	bx	lr

0800779c <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800779c:	b510      	push	{r4, lr}
 800779e:	4b03      	ldr	r3, [pc, #12]	; (80077ac <_ZN19Calibration_PadViewD1Ev+0x10>)
 80077a0:	6003      	str	r3, [r0, #0]
 80077a2:	4604      	mov	r4, r0
 80077a4:	f7fb f94c 	bl	8002a40 <_ZN23Calibration_PadViewBaseD1Ev>
 80077a8:	4620      	mov	r0, r4
 80077aa:	bd10      	pop	{r4, pc}
 80077ac:	0802b564 	.word	0x0802b564

080077b0 <_ZN19Calibration_PadViewD0Ev>:
 80077b0:	b510      	push	{r4, lr}
 80077b2:	4604      	mov	r4, r0
 80077b4:	f7ff fff2 	bl	800779c <_ZN19Calibration_PadViewD1Ev>
 80077b8:	4620      	mov	r0, r4
 80077ba:	f241 015c 	movw	r1, #4188	; 0x105c
 80077be:	f01f fc26 	bl	802700e <_ZdlPvj>
 80077c2:	4620      	mov	r0, r4
 80077c4:	bd10      	pop	{r4, pc}
	...

080077c8 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 80077c8:	b510      	push	{r4, lr}
 80077ca:	4604      	mov	r4, r0
 80077cc:	f7fb f960 	bl	8002a90 <_ZN23Calibration_PadViewBaseC1Ev>
 80077d0:	4b01      	ldr	r3, [pc, #4]	; (80077d8 <_ZN19Calibration_PadViewC1Ev+0x10>)
 80077d2:	6023      	str	r3, [r4, #0]
}
 80077d4:	4620      	mov	r0, r4
 80077d6:	bd10      	pop	{r4, pc}
 80077d8:	0802b564 	.word	0x0802b564

080077dc <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 80077dc:	f7fb b90c 	b.w	80029f8 <_ZN23Calibration_PadViewBase11setupScreenEv>

080077e0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80077e0:	4770      	bx	lr

080077e2 <_ZN19FrontendApplicationD0Ev>:
 80077e2:	b510      	push	{r4, lr}
 80077e4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80077e8:	4604      	mov	r4, r0
 80077ea:	f01f fc10 	bl	802700e <_ZdlPvj>
 80077ee:	4620      	mov	r0, r4
 80077f0:	bd10      	pop	{r4, pc}

080077f2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80077f2:	b510      	push	{r4, lr}
 80077f4:	4604      	mov	r4, r0
    {
        model.tick();
 80077f6:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80077fa:	f000 fabf 	bl	8007d7c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80077fe:	4620      	mov	r0, r4
    }
 8007800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8007804:	f00c bf68 	b.w	80146d8 <_ZN8touchgfx11Application15handleTickEventEv>

08007808 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007808:	b510      	push	{r4, lr}
 800780a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800780c:	f7fb fd52 	bl	80032b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8007810:	4b01      	ldr	r3, [pc, #4]	; (8007818 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8007812:	6023      	str	r3, [r4, #0]
{

}
 8007814:	4620      	mov	r0, r4
 8007816:	bd10      	pop	{r4, pc}
 8007818:	0802b59c 	.word	0x0802b59c

0800781c <_ZN17Gauge_with_ValuesD1Ev>:
 800781c:	b510      	push	{r4, lr}
 800781e:	4b03      	ldr	r3, [pc, #12]	; (800782c <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8007820:	6003      	str	r3, [r0, #0]
 8007822:	4604      	mov	r4, r0
 8007824:	f7fc ff9c 	bl	8004760 <_ZN21Gauge_with_ValuesBaseD1Ev>
 8007828:	4620      	mov	r0, r4
 800782a:	bd10      	pop	{r4, pc}
 800782c:	0802b5f0 	.word	0x0802b5f0

08007830 <_ZN17Gauge_with_ValuesD0Ev>:
 8007830:	b510      	push	{r4, lr}
 8007832:	4604      	mov	r4, r0
 8007834:	f7ff fff2 	bl	800781c <_ZN17Gauge_with_ValuesD1Ev>
 8007838:	4620      	mov	r0, r4
 800783a:	f44f 7162 	mov.w	r1, #904	; 0x388
 800783e:	f01f fbe6 	bl	802700e <_ZdlPvj>
 8007842:	4620      	mov	r0, r4
 8007844:	bd10      	pop	{r4, pc}
	...

08007848 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8007848:	b510      	push	{r4, lr}
 800784a:	4604      	mov	r4, r0
 800784c:	f7fc ff92 	bl	8004774 <_ZN21Gauge_with_ValuesBaseC1Ev>
 8007850:	4b01      	ldr	r3, [pc, #4]	; (8007858 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 8007852:	6023      	str	r3, [r4, #0]
{

}
 8007854:	4620      	mov	r0, r4
 8007856:	bd10      	pop	{r4, pc}
 8007858:	0802b5f0 	.word	0x0802b5f0

0800785c <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 800785c:	f7fc bf81 	b.w	8004762 <_ZN21Gauge_with_ValuesBase10initializeEv>

08007860 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8007860:	4770      	bx	lr

08007862 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8007862:	3804      	subs	r0, #4
 8007864:	4770      	bx	lr

08007866 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8007866:	4770      	bx	lr

08007868 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007868:	68c0      	ldr	r0, [r0, #12]
 800786a:	6803      	ldr	r3, [r0, #0]
 800786c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800786e:	4718      	bx	r3

08007870 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007870:	f1a0 0004 	sub.w	r0, r0, #4
 8007874:	f7ff bff8 	b.w	8007868 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08007878 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8007878:	b510      	push	{r4, lr}
 800787a:	2110      	movs	r1, #16
 800787c:	4604      	mov	r4, r0
 800787e:	f01f fbc6 	bl	802700e <_ZdlPvj>
 8007882:	4620      	mov	r0, r4
 8007884:	bd10      	pop	{r4, pc}

08007886 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8007886:	f1a0 0004 	sub.w	r0, r0, #4
 800788a:	e7f5      	b.n	8007878 <_ZN18Main_MenuPresenterD0Ev>

0800788c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800788c:	b510      	push	{r4, lr}
 800788e:	2200      	movs	r2, #0
 8007890:	6082      	str	r2, [r0, #8]
    : view(v)
 8007892:	4a04      	ldr	r2, [pc, #16]	; (80078a4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8007894:	60c1      	str	r1, [r0, #12]
 8007896:	f102 0408 	add.w	r4, r2, #8
 800789a:	3224      	adds	r2, #36	; 0x24
 800789c:	6004      	str	r4, [r0, #0]
 800789e:	6042      	str	r2, [r0, #4]
}
 80078a0:	bd10      	pop	{r4, pc}
 80078a2:	bf00      	nop
 80078a4:	0802b67c 	.word	0x0802b67c

080078a8 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 80078a8:	4770      	bx	lr
	...

080078ac <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 80078ac:	b510      	push	{r4, lr}
 80078ae:	4b03      	ldr	r3, [pc, #12]	; (80078bc <_ZN13Main_MenuViewD1Ev+0x10>)
 80078b0:	6003      	str	r3, [r0, #0]
 80078b2:	4604      	mov	r4, r0
 80078b4:	f7fd f95c 	bl	8004b70 <_ZN17Main_MenuViewBaseD1Ev>
 80078b8:	4620      	mov	r0, r4
 80078ba:	bd10      	pop	{r4, pc}
 80078bc:	0802b6b4 	.word	0x0802b6b4

080078c0 <_ZN13Main_MenuViewD0Ev>:
 80078c0:	b510      	push	{r4, lr}
 80078c2:	4604      	mov	r4, r0
 80078c4:	f7ff fff2 	bl	80078ac <_ZN13Main_MenuViewD1Ev>
 80078c8:	4620      	mov	r0, r4
 80078ca:	f241 117c 	movw	r1, #4476	; 0x117c
 80078ce:	f01f fb9e 	bl	802700e <_ZdlPvj>
 80078d2:	4620      	mov	r0, r4
 80078d4:	bd10      	pop	{r4, pc}
	...

080078d8 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 80078d8:	b510      	push	{r4, lr}
 80078da:	4604      	mov	r4, r0
 80078dc:	f7fd f992 	bl	8004c04 <_ZN17Main_MenuViewBaseC1Ev>
 80078e0:	4b01      	ldr	r3, [pc, #4]	; (80078e8 <_ZN13Main_MenuViewC1Ev+0x10>)
 80078e2:	6023      	str	r3, [r4, #0]
}
 80078e4:	4620      	mov	r0, r4
 80078e6:	bd10      	pop	{r4, pc}
 80078e8:	0802b6b4 	.word	0x0802b6b4

080078ec <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80078ec:	f7fd b91c 	b.w	8004b28 <_ZN17Main_MenuViewBase11setupScreenEv>

080078f0 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80078f0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80078f2:	4a0a      	ldr	r2, [pc, #40]	; (800791c <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80078f4:	4605      	mov	r5, r0
 80078f6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80078f8:	460b      	mov	r3, r1
 80078fa:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80078fe:	2104      	movs	r1, #4
 8007900:	f00f ff8a 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8007904:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007908:	f00d ff0a 	bl	8015720 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800790c:	b92c      	cbnz	r4, 800791a <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800790e:	f00c fe1f 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007912:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007916:	f7fb bded 	b.w	80034f4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800791a:	bd38      	pop	{r3, r4, r5, pc}
 800791c:	0802b4f0 	.word	0x0802b4f0

08007920 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8007920:	4770      	bx	lr

08007922 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8007922:	3804      	subs	r0, #4
 8007924:	4770      	bx	lr

08007926 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8007926:	4770      	bx	lr

08007928 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007928:	68c0      	ldr	r0, [r0, #12]
 800792a:	6803      	ldr	r3, [r0, #0]
 800792c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800792e:	4718      	bx	r3

08007930 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007930:	f1a0 0004 	sub.w	r0, r0, #4
 8007934:	f7ff bff8 	b.w	8007928 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08007938 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8007938:	b510      	push	{r4, lr}
 800793a:	2110      	movs	r1, #16
 800793c:	4604      	mov	r4, r0
 800793e:	f01f fb66 	bl	802700e <_ZdlPvj>
 8007942:	4620      	mov	r0, r4
 8007944:	bd10      	pop	{r4, pc}

08007946 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8007946:	f1a0 0004 	sub.w	r0, r0, #4
 800794a:	e7f5      	b.n	8007938 <_ZN20MeasurementPresenterD0Ev>

0800794c <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800794c:	b510      	push	{r4, lr}
 800794e:	2200      	movs	r2, #0
 8007950:	6082      	str	r2, [r0, #8]
    : view(v)
 8007952:	4a04      	ldr	r2, [pc, #16]	; (8007964 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8007954:	60c1      	str	r1, [r0, #12]
 8007956:	f102 0408 	add.w	r4, r2, #8
 800795a:	3224      	adds	r2, #36	; 0x24
 800795c:	6004      	str	r4, [r0, #0]
 800795e:	6042      	str	r2, [r0, #4]
}
 8007960:	bd10      	pop	{r4, pc}
 8007962:	bf00      	nop
 8007964:	0802b6e4 	.word	0x0802b6e4

08007968 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8007968:	4770      	bx	lr
	...

0800796c <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800796c:	b510      	push	{r4, lr}
 800796e:	4b03      	ldr	r3, [pc, #12]	; (800797c <_ZN15MeasurementViewD1Ev+0x10>)
 8007970:	6003      	str	r3, [r0, #0]
 8007972:	4604      	mov	r4, r0
 8007974:	f7fd fbb6 	bl	80050e4 <_ZN19MeasurementViewBaseD1Ev>
 8007978:	4620      	mov	r0, r4
 800797a:	bd10      	pop	{r4, pc}
 800797c:	0802b71c 	.word	0x0802b71c

08007980 <_ZN15MeasurementViewD0Ev>:
 8007980:	b510      	push	{r4, lr}
 8007982:	4604      	mov	r4, r0
 8007984:	f7ff fff2 	bl	800796c <_ZN15MeasurementViewD1Ev>
 8007988:	4620      	mov	r0, r4
 800798a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800798e:	f01f fb3e 	bl	802700e <_ZdlPvj>
 8007992:	4620      	mov	r0, r4
 8007994:	bd10      	pop	{r4, pc}
	...

08007998 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8007998:	b510      	push	{r4, lr}
 800799a:	4604      	mov	r4, r0
 800799c:	f7fd fbdc 	bl	8005158 <_ZN19MeasurementViewBaseC1Ev>
 80079a0:	4b01      	ldr	r3, [pc, #4]	; (80079a8 <_ZN15MeasurementViewC1Ev+0x10>)
 80079a2:	6023      	str	r3, [r4, #0]
}
 80079a4:	4620      	mov	r0, r4
 80079a6:	bd10      	pop	{r4, pc}
 80079a8:	0802b71c 	.word	0x0802b71c

080079ac <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 80079ac:	f7fd bb76 	b.w	800509c <_ZN19MeasurementViewBase11setupScreenEv>

080079b0 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 80079b0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80079b2:	4a0a      	ldr	r2, [pc, #40]	; (80079dc <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 80079b4:	4605      	mov	r5, r0
 80079b6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80079b8:	460b      	mov	r3, r1
 80079ba:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80079be:	2104      	movs	r1, #4
 80079c0:	f00f ff2a 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80079c4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80079c8:	f00d feaa 	bl	8015720 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80079cc:	b92c      	cbnz	r4, 80079da <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 80079ce:	f00c fdbf 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80079d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80079d6:	f7fb bd8d 	b.w	80034f4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80079da:	bd38      	pop	{r3, r4, r5, pc}
 80079dc:	0802b4f0 	.word	0x0802b4f0

080079e0 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80079e0:	4770      	bx	lr

080079e2 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80079e2:	3804      	subs	r0, #4
 80079e4:	4770      	bx	lr

080079e6 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80079e6:	4770      	bx	lr

080079e8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80079e8:	68c0      	ldr	r0, [r0, #12]
 80079ea:	6803      	ldr	r3, [r0, #0]
 80079ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80079ee:	4718      	bx	r3

080079f0 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80079f0:	f1a0 0004 	sub.w	r0, r0, #4
 80079f4:	f7ff bff8 	b.w	80079e8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080079f8 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80079f8:	b510      	push	{r4, lr}
 80079fa:	2110      	movs	r1, #16
 80079fc:	4604      	mov	r4, r0
 80079fe:	f01f fb06 	bl	802700e <_ZdlPvj>
 8007a02:	4620      	mov	r0, r4
 8007a04:	bd10      	pop	{r4, pc}

08007a06 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8007a06:	f1a0 0004 	sub.w	r0, r0, #4
 8007a0a:	e7f5      	b.n	80079f8 <_ZN29Measurement_AccuratePresenterD0Ev>

08007a0c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8007a0c:	b510      	push	{r4, lr}
 8007a0e:	2200      	movs	r2, #0
 8007a10:	6082      	str	r2, [r0, #8]
    : view(v)
 8007a12:	4a04      	ldr	r2, [pc, #16]	; (8007a24 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8007a14:	60c1      	str	r1, [r0, #12]
 8007a16:	f102 0408 	add.w	r4, r2, #8
 8007a1a:	3224      	adds	r2, #36	; 0x24
 8007a1c:	6004      	str	r4, [r0, #0]
 8007a1e:	6042      	str	r2, [r0, #4]
}
 8007a20:	bd10      	pop	{r4, pc}
 8007a22:	bf00      	nop
 8007a24:	0802b74c 	.word	0x0802b74c

08007a28 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8007a28:	4770      	bx	lr
	...

08007a2c <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8007a2c:	b510      	push	{r4, lr}
 8007a2e:	4b03      	ldr	r3, [pc, #12]	; (8007a3c <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8007a30:	6003      	str	r3, [r0, #0]
 8007a32:	4604      	mov	r4, r0
 8007a34:	f7fd fdd8 	bl	80055e8 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8007a38:	4620      	mov	r0, r4
 8007a3a:	bd10      	pop	{r4, pc}
 8007a3c:	0802b784 	.word	0x0802b784

08007a40 <_ZN24Measurement_AccurateViewD0Ev>:
 8007a40:	b510      	push	{r4, lr}
 8007a42:	4604      	mov	r4, r0
 8007a44:	f7ff fff2 	bl	8007a2c <_ZN24Measurement_AccurateViewD1Ev>
 8007a48:	4620      	mov	r0, r4
 8007a4a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007a4e:	f01f fade 	bl	802700e <_ZdlPvj>
 8007a52:	4620      	mov	r0, r4
 8007a54:	bd10      	pop	{r4, pc}
	...

08007a58 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8007a58:	b510      	push	{r4, lr}
 8007a5a:	4604      	mov	r4, r0
 8007a5c:	f7fd fdfe 	bl	800565c <_ZN28Measurement_AccurateViewBaseC1Ev>
 8007a60:	4b01      	ldr	r3, [pc, #4]	; (8007a68 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8007a62:	6023      	str	r3, [r4, #0]
}
 8007a64:	4620      	mov	r0, r4
 8007a66:	bd10      	pop	{r4, pc}
 8007a68:	0802b784 	.word	0x0802b784

08007a6c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8007a6c:	f7fd bd98 	b.w	80055a0 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08007a70 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8007a70:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007a72:	4a0a      	ldr	r2, [pc, #40]	; (8007a9c <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8007a74:	4605      	mov	r5, r0
 8007a76:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007a78:	460b      	mov	r3, r1
 8007a7a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8007a7e:	2104      	movs	r1, #4
 8007a80:	f00f feca 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007a84:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007a88:	f00d fe4a 	bl	8015720 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007a8c:	b92c      	cbnz	r4, 8007a9a <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8007a8e:	f00c fd5f 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007a92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007a96:	f7fb bd2d 	b.w	80034f4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007a9a:	bd38      	pop	{r3, r4, r5, pc}
 8007a9c:	0802b4f0 	.word	0x0802b4f0

08007aa0 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8007aa0:	4770      	bx	lr

08007aa2 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8007aa2:	3804      	subs	r0, #4
 8007aa4:	4770      	bx	lr

08007aa6 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8007aa6:	4770      	bx	lr

08007aa8 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8007aa8:	4770      	bx	lr

08007aaa <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8007aaa:	b510      	push	{r4, lr}
 8007aac:	2110      	movs	r1, #16
 8007aae:	4604      	mov	r4, r0
 8007ab0:	f01f faad 	bl	802700e <_ZdlPvj>
 8007ab4:	4620      	mov	r0, r4
 8007ab6:	bd10      	pop	{r4, pc}

08007ab8 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8007ab8:	f1a0 0004 	sub.w	r0, r0, #4
 8007abc:	e7f5      	b.n	8007aaa <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08007abe <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8007abe:	4770      	bx	lr

08007ac0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8007ac0:	b510      	push	{r4, lr}
 8007ac2:	2200      	movs	r2, #0
 8007ac4:	6082      	str	r2, [r0, #8]
    : view(v)
 8007ac6:	4a04      	ldr	r2, [pc, #16]	; (8007ad8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8007ac8:	60c1      	str	r1, [r0, #12]
 8007aca:	f102 0408 	add.w	r4, r2, #8
 8007ace:	3224      	adds	r2, #36	; 0x24
 8007ad0:	6004      	str	r4, [r0, #0]
 8007ad2:	6042      	str	r2, [r0, #4]
}
 8007ad4:	bd10      	pop	{r4, pc}
 8007ad6:	bf00      	nop
 8007ad8:	0802b7b4 	.word	0x0802b7b4

08007adc <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8007adc:	4770      	bx	lr
	...

08007ae0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8007ae0:	b510      	push	{r4, lr}
 8007ae2:	4b03      	ldr	r3, [pc, #12]	; (8007af0 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8007ae4:	6003      	str	r3, [r0, #0]
 8007ae6:	4604      	mov	r4, r0
 8007ae8:	f7fe f80c 	bl	8005b04 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8007aec:	4620      	mov	r0, r4
 8007aee:	bd10      	pop	{r4, pc}
 8007af0:	0802b7ec 	.word	0x0802b7ec

08007af4 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8007af4:	b510      	push	{r4, lr}
 8007af6:	4604      	mov	r4, r0
 8007af8:	f7ff fff2 	bl	8007ae0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8007afc:	4620      	mov	r0, r4
 8007afe:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007b02:	f01f fa84 	bl	802700e <_ZdlPvj>
 8007b06:	4620      	mov	r0, r4
 8007b08:	bd10      	pop	{r4, pc}
	...

08007b0c <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8007b0c:	b510      	push	{r4, lr}
 8007b0e:	4604      	mov	r4, r0
 8007b10:	f7fe f818 	bl	8005b44 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8007b14:	4b01      	ldr	r3, [pc, #4]	; (8007b1c <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8007b16:	6023      	str	r3, [r4, #0]
}
 8007b18:	4620      	mov	r0, r4
 8007b1a:	bd10      	pop	{r4, pc}
 8007b1c:	0802b7ec 	.word	0x0802b7ec

08007b20 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8007b20:	f7fd bfe1 	b.w	8005ae6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08007b24 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8007b24:	4770      	bx	lr

08007b26 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8007b26:	3804      	subs	r0, #4
 8007b28:	4770      	bx	lr

08007b2a <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8007b2a:	4770      	bx	lr

08007b2c <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8007b2c:	4770      	bx	lr

08007b2e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8007b2e:	b510      	push	{r4, lr}
 8007b30:	2110      	movs	r1, #16
 8007b32:	4604      	mov	r4, r0
 8007b34:	f01f fa6b 	bl	802700e <_ZdlPvj>
 8007b38:	4620      	mov	r0, r4
 8007b3a:	bd10      	pop	{r4, pc}

08007b3c <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8007b3c:	f1a0 0004 	sub.w	r0, r0, #4
 8007b40:	e7f5      	b.n	8007b2e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08007b42 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8007b42:	4770      	bx	lr

08007b44 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8007b44:	b510      	push	{r4, lr}
 8007b46:	2200      	movs	r2, #0
 8007b48:	6082      	str	r2, [r0, #8]
    : view(v)
 8007b4a:	4a04      	ldr	r2, [pc, #16]	; (8007b5c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8007b4c:	60c1      	str	r1, [r0, #12]
 8007b4e:	f102 0408 	add.w	r4, r2, #8
 8007b52:	3224      	adds	r2, #36	; 0x24
 8007b54:	6004      	str	r4, [r0, #0]
 8007b56:	6042      	str	r2, [r0, #4]
}
 8007b58:	bd10      	pop	{r4, pc}
 8007b5a:	bf00      	nop
 8007b5c:	0802b818 	.word	0x0802b818

08007b60 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8007b60:	4770      	bx	lr
	...

08007b64 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8007b64:	b510      	push	{r4, lr}
 8007b66:	4b03      	ldr	r3, [pc, #12]	; (8007b74 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8007b68:	6003      	str	r3, [r0, #0]
 8007b6a:	4604      	mov	r4, r0
 8007b6c:	f7fe f98e 	bl	8005e8c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8007b70:	4620      	mov	r0, r4
 8007b72:	bd10      	pop	{r4, pc}
 8007b74:	0802b850 	.word	0x0802b850

08007b78 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8007b78:	b510      	push	{r4, lr}
 8007b7a:	4604      	mov	r4, r0
 8007b7c:	f7ff fff2 	bl	8007b64 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8007b80:	4620      	mov	r0, r4
 8007b82:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007b86:	f01f fa42 	bl	802700e <_ZdlPvj>
 8007b8a:	4620      	mov	r0, r4
 8007b8c:	bd10      	pop	{r4, pc}
	...

08007b90 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8007b90:	b510      	push	{r4, lr}
 8007b92:	4604      	mov	r4, r0
 8007b94:	f7fe f99a 	bl	8005ecc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8007b98:	4b01      	ldr	r3, [pc, #4]	; (8007ba0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8007b9a:	6023      	str	r3, [r4, #0]
}
 8007b9c:	4620      	mov	r0, r4
 8007b9e:	bd10      	pop	{r4, pc}
 8007ba0:	0802b850 	.word	0x0802b850

08007ba4 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8007ba4:	f7fe b963 	b.w	8005e6e <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08007ba8 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8007ba8:	4770      	bx	lr

08007baa <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8007baa:	3804      	subs	r0, #4
 8007bac:	4770      	bx	lr

08007bae <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8007bae:	4770      	bx	lr

08007bb0 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007bb0:	68c0      	ldr	r0, [r0, #12]
 8007bb2:	6803      	ldr	r3, [r0, #0]
 8007bb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007bb6:	4718      	bx	r3

08007bb8 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007bb8:	f1a0 0004 	sub.w	r0, r0, #4
 8007bbc:	f7ff bff8 	b.w	8007bb0 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08007bc0 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8007bc0:	b510      	push	{r4, lr}
 8007bc2:	2110      	movs	r1, #16
 8007bc4:	4604      	mov	r4, r0
 8007bc6:	f01f fa22 	bl	802700e <_ZdlPvj>
 8007bca:	4620      	mov	r0, r4
 8007bcc:	bd10      	pop	{r4, pc}

08007bce <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8007bce:	f1a0 0004 	sub.w	r0, r0, #4
 8007bd2:	e7f5      	b.n	8007bc0 <_ZN27Measurement_SinglePresenterD0Ev>

08007bd4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8007bd4:	b510      	push	{r4, lr}
 8007bd6:	2200      	movs	r2, #0
 8007bd8:	6082      	str	r2, [r0, #8]
    : view(v)
 8007bda:	4a04      	ldr	r2, [pc, #16]	; (8007bec <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8007bdc:	60c1      	str	r1, [r0, #12]
 8007bde:	f102 0408 	add.w	r4, r2, #8
 8007be2:	3224      	adds	r2, #36	; 0x24
 8007be4:	6004      	str	r4, [r0, #0]
 8007be6:	6042      	str	r2, [r0, #4]
}
 8007be8:	bd10      	pop	{r4, pc}
 8007bea:	bf00      	nop
 8007bec:	0802b87c 	.word	0x0802b87c

08007bf0 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8007bf0:	4770      	bx	lr
	...

08007bf4 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8007bf4:	b510      	push	{r4, lr}
 8007bf6:	4b03      	ldr	r3, [pc, #12]	; (8007c04 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8007bf8:	6003      	str	r3, [r0, #0]
 8007bfa:	4604      	mov	r4, r0
 8007bfc:	f7fe fafc 	bl	80061f8 <_ZN26Measurement_SingleViewBaseD1Ev>
 8007c00:	4620      	mov	r0, r4
 8007c02:	bd10      	pop	{r4, pc}
 8007c04:	0802b8b4 	.word	0x0802b8b4

08007c08 <_ZN22Measurement_SingleViewD0Ev>:
 8007c08:	b510      	push	{r4, lr}
 8007c0a:	4604      	mov	r4, r0
 8007c0c:	f7ff fff2 	bl	8007bf4 <_ZN22Measurement_SingleViewD1Ev>
 8007c10:	4620      	mov	r0, r4
 8007c12:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007c16:	f01f f9fa 	bl	802700e <_ZdlPvj>
 8007c1a:	4620      	mov	r0, r4
 8007c1c:	bd10      	pop	{r4, pc}
	...

08007c20 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8007c20:	b510      	push	{r4, lr}
 8007c22:	4604      	mov	r4, r0
 8007c24:	f7fe fb22 	bl	800626c <_ZN26Measurement_SingleViewBaseC1Ev>
 8007c28:	4b01      	ldr	r3, [pc, #4]	; (8007c30 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8007c2a:	6023      	str	r3, [r4, #0]
}
 8007c2c:	4620      	mov	r0, r4
 8007c2e:	bd10      	pop	{r4, pc}
 8007c30:	0802b8b4 	.word	0x0802b8b4

08007c34 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8007c34:	f7fe babc 	b.w	80061b0 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08007c38 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8007c38:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007c3a:	4a0a      	ldr	r2, [pc, #40]	; (8007c64 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8007c3c:	4605      	mov	r5, r0
 8007c3e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007c40:	460b      	mov	r3, r1
 8007c42:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8007c46:	2104      	movs	r1, #4
 8007c48:	f00f fde6 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007c4c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007c50:	f00d fd66 	bl	8015720 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007c54:	b92c      	cbnz	r4, 8007c62 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8007c56:	f00c fc7b 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007c5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007c5e:	f7fb bc49 	b.w	80034f4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007c62:	bd38      	pop	{r3, r4, r5, pc}
 8007c64:	0802b4f0 	.word	0x0802b4f0

08007c68 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8007c68:	4770      	bx	lr

08007c6a <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8007c6a:	3804      	subs	r0, #4
 8007c6c:	4770      	bx	lr

08007c6e <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8007c6e:	4770      	bx	lr

08007c70 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8007c70:	4770      	bx	lr

08007c72 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8007c72:	b510      	push	{r4, lr}
 8007c74:	2110      	movs	r1, #16
 8007c76:	4604      	mov	r4, r0
 8007c78:	f01f f9c9 	bl	802700e <_ZdlPvj>
 8007c7c:	4620      	mov	r0, r4
 8007c7e:	bd10      	pop	{r4, pc}

08007c80 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8007c80:	f1a0 0004 	sub.w	r0, r0, #4
 8007c84:	e7f5      	b.n	8007c72 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08007c86 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8007c86:	4770      	bx	lr

08007c88 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8007c88:	b510      	push	{r4, lr}
 8007c8a:	2200      	movs	r2, #0
 8007c8c:	6082      	str	r2, [r0, #8]
    : view(v)
 8007c8e:	4a04      	ldr	r2, [pc, #16]	; (8007ca0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8007c90:	60c1      	str	r1, [r0, #12]
 8007c92:	f102 0408 	add.w	r4, r2, #8
 8007c96:	3224      	adds	r2, #36	; 0x24
 8007c98:	6004      	str	r4, [r0, #0]
 8007c9a:	6042      	str	r2, [r0, #4]
}
 8007c9c:	bd10      	pop	{r4, pc}
 8007c9e:	bf00      	nop
 8007ca0:	0802b8e4 	.word	0x0802b8e4

08007ca4 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8007ca4:	4770      	bx	lr
	...

08007ca8 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8007ca8:	b510      	push	{r4, lr}
 8007caa:	4b03      	ldr	r3, [pc, #12]	; (8007cb8 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8007cac:	6003      	str	r3, [r0, #0]
 8007cae:	4604      	mov	r4, r0
 8007cb0:	f7fe fd34 	bl	800671c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8007cb4:	4620      	mov	r0, r4
 8007cb6:	bd10      	pop	{r4, pc}
 8007cb8:	0802b91c 	.word	0x0802b91c

08007cbc <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8007cbc:	b510      	push	{r4, lr}
 8007cbe:	4604      	mov	r4, r0
 8007cc0:	f7ff fff2 	bl	8007ca8 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8007cc4:	4620      	mov	r0, r4
 8007cc6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007cca:	f01f f9a0 	bl	802700e <_ZdlPvj>
 8007cce:	4620      	mov	r0, r4
 8007cd0:	bd10      	pop	{r4, pc}
	...

08007cd4 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8007cd4:	b510      	push	{r4, lr}
 8007cd6:	4604      	mov	r4, r0
 8007cd8:	f7fe fd40 	bl	800675c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8007cdc:	4b01      	ldr	r3, [pc, #4]	; (8007ce4 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8007cde:	6023      	str	r3, [r4, #0]
}
 8007ce0:	4620      	mov	r0, r4
 8007ce2:	bd10      	pop	{r4, pc}
 8007ce4:	0802b91c 	.word	0x0802b91c

08007ce8 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8007ce8:	f7fe bd07 	b.w	80066fa <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08007cec <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8007cec:	4770      	bx	lr

08007cee <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8007cee:	3804      	subs	r0, #4
 8007cf0:	4770      	bx	lr

08007cf2 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8007cf2:	4770      	bx	lr

08007cf4 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8007cf4:	4770      	bx	lr

08007cf6 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8007cf6:	b510      	push	{r4, lr}
 8007cf8:	2110      	movs	r1, #16
 8007cfa:	4604      	mov	r4, r0
 8007cfc:	f01f f987 	bl	802700e <_ZdlPvj>
 8007d00:	4620      	mov	r0, r4
 8007d02:	bd10      	pop	{r4, pc}

08007d04 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8007d04:	f1a0 0004 	sub.w	r0, r0, #4
 8007d08:	e7f5      	b.n	8007cf6 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08007d0a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8007d0a:	4770      	bx	lr

08007d0c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8007d0c:	b510      	push	{r4, lr}
 8007d0e:	2200      	movs	r2, #0
 8007d10:	6082      	str	r2, [r0, #8]
    : view(v)
 8007d12:	4a04      	ldr	r2, [pc, #16]	; (8007d24 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8007d14:	60c1      	str	r1, [r0, #12]
 8007d16:	f102 0408 	add.w	r4, r2, #8
 8007d1a:	3224      	adds	r2, #36	; 0x24
 8007d1c:	6004      	str	r4, [r0, #0]
 8007d1e:	6042      	str	r2, [r0, #4]
}
 8007d20:	bd10      	pop	{r4, pc}
 8007d22:	bf00      	nop
 8007d24:	0802b948 	.word	0x0802b948

08007d28 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8007d28:	4770      	bx	lr
	...

08007d2c <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8007d2c:	b510      	push	{r4, lr}
 8007d2e:	4b03      	ldr	r3, [pc, #12]	; (8007d3c <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8007d30:	6003      	str	r3, [r0, #0]
 8007d32:	4604      	mov	r4, r0
 8007d34:	f7fe febe 	bl	8006ab4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8007d38:	4620      	mov	r0, r4
 8007d3a:	bd10      	pop	{r4, pc}
 8007d3c:	0802b980 	.word	0x0802b980

08007d40 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8007d40:	b510      	push	{r4, lr}
 8007d42:	4604      	mov	r4, r0
 8007d44:	f7ff fff2 	bl	8007d2c <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8007d48:	4620      	mov	r0, r4
 8007d4a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007d4e:	f01f f95e 	bl	802700e <_ZdlPvj>
 8007d52:	4620      	mov	r0, r4
 8007d54:	bd10      	pop	{r4, pc}
	...

08007d58 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8007d58:	b510      	push	{r4, lr}
 8007d5a:	4604      	mov	r4, r0
 8007d5c:	f7fe feca 	bl	8006af4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8007d60:	4b01      	ldr	r3, [pc, #4]	; (8007d68 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8007d62:	6023      	str	r3, [r4, #0]
}
 8007d64:	4620      	mov	r0, r4
 8007d66:	bd10      	pop	{r4, pc}
 8007d68:	0802b980 	.word	0x0802b980

08007d6c <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8007d6c:	f7fe be91 	b.w	8006a92 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08007d70 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8007d70:	2100      	movs	r1, #0
 8007d72:	223c      	movs	r2, #60	; 0x3c
 8007d74:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8007d78:	4770      	bx	lr
	...

08007d7c <_ZN5Model4tickEv>:

void Model::tick()
{
 8007d7c:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8007d7e:	4d0a      	ldr	r5, [pc, #40]	; (8007da8 <_ZN5Model4tickEv+0x2c>)
{
 8007d80:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8007d82:	6828      	ldr	r0, [r5, #0]
 8007d84:	f004 fb44 	bl	800c410 <osMessageQueueGetCount>
 8007d88:	b168      	cbz	r0, 8007da6 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8007d8a:	2300      	movs	r3, #0
 8007d8c:	6828      	ldr	r0, [r5, #0]
 8007d8e:	461a      	mov	r2, r3
 8007d90:	1d21      	adds	r1, r4, #4
 8007d92:	f004 fb09 	bl	800c3a8 <osMessageQueueGet>
 8007d96:	b930      	cbnz	r0, 8007da6 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8007d98:	6820      	ldr	r0, [r4, #0]
 8007d9a:	6861      	ldr	r1, [r4, #4]
 8007d9c:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8007d9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8007da2:	689b      	ldr	r3, [r3, #8]
 8007da4:	4718      	bx	r3
}
 8007da6:	bd70      	pop	{r4, r5, r6, pc}
 8007da8:	20002620 	.word	0x20002620

08007dac <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8007dac:	4770      	bx	lr

08007dae <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8007dae:	3804      	subs	r0, #4
 8007db0:	4770      	bx	lr

08007db2 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8007db2:	4770      	bx	lr

08007db4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007db4:	68c0      	ldr	r0, [r0, #12]
 8007db6:	6803      	ldr	r3, [r0, #0]
 8007db8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007dba:	4718      	bx	r3

08007dbc <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007dbc:	f1a0 0004 	sub.w	r0, r0, #4
 8007dc0:	f7ff bff8 	b.w	8007db4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08007dc4 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8007dc4:	b510      	push	{r4, lr}
 8007dc6:	2110      	movs	r1, #16
 8007dc8:	4604      	mov	r4, r0
 8007dca:	f01f f920 	bl	802700e <_ZdlPvj>
 8007dce:	4620      	mov	r0, r4
 8007dd0:	bd10      	pop	{r4, pc}

08007dd2 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8007dd2:	f1a0 0004 	sub.w	r0, r0, #4
 8007dd6:	e7f5      	b.n	8007dc4 <_ZN21Project_InfoPresenterD0Ev>

08007dd8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8007dd8:	b510      	push	{r4, lr}
 8007dda:	2200      	movs	r2, #0
 8007ddc:	6082      	str	r2, [r0, #8]
    : view(v)
 8007dde:	4a04      	ldr	r2, [pc, #16]	; (8007df0 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8007de0:	60c1      	str	r1, [r0, #12]
 8007de2:	f102 0408 	add.w	r4, r2, #8
 8007de6:	3224      	adds	r2, #36	; 0x24
 8007de8:	6004      	str	r4, [r0, #0]
 8007dea:	6042      	str	r2, [r0, #4]
}
 8007dec:	bd10      	pop	{r4, pc}
 8007dee:	bf00      	nop
 8007df0:	0802b9ac 	.word	0x0802b9ac

08007df4 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8007df4:	4770      	bx	lr
	...

08007df8 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8007df8:	b510      	push	{r4, lr}
 8007dfa:	4b03      	ldr	r3, [pc, #12]	; (8007e08 <_ZN16Project_InfoViewD1Ev+0x10>)
 8007dfc:	6003      	str	r3, [r0, #0]
 8007dfe:	4604      	mov	r4, r0
 8007e00:	f7ff f812 	bl	8006e28 <_ZN20Project_InfoViewBaseD1Ev>
 8007e04:	4620      	mov	r0, r4
 8007e06:	bd10      	pop	{r4, pc}
 8007e08:	0802b9e4 	.word	0x0802b9e4

08007e0c <_ZN16Project_InfoViewD0Ev>:
 8007e0c:	b510      	push	{r4, lr}
 8007e0e:	4604      	mov	r4, r0
 8007e10:	f7ff fff2 	bl	8007df8 <_ZN16Project_InfoViewD1Ev>
 8007e14:	4620      	mov	r0, r4
 8007e16:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007e1a:	f01f f8f8 	bl	802700e <_ZdlPvj>
 8007e1e:	4620      	mov	r0, r4
 8007e20:	bd10      	pop	{r4, pc}
	...

08007e24 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8007e24:	b510      	push	{r4, lr}
 8007e26:	4604      	mov	r4, r0
 8007e28:	f7ff f826 	bl	8006e78 <_ZN20Project_InfoViewBaseC1Ev>
 8007e2c:	4b01      	ldr	r3, [pc, #4]	; (8007e34 <_ZN16Project_InfoViewC1Ev+0x10>)
 8007e2e:	6023      	str	r3, [r4, #0]
}
 8007e30:	4620      	mov	r0, r4
 8007e32:	bd10      	pop	{r4, pc}
 8007e34:	0802b9e4 	.word	0x0802b9e4

08007e38 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8007e38:	f7fe bfd2 	b.w	8006de0 <_ZN20Project_InfoViewBase11setupScreenEv>

08007e3c <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8007e3c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007e3e:	4a0a      	ldr	r2, [pc, #40]	; (8007e68 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8007e40:	4605      	mov	r5, r0
 8007e42:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007e44:	460b      	mov	r3, r1
 8007e46:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8007e4a:	2104      	movs	r1, #4
 8007e4c:	f00f fce4 	bl	8017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007e50:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007e54:	f00d fc64 	bl	8015720 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8007e58:	b92c      	cbnz	r4, 8007e66 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8007e5a:	f00c fb79 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007e5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007e62:	f7fb bb47 	b.w	80034f4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007e66:	bd38      	pop	{r3, r4, r5, pc}
 8007e68:	0802b4f0 	.word	0x0802b4f0

08007e6c <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8007e6c:	4770      	bx	lr

08007e6e <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8007e6e:	3804      	subs	r0, #4
 8007e70:	4770      	bx	lr

08007e72 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8007e72:	4770      	bx	lr

08007e74 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8007e74:	4770      	bx	lr

08007e76 <_ZN21Shutting_OffPresenterD0Ev>:
 8007e76:	b510      	push	{r4, lr}
 8007e78:	2110      	movs	r1, #16
 8007e7a:	4604      	mov	r4, r0
 8007e7c:	f01f f8c7 	bl	802700e <_ZdlPvj>
 8007e80:	4620      	mov	r0, r4
 8007e82:	bd10      	pop	{r4, pc}

08007e84 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8007e84:	f1a0 0004 	sub.w	r0, r0, #4
 8007e88:	e7f5      	b.n	8007e76 <_ZN21Shutting_OffPresenterD0Ev>

08007e8a <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8007e8a:	4770      	bx	lr

08007e8c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8007e8c:	b510      	push	{r4, lr}
 8007e8e:	2200      	movs	r2, #0
 8007e90:	6082      	str	r2, [r0, #8]
    : view(v)
 8007e92:	4a04      	ldr	r2, [pc, #16]	; (8007ea4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8007e94:	60c1      	str	r1, [r0, #12]
 8007e96:	f102 0408 	add.w	r4, r2, #8
 8007e9a:	3224      	adds	r2, #36	; 0x24
 8007e9c:	6004      	str	r4, [r0, #0]
 8007e9e:	6042      	str	r2, [r0, #4]
}
 8007ea0:	bd10      	pop	{r4, pc}
 8007ea2:	bf00      	nop
 8007ea4:	0802ba14 	.word	0x0802ba14

08007ea8 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8007ea8:	4770      	bx	lr
	...

08007eac <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8007eac:	b510      	push	{r4, lr}
 8007eae:	4b03      	ldr	r3, [pc, #12]	; (8007ebc <_ZN16Shutting_OffViewD1Ev+0x10>)
 8007eb0:	6003      	str	r3, [r0, #0]
 8007eb2:	4604      	mov	r4, r0
 8007eb4:	f7ff f9b0 	bl	8007218 <_ZN20Shutting_OffViewBaseD1Ev>
 8007eb8:	4620      	mov	r0, r4
 8007eba:	bd10      	pop	{r4, pc}
 8007ebc:	0802ba4c 	.word	0x0802ba4c

08007ec0 <_ZN16Shutting_OffViewD0Ev>:
 8007ec0:	b510      	push	{r4, lr}
 8007ec2:	4604      	mov	r4, r0
 8007ec4:	f7ff fff2 	bl	8007eac <_ZN16Shutting_OffViewD1Ev>
 8007ec8:	4620      	mov	r0, r4
 8007eca:	2198      	movs	r1, #152	; 0x98
 8007ecc:	f01f f89f 	bl	802700e <_ZdlPvj>
 8007ed0:	4620      	mov	r0, r4
 8007ed2:	bd10      	pop	{r4, pc}

08007ed4 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8007ed4:	b510      	push	{r4, lr}
 8007ed6:	4604      	mov	r4, r0
 8007ed8:	f7ff f9a8 	bl	800722c <_ZN20Shutting_OffViewBaseC1Ev>
 8007edc:	4b01      	ldr	r3, [pc, #4]	; (8007ee4 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8007ede:	6023      	str	r3, [r4, #0]
}
 8007ee0:	4620      	mov	r0, r4
 8007ee2:	bd10      	pop	{r4, pc}
 8007ee4:	0802ba4c 	.word	0x0802ba4c

08007ee8 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8007ee8:	f7ff b997 	b.w	800721a <_ZN20Shutting_OffViewBase11setupScreenEv>

08007eec <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8007eec:	20f0      	movs	r0, #240	; 0xf0
 8007eee:	4770      	bx	lr

08007ef0 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8007ef0:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8007ef4:	4770      	bx	lr
 8007ef6:	bf00      	nop

08007ef8 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8007ef8:	2029      	movs	r0, #41	; 0x29
 8007efa:	f7f9 bdc3 	b.w	8001a84 <LCD_IO_WriteReg>
 8007efe:	bf00      	nop

08007f00 <ili9341_DisplayOff>:
 8007f00:	2028      	movs	r0, #40	; 0x28
 8007f02:	f7f9 bdbf 	b.w	8001a84 <LCD_IO_WriteReg>
 8007f06:	bf00      	nop

08007f08 <ili9341_Init>:
{
 8007f08:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8007f0a:	f7f9 fd81 	bl	8001a10 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8007f0e:	20ca      	movs	r0, #202	; 0xca
 8007f10:	f7f9 fdb8 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007f14:	20c3      	movs	r0, #195	; 0xc3
 8007f16:	f7f9 fd8b 	bl	8001a30 <LCD_IO_WriteData>
 8007f1a:	2008      	movs	r0, #8
 8007f1c:	f7f9 fd88 	bl	8001a30 <LCD_IO_WriteData>
 8007f20:	2050      	movs	r0, #80	; 0x50
 8007f22:	f7f9 fd85 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007f26:	20cf      	movs	r0, #207	; 0xcf
 8007f28:	f7f9 fdac 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007f2c:	2000      	movs	r0, #0
 8007f2e:	f7f9 fd7f 	bl	8001a30 <LCD_IO_WriteData>
 8007f32:	20c1      	movs	r0, #193	; 0xc1
 8007f34:	f7f9 fd7c 	bl	8001a30 <LCD_IO_WriteData>
 8007f38:	2030      	movs	r0, #48	; 0x30
 8007f3a:	f7f9 fd79 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007f3e:	20ed      	movs	r0, #237	; 0xed
 8007f40:	f7f9 fda0 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007f44:	2064      	movs	r0, #100	; 0x64
 8007f46:	f7f9 fd73 	bl	8001a30 <LCD_IO_WriteData>
 8007f4a:	2003      	movs	r0, #3
 8007f4c:	f7f9 fd70 	bl	8001a30 <LCD_IO_WriteData>
 8007f50:	2012      	movs	r0, #18
 8007f52:	f7f9 fd6d 	bl	8001a30 <LCD_IO_WriteData>
 8007f56:	2081      	movs	r0, #129	; 0x81
 8007f58:	f7f9 fd6a 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007f5c:	20e8      	movs	r0, #232	; 0xe8
 8007f5e:	f7f9 fd91 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007f62:	2085      	movs	r0, #133	; 0x85
 8007f64:	f7f9 fd64 	bl	8001a30 <LCD_IO_WriteData>
 8007f68:	2000      	movs	r0, #0
 8007f6a:	f7f9 fd61 	bl	8001a30 <LCD_IO_WriteData>
 8007f6e:	2078      	movs	r0, #120	; 0x78
 8007f70:	f7f9 fd5e 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007f74:	20cb      	movs	r0, #203	; 0xcb
 8007f76:	f7f9 fd85 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007f7a:	2039      	movs	r0, #57	; 0x39
 8007f7c:	f7f9 fd58 	bl	8001a30 <LCD_IO_WriteData>
 8007f80:	202c      	movs	r0, #44	; 0x2c
 8007f82:	f7f9 fd55 	bl	8001a30 <LCD_IO_WriteData>
 8007f86:	2000      	movs	r0, #0
 8007f88:	f7f9 fd52 	bl	8001a30 <LCD_IO_WriteData>
 8007f8c:	2034      	movs	r0, #52	; 0x34
 8007f8e:	f7f9 fd4f 	bl	8001a30 <LCD_IO_WriteData>
 8007f92:	2002      	movs	r0, #2
 8007f94:	f7f9 fd4c 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007f98:	20f7      	movs	r0, #247	; 0xf7
 8007f9a:	f7f9 fd73 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007f9e:	2020      	movs	r0, #32
 8007fa0:	f7f9 fd46 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007fa4:	20ea      	movs	r0, #234	; 0xea
 8007fa6:	f7f9 fd6d 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007faa:	2000      	movs	r0, #0
 8007fac:	f7f9 fd40 	bl	8001a30 <LCD_IO_WriteData>
 8007fb0:	2000      	movs	r0, #0
 8007fb2:	f7f9 fd3d 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007fb6:	20b1      	movs	r0, #177	; 0xb1
 8007fb8:	f7f9 fd64 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007fbc:	2000      	movs	r0, #0
 8007fbe:	f7f9 fd37 	bl	8001a30 <LCD_IO_WriteData>
 8007fc2:	201b      	movs	r0, #27
 8007fc4:	f7f9 fd34 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007fc8:	20b6      	movs	r0, #182	; 0xb6
 8007fca:	f7f9 fd5b 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007fce:	200a      	movs	r0, #10
 8007fd0:	f7f9 fd2e 	bl	8001a30 <LCD_IO_WriteData>
 8007fd4:	20a2      	movs	r0, #162	; 0xa2
 8007fd6:	f7f9 fd2b 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007fda:	20c0      	movs	r0, #192	; 0xc0
 8007fdc:	f7f9 fd52 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007fe0:	2010      	movs	r0, #16
 8007fe2:	f7f9 fd25 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007fe6:	20c1      	movs	r0, #193	; 0xc1
 8007fe8:	f7f9 fd4c 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007fec:	2010      	movs	r0, #16
 8007fee:	f7f9 fd1f 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007ff2:	20c5      	movs	r0, #197	; 0xc5
 8007ff4:	f7f9 fd46 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007ff8:	2045      	movs	r0, #69	; 0x45
 8007ffa:	f7f9 fd19 	bl	8001a30 <LCD_IO_WriteData>
 8007ffe:	2015      	movs	r0, #21
 8008000:	f7f9 fd16 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008004:	20c7      	movs	r0, #199	; 0xc7
 8008006:	f7f9 fd3d 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800800a:	2090      	movs	r0, #144	; 0x90
 800800c:	f7f9 fd10 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008010:	2036      	movs	r0, #54	; 0x36
 8008012:	f7f9 fd37 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008016:	20c8      	movs	r0, #200	; 0xc8
 8008018:	f7f9 fd0a 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800801c:	20f2      	movs	r0, #242	; 0xf2
 800801e:	f7f9 fd31 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008022:	2000      	movs	r0, #0
 8008024:	f7f9 fd04 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008028:	20b0      	movs	r0, #176	; 0xb0
 800802a:	f7f9 fd2b 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800802e:	20c2      	movs	r0, #194	; 0xc2
 8008030:	f7f9 fcfe 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008034:	20b6      	movs	r0, #182	; 0xb6
 8008036:	f7f9 fd25 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800803a:	200a      	movs	r0, #10
 800803c:	f7f9 fcf8 	bl	8001a30 <LCD_IO_WriteData>
 8008040:	20a7      	movs	r0, #167	; 0xa7
 8008042:	f7f9 fcf5 	bl	8001a30 <LCD_IO_WriteData>
 8008046:	2027      	movs	r0, #39	; 0x27
 8008048:	f7f9 fcf2 	bl	8001a30 <LCD_IO_WriteData>
 800804c:	2004      	movs	r0, #4
 800804e:	f7f9 fcef 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008052:	202a      	movs	r0, #42	; 0x2a
 8008054:	f7f9 fd16 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008058:	2000      	movs	r0, #0
 800805a:	f7f9 fce9 	bl	8001a30 <LCD_IO_WriteData>
 800805e:	2000      	movs	r0, #0
 8008060:	f7f9 fce6 	bl	8001a30 <LCD_IO_WriteData>
 8008064:	2000      	movs	r0, #0
 8008066:	f7f9 fce3 	bl	8001a30 <LCD_IO_WriteData>
 800806a:	20ef      	movs	r0, #239	; 0xef
 800806c:	f7f9 fce0 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008070:	202b      	movs	r0, #43	; 0x2b
 8008072:	f7f9 fd07 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008076:	2000      	movs	r0, #0
 8008078:	f7f9 fcda 	bl	8001a30 <LCD_IO_WriteData>
 800807c:	2000      	movs	r0, #0
 800807e:	f7f9 fcd7 	bl	8001a30 <LCD_IO_WriteData>
 8008082:	2001      	movs	r0, #1
 8008084:	f7f9 fcd4 	bl	8001a30 <LCD_IO_WriteData>
 8008088:	203f      	movs	r0, #63	; 0x3f
 800808a:	f7f9 fcd1 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800808e:	20f6      	movs	r0, #246	; 0xf6
 8008090:	f7f9 fcf8 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008094:	2001      	movs	r0, #1
 8008096:	f7f9 fccb 	bl	8001a30 <LCD_IO_WriteData>
 800809a:	2000      	movs	r0, #0
 800809c:	f7f9 fcc8 	bl	8001a30 <LCD_IO_WriteData>
 80080a0:	2006      	movs	r0, #6
 80080a2:	f7f9 fcc5 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80080a6:	202c      	movs	r0, #44	; 0x2c
 80080a8:	f7f9 fcec 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80080ac:	20c8      	movs	r0, #200	; 0xc8
 80080ae:	f7f9 fd51 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80080b2:	2026      	movs	r0, #38	; 0x26
 80080b4:	f7f9 fce6 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80080b8:	2001      	movs	r0, #1
 80080ba:	f7f9 fcb9 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80080be:	20e0      	movs	r0, #224	; 0xe0
 80080c0:	f7f9 fce0 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80080c4:	200f      	movs	r0, #15
 80080c6:	f7f9 fcb3 	bl	8001a30 <LCD_IO_WriteData>
 80080ca:	2029      	movs	r0, #41	; 0x29
 80080cc:	f7f9 fcb0 	bl	8001a30 <LCD_IO_WriteData>
 80080d0:	2024      	movs	r0, #36	; 0x24
 80080d2:	f7f9 fcad 	bl	8001a30 <LCD_IO_WriteData>
 80080d6:	200c      	movs	r0, #12
 80080d8:	f7f9 fcaa 	bl	8001a30 <LCD_IO_WriteData>
 80080dc:	200e      	movs	r0, #14
 80080de:	f7f9 fca7 	bl	8001a30 <LCD_IO_WriteData>
 80080e2:	2009      	movs	r0, #9
 80080e4:	f7f9 fca4 	bl	8001a30 <LCD_IO_WriteData>
 80080e8:	204e      	movs	r0, #78	; 0x4e
 80080ea:	f7f9 fca1 	bl	8001a30 <LCD_IO_WriteData>
 80080ee:	2078      	movs	r0, #120	; 0x78
 80080f0:	f7f9 fc9e 	bl	8001a30 <LCD_IO_WriteData>
 80080f4:	203c      	movs	r0, #60	; 0x3c
 80080f6:	f7f9 fc9b 	bl	8001a30 <LCD_IO_WriteData>
 80080fa:	2009      	movs	r0, #9
 80080fc:	f7f9 fc98 	bl	8001a30 <LCD_IO_WriteData>
 8008100:	2013      	movs	r0, #19
 8008102:	f7f9 fc95 	bl	8001a30 <LCD_IO_WriteData>
 8008106:	2005      	movs	r0, #5
 8008108:	f7f9 fc92 	bl	8001a30 <LCD_IO_WriteData>
 800810c:	2017      	movs	r0, #23
 800810e:	f7f9 fc8f 	bl	8001a30 <LCD_IO_WriteData>
 8008112:	2011      	movs	r0, #17
 8008114:	f7f9 fc8c 	bl	8001a30 <LCD_IO_WriteData>
 8008118:	2000      	movs	r0, #0
 800811a:	f7f9 fc89 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800811e:	20e1      	movs	r0, #225	; 0xe1
 8008120:	f7f9 fcb0 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008124:	2000      	movs	r0, #0
 8008126:	f7f9 fc83 	bl	8001a30 <LCD_IO_WriteData>
 800812a:	2016      	movs	r0, #22
 800812c:	f7f9 fc80 	bl	8001a30 <LCD_IO_WriteData>
 8008130:	201b      	movs	r0, #27
 8008132:	f7f9 fc7d 	bl	8001a30 <LCD_IO_WriteData>
 8008136:	2004      	movs	r0, #4
 8008138:	f7f9 fc7a 	bl	8001a30 <LCD_IO_WriteData>
 800813c:	2011      	movs	r0, #17
 800813e:	f7f9 fc77 	bl	8001a30 <LCD_IO_WriteData>
 8008142:	2007      	movs	r0, #7
 8008144:	f7f9 fc74 	bl	8001a30 <LCD_IO_WriteData>
 8008148:	2031      	movs	r0, #49	; 0x31
 800814a:	f7f9 fc71 	bl	8001a30 <LCD_IO_WriteData>
 800814e:	2033      	movs	r0, #51	; 0x33
 8008150:	f7f9 fc6e 	bl	8001a30 <LCD_IO_WriteData>
 8008154:	2042      	movs	r0, #66	; 0x42
 8008156:	f7f9 fc6b 	bl	8001a30 <LCD_IO_WriteData>
 800815a:	2005      	movs	r0, #5
 800815c:	f7f9 fc68 	bl	8001a30 <LCD_IO_WriteData>
 8008160:	200c      	movs	r0, #12
 8008162:	f7f9 fc65 	bl	8001a30 <LCD_IO_WriteData>
 8008166:	200a      	movs	r0, #10
 8008168:	f7f9 fc62 	bl	8001a30 <LCD_IO_WriteData>
 800816c:	2028      	movs	r0, #40	; 0x28
 800816e:	f7f9 fc5f 	bl	8001a30 <LCD_IO_WriteData>
 8008172:	202f      	movs	r0, #47	; 0x2f
 8008174:	f7f9 fc5c 	bl	8001a30 <LCD_IO_WriteData>
 8008178:	200f      	movs	r0, #15
 800817a:	f7f9 fc59 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800817e:	2011      	movs	r0, #17
 8008180:	f7f9 fc80 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008184:	20c8      	movs	r0, #200	; 0xc8
 8008186:	f7f9 fce5 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800818a:	2029      	movs	r0, #41	; 0x29
 800818c:	f7f9 fc7a 	bl	8001a84 <LCD_IO_WriteReg>
}
 8008190:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008194:	202c      	movs	r0, #44	; 0x2c
 8008196:	f7f9 bc75 	b.w	8001a84 <LCD_IO_WriteReg>
 800819a:	bf00      	nop

0800819c <ili9341_ReadID>:
{
 800819c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800819e:	f7f9 fc37 	bl	8001a10 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80081a2:	2103      	movs	r1, #3
 80081a4:	20d3      	movs	r0, #211	; 0xd3
 80081a6:	f7f9 fc97 	bl	8001ad8 <LCD_IO_ReadData>
}
 80081aa:	b280      	uxth	r0, r0
 80081ac:	bd08      	pop	{r3, pc}
 80081ae:	bf00      	nop

080081b0 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80081b0:	221f      	movs	r2, #31
 80081b2:	210b      	movs	r1, #11
 80081b4:	b2c0      	uxtb	r0, r0
 80081b6:	f7f9 bbdd 	b.w	8001974 <IOE_Write>
 80081ba:	bf00      	nop

080081bc <stmpe811_Reset>:
{
 80081bc:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80081be:	b2c4      	uxtb	r4, r0
 80081c0:	2202      	movs	r2, #2
 80081c2:	2103      	movs	r1, #3
 80081c4:	4620      	mov	r0, r4
 80081c6:	f7f9 fbd5 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 80081ca:	200a      	movs	r0, #10
 80081cc:	f7f9 fc1e 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80081d0:	4620      	mov	r0, r4
 80081d2:	2200      	movs	r2, #0
 80081d4:	2103      	movs	r1, #3
 80081d6:	f7f9 fbcd 	bl	8001974 <IOE_Write>
}
 80081da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80081de:	2002      	movs	r0, #2
 80081e0:	f7f9 bc14 	b.w	8001a0c <IOE_Delay>

080081e4 <stmpe811_ReadID>:
{
 80081e4:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80081e6:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 80081e8:	f7f9 fbc0 	bl	800196c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80081ec:	2100      	movs	r1, #0
 80081ee:	4620      	mov	r0, r4
 80081f0:	f7f9 fbd8 	bl	80019a4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80081f4:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80081f6:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80081f8:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80081fa:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80081fc:	f7f9 fbd2 	bl	80019a4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008200:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008204:	b280      	uxth	r0, r0
 8008206:	bd10      	pop	{r4, pc}

08008208 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008208:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800820a:	b2c4      	uxtb	r4, r0
 800820c:	2140      	movs	r1, #64	; 0x40
 800820e:	4620      	mov	r0, r4
 8008210:	f7f9 fbc8 	bl	80019a4 <IOE_Read>
  
  if(state > 0)
 8008214:	0603      	lsls	r3, r0, #24
 8008216:	d40b      	bmi.n	8008230 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008218:	4620      	mov	r0, r4
 800821a:	2201      	movs	r2, #1
 800821c:	214b      	movs	r1, #75	; 0x4b
 800821e:	f7f9 fba9 	bl	8001974 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008222:	4620      	mov	r0, r4
 8008224:	2200      	movs	r2, #0
 8008226:	214b      	movs	r1, #75	; 0x4b
 8008228:	f7f9 fba4 	bl	8001974 <IOE_Write>
  uint8_t ret = 0;
 800822c:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800822e:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008230:	214c      	movs	r1, #76	; 0x4c
 8008232:	4620      	mov	r0, r4
 8008234:	f7f9 fbb6 	bl	80019a4 <IOE_Read>
      ret = 1;
 8008238:	3800      	subs	r0, #0
 800823a:	bf18      	it	ne
 800823c:	2001      	movne	r0, #1
}
 800823e:	bd10      	pop	{r4, pc}

08008240 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008240:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008242:	210b      	movs	r1, #11
 8008244:	b2c0      	uxtb	r0, r0
 8008246:	f7f9 fbad 	bl	80019a4 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800824a:	f000 001f 	and.w	r0, r0, #31
 800824e:	bd08      	pop	{r3, pc}

08008250 <stmpe811_TS_GetXY>:
{
 8008250:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008252:	2304      	movs	r3, #4
{
 8008254:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008256:	b2c4      	uxtb	r4, r0
{
 8008258:	4615      	mov	r5, r2
 800825a:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800825c:	eb0d 0203 	add.w	r2, sp, r3
 8008260:	21d7      	movs	r1, #215	; 0xd7
 8008262:	4620      	mov	r0, r4
 8008264:	f7f9 fbba 	bl	80019dc <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008268:	9b01      	ldr	r3, [sp, #4]
 800826a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800826c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800826e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008272:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008274:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008276:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008278:	2201      	movs	r2, #1
 800827a:	214b      	movs	r1, #75	; 0x4b
 800827c:	f7f9 fb7a 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008280:	2200      	movs	r2, #0
 8008282:	214b      	movs	r1, #75	; 0x4b
 8008284:	4620      	mov	r0, r4
 8008286:	f7f9 fb75 	bl	8001974 <IOE_Write>
}
 800828a:	b002      	add	sp, #8
 800828c:	bd70      	pop	{r4, r5, r6, pc}
 800828e:	bf00      	nop

08008290 <stmpe811_TS_Start>:
{
 8008290:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008292:	b2c4      	uxtb	r4, r0
 8008294:	2104      	movs	r1, #4
 8008296:	4620      	mov	r0, r4
 8008298:	f7f9 fb84 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800829c:	2104      	movs	r1, #4
 800829e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80082a2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80082a4:	4620      	mov	r0, r4
 80082a6:	f7f9 fb65 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80082aa:	2117      	movs	r1, #23
 80082ac:	4620      	mov	r0, r4
 80082ae:	f7f9 fb79 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80082b2:	2117      	movs	r1, #23
 80082b4:	f000 020f 	and.w	r2, r0, #15
 80082b8:	4620      	mov	r0, r4
 80082ba:	f7f9 fb5b 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80082be:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80082c2:	4620      	mov	r0, r4
 80082c4:	2104      	movs	r1, #4
 80082c6:	f7f9 fb55 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80082ca:	2249      	movs	r2, #73	; 0x49
 80082cc:	2120      	movs	r1, #32
 80082ce:	4620      	mov	r0, r4
 80082d0:	f7f9 fb50 	bl	8001974 <IOE_Write>
  IOE_Delay(2); 
 80082d4:	2002      	movs	r0, #2
 80082d6:	f7f9 fb99 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80082da:	4620      	mov	r0, r4
 80082dc:	2201      	movs	r2, #1
 80082de:	2121      	movs	r1, #33	; 0x21
 80082e0:	f7f9 fb48 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80082e4:	4620      	mov	r0, r4
 80082e6:	229a      	movs	r2, #154	; 0x9a
 80082e8:	2141      	movs	r1, #65	; 0x41
 80082ea:	f7f9 fb43 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80082ee:	4620      	mov	r0, r4
 80082f0:	2201      	movs	r2, #1
 80082f2:	214a      	movs	r1, #74	; 0x4a
 80082f4:	f7f9 fb3e 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80082f8:	4620      	mov	r0, r4
 80082fa:	2201      	movs	r2, #1
 80082fc:	214b      	movs	r1, #75	; 0x4b
 80082fe:	f7f9 fb39 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008302:	4620      	mov	r0, r4
 8008304:	2200      	movs	r2, #0
 8008306:	214b      	movs	r1, #75	; 0x4b
 8008308:	f7f9 fb34 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800830c:	4620      	mov	r0, r4
 800830e:	2201      	movs	r2, #1
 8008310:	2156      	movs	r1, #86	; 0x56
 8008312:	f7f9 fb2f 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008316:	4620      	mov	r0, r4
 8008318:	2201      	movs	r2, #1
 800831a:	2158      	movs	r1, #88	; 0x58
 800831c:	f7f9 fb2a 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008320:	4620      	mov	r0, r4
 8008322:	2201      	movs	r2, #1
 8008324:	2140      	movs	r1, #64	; 0x40
 8008326:	f7f9 fb25 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800832a:	4620      	mov	r0, r4
 800832c:	22ff      	movs	r2, #255	; 0xff
 800832e:	210b      	movs	r1, #11
 8008330:	f7f9 fb20 	bl	8001974 <IOE_Write>
}
 8008334:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008338:	2002      	movs	r0, #2
 800833a:	f7f9 bb67 	b.w	8001a0c <IOE_Delay>
 800833e:	bf00      	nop

08008340 <stmpe811_TS_DisableIT>:
{
 8008340:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008342:	b2c4      	uxtb	r4, r0
 8008344:	2109      	movs	r1, #9
 8008346:	4620      	mov	r0, r4
 8008348:	f7f9 fb2c 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800834c:	2109      	movs	r1, #9
 800834e:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008352:	4620      	mov	r0, r4
 8008354:	f7f9 fb0e 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008358:	210a      	movs	r1, #10
 800835a:	4620      	mov	r0, r4
 800835c:	f7f9 fb22 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008360:	210a      	movs	r1, #10
 8008362:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008366:	4620      	mov	r0, r4
}
 8008368:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800836c:	f7f9 bb02 	b.w	8001974 <IOE_Write>

08008370 <stmpe811_TS_EnableIT>:
{
 8008370:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008372:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8008374:	f7f9 fafc 	bl	8001970 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008378:	210a      	movs	r1, #10
 800837a:	4620      	mov	r0, r4
 800837c:	f7f9 fb12 	bl	80019a4 <IOE_Read>
  tmp |= Source; 
 8008380:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008384:	b2c2      	uxtb	r2, r0
 8008386:	210a      	movs	r1, #10
 8008388:	4620      	mov	r0, r4
 800838a:	f7f9 faf3 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800838e:	2109      	movs	r1, #9
 8008390:	4620      	mov	r0, r4
 8008392:	f7f9 fb07 	bl	80019a4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008396:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800839a:	b2c2      	uxtb	r2, r0
 800839c:	2109      	movs	r1, #9
 800839e:	4620      	mov	r0, r4
}
 80083a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80083a4:	f7f9 bae6 	b.w	8001974 <IOE_Write>

080083a8 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80083a8:	4a10      	ldr	r2, [pc, #64]	; (80083ec <stmpe811_Init+0x44>)
 80083aa:	7813      	ldrb	r3, [r2, #0]
 80083ac:	4298      	cmp	r0, r3
 80083ae:	d004      	beq.n	80083ba <stmpe811_Init+0x12>
 80083b0:	7851      	ldrb	r1, [r2, #1]
 80083b2:	4288      	cmp	r0, r1
 80083b4:	d001      	beq.n	80083ba <stmpe811_Init+0x12>
 80083b6:	b113      	cbz	r3, 80083be <stmpe811_Init+0x16>
 80083b8:	b101      	cbz	r1, 80083bc <stmpe811_Init+0x14>
 80083ba:	4770      	bx	lr
 80083bc:	2301      	movs	r3, #1
{
 80083be:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 80083c0:	b2c4      	uxtb	r4, r0
 80083c2:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80083c4:	f7f9 fad2 	bl	800196c <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80083c8:	2202      	movs	r2, #2
 80083ca:	2103      	movs	r1, #3
 80083cc:	4620      	mov	r0, r4
 80083ce:	f7f9 fad1 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 80083d2:	200a      	movs	r0, #10
 80083d4:	f7f9 fb1a 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80083d8:	4620      	mov	r0, r4
 80083da:	2200      	movs	r2, #0
 80083dc:	2103      	movs	r1, #3
 80083de:	f7f9 fac9 	bl	8001974 <IOE_Write>
}
 80083e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80083e6:	2002      	movs	r0, #2
 80083e8:	f7f9 bb10 	b.w	8001a0c <IOE_Delay>
 80083ec:	200029bc 	.word	0x200029bc

080083f0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80083f0:	4b05      	ldr	r3, [pc, #20]	; (8008408 <SystemInit+0x18>)
 80083f2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80083f6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80083fa:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80083fe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008402:	6099      	str	r1, [r3, #8]
#endif
}
 8008404:	4770      	bx	lr
 8008406:	bf00      	nop
 8008408:	e000ed00 	.word	0xe000ed00

0800840c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800840c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800840e:	4b0b      	ldr	r3, [pc, #44]	; (800843c <HAL_Init+0x30>)
 8008410:	681a      	ldr	r2, [r3, #0]
 8008412:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008416:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008418:	681a      	ldr	r2, [r3, #0]
 800841a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800841e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008420:	681a      	ldr	r2, [r3, #0]
 8008422:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008426:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008428:	2003      	movs	r0, #3
 800842a:	f000 f82d 	bl	8008488 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800842e:	2000      	movs	r0, #0
 8008430:	f7f9 fe1e 	bl	8002070 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008434:	f7f9 fb9c 	bl	8001b70 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008438:	2000      	movs	r0, #0
 800843a:	bd08      	pop	{r3, pc}
 800843c:	40023c00 	.word	0x40023c00

08008440 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008440:	4a03      	ldr	r2, [pc, #12]	; (8008450 <HAL_IncTick+0x10>)
 8008442:	4b04      	ldr	r3, [pc, #16]	; (8008454 <HAL_IncTick+0x14>)
 8008444:	6811      	ldr	r1, [r2, #0]
 8008446:	781b      	ldrb	r3, [r3, #0]
 8008448:	440b      	add	r3, r1
 800844a:	6013      	str	r3, [r2, #0]
}
 800844c:	4770      	bx	lr
 800844e:	bf00      	nop
 8008450:	200029c0 	.word	0x200029c0
 8008454:	2000007c 	.word	0x2000007c

08008458 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008458:	4b01      	ldr	r3, [pc, #4]	; (8008460 <HAL_GetTick+0x8>)
 800845a:	6818      	ldr	r0, [r3, #0]
}
 800845c:	4770      	bx	lr
 800845e:	bf00      	nop
 8008460:	200029c0 	.word	0x200029c0

08008464 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008464:	b538      	push	{r3, r4, r5, lr}
 8008466:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008468:	f7ff fff6 	bl	8008458 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800846c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800846e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8008470:	d002      	beq.n	8008478 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8008472:	4b04      	ldr	r3, [pc, #16]	; (8008484 <HAL_Delay+0x20>)
 8008474:	781b      	ldrb	r3, [r3, #0]
 8008476:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008478:	f7ff ffee 	bl	8008458 <HAL_GetTick>
 800847c:	1b43      	subs	r3, r0, r5
 800847e:	42a3      	cmp	r3, r4
 8008480:	d3fa      	bcc.n	8008478 <HAL_Delay+0x14>
  {
  }
}
 8008482:	bd38      	pop	{r3, r4, r5, pc}
 8008484:	2000007c 	.word	0x2000007c

08008488 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8008488:	4907      	ldr	r1, [pc, #28]	; (80084a8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800848a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800848c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800848e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008492:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008496:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8008498:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800849a:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800849e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80084a2:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80084a4:	4770      	bx	lr
 80084a6:	bf00      	nop
 80084a8:	e000ed00 	.word	0xe000ed00

080084ac <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80084ac:	4b1c      	ldr	r3, [pc, #112]	; (8008520 <HAL_NVIC_SetPriority+0x74>)
 80084ae:	68db      	ldr	r3, [r3, #12]
 80084b0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80084b4:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80084b6:	f1c3 0e07 	rsb	lr, r3, #7
 80084ba:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80084be:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80084c2:	bf28      	it	cs
 80084c4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80084c8:	f1bc 0f06 	cmp.w	ip, #6
 80084cc:	d91b      	bls.n	8008506 <HAL_NVIC_SetPriority+0x5a>
 80084ce:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80084d0:	f04f 3cff 	mov.w	ip, #4294967295
 80084d4:	fa0c fc03 	lsl.w	ip, ip, r3
 80084d8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80084dc:	f04f 3cff 	mov.w	ip, #4294967295
 80084e0:	fa0c fc0e 	lsl.w	ip, ip, lr
 80084e4:	ea21 010c 	bic.w	r1, r1, ip
 80084e8:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 80084ea:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80084ec:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 80084f0:	db0c      	blt.n	800850c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80084f2:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80084f6:	0109      	lsls	r1, r1, #4
 80084f8:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 80084fc:	b2c9      	uxtb	r1, r1
 80084fe:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8008502:	f85d fb04 	ldr.w	pc, [sp], #4
 8008506:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008508:	4613      	mov	r3, r2
 800850a:	e7e7      	b.n	80084dc <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800850c:	4b05      	ldr	r3, [pc, #20]	; (8008524 <HAL_NVIC_SetPriority+0x78>)
 800850e:	f000 000f 	and.w	r0, r0, #15
 8008512:	0109      	lsls	r1, r1, #4
 8008514:	4403      	add	r3, r0
 8008516:	b2c9      	uxtb	r1, r1
 8008518:	7619      	strb	r1, [r3, #24]
 800851a:	f85d fb04 	ldr.w	pc, [sp], #4
 800851e:	bf00      	nop
 8008520:	e000ed00 	.word	0xe000ed00
 8008524:	e000ecfc 	.word	0xe000ecfc

08008528 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8008528:	2800      	cmp	r0, #0
 800852a:	db07      	blt.n	800853c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800852c:	0941      	lsrs	r1, r0, #5
 800852e:	4a04      	ldr	r2, [pc, #16]	; (8008540 <HAL_NVIC_EnableIRQ+0x18>)
 8008530:	f000 001f 	and.w	r0, r0, #31
 8008534:	2301      	movs	r3, #1
 8008536:	4083      	lsls	r3, r0
 8008538:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800853c:	4770      	bx	lr
 800853e:	bf00      	nop
 8008540:	e000e100 	.word	0xe000e100

08008544 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8008544:	b180      	cbz	r0, 8008568 <HAL_CRC_Init+0x24>
{
 8008546:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8008548:	7943      	ldrb	r3, [r0, #5]
 800854a:	4604      	mov	r4, r0
 800854c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008550:	b11b      	cbz	r3, 800855a <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8008552:	2301      	movs	r3, #1
 8008554:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8008556:	2000      	movs	r0, #0
}
 8008558:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800855a:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800855c:	f7f9 fb28 	bl	8001bb0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8008560:	2301      	movs	r3, #1
 8008562:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8008564:	2000      	movs	r0, #0
}
 8008566:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008568:	2001      	movs	r0, #1
}
 800856a:	4770      	bx	lr

0800856c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800856c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008570:	2b02      	cmp	r3, #2
 8008572:	d003      	beq.n	800857c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8008574:	2380      	movs	r3, #128	; 0x80
 8008576:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8008578:	2001      	movs	r0, #1
 800857a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800857c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800857e:	2305      	movs	r3, #5
 8008580:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8008584:	6813      	ldr	r3, [r2, #0]
 8008586:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800858a:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800858c:	6013      	str	r3, [r2, #0]
}
 800858e:	4770      	bx	lr

08008590 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8008590:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8008594:	4770      	bx	lr
 8008596:	bf00      	nop

08008598 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8008598:	b348      	cbz	r0, 80085ee <HAL_DMA2D_Init+0x56>
{
 800859a:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800859c:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80085a0:	4604      	mov	r4, r0
 80085a2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80085a6:	b1eb      	cbz	r3, 80085e4 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80085a8:	6822      	ldr	r2, [r4, #0]
 80085aa:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80085ac:	2302      	movs	r3, #2
 80085ae:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80085b2:	6813      	ldr	r3, [r2, #0]
 80085b4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80085b8:	430b      	orrs	r3, r1
 80085ba:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80085bc:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80085be:	68a1      	ldr	r1, [r4, #8]
 80085c0:	f023 0307 	bic.w	r3, r3, #7
 80085c4:	430b      	orrs	r3, r1
 80085c6:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80085c8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80085ca:	68e1      	ldr	r1, [r4, #12]
 80085cc:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80085d0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80085d4:	430b      	orrs	r3, r1
 80085d6:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80085d8:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80085da:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80085dc:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80085de:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80085e2:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 80085e4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 80085e8:	f7f9 fafc 	bl	8001be4 <HAL_DMA2D_MspInit>
 80085ec:	e7dc      	b.n	80085a8 <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 80085ee:	2001      	movs	r0, #1
}
 80085f0:	4770      	bx	lr
 80085f2:	bf00      	nop

080085f4 <HAL_DMA2D_LineEventCallback>:
 80085f4:	4770      	bx	lr
 80085f6:	bf00      	nop

080085f8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80085f8:	4770      	bx	lr
 80085fa:	bf00      	nop

080085fc <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80085fc:	6803      	ldr	r3, [r0, #0]
{
 80085fe:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008600:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8008602:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008604:	07ea      	lsls	r2, r5, #31
{
 8008606:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008608:	d501      	bpl.n	800860e <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800860a:	05f1      	lsls	r1, r6, #23
 800860c:	d457      	bmi.n	80086be <HAL_DMA2D_IRQHandler+0xc2>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800860e:	06aa      	lsls	r2, r5, #26
 8008610:	d501      	bpl.n	8008616 <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8008612:	04b3      	lsls	r3, r6, #18
 8008614:	d43c      	bmi.n	8008690 <HAL_DMA2D_IRQHandler+0x94>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8008616:	0728      	lsls	r0, r5, #28
 8008618:	d501      	bpl.n	800861e <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800861a:	0531      	lsls	r1, r6, #20
 800861c:	d421      	bmi.n	8008662 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800861e:	076a      	lsls	r2, r5, #29
 8008620:	d501      	bpl.n	8008626 <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8008622:	0573      	lsls	r3, r6, #21
 8008624:	d473      	bmi.n	800870e <HAL_DMA2D_IRQHandler+0x112>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8008626:	07a8      	lsls	r0, r5, #30
 8008628:	d501      	bpl.n	800862e <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800862a:	05b1      	lsls	r1, r6, #22
 800862c:	d404      	bmi.n	8008638 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800862e:	06ea      	lsls	r2, r5, #27
 8008630:	d501      	bpl.n	8008636 <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8008632:	04f3      	lsls	r3, r6, #19
 8008634:	d458      	bmi.n	80086e8 <HAL_DMA2D_IRQHandler+0xec>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8008636:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8008638:	6823      	ldr	r3, [r4, #0]
 800863a:	681a      	ldr	r2, [r3, #0]
 800863c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8008640:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8008642:	2202      	movs	r2, #2
 8008644:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8008646:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8008648:	63e2      	str	r2, [r4, #60]	; 0x3c
      if (hdma2d->XferCpltCallback != NULL)
 800864a:	6923      	ldr	r3, [r4, #16]
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800864c:	2201      	movs	r2, #1
 800864e:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008652:	2200      	movs	r2, #0
 8008654:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8008658:	2b00      	cmp	r3, #0
 800865a:	d0e8      	beq.n	800862e <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
 800865c:	4620      	mov	r0, r4
 800865e:	4798      	blx	r3
 8008660:	e7e5      	b.n	800862e <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8008662:	6823      	ldr	r3, [r4, #0]
 8008664:	681a      	ldr	r2, [r3, #0]
 8008666:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800866a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800866c:	2208      	movs	r2, #8
 800866e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8008670:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8008672:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8008674:	f043 0304 	orr.w	r3, r3, #4
 8008678:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800867a:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 800867c:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800867e:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008682:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8008686:	2a00      	cmp	r2, #0
 8008688:	d0c9      	beq.n	800861e <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
 800868a:	4620      	mov	r0, r4
 800868c:	4790      	blx	r2
 800868e:	e7c6      	b.n	800861e <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8008690:	6823      	ldr	r3, [r4, #0]
 8008692:	681a      	ldr	r2, [r3, #0]
 8008694:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008698:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800869a:	2220      	movs	r2, #32
 800869c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800869e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 80086a0:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80086a2:	f043 0302 	orr.w	r3, r3, #2
 80086a6:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80086a8:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 80086aa:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80086ac:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80086b0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80086b4:	2a00      	cmp	r2, #0
 80086b6:	d0ae      	beq.n	8008616 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
 80086b8:	4620      	mov	r0, r4
 80086ba:	4790      	blx	r2
 80086bc:	e7ab      	b.n	8008616 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80086be:	681a      	ldr	r2, [r3, #0]
 80086c0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80086c4:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80086c6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80086c8:	2101      	movs	r1, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80086ca:	f042 0201 	orr.w	r2, r2, #1
 80086ce:	63c2      	str	r2, [r0, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 80086d0:	6942      	ldr	r2, [r0, #20]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80086d2:	6099      	str	r1, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80086d4:	2304      	movs	r3, #4
 80086d6:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80086da:	2300      	movs	r3, #0
 80086dc:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80086e0:	2a00      	cmp	r2, #0
 80086e2:	d094      	beq.n	800860e <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
 80086e4:	4790      	blx	r2
 80086e6:	e792      	b.n	800860e <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80086e8:	6823      	ldr	r3, [r4, #0]
 80086ea:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80086ec:	2010      	movs	r0, #16
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80086ee:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80086f2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80086f4:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80086f6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80086f8:	63e2      	str	r2, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80086fa:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
 80086fc:	2300      	movs	r3, #0
 80086fe:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8008702:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8008706:	4620      	mov	r0, r4
 8008708:	f7ff ff76 	bl	80085f8 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800870c:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800870e:	6823      	ldr	r3, [r4, #0]
 8008710:	681a      	ldr	r2, [r3, #0]
 8008712:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008716:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8008718:	2204      	movs	r2, #4
 800871a:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800871c:	4620      	mov	r0, r4
 800871e:	f7ff ff69 	bl	80085f4 <HAL_DMA2D_LineEventCallback>
 8008722:	e780      	b.n	8008626 <HAL_DMA2D_IRQHandler+0x2a>

08008724 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8008724:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8008728:	2b01      	cmp	r3, #1
 800872a:	d04d      	beq.n	80087c8 <HAL_DMA2D_ConfigLayer+0xa4>
 800872c:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800872e:	2302      	movs	r3, #2
{
 8008730:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8008732:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 8008736:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800873a:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800873e:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8008742:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008746:	3a09      	subs	r2, #9
 8008748:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800874a:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800874e:	d91d      	bls.n	800878c <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8008750:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8008754:	b189      	cbz	r1, 800877a <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008756:	6801      	ldr	r1, [r0, #0]
 8008758:	4a1c      	ldr	r2, [pc, #112]	; (80087cc <HAL_DMA2D_ConfigLayer+0xa8>)
 800875a:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800875c:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008760:	402a      	ands	r2, r5
 8008762:	431a      	orrs	r2, r3
 8008764:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008766:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8008768:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800876a:	2201      	movs	r2, #1
 800876c:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8008770:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 8008774:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 8008776:	4618      	mov	r0, r3
}
 8008778:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800877a:	6801      	ldr	r1, [r0, #0]
 800877c:	4a13      	ldr	r2, [pc, #76]	; (80087cc <HAL_DMA2D_ConfigLayer+0xa8>)
 800877e:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8008780:	4022      	ands	r2, r4
 8008782:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008784:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008786:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008788:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800878a:	e7ed      	b.n	8008768 <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800878c:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 8008790:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8008792:	b961      	cbnz	r1, 80087ae <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008794:	6801      	ldr	r1, [r0, #0]
 8008796:	4a0d      	ldr	r2, [pc, #52]	; (80087cc <HAL_DMA2D_ConfigLayer+0xa8>)
 8008798:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800879a:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800879c:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800879e:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80087a0:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80087a2:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80087a6:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80087a8:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80087aa:	628c      	str	r4, [r1, #40]	; 0x28
 80087ac:	e7dc      	b.n	8008768 <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80087ae:	6804      	ldr	r4, [r0, #0]
 80087b0:	4906      	ldr	r1, [pc, #24]	; (80087cc <HAL_DMA2D_ConfigLayer+0xa8>)
 80087b2:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80087b4:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80087b8:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80087ba:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80087be:	4319      	orrs	r1, r3
 80087c0:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80087c2:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80087c4:	6222      	str	r2, [r4, #32]
 80087c6:	e7cf      	b.n	8008768 <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 80087c8:	2002      	movs	r0, #2
}
 80087ca:	4770      	bx	lr
 80087cc:	00fcfff0 	.word	0x00fcfff0

080087d0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80087d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80087d4:	2200      	movs	r2, #0
 80087d6:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80087d8:	f8df a260 	ldr.w	sl, [pc, #608]	; 8008a3c <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80087dc:	4e90      	ldr	r6, [pc, #576]	; (8008a20 <HAL_GPIO_Init+0x250>)
{
 80087de:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 80087e0:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80087e2:	4689      	mov	r9, r1
 80087e4:	e005      	b.n	80087f2 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80087e6:	3301      	adds	r3, #1
 80087e8:	2b10      	cmp	r3, #16
 80087ea:	f102 0202 	add.w	r2, r2, #2
 80087ee:	f000 8095 	beq.w	800891c <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 80087f2:	2101      	movs	r1, #1
 80087f4:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80087f6:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 80087fa:	43a1      	bics	r1, r4
 80087fc:	d1f3      	bne.n	80087e6 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80087fe:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8008802:	f00c 0103 	and.w	r1, ip, #3
 8008806:	1e4d      	subs	r5, r1, #1
 8008808:	2d01      	cmp	r5, #1
 800880a:	f240 808a 	bls.w	8008922 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800880e:	2903      	cmp	r1, #3
 8008810:	f040 80ca 	bne.w	80089a8 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008814:	4091      	lsls	r1, r2
 8008816:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8008818:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800881a:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800881c:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800881e:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8008822:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8008824:	d0df      	beq.n	80087e6 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008826:	2100      	movs	r1, #0
 8008828:	9103      	str	r1, [sp, #12]
 800882a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800882e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8008832:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8008836:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800883a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800883e:	9103      	str	r1, [sp, #12]
 8008840:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8008842:	f023 0103 	bic.w	r1, r3, #3
 8008846:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800884a:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800884e:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8008852:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008854:	00bf      	lsls	r7, r7, #2
 8008856:	f04f 0e0f 	mov.w	lr, #15
 800885a:	fa0e fe07 	lsl.w	lr, lr, r7
 800885e:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008862:	4d70      	ldr	r5, [pc, #448]	; (8008a24 <HAL_GPIO_Init+0x254>)
 8008864:	42a8      	cmp	r0, r5
 8008866:	d02e      	beq.n	80088c6 <HAL_GPIO_Init+0xf6>
 8008868:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800886c:	42a8      	cmp	r0, r5
 800886e:	f000 809f 	beq.w	80089b0 <HAL_GPIO_Init+0x1e0>
 8008872:	4d6d      	ldr	r5, [pc, #436]	; (8008a28 <HAL_GPIO_Init+0x258>)
 8008874:	42a8      	cmp	r0, r5
 8008876:	f000 80a2 	beq.w	80089be <HAL_GPIO_Init+0x1ee>
 800887a:	4d6c      	ldr	r5, [pc, #432]	; (8008a2c <HAL_GPIO_Init+0x25c>)
 800887c:	42a8      	cmp	r0, r5
 800887e:	f000 80a5 	beq.w	80089cc <HAL_GPIO_Init+0x1fc>
 8008882:	4d6b      	ldr	r5, [pc, #428]	; (8008a30 <HAL_GPIO_Init+0x260>)
 8008884:	42a8      	cmp	r0, r5
 8008886:	f000 80a8 	beq.w	80089da <HAL_GPIO_Init+0x20a>
 800888a:	4d6a      	ldr	r5, [pc, #424]	; (8008a34 <HAL_GPIO_Init+0x264>)
 800888c:	42a8      	cmp	r0, r5
 800888e:	f000 80b2 	beq.w	80089f6 <HAL_GPIO_Init+0x226>
 8008892:	4d69      	ldr	r5, [pc, #420]	; (8008a38 <HAL_GPIO_Init+0x268>)
 8008894:	42a8      	cmp	r0, r5
 8008896:	f000 80b5 	beq.w	8008a04 <HAL_GPIO_Init+0x234>
 800889a:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8008a40 <HAL_GPIO_Init+0x270>
 800889e:	4570      	cmp	r0, lr
 80088a0:	f000 80a2 	beq.w	80089e8 <HAL_GPIO_Init+0x218>
 80088a4:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8008a44 <HAL_GPIO_Init+0x274>
 80088a8:	4570      	cmp	r0, lr
 80088aa:	f000 80b2 	beq.w	8008a12 <HAL_GPIO_Init+0x242>
 80088ae:	f8df e198 	ldr.w	lr, [pc, #408]	; 8008a48 <HAL_GPIO_Init+0x278>
 80088b2:	4570      	cmp	r0, lr
 80088b4:	bf0c      	ite	eq
 80088b6:	f04f 0e09 	moveq.w	lr, #9
 80088ba:	f04f 0e0a 	movne.w	lr, #10
 80088be:	fa0e f707 	lsl.w	r7, lr, r7
 80088c2:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80088c6:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 80088ca:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80088cc:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80088d0:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80088d4:	bf0c      	ite	eq
 80088d6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80088d8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 80088dc:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 80088de:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80088e0:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 80088e4:	bf0c      	ite	eq
 80088e6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80088e8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 80088ec:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 80088ee:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80088f0:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80088f4:	bf0c      	ite	eq
 80088f6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80088f8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 80088fc:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80088fe:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8008900:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008904:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8008908:	bf0c      	ite	eq
 800890a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800890c:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008910:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8008912:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008914:	f102 0202 	add.w	r2, r2, #2
 8008918:	f47f af6b 	bne.w	80087f2 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800891c:	b005      	add	sp, #20
 800891e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008922:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8008926:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800892a:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800892e:	2503      	movs	r5, #3
 8008930:	fa05 f802 	lsl.w	r8, r5, r2
 8008934:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008938:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800893c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800893e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8008940:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8008944:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8008948:	409f      	lsls	r7, r3
 800894a:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800894e:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8008952:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8008954:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8008956:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800895a:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800895e:	4097      	lsls	r7, r2
 8008960:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008964:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8008966:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008968:	fa01 f102 	lsl.w	r1, r1, r2
 800896c:	f47f af54 	bne.w	8008818 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8008970:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8008974:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008978:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800897c:	f8de 7020 	ldr.w	r7, [lr, #32]
 8008980:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008982:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008986:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800898a:	fa07 f708 	lsl.w	r7, r7, r8
 800898e:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008990:	270f      	movs	r7, #15
 8008992:	fa07 f808 	lsl.w	r8, r7, r8
 8008996:	9f00      	ldr	r7, [sp, #0]
 8008998:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800899c:	9f01      	ldr	r7, [sp, #4]
 800899e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80089a2:	f8ce 7020 	str.w	r7, [lr, #32]
 80089a6:	e737      	b.n	8008818 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80089a8:	2503      	movs	r5, #3
 80089aa:	4095      	lsls	r5, r2
 80089ac:	43ed      	mvns	r5, r5
 80089ae:	e7d1      	b.n	8008954 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80089b0:	f04f 0e01 	mov.w	lr, #1
 80089b4:	fa0e f707 	lsl.w	r7, lr, r7
 80089b8:	ea48 0807 	orr.w	r8, r8, r7
 80089bc:	e783      	b.n	80088c6 <HAL_GPIO_Init+0xf6>
 80089be:	f04f 0e02 	mov.w	lr, #2
 80089c2:	fa0e f707 	lsl.w	r7, lr, r7
 80089c6:	ea48 0807 	orr.w	r8, r8, r7
 80089ca:	e77c      	b.n	80088c6 <HAL_GPIO_Init+0xf6>
 80089cc:	f04f 0e03 	mov.w	lr, #3
 80089d0:	fa0e f707 	lsl.w	r7, lr, r7
 80089d4:	ea48 0807 	orr.w	r8, r8, r7
 80089d8:	e775      	b.n	80088c6 <HAL_GPIO_Init+0xf6>
 80089da:	f04f 0e04 	mov.w	lr, #4
 80089de:	fa0e f707 	lsl.w	r7, lr, r7
 80089e2:	ea48 0807 	orr.w	r8, r8, r7
 80089e6:	e76e      	b.n	80088c6 <HAL_GPIO_Init+0xf6>
 80089e8:	f04f 0e07 	mov.w	lr, #7
 80089ec:	fa0e f707 	lsl.w	r7, lr, r7
 80089f0:	ea48 0807 	orr.w	r8, r8, r7
 80089f4:	e767      	b.n	80088c6 <HAL_GPIO_Init+0xf6>
 80089f6:	f04f 0e05 	mov.w	lr, #5
 80089fa:	fa0e f707 	lsl.w	r7, lr, r7
 80089fe:	ea48 0807 	orr.w	r8, r8, r7
 8008a02:	e760      	b.n	80088c6 <HAL_GPIO_Init+0xf6>
 8008a04:	f04f 0e06 	mov.w	lr, #6
 8008a08:	fa0e f707 	lsl.w	r7, lr, r7
 8008a0c:	ea48 0807 	orr.w	r8, r8, r7
 8008a10:	e759      	b.n	80088c6 <HAL_GPIO_Init+0xf6>
 8008a12:	f04f 0e08 	mov.w	lr, #8
 8008a16:	fa0e f707 	lsl.w	r7, lr, r7
 8008a1a:	ea48 0807 	orr.w	r8, r8, r7
 8008a1e:	e752      	b.n	80088c6 <HAL_GPIO_Init+0xf6>
 8008a20:	40013c00 	.word	0x40013c00
 8008a24:	40020000 	.word	0x40020000
 8008a28:	40020800 	.word	0x40020800
 8008a2c:	40020c00 	.word	0x40020c00
 8008a30:	40021000 	.word	0x40021000
 8008a34:	40021400 	.word	0x40021400
 8008a38:	40021800 	.word	0x40021800
 8008a3c:	40023800 	.word	0x40023800
 8008a40:	40021c00 	.word	0x40021c00
 8008a44:	40022000 	.word	0x40022000
 8008a48:	40022400 	.word	0x40022400

08008a4c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8008a4c:	6903      	ldr	r3, [r0, #16]
 8008a4e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8008a50:	bf14      	ite	ne
 8008a52:	2001      	movne	r0, #1
 8008a54:	2000      	moveq	r0, #0
 8008a56:	4770      	bx	lr

08008a58 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8008a58:	b902      	cbnz	r2, 8008a5c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8008a5a:	0409      	lsls	r1, r1, #16
 8008a5c:	6181      	str	r1, [r0, #24]
  }
}
 8008a5e:	4770      	bx	lr

08008a60 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8008a60:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8008a62:	ea01 0203 	and.w	r2, r1, r3
 8008a66:	ea21 0103 	bic.w	r1, r1, r3
 8008a6a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8008a6e:	6181      	str	r1, [r0, #24]
}
 8008a70:	4770      	bx	lr
 8008a72:	bf00      	nop

08008a74 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8008a74:	4770      	bx	lr
 8008a76:	bf00      	nop

08008a78 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8008a78:	4a04      	ldr	r2, [pc, #16]	; (8008a8c <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8008a7a:	6951      	ldr	r1, [r2, #20]
 8008a7c:	4201      	tst	r1, r0
 8008a7e:	d100      	bne.n	8008a82 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8008a80:	4770      	bx	lr
{
 8008a82:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8008a84:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8008a86:	f7ff fff5 	bl	8008a74 <HAL_GPIO_EXTI_Callback>
}
 8008a8a:	bd08      	pop	{r3, pc}
 8008a8c:	40013c00 	.word	0x40013c00

08008a90 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8008a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008a94:	6804      	ldr	r4, [r0, #0]
{
 8008a96:	b083      	sub	sp, #12
 8008a98:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008a9a:	6823      	ldr	r3, [r4, #0]
{
 8008a9c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8008aa0:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008aa4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8008aa8:	4606      	mov	r6, r0
 8008aaa:	468a      	mov	sl, r1
 8008aac:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008aae:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8008ab0:	f1b9 3fff 	cmp.w	r9, #4294967295
 8008ab4:	d136      	bne.n	8008b24 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008ab6:	6965      	ldr	r5, [r4, #20]
 8008ab8:	07e8      	lsls	r0, r5, #31
 8008aba:	d5fc      	bpl.n	8008ab6 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8008abc:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8008ac0:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8008ac2:	f1b9 3fff 	cmp.w	r9, #4294967295
 8008ac6:	d003      	beq.n	8008ad0 <I2C_RequestMemoryWrite+0x40>
 8008ac8:	e04f      	b.n	8008b6a <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008aca:	6961      	ldr	r1, [r4, #20]
 8008acc:	054d      	lsls	r5, r1, #21
 8008ace:	d45d      	bmi.n	8008b8c <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008ad0:	6961      	ldr	r1, [r4, #20]
 8008ad2:	078b      	lsls	r3, r1, #30
 8008ad4:	d5f9      	bpl.n	8008aca <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008ad6:	2300      	movs	r3, #0
 8008ad8:	9301      	str	r3, [sp, #4]
 8008ada:	6963      	ldr	r3, [r4, #20]
 8008adc:	9301      	str	r3, [sp, #4]
 8008ade:	69a3      	ldr	r3, [r4, #24]
 8008ae0:	9301      	str	r3, [sp, #4]
 8008ae2:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008ae4:	f1b9 3fff 	cmp.w	r9, #4294967295
 8008ae8:	f040 8088 	bne.w	8008bfc <I2C_RequestMemoryWrite+0x16c>
 8008aec:	6963      	ldr	r3, [r4, #20]
 8008aee:	061a      	lsls	r2, r3, #24
 8008af0:	d464      	bmi.n	8008bbc <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008af2:	6963      	ldr	r3, [r4, #20]
 8008af4:	055b      	lsls	r3, r3, #21
 8008af6:	d5f9      	bpl.n	8008aec <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8008af8:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008afa:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8008afe:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008b00:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8008b02:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8008b04:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008b08:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008b0c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8008b0e:	f043 0304 	orr.w	r3, r3, #4
 8008b12:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008b14:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8008b16:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008b18:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8008b1a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008b1e:	d066      	beq.n	8008bee <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8008b20:	2001      	movs	r0, #1
 8008b22:	e01f      	b.n	8008b64 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008b24:	6963      	ldr	r3, [r4, #20]
 8008b26:	07d9      	lsls	r1, r3, #31
 8008b28:	d4c8      	bmi.n	8008abc <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008b2a:	f7ff fc95 	bl	8008458 <HAL_GetTick>
 8008b2e:	eba0 000b 	sub.w	r0, r0, fp
 8008b32:	4581      	cmp	r9, r0
 8008b34:	d304      	bcc.n	8008b40 <I2C_RequestMemoryWrite+0xb0>
 8008b36:	f1b9 0f00 	cmp.w	r9, #0
 8008b3a:	d001      	beq.n	8008b40 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008b3c:	6834      	ldr	r4, [r6, #0]
 8008b3e:	e7b7      	b.n	8008ab0 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008b40:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008b42:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008b44:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008b46:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008b4a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008b4e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008b50:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8008b52:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008b56:	f042 0220 	orr.w	r2, r2, #32
 8008b5a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008b5c:	680b      	ldr	r3, [r1, #0]
 8008b5e:	05dc      	lsls	r4, r3, #23
 8008b60:	d435      	bmi.n	8008bce <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8008b62:	2003      	movs	r0, #3
}
 8008b64:	b003      	add	sp, #12
 8008b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008b6a:	6963      	ldr	r3, [r4, #20]
 8008b6c:	0798      	lsls	r0, r3, #30
 8008b6e:	d4b2      	bmi.n	8008ad6 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008b70:	6963      	ldr	r3, [r4, #20]
 8008b72:	055a      	lsls	r2, r3, #21
 8008b74:	d40a      	bmi.n	8008b8c <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008b76:	f7ff fc6f 	bl	8008458 <HAL_GetTick>
 8008b7a:	eba0 000b 	sub.w	r0, r0, fp
 8008b7e:	4581      	cmp	r9, r0
 8008b80:	d34e      	bcc.n	8008c20 <I2C_RequestMemoryWrite+0x190>
 8008b82:	f1b9 0f00 	cmp.w	r9, #0
 8008b86:	d04b      	beq.n	8008c20 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008b88:	6834      	ldr	r4, [r6, #0]
 8008b8a:	e79a      	b.n	8008ac2 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008b8c:	6823      	ldr	r3, [r4, #0]
 8008b8e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008b92:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008b94:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008b96:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8008b9a:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008b9c:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008b9e:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008ba0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008ba4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008ba8:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8008baa:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008bae:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8008bb2:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008bb4:	6433      	str	r3, [r6, #64]	; 0x40
}
 8008bb6:	b003      	add	sp, #12
 8008bb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008bbc:	f1b8 0f01 	cmp.w	r8, #1
 8008bc0:	d109      	bne.n	8008bd6 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008bc2:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8008bc4:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008bc6:	6127      	str	r7, [r4, #16]
}
 8008bc8:	b003      	add	sp, #12
 8008bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8008bce:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008bd2:	6433      	str	r3, [r6, #64]	; 0x40
 8008bd4:	e7c5      	b.n	8008b62 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8008bd6:	0a3b      	lsrs	r3, r7, #8
 8008bd8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008bda:	f1b9 3fff 	cmp.w	r9, #4294967295
 8008bde:	d12e      	bne.n	8008c3e <I2C_RequestMemoryWrite+0x1ae>
 8008be0:	6963      	ldr	r3, [r4, #20]
 8008be2:	0619      	lsls	r1, r3, #24
 8008be4:	d4ed      	bmi.n	8008bc2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008be6:	6963      	ldr	r3, [r4, #20]
 8008be8:	055a      	lsls	r2, r3, #21
 8008bea:	d5f9      	bpl.n	8008be0 <I2C_RequestMemoryWrite+0x150>
 8008bec:	e784      	b.n	8008af8 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008bee:	6832      	ldr	r2, [r6, #0]
 8008bf0:	6813      	ldr	r3, [r2, #0]
 8008bf2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8008bf6:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008bf8:	6013      	str	r3, [r2, #0]
 8008bfa:	e7b3      	b.n	8008b64 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008bfc:	6963      	ldr	r3, [r4, #20]
 8008bfe:	061d      	lsls	r5, r3, #24
 8008c00:	d4dc      	bmi.n	8008bbc <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008c02:	6963      	ldr	r3, [r4, #20]
 8008c04:	0559      	lsls	r1, r3, #21
 8008c06:	f53f af77 	bmi.w	8008af8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008c0a:	f7ff fc25 	bl	8008458 <HAL_GetTick>
 8008c0e:	eba0 000b 	sub.w	r0, r0, fp
 8008c12:	4581      	cmp	r9, r0
 8008c14:	d325      	bcc.n	8008c62 <I2C_RequestMemoryWrite+0x1d2>
 8008c16:	f1b9 0f00 	cmp.w	r9, #0
 8008c1a:	d022      	beq.n	8008c62 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008c1c:	6834      	ldr	r4, [r6, #0]
 8008c1e:	e761      	b.n	8008ae4 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008c20:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8008c22:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008c24:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8008c26:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008c2a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008c2e:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008c30:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008c34:	f043 0320 	orr.w	r3, r3, #32
 8008c38:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 8008c3a:	2001      	movs	r0, #1
 8008c3c:	e792      	b.n	8008b64 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008c3e:	6963      	ldr	r3, [r4, #20]
 8008c40:	061b      	lsls	r3, r3, #24
 8008c42:	d4be      	bmi.n	8008bc2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008c44:	6963      	ldr	r3, [r4, #20]
 8008c46:	0558      	lsls	r0, r3, #21
 8008c48:	f53f af56 	bmi.w	8008af8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008c4c:	f7ff fc04 	bl	8008458 <HAL_GetTick>
 8008c50:	eba0 000b 	sub.w	r0, r0, fp
 8008c54:	4581      	cmp	r9, r0
 8008c56:	d304      	bcc.n	8008c62 <I2C_RequestMemoryWrite+0x1d2>
 8008c58:	f1b9 0f00 	cmp.w	r9, #0
 8008c5c:	d001      	beq.n	8008c62 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008c5e:	6834      	ldr	r4, [r6, #0]
 8008c60:	e7bb      	b.n	8008bda <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008c62:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008c64:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008c66:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008c68:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008c6c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008c70:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8008c72:	4313      	orrs	r3, r2
 8008c74:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8008c76:	e74d      	b.n	8008b14 <I2C_RequestMemoryWrite+0x84>

08008c78 <I2C_RequestMemoryRead>:
{
 8008c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008c7c:	6804      	ldr	r4, [r0, #0]
{
 8008c7e:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008c80:	6823      	ldr	r3, [r4, #0]
 8008c82:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8008c86:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008c88:	6823      	ldr	r3, [r4, #0]
{
 8008c8a:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008c8c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8008c90:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8008c94:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008c98:	6023      	str	r3, [r4, #0]
{
 8008c9a:	4606      	mov	r6, r0
 8008c9c:	468b      	mov	fp, r1
 8008c9e:	4617      	mov	r7, r2
 8008ca0:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008ca4:	d13a      	bne.n	8008d1c <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008ca6:	6965      	ldr	r5, [r4, #20]
 8008ca8:	07eb      	lsls	r3, r5, #31
 8008caa:	d5fc      	bpl.n	8008ca6 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8008cac:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8008cb0:	6123      	str	r3, [r4, #16]
 8008cb2:	fa5f fb8b 	uxtb.w	fp, fp
 8008cb6:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008cba:	d003      	beq.n	8008cc4 <I2C_RequestMemoryRead+0x4c>
 8008cbc:	e069      	b.n	8008d92 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008cbe:	6965      	ldr	r5, [r4, #20]
 8008cc0:	056a      	lsls	r2, r5, #21
 8008cc2:	d44e      	bmi.n	8008d62 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008cc4:	6965      	ldr	r5, [r4, #20]
 8008cc6:	07a9      	lsls	r1, r5, #30
 8008cc8:	d5f9      	bpl.n	8008cbe <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008cca:	2300      	movs	r3, #0
 8008ccc:	9301      	str	r3, [sp, #4]
 8008cce:	6963      	ldr	r3, [r4, #20]
 8008cd0:	9301      	str	r3, [sp, #4]
 8008cd2:	69a3      	ldr	r3, [r4, #24]
 8008cd4:	9301      	str	r3, [sp, #4]
 8008cd6:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008cd8:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008cdc:	f040 80bd 	bne.w	8008e5a <I2C_RequestMemoryRead+0x1e2>
 8008ce0:	6963      	ldr	r3, [r4, #20]
 8008ce2:	0618      	lsls	r0, r3, #24
 8008ce4:	d468      	bmi.n	8008db8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008ce6:	6963      	ldr	r3, [r4, #20]
 8008ce8:	0559      	lsls	r1, r3, #21
 8008cea:	d5f9      	bpl.n	8008ce0 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8008cec:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008cee:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8008cf2:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008cf4:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8008cf6:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8008cf8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008cfc:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008d00:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8008d02:	f043 0304 	orr.w	r3, r3, #4
 8008d06:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008d08:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8008d0a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008d0c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8008d0e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008d12:	d070      	beq.n	8008df6 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8008d14:	2001      	movs	r0, #1
}
 8008d16:	b003      	add	sp, #12
 8008d18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008d1c:	6963      	ldr	r3, [r4, #20]
 8008d1e:	07dd      	lsls	r5, r3, #31
 8008d20:	d4c4      	bmi.n	8008cac <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008d22:	f7ff fb99 	bl	8008458 <HAL_GetTick>
 8008d26:	eba0 0009 	sub.w	r0, r0, r9
 8008d2a:	4582      	cmp	sl, r0
 8008d2c:	d304      	bcc.n	8008d38 <I2C_RequestMemoryRead+0xc0>
 8008d2e:	f1ba 0f00 	cmp.w	sl, #0
 8008d32:	d001      	beq.n	8008d38 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008d34:	6834      	ldr	r4, [r6, #0]
 8008d36:	e7b3      	b.n	8008ca0 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008d38:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008d3a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008d3c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008d3e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008d42:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008d46:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008d48:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8008d4a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008d4e:	f042 0220 	orr.w	r2, r2, #32
 8008d52:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008d54:	680b      	ldr	r3, [r1, #0]
 8008d56:	05dc      	lsls	r4, r3, #23
 8008d58:	d43d      	bmi.n	8008dd6 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8008d5a:	2003      	movs	r0, #3
}
 8008d5c:	b003      	add	sp, #12
 8008d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008d62:	6823      	ldr	r3, [r4, #0]
 8008d64:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008d68:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008d6a:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008d6c:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8008d70:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008d72:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008d74:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008d76:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008d7a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008d7e:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8008d80:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008d84:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8008d88:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008d8a:	6433      	str	r3, [r6, #64]	; 0x40
}
 8008d8c:	b003      	add	sp, #12
 8008d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008d92:	6963      	ldr	r3, [r4, #20]
 8008d94:	079b      	lsls	r3, r3, #30
 8008d96:	d498      	bmi.n	8008cca <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008d98:	6963      	ldr	r3, [r4, #20]
 8008d9a:	0558      	lsls	r0, r3, #21
 8008d9c:	d4e1      	bmi.n	8008d62 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008d9e:	f7ff fb5b 	bl	8008458 <HAL_GetTick>
 8008da2:	eba0 0009 	sub.w	r0, r0, r9
 8008da6:	4582      	cmp	sl, r0
 8008da8:	f0c0 808f 	bcc.w	8008eca <I2C_RequestMemoryRead+0x252>
 8008dac:	f1ba 0f00 	cmp.w	sl, #0
 8008db0:	f000 808b 	beq.w	8008eca <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008db4:	6834      	ldr	r4, [r6, #0]
 8008db6:	e77e      	b.n	8008cb6 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008db8:	f1b8 0f01 	cmp.w	r8, #1
 8008dbc:	d10f      	bne.n	8008dde <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008dbe:	b2ff      	uxtb	r7, r7
 8008dc0:	6127      	str	r7, [r4, #16]
 8008dc2:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008dc6:	d16e      	bne.n	8008ea6 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008dc8:	6963      	ldr	r3, [r4, #20]
 8008dca:	061b      	lsls	r3, r3, #24
 8008dcc:	d41a      	bmi.n	8008e04 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008dce:	6963      	ldr	r3, [r4, #20]
 8008dd0:	055f      	lsls	r7, r3, #21
 8008dd2:	d5f9      	bpl.n	8008dc8 <I2C_RequestMemoryRead+0x150>
 8008dd4:	e78a      	b.n	8008cec <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8008dd6:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008dda:	6433      	str	r3, [r6, #64]	; 0x40
 8008ddc:	e7bd      	b.n	8008d5a <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8008dde:	0a3b      	lsrs	r3, r7, #8
 8008de0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008de2:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008de6:	d17e      	bne.n	8008ee6 <I2C_RequestMemoryRead+0x26e>
 8008de8:	6963      	ldr	r3, [r4, #20]
 8008dea:	061d      	lsls	r5, r3, #24
 8008dec:	d4e7      	bmi.n	8008dbe <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008dee:	6963      	ldr	r3, [r4, #20]
 8008df0:	0558      	lsls	r0, r3, #21
 8008df2:	d5f9      	bpl.n	8008de8 <I2C_RequestMemoryRead+0x170>
 8008df4:	e77a      	b.n	8008cec <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008df6:	6832      	ldr	r2, [r6, #0]
 8008df8:	6813      	ldr	r3, [r2, #0]
 8008dfa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8008dfe:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008e00:	6013      	str	r3, [r2, #0]
 8008e02:	e7ab      	b.n	8008d5c <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008e04:	6823      	ldr	r3, [r4, #0]
 8008e06:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008e0a:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8008e0c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008e10:	d113      	bne.n	8008e3a <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008e12:	6963      	ldr	r3, [r4, #20]
 8008e14:	07d8      	lsls	r0, r3, #31
 8008e16:	d5fc      	bpl.n	8008e12 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8008e18:	f04b 0301 	orr.w	r3, fp, #1
 8008e1c:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8008e1e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008e22:	d003      	beq.n	8008e2c <I2C_RequestMemoryRead+0x1b4>
 8008e24:	e02b      	b.n	8008e7e <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008e26:	6963      	ldr	r3, [r4, #20]
 8008e28:	055b      	lsls	r3, r3, #21
 8008e2a:	d49a      	bmi.n	8008d62 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008e2c:	6963      	ldr	r3, [r4, #20]
 8008e2e:	43db      	mvns	r3, r3
 8008e30:	f013 0302 	ands.w	r3, r3, #2
 8008e34:	d1f7      	bne.n	8008e26 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8008e36:	4618      	mov	r0, r3
 8008e38:	e790      	b.n	8008d5c <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008e3a:	6963      	ldr	r3, [r4, #20]
 8008e3c:	07d9      	lsls	r1, r3, #31
 8008e3e:	d4eb      	bmi.n	8008e18 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008e40:	f7ff fb0a 	bl	8008458 <HAL_GetTick>
 8008e44:	eba0 0009 	sub.w	r0, r0, r9
 8008e48:	4582      	cmp	sl, r0
 8008e4a:	f4ff af75 	bcc.w	8008d38 <I2C_RequestMemoryRead+0xc0>
 8008e4e:	f1ba 0f00 	cmp.w	sl, #0
 8008e52:	f43f af71 	beq.w	8008d38 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008e56:	6834      	ldr	r4, [r6, #0]
 8008e58:	e7d8      	b.n	8008e0c <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008e5a:	6963      	ldr	r3, [r4, #20]
 8008e5c:	061a      	lsls	r2, r3, #24
 8008e5e:	d4ab      	bmi.n	8008db8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008e60:	6963      	ldr	r3, [r4, #20]
 8008e62:	055d      	lsls	r5, r3, #21
 8008e64:	f53f af42 	bmi.w	8008cec <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008e68:	f7ff faf6 	bl	8008458 <HAL_GetTick>
 8008e6c:	eba0 0009 	sub.w	r0, r0, r9
 8008e70:	4582      	cmp	sl, r0
 8008e72:	d34b      	bcc.n	8008f0c <I2C_RequestMemoryRead+0x294>
 8008e74:	f1ba 0f00 	cmp.w	sl, #0
 8008e78:	d048      	beq.n	8008f0c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008e7a:	6834      	ldr	r4, [r6, #0]
 8008e7c:	e72c      	b.n	8008cd8 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008e7e:	6963      	ldr	r3, [r4, #20]
 8008e80:	43db      	mvns	r3, r3
 8008e82:	f013 0302 	ands.w	r3, r3, #2
 8008e86:	d0d6      	beq.n	8008e36 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008e88:	6963      	ldr	r3, [r4, #20]
 8008e8a:	055a      	lsls	r2, r3, #21
 8008e8c:	f53f af69 	bmi.w	8008d62 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008e90:	f7ff fae2 	bl	8008458 <HAL_GetTick>
 8008e94:	eba0 0009 	sub.w	r0, r0, r9
 8008e98:	4582      	cmp	sl, r0
 8008e9a:	d316      	bcc.n	8008eca <I2C_RequestMemoryRead+0x252>
 8008e9c:	f1ba 0f00 	cmp.w	sl, #0
 8008ea0:	d013      	beq.n	8008eca <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008ea2:	6834      	ldr	r4, [r6, #0]
 8008ea4:	e7bb      	b.n	8008e1e <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008ea6:	6963      	ldr	r3, [r4, #20]
 8008ea8:	061d      	lsls	r5, r3, #24
 8008eaa:	d4ab      	bmi.n	8008e04 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008eac:	6963      	ldr	r3, [r4, #20]
 8008eae:	055a      	lsls	r2, r3, #21
 8008eb0:	f53f af1c 	bmi.w	8008cec <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008eb4:	f7ff fad0 	bl	8008458 <HAL_GetTick>
 8008eb8:	eba0 0009 	sub.w	r0, r0, r9
 8008ebc:	4582      	cmp	sl, r0
 8008ebe:	d325      	bcc.n	8008f0c <I2C_RequestMemoryRead+0x294>
 8008ec0:	f1ba 0f00 	cmp.w	sl, #0
 8008ec4:	d022      	beq.n	8008f0c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008ec6:	6834      	ldr	r4, [r6, #0]
 8008ec8:	e77b      	b.n	8008dc2 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008eca:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8008ecc:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008ece:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8008ed0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008ed4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008ed8:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008eda:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008ede:	f043 0320 	orr.w	r3, r3, #32
 8008ee2:	6433      	str	r3, [r6, #64]	; 0x40
 8008ee4:	e716      	b.n	8008d14 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008ee6:	6963      	ldr	r3, [r4, #20]
 8008ee8:	0619      	lsls	r1, r3, #24
 8008eea:	f53f af68 	bmi.w	8008dbe <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008eee:	6963      	ldr	r3, [r4, #20]
 8008ef0:	055b      	lsls	r3, r3, #21
 8008ef2:	f53f aefb 	bmi.w	8008cec <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008ef6:	f7ff faaf 	bl	8008458 <HAL_GetTick>
 8008efa:	eba0 0009 	sub.w	r0, r0, r9
 8008efe:	4582      	cmp	sl, r0
 8008f00:	d304      	bcc.n	8008f0c <I2C_RequestMemoryRead+0x294>
 8008f02:	f1ba 0f00 	cmp.w	sl, #0
 8008f06:	d001      	beq.n	8008f0c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008f08:	6834      	ldr	r4, [r6, #0]
 8008f0a:	e76a      	b.n	8008de2 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008f0c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008f0e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008f10:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008f12:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008f16:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008f1a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8008f1c:	4313      	orrs	r3, r2
 8008f1e:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8008f20:	e6f2      	b.n	8008d08 <I2C_RequestMemoryRead+0x90>
 8008f22:	bf00      	nop

08008f24 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8008f24:	2800      	cmp	r0, #0
 8008f26:	f000 80b9 	beq.w	800909c <HAL_I2C_Init+0x178>
{
 8008f2a:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8008f2c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008f30:	4604      	mov	r4, r0
 8008f32:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008f36:	2b00      	cmp	r3, #0
 8008f38:	f000 8098 	beq.w	800906c <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8008f3c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8008f3e:	2224      	movs	r2, #36	; 0x24
 8008f40:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8008f44:	681a      	ldr	r2, [r3, #0]
 8008f46:	f022 0201 	bic.w	r2, r2, #1
 8008f4a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8008f4c:	681a      	ldr	r2, [r3, #0]
 8008f4e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8008f52:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8008f54:	681a      	ldr	r2, [r3, #0]
 8008f56:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8008f5a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8008f5c:	f001 fe70 	bl	800ac40 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8008f60:	6865      	ldr	r5, [r4, #4]
 8008f62:	4b4f      	ldr	r3, [pc, #316]	; (80090a0 <HAL_I2C_Init+0x17c>)
 8008f64:	429d      	cmp	r5, r3
 8008f66:	d84f      	bhi.n	8009008 <HAL_I2C_Init+0xe4>
 8008f68:	4b4e      	ldr	r3, [pc, #312]	; (80090a4 <HAL_I2C_Init+0x180>)
 8008f6a:	4298      	cmp	r0, r3
 8008f6c:	d97c      	bls.n	8009068 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8008f6e:	4b4e      	ldr	r3, [pc, #312]	; (80090a8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8008f70:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8008f72:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8008f76:	1e43      	subs	r3, r0, #1
 8008f78:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008f7c:	6822      	ldr	r2, [r4, #0]
 8008f7e:	6851      	ldr	r1, [r2, #4]
 8008f80:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8008f84:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8008f88:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8008f8a:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8008f8c:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8008f90:	f10c 0c01 	add.w	ip, ip, #1
 8008f94:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8008f98:	ea41 010c 	orr.w	r1, r1, ip
 8008f9c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8008f9e:	69d1      	ldr	r1, [r2, #28]
 8008fa0:	f640 70fc 	movw	r0, #4092	; 0xffc
 8008fa4:	3301      	adds	r3, #1
 8008fa6:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8008faa:	4203      	tst	r3, r0
 8008fac:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008fb0:	d161      	bne.n	8009076 <HAL_I2C_Init+0x152>
 8008fb2:	2304      	movs	r3, #4
 8008fb4:	430b      	orrs	r3, r1
 8008fb6:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8008fb8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8008fbc:	6811      	ldr	r1, [r2, #0]
 8008fbe:	4303      	orrs	r3, r0
 8008fc0:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8008fc4:	430b      	orrs	r3, r1
 8008fc6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8008fc8:	6891      	ldr	r1, [r2, #8]
 8008fca:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8008fce:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8008fd2:	4303      	orrs	r3, r0
 8008fd4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008fd8:	430b      	orrs	r3, r1
 8008fda:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8008fdc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8008fe0:	68d1      	ldr	r1, [r2, #12]
 8008fe2:	4303      	orrs	r3, r0
 8008fe4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008fe8:	430b      	orrs	r3, r1
 8008fea:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8008fec:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008fee:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8008ff0:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8008ff4:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8008ff6:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008ff8:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8008ffa:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8008ffe:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009000:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009004:	4618      	mov	r0, r3
}
 8009006:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009008:	4b28      	ldr	r3, [pc, #160]	; (80090ac <HAL_I2C_Init+0x188>)
 800900a:	4298      	cmp	r0, r3
 800900c:	d92c      	bls.n	8009068 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800900e:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009010:	4b25      	ldr	r3, [pc, #148]	; (80090a8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009012:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009014:	4e26      	ldr	r6, [pc, #152]	; (80090b0 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009016:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800901a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800901e:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009022:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009024:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009028:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800902c:	fb01 f303 	mul.w	r3, r1, r3
 8009030:	fba6 6303 	umull	r6, r3, r6, r3
 8009034:	6a11      	ldr	r1, [r2, #32]
 8009036:	099b      	lsrs	r3, r3, #6
 8009038:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800903c:	3301      	adds	r3, #1
 800903e:	430b      	orrs	r3, r1
 8009040:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009042:	69d1      	ldr	r1, [r2, #28]
 8009044:	68a3      	ldr	r3, [r4, #8]
 8009046:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800904a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800904e:	b9ab      	cbnz	r3, 800907c <HAL_I2C_Init+0x158>
 8009050:	1e43      	subs	r3, r0, #1
 8009052:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009056:	fbb3 f3f5 	udiv	r3, r3, r5
 800905a:	3301      	adds	r3, #1
 800905c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009060:	b1d3      	cbz	r3, 8009098 <HAL_I2C_Init+0x174>
 8009062:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009066:	e7a5      	b.n	8008fb4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009068:	2001      	movs	r0, #1
}
 800906a:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800906c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009070:	f7f8 fdd8 	bl	8001c24 <HAL_I2C_MspInit>
 8009074:	e762      	b.n	8008f3c <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009076:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800907a:	e79b      	b.n	8008fb4 <HAL_I2C_Init+0x90>
 800907c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009080:	1e43      	subs	r3, r0, #1
 8009082:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009086:	fbb3 f3f5 	udiv	r3, r3, r5
 800908a:	3301      	adds	r3, #1
 800908c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009090:	b113      	cbz	r3, 8009098 <HAL_I2C_Init+0x174>
 8009092:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009096:	e78d      	b.n	8008fb4 <HAL_I2C_Init+0x90>
 8009098:	2301      	movs	r3, #1
 800909a:	e78b      	b.n	8008fb4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800909c:	2001      	movs	r0, #1
}
 800909e:	4770      	bx	lr
 80090a0:	000186a0 	.word	0x000186a0
 80090a4:	001e847f 	.word	0x001e847f
 80090a8:	431bde83 	.word	0x431bde83
 80090ac:	003d08ff 	.word	0x003d08ff
 80090b0:	10624dd3 	.word	0x10624dd3

080090b4 <HAL_I2C_Mem_Write>:
{
 80090b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80090b8:	4604      	mov	r4, r0
 80090ba:	b083      	sub	sp, #12
 80090bc:	4699      	mov	r9, r3
 80090be:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 80090c2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80090c4:	460f      	mov	r7, r1
 80090c6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80090c8:	f7ff f9c6 	bl	8008458 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80090cc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80090d0:	2b20      	cmp	r3, #32
 80090d2:	d004      	beq.n	80090de <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 80090d4:	2702      	movs	r7, #2
}
 80090d6:	4638      	mov	r0, r7
 80090d8:	b003      	add	sp, #12
 80090da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80090de:	4605      	mov	r5, r0
 80090e0:	e005      	b.n	80090ee <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80090e2:	f7ff f9b9 	bl	8008458 <HAL_GetTick>
 80090e6:	1b40      	subs	r0, r0, r5
 80090e8:	2819      	cmp	r0, #25
 80090ea:	f200 80a8 	bhi.w	800923e <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80090ee:	6820      	ldr	r0, [r4, #0]
 80090f0:	6983      	ldr	r3, [r0, #24]
 80090f2:	ea6f 0c03 	mvn.w	ip, r3
 80090f6:	f01c 0b02 	ands.w	fp, ip, #2
 80090fa:	d0f2      	beq.n	80090e2 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 80090fc:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009100:	2b01      	cmp	r3, #1
 8009102:	d0e7      	beq.n	80090d4 <HAL_I2C_Mem_Write+0x20>
 8009104:	2301      	movs	r3, #1
 8009106:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800910a:	6803      	ldr	r3, [r0, #0]
 800910c:	07db      	lsls	r3, r3, #31
 800910e:	d572      	bpl.n	80091f6 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009110:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009112:	6807      	ldr	r7, [r0, #0]
 8009114:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009118:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800911a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800911c:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800911e:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009120:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009124:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009128:	2040      	movs	r0, #64	; 0x40
 800912a:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800912e:	2000      	movs	r0, #0
 8009130:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009132:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009136:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009138:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800913a:	4856      	ldr	r0, [pc, #344]	; (8009294 <HAL_I2C_Mem_Write+0x1e0>)
 800913c:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800913e:	464b      	mov	r3, r9
 8009140:	4642      	mov	r2, r8
 8009142:	4620      	mov	r0, r4
 8009144:	f7ff fca4 	bl	8008a90 <I2C_RequestMemoryWrite>
 8009148:	4607      	mov	r7, r0
 800914a:	bb00      	cbnz	r0, 800918e <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800914c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800914e:	2b00      	cmp	r3, #0
 8009150:	f000 809e 	beq.w	8009290 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009154:	6823      	ldr	r3, [r4, #0]
 8009156:	1c72      	adds	r2, r6, #1
 8009158:	d159      	bne.n	800920e <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800915a:	695a      	ldr	r2, [r3, #20]
 800915c:	0610      	lsls	r0, r2, #24
 800915e:	d41b      	bmi.n	8009198 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009160:	695a      	ldr	r2, [r3, #20]
 8009162:	0551      	lsls	r1, r2, #21
 8009164:	d5f9      	bpl.n	800915a <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009166:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009168:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800916c:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800916e:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009170:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009172:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009176:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800917a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800917c:	f043 0304 	orr.w	r3, r3, #4
 8009180:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009182:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009184:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009186:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009188:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800918c:	d038      	beq.n	8009200 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800918e:	2701      	movs	r7, #1
}
 8009190:	4638      	mov	r0, r7
 8009192:	b003      	add	sp, #12
 8009194:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009198:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800919c:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80091a0:	4661      	mov	r1, ip
      hi2c->XferSize--;
 80091a2:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80091a6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80091aa:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 80091ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 80091ae:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80091b0:	3a01      	subs	r2, #1
 80091b2:	b292      	uxth	r2, r2
 80091b4:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80091b6:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80091b8:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 80091ba:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80091bc:	0740      	lsls	r0, r0, #29
 80091be:	d517      	bpl.n	80091f0 <HAL_I2C_Mem_Write+0x13c>
 80091c0:	b942      	cbnz	r2, 80091d4 <HAL_I2C_Mem_Write+0x120>
 80091c2:	1c72      	adds	r2, r6, #1
 80091c4:	d156      	bne.n	8009274 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80091c6:	695a      	ldr	r2, [r3, #20]
 80091c8:	0750      	lsls	r0, r2, #29
 80091ca:	d446      	bmi.n	800925a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80091cc:	695a      	ldr	r2, [r3, #20]
 80091ce:	0551      	lsls	r1, r2, #21
 80091d0:	d5f9      	bpl.n	80091c6 <HAL_I2C_Mem_Write+0x112>
 80091d2:	e7c8      	b.n	8009166 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80091d4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80091d8:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 80091da:	f10c 0102 	add.w	r1, ip, #2
 80091de:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80091e0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 80091e2:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 80091e6:	3901      	subs	r1, #1
        hi2c->XferSize--;
 80091e8:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 80091ea:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 80091ec:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80091ee:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80091f0:	2a00      	cmp	r2, #0
 80091f2:	d1b0      	bne.n	8009156 <HAL_I2C_Mem_Write+0xa2>
 80091f4:	e7e5      	b.n	80091c2 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 80091f6:	6803      	ldr	r3, [r0, #0]
 80091f8:	f043 0301 	orr.w	r3, r3, #1
 80091fc:	6003      	str	r3, [r0, #0]
 80091fe:	e787      	b.n	8009110 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009200:	6822      	ldr	r2, [r4, #0]
 8009202:	6813      	ldr	r3, [r2, #0]
 8009204:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009208:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800920a:	6013      	str	r3, [r2, #0]
 800920c:	e763      	b.n	80090d6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800920e:	695a      	ldr	r2, [r3, #20]
 8009210:	0612      	lsls	r2, r2, #24
 8009212:	d4c1      	bmi.n	8009198 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009214:	695a      	ldr	r2, [r3, #20]
 8009216:	0551      	lsls	r1, r2, #21
 8009218:	d4a5      	bmi.n	8009166 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800921a:	f7ff f91d 	bl	8008458 <HAL_GetTick>
 800921e:	1b40      	subs	r0, r0, r5
 8009220:	4286      	cmp	r6, r0
 8009222:	d301      	bcc.n	8009228 <HAL_I2C_Mem_Write+0x174>
 8009224:	2e00      	cmp	r6, #0
 8009226:	d195      	bne.n	8009154 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009228:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800922a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800922c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800922e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009232:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009236:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009238:	4313      	orrs	r3, r2
 800923a:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800923c:	e7a1      	b.n	8009182 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800923e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009240:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009244:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009248:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800924c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800924e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009252:	f043 0320 	orr.w	r3, r3, #32
 8009256:	6423      	str	r3, [r4, #64]	; 0x40
 8009258:	e73c      	b.n	80090d4 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800925a:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800925c:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800925e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009262:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009264:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009266:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800926a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800926e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009272:	e730      	b.n	80090d6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009274:	695a      	ldr	r2, [r3, #20]
 8009276:	0752      	lsls	r2, r2, #29
 8009278:	d4ef      	bmi.n	800925a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800927a:	695a      	ldr	r2, [r3, #20]
 800927c:	0551      	lsls	r1, r2, #21
 800927e:	f53f af72 	bmi.w	8009166 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009282:	f7ff f8e9 	bl	8008458 <HAL_GetTick>
 8009286:	1b40      	subs	r0, r0, r5
 8009288:	4286      	cmp	r6, r0
 800928a:	d3cd      	bcc.n	8009228 <HAL_I2C_Mem_Write+0x174>
 800928c:	2e00      	cmp	r6, #0
 800928e:	d0cb      	beq.n	8009228 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009290:	6823      	ldr	r3, [r4, #0]
 8009292:	e796      	b.n	80091c2 <HAL_I2C_Mem_Write+0x10e>
 8009294:	ffff0000 	.word	0xffff0000

08009298 <HAL_I2C_Mem_Read>:
{
 8009298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800929c:	4604      	mov	r4, r0
 800929e:	b087      	sub	sp, #28
 80092a0:	4699      	mov	r9, r3
 80092a2:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 80092a6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80092a8:	460f      	mov	r7, r1
 80092aa:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80092ac:	f7ff f8d4 	bl	8008458 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80092b0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80092b4:	2b20      	cmp	r3, #32
 80092b6:	d004      	beq.n	80092c2 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 80092b8:	2702      	movs	r7, #2
}
 80092ba:	4638      	mov	r0, r7
 80092bc:	b007      	add	sp, #28
 80092be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80092c2:	4606      	mov	r6, r0
 80092c4:	e005      	b.n	80092d2 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80092c6:	f7ff f8c7 	bl	8008458 <HAL_GetTick>
 80092ca:	1b80      	subs	r0, r0, r6
 80092cc:	2819      	cmp	r0, #25
 80092ce:	f200 80d2 	bhi.w	8009476 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80092d2:	f8d4 c000 	ldr.w	ip, [r4]
 80092d6:	f8dc 0018 	ldr.w	r0, [ip, #24]
 80092da:	43c0      	mvns	r0, r0
 80092dc:	f010 0b02 	ands.w	fp, r0, #2
 80092e0:	d0f1      	beq.n	80092c6 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 80092e2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80092e6:	2b01      	cmp	r3, #1
 80092e8:	d0e6      	beq.n	80092b8 <HAL_I2C_Mem_Read+0x20>
 80092ea:	2301      	movs	r3, #1
 80092ec:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80092f0:	f8dc 3000 	ldr.w	r3, [ip]
 80092f4:	07d9      	lsls	r1, r3, #31
 80092f6:	d537      	bpl.n	8009368 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80092f8:	f8dc 0000 	ldr.w	r0, [ip]
 80092fc:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009300:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009304:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009306:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009308:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800930a:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800930e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009312:	2040      	movs	r0, #64	; 0x40
 8009314:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009318:	2000      	movs	r0, #0
 800931a:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800931c:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009320:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009322:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009324:	4893      	ldr	r0, [pc, #588]	; (8009574 <HAL_I2C_Mem_Read+0x2dc>)
 8009326:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009328:	4639      	mov	r1, r7
 800932a:	464b      	mov	r3, r9
 800932c:	4642      	mov	r2, r8
 800932e:	4620      	mov	r0, r4
 8009330:	f7ff fca2 	bl	8008c78 <I2C_RequestMemoryRead>
 8009334:	4607      	mov	r7, r0
 8009336:	2800      	cmp	r0, #0
 8009338:	f040 80ab 	bne.w	8009492 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800933c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800933e:	b9d2      	cbnz	r2, 8009376 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009340:	6823      	ldr	r3, [r4, #0]
 8009342:	9002      	str	r0, [sp, #8]
 8009344:	695a      	ldr	r2, [r3, #20]
 8009346:	9202      	str	r2, [sp, #8]
 8009348:	699a      	ldr	r2, [r3, #24]
 800934a:	9202      	str	r2, [sp, #8]
 800934c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800934e:	681a      	ldr	r2, [r3, #0]
 8009350:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009354:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009356:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009358:	2220      	movs	r2, #32
 800935a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800935e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009362:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8009366:	e7a8      	b.n	80092ba <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8009368:	f8dc 3000 	ldr.w	r3, [ip]
 800936c:	f043 0301 	orr.w	r3, r3, #1
 8009370:	f8cc 3000 	str.w	r3, [ip]
 8009374:	e7c0      	b.n	80092f8 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8009376:	2a01      	cmp	r2, #1
 8009378:	f000 812c 	beq.w	80095d4 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800937c:	2a02      	cmp	r2, #2
 800937e:	f000 80bd 	beq.w	80094fc <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009382:	6823      	ldr	r3, [r4, #0]
 8009384:	9005      	str	r0, [sp, #20]
 8009386:	6959      	ldr	r1, [r3, #20]
 8009388:	9105      	str	r1, [sp, #20]
 800938a:	6999      	ldr	r1, [r3, #24]
 800938c:	9105      	str	r1, [sp, #20]
 800938e:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009390:	2a03      	cmp	r2, #3
 8009392:	d849      	bhi.n	8009428 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009394:	2a01      	cmp	r2, #1
 8009396:	f000 80eb 	beq.w	8009570 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800939a:	2a02      	cmp	r2, #2
 800939c:	f000 8089 	beq.w	80094b2 <HAL_I2C_Mem_Read+0x21a>
 80093a0:	1c69      	adds	r1, r5, #1
 80093a2:	f040 80bb 	bne.w	800951c <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80093a6:	695a      	ldr	r2, [r3, #20]
 80093a8:	0752      	lsls	r2, r2, #29
 80093aa:	d5fc      	bpl.n	80093a6 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80093ac:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80093ae:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80093b0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80093b4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80093b6:	691b      	ldr	r3, [r3, #16]
 80093b8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 80093ba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 80093bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80093be:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80093c0:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 80093c2:	3101      	adds	r1, #1
          hi2c->XferSize--;
 80093c4:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 80093c6:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 80093c8:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80093ca:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80093cc:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80093ce:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80093d0:	6822      	ldr	r2, [r4, #0]
 80093d2:	f040 80af 	bne.w	8009534 <HAL_I2C_Mem_Read+0x29c>
 80093d6:	6953      	ldr	r3, [r2, #20]
 80093d8:	075b      	lsls	r3, r3, #29
 80093da:	d5fc      	bpl.n	80093d6 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80093dc:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80093de:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80093e0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80093e4:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80093e6:	6913      	ldr	r3, [r2, #16]
 80093e8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 80093ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 80093ec:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 80093ee:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80093f0:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 80093f2:	3b01      	subs	r3, #1
 80093f4:	b29b      	uxth	r3, r3
 80093f6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80093f8:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 80093fa:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 80093fc:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009400:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009402:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009406:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009408:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800940a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800940c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800940e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009410:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009412:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009414:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009416:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009418:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800941a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800941c:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800941e:	2a00      	cmp	r2, #0
 8009420:	d099      	beq.n	8009356 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009422:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009424:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009426:	d9b5      	bls.n	8009394 <HAL_I2C_Mem_Read+0xfc>
 8009428:	b95d      	cbnz	r5, 8009442 <HAL_I2C_Mem_Read+0x1aa>
 800942a:	e0c5      	b.n	80095b8 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800942c:	695a      	ldr	r2, [r3, #20]
 800942e:	06d0      	lsls	r0, r2, #27
 8009430:	f100 80b2 	bmi.w	8009598 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009434:	f7ff f810 	bl	8008458 <HAL_GetTick>
 8009438:	1b80      	subs	r0, r0, r6
 800943a:	4285      	cmp	r5, r0
 800943c:	f0c0 8086 	bcc.w	800954c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009440:	6823      	ldr	r3, [r4, #0]
 8009442:	695a      	ldr	r2, [r3, #20]
 8009444:	0652      	lsls	r2, r2, #25
 8009446:	d5f1      	bpl.n	800942c <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009448:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800944a:	691b      	ldr	r3, [r3, #16]
 800944c:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800944e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009450:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8009452:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009454:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009456:	3b01      	subs	r3, #1
 8009458:	b29b      	uxth	r3, r3
 800945a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800945c:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800945e:	3a01      	subs	r2, #1
 8009460:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009462:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009466:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8009468:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800946a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800946e:	d5d6      	bpl.n	800941e <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009470:	6903      	ldr	r3, [r0, #16]
 8009472:	704b      	strb	r3, [r1, #1]
 8009474:	e036      	b.n	80094e4 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009476:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009478:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800947c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009480:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009484:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009486:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800948a:	f043 0320 	orr.w	r3, r3, #32
 800948e:	6423      	str	r3, [r4, #64]	; 0x40
 8009490:	e712      	b.n	80092b8 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009492:	2701      	movs	r7, #1
}
 8009494:	4638      	mov	r0, r7
 8009496:	b007      	add	sp, #28
 8009498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800949c:	695a      	ldr	r2, [r3, #20]
 800949e:	0750      	lsls	r0, r2, #29
 80094a0:	d40c      	bmi.n	80094bc <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80094a2:	f7fe ffd9 	bl	8008458 <HAL_GetTick>
 80094a6:	1b80      	subs	r0, r0, r6
 80094a8:	4285      	cmp	r5, r0
 80094aa:	d34f      	bcc.n	800954c <HAL_I2C_Mem_Read+0x2b4>
 80094ac:	2d00      	cmp	r5, #0
 80094ae:	d04d      	beq.n	800954c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80094b0:	6823      	ldr	r3, [r4, #0]
 80094b2:	1c69      	adds	r1, r5, #1
 80094b4:	d1f2      	bne.n	800949c <HAL_I2C_Mem_Read+0x204>
 80094b6:	695a      	ldr	r2, [r3, #20]
 80094b8:	0752      	lsls	r2, r2, #29
 80094ba:	d5fc      	bpl.n	80094b6 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80094bc:	681a      	ldr	r2, [r3, #0]
 80094be:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80094c2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80094c4:	691a      	ldr	r2, [r3, #16]
 80094c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80094c8:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 80094ca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 80094cc:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 80094ce:	3b01      	subs	r3, #1
 80094d0:	b29b      	uxth	r3, r3
 80094d2:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 80094d4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80094d6:	3b01      	subs	r3, #1
 80094d8:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80094da:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 80094dc:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80094de:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 80094e0:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80094e2:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 80094e4:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80094e6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 80094e8:	3301      	adds	r3, #1
 80094ea:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 80094ec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 80094ee:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 80094f0:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 80094f2:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 80094f4:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 80094f6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80094f8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80094fa:	e790      	b.n	800941e <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80094fc:	6823      	ldr	r3, [r4, #0]
 80094fe:	6819      	ldr	r1, [r3, #0]
 8009500:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009504:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009506:	6819      	ldr	r1, [r3, #0]
 8009508:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800950c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800950e:	9004      	str	r0, [sp, #16]
 8009510:	6959      	ldr	r1, [r3, #20]
 8009512:	9104      	str	r1, [sp, #16]
 8009514:	6999      	ldr	r1, [r3, #24]
 8009516:	9104      	str	r1, [sp, #16]
 8009518:	9904      	ldr	r1, [sp, #16]
 800951a:	e739      	b.n	8009390 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800951c:	695a      	ldr	r2, [r3, #20]
 800951e:	0750      	lsls	r0, r2, #29
 8009520:	f53f af44 	bmi.w	80093ac <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009524:	f7fe ff98 	bl	8008458 <HAL_GetTick>
 8009528:	1b80      	subs	r0, r0, r6
 800952a:	4285      	cmp	r5, r0
 800952c:	d30e      	bcc.n	800954c <HAL_I2C_Mem_Read+0x2b4>
 800952e:	b16d      	cbz	r5, 800954c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009530:	6823      	ldr	r3, [r4, #0]
 8009532:	e735      	b.n	80093a0 <HAL_I2C_Mem_Read+0x108>
 8009534:	6953      	ldr	r3, [r2, #20]
 8009536:	0758      	lsls	r0, r3, #29
 8009538:	f53f af50 	bmi.w	80093dc <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800953c:	f7fe ff8c 	bl	8008458 <HAL_GetTick>
 8009540:	1b80      	subs	r0, r0, r6
 8009542:	4285      	cmp	r5, r0
 8009544:	d302      	bcc.n	800954c <HAL_I2C_Mem_Read+0x2b4>
 8009546:	2d00      	cmp	r5, #0
 8009548:	f47f af41 	bne.w	80093ce <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800954c:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800954e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009550:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009552:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009556:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800955a:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800955c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009560:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009562:	f043 0320 	orr.w	r3, r3, #32
}
 8009566:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009568:	6423      	str	r3, [r4, #64]	; 0x40
}
 800956a:	b007      	add	sp, #28
 800956c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009570:	b95d      	cbnz	r5, 800958a <HAL_I2C_Mem_Read+0x2f2>
 8009572:	e02b      	b.n	80095cc <HAL_I2C_Mem_Read+0x334>
 8009574:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009578:	695a      	ldr	r2, [r3, #20]
 800957a:	06d2      	lsls	r2, r2, #27
 800957c:	d40c      	bmi.n	8009598 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800957e:	f7fe ff6b 	bl	8008458 <HAL_GetTick>
 8009582:	1b80      	subs	r0, r0, r6
 8009584:	4285      	cmp	r5, r0
 8009586:	d3e1      	bcc.n	800954c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009588:	6823      	ldr	r3, [r4, #0]
 800958a:	695a      	ldr	r2, [r3, #20]
 800958c:	0651      	lsls	r1, r2, #25
 800958e:	d5f3      	bpl.n	8009578 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009590:	691a      	ldr	r2, [r3, #16]
 8009592:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009594:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009596:	e7a5      	b.n	80094e4 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009598:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800959a:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800959e:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80095a0:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80095a2:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80095a4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80095a8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80095ac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80095ae:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80095b0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 80095b4:	2701      	movs	r7, #1
 80095b6:	e680      	b.n	80092ba <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80095b8:	695a      	ldr	r2, [r3, #20]
 80095ba:	0652      	lsls	r2, r2, #25
 80095bc:	f53f af44 	bmi.w	8009448 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80095c0:	695a      	ldr	r2, [r3, #20]
 80095c2:	06d1      	lsls	r1, r2, #27
 80095c4:	d4e8      	bmi.n	8009598 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80095c6:	f7fe ff47 	bl	8008458 <HAL_GetTick>
 80095ca:	e7bf      	b.n	800954c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80095cc:	695a      	ldr	r2, [r3, #20]
 80095ce:	0650      	lsls	r0, r2, #25
 80095d0:	d5f6      	bpl.n	80095c0 <HAL_I2C_Mem_Read+0x328>
 80095d2:	e7dd      	b.n	8009590 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80095d4:	6823      	ldr	r3, [r4, #0]
 80095d6:	6819      	ldr	r1, [r3, #0]
 80095d8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80095dc:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80095de:	9003      	str	r0, [sp, #12]
 80095e0:	6959      	ldr	r1, [r3, #20]
 80095e2:	9103      	str	r1, [sp, #12]
 80095e4:	6999      	ldr	r1, [r3, #24]
 80095e6:	9103      	str	r1, [sp, #12]
 80095e8:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80095ea:	6819      	ldr	r1, [r3, #0]
 80095ec:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 80095f0:	6019      	str	r1, [r3, #0]
 80095f2:	e6cd      	b.n	8009390 <HAL_I2C_Mem_Read+0xf8>

080095f4 <HAL_I2C_MasterTxCpltCallback>:
 80095f4:	4770      	bx	lr
 80095f6:	bf00      	nop

080095f8 <HAL_I2C_MasterRxCpltCallback>:
 80095f8:	4770      	bx	lr
 80095fa:	bf00      	nop

080095fc <HAL_I2C_SlaveTxCpltCallback>:
 80095fc:	4770      	bx	lr
 80095fe:	bf00      	nop

08009600 <HAL_I2C_SlaveRxCpltCallback>:
 8009600:	4770      	bx	lr
 8009602:	bf00      	nop

08009604 <HAL_I2C_AddrCallback>:
}
 8009604:	4770      	bx	lr
 8009606:	bf00      	nop

08009608 <HAL_I2C_ListenCpltCallback>:
 8009608:	4770      	bx	lr
 800960a:	bf00      	nop

0800960c <HAL_I2C_MemTxCpltCallback>:
 800960c:	4770      	bx	lr
 800960e:	bf00      	nop

08009610 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009610:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8009614:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8009616:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 8009618:	b959      	cbnz	r1, 8009632 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800961a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800961c:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800961e:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009620:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009622:	d00d      	beq.n	8009640 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 8009624:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8009628:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800962a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800962c:	3201      	adds	r2, #1
 800962e:	6502      	str	r2, [r0, #80]	; 0x50
 8009630:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 8009632:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8009634:	2901      	cmp	r1, #1
 8009636:	d009      	beq.n	800964c <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 8009638:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800963a:	2902      	cmp	r1, #2
 800963c:	d00e      	beq.n	800965c <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800963e:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009640:	b2d2      	uxtb	r2, r2
 8009642:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 8009644:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009646:	3202      	adds	r2, #2
 8009648:	6502      	str	r2, [r0, #80]	; 0x50
 800964a:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800964c:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800964e:	6801      	ldr	r1, [r0, #0]
 8009650:	b2d2      	uxtb	r2, r2
 8009652:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 8009654:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009656:	3201      	adds	r2, #1
 8009658:	6502      	str	r2, [r0, #80]	; 0x50
 800965a:	4770      	bx	lr
 800965c:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800965e:	2a22      	cmp	r2, #34	; 0x22
 8009660:	d01f      	beq.n	80096a2 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009662:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8009664:	b289      	uxth	r1, r1
 8009666:	b9c1      	cbnz	r1, 800969a <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009668:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800966a:	b289      	uxth	r1, r1
 800966c:	2900      	cmp	r1, #0
 800966e:	d1e6      	bne.n	800963e <I2C_MemoryTransmit_TXE_BTF+0x2e>
 8009670:	2a21      	cmp	r2, #33	; 0x21
 8009672:	d1e4      	bne.n	800963e <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009674:	6802      	ldr	r2, [r0, #0]
{
 8009676:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009678:	6854      	ldr	r4, [r2, #4]
 800967a:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800967e:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009680:	6814      	ldr	r4, [r2, #0]
 8009682:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 8009686:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 8009688:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800968a:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800968c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009690:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 8009694:	f7ff ffba 	bl	800960c <HAL_I2C_MemTxCpltCallback>
}
 8009698:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800969a:	2a21      	cmp	r2, #33	; 0x21
 800969c:	d00a      	beq.n	80096b4 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800969e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80096a0:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 80096a2:	6801      	ldr	r1, [r0, #0]
 80096a4:	680a      	ldr	r2, [r1, #0]
 80096a6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80096aa:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 80096ac:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80096ae:	3201      	adds	r2, #1
 80096b0:	6502      	str	r2, [r0, #80]	; 0x50
 80096b2:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80096b4:	6a41      	ldr	r1, [r0, #36]	; 0x24
 80096b6:	6802      	ldr	r2, [r0, #0]
 80096b8:	f811 0b01 	ldrb.w	r0, [r1], #1
 80096bc:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 80096be:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 80096c0:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 80096c2:	3a01      	subs	r2, #1
 80096c4:	b292      	uxth	r2, r2
 80096c6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80096c8:	4770      	bx	lr
 80096ca:	bf00      	nop

080096cc <HAL_I2C_MemRxCpltCallback>:
 80096cc:	4770      	bx	lr
 80096ce:	bf00      	nop

080096d0 <HAL_I2C_ErrorCallback>:
 80096d0:	4770      	bx	lr
 80096d2:	bf00      	nop

080096d4 <HAL_I2C_AbortCpltCallback>:
 80096d4:	4770      	bx	lr
 80096d6:	bf00      	nop

080096d8 <I2C_DMAAbort>:
{
 80096d8:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 80096da:	4b3a      	ldr	r3, [pc, #232]	; (80097c4 <I2C_DMAAbort+0xec>)
 80096dc:	4a3a      	ldr	r2, [pc, #232]	; (80097c8 <I2C_DMAAbort+0xf0>)
 80096de:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 80096e0:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 80096e2:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 80096e4:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 80096e6:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 80096e8:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 80096ec:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 80096ee:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80096f0:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 80096f4:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 80096f6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80096fa:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80096fe:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009700:	9301      	str	r3, [sp, #4]
 8009702:	e005      	b.n	8009710 <I2C_DMAAbort+0x38>
    count--;
 8009704:	9b01      	ldr	r3, [sp, #4]
 8009706:	3b01      	subs	r3, #1
 8009708:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800970a:	6813      	ldr	r3, [r2, #0]
 800970c:	059b      	lsls	r3, r3, #22
 800970e:	d506      	bpl.n	800971e <I2C_DMAAbort+0x46>
    if (count == 0U)
 8009710:	9b01      	ldr	r3, [sp, #4]
 8009712:	2b00      	cmp	r3, #0
 8009714:	d1f6      	bne.n	8009704 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8009716:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009718:	f043 0320 	orr.w	r3, r3, #32
 800971c:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800971e:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8009720:	b34c      	cbz	r4, 8009776 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 8009722:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 8009724:	2500      	movs	r5, #0
 8009726:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 8009728:	b1f3      	cbz	r3, 8009768 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800972a:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800972c:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800972e:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 8009732:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 8009734:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8009736:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 8009738:	2400      	movs	r4, #0
 800973a:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800973c:	6813      	ldr	r3, [r2, #0]
 800973e:	f023 0301 	bic.w	r3, r3, #1
 8009742:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 8009744:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009748:	2b60      	cmp	r3, #96	; 0x60
 800974a:	d02a      	beq.n	80097a2 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800974c:	f001 0128 	and.w	r1, r1, #40	; 0x28
 8009750:	2928      	cmp	r1, #40	; 0x28
 8009752:	d019      	beq.n	8009788 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 8009754:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009756:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8009758:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800975c:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 8009760:	f7ff ffb6 	bl	80096d0 <HAL_I2C_ErrorCallback>
}
 8009764:	b002      	add	sp, #8
 8009766:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009768:	6815      	ldr	r5, [r2, #0]
 800976a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800976e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8009770:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8009772:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 8009774:	e7e2      	b.n	800973c <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 8009776:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8009778:	b1f3      	cbz	r3, 80097b8 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800977a:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800977c:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800977e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 8009782:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8009784:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8009786:	e7d7      	b.n	8009738 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 8009788:	6813      	ldr	r3, [r2, #0]
 800978a:	f043 0301 	orr.w	r3, r3, #1
 800978e:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009790:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8009792:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009794:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009798:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800979a:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800979c:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 80097a0:	e7de      	b.n	8009760 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 80097a2:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 80097a4:	2220      	movs	r2, #32
 80097a6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 80097aa:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 80097ae:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 80097b0:	f7ff ff90 	bl	80096d4 <HAL_I2C_AbortCpltCallback>
}
 80097b4:	b002      	add	sp, #8
 80097b6:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80097b8:	6814      	ldr	r4, [r2, #0]
 80097ba:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 80097be:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 80097c0:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 80097c2:	e7bb      	b.n	800973c <I2C_DMAAbort+0x64>
 80097c4:	20000078 	.word	0x20000078
 80097c8:	14f8b589 	.word	0x14f8b589

080097cc <I2C_ITError>:
{
 80097cc:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80097ce:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 80097d2:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 80097d6:	2b10      	cmp	r3, #16
{
 80097d8:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80097da:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 80097dc:	d039      	beq.n	8009852 <I2C_ITError+0x86>
 80097de:	b2d9      	uxtb	r1, r3
 80097e0:	2940      	cmp	r1, #64	; 0x40
 80097e2:	d036      	beq.n	8009852 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 80097e4:	f002 0128 	and.w	r1, r2, #40	; 0x28
 80097e8:	2928      	cmp	r1, #40	; 0x28
 80097ea:	d03d      	beq.n	8009868 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 80097ec:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 80097ee:	6859      	ldr	r1, [r3, #4]
 80097f0:	0508      	lsls	r0, r1, #20
 80097f2:	d407      	bmi.n	8009804 <I2C_ITError+0x38>
 80097f4:	2a60      	cmp	r2, #96	; 0x60
 80097f6:	d005      	beq.n	8009804 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 80097f8:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80097fa:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 80097fc:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009800:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 8009804:	2200      	movs	r2, #0
 8009806:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009808:	685a      	ldr	r2, [r3, #4]
 800980a:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800980e:	d134      	bne.n	800987a <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 8009810:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8009814:	2960      	cmp	r1, #96	; 0x60
 8009816:	d075      	beq.n	8009904 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009818:	695a      	ldr	r2, [r3, #20]
 800981a:	0650      	lsls	r0, r2, #25
 800981c:	d505      	bpl.n	800982a <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800981e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009820:	691b      	ldr	r3, [r3, #16]
 8009822:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8009824:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009826:	3301      	adds	r3, #1
 8009828:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800982a:	4620      	mov	r0, r4
 800982c:	f7ff ff50 	bl	80096d0 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 8009830:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 8009832:	0719      	lsls	r1, r3, #28
 8009834:	d004      	beq.n	8009840 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009836:	6822      	ldr	r2, [r4, #0]
 8009838:	6853      	ldr	r3, [r2, #4]
 800983a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800983e:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 8009840:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 8009844:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009846:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 8009848:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800984a:	d501      	bpl.n	8009850 <I2C_ITError+0x84>
 800984c:	2b28      	cmp	r3, #40	; 0x28
 800984e:	d02f      	beq.n	80098b0 <I2C_ITError+0xe4>
}
 8009850:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009852:	2a22      	cmp	r2, #34	; 0x22
 8009854:	d1c6      	bne.n	80097e4 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009856:	6823      	ldr	r3, [r4, #0]
 8009858:	681a      	ldr	r2, [r3, #0]
 800985a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800985e:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 8009860:	685a      	ldr	r2, [r3, #4]
 8009862:	0512      	lsls	r2, r2, #20
 8009864:	d5c8      	bpl.n	80097f8 <I2C_ITError+0x2c>
 8009866:	e7cd      	b.n	8009804 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 8009868:	2300      	movs	r3, #0
 800986a:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800986c:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800986e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009872:	685a      	ldr	r2, [r3, #4]
 8009874:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009878:	d0ca      	beq.n	8009810 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800987a:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800987c:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800987e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009882:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 8009884:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009888:	2b01      	cmp	r3, #1
 800988a:	d01e      	beq.n	80098ca <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800988c:	4b28      	ldr	r3, [pc, #160]	; (8009930 <I2C_ITError+0x164>)
 800988e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 8009890:	f7fe fe6c 	bl	800856c <HAL_DMA_Abort_IT>
 8009894:	2800      	cmp	r0, #0
 8009896:	d0cb      	beq.n	8009830 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 8009898:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800989a:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800989c:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800989e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 80098a0:	f023 0301 	bic.w	r3, r3, #1
 80098a4:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 80098a6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 80098aa:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80098ac:	4798      	blx	r3
 80098ae:	e7bf      	b.n	8009830 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 80098b0:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 80098b2:	4920      	ldr	r1, [pc, #128]	; (8009934 <I2C_ITError+0x168>)
 80098b4:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 80098b6:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 80098b8:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 80098ba:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 80098bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 80098c0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 80098c4:	f7ff fea0 	bl	8009608 <HAL_I2C_ListenCpltCallback>
}
 80098c8:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 80098ca:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80098cc:	4b18      	ldr	r3, [pc, #96]	; (8009930 <I2C_ITError+0x164>)
 80098ce:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 80098d0:	f7fe fe4c 	bl	800856c <HAL_DMA_Abort_IT>
 80098d4:	2800      	cmp	r0, #0
 80098d6:	d0ab      	beq.n	8009830 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 80098d8:	6823      	ldr	r3, [r4, #0]
 80098da:	695a      	ldr	r2, [r3, #20]
 80098dc:	0651      	lsls	r1, r2, #25
 80098de:	d506      	bpl.n	80098ee <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80098e0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80098e2:	691b      	ldr	r3, [r3, #16]
 80098e4:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 80098e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 80098e8:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 80098ea:	3201      	adds	r2, #1
 80098ec:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 80098ee:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 80098f0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 80098f2:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 80098f6:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 80098f8:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 80098fa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 80098fe:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009900:	4798      	blx	r3
 8009902:	e795      	b.n	8009830 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 8009904:	2120      	movs	r1, #32
 8009906:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800990a:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800990c:	695a      	ldr	r2, [r3, #20]
 800990e:	0652      	lsls	r2, r2, #25
 8009910:	d506      	bpl.n	8009920 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009912:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009914:	691b      	ldr	r3, [r3, #16]
 8009916:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8009918:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800991a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800991c:	3201      	adds	r2, #1
 800991e:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 8009920:	681a      	ldr	r2, [r3, #0]
 8009922:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 8009926:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 8009928:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800992a:	f7ff fed3 	bl	80096d4 <HAL_I2C_AbortCpltCallback>
 800992e:	e77f      	b.n	8009830 <I2C_ITError+0x64>
 8009930:	080096d9 	.word	0x080096d9
 8009934:	ffff0000 	.word	0xffff0000

08009938 <HAL_I2C_EV_IRQHandler>:
{
 8009938:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800993a:	6803      	ldr	r3, [r0, #0]
{
 800993c:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800993e:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 8009940:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009942:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009946:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800994a:	2910      	cmp	r1, #16
{
 800994c:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800994e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009950:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 8009954:	d022      	beq.n	800999c <HAL_I2C_EV_IRQHandler+0x64>
 8009956:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800995a:	d01f      	beq.n	800999c <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800995c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800995e:	2900      	cmp	r1, #0
 8009960:	f000 8094 	beq.w	8009a8c <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009964:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 8009966:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009968:	f011 0602 	ands.w	r6, r1, #2
 800996c:	d059      	beq.n	8009a22 <HAL_I2C_EV_IRQHandler+0xea>
 800996e:	0586      	lsls	r6, r0, #22
 8009970:	d559      	bpl.n	8009a26 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009972:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009974:	b102      	cbz	r2, 8009978 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009976:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009978:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800997c:	f002 0228 	and.w	r2, r2, #40	; 0x28
 8009980:	2a28      	cmp	r2, #40	; 0x28
 8009982:	f000 821e 	beq.w	8009dc2 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009986:	2200      	movs	r2, #0
 8009988:	920c      	str	r2, [sp, #48]	; 0x30
 800998a:	6959      	ldr	r1, [r3, #20]
 800998c:	910c      	str	r1, [sp, #48]	; 0x30
 800998e:	699b      	ldr	r3, [r3, #24]
 8009990:	930c      	str	r3, [sp, #48]	; 0x30
 8009992:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 8009994:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 8009998:	b00e      	add	sp, #56	; 0x38
 800999a:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800999c:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800999e:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 80099a0:	f011 0f01 	tst.w	r1, #1
 80099a4:	d11a      	bne.n	80099dc <HAL_I2C_EV_IRQHandler+0xa4>
 80099a6:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 80099aa:	d0f5      	beq.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 80099ac:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 80099b0:	d0f2      	beq.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80099b2:	070d      	lsls	r5, r1, #28
 80099b4:	d56d      	bpl.n	8009a92 <HAL_I2C_EV_IRQHandler+0x15a>
 80099b6:	0585      	lsls	r5, r0, #22
 80099b8:	f140 8083 	bpl.w	8009ac2 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 80099bc:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 80099be:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80099c0:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 80099c2:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 80099c4:	2900      	cmp	r1, #0
 80099c6:	f000 81e3 	beq.w	8009d90 <HAL_I2C_EV_IRQHandler+0x458>
 80099ca:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 80099cc:	2a00      	cmp	r2, #0
 80099ce:	f000 81df 	beq.w	8009d90 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 80099d2:	685a      	ldr	r2, [r3, #4]
 80099d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80099d8:	605a      	str	r2, [r3, #4]
 80099da:	e7dd      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80099dc:	0585      	lsls	r5, r0, #22
 80099de:	d56e      	bpl.n	8009abe <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 80099e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80099e2:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 80099e6:	f000 81e9 	beq.w	8009dbc <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 80099ea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80099ec:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 80099f0:	bf04      	itt	eq
 80099f2:	2208      	moveq	r2, #8
 80099f4:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 80099f6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 80099fa:	2a40      	cmp	r2, #64	; 0x40
 80099fc:	f000 81d7 	beq.w	8009dae <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8009a00:	6922      	ldr	r2, [r4, #16]
 8009a02:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 8009a06:	f000 81b2 	beq.w	8009d6e <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 8009a0a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009a0c:	2a00      	cmp	r2, #0
 8009a0e:	f040 81ef 	bne.w	8009df0 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 8009a12:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8009a14:	11d2      	asrs	r2, r2, #7
 8009a16:	f002 0206 	and.w	r2, r2, #6
 8009a1a:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 8009a1e:	611a      	str	r2, [r3, #16]
 8009a20:	e7ba      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009a22:	06cd      	lsls	r5, r1, #27
 8009a24:	d47c      	bmi.n	8009b20 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 8009a26:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 8009a2a:	2a21      	cmp	r2, #33	; 0x21
 8009a2c:	f000 80f5 	beq.w	8009c1a <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009a30:	064e      	lsls	r6, r1, #25
 8009a32:	f140 8132 	bpl.w	8009c9a <HAL_I2C_EV_IRQHandler+0x362>
 8009a36:	0545      	lsls	r5, r0, #21
 8009a38:	f140 812f 	bpl.w	8009c9a <HAL_I2C_EV_IRQHandler+0x362>
 8009a3c:	0749      	lsls	r1, r1, #29
 8009a3e:	f100 812f 	bmi.w	8009ca0 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009a42:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 8009a46:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009a48:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009a4a:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 8009a4c:	2a00      	cmp	r2, #0
 8009a4e:	d0a3      	beq.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a50:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009a52:	691b      	ldr	r3, [r3, #16]
 8009a54:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 8009a56:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009a58:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009a5a:	3b01      	subs	r3, #1
 8009a5c:	b29b      	uxth	r3, r3
 8009a5e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009a60:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009a62:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009a64:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 8009a66:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009a68:	2b00      	cmp	r3, #0
 8009a6a:	d195      	bne.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 8009a6c:	292a      	cmp	r1, #42	; 0x2a
 8009a6e:	d193      	bne.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009a70:	6822      	ldr	r2, [r4, #0]
 8009a72:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8009a74:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009a76:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009a78:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8009a7c:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009a7e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8009a80:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009a82:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009a86:	f7ff fdbb 	bl	8009600 <HAL_I2C_SlaveRxCpltCallback>
 8009a8a:	e785      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009a8c:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009a8e:	6959      	ldr	r1, [r3, #20]
 8009a90:	e76a      	b.n	8009968 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009a92:	078d      	lsls	r5, r1, #30
 8009a94:	d515      	bpl.n	8009ac2 <HAL_I2C_EV_IRQHandler+0x18a>
 8009a96:	0585      	lsls	r5, r0, #22
 8009a98:	d513      	bpl.n	8009ac2 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 8009a9a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 8009a9e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 8009aa0:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8009aa2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8009aa6:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 8009aa8:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8009aaa:	f000 81b3 	beq.w	8009e14 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009aae:	2200      	movs	r2, #0
 8009ab0:	920a      	str	r2, [sp, #40]	; 0x28
 8009ab2:	695a      	ldr	r2, [r3, #20]
 8009ab4:	920a      	str	r2, [sp, #40]	; 0x28
 8009ab6:	699b      	ldr	r3, [r3, #24]
 8009ab8:	930a      	str	r3, [sp, #40]	; 0x28
 8009aba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009abc:	e76c      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009abe:	070d      	lsls	r5, r1, #28
 8009ac0:	d5e7      	bpl.n	8009a92 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 8009ac2:	0776      	lsls	r6, r6, #29
 8009ac4:	f140 80f5 	bpl.w	8009cb2 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 8009ac8:	685d      	ldr	r5, [r3, #4]
 8009aca:	052d      	lsls	r5, r5, #20
 8009acc:	f53f af64 	bmi.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009ad0:	060e      	lsls	r6, r1, #24
 8009ad2:	f140 8115 	bpl.w	8009d00 <HAL_I2C_EV_IRQHandler+0x3c8>
 8009ad6:	0545      	lsls	r5, r0, #21
 8009ad8:	f140 8112 	bpl.w	8009d00 <HAL_I2C_EV_IRQHandler+0x3c8>
 8009adc:	074e      	lsls	r6, r1, #29
 8009ade:	f100 8112 	bmi.w	8009d06 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009ae2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009ae6:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009ae8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 8009aec:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009aee:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009af0:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009af2:	2800      	cmp	r0, #0
 8009af4:	f040 8235 	bne.w	8009f62 <HAL_I2C_EV_IRQHandler+0x62a>
 8009af8:	2a21      	cmp	r2, #33	; 0x21
 8009afa:	f000 8347 	beq.w	800a18c <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 8009afe:	2940      	cmp	r1, #64	; 0x40
 8009b00:	f47f af4a 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 8009b04:	2a22      	cmp	r2, #34	; 0x22
 8009b06:	f47f af47 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 8009b0a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009b0c:	b292      	uxth	r2, r2
 8009b0e:	2a00      	cmp	r2, #0
 8009b10:	f000 8268 	beq.w	8009fe4 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009b14:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 8009b18:	2a40      	cmp	r2, #64	; 0x40
 8009b1a:	f040 80b4 	bne.w	8009c86 <HAL_I2C_EV_IRQHandler+0x34e>
 8009b1e:	e0fc      	b.n	8009d1a <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009b20:	0585      	lsls	r5, r0, #22
 8009b22:	d580      	bpl.n	8009a26 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009b24:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009b28:	685a      	ldr	r2, [r3, #4]
 8009b2a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8009b2e:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 8009b30:	960d      	str	r6, [sp, #52]	; 0x34
 8009b32:	695a      	ldr	r2, [r3, #20]
 8009b34:	920d      	str	r2, [sp, #52]	; 0x34
 8009b36:	681a      	ldr	r2, [r3, #0]
 8009b38:	f042 0201 	orr.w	r2, r2, #1
 8009b3c:	601a      	str	r2, [r3, #0]
 8009b3e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009b40:	681a      	ldr	r2, [r3, #0]
 8009b42:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009b46:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009b48:	685a      	ldr	r2, [r3, #4]
 8009b4a:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009b4c:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009b4e:	d521      	bpl.n	8009b94 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009b50:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 8009b54:	2a22      	cmp	r2, #34	; 0x22
 8009b56:	f000 817a 	beq.w	8009e4e <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 8009b5a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009b5c:	6802      	ldr	r2, [r0, #0]
 8009b5e:	6852      	ldr	r2, [r2, #4]
 8009b60:	b292      	uxth	r2, r2
 8009b62:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 8009b64:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009b66:	b292      	uxth	r2, r2
 8009b68:	b11a      	cbz	r2, 8009b72 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8009b6a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009b6c:	f042 0204 	orr.w	r2, r2, #4
 8009b70:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 8009b72:	685a      	ldr	r2, [r3, #4]
 8009b74:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009b78:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 8009b7a:	f7fe fd09 	bl	8008590 <HAL_DMA_GetState>
 8009b7e:	2801      	cmp	r0, #1
 8009b80:	d008      	beq.n	8009b94 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 8009b82:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009b84:	4b99      	ldr	r3, [pc, #612]	; (8009dec <HAL_I2C_EV_IRQHandler+0x4b4>)
 8009b86:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 8009b88:	f7fe fcf0 	bl	800856c <HAL_DMA_Abort_IT>
 8009b8c:	b110      	cbz	r0, 8009b94 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8009b8e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009b90:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009b92:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 8009b94:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009b96:	b29b      	uxth	r3, r3
 8009b98:	b313      	cbz	r3, 8009be0 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009b9a:	6823      	ldr	r3, [r4, #0]
 8009b9c:	695a      	ldr	r2, [r3, #20]
 8009b9e:	0752      	lsls	r2, r2, #29
 8009ba0:	d50a      	bpl.n	8009bb8 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ba2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009ba4:	691b      	ldr	r3, [r3, #16]
 8009ba6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 8009ba8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009baa:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009bac:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8009bae:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 8009bb0:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009bb2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 8009bb4:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009bb6:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009bb8:	695a      	ldr	r2, [r3, #20]
 8009bba:	0656      	lsls	r6, r2, #25
 8009bbc:	d509      	bpl.n	8009bd2 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009bbe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009bc0:	691b      	ldr	r3, [r3, #16]
 8009bc2:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 8009bc4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009bc6:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009bc8:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 8009bca:	3201      	adds	r2, #1
      hi2c->XferCount--;
 8009bcc:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 8009bce:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009bd0:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 8009bd2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009bd4:	b29b      	uxth	r3, r3
 8009bd6:	b11b      	cbz	r3, 8009be0 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8009bd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009bda:	f043 0304 	orr.w	r3, r3, #4
 8009bde:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009be0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009be2:	2b00      	cmp	r3, #0
 8009be4:	f040 80dd 	bne.w	8009da2 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 8009be8:	2d2a      	cmp	r5, #42	; 0x2a
 8009bea:	f000 8151 	beq.w	8009e90 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 8009bee:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009bf2:	2b28      	cmp	r3, #40	; 0x28
 8009bf4:	f000 8154 	beq.w	8009ea0 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009bf8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009bfa:	2b22      	cmp	r3, #34	; 0x22
 8009bfc:	d002      	beq.n	8009c04 <HAL_I2C_EV_IRQHandler+0x2cc>
 8009bfe:	2d22      	cmp	r5, #34	; 0x22
 8009c00:	f47f aeca 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 8009c04:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 8009c06:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 8009c08:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009c0a:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 8009c0c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c10:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009c14:	f7ff fcf4 	bl	8009600 <HAL_I2C_SlaveRxCpltCallback>
 8009c18:	e6be      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009c1a:	060d      	lsls	r5, r1, #24
 8009c1c:	d528      	bpl.n	8009c70 <HAL_I2C_EV_IRQHandler+0x338>
 8009c1e:	0546      	lsls	r6, r0, #21
 8009c20:	d526      	bpl.n	8009c70 <HAL_I2C_EV_IRQHandler+0x338>
 8009c22:	074d      	lsls	r5, r1, #29
 8009c24:	d427      	bmi.n	8009c76 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009c26:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 8009c2a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 8009c2c:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009c2e:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 8009c30:	2900      	cmp	r1, #0
 8009c32:	f43f aeb1 	beq.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c36:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009c38:	f811 5b01 	ldrb.w	r5, [r1], #1
 8009c3c:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 8009c3e:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009c40:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 8009c42:	3901      	subs	r1, #1
 8009c44:	b289      	uxth	r1, r1
 8009c46:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 8009c48:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 8009c4a:	b289      	uxth	r1, r1
 8009c4c:	2900      	cmp	r1, #0
 8009c4e:	f47f aea3 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 8009c52:	2829      	cmp	r0, #41	; 0x29
 8009c54:	f47f aea0 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009c58:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009c5a:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009c5c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009c60:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 8009c62:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8009c64:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009c66:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 8009c6a:	f7ff fcc7 	bl	80095fc <HAL_I2C_SlaveTxCpltCallback>
 8009c6e:	e693      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009c70:	0749      	lsls	r1, r1, #29
 8009c72:	f57f ae91 	bpl.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 8009c76:	0582      	lsls	r2, r0, #22
 8009c78:	f57f ae8e 	bpl.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 8009c7c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009c7e:	b292      	uxth	r2, r2
 8009c80:	2a00      	cmp	r2, #0
 8009c82:	f43f ae89 	beq.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c86:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009c88:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009c8c:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 8009c8e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009c90:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009c92:	3b01      	subs	r3, #1
 8009c94:	b29b      	uxth	r3, r3
 8009c96:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009c98:	e67e      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009c9a:	074a      	lsls	r2, r1, #29
 8009c9c:	f57f ae7c 	bpl.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 8009ca0:	0586      	lsls	r6, r0, #22
 8009ca2:	f57f ae79 	bpl.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 8009ca6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009ca8:	b292      	uxth	r2, r2
 8009caa:	2a00      	cmp	r2, #0
 8009cac:	f43f ae74 	beq.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 8009cb0:	e01b      	b.n	8009cea <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 8009cb2:	685a      	ldr	r2, [r3, #4]
 8009cb4:	0512      	lsls	r2, r2, #20
 8009cb6:	f53f ae6f 	bmi.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009cba:	064e      	lsls	r6, r1, #25
 8009cbc:	d433      	bmi.n	8009d26 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009cbe:	0749      	lsls	r1, r1, #29
 8009cc0:	f57f ae6a 	bpl.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 8009cc4:	0582      	lsls	r2, r0, #22
 8009cc6:	f57f ae67 	bpl.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8009cca:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 8009ccc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009cce:	b292      	uxth	r2, r2
 8009cd0:	2a04      	cmp	r2, #4
 8009cd2:	f000 8113 	beq.w	8009efc <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 8009cd6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009cd8:	b292      	uxth	r2, r2
 8009cda:	2a03      	cmp	r2, #3
 8009cdc:	f000 8153 	beq.w	8009f86 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 8009ce0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009ce2:	b292      	uxth	r2, r2
 8009ce4:	2a02      	cmp	r2, #2
 8009ce6:	f000 8182 	beq.w	8009fee <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009cea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009cec:	691b      	ldr	r3, [r3, #16]
 8009cee:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 8009cf0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009cf2:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009cf4:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 8009cf6:	3201      	adds	r2, #1
    hi2c->XferCount--;
 8009cf8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 8009cfa:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009cfc:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 8009cfe:	e64b      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009d00:	074d      	lsls	r5, r1, #29
 8009d02:	f57f ae49 	bpl.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 8009d06:	0581      	lsls	r1, r0, #22
 8009d08:	f57f ae46 	bpl.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 8009d0c:	2a21      	cmp	r2, #33	; 0x21
 8009d0e:	f000 80fd 	beq.w	8009f0c <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 8009d12:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8009d16:	f47f ae3f 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 8009d1a:	4620      	mov	r0, r4
}
 8009d1c:	b00e      	add	sp, #56	; 0x38
 8009d1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 8009d22:	f7ff bc75 	b.w	8009610 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009d26:	0545      	lsls	r5, r0, #21
 8009d28:	d5c9      	bpl.n	8009cbe <HAL_I2C_EV_IRQHandler+0x386>
 8009d2a:	f011 0104 	ands.w	r1, r1, #4
 8009d2e:	d1c9      	bne.n	8009cc4 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8009d30:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8009d34:	2a22      	cmp	r2, #34	; 0x22
 8009d36:	f47f ae2f 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 8009d3a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009d3c:	b292      	uxth	r2, r2
    if (tmp > 3U)
 8009d3e:	2a03      	cmp	r2, #3
 8009d40:	f240 81ec 	bls.w	800a11c <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d44:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009d46:	691b      	ldr	r3, [r3, #16]
 8009d48:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 8009d4a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009d4c:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009d4e:	3b01      	subs	r3, #1
 8009d50:	b29b      	uxth	r3, r3
 8009d52:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 8009d54:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009d56:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 8009d58:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 8009d5a:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 8009d5c:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 8009d5e:	f47f ae1b 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009d62:	6822      	ldr	r2, [r4, #0]
 8009d64:	6853      	ldr	r3, [r2, #4]
 8009d66:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8009d6a:	6053      	str	r3, [r2, #4]
 8009d6c:	e614      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 8009d6e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8009d72:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 8009d74:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 8009d76:	bf16      	itet	ne
 8009d78:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 8009d7c:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 8009d80:	b2d2      	uxtbne	r2, r2
 8009d82:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8009d84:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8009d86:	b11a      	cbz	r2, 8009d90 <HAL_I2C_EV_IRQHandler+0x458>
 8009d88:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8009d8a:	2a00      	cmp	r2, #0
 8009d8c:	f47f ae21 	bne.w	80099d2 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 8009d90:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009d92:	2a00      	cmp	r2, #0
 8009d94:	f43f ae00 	beq.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 8009d98:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8009d9a:	2a00      	cmp	r2, #0
 8009d9c:	f47f ae19 	bne.w	80099d2 <HAL_I2C_EV_IRQHandler+0x9a>
 8009da0:	e5fa      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 8009da2:	4620      	mov	r0, r4
}
 8009da4:	b00e      	add	sp, #56	; 0x38
 8009da6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 8009daa:	f7ff bd0f 	b.w	80097cc <I2C_ITError>
    if (hi2c->EventCount == 0U)
 8009dae:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009db0:	bb52      	cbnz	r2, 8009e08 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 8009db2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8009db4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8009db8:	611a      	str	r2, [r3, #16]
 8009dba:	e5ed      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 8009dbc:	2201      	movs	r2, #1
 8009dbe:	62e2      	str	r2, [r4, #44]	; 0x2c
 8009dc0:	e619      	b.n	80099f6 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 8009dc2:	685a      	ldr	r2, [r3, #4]
 8009dc4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009dc8:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 8009dca:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 8009dcc:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 8009dd0:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 8009dd4:	bf54      	ite	pl
 8009dd6:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 8009dd8:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 8009dda:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 8009dde:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 8009de2:	4620      	mov	r0, r4
 8009de4:	f7ff fc0e 	bl	8009604 <HAL_I2C_AddrCallback>
 8009de8:	e5d6      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 8009dea:	bf00      	nop
 8009dec:	080096d9 	.word	0x080096d9
      else if (hi2c->EventCount == 1U)
 8009df0:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009df2:	2a01      	cmp	r2, #1
 8009df4:	f47f add0 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 8009df8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8009dfa:	11d2      	asrs	r2, r2, #7
 8009dfc:	f002 0206 	and.w	r2, r2, #6
 8009e00:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 8009e04:	611a      	str	r2, [r3, #16]
 8009e06:	e5c7      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 8009e08:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8009e0a:	f042 0201 	orr.w	r2, r2, #1
 8009e0e:	b2d2      	uxtb	r2, r2
 8009e10:	611a      	str	r2, [r3, #16]
 8009e12:	e5c1      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 8009e14:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8009e16:	b911      	cbnz	r1, 8009e1e <HAL_I2C_EV_IRQHandler+0x4e6>
 8009e18:	2a40      	cmp	r2, #64	; 0x40
 8009e1a:	f000 809b 	beq.w	8009f54 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 8009e1e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009e20:	b922      	cbnz	r2, 8009e2c <HAL_I2C_EV_IRQHandler+0x4f4>
 8009e22:	6921      	ldr	r1, [r4, #16]
 8009e24:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 8009e28:	f000 809f 	beq.w	8009f6a <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 8009e2c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009e2e:	b292      	uxth	r2, r2
 8009e30:	2a00      	cmp	r2, #0
 8009e32:	d142      	bne.n	8009eba <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009e34:	9203      	str	r2, [sp, #12]
 8009e36:	695a      	ldr	r2, [r3, #20]
 8009e38:	9203      	str	r2, [sp, #12]
 8009e3a:	699a      	ldr	r2, [r3, #24]
 8009e3c:	9203      	str	r2, [sp, #12]
 8009e3e:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e40:	681a      	ldr	r2, [r3, #0]
 8009e42:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009e46:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 8009e48:	2300      	movs	r3, #0
 8009e4a:	6523      	str	r3, [r4, #80]	; 0x50
 8009e4c:	e5a4      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 8009e4e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009e50:	6802      	ldr	r2, [r0, #0]
 8009e52:	6852      	ldr	r2, [r2, #4]
 8009e54:	b292      	uxth	r2, r2
 8009e56:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 8009e58:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009e5a:	b292      	uxth	r2, r2
 8009e5c:	b11a      	cbz	r2, 8009e66 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8009e5e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009e60:	f042 0204 	orr.w	r2, r2, #4
 8009e64:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 8009e66:	685a      	ldr	r2, [r3, #4]
 8009e68:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009e6c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 8009e6e:	f7fe fb8f 	bl	8008590 <HAL_DMA_GetState>
 8009e72:	2801      	cmp	r0, #1
 8009e74:	f43f ae8e 	beq.w	8009b94 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 8009e78:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009e7a:	4b98      	ldr	r3, [pc, #608]	; (800a0dc <HAL_I2C_EV_IRQHandler+0x7a4>)
 8009e7c:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 8009e7e:	f7fe fb75 	bl	800856c <HAL_DMA_Abort_IT>
 8009e82:	2800      	cmp	r0, #0
 8009e84:	f43f ae86 	beq.w	8009b94 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8009e88:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009e8a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009e8c:	4798      	blx	r3
 8009e8e:	e681      	b.n	8009b94 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009e90:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 8009e92:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009e94:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009e96:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009e9a:	f7ff fbb1 	bl	8009600 <HAL_I2C_SlaveRxCpltCallback>
 8009e9e:	e6a6      	b.n	8009bee <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 8009ea0:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009ea2:	498f      	ldr	r1, [pc, #572]	; (800a0e0 <HAL_I2C_EV_IRQHandler+0x7a8>)
 8009ea4:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 8009ea6:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8009ea8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 8009eaa:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 8009eac:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009eb0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 8009eb4:	f7ff fba8 	bl	8009608 <HAL_I2C_ListenCpltCallback>
 8009eb8:	e56e      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 8009eba:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009ebc:	b292      	uxth	r2, r2
 8009ebe:	2a01      	cmp	r2, #1
 8009ec0:	d070      	beq.n	8009fa4 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 8009ec2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009ec4:	b292      	uxth	r2, r2
 8009ec6:	2a02      	cmp	r2, #2
 8009ec8:	f000 80d6 	beq.w	800a078 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009ecc:	681a      	ldr	r2, [r3, #0]
 8009ece:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009ed2:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 8009ed4:	685a      	ldr	r2, [r3, #4]
 8009ed6:	0511      	lsls	r1, r2, #20
 8009ed8:	d508      	bpl.n	8009eec <HAL_I2C_EV_IRQHandler+0x5b4>
 8009eda:	2820      	cmp	r0, #32
 8009edc:	f200 80f8 	bhi.w	800a0d0 <HAL_I2C_EV_IRQHandler+0x798>
 8009ee0:	2807      	cmp	r0, #7
 8009ee2:	f200 80ea 	bhi.w	800a0ba <HAL_I2C_EV_IRQHandler+0x782>
 8009ee6:	2801      	cmp	r0, #1
 8009ee8:	f000 80ed 	beq.w	800a0c6 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009eec:	2200      	movs	r2, #0
 8009eee:	9209      	str	r2, [sp, #36]	; 0x24
 8009ef0:	695a      	ldr	r2, [r3, #20]
 8009ef2:	9209      	str	r2, [sp, #36]	; 0x24
 8009ef4:	699b      	ldr	r3, [r3, #24]
 8009ef6:	9309      	str	r3, [sp, #36]	; 0x24
 8009ef8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009efa:	e7a5      	b.n	8009e48 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009efc:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009efe:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009f00:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009f04:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f06:	691b      	ldr	r3, [r3, #16]
 8009f08:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 8009f0a:	e6f1      	b.n	8009cf0 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8009f0c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 8009f0e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8009f12:	2a21      	cmp	r2, #33	; 0x21
 8009f14:	f47f ad40 	bne.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 8009f18:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009f1a:	b292      	uxth	r2, r2
 8009f1c:	2a00      	cmp	r2, #0
 8009f1e:	f47f aeb2 	bne.w	8009c86 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 8009f22:	2908      	cmp	r1, #8
 8009f24:	f000 80e2 	beq.w	800a0ec <HAL_I2C_EV_IRQHandler+0x7b4>
 8009f28:	2920      	cmp	r1, #32
 8009f2a:	f000 80df 	beq.w	800a0ec <HAL_I2C_EV_IRQHandler+0x7b4>
 8009f2e:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 8009f32:	f000 80db 	beq.w	800a0ec <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009f36:	6859      	ldr	r1, [r3, #4]
 8009f38:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 8009f3c:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 8009f3e:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 8009f40:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 8009f42:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8009f44:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 8009f48:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 8009f4a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 8009f4e:	f7ff fb51 	bl	80095f4 <HAL_I2C_MasterTxCpltCallback>
 8009f52:	e521      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009f54:	9101      	str	r1, [sp, #4]
 8009f56:	695a      	ldr	r2, [r3, #20]
 8009f58:	9201      	str	r2, [sp, #4]
 8009f5a:	699b      	ldr	r3, [r3, #24]
 8009f5c:	9301      	str	r3, [sp, #4]
 8009f5e:	9b01      	ldr	r3, [sp, #4]
 8009f60:	e51a      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 8009f62:	2a21      	cmp	r2, #33	; 0x21
 8009f64:	f43f add1 	beq.w	8009b0a <HAL_I2C_EV_IRQHandler+0x1d2>
 8009f68:	e5c9      	b.n	8009afe <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009f6a:	9202      	str	r2, [sp, #8]
 8009f6c:	695a      	ldr	r2, [r3, #20]
 8009f6e:	9202      	str	r2, [sp, #8]
 8009f70:	699a      	ldr	r2, [r3, #24]
 8009f72:	9202      	str	r2, [sp, #8]
 8009f74:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009f76:	681a      	ldr	r2, [r3, #0]
 8009f78:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009f7c:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 8009f7e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009f80:	3301      	adds	r3, #1
 8009f82:	6523      	str	r3, [r4, #80]	; 0x50
 8009f84:	e508      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009f86:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 8009f88:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009f8a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009f8e:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 8009f90:	f43f aeab 	beq.w	8009cea <HAL_I2C_EV_IRQHandler+0x3b2>
 8009f94:	2902      	cmp	r1, #2
 8009f96:	f43f aea8 	beq.w	8009cea <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009f9a:	681a      	ldr	r2, [r3, #0]
 8009f9c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009fa0:	601a      	str	r2, [r3, #0]
 8009fa2:	e6a2      	b.n	8009cea <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 8009fa4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 8009fa8:	f000 811b 	beq.w	800a1e2 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 8009fac:	2808      	cmp	r0, #8
 8009fae:	f000 8108 	beq.w	800a1c2 <HAL_I2C_EV_IRQHandler+0x88a>
 8009fb2:	2820      	cmp	r0, #32
 8009fb4:	f000 8105 	beq.w	800a1c2 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 8009fb8:	2d12      	cmp	r5, #18
 8009fba:	f000 80ff 	beq.w	800a1bc <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 8009fbe:	2810      	cmp	r0, #16
 8009fc0:	d804      	bhi.n	8009fcc <HAL_I2C_EV_IRQHandler+0x694>
 8009fc2:	4a48      	ldr	r2, [pc, #288]	; (800a0e4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 8009fc4:	40c2      	lsrs	r2, r0
 8009fc6:	07d1      	lsls	r1, r2, #31
 8009fc8:	f100 814c 	bmi.w	800a264 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009fcc:	681a      	ldr	r2, [r3, #0]
 8009fce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009fd2:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009fd4:	2200      	movs	r2, #0
 8009fd6:	9206      	str	r2, [sp, #24]
 8009fd8:	695a      	ldr	r2, [r3, #20]
 8009fda:	9206      	str	r2, [sp, #24]
 8009fdc:	699b      	ldr	r3, [r3, #24]
 8009fde:	9306      	str	r3, [sp, #24]
 8009fe0:	9b06      	ldr	r3, [sp, #24]
 8009fe2:	e731      	b.n	8009e48 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009fe4:	685a      	ldr	r2, [r3, #4]
 8009fe6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009fea:	605a      	str	r2, [r3, #4]
 8009fec:	e4d4      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 8009fee:	3901      	subs	r1, #1
 8009ff0:	290f      	cmp	r1, #15
 8009ff2:	d809      	bhi.n	800a008 <HAL_I2C_EV_IRQHandler+0x6d0>
 8009ff4:	e8df f001 	tbb	[pc, r1]
 8009ff8:	3608363b 	.word	0x3608363b
 8009ffc:	08080808 	.word	0x08080808
 800a000:	08080808 	.word	0x08080808
 800a004:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a008:	681a      	ldr	r2, [r3, #0]
 800a00a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a00e:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a010:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a012:	691b      	ldr	r3, [r3, #16]
 800a014:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a016:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a018:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a01a:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800a01c:	3b01      	subs	r3, #1
 800a01e:	b29b      	uxth	r3, r3
 800a020:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a022:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800a024:	1c51      	adds	r1, r2, #1
 800a026:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a028:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800a02a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a02c:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800a02e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a030:	3b01      	subs	r3, #1
 800a032:	b29b      	uxth	r3, r3
 800a034:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a036:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800a038:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a03a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800a03e:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800a040:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a042:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800a044:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a048:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800a04c:	2b40      	cmp	r3, #64	; 0x40
 800a04e:	f000 80f5 	beq.w	800a23c <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a052:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a054:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a056:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a05a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a05c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a05e:	f7ff facb 	bl	80095f8 <HAL_I2C_MasterRxCpltCallback>
 800a062:	e499      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a064:	681a      	ldr	r2, [r3, #0]
 800a066:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a06a:	601a      	str	r2, [r3, #0]
 800a06c:	e7d0      	b.n	800a010 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a06e:	681a      	ldr	r2, [r3, #0]
 800a070:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a074:	601a      	str	r2, [r3, #0]
 800a076:	e7cb      	b.n	800a010 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a078:	2810      	cmp	r0, #16
 800a07a:	d804      	bhi.n	800a086 <HAL_I2C_EV_IRQHandler+0x74e>
 800a07c:	4a19      	ldr	r2, [pc, #100]	; (800a0e4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a07e:	40c2      	lsrs	r2, r0
 800a080:	07d2      	lsls	r2, r2, #31
 800a082:	f100 80c2 	bmi.w	800a20a <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a086:	681a      	ldr	r2, [r3, #0]
 800a088:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a08c:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a08e:	681a      	ldr	r2, [r3, #0]
 800a090:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a094:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a096:	685a      	ldr	r2, [r3, #4]
 800a098:	0516      	lsls	r6, r2, #20
 800a09a:	d506      	bpl.n	800a0aa <HAL_I2C_EV_IRQHandler+0x772>
 800a09c:	2820      	cmp	r0, #32
 800a09e:	f240 80bc 	bls.w	800a21a <HAL_I2C_EV_IRQHandler+0x8e2>
 800a0a2:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a0a6:	f000 80bd 	beq.w	800a224 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a0aa:	2200      	movs	r2, #0
 800a0ac:	9208      	str	r2, [sp, #32]
 800a0ae:	695a      	ldr	r2, [r3, #20]
 800a0b0:	9208      	str	r2, [sp, #32]
 800a0b2:	699b      	ldr	r3, [r3, #24]
 800a0b4:	9308      	str	r3, [sp, #32]
 800a0b6:	9b08      	ldr	r3, [sp, #32]
 800a0b8:	e6c6      	b.n	8009e48 <HAL_I2C_EV_IRQHandler+0x510>
 800a0ba:	4a0b      	ldr	r2, [pc, #44]	; (800a0e8 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800a0bc:	3808      	subs	r0, #8
 800a0be:	40c2      	lsrs	r2, r0
 800a0c0:	07d2      	lsls	r2, r2, #31
 800a0c2:	f57f af13 	bpl.w	8009eec <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800a0c6:	685a      	ldr	r2, [r3, #4]
 800a0c8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a0cc:	605a      	str	r2, [r3, #4]
 800a0ce:	e70d      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x5b4>
 800a0d0:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a0d4:	f47f af0a 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x5b4>
 800a0d8:	e7f5      	b.n	800a0c6 <HAL_I2C_EV_IRQHandler+0x78e>
 800a0da:	bf00      	nop
 800a0dc:	080096d9 	.word	0x080096d9
 800a0e0:	ffff0000 	.word	0xffff0000
 800a0e4:	00010014 	.word	0x00010014
 800a0e8:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a0ec:	6859      	ldr	r1, [r3, #4]
 800a0ee:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a0f2:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a0f4:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800a0f6:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a0f8:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a0fa:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a0fe:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800a100:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800a102:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a106:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800a10a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a10e:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800a110:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a112:	f47f af1c 	bne.w	8009f4e <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800a116:	f7ff fa79 	bl	800960c <HAL_I2C_MemTxCpltCallback>
 800a11a:	e43d      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800a11c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800a11e:	2802      	cmp	r0, #2
 800a120:	f43f af60 	beq.w	8009fe4 <HAL_I2C_EV_IRQHandler+0x6ac>
 800a124:	2a01      	cmp	r2, #1
 800a126:	f63f af5d 	bhi.w	8009fe4 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800a12a:	4a62      	ldr	r2, [pc, #392]	; (800a2b4 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800a12c:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800a12e:	6812      	ldr	r2, [r2, #0]
 800a130:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800a134:	fbb2 f2f0 	udiv	r2, r2, r0
 800a138:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800a13c:	920b      	str	r2, [sp, #44]	; 0x2c
 800a13e:	e004      	b.n	800a14a <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a140:	681a      	ldr	r2, [r3, #0]
 800a142:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800a146:	f000 8092 	beq.w	800a26e <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800a14a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a14c:	3a01      	subs	r2, #1
 800a14e:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800a150:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a152:	2900      	cmp	r1, #0
 800a154:	d1f4      	bne.n	800a140 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a156:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a158:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a15a:	f042 0220 	orr.w	r2, r2, #32
 800a15e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a160:	685a      	ldr	r2, [r3, #4]
 800a162:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a166:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a168:	691b      	ldr	r3, [r3, #16]
 800a16a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800a16c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800a16e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a170:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800a172:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800a174:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800a176:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800a178:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800a17a:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800a17c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800a180:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a182:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800a186:	f7ff faa3 	bl	80096d0 <HAL_I2C_ErrorCallback>
 800a18a:	e405      	b.n	8009998 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a18c:	2d08      	cmp	r5, #8
 800a18e:	d0ad      	beq.n	800a0ec <HAL_I2C_EV_IRQHandler+0x7b4>
 800a190:	2d20      	cmp	r5, #32
 800a192:	d0ab      	beq.n	800a0ec <HAL_I2C_EV_IRQHandler+0x7b4>
 800a194:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800a198:	d0a8      	beq.n	800a0ec <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a19a:	685a      	ldr	r2, [r3, #4]
 800a19c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a1a0:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a1a2:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1a4:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a1a6:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a1a8:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1aa:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800a1ae:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a1b0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800a1b4:	f7ff fa1e 	bl	80095f4 <HAL_I2C_MasterTxCpltCallback>
 800a1b8:	f7ff bbee 	b.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a1bc:	2801      	cmp	r0, #1
 800a1be:	f43f af05 	beq.w	8009fcc <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a1c2:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a1c4:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a1c6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a1ca:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a1cc:	9107      	str	r1, [sp, #28]
 800a1ce:	695a      	ldr	r2, [r3, #20]
 800a1d0:	9207      	str	r2, [sp, #28]
 800a1d2:	699a      	ldr	r2, [r3, #24]
 800a1d4:	9207      	str	r2, [sp, #28]
 800a1d6:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1d8:	681a      	ldr	r2, [r3, #0]
 800a1da:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a1de:	601a      	str	r2, [r3, #0]
 800a1e0:	e632      	b.n	8009e48 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a1e2:	681a      	ldr	r2, [r3, #0]
 800a1e4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a1e8:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a1ea:	685a      	ldr	r2, [r3, #4]
 800a1ec:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a1f0:	d02d      	beq.n	800a24e <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a1f2:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a1f4:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a1f6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a1fa:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a1fc:	9104      	str	r1, [sp, #16]
 800a1fe:	695a      	ldr	r2, [r3, #20]
 800a200:	9204      	str	r2, [sp, #16]
 800a202:	699b      	ldr	r3, [r3, #24]
 800a204:	9304      	str	r3, [sp, #16]
 800a206:	9b04      	ldr	r3, [sp, #16]
 800a208:	e61e      	b.n	8009e48 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a20a:	681a      	ldr	r2, [r3, #0]
 800a20c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a210:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a212:	685a      	ldr	r2, [r3, #4]
 800a214:	0515      	lsls	r5, r2, #20
 800a216:	f57f af48 	bpl.w	800a0aa <HAL_I2C_EV_IRQHandler+0x772>
 800a21a:	2807      	cmp	r0, #7
 800a21c:	d807      	bhi.n	800a22e <HAL_I2C_EV_IRQHandler+0x8f6>
 800a21e:	2801      	cmp	r0, #1
 800a220:	f47f af43 	bne.w	800a0aa <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800a224:	685a      	ldr	r2, [r3, #4]
 800a226:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a22a:	605a      	str	r2, [r3, #4]
 800a22c:	e73d      	b.n	800a0aa <HAL_I2C_EV_IRQHandler+0x772>
 800a22e:	4a22      	ldr	r2, [pc, #136]	; (800a2b8 <HAL_I2C_EV_IRQHandler+0x980>)
 800a230:	3808      	subs	r0, #8
 800a232:	40c2      	lsrs	r2, r0
 800a234:	07d0      	lsls	r0, r2, #31
 800a236:	f57f af38 	bpl.w	800a0aa <HAL_I2C_EV_IRQHandler+0x772>
 800a23a:	e7f3      	b.n	800a224 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a23c:	2300      	movs	r3, #0
 800a23e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800a242:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800a244:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800a246:	f7ff fa41 	bl	80096cc <HAL_I2C_MemRxCpltCallback>
 800a24a:	f7ff bba5 	b.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a24e:	9205      	str	r2, [sp, #20]
 800a250:	695a      	ldr	r2, [r3, #20]
 800a252:	9205      	str	r2, [sp, #20]
 800a254:	699a      	ldr	r2, [r3, #24]
 800a256:	9205      	str	r2, [sp, #20]
 800a258:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a25a:	681a      	ldr	r2, [r3, #0]
 800a25c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a260:	601a      	str	r2, [r3, #0]
 800a262:	e5f1      	b.n	8009e48 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a264:	681a      	ldr	r2, [r3, #0]
 800a266:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a26a:	601a      	str	r2, [r3, #0]
 800a26c:	e6b2      	b.n	8009fd4 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a26e:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a270:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a272:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a276:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a278:	6859      	ldr	r1, [r3, #4]
 800a27a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a27e:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a280:	691b      	ldr	r3, [r3, #16]
 800a282:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800a284:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a286:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a288:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800a28a:	b29b      	uxth	r3, r3
 800a28c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800a28e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800a292:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a294:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800a298:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a29a:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800a29c:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a29e:	f47f aed9 	bne.w	800a054 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800a2a2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800a2a6:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800a2a8:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800a2aa:	f7ff fa0f 	bl	80096cc <HAL_I2C_MemRxCpltCallback>
 800a2ae:	f7ff bb73 	b.w	8009998 <HAL_I2C_EV_IRQHandler+0x60>
 800a2b2:	bf00      	nop
 800a2b4:	20000078 	.word	0x20000078
 800a2b8:	01000101 	.word	0x01000101

0800a2bc <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800a2bc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800a2c0:	2a20      	cmp	r2, #32
{
 800a2c2:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a2c4:	fa5f fc82 	uxtb.w	ip, r2
 800a2c8:	d001      	beq.n	800a2ce <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800a2ca:	2002      	movs	r0, #2
  }
}
 800a2cc:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800a2ce:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800a2d0:	2024      	movs	r0, #36	; 0x24
 800a2d2:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800a2d6:	6810      	ldr	r0, [r2, #0]
 800a2d8:	f020 0001 	bic.w	r0, r0, #1
 800a2dc:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800a2de:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800a2e0:	f020 0010 	bic.w	r0, r0, #16
 800a2e4:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800a2e6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800a2e8:	4301      	orrs	r1, r0
 800a2ea:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800a2ec:	6811      	ldr	r1, [r2, #0]
 800a2ee:	f041 0101 	orr.w	r1, r1, #1
 800a2f2:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800a2f4:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a2f6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800a2fa:	4770      	bx	lr

0800a2fc <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800a2fc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800a300:	2a20      	cmp	r2, #32
 800a302:	d001      	beq.n	800a308 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800a304:	2002      	movs	r0, #2
  }
}
 800a306:	4770      	bx	lr
{
 800a308:	b410      	push	{r4}
 800a30a:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800a30e:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800a310:	2224      	movs	r2, #36	; 0x24
 800a312:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800a316:	6822      	ldr	r2, [r4, #0]
 800a318:	f022 0201 	bic.w	r2, r2, #1
 800a31c:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800a31e:	4603      	mov	r3, r0
 800a320:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800a322:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800a326:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800a328:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800a32a:	b289      	uxth	r1, r1
 800a32c:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800a32e:	6822      	ldr	r2, [r4, #0]
 800a330:	f042 0201 	orr.w	r2, r2, #1
 800a334:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a336:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800a33a:	2000      	movs	r0, #0
}
 800a33c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a340:	4770      	bx	lr
 800a342:	bf00      	nop

0800a344 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800a344:	2800      	cmp	r0, #0
 800a346:	d069      	beq.n	800a41c <HAL_LTDC_Init+0xd8>
{
 800a348:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800a34a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800a34e:	4604      	mov	r4, r0
 800a350:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a354:	2b00      	cmp	r3, #0
 800a356:	d05c      	beq.n	800a412 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a358:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a35a:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a35c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a360:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a364:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a366:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800a368:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a36c:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800a370:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a372:	6999      	ldr	r1, [r3, #24]
 800a374:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800a376:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a378:	430a      	orrs	r2, r1
 800a37a:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800a37c:	689a      	ldr	r2, [r3, #8]
 800a37e:	4928      	ldr	r1, [pc, #160]	; (800a420 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800a380:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800a382:	400a      	ands	r2, r1
 800a384:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800a386:	689a      	ldr	r2, [r3, #8]
 800a388:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a38c:	69a0      	ldr	r0, [r4, #24]
 800a38e:	4302      	orrs	r2, r0
 800a390:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800a392:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800a394:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800a396:	400a      	ands	r2, r1
 800a398:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800a39a:	68da      	ldr	r2, [r3, #12]
 800a39c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a3a0:	6a20      	ldr	r0, [r4, #32]
 800a3a2:	4302      	orrs	r2, r0
 800a3a4:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800a3a6:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800a3a8:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800a3aa:	400a      	ands	r2, r1
 800a3ac:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800a3ae:	691a      	ldr	r2, [r3, #16]
 800a3b0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a3b4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800a3b6:	4302      	orrs	r2, r0
 800a3b8:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800a3ba:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800a3bc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800a3be:	400a      	ands	r2, r1
 800a3c0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800a3c2:	695a      	ldr	r2, [r3, #20]
 800a3c4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a3c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a3ca:	430a      	orrs	r2, r1
 800a3cc:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800a3ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800a3d0:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800a3d4:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800a3d8:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800a3dc:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800a3de:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800a3e0:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800a3e4:	432a      	orrs	r2, r5
 800a3e6:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800a3ea:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a3ee:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800a3f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a3f2:	f042 0206 	orr.w	r2, r2, #6
 800a3f6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800a3f8:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800a3fa:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800a3fe:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800a400:	ea42 020c 	orr.w	r2, r2, ip
 800a404:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800a406:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800a40a:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800a40e:	4608      	mov	r0, r1
}
 800a410:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800a412:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800a416:	f7f7 fc6d 	bl	8001cf4 <HAL_LTDC_MspInit>
 800a41a:	e79d      	b.n	800a358 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800a41c:	2001      	movs	r0, #1
}
 800a41e:	4770      	bx	lr
 800a420:	f000f800 	.word	0xf000f800

0800a424 <HAL_LTDC_ErrorCallback>:
 800a424:	4770      	bx	lr
 800a426:	bf00      	nop

0800a428 <HAL_LTDC_ReloadEventCallback>:
 800a428:	4770      	bx	lr
 800a42a:	bf00      	nop

0800a42c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800a42c:	6803      	ldr	r3, [r0, #0]
{
 800a42e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800a430:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800a432:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800a434:	076a      	lsls	r2, r5, #29
{
 800a436:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800a438:	d501      	bpl.n	800a43e <HAL_LTDC_IRQHandler+0x12>
 800a43a:	0771      	lsls	r1, r6, #29
 800a43c:	d41d      	bmi.n	800a47a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800a43e:	07aa      	lsls	r2, r5, #30
 800a440:	d501      	bpl.n	800a446 <HAL_LTDC_IRQHandler+0x1a>
 800a442:	07b3      	lsls	r3, r6, #30
 800a444:	d42d      	bmi.n	800a4a2 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800a446:	07e8      	lsls	r0, r5, #31
 800a448:	d501      	bpl.n	800a44e <HAL_LTDC_IRQHandler+0x22>
 800a44a:	07f1      	lsls	r1, r6, #31
 800a44c:	d440      	bmi.n	800a4d0 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800a44e:	072a      	lsls	r2, r5, #28
 800a450:	d501      	bpl.n	800a456 <HAL_LTDC_IRQHandler+0x2a>
 800a452:	0733      	lsls	r3, r6, #28
 800a454:	d400      	bmi.n	800a458 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800a456:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800a458:	6823      	ldr	r3, [r4, #0]
 800a45a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800a45c:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800a45e:	f022 0208 	bic.w	r2, r2, #8
 800a462:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800a464:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800a466:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800a468:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800a46a:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800a46e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800a472:	4620      	mov	r0, r4
 800a474:	f7ff ffd8 	bl	800a428 <HAL_LTDC_ReloadEventCallback>
}
 800a478:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800a47a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a47c:	f022 0204 	bic.w	r2, r2, #4
 800a480:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800a482:	2204      	movs	r2, #4
 800a484:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800a486:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800a48a:	f043 0301 	orr.w	r3, r3, #1
 800a48e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800a492:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800a494:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800a498:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800a49c:	f7ff ffc2 	bl	800a424 <HAL_LTDC_ErrorCallback>
 800a4a0:	e7cd      	b.n	800a43e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800a4a2:	6823      	ldr	r3, [r4, #0]
 800a4a4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a4a6:	f022 0202 	bic.w	r2, r2, #2
 800a4aa:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800a4ac:	2202      	movs	r2, #2
 800a4ae:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800a4b0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800a4b4:	f043 0302 	orr.w	r3, r3, #2
 800a4b8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800a4bc:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800a4be:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800a4c0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800a4c4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800a4c8:	4620      	mov	r0, r4
 800a4ca:	f7ff ffab 	bl	800a424 <HAL_LTDC_ErrorCallback>
 800a4ce:	e7ba      	b.n	800a446 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800a4d0:	6823      	ldr	r3, [r4, #0]
 800a4d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a4d4:	f022 0201 	bic.w	r2, r2, #1
 800a4d8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800a4da:	2201      	movs	r2, #1
 800a4dc:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800a4de:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800a4e0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800a4e4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800a4e8:	4620      	mov	r0, r4
 800a4ea:	f7f6 ff1b 	bl	8001324 <HAL_LTDC_LineEventCallback>
 800a4ee:	e7ae      	b.n	800a44e <HAL_LTDC_IRQHandler+0x22>

0800a4f0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800a4f0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800a4f4:	2b01      	cmp	r3, #1
 800a4f6:	f000 80c2 	beq.w	800a67e <HAL_LTDC_ConfigLayer+0x18e>
{
 800a4fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800a4fe:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800a502:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800a506:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a50a:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800a50c:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a50e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800a512:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800a516:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800a51a:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800a51e:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800a522:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800a526:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800a528:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800a52c:	460c      	mov	r4, r1
 800a52e:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800a530:	9301      	str	r3, [sp, #4]
 800a532:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800a534:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a536:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800a53a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800a53e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800a540:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800a542:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800a546:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a548:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800a54c:	6823      	ldr	r3, [r4, #0]
 800a54e:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800a552:	9b01      	ldr	r3, [sp, #4]
 800a554:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800a558:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800a55c:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800a55e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800a560:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800a564:	1c51      	adds	r1, r2, #1
 800a566:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800a56a:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800a56c:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800a56e:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800a572:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800a576:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800a57a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800a57e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800a582:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800a586:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800a58a:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800a58c:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800a58e:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800a592:	3301      	adds	r3, #1
 800a594:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800a598:	4403      	add	r3, r0
 800a59a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800a59e:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800a5a2:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800a5a6:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800a5a8:	f023 0307 	bic.w	r3, r3, #7
 800a5ac:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800a5b0:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800a5b4:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800a5b8:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800a5bc:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800a5c0:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800a5c4:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800a5c8:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800a5cc:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800a5d0:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800a5d4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800a5d8:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800a5dc:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800a5e0:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800a5e4:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800a5e8:	696b      	ldr	r3, [r5, #20]
 800a5ea:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800a5ee:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800a5f2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a5f6:	f023 0307 	bic.w	r3, r3, #7
 800a5fa:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800a5fe:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800a602:	4303      	orrs	r3, r0
 800a604:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800a608:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800a60c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800a60e:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800a612:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800a616:	bb69      	cbnz	r1, 800a674 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800a618:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800a61a:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800a61c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800a61e:	fb03 f707 	mul.w	r7, r3, r7
 800a622:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800a624:	fb02 f303 	mul.w	r3, r2, r3
 800a628:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800a62c:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800a630:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800a632:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800a636:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800a63a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800a63e:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800a642:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800a646:	f023 0307 	bic.w	r3, r3, #7
 800a64a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800a64e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800a652:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800a656:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800a658:	4313      	orrs	r3, r2
 800a65a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800a65e:	2300      	movs	r3, #0
  return HAL_OK;
 800a660:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800a662:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800a666:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800a66a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800a66e:	b003      	add	sp, #12
 800a670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800a674:	3901      	subs	r1, #1
 800a676:	2906      	cmp	r1, #6
 800a678:	d903      	bls.n	800a682 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800a67a:	2301      	movs	r3, #1
 800a67c:	e7cd      	b.n	800a61a <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800a67e:	2002      	movs	r0, #2
}
 800a680:	4770      	bx	lr
 800a682:	4b02      	ldr	r3, [pc, #8]	; (800a68c <HAL_LTDC_ConfigLayer+0x19c>)
 800a684:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800a688:	e7c7      	b.n	800a61a <HAL_LTDC_ConfigLayer+0x12a>
 800a68a:	bf00      	nop
 800a68c:	0802ba90 	.word	0x0802ba90

0800a690 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800a690:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800a694:	2b01      	cmp	r3, #1
 800a696:	d019      	beq.n	800a6cc <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800a698:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a69a:	2302      	movs	r3, #2
{
 800a69c:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a69e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800a6a2:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800a6a4:	4c0a      	ldr	r4, [pc, #40]	; (800a6d0 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800a6a6:	f023 0301 	bic.w	r3, r3, #1
 800a6aa:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800a6ac:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800a6ae:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800a6b0:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800a6b2:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800a6b6:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800a6ba:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800a6bc:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800a6c0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800a6c4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800a6c8:	4618      	mov	r0, r3
}
 800a6ca:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800a6cc:	2002      	movs	r0, #2
}
 800a6ce:	4770      	bx	lr
 800a6d0:	40016800 	.word	0x40016800

0800a6d4 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800a6d4:	2800      	cmp	r0, #0
 800a6d6:	f000 81a2 	beq.w	800aa1e <HAL_RCC_OscConfig+0x34a>
{
 800a6da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800a6de:	6803      	ldr	r3, [r0, #0]
 800a6e0:	07dd      	lsls	r5, r3, #31
{
 800a6e2:	b082      	sub	sp, #8
 800a6e4:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800a6e6:	d52f      	bpl.n	800a748 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800a6e8:	499e      	ldr	r1, [pc, #632]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a6ea:	688a      	ldr	r2, [r1, #8]
 800a6ec:	f002 020c 	and.w	r2, r2, #12
 800a6f0:	2a04      	cmp	r2, #4
 800a6f2:	f000 80ed 	beq.w	800a8d0 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800a6f6:	688a      	ldr	r2, [r1, #8]
 800a6f8:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800a6fc:	2a08      	cmp	r2, #8
 800a6fe:	f000 80e3 	beq.w	800a8c8 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a702:	6863      	ldr	r3, [r4, #4]
 800a704:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a708:	f000 80ec 	beq.w	800a8e4 <HAL_RCC_OscConfig+0x210>
 800a70c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800a710:	f000 8175 	beq.w	800a9fe <HAL_RCC_OscConfig+0x32a>
 800a714:	4d93      	ldr	r5, [pc, #588]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a716:	682a      	ldr	r2, [r5, #0]
 800a718:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800a71c:	602a      	str	r2, [r5, #0]
 800a71e:	682a      	ldr	r2, [r5, #0]
 800a720:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800a724:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800a726:	2b00      	cmp	r3, #0
 800a728:	f040 80e1 	bne.w	800a8ee <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800a72c:	f7fd fe94 	bl	8008458 <HAL_GetTick>
 800a730:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800a732:	e005      	b.n	800a740 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800a734:	f7fd fe90 	bl	8008458 <HAL_GetTick>
 800a738:	1b80      	subs	r0, r0, r6
 800a73a:	2864      	cmp	r0, #100	; 0x64
 800a73c:	f200 8101 	bhi.w	800a942 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800a740:	682b      	ldr	r3, [r5, #0]
 800a742:	039b      	lsls	r3, r3, #14
 800a744:	d4f6      	bmi.n	800a734 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800a746:	6823      	ldr	r3, [r4, #0]
 800a748:	079f      	lsls	r7, r3, #30
 800a74a:	d528      	bpl.n	800a79e <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800a74c:	4a85      	ldr	r2, [pc, #532]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a74e:	6891      	ldr	r1, [r2, #8]
 800a750:	f011 0f0c 	tst.w	r1, #12
 800a754:	f000 8090 	beq.w	800a878 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a758:	6891      	ldr	r1, [r2, #8]
 800a75a:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800a75e:	2908      	cmp	r1, #8
 800a760:	f000 8086 	beq.w	800a870 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800a764:	68e3      	ldr	r3, [r4, #12]
 800a766:	2b00      	cmp	r3, #0
 800a768:	f000 810e 	beq.w	800a988 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800a76c:	4b7e      	ldr	r3, [pc, #504]	; (800a968 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a76e:	4e7d      	ldr	r6, [pc, #500]	; (800a964 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800a770:	2201      	movs	r2, #1
 800a772:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800a774:	f7fd fe70 	bl	8008458 <HAL_GetTick>
 800a778:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a77a:	e005      	b.n	800a788 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800a77c:	f7fd fe6c 	bl	8008458 <HAL_GetTick>
 800a780:	1b40      	subs	r0, r0, r5
 800a782:	2802      	cmp	r0, #2
 800a784:	f200 80dd 	bhi.w	800a942 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a788:	6833      	ldr	r3, [r6, #0]
 800a78a:	0798      	lsls	r0, r3, #30
 800a78c:	d5f6      	bpl.n	800a77c <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a78e:	6833      	ldr	r3, [r6, #0]
 800a790:	6922      	ldr	r2, [r4, #16]
 800a792:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800a796:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800a79a:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a79c:	6823      	ldr	r3, [r4, #0]
 800a79e:	071a      	lsls	r2, r3, #28
 800a7a0:	d451      	bmi.n	800a846 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800a7a2:	0758      	lsls	r0, r3, #29
 800a7a4:	d52f      	bpl.n	800a806 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800a7a6:	4a6f      	ldr	r2, [pc, #444]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a7a8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a7aa:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800a7ae:	d07f      	beq.n	800a8b0 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800a7b0:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a7b2:	4e6e      	ldr	r6, [pc, #440]	; (800a96c <HAL_RCC_OscConfig+0x298>)
 800a7b4:	6833      	ldr	r3, [r6, #0]
 800a7b6:	05d9      	lsls	r1, r3, #23
 800a7b8:	f140 80b3 	bpl.w	800a922 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a7bc:	68a3      	ldr	r3, [r4, #8]
 800a7be:	2b01      	cmp	r3, #1
 800a7c0:	f000 80c3 	beq.w	800a94a <HAL_RCC_OscConfig+0x276>
 800a7c4:	2b05      	cmp	r3, #5
 800a7c6:	f000 812c 	beq.w	800aa22 <HAL_RCC_OscConfig+0x34e>
 800a7ca:	4e66      	ldr	r6, [pc, #408]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a7cc:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800a7ce:	f022 0201 	bic.w	r2, r2, #1
 800a7d2:	6732      	str	r2, [r6, #112]	; 0x70
 800a7d4:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800a7d6:	f022 0204 	bic.w	r2, r2, #4
 800a7da:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800a7dc:	2b00      	cmp	r3, #0
 800a7de:	f040 80b9 	bne.w	800a954 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800a7e2:	f7fd fe39 	bl	8008458 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a7e6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800a7ea:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a7ec:	e005      	b.n	800a7fa <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a7ee:	f7fd fe33 	bl	8008458 <HAL_GetTick>
 800a7f2:	1bc0      	subs	r0, r0, r7
 800a7f4:	4540      	cmp	r0, r8
 800a7f6:	f200 80a4 	bhi.w	800a942 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a7fa:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800a7fc:	0798      	lsls	r0, r3, #30
 800a7fe:	d4f6      	bmi.n	800a7ee <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800a800:	2d00      	cmp	r5, #0
 800a802:	f040 8106 	bne.w	800aa12 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800a806:	69a0      	ldr	r0, [r4, #24]
 800a808:	b1c8      	cbz	r0, 800a83e <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800a80a:	4d56      	ldr	r5, [pc, #344]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a80c:	68ab      	ldr	r3, [r5, #8]
 800a80e:	f003 030c 	and.w	r3, r3, #12
 800a812:	2b08      	cmp	r3, #8
 800a814:	f000 80c9 	beq.w	800a9aa <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800a818:	4b53      	ldr	r3, [pc, #332]	; (800a968 <HAL_RCC_OscConfig+0x294>)
 800a81a:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a81c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800a81e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a820:	f000 8109 	beq.w	800aa36 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800a824:	f7fd fe18 	bl	8008458 <HAL_GetTick>
 800a828:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a82a:	e005      	b.n	800a838 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a82c:	f7fd fe14 	bl	8008458 <HAL_GetTick>
 800a830:	1b00      	subs	r0, r0, r4
 800a832:	2802      	cmp	r0, #2
 800a834:	f200 8085 	bhi.w	800a942 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a838:	682b      	ldr	r3, [r5, #0]
 800a83a:	019b      	lsls	r3, r3, #6
 800a83c:	d4f6      	bmi.n	800a82c <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800a83e:	2000      	movs	r0, #0
}
 800a840:	b002      	add	sp, #8
 800a842:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800a846:	6963      	ldr	r3, [r4, #20]
 800a848:	b30b      	cbz	r3, 800a88e <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800a84a:	4b47      	ldr	r3, [pc, #284]	; (800a968 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a84c:	4e45      	ldr	r6, [pc, #276]	; (800a964 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800a84e:	2201      	movs	r2, #1
 800a850:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800a854:	f7fd fe00 	bl	8008458 <HAL_GetTick>
 800a858:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a85a:	e004      	b.n	800a866 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a85c:	f7fd fdfc 	bl	8008458 <HAL_GetTick>
 800a860:	1b40      	subs	r0, r0, r5
 800a862:	2802      	cmp	r0, #2
 800a864:	d86d      	bhi.n	800a942 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a866:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800a868:	079b      	lsls	r3, r3, #30
 800a86a:	d5f7      	bpl.n	800a85c <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800a86c:	6823      	ldr	r3, [r4, #0]
 800a86e:	e798      	b.n	800a7a2 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a870:	6852      	ldr	r2, [r2, #4]
 800a872:	0256      	lsls	r6, r2, #9
 800a874:	f53f af76 	bmi.w	800a764 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a878:	4a3a      	ldr	r2, [pc, #232]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a87a:	6812      	ldr	r2, [r2, #0]
 800a87c:	0795      	lsls	r5, r2, #30
 800a87e:	d544      	bpl.n	800a90a <HAL_RCC_OscConfig+0x236>
 800a880:	68e2      	ldr	r2, [r4, #12]
 800a882:	2a01      	cmp	r2, #1
 800a884:	d041      	beq.n	800a90a <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800a886:	2001      	movs	r0, #1
}
 800a888:	b002      	add	sp, #8
 800a88a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800a88e:	4a36      	ldr	r2, [pc, #216]	; (800a968 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a890:	4e34      	ldr	r6, [pc, #208]	; (800a964 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800a892:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800a896:	f7fd fddf 	bl	8008458 <HAL_GetTick>
 800a89a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a89c:	e004      	b.n	800a8a8 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a89e:	f7fd fddb 	bl	8008458 <HAL_GetTick>
 800a8a2:	1b40      	subs	r0, r0, r5
 800a8a4:	2802      	cmp	r0, #2
 800a8a6:	d84c      	bhi.n	800a942 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a8a8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800a8aa:	079f      	lsls	r7, r3, #30
 800a8ac:	d4f7      	bmi.n	800a89e <HAL_RCC_OscConfig+0x1ca>
 800a8ae:	e7dd      	b.n	800a86c <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800a8b0:	9301      	str	r3, [sp, #4]
 800a8b2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a8b4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a8b8:	6413      	str	r3, [r2, #64]	; 0x40
 800a8ba:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a8bc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a8c0:	9301      	str	r3, [sp, #4]
 800a8c2:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800a8c4:	2501      	movs	r5, #1
 800a8c6:	e774      	b.n	800a7b2 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800a8c8:	684a      	ldr	r2, [r1, #4]
 800a8ca:	0250      	lsls	r0, r2, #9
 800a8cc:	f57f af19 	bpl.w	800a702 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800a8d0:	4a24      	ldr	r2, [pc, #144]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a8d2:	6812      	ldr	r2, [r2, #0]
 800a8d4:	0391      	lsls	r1, r2, #14
 800a8d6:	f57f af37 	bpl.w	800a748 <HAL_RCC_OscConfig+0x74>
 800a8da:	6862      	ldr	r2, [r4, #4]
 800a8dc:	2a00      	cmp	r2, #0
 800a8de:	f47f af33 	bne.w	800a748 <HAL_RCC_OscConfig+0x74>
 800a8e2:	e7d0      	b.n	800a886 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a8e4:	4a1f      	ldr	r2, [pc, #124]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a8e6:	6813      	ldr	r3, [r2, #0]
 800a8e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800a8ec:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800a8ee:	f7fd fdb3 	bl	8008458 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a8f2:	4e1c      	ldr	r6, [pc, #112]	; (800a964 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800a8f4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a8f6:	e004      	b.n	800a902 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800a8f8:	f7fd fdae 	bl	8008458 <HAL_GetTick>
 800a8fc:	1b40      	subs	r0, r0, r5
 800a8fe:	2864      	cmp	r0, #100	; 0x64
 800a900:	d81f      	bhi.n	800a942 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a902:	6833      	ldr	r3, [r6, #0]
 800a904:	039a      	lsls	r2, r3, #14
 800a906:	d5f7      	bpl.n	800a8f8 <HAL_RCC_OscConfig+0x224>
 800a908:	e71d      	b.n	800a746 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a90a:	4916      	ldr	r1, [pc, #88]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a90c:	6920      	ldr	r0, [r4, #16]
 800a90e:	680a      	ldr	r2, [r1, #0]
 800a910:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800a914:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800a918:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a91a:	071a      	lsls	r2, r3, #28
 800a91c:	f57f af41 	bpl.w	800a7a2 <HAL_RCC_OscConfig+0xce>
 800a920:	e791      	b.n	800a846 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800a922:	6833      	ldr	r3, [r6, #0]
 800a924:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a928:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800a92a:	f7fd fd95 	bl	8008458 <HAL_GetTick>
 800a92e:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a930:	6833      	ldr	r3, [r6, #0]
 800a932:	05da      	lsls	r2, r3, #23
 800a934:	f53f af42 	bmi.w	800a7bc <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800a938:	f7fd fd8e 	bl	8008458 <HAL_GetTick>
 800a93c:	1bc0      	subs	r0, r0, r7
 800a93e:	2802      	cmp	r0, #2
 800a940:	d9f6      	bls.n	800a930 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800a942:	2003      	movs	r0, #3
}
 800a944:	b002      	add	sp, #8
 800a946:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a94a:	4a06      	ldr	r2, [pc, #24]	; (800a964 <HAL_RCC_OscConfig+0x290>)
 800a94c:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800a94e:	f043 0301 	orr.w	r3, r3, #1
 800a952:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800a954:	f7fd fd80 	bl	8008458 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a958:	4f02      	ldr	r7, [pc, #8]	; (800a964 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800a95a:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a95c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a960:	e00b      	b.n	800a97a <HAL_RCC_OscConfig+0x2a6>
 800a962:	bf00      	nop
 800a964:	40023800 	.word	0x40023800
 800a968:	42470000 	.word	0x42470000
 800a96c:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a970:	f7fd fd72 	bl	8008458 <HAL_GetTick>
 800a974:	1b80      	subs	r0, r0, r6
 800a976:	4540      	cmp	r0, r8
 800a978:	d8e3      	bhi.n	800a942 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a97a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800a97c:	079b      	lsls	r3, r3, #30
 800a97e:	d5f7      	bpl.n	800a970 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800a980:	2d00      	cmp	r5, #0
 800a982:	f43f af40 	beq.w	800a806 <HAL_RCC_OscConfig+0x132>
 800a986:	e044      	b.n	800aa12 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800a988:	4a42      	ldr	r2, [pc, #264]	; (800aa94 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a98a:	4e43      	ldr	r6, [pc, #268]	; (800aa98 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800a98c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800a98e:	f7fd fd63 	bl	8008458 <HAL_GetTick>
 800a992:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a994:	e004      	b.n	800a9a0 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800a996:	f7fd fd5f 	bl	8008458 <HAL_GetTick>
 800a99a:	1b40      	subs	r0, r0, r5
 800a99c:	2802      	cmp	r0, #2
 800a99e:	d8d0      	bhi.n	800a942 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a9a0:	6833      	ldr	r3, [r6, #0]
 800a9a2:	0799      	lsls	r1, r3, #30
 800a9a4:	d4f7      	bmi.n	800a996 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a9a6:	6823      	ldr	r3, [r4, #0]
 800a9a8:	e6f9      	b.n	800a79e <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800a9aa:	2801      	cmp	r0, #1
 800a9ac:	f43f af48 	beq.w	800a840 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800a9b0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a9b2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a9b4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a9b8:	4291      	cmp	r1, r2
 800a9ba:	f47f af64 	bne.w	800a886 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a9be:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a9c0:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a9c4:	4291      	cmp	r1, r2
 800a9c6:	f47f af5e 	bne.w	800a886 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a9ca:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a9cc:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800a9d0:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a9d2:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800a9d6:	f47f af56 	bne.w	800a886 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a9da:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a9dc:	0852      	lsrs	r2, r2, #1
 800a9de:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800a9e2:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a9e4:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800a9e8:	f47f af4d 	bne.w	800a886 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800a9ec:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a9ee:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a9f2:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800a9f6:	bf14      	ite	ne
 800a9f8:	2001      	movne	r0, #1
 800a9fa:	2000      	moveq	r0, #0
 800a9fc:	e720      	b.n	800a840 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a9fe:	4b26      	ldr	r3, [pc, #152]	; (800aa98 <HAL_RCC_OscConfig+0x3c4>)
 800aa00:	681a      	ldr	r2, [r3, #0]
 800aa02:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800aa06:	601a      	str	r2, [r3, #0]
 800aa08:	681a      	ldr	r2, [r3, #0]
 800aa0a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800aa0e:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800aa10:	e76d      	b.n	800a8ee <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800aa12:	4a21      	ldr	r2, [pc, #132]	; (800aa98 <HAL_RCC_OscConfig+0x3c4>)
 800aa14:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800aa16:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800aa1a:	6413      	str	r3, [r2, #64]	; 0x40
 800aa1c:	e6f3      	b.n	800a806 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800aa1e:	2001      	movs	r0, #1
}
 800aa20:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800aa22:	4b1d      	ldr	r3, [pc, #116]	; (800aa98 <HAL_RCC_OscConfig+0x3c4>)
 800aa24:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800aa26:	f042 0204 	orr.w	r2, r2, #4
 800aa2a:	671a      	str	r2, [r3, #112]	; 0x70
 800aa2c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800aa2e:	f042 0201 	orr.w	r2, r2, #1
 800aa32:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800aa34:	e78e      	b.n	800a954 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800aa36:	f7fd fd0f 	bl	8008458 <HAL_GetTick>
 800aa3a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800aa3c:	e005      	b.n	800aa4a <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800aa3e:	f7fd fd0b 	bl	8008458 <HAL_GetTick>
 800aa42:	1b80      	subs	r0, r0, r6
 800aa44:	2802      	cmp	r0, #2
 800aa46:	f63f af7c 	bhi.w	800a942 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800aa4a:	682b      	ldr	r3, [r5, #0]
 800aa4c:	0199      	lsls	r1, r3, #6
 800aa4e:	d4f6      	bmi.n	800aa3e <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800aa50:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800aa54:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa56:	430b      	orrs	r3, r1
 800aa58:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800aa5c:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800aa60:	0852      	lsrs	r2, r2, #1
 800aa62:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800aa66:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800aa68:	490a      	ldr	r1, [pc, #40]	; (800aa94 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800aa6a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800aa6e:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800aa70:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800aa72:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800aa74:	f7fd fcf0 	bl	8008458 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800aa78:	4d07      	ldr	r5, [pc, #28]	; (800aa98 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800aa7a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800aa7c:	e005      	b.n	800aa8a <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800aa7e:	f7fd fceb 	bl	8008458 <HAL_GetTick>
 800aa82:	1b00      	subs	r0, r0, r4
 800aa84:	2802      	cmp	r0, #2
 800aa86:	f63f af5c 	bhi.w	800a942 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800aa8a:	682b      	ldr	r3, [r5, #0]
 800aa8c:	019a      	lsls	r2, r3, #6
 800aa8e:	d5f6      	bpl.n	800aa7e <HAL_RCC_OscConfig+0x3aa>
 800aa90:	e6d5      	b.n	800a83e <HAL_RCC_OscConfig+0x16a>
 800aa92:	bf00      	nop
 800aa94:	42470000 	.word	0x42470000
 800aa98:	40023800 	.word	0x40023800

0800aa9c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800aa9c:	4916      	ldr	r1, [pc, #88]	; (800aaf8 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800aa9e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800aaa0:	688b      	ldr	r3, [r1, #8]
 800aaa2:	f003 030c 	and.w	r3, r3, #12
 800aaa6:	2b04      	cmp	r3, #4
 800aaa8:	d01b      	beq.n	800aae2 <HAL_RCC_GetSysClockFreq+0x46>
 800aaaa:	2b08      	cmp	r3, #8
 800aaac:	d117      	bne.n	800aade <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800aaae:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800aab0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800aab2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800aab4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800aab8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800aabc:	d113      	bne.n	800aae6 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800aabe:	480f      	ldr	r0, [pc, #60]	; (800aafc <HAL_RCC_GetSysClockFreq+0x60>)
 800aac0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800aac4:	fba1 0100 	umull	r0, r1, r1, r0
 800aac8:	f7f5 fbe2 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800aacc:	4b0a      	ldr	r3, [pc, #40]	; (800aaf8 <HAL_RCC_GetSysClockFreq+0x5c>)
 800aace:	685b      	ldr	r3, [r3, #4]
 800aad0:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800aad4:	3301      	adds	r3, #1
 800aad6:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800aad8:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800aadc:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800aade:	4807      	ldr	r0, [pc, #28]	; (800aafc <HAL_RCC_GetSysClockFreq+0x60>)
}
 800aae0:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800aae2:	4807      	ldr	r0, [pc, #28]	; (800ab00 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800aae4:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800aae6:	4806      	ldr	r0, [pc, #24]	; (800ab00 <HAL_RCC_GetSysClockFreq+0x64>)
 800aae8:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800aaec:	2300      	movs	r3, #0
 800aaee:	fba1 0100 	umull	r0, r1, r1, r0
 800aaf2:	f7f5 fbcd 	bl	8000290 <__aeabi_uldivmod>
 800aaf6:	e7e9      	b.n	800aacc <HAL_RCC_GetSysClockFreq+0x30>
 800aaf8:	40023800 	.word	0x40023800
 800aafc:	00f42400 	.word	0x00f42400
 800ab00:	007a1200 	.word	0x007a1200

0800ab04 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800ab04:	2800      	cmp	r0, #0
 800ab06:	f000 8087 	beq.w	800ac18 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800ab0a:	4a48      	ldr	r2, [pc, #288]	; (800ac2c <HAL_RCC_ClockConfig+0x128>)
 800ab0c:	6813      	ldr	r3, [r2, #0]
 800ab0e:	f003 030f 	and.w	r3, r3, #15
 800ab12:	428b      	cmp	r3, r1
{
 800ab14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab18:	460d      	mov	r5, r1
 800ab1a:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800ab1c:	d209      	bcs.n	800ab32 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800ab1e:	b2cb      	uxtb	r3, r1
 800ab20:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800ab22:	6813      	ldr	r3, [r2, #0]
 800ab24:	f003 030f 	and.w	r3, r3, #15
 800ab28:	428b      	cmp	r3, r1
 800ab2a:	d002      	beq.n	800ab32 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800ab2c:	2001      	movs	r0, #1
}
 800ab2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800ab32:	6823      	ldr	r3, [r4, #0]
 800ab34:	0798      	lsls	r0, r3, #30
 800ab36:	d514      	bpl.n	800ab62 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800ab38:	0759      	lsls	r1, r3, #29
 800ab3a:	d504      	bpl.n	800ab46 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800ab3c:	493c      	ldr	r1, [pc, #240]	; (800ac30 <HAL_RCC_ClockConfig+0x12c>)
 800ab3e:	688a      	ldr	r2, [r1, #8]
 800ab40:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800ab44:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800ab46:	071a      	lsls	r2, r3, #28
 800ab48:	d504      	bpl.n	800ab54 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800ab4a:	4939      	ldr	r1, [pc, #228]	; (800ac30 <HAL_RCC_ClockConfig+0x12c>)
 800ab4c:	688a      	ldr	r2, [r1, #8]
 800ab4e:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800ab52:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800ab54:	4936      	ldr	r1, [pc, #216]	; (800ac30 <HAL_RCC_ClockConfig+0x12c>)
 800ab56:	68a0      	ldr	r0, [r4, #8]
 800ab58:	688a      	ldr	r2, [r1, #8]
 800ab5a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800ab5e:	4302      	orrs	r2, r0
 800ab60:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800ab62:	07df      	lsls	r7, r3, #31
 800ab64:	d521      	bpl.n	800abaa <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800ab66:	6862      	ldr	r2, [r4, #4]
 800ab68:	2a01      	cmp	r2, #1
 800ab6a:	d057      	beq.n	800ac1c <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800ab6c:	1e93      	subs	r3, r2, #2
 800ab6e:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ab70:	4b2f      	ldr	r3, [pc, #188]	; (800ac30 <HAL_RCC_ClockConfig+0x12c>)
 800ab72:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800ab74:	d94d      	bls.n	800ac12 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ab76:	0799      	lsls	r1, r3, #30
 800ab78:	d5d8      	bpl.n	800ab2c <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800ab7a:	4e2d      	ldr	r6, [pc, #180]	; (800ac30 <HAL_RCC_ClockConfig+0x12c>)
 800ab7c:	68b3      	ldr	r3, [r6, #8]
 800ab7e:	f023 0303 	bic.w	r3, r3, #3
 800ab82:	4313      	orrs	r3, r2
 800ab84:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800ab86:	f7fd fc67 	bl	8008458 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800ab8a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800ab8e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800ab90:	e004      	b.n	800ab9c <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800ab92:	f7fd fc61 	bl	8008458 <HAL_GetTick>
 800ab96:	1bc0      	subs	r0, r0, r7
 800ab98:	4540      	cmp	r0, r8
 800ab9a:	d844      	bhi.n	800ac26 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800ab9c:	68b3      	ldr	r3, [r6, #8]
 800ab9e:	6862      	ldr	r2, [r4, #4]
 800aba0:	f003 030c 	and.w	r3, r3, #12
 800aba4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800aba8:	d1f3      	bne.n	800ab92 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800abaa:	4a20      	ldr	r2, [pc, #128]	; (800ac2c <HAL_RCC_ClockConfig+0x128>)
 800abac:	6813      	ldr	r3, [r2, #0]
 800abae:	f003 030f 	and.w	r3, r3, #15
 800abb2:	42ab      	cmp	r3, r5
 800abb4:	d906      	bls.n	800abc4 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800abb6:	b2eb      	uxtb	r3, r5
 800abb8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800abba:	6813      	ldr	r3, [r2, #0]
 800abbc:	f003 030f 	and.w	r3, r3, #15
 800abc0:	42ab      	cmp	r3, r5
 800abc2:	d1b3      	bne.n	800ab2c <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800abc4:	6823      	ldr	r3, [r4, #0]
 800abc6:	075a      	lsls	r2, r3, #29
 800abc8:	d506      	bpl.n	800abd8 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800abca:	4919      	ldr	r1, [pc, #100]	; (800ac30 <HAL_RCC_ClockConfig+0x12c>)
 800abcc:	68e0      	ldr	r0, [r4, #12]
 800abce:	688a      	ldr	r2, [r1, #8]
 800abd0:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800abd4:	4302      	orrs	r2, r0
 800abd6:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800abd8:	071b      	lsls	r3, r3, #28
 800abda:	d507      	bpl.n	800abec <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800abdc:	4a14      	ldr	r2, [pc, #80]	; (800ac30 <HAL_RCC_ClockConfig+0x12c>)
 800abde:	6921      	ldr	r1, [r4, #16]
 800abe0:	6893      	ldr	r3, [r2, #8]
 800abe2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800abe6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800abea:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800abec:	f7ff ff56 	bl	800aa9c <HAL_RCC_GetSysClockFreq>
 800abf0:	4a0f      	ldr	r2, [pc, #60]	; (800ac30 <HAL_RCC_ClockConfig+0x12c>)
 800abf2:	4c10      	ldr	r4, [pc, #64]	; (800ac34 <HAL_RCC_ClockConfig+0x130>)
 800abf4:	6892      	ldr	r2, [r2, #8]
 800abf6:	4910      	ldr	r1, [pc, #64]	; (800ac38 <HAL_RCC_ClockConfig+0x134>)
 800abf8:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800abfc:	4603      	mov	r3, r0
 800abfe:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800ac00:	480e      	ldr	r0, [pc, #56]	; (800ac3c <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800ac02:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800ac04:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800ac06:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800ac08:	f7f7 fa32 	bl	8002070 <HAL_InitTick>
  return HAL_OK;
 800ac0c:	2000      	movs	r0, #0
}
 800ac0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ac12:	0198      	lsls	r0, r3, #6
 800ac14:	d4b1      	bmi.n	800ab7a <HAL_RCC_ClockConfig+0x76>
 800ac16:	e789      	b.n	800ab2c <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800ac18:	2001      	movs	r0, #1
}
 800ac1a:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ac1c:	4b04      	ldr	r3, [pc, #16]	; (800ac30 <HAL_RCC_ClockConfig+0x12c>)
 800ac1e:	681b      	ldr	r3, [r3, #0]
 800ac20:	039e      	lsls	r6, r3, #14
 800ac22:	d4aa      	bmi.n	800ab7a <HAL_RCC_ClockConfig+0x76>
 800ac24:	e782      	b.n	800ab2c <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800ac26:	2003      	movs	r0, #3
 800ac28:	e781      	b.n	800ab2e <HAL_RCC_ClockConfig+0x2a>
 800ac2a:	bf00      	nop
 800ac2c:	40023c00 	.word	0x40023c00
 800ac30:	40023800 	.word	0x40023800
 800ac34:	0802ba78 	.word	0x0802ba78
 800ac38:	20000078 	.word	0x20000078
 800ac3c:	20000080 	.word	0x20000080

0800ac40 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800ac40:	4b04      	ldr	r3, [pc, #16]	; (800ac54 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800ac42:	4905      	ldr	r1, [pc, #20]	; (800ac58 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800ac44:	689b      	ldr	r3, [r3, #8]
 800ac46:	4a05      	ldr	r2, [pc, #20]	; (800ac5c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800ac48:	6808      	ldr	r0, [r1, #0]
 800ac4a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800ac4e:	5cd3      	ldrb	r3, [r2, r3]
}
 800ac50:	40d8      	lsrs	r0, r3
 800ac52:	4770      	bx	lr
 800ac54:	40023800 	.word	0x40023800
 800ac58:	20000078 	.word	0x20000078
 800ac5c:	0802ba88 	.word	0x0802ba88

0800ac60 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800ac60:	4b0e      	ldr	r3, [pc, #56]	; (800ac9c <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800ac62:	220f      	movs	r2, #15
 800ac64:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800ac66:	689a      	ldr	r2, [r3, #8]
 800ac68:	f002 0203 	and.w	r2, r2, #3
 800ac6c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800ac6e:	689a      	ldr	r2, [r3, #8]
 800ac70:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800ac74:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800ac76:	689a      	ldr	r2, [r3, #8]
 800ac78:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800ac7c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800ac7e:	689b      	ldr	r3, [r3, #8]
 800ac80:	08db      	lsrs	r3, r3, #3
{
 800ac82:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800ac84:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800ac88:	4c05      	ldr	r4, [pc, #20]	; (800aca0 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800ac8a:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800ac8c:	6823      	ldr	r3, [r4, #0]
}
 800ac8e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800ac92:	f003 030f 	and.w	r3, r3, #15
 800ac96:	600b      	str	r3, [r1, #0]
}
 800ac98:	4770      	bx	lr
 800ac9a:	bf00      	nop
 800ac9c:	40023800 	.word	0x40023800
 800aca0:	40023c00 	.word	0x40023c00

0800aca4 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800aca4:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800aca6:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800aca8:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800acac:	b083      	sub	sp, #12
 800acae:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800acb0:	d111      	bne.n	800acd6 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800acb2:	f013 0f0c 	tst.w	r3, #12
 800acb6:	d16f      	bne.n	800ad98 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800acb8:	0698      	lsls	r0, r3, #26
 800acba:	f100 80c2 	bmi.w	800ae42 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800acbe:	f013 0310 	ands.w	r3, r3, #16
 800acc2:	f000 80bb 	beq.w	800ae3c <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800acc6:	4b89      	ldr	r3, [pc, #548]	; (800aeec <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800acc8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800accc:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800acd0:	2000      	movs	r0, #0
}
 800acd2:	b003      	add	sp, #12
 800acd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800acd6:	4b86      	ldr	r3, [pc, #536]	; (800aef0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800acd8:	4e86      	ldr	r6, [pc, #536]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800acda:	2200      	movs	r2, #0
 800acdc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800acde:	f7fd fbbb 	bl	8008458 <HAL_GetTick>
 800ace2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800ace4:	e004      	b.n	800acf0 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800ace6:	f7fd fbb7 	bl	8008458 <HAL_GetTick>
 800acea:	1b43      	subs	r3, r0, r5
 800acec:	2b02      	cmp	r3, #2
 800acee:	d850      	bhi.n	800ad92 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800acf0:	6833      	ldr	r3, [r6, #0]
 800acf2:	0118      	lsls	r0, r3, #4
 800acf4:	d4f7      	bmi.n	800ace6 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800acf6:	6823      	ldr	r3, [r4, #0]
 800acf8:	07d9      	lsls	r1, r3, #31
 800acfa:	d506      	bpl.n	800ad0a <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800acfc:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800ad00:	0712      	lsls	r2, r2, #28
 800ad02:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800ad06:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800ad0a:	079a      	lsls	r2, r3, #30
 800ad0c:	d515      	bpl.n	800ad3a <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800ad0e:	4979      	ldr	r1, [pc, #484]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800ad10:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800ad12:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800ad16:	6865      	ldr	r5, [r4, #4]
 800ad18:	0612      	lsls	r2, r2, #24
 800ad1a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800ad1e:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800ad22:	4302      	orrs	r2, r0
 800ad24:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800ad28:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800ad2c:	69e2      	ldr	r2, [r4, #28]
 800ad2e:	f020 001f 	bic.w	r0, r0, #31
 800ad32:	3a01      	subs	r2, #1
 800ad34:	4302      	orrs	r2, r0
 800ad36:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800ad3a:	065b      	lsls	r3, r3, #25
 800ad3c:	d509      	bpl.n	800ad52 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800ad3e:	1d20      	adds	r0, r4, #4
 800ad40:	c80b      	ldmia	r0, {r0, r1, r3}
 800ad42:	061b      	lsls	r3, r3, #24
 800ad44:	4a6b      	ldr	r2, [pc, #428]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800ad46:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800ad4a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800ad4e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800ad52:	4b67      	ldr	r3, [pc, #412]	; (800aef0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800ad54:	4e67      	ldr	r6, [pc, #412]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800ad56:	2201      	movs	r2, #1
 800ad58:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800ad5a:	f7fd fb7d 	bl	8008458 <HAL_GetTick>
 800ad5e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800ad60:	e004      	b.n	800ad6c <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800ad62:	f7fd fb79 	bl	8008458 <HAL_GetTick>
 800ad66:	1b40      	subs	r0, r0, r5
 800ad68:	2802      	cmp	r0, #2
 800ad6a:	d812      	bhi.n	800ad92 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800ad6c:	6833      	ldr	r3, [r6, #0]
 800ad6e:	011f      	lsls	r7, r3, #4
 800ad70:	d5f7      	bpl.n	800ad62 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800ad72:	6823      	ldr	r3, [r4, #0]
 800ad74:	e79d      	b.n	800acb2 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800ad76:	f7fd fb6f 	bl	8008458 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ad7a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800ad7e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800ad80:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800ad82:	079b      	lsls	r3, r3, #30
 800ad84:	f100 80a5 	bmi.w	800aed2 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ad88:	f7fd fb66 	bl	8008458 <HAL_GetTick>
 800ad8c:	1b80      	subs	r0, r0, r6
 800ad8e:	42b8      	cmp	r0, r7
 800ad90:	d9f6      	bls.n	800ad80 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800ad92:	2003      	movs	r0, #3
}
 800ad94:	b003      	add	sp, #12
 800ad96:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800ad98:	4b55      	ldr	r3, [pc, #340]	; (800aef0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800ad9a:	4e56      	ldr	r6, [pc, #344]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800ad9c:	2200      	movs	r2, #0
 800ad9e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800ada0:	f7fd fb5a 	bl	8008458 <HAL_GetTick>
 800ada4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800ada6:	e004      	b.n	800adb2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800ada8:	f7fd fb56 	bl	8008458 <HAL_GetTick>
 800adac:	1b43      	subs	r3, r0, r5
 800adae:	2b02      	cmp	r3, #2
 800adb0:	d8ef      	bhi.n	800ad92 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800adb2:	6833      	ldr	r3, [r6, #0]
 800adb4:	0098      	lsls	r0, r3, #2
 800adb6:	d4f7      	bmi.n	800ada8 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800adb8:	6822      	ldr	r2, [r4, #0]
 800adba:	0751      	lsls	r1, r2, #29
 800adbc:	d515      	bpl.n	800adea <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800adbe:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800adc0:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800adc4:	6920      	ldr	r0, [r4, #16]
 800adc6:	061b      	lsls	r3, r3, #24
 800adc8:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800adcc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800add0:	430b      	orrs	r3, r1
 800add2:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800add6:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800adda:	6a21      	ldr	r1, [r4, #32]
 800addc:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800ade0:	3901      	subs	r1, #1
 800ade2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800ade6:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800adea:	0713      	lsls	r3, r2, #28
 800adec:	d514      	bpl.n	800ae18 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800adee:	4a41      	ldr	r2, [pc, #260]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800adf0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800adf2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800adf6:	6920      	ldr	r0, [r4, #16]
 800adf8:	071b      	lsls	r3, r3, #28
 800adfa:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800adfe:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800ae02:	430b      	orrs	r3, r1
 800ae04:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800ae08:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800ae0c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ae0e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800ae12:	430b      	orrs	r3, r1
 800ae14:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800ae18:	4b35      	ldr	r3, [pc, #212]	; (800aef0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800ae1a:	4e36      	ldr	r6, [pc, #216]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800ae1c:	2201      	movs	r2, #1
 800ae1e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800ae20:	f7fd fb1a 	bl	8008458 <HAL_GetTick>
 800ae24:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800ae26:	e004      	b.n	800ae32 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800ae28:	f7fd fb16 	bl	8008458 <HAL_GetTick>
 800ae2c:	1b40      	subs	r0, r0, r5
 800ae2e:	2802      	cmp	r0, #2
 800ae30:	d8af      	bhi.n	800ad92 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800ae32:	6833      	ldr	r3, [r6, #0]
 800ae34:	009f      	lsls	r7, r3, #2
 800ae36:	d5f7      	bpl.n	800ae28 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800ae38:	6823      	ldr	r3, [r4, #0]
 800ae3a:	e73d      	b.n	800acb8 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800ae3c:	4618      	mov	r0, r3
}
 800ae3e:	b003      	add	sp, #12
 800ae40:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800ae42:	4b2c      	ldr	r3, [pc, #176]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800ae44:	4d2c      	ldr	r5, [pc, #176]	; (800aef8 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800ae46:	2200      	movs	r2, #0
 800ae48:	9201      	str	r2, [sp, #4]
 800ae4a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ae4c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800ae50:	641a      	str	r2, [r3, #64]	; 0x40
 800ae52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ae54:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800ae58:	9301      	str	r3, [sp, #4]
 800ae5a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800ae5c:	682b      	ldr	r3, [r5, #0]
 800ae5e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ae62:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800ae64:	f7fd faf8 	bl	8008458 <HAL_GetTick>
 800ae68:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800ae6a:	e004      	b.n	800ae76 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800ae6c:	f7fd faf4 	bl	8008458 <HAL_GetTick>
 800ae70:	1b83      	subs	r3, r0, r6
 800ae72:	2b02      	cmp	r3, #2
 800ae74:	d88d      	bhi.n	800ad92 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800ae76:	682b      	ldr	r3, [r5, #0]
 800ae78:	05d9      	lsls	r1, r3, #23
 800ae7a:	d5f7      	bpl.n	800ae6c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800ae7c:	4d1d      	ldr	r5, [pc, #116]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800ae7e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800ae80:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800ae82:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800ae86:	d111      	bne.n	800aeac <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800ae88:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800ae8c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800ae90:	d021      	beq.n	800aed6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800ae92:	4918      	ldr	r1, [pc, #96]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800ae94:	688a      	ldr	r2, [r1, #8]
 800ae96:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800ae9a:	608a      	str	r2, [r1, #8]
 800ae9c:	4a15      	ldr	r2, [pc, #84]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800ae9e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800aea0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800aea4:	430b      	orrs	r3, r1
 800aea6:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800aea8:	6823      	ldr	r3, [r4, #0]
 800aeaa:	e708      	b.n	800acbe <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800aeac:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800aeb0:	4291      	cmp	r1, r2
 800aeb2:	d0eb      	beq.n	800ae8c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800aeb4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800aeb6:	4a0e      	ldr	r2, [pc, #56]	; (800aef0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800aeb8:	2101      	movs	r1, #1
 800aeba:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800aebe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800aec2:	2100      	movs	r1, #0
 800aec4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800aec8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800aeca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800aecc:	07da      	lsls	r2, r3, #31
 800aece:	f53f af52 	bmi.w	800ad76 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800aed2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800aed4:	e7d8      	b.n	800ae88 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800aed6:	4807      	ldr	r0, [pc, #28]	; (800aef4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800aed8:	6882      	ldr	r2, [r0, #8]
 800aeda:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800aede:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800aee2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800aee6:	430a      	orrs	r2, r1
 800aee8:	6082      	str	r2, [r0, #8]
 800aeea:	e7d7      	b.n	800ae9c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800aeec:	42471000 	.word	0x42471000
 800aef0:	42470000 	.word	0x42470000
 800aef4:	40023800 	.word	0x40023800
 800aef8:	40007000 	.word	0x40007000

0800aefc <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800aefc:	b1f0      	cbz	r0, 800af3c <HAL_SDRAM_Init+0x40>
{
 800aefe:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800af00:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800af04:	460d      	mov	r5, r1
 800af06:	4604      	mov	r4, r0
 800af08:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800af0c:	b18b      	cbz	r3, 800af32 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800af0e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800af10:	2302      	movs	r3, #2
 800af12:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800af16:	f851 0b04 	ldr.w	r0, [r1], #4
 800af1a:	f000 ffcd 	bl	800beb8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800af1e:	e9d4 0200 	ldrd	r0, r2, [r4]
 800af22:	4629      	mov	r1, r5
 800af24:	f001 f806 	bl	800bf34 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800af28:	2301      	movs	r3, #1
 800af2a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800af2e:	2000      	movs	r0, #0
}
 800af30:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800af32:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800af36:	f7f7 f833 	bl	8001fa0 <HAL_SDRAM_MspInit>
 800af3a:	e7e8      	b.n	800af0e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800af3c:	2001      	movs	r0, #1
}
 800af3e:	4770      	bx	lr

0800af40 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800af40:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800af42:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800af46:	2b02      	cmp	r3, #2
{
 800af48:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800af4a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800af4c:	d004      	beq.n	800af58 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800af4e:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800af52:	2c01      	cmp	r4, #1
 800af54:	d001      	beq.n	800af5a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800af56:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800af58:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800af5a:	460e      	mov	r6, r1
 800af5c:	2302      	movs	r3, #2
 800af5e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800af62:	6828      	ldr	r0, [r5, #0]
 800af64:	f001 f832 	bl	800bfcc <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800af68:	6833      	ldr	r3, [r6, #0]
 800af6a:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800af6c:	bf06      	itte	eq
 800af6e:	2305      	moveq	r3, #5
 800af70:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800af74:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800af78:	2000      	movs	r0, #0
}
 800af7a:	bd70      	pop	{r4, r5, r6, pc}

0800af7c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800af7c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800af7e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800af82:	2b02      	cmp	r3, #2
{
 800af84:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800af86:	b2d8      	uxtb	r0, r3
 800af88:	d005      	beq.n	800af96 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800af8a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800af8e:	2b01      	cmp	r3, #1
 800af90:	b2dd      	uxtb	r5, r3
 800af92:	d001      	beq.n	800af98 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800af94:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800af96:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800af98:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800af9a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800af9c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800afa0:	f001 f83e 	bl	800c020 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800afa4:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800afa8:	2000      	movs	r0, #0
}
 800afaa:	bd38      	pop	{r3, r4, r5, pc}

0800afac <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800afac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800afb0:	b082      	sub	sp, #8
 800afb2:	461d      	mov	r5, r3
 800afb4:	4616      	mov	r6, r2
 800afb6:	460c      	mov	r4, r1
 800afb8:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800afba:	f7fd fa4d 	bl	8008458 <HAL_GetTick>
 800afbe:	4435      	add	r5, r6
 800afc0:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800afc2:	f7fd fa49 	bl	8008458 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800afc6:	4b27      	ldr	r3, [pc, #156]	; (800b064 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800afc8:	681b      	ldr	r3, [r3, #0]
 800afca:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800afce:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800afd2:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800afd4:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800afd6:	1c73      	adds	r3, r6, #1
 800afd8:	6839      	ldr	r1, [r7, #0]
 800afda:	d107      	bne.n	800afec <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800afdc:	688b      	ldr	r3, [r1, #8]
 800afde:	ea34 0303 	bics.w	r3, r4, r3
 800afe2:	d0fb      	beq.n	800afdc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800afe4:	2000      	movs	r0, #0
}
 800afe6:	b002      	add	sp, #8
 800afe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800afec:	688b      	ldr	r3, [r1, #8]
 800afee:	ea34 0303 	bics.w	r3, r4, r3
 800aff2:	d1f7      	bne.n	800afe4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800aff4:	f7fd fa30 	bl	8008458 <HAL_GetTick>
 800aff8:	eba0 0008 	sub.w	r0, r0, r8
 800affc:	42a8      	cmp	r0, r5
 800affe:	d208      	bcs.n	800b012 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800b000:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800b002:	2b00      	cmp	r3, #0
      count--;
 800b004:	9b01      	ldr	r3, [sp, #4]
 800b006:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800b00a:	bf08      	it	eq
 800b00c:	2500      	moveq	r5, #0
      count--;
 800b00e:	9301      	str	r3, [sp, #4]
 800b010:	e7e1      	b.n	800afd6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b012:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b016:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b018:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b01c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800b020:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b022:	d013      	beq.n	800b04c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800b024:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b026:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800b02a:	d107      	bne.n	800b03c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800b02c:	681a      	ldr	r2, [r3, #0]
 800b02e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b032:	601a      	str	r2, [r3, #0]
 800b034:	681a      	ldr	r2, [r3, #0]
 800b036:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b03a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800b03c:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800b03e:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800b040:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800b044:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800b048:	2003      	movs	r0, #3
 800b04a:	e7cc      	b.n	800afe6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b04c:	68ba      	ldr	r2, [r7, #8]
 800b04e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b052:	d002      	beq.n	800b05a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b054:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b058:	d1e4      	bne.n	800b024 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800b05a:	681a      	ldr	r2, [r3, #0]
 800b05c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b060:	601a      	str	r2, [r3, #0]
 800b062:	e7df      	b.n	800b024 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800b064:	20000078 	.word	0x20000078

0800b068 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800b068:	b538      	push	{r3, r4, r5, lr}
 800b06a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b06c:	6842      	ldr	r2, [r0, #4]
 800b06e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800b072:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b074:	d006      	beq.n	800b084 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b076:	460a      	mov	r2, r1
 800b078:	2101      	movs	r1, #1
 800b07a:	f7ff ff97 	bl	800afac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b07e:	b978      	cbnz	r0, 800b0a0 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800b080:	2000      	movs	r0, #0
}
 800b082:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b084:	6882      	ldr	r2, [r0, #8]
 800b086:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b08a:	d01c      	beq.n	800b0c6 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b08c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b090:	d00c      	beq.n	800b0ac <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b092:	460a      	mov	r2, r1
 800b094:	4620      	mov	r0, r4
 800b096:	2180      	movs	r1, #128	; 0x80
 800b098:	f7ff ff88 	bl	800afac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b09c:	2800      	cmp	r0, #0
 800b09e:	d0ef      	beq.n	800b080 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b0a0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800b0a2:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800b0a6:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b0a8:	6563      	str	r3, [r4, #84]	; 0x54
}
 800b0aa:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800b0ac:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b0ae:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800b0b0:	6829      	ldr	r1, [r5, #0]
 800b0b2:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800b0b6:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b0b8:	2101      	movs	r1, #1
 800b0ba:	f7ff ff77 	bl	800afac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b0be:	2800      	cmp	r0, #0
 800b0c0:	d1ee      	bne.n	800b0a0 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800b0c2:	2000      	movs	r0, #0
 800b0c4:	e7dd      	b.n	800b082 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800b0c6:	6800      	ldr	r0, [r0, #0]
 800b0c8:	6802      	ldr	r2, [r0, #0]
 800b0ca:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b0ce:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b0d0:	460a      	mov	r2, r1
 800b0d2:	4620      	mov	r0, r4
 800b0d4:	2180      	movs	r1, #128	; 0x80
 800b0d6:	f7ff ff69 	bl	800afac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b0da:	2800      	cmp	r0, #0
 800b0dc:	d0d0      	beq.n	800b080 <SPI_EndRxTransaction+0x18>
 800b0de:	e7df      	b.n	800b0a0 <SPI_EndRxTransaction+0x38>

0800b0e0 <HAL_SPI_Init>:
  if (hspi == NULL)
 800b0e0:	2800      	cmp	r0, #0
 800b0e2:	d05c      	beq.n	800b19e <HAL_SPI_Init+0xbe>
{
 800b0e4:	b570      	push	{r4, r5, r6, lr}
 800b0e6:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800b0e8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b0ea:	2800      	cmp	r0, #0
 800b0ec:	d047      	beq.n	800b17e <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800b0ee:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800b0f0:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800b0f4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800b0f8:	2200      	movs	r2, #0
 800b0fa:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800b0fc:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800b100:	2b00      	cmp	r3, #0
 800b102:	d042      	beq.n	800b18a <HAL_SPI_Init+0xaa>
 800b104:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800b106:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b108:	68a5      	ldr	r5, [r4, #8]
 800b10a:	69a2      	ldr	r2, [r4, #24]
 800b10c:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800b10e:	2302      	movs	r3, #2
 800b110:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800b114:	680b      	ldr	r3, [r1, #0]
 800b116:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b11a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b11c:	6863      	ldr	r3, [r4, #4]
 800b11e:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800b122:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800b126:	432b      	orrs	r3, r5
 800b128:	68e5      	ldr	r5, [r4, #12]
 800b12a:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800b12e:	432b      	orrs	r3, r5
 800b130:	6925      	ldr	r5, [r4, #16]
 800b132:	f005 0502 	and.w	r5, r5, #2
 800b136:	432b      	orrs	r3, r5
 800b138:	6965      	ldr	r5, [r4, #20]
 800b13a:	f005 0501 	and.w	r5, r5, #1
 800b13e:	432b      	orrs	r3, r5
 800b140:	69e5      	ldr	r5, [r4, #28]
 800b142:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800b146:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800b14a:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800b14e:	4333      	orrs	r3, r6
 800b150:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b152:	0c12      	lsrs	r2, r2, #16
 800b154:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b158:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b15c:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b160:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b164:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b166:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b168:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b16a:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800b16c:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b16e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800b172:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b174:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800b176:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800b178:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800b17c:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b17e:	6863      	ldr	r3, [r4, #4]
 800b180:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b184:	d0b6      	beq.n	800b0f4 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800b186:	61e0      	str	r0, [r4, #28]
 800b188:	e7b4      	b.n	800b0f4 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800b18a:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800b18c:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800b190:	f7f6 fe9e 	bl	8001ed0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b194:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b198:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800b19c:	e7b3      	b.n	800b106 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800b19e:	2001      	movs	r0, #1
}
 800b1a0:	4770      	bx	lr
 800b1a2:	bf00      	nop

0800b1a4 <HAL_SPI_Transmit>:
{
 800b1a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1a8:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800b1aa:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800b1ae:	2801      	cmp	r0, #1
{
 800b1b0:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800b1b2:	f000 8085 	beq.w	800b2c0 <HAL_SPI_Transmit+0x11c>
 800b1b6:	461d      	mov	r5, r3
 800b1b8:	2301      	movs	r3, #1
 800b1ba:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800b1be:	4688      	mov	r8, r1
 800b1c0:	4617      	mov	r7, r2
 800b1c2:	f7fd f949 	bl	8008458 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800b1c6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800b1ca:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800b1cc:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800b1ce:	b2d8      	uxtb	r0, r3
 800b1d0:	d009      	beq.n	800b1e6 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800b1d2:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800b1d4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800b1d6:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800b1d8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800b1dc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800b1e0:	b002      	add	sp, #8
 800b1e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800b1e6:	f1b8 0f00 	cmp.w	r8, #0
 800b1ea:	d0f3      	beq.n	800b1d4 <HAL_SPI_Transmit+0x30>
 800b1ec:	2f00      	cmp	r7, #0
 800b1ee:	d0f1      	beq.n	800b1d4 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b1f0:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800b1f2:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800b1f4:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b1f8:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800b1fa:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b1fc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800b200:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800b204:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b208:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800b20a:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800b20c:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800b20e:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800b210:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800b212:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b214:	f000 8085 	beq.w	800b322 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b218:	6803      	ldr	r3, [r0, #0]
 800b21a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800b21c:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b21e:	d403      	bmi.n	800b228 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800b220:	6803      	ldr	r3, [r0, #0]
 800b222:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b226:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800b228:	68e3      	ldr	r3, [r4, #12]
 800b22a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b22e:	d04b      	beq.n	800b2c8 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b230:	6863      	ldr	r3, [r4, #4]
 800b232:	2b00      	cmp	r3, #0
 800b234:	f000 8097 	beq.w	800b366 <HAL_SPI_Transmit+0x1c2>
 800b238:	2f01      	cmp	r7, #1
 800b23a:	f000 8094 	beq.w	800b366 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800b23e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b240:	b29b      	uxth	r3, r3
 800b242:	b1ab      	cbz	r3, 800b270 <HAL_SPI_Transmit+0xcc>
 800b244:	1c68      	adds	r0, r5, #1
 800b246:	f040 8083 	bne.w	800b350 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b24a:	6823      	ldr	r3, [r4, #0]
 800b24c:	689a      	ldr	r2, [r3, #8]
 800b24e:	0791      	lsls	r1, r2, #30
 800b250:	f140 8094 	bpl.w	800b37c <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b254:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b256:	7812      	ldrb	r2, [r2, #0]
 800b258:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800b25a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b25c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b25e:	3901      	subs	r1, #1
 800b260:	b289      	uxth	r1, r1
 800b262:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b264:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b266:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800b268:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b26a:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800b26c:	2900      	cmp	r1, #0
 800b26e:	d1ec      	bne.n	800b24a <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b270:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800b272:	4b5b      	ldr	r3, [pc, #364]	; (800b3e0 <HAL_SPI_Transmit+0x23c>)
 800b274:	4a5b      	ldr	r2, [pc, #364]	; (800b3e4 <HAL_SPI_Transmit+0x240>)
 800b276:	681b      	ldr	r3, [r3, #0]
 800b278:	fba2 2303 	umull	r2, r3, r2, r3
 800b27c:	0d5b      	lsrs	r3, r3, #21
 800b27e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800b282:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b286:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800b28a:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b28c:	d107      	bne.n	800b29e <HAL_SPI_Transmit+0xfa>
 800b28e:	e098      	b.n	800b3c2 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800b290:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800b292:	6822      	ldr	r2, [r4, #0]
      count--;
 800b294:	3b01      	subs	r3, #1
 800b296:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800b298:	6893      	ldr	r3, [r2, #8]
 800b29a:	061b      	lsls	r3, r3, #24
 800b29c:	d502      	bpl.n	800b2a4 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800b29e:	9b01      	ldr	r3, [sp, #4]
 800b2a0:	2b00      	cmp	r3, #0
 800b2a2:	d1f5      	bne.n	800b290 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800b2a4:	68a3      	ldr	r3, [r4, #8]
 800b2a6:	b933      	cbnz	r3, 800b2b6 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800b2a8:	6822      	ldr	r2, [r4, #0]
 800b2aa:	9300      	str	r3, [sp, #0]
 800b2ac:	68d3      	ldr	r3, [r2, #12]
 800b2ae:	9300      	str	r3, [sp, #0]
 800b2b0:	6893      	ldr	r3, [r2, #8]
 800b2b2:	9300      	str	r3, [sp, #0]
 800b2b4:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b2b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800b2b8:	3800      	subs	r0, #0
 800b2ba:	bf18      	it	ne
 800b2bc:	2001      	movne	r0, #1
error:
 800b2be:	e789      	b.n	800b1d4 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800b2c0:	2002      	movs	r0, #2
}
 800b2c2:	b002      	add	sp, #8
 800b2c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b2c8:	6861      	ldr	r1, [r4, #4]
 800b2ca:	2900      	cmp	r1, #0
 800b2cc:	d176      	bne.n	800b3bc <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b2ce:	4643      	mov	r3, r8
 800b2d0:	f833 7b02 	ldrh.w	r7, [r3], #2
 800b2d4:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800b2d6:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b2d8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b2da:	3b01      	subs	r3, #1
 800b2dc:	b29b      	uxth	r3, r3
 800b2de:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b2e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b2e2:	b29b      	uxth	r3, r3
 800b2e4:	2b00      	cmp	r3, #0
 800b2e6:	d0c4      	beq.n	800b272 <HAL_SPI_Transmit+0xce>
 800b2e8:	1c6b      	adds	r3, r5, #1
 800b2ea:	d15e      	bne.n	800b3aa <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b2ec:	6883      	ldr	r3, [r0, #8]
 800b2ee:	079f      	lsls	r7, r3, #30
 800b2f0:	d50f      	bpl.n	800b312 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b2f2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b2f4:	f832 3b02 	ldrh.w	r3, [r2], #2
 800b2f8:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800b2fa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800b2fc:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b2fe:	3b01      	subs	r3, #1
 800b300:	b29b      	uxth	r3, r3
 800b302:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b304:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b306:	b29b      	uxth	r3, r3
 800b308:	2b00      	cmp	r3, #0
 800b30a:	d0b1      	beq.n	800b270 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b30c:	6883      	ldr	r3, [r0, #8]
 800b30e:	079f      	lsls	r7, r3, #30
 800b310:	d4ef      	bmi.n	800b2f2 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b312:	f7fd f8a1 	bl	8008458 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800b316:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b318:	b29b      	uxth	r3, r3
 800b31a:	2b00      	cmp	r3, #0
 800b31c:	d0a8      	beq.n	800b270 <HAL_SPI_Transmit+0xcc>
 800b31e:	6820      	ldr	r0, [r4, #0]
 800b320:	e7e4      	b.n	800b2ec <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800b322:	6803      	ldr	r3, [r0, #0]
 800b324:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b328:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800b32a:	6803      	ldr	r3, [r0, #0]
 800b32c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800b330:	6003      	str	r3, [r0, #0]
 800b332:	e771      	b.n	800b218 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b334:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b336:	7812      	ldrb	r2, [r2, #0]
 800b338:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800b33a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b33c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b33e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b340:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800b342:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b344:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b346:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b348:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b34a:	b29b      	uxth	r3, r3
 800b34c:	2b00      	cmp	r3, #0
 800b34e:	d08f      	beq.n	800b270 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b350:	6823      	ldr	r3, [r4, #0]
 800b352:	689a      	ldr	r2, [r3, #8]
 800b354:	0792      	lsls	r2, r2, #30
 800b356:	d4ed      	bmi.n	800b334 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b358:	f7fd f87e 	bl	8008458 <HAL_GetTick>
 800b35c:	1b80      	subs	r0, r0, r6
 800b35e:	42a8      	cmp	r0, r5
 800b360:	d3f2      	bcc.n	800b348 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800b362:	2003      	movs	r0, #3
 800b364:	e736      	b.n	800b1d4 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b366:	f898 3000 	ldrb.w	r3, [r8]
 800b36a:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800b36c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b36e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b370:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b372:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800b374:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b376:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b378:	86e3      	strh	r3, [r4, #54]	; 0x36
 800b37a:	e760      	b.n	800b23e <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b37c:	f7fd f86c 	bl	8008458 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800b380:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b382:	b29b      	uxth	r3, r3
 800b384:	2b00      	cmp	r3, #0
 800b386:	f47f af60 	bne.w	800b24a <HAL_SPI_Transmit+0xa6>
 800b38a:	e771      	b.n	800b270 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b38c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b38e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800b392:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800b394:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800b396:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b398:	3b01      	subs	r3, #1
 800b39a:	b29b      	uxth	r3, r3
 800b39c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b39e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b3a0:	b29b      	uxth	r3, r3
 800b3a2:	2b00      	cmp	r3, #0
 800b3a4:	f43f af64 	beq.w	800b270 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b3a8:	6822      	ldr	r2, [r4, #0]
 800b3aa:	6893      	ldr	r3, [r2, #8]
 800b3ac:	0799      	lsls	r1, r3, #30
 800b3ae:	d4ed      	bmi.n	800b38c <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b3b0:	f7fd f852 	bl	8008458 <HAL_GetTick>
 800b3b4:	1b80      	subs	r0, r0, r6
 800b3b6:	42a8      	cmp	r0, r5
 800b3b8:	d3f1      	bcc.n	800b39e <HAL_SPI_Transmit+0x1fa>
 800b3ba:	e7d2      	b.n	800b362 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b3bc:	2f01      	cmp	r7, #1
 800b3be:	d18f      	bne.n	800b2e0 <HAL_SPI_Transmit+0x13c>
 800b3c0:	e785      	b.n	800b2ce <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b3c2:	4633      	mov	r3, r6
 800b3c4:	462a      	mov	r2, r5
 800b3c6:	2180      	movs	r1, #128	; 0x80
 800b3c8:	4620      	mov	r0, r4
 800b3ca:	f7ff fdef 	bl	800afac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b3ce:	2800      	cmp	r0, #0
 800b3d0:	f43f af68 	beq.w	800b2a4 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b3d4:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b3d6:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b3d8:	4313      	orrs	r3, r2
 800b3da:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b3dc:	6562      	str	r2, [r4, #84]	; 0x54
 800b3de:	e761      	b.n	800b2a4 <HAL_SPI_Transmit+0x100>
 800b3e0:	20000078 	.word	0x20000078
 800b3e4:	165e9f81 	.word	0x165e9f81

0800b3e8 <HAL_SPI_TransmitReceive>:
{
 800b3e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3ec:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800b3ee:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800b3f2:	2801      	cmp	r0, #1
{
 800b3f4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800b3f6:	f000 80ac 	beq.w	800b552 <HAL_SPI_TransmitReceive+0x16a>
 800b3fa:	461e      	mov	r6, r3
 800b3fc:	2301      	movs	r3, #1
 800b3fe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800b402:	4690      	mov	r8, r2
 800b404:	460f      	mov	r7, r1
 800b406:	f7fd f827 	bl	8008458 <HAL_GetTick>
 800b40a:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800b40c:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800b410:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800b412:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800b414:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800b416:	d011      	beq.n	800b43c <HAL_SPI_TransmitReceive+0x54>
 800b418:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b41c:	d009      	beq.n	800b432 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800b41e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800b420:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800b422:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800b424:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800b428:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800b42c:	b002      	add	sp, #8
 800b42e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800b432:	68a1      	ldr	r1, [r4, #8]
 800b434:	2900      	cmp	r1, #0
 800b436:	d1f2      	bne.n	800b41e <HAL_SPI_TransmitReceive+0x36>
 800b438:	2a04      	cmp	r2, #4
 800b43a:	d1f0      	bne.n	800b41e <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800b43c:	2f00      	cmp	r7, #0
 800b43e:	f000 808c 	beq.w	800b55a <HAL_SPI_TransmitReceive+0x172>
 800b442:	f1b8 0f00 	cmp.w	r8, #0
 800b446:	f000 8088 	beq.w	800b55a <HAL_SPI_TransmitReceive+0x172>
 800b44a:	2e00      	cmp	r6, #0
 800b44c:	f000 8085 	beq.w	800b55a <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800b450:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800b454:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800b458:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800b45a:	bf1c      	itt	ne
 800b45c:	2205      	movne	r2, #5
 800b45e:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b462:	2200      	movs	r2, #0
 800b464:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800b466:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b46a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800b46c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800b46e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b470:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800b472:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b474:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800b476:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800b478:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b47a:	d403      	bmi.n	800b484 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800b47c:	6811      	ldr	r1, [r2, #0]
 800b47e:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800b482:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800b484:	68e1      	ldr	r1, [r4, #12]
 800b486:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800b48a:	f000 809e 	beq.w	800b5ca <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b48e:	2b00      	cmp	r3, #0
 800b490:	f000 8091 	beq.w	800b5b6 <HAL_SPI_TransmitReceive+0x1ce>
 800b494:	2e01      	cmp	r6, #1
 800b496:	f000 808e 	beq.w	800b5b6 <HAL_SPI_TransmitReceive+0x1ce>
 800b49a:	9b08      	ldr	r3, [sp, #32]
 800b49c:	3301      	adds	r3, #1
        txallowed = 1U;
 800b49e:	f04f 0601 	mov.w	r6, #1
 800b4a2:	d028      	beq.n	800b4f6 <HAL_SPI_TransmitReceive+0x10e>
 800b4a4:	e05b      	b.n	800b55e <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800b4a6:	6821      	ldr	r1, [r4, #0]
 800b4a8:	688b      	ldr	r3, [r1, #8]
 800b4aa:	0798      	lsls	r0, r3, #30
 800b4ac:	d50f      	bpl.n	800b4ce <HAL_SPI_TransmitReceive+0xe6>
 800b4ae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b4b0:	b29b      	uxth	r3, r3
 800b4b2:	b163      	cbz	r3, 800b4ce <HAL_SPI_TransmitReceive+0xe6>
 800b4b4:	b15e      	cbz	r6, 800b4ce <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800b4b6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b4b8:	781b      	ldrb	r3, [r3, #0]
 800b4ba:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800b4bc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800b4be:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800b4c0:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800b4c2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800b4c4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800b4c6:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800b4c8:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800b4ca:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800b4cc:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800b4ce:	688a      	ldr	r2, [r1, #8]
 800b4d0:	f012 0201 	ands.w	r2, r2, #1
 800b4d4:	d00d      	beq.n	800b4f2 <HAL_SPI_TransmitReceive+0x10a>
 800b4d6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b4d8:	b29b      	uxth	r3, r3
 800b4da:	b153      	cbz	r3, 800b4f2 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800b4dc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b4de:	68c9      	ldr	r1, [r1, #12]
 800b4e0:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800b4e2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800b4e4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b4e6:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800b4e8:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800b4ea:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800b4ec:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b4ee:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800b4f0:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800b4f2:	f7fc ffb1 	bl	8008458 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800b4f6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800b4f8:	b292      	uxth	r2, r2
 800b4fa:	2a00      	cmp	r2, #0
 800b4fc:	d1d3      	bne.n	800b4a6 <HAL_SPI_TransmitReceive+0xbe>
 800b4fe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b500:	b29b      	uxth	r3, r3
 800b502:	2b00      	cmp	r3, #0
 800b504:	d1cf      	bne.n	800b4a6 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800b506:	4b79      	ldr	r3, [pc, #484]	; (800b6ec <HAL_SPI_TransmitReceive+0x304>)
 800b508:	4a79      	ldr	r2, [pc, #484]	; (800b6f0 <HAL_SPI_TransmitReceive+0x308>)
 800b50a:	681b      	ldr	r3, [r3, #0]
 800b50c:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b510:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800b512:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800b516:	0d5b      	lsrs	r3, r3, #21
 800b518:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b51c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800b520:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b522:	d107      	bne.n	800b534 <HAL_SPI_TransmitReceive+0x14c>
 800b524:	e0d2      	b.n	800b6cc <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800b526:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800b528:	6822      	ldr	r2, [r4, #0]
      count--;
 800b52a:	3b01      	subs	r3, #1
 800b52c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800b52e:	6893      	ldr	r3, [r2, #8]
 800b530:	061b      	lsls	r3, r3, #24
 800b532:	d502      	bpl.n	800b53a <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800b534:	9b01      	ldr	r3, [sp, #4]
 800b536:	2b00      	cmp	r3, #0
 800b538:	d1f5      	bne.n	800b526 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800b53a:	68a0      	ldr	r0, [r4, #8]
 800b53c:	2800      	cmp	r0, #0
 800b53e:	f040 8082 	bne.w	800b646 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800b542:	6823      	ldr	r3, [r4, #0]
 800b544:	9000      	str	r0, [sp, #0]
 800b546:	68da      	ldr	r2, [r3, #12]
 800b548:	9200      	str	r2, [sp, #0]
 800b54a:	689b      	ldr	r3, [r3, #8]
 800b54c:	9300      	str	r3, [sp, #0]
 800b54e:	9b00      	ldr	r3, [sp, #0]
 800b550:	e766      	b.n	800b420 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800b552:	2002      	movs	r0, #2
}
 800b554:	b002      	add	sp, #8
 800b556:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800b55a:	2001      	movs	r0, #1
 800b55c:	e760      	b.n	800b420 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800b55e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b560:	b29b      	uxth	r3, r3
 800b562:	b91b      	cbnz	r3, 800b56c <HAL_SPI_TransmitReceive+0x184>
 800b564:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b566:	b29b      	uxth	r3, r3
 800b568:	2b00      	cmp	r3, #0
 800b56a:	d0cc      	beq.n	800b506 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800b56c:	6822      	ldr	r2, [r4, #0]
 800b56e:	6893      	ldr	r3, [r2, #8]
 800b570:	0799      	lsls	r1, r3, #30
 800b572:	d50f      	bpl.n	800b594 <HAL_SPI_TransmitReceive+0x1ac>
 800b574:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b576:	b29b      	uxth	r3, r3
 800b578:	b163      	cbz	r3, 800b594 <HAL_SPI_TransmitReceive+0x1ac>
 800b57a:	b15e      	cbz	r6, 800b594 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800b57c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b57e:	781b      	ldrb	r3, [r3, #0]
 800b580:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800b582:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800b584:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b586:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800b588:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800b58a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800b58c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800b58e:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800b590:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800b592:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800b594:	6893      	ldr	r3, [r2, #8]
 800b596:	f013 0301 	ands.w	r3, r3, #1
 800b59a:	d004      	beq.n	800b5a6 <HAL_SPI_TransmitReceive+0x1be>
 800b59c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800b59e:	b289      	uxth	r1, r1
 800b5a0:	2900      	cmp	r1, #0
 800b5a2:	f040 8087 	bne.w	800b6b4 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800b5a6:	f7fc ff57 	bl	8008458 <HAL_GetTick>
 800b5aa:	9b08      	ldr	r3, [sp, #32]
 800b5ac:	1b40      	subs	r0, r0, r5
 800b5ae:	4298      	cmp	r0, r3
 800b5b0:	d3d5      	bcc.n	800b55e <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800b5b2:	2003      	movs	r0, #3
 800b5b4:	e734      	b.n	800b420 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b5b6:	783b      	ldrb	r3, [r7, #0]
 800b5b8:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800b5ba:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b5bc:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b5be:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b5c0:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800b5c2:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b5c4:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b5c6:	86e3      	strh	r3, [r4, #54]	; 0x36
 800b5c8:	e767      	b.n	800b49a <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b5ca:	2b00      	cmp	r3, #0
 800b5cc:	d13d      	bne.n	800b64a <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b5ce:	f837 3b02 	ldrh.w	r3, [r7], #2
 800b5d2:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800b5d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800b5d6:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b5d8:	3b01      	subs	r3, #1
 800b5da:	b29b      	uxth	r3, r3
 800b5dc:	86e3      	strh	r3, [r4, #54]	; 0x36
 800b5de:	9b08      	ldr	r3, [sp, #32]
 800b5e0:	3301      	adds	r3, #1
{
 800b5e2:	f04f 0601 	mov.w	r6, #1
 800b5e6:	d025      	beq.n	800b634 <HAL_SPI_TransmitReceive+0x24c>
 800b5e8:	e032      	b.n	800b650 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800b5ea:	6823      	ldr	r3, [r4, #0]
 800b5ec:	689a      	ldr	r2, [r3, #8]
 800b5ee:	0792      	lsls	r2, r2, #30
 800b5f0:	d50d      	bpl.n	800b60e <HAL_SPI_TransmitReceive+0x226>
 800b5f2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800b5f4:	b292      	uxth	r2, r2
 800b5f6:	b152      	cbz	r2, 800b60e <HAL_SPI_TransmitReceive+0x226>
 800b5f8:	b14e      	cbz	r6, 800b60e <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b5fa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b5fc:	f831 2b02 	ldrh.w	r2, [r1], #2
 800b600:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800b602:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800b604:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b606:	3a01      	subs	r2, #1
 800b608:	b292      	uxth	r2, r2
        txallowed = 0U;
 800b60a:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800b60c:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800b60e:	689a      	ldr	r2, [r3, #8]
 800b610:	f012 0201 	ands.w	r2, r2, #1
 800b614:	d00c      	beq.n	800b630 <HAL_SPI_TransmitReceive+0x248>
 800b616:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800b618:	b289      	uxth	r1, r1
 800b61a:	b149      	cbz	r1, 800b630 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b61c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800b61e:	68db      	ldr	r3, [r3, #12]
 800b620:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800b624:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b626:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b628:	3b01      	subs	r3, #1
 800b62a:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800b62c:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800b62e:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800b630:	f7fc ff12 	bl	8008458 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800b634:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b636:	b29b      	uxth	r3, r3
 800b638:	2b00      	cmp	r3, #0
 800b63a:	d1d6      	bne.n	800b5ea <HAL_SPI_TransmitReceive+0x202>
 800b63c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b63e:	b29b      	uxth	r3, r3
 800b640:	2b00      	cmp	r3, #0
 800b642:	d1d2      	bne.n	800b5ea <HAL_SPI_TransmitReceive+0x202>
 800b644:	e75f      	b.n	800b506 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800b646:	2000      	movs	r0, #0
 800b648:	e6ea      	b.n	800b420 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b64a:	2e01      	cmp	r6, #1
 800b64c:	d1c7      	bne.n	800b5de <HAL_SPI_TransmitReceive+0x1f6>
 800b64e:	e7be      	b.n	800b5ce <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800b650:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b652:	b29b      	uxth	r3, r3
 800b654:	b923      	cbnz	r3, 800b660 <HAL_SPI_TransmitReceive+0x278>
 800b656:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b658:	b29b      	uxth	r3, r3
 800b65a:	2b00      	cmp	r3, #0
 800b65c:	f43f af53 	beq.w	800b506 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800b660:	6822      	ldr	r2, [r4, #0]
 800b662:	6893      	ldr	r3, [r2, #8]
 800b664:	079f      	lsls	r7, r3, #30
 800b666:	d50d      	bpl.n	800b684 <HAL_SPI_TransmitReceive+0x29c>
 800b668:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b66a:	b29b      	uxth	r3, r3
 800b66c:	b153      	cbz	r3, 800b684 <HAL_SPI_TransmitReceive+0x29c>
 800b66e:	b14e      	cbz	r6, 800b684 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b670:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b672:	f831 3b02 	ldrh.w	r3, [r1], #2
 800b676:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800b678:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800b67a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b67c:	3b01      	subs	r3, #1
 800b67e:	b29b      	uxth	r3, r3
 800b680:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800b682:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800b684:	6893      	ldr	r3, [r2, #8]
 800b686:	f013 0301 	ands.w	r3, r3, #1
 800b68a:	d00c      	beq.n	800b6a6 <HAL_SPI_TransmitReceive+0x2be>
 800b68c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800b68e:	b289      	uxth	r1, r1
 800b690:	b149      	cbz	r1, 800b6a6 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b692:	68d1      	ldr	r1, [r2, #12]
 800b694:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b696:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800b69a:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800b69c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b69e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b6a0:	3b01      	subs	r3, #1
 800b6a2:	b29b      	uxth	r3, r3
 800b6a4:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800b6a6:	f7fc fed7 	bl	8008458 <HAL_GetTick>
 800b6aa:	9b08      	ldr	r3, [sp, #32]
 800b6ac:	1b40      	subs	r0, r0, r5
 800b6ae:	4298      	cmp	r0, r3
 800b6b0:	d3ce      	bcc.n	800b650 <HAL_SPI_TransmitReceive+0x268>
 800b6b2:	e77e      	b.n	800b5b2 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800b6b4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800b6b6:	68d2      	ldr	r2, [r2, #12]
 800b6b8:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800b6ba:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800b6bc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b6be:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800b6c0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800b6c2:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800b6c4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b6c6:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800b6c8:	461e      	mov	r6, r3
 800b6ca:	e76c      	b.n	800b5a6 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b6cc:	9a08      	ldr	r2, [sp, #32]
 800b6ce:	462b      	mov	r3, r5
 800b6d0:	2180      	movs	r1, #128	; 0x80
 800b6d2:	4620      	mov	r0, r4
 800b6d4:	f7ff fc6a 	bl	800afac <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b6d8:	2800      	cmp	r0, #0
 800b6da:	f43f af2e 	beq.w	800b53a <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b6de:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b6e0:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b6e2:	4313      	orrs	r3, r2
 800b6e4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800b6e6:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b6e8:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800b6ea:	e699      	b.n	800b420 <HAL_SPI_TransmitReceive+0x38>
 800b6ec:	20000078 	.word	0x20000078
 800b6f0:	165e9f81 	.word	0x165e9f81

0800b6f4 <HAL_SPI_Receive>:
{
 800b6f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800b6f8:	6846      	ldr	r6, [r0, #4]
 800b6fa:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800b6fe:	b082      	sub	sp, #8
 800b700:	4604      	mov	r4, r0
 800b702:	4690      	mov	r8, r2
 800b704:	461d      	mov	r5, r3
 800b706:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800b708:	d06e      	beq.n	800b7e8 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800b70a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800b70e:	2b01      	cmp	r3, #1
 800b710:	d076      	beq.n	800b800 <HAL_SPI_Receive+0x10c>
 800b712:	2301      	movs	r3, #1
 800b714:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800b718:	f7fc fe9e 	bl	8008458 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800b71c:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800b720:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800b724:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800b726:	fa5f f08c 	uxtb.w	r0, ip
 800b72a:	d009      	beq.n	800b740 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800b72c:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800b72e:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800b730:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800b732:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800b736:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800b73a:	b002      	add	sp, #8
 800b73c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800b740:	2f00      	cmp	r7, #0
 800b742:	d0f4      	beq.n	800b72e <HAL_SPI_Receive+0x3a>
 800b744:	f1b8 0f00 	cmp.w	r8, #0
 800b748:	d0f1      	beq.n	800b72e <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b74a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800b74c:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b74e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800b752:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800b754:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b758:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800b75c:	f04f 0104 	mov.w	r1, #4
 800b760:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800b764:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b768:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800b76a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800b76c:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800b76e:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800b772:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800b774:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b776:	d107      	bne.n	800b788 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800b778:	6811      	ldr	r1, [r2, #0]
 800b77a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800b77e:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800b780:	6811      	ldr	r1, [r2, #0]
 800b782:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800b786:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b788:	6811      	ldr	r1, [r2, #0]
 800b78a:	0648      	lsls	r0, r1, #25
 800b78c:	d403      	bmi.n	800b796 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800b78e:	6811      	ldr	r1, [r2, #0]
 800b790:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800b794:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800b796:	68e1      	ldr	r1, [r4, #12]
 800b798:	2900      	cmp	r1, #0
 800b79a:	d054      	beq.n	800b846 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800b79c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800b79e:	b289      	uxth	r1, r1
 800b7a0:	b1a9      	cbz	r1, 800b7ce <HAL_SPI_Receive+0xda>
 800b7a2:	1c69      	adds	r1, r5, #1
 800b7a4:	d13e      	bne.n	800b824 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b7a6:	6893      	ldr	r3, [r2, #8]
 800b7a8:	07db      	lsls	r3, r3, #31
 800b7aa:	d544      	bpl.n	800b836 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b7ac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b7ae:	68d1      	ldr	r1, [r2, #12]
 800b7b0:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800b7b4:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b7b8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b7ba:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b7be:	fa1f fc8c 	uxth.w	ip, ip
 800b7c2:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b7c6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b7c8:	b29b      	uxth	r3, r3
 800b7ca:	2b00      	cmp	r3, #0
 800b7cc:	d1eb      	bne.n	800b7a6 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800b7ce:	4632      	mov	r2, r6
 800b7d0:	4629      	mov	r1, r5
 800b7d2:	4620      	mov	r0, r4
 800b7d4:	f7ff fc48 	bl	800b068 <SPI_EndRxTransaction>
 800b7d8:	b108      	cbz	r0, 800b7de <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b7da:	2320      	movs	r3, #32
 800b7dc:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b7de:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800b7e0:	3800      	subs	r0, #0
 800b7e2:	bf18      	it	ne
 800b7e4:	2001      	movne	r0, #1
error :
 800b7e6:	e7a2      	b.n	800b72e <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800b7e8:	6883      	ldr	r3, [r0, #8]
 800b7ea:	2b00      	cmp	r3, #0
 800b7ec:	d18d      	bne.n	800b70a <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b7ee:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800b7f0:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b7f2:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800b7f4:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b7f8:	460a      	mov	r2, r1
 800b7fa:	f7ff fdf5 	bl	800b3e8 <HAL_SPI_TransmitReceive>
 800b7fe:	e79c      	b.n	800b73a <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800b800:	2002      	movs	r0, #2
}
 800b802:	b002      	add	sp, #8
 800b804:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b808:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b80a:	68db      	ldr	r3, [r3, #12]
 800b80c:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800b810:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b812:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b814:	3b01      	subs	r3, #1
 800b816:	b29b      	uxth	r3, r3
 800b818:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b81a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b81c:	b29b      	uxth	r3, r3
 800b81e:	2b00      	cmp	r3, #0
 800b820:	d0d5      	beq.n	800b7ce <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b822:	6823      	ldr	r3, [r4, #0]
 800b824:	689a      	ldr	r2, [r3, #8]
 800b826:	07d2      	lsls	r2, r2, #31
 800b828:	d4ee      	bmi.n	800b808 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b82a:	f7fc fe15 	bl	8008458 <HAL_GetTick>
 800b82e:	1b80      	subs	r0, r0, r6
 800b830:	42a8      	cmp	r0, r5
 800b832:	d243      	bcs.n	800b8bc <HAL_SPI_Receive+0x1c8>
 800b834:	e7f1      	b.n	800b81a <HAL_SPI_Receive+0x126>
 800b836:	f7fc fe0f 	bl	8008458 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800b83a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b83c:	b29b      	uxth	r3, r3
 800b83e:	2b00      	cmp	r3, #0
 800b840:	d0c5      	beq.n	800b7ce <HAL_SPI_Receive+0xda>
 800b842:	6822      	ldr	r2, [r4, #0]
 800b844:	e7af      	b.n	800b7a6 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800b846:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800b848:	b292      	uxth	r2, r2
 800b84a:	2a00      	cmp	r2, #0
 800b84c:	d0bf      	beq.n	800b7ce <HAL_SPI_Receive+0xda>
 800b84e:	1c6f      	adds	r7, r5, #1
 800b850:	d013      	beq.n	800b87a <HAL_SPI_Receive+0x186>
 800b852:	e02b      	b.n	800b8ac <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800b854:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b856:	7b1b      	ldrb	r3, [r3, #12]
 800b858:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800b85a:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b85e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b860:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b864:	fa1f fc8c 	uxth.w	ip, ip
 800b868:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b86c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b86e:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800b870:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b872:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800b874:	2b00      	cmp	r3, #0
 800b876:	d0aa      	beq.n	800b7ce <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b878:	6823      	ldr	r3, [r4, #0]
 800b87a:	689a      	ldr	r2, [r3, #8]
 800b87c:	07d0      	lsls	r0, r2, #31
 800b87e:	d4e9      	bmi.n	800b854 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b880:	f7fc fdea 	bl	8008458 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800b884:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b886:	b29b      	uxth	r3, r3
 800b888:	2b00      	cmp	r3, #0
 800b88a:	d1f5      	bne.n	800b878 <HAL_SPI_Receive+0x184>
 800b88c:	e79f      	b.n	800b7ce <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800b88e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b890:	7b1b      	ldrb	r3, [r3, #12]
 800b892:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800b894:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b896:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b898:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b89a:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800b89c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b89e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b8a0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b8a2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b8a4:	b29b      	uxth	r3, r3
 800b8a6:	2b00      	cmp	r3, #0
 800b8a8:	d091      	beq.n	800b7ce <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b8aa:	6823      	ldr	r3, [r4, #0]
 800b8ac:	689a      	ldr	r2, [r3, #8]
 800b8ae:	07d1      	lsls	r1, r2, #31
 800b8b0:	d4ed      	bmi.n	800b88e <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b8b2:	f7fc fdd1 	bl	8008458 <HAL_GetTick>
 800b8b6:	1b80      	subs	r0, r0, r6
 800b8b8:	42a8      	cmp	r0, r5
 800b8ba:	d3f2      	bcc.n	800b8a2 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800b8bc:	2003      	movs	r0, #3
 800b8be:	e736      	b.n	800b72e <HAL_SPI_Receive+0x3a>

0800b8c0 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800b8c0:	2800      	cmp	r0, #0
 800b8c2:	f000 8087 	beq.w	800b9d4 <HAL_TIM_Base_Init+0x114>
{
 800b8c6:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800b8c8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b8cc:	4604      	mov	r4, r0
 800b8ce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b8d2:	2b00      	cmp	r3, #0
 800b8d4:	d079      	beq.n	800b9ca <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800b8d6:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b8d8:	493f      	ldr	r1, [pc, #252]	; (800b9d8 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800b8da:	2302      	movs	r3, #2
 800b8dc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b8e0:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800b8e2:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b8e4:	d05d      	beq.n	800b9a2 <HAL_TIM_Base_Init+0xe2>
 800b8e6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800b8ea:	d031      	beq.n	800b950 <HAL_TIM_Base_Init+0x90>
 800b8ec:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800b8f0:	428a      	cmp	r2, r1
 800b8f2:	d02d      	beq.n	800b950 <HAL_TIM_Base_Init+0x90>
 800b8f4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b8f8:	428a      	cmp	r2, r1
 800b8fa:	d029      	beq.n	800b950 <HAL_TIM_Base_Init+0x90>
 800b8fc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b900:	428a      	cmp	r2, r1
 800b902:	d025      	beq.n	800b950 <HAL_TIM_Base_Init+0x90>
 800b904:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800b908:	428a      	cmp	r2, r1
 800b90a:	d04a      	beq.n	800b9a2 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800b90c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800b910:	428a      	cmp	r2, r1
 800b912:	d021      	beq.n	800b958 <HAL_TIM_Base_Init+0x98>
 800b914:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b918:	428a      	cmp	r2, r1
 800b91a:	d01d      	beq.n	800b958 <HAL_TIM_Base_Init+0x98>
 800b91c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b920:	428a      	cmp	r2, r1
 800b922:	d019      	beq.n	800b958 <HAL_TIM_Base_Init+0x98>
 800b924:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800b928:	428a      	cmp	r2, r1
 800b92a:	d015      	beq.n	800b958 <HAL_TIM_Base_Init+0x98>
 800b92c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b930:	428a      	cmp	r2, r1
 800b932:	d011      	beq.n	800b958 <HAL_TIM_Base_Init+0x98>
 800b934:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b938:	428a      	cmp	r2, r1
 800b93a:	d00d      	beq.n	800b958 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b93c:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b93e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b940:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b944:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800b946:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800b948:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b94a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800b94c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800b94e:	e010      	b.n	800b972 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800b950:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b952:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800b956:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b958:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b95a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800b95c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b960:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b962:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b966:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b968:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800b96a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800b96c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b96e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800b970:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800b972:	2301      	movs	r3, #1
 800b974:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800b976:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b97a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800b97e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800b982:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800b986:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b98a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800b98e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b992:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b996:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800b99a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800b99e:	2000      	movs	r0, #0
}
 800b9a0:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800b9a2:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b9a4:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b9a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800b9aa:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800b9ac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b9b0:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b9b2:	69a1      	ldr	r1, [r4, #24]
 800b9b4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b9b8:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800b9ba:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b9bc:	68e3      	ldr	r3, [r4, #12]
 800b9be:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800b9c0:	6863      	ldr	r3, [r4, #4]
 800b9c2:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800b9c4:	6963      	ldr	r3, [r4, #20]
 800b9c6:	6313      	str	r3, [r2, #48]	; 0x30
 800b9c8:	e7d3      	b.n	800b972 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800b9ca:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800b9ce:	f7f6 fabb 	bl	8001f48 <HAL_TIM_Base_MspInit>
 800b9d2:	e780      	b.n	800b8d6 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800b9d4:	2001      	movs	r0, #1
}
 800b9d6:	4770      	bx	lr
 800b9d8:	40010000 	.word	0x40010000

0800b9dc <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800b9dc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b9e0:	2b01      	cmp	r3, #1
 800b9e2:	d12f      	bne.n	800ba44 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b9e4:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b9e6:	4919      	ldr	r1, [pc, #100]	; (800ba4c <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800b9e8:	2202      	movs	r2, #2
 800b9ea:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b9ee:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b9f0:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b9f2:	f042 0201 	orr.w	r2, r2, #1
 800b9f6:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b9f8:	d019      	beq.n	800ba2e <HAL_TIM_Base_Start_IT+0x52>
 800b9fa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b9fe:	d016      	beq.n	800ba2e <HAL_TIM_Base_Start_IT+0x52>
 800ba00:	4a13      	ldr	r2, [pc, #76]	; (800ba50 <HAL_TIM_Base_Start_IT+0x74>)
 800ba02:	4293      	cmp	r3, r2
 800ba04:	d013      	beq.n	800ba2e <HAL_TIM_Base_Start_IT+0x52>
 800ba06:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ba0a:	4293      	cmp	r3, r2
 800ba0c:	d00f      	beq.n	800ba2e <HAL_TIM_Base_Start_IT+0x52>
 800ba0e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ba12:	4293      	cmp	r3, r2
 800ba14:	d00b      	beq.n	800ba2e <HAL_TIM_Base_Start_IT+0x52>
 800ba16:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ba1a:	4293      	cmp	r3, r2
 800ba1c:	d007      	beq.n	800ba2e <HAL_TIM_Base_Start_IT+0x52>
 800ba1e:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ba22:	4293      	cmp	r3, r2
 800ba24:	d003      	beq.n	800ba2e <HAL_TIM_Base_Start_IT+0x52>
 800ba26:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ba2a:	4293      	cmp	r3, r2
 800ba2c:	d104      	bne.n	800ba38 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ba2e:	689a      	ldr	r2, [r3, #8]
 800ba30:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ba34:	2a06      	cmp	r2, #6
 800ba36:	d007      	beq.n	800ba48 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800ba38:	681a      	ldr	r2, [r3, #0]
 800ba3a:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800ba3e:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800ba40:	601a      	str	r2, [r3, #0]
 800ba42:	4770      	bx	lr
    return HAL_ERROR;
 800ba44:	2001      	movs	r0, #1
 800ba46:	4770      	bx	lr
  return HAL_OK;
 800ba48:	2000      	movs	r0, #0
}
 800ba4a:	4770      	bx	lr
 800ba4c:	40010000 	.word	0x40010000
 800ba50:	40000400 	.word	0x40000400

0800ba54 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800ba54:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800ba58:	2b01      	cmp	r3, #1
 800ba5a:	d075      	beq.n	800bb48 <HAL_TIM_ConfigClockSource+0xf4>
 800ba5c:	4602      	mov	r2, r0
{
 800ba5e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800ba60:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800ba62:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800ba64:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800ba68:	2001      	movs	r0, #1
 800ba6a:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800ba6e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800ba70:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800ba74:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800ba78:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800ba7a:	680b      	ldr	r3, [r1, #0]
 800ba7c:	2b60      	cmp	r3, #96	; 0x60
 800ba7e:	d065      	beq.n	800bb4c <HAL_TIM_ConfigClockSource+0xf8>
 800ba80:	d824      	bhi.n	800bacc <HAL_TIM_ConfigClockSource+0x78>
 800ba82:	2b40      	cmp	r3, #64	; 0x40
 800ba84:	d07c      	beq.n	800bb80 <HAL_TIM_ConfigClockSource+0x12c>
 800ba86:	d94b      	bls.n	800bb20 <HAL_TIM_ConfigClockSource+0xcc>
 800ba88:	2b50      	cmp	r3, #80	; 0x50
 800ba8a:	d117      	bne.n	800babc <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800ba8c:	684b      	ldr	r3, [r1, #4]
 800ba8e:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800ba90:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800ba92:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800ba96:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800ba98:	6a23      	ldr	r3, [r4, #32]
 800ba9a:	f023 0301 	bic.w	r3, r3, #1
 800ba9e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800baa0:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800baa2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800baa6:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800baaa:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800baac:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800baae:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800bab0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800bab4:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800bab8:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800baba:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800babc:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800babe:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800bac0:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800bac4:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800bac8:	bc30      	pop	{r4, r5}
 800baca:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800bacc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bad0:	d038      	beq.n	800bb44 <HAL_TIM_ConfigClockSource+0xf0>
 800bad2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800bad6:	d110      	bne.n	800bafa <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800bad8:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800badc:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800bade:	432b      	orrs	r3, r5
 800bae0:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800bae2:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800bae6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800baea:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800baec:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800baee:	68a3      	ldr	r3, [r4, #8]
 800baf0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800baf4:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800baf6:	60a3      	str	r3, [r4, #8]
      break;
 800baf8:	e7e0      	b.n	800babc <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800bafa:	2b70      	cmp	r3, #112	; 0x70
 800bafc:	d1de      	bne.n	800babc <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800bafe:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800bb02:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800bb04:	432b      	orrs	r3, r5
 800bb06:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800bb08:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800bb0c:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800bb10:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800bb12:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800bb14:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800bb16:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800bb1a:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800bb1c:	60a3      	str	r3, [r4, #8]
      break;
 800bb1e:	e7cd      	b.n	800babc <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800bb20:	2b20      	cmp	r3, #32
 800bb22:	d002      	beq.n	800bb2a <HAL_TIM_ConfigClockSource+0xd6>
 800bb24:	d90a      	bls.n	800bb3c <HAL_TIM_ConfigClockSource+0xe8>
 800bb26:	2b30      	cmp	r3, #48	; 0x30
 800bb28:	d1c8      	bne.n	800babc <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800bb2a:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800bb2c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800bb30:	430b      	orrs	r3, r1
 800bb32:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800bb36:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800bb38:	60a3      	str	r3, [r4, #8]
}
 800bb3a:	e7bf      	b.n	800babc <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800bb3c:	f033 0110 	bics.w	r1, r3, #16
 800bb40:	d1bc      	bne.n	800babc <HAL_TIM_ConfigClockSource+0x68>
 800bb42:	e7f2      	b.n	800bb2a <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800bb44:	2000      	movs	r0, #0
 800bb46:	e7b9      	b.n	800babc <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800bb48:	2002      	movs	r0, #2
}
 800bb4a:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800bb4c:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800bb4e:	6848      	ldr	r0, [r1, #4]
 800bb50:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800bb52:	f023 0310 	bic.w	r3, r3, #16
 800bb56:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800bb58:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800bb5a:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800bb5c:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800bb60:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800bb64:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800bb68:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800bb6c:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800bb6e:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800bb70:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800bb72:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800bb76:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800bb7a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800bb7c:	60a3      	str	r3, [r4, #8]
}
 800bb7e:	e79d      	b.n	800babc <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800bb80:	684b      	ldr	r3, [r1, #4]
 800bb82:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800bb84:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800bb86:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800bb8a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800bb8c:	6a23      	ldr	r3, [r4, #32]
 800bb8e:	f023 0301 	bic.w	r3, r3, #1
 800bb92:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800bb94:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800bb96:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800bb9a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800bb9e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800bba0:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800bba2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800bba4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800bba8:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800bbac:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800bbae:	60a3      	str	r3, [r4, #8]
}
 800bbb0:	e784      	b.n	800babc <HAL_TIM_ConfigClockSource+0x68>
 800bbb2:	bf00      	nop

0800bbb4 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800bbb4:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800bbb8:	2a01      	cmp	r2, #1
 800bbba:	d050      	beq.n	800bc5e <HAL_TIM_SlaveConfigSynchro+0xaa>
 800bbbc:	4603      	mov	r3, r0
{
 800bbbe:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800bbc0:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800bbc2:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800bbc4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800bbc8:	2001      	movs	r0, #1
 800bbca:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800bbce:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800bbd0:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800bbd2:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800bbd4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800bbd8:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800bbda:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800bbde:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800bbe0:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800bbe2:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800bbe4:	d060      	beq.n	800bca8 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800bbe6:	d90f      	bls.n	800bc08 <HAL_TIM_SlaveConfigSynchro+0x54>
 800bbe8:	2860      	cmp	r0, #96	; 0x60
 800bbea:	d03a      	beq.n	800bc62 <HAL_TIM_SlaveConfigSynchro+0xae>
 800bbec:	2870      	cmp	r0, #112	; 0x70
 800bbee:	d10e      	bne.n	800bc0e <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800bbf0:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800bbf4:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800bbf6:	432a      	orrs	r2, r5
 800bbf8:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800bbfa:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800bbfe:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800bc02:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800bc04:	60a2      	str	r2, [r4, #8]
 800bc06:	e00f      	b.n	800bc28 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800bc08:	2840      	cmp	r0, #64	; 0x40
 800bc0a:	d03d      	beq.n	800bc88 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800bc0c:	d907      	bls.n	800bc1e <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800bc0e:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800bc10:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800bc12:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800bc16:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800bc1a:	bc30      	pop	{r4, r5}
 800bc1c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800bc1e:	2820      	cmp	r0, #32
 800bc20:	d002      	beq.n	800bc28 <HAL_TIM_SlaveConfigSynchro+0x74>
 800bc22:	d912      	bls.n	800bc4a <HAL_TIM_SlaveConfigSynchro+0x96>
 800bc24:	2830      	cmp	r0, #48	; 0x30
 800bc26:	d1f2      	bne.n	800bc0e <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800bc28:	68e2      	ldr	r2, [r4, #12]
 800bc2a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bc2e:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800bc30:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800bc32:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800bc34:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800bc36:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800bc3a:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800bc3c:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800bc40:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800bc44:	4608      	mov	r0, r1
}
 800bc46:	bc30      	pop	{r4, r5}
 800bc48:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800bc4a:	f030 0210 	bics.w	r2, r0, #16
 800bc4e:	d0eb      	beq.n	800bc28 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800bc50:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800bc52:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800bc54:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800bc58:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800bc5c:	e7dd      	b.n	800bc1a <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800bc5e:	2002      	movs	r0, #2
}
 800bc60:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800bc62:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800bc64:	6888      	ldr	r0, [r1, #8]
 800bc66:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800bc68:	f022 0210 	bic.w	r2, r2, #16
 800bc6c:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800bc6e:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800bc70:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800bc72:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800bc76:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800bc7a:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800bc7e:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800bc82:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800bc84:	6222      	str	r2, [r4, #32]
 800bc86:	e7cf      	b.n	800bc28 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800bc88:	2d05      	cmp	r5, #5
 800bc8a:	d0c0      	beq.n	800bc0e <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800bc8c:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800bc8e:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800bc90:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800bc92:	f022 0201 	bic.w	r2, r2, #1
 800bc96:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800bc98:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800bc9a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800bc9e:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800bca2:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800bca4:	6220      	str	r0, [r4, #32]
      break;
 800bca6:	e7bf      	b.n	800bc28 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800bca8:	688a      	ldr	r2, [r1, #8]
 800bcaa:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800bcac:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800bcae:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800bcb2:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800bcb4:	6a22      	ldr	r2, [r4, #32]
 800bcb6:	f022 0201 	bic.w	r2, r2, #1
 800bcba:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800bcbc:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800bcbe:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800bcc2:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800bcc6:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800bcc8:	6221      	str	r1, [r4, #32]
 800bcca:	e7ad      	b.n	800bc28 <HAL_TIM_SlaveConfigSynchro+0x74>

0800bccc <HAL_TIM_OC_DelayElapsedCallback>:
 800bccc:	4770      	bx	lr
 800bcce:	bf00      	nop

0800bcd0 <HAL_TIM_IC_CaptureCallback>:
 800bcd0:	4770      	bx	lr
 800bcd2:	bf00      	nop

0800bcd4 <HAL_TIM_PWM_PulseFinishedCallback>:
 800bcd4:	4770      	bx	lr
 800bcd6:	bf00      	nop

0800bcd8 <HAL_TIM_TriggerCallback>:
 800bcd8:	4770      	bx	lr
 800bcda:	bf00      	nop

0800bcdc <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800bcdc:	6803      	ldr	r3, [r0, #0]
 800bcde:	691a      	ldr	r2, [r3, #16]
 800bce0:	0791      	lsls	r1, r2, #30
{
 800bce2:	b510      	push	{r4, lr}
 800bce4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800bce6:	d502      	bpl.n	800bcee <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800bce8:	68da      	ldr	r2, [r3, #12]
 800bcea:	0792      	lsls	r2, r2, #30
 800bcec:	d45f      	bmi.n	800bdae <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800bcee:	691a      	ldr	r2, [r3, #16]
 800bcf0:	0750      	lsls	r0, r2, #29
 800bcf2:	d502      	bpl.n	800bcfa <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800bcf4:	68da      	ldr	r2, [r3, #12]
 800bcf6:	0751      	lsls	r1, r2, #29
 800bcf8:	d446      	bmi.n	800bd88 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800bcfa:	691a      	ldr	r2, [r3, #16]
 800bcfc:	0712      	lsls	r2, r2, #28
 800bcfe:	d502      	bpl.n	800bd06 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800bd00:	68da      	ldr	r2, [r3, #12]
 800bd02:	0710      	lsls	r0, r2, #28
 800bd04:	d42e      	bmi.n	800bd64 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800bd06:	691a      	ldr	r2, [r3, #16]
 800bd08:	06d2      	lsls	r2, r2, #27
 800bd0a:	d502      	bpl.n	800bd12 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800bd0c:	68da      	ldr	r2, [r3, #12]
 800bd0e:	06d0      	lsls	r0, r2, #27
 800bd10:	d418      	bmi.n	800bd44 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800bd12:	691a      	ldr	r2, [r3, #16]
 800bd14:	07d1      	lsls	r1, r2, #31
 800bd16:	d502      	bpl.n	800bd1e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800bd18:	68da      	ldr	r2, [r3, #12]
 800bd1a:	07d2      	lsls	r2, r2, #31
 800bd1c:	d45d      	bmi.n	800bdda <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800bd1e:	691a      	ldr	r2, [r3, #16]
 800bd20:	0610      	lsls	r0, r2, #24
 800bd22:	d502      	bpl.n	800bd2a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800bd24:	68da      	ldr	r2, [r3, #12]
 800bd26:	0611      	lsls	r1, r2, #24
 800bd28:	d45f      	bmi.n	800bdea <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800bd2a:	691a      	ldr	r2, [r3, #16]
 800bd2c:	0652      	lsls	r2, r2, #25
 800bd2e:	d502      	bpl.n	800bd36 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800bd30:	68da      	ldr	r2, [r3, #12]
 800bd32:	0650      	lsls	r0, r2, #25
 800bd34:	d461      	bmi.n	800bdfa <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800bd36:	691a      	ldr	r2, [r3, #16]
 800bd38:	0691      	lsls	r1, r2, #26
 800bd3a:	d502      	bpl.n	800bd42 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800bd3c:	68da      	ldr	r2, [r3, #12]
 800bd3e:	0692      	lsls	r2, r2, #26
 800bd40:	d443      	bmi.n	800bdca <HAL_TIM_IRQHandler+0xee>
}
 800bd42:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800bd44:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800bd48:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800bd4a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800bd4c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800bd4e:	69db      	ldr	r3, [r3, #28]
 800bd50:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800bd54:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800bd56:	d064      	beq.n	800be22 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800bd58:	f7ff ffba 	bl	800bcd0 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800bd5c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800bd5e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800bd60:	7722      	strb	r2, [r4, #28]
 800bd62:	e7d6      	b.n	800bd12 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800bd64:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800bd68:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800bd6a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800bd6c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800bd6e:	69db      	ldr	r3, [r3, #28]
 800bd70:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800bd72:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800bd74:	d152      	bne.n	800be1c <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800bd76:	f7ff ffa9 	bl	800bccc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800bd7a:	4620      	mov	r0, r4
 800bd7c:	f7ff ffaa 	bl	800bcd4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800bd80:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800bd82:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800bd84:	7722      	strb	r2, [r4, #28]
 800bd86:	e7be      	b.n	800bd06 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800bd88:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800bd8c:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800bd8e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800bd90:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800bd92:	699b      	ldr	r3, [r3, #24]
 800bd94:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800bd98:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800bd9a:	d13c      	bne.n	800be16 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800bd9c:	f7ff ff96 	bl	800bccc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800bda0:	4620      	mov	r0, r4
 800bda2:	f7ff ff97 	bl	800bcd4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800bda6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800bda8:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800bdaa:	7722      	strb	r2, [r4, #28]
 800bdac:	e7a5      	b.n	800bcfa <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800bdae:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800bdb2:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800bdb4:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800bdb6:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800bdb8:	699b      	ldr	r3, [r3, #24]
 800bdba:	079b      	lsls	r3, r3, #30
 800bdbc:	d025      	beq.n	800be0a <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800bdbe:	f7ff ff87 	bl	800bcd0 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800bdc2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800bdc4:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800bdc6:	7722      	strb	r2, [r4, #28]
 800bdc8:	e791      	b.n	800bcee <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800bdca:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800bdce:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800bdd0:	611a      	str	r2, [r3, #16]
}
 800bdd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800bdd6:	f000 b86b 	b.w	800beb0 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800bdda:	f06f 0201 	mvn.w	r2, #1
 800bdde:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800bde0:	4620      	mov	r0, r4
 800bde2:	f7f5 feb9 	bl	8001b58 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800bde6:	6823      	ldr	r3, [r4, #0]
 800bde8:	e799      	b.n	800bd1e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800bdea:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800bdee:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800bdf0:	4620      	mov	r0, r4
 800bdf2:	f000 f85f 	bl	800beb4 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800bdf6:	6823      	ldr	r3, [r4, #0]
 800bdf8:	e797      	b.n	800bd2a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800bdfa:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800bdfe:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800be00:	4620      	mov	r0, r4
 800be02:	f7ff ff69 	bl	800bcd8 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800be06:	6823      	ldr	r3, [r4, #0]
 800be08:	e795      	b.n	800bd36 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800be0a:	f7ff ff5f 	bl	800bccc <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800be0e:	4620      	mov	r0, r4
 800be10:	f7ff ff60 	bl	800bcd4 <HAL_TIM_PWM_PulseFinishedCallback>
 800be14:	e7d5      	b.n	800bdc2 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800be16:	f7ff ff5b 	bl	800bcd0 <HAL_TIM_IC_CaptureCallback>
 800be1a:	e7c4      	b.n	800bda6 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800be1c:	f7ff ff58 	bl	800bcd0 <HAL_TIM_IC_CaptureCallback>
 800be20:	e7ae      	b.n	800bd80 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800be22:	f7ff ff53 	bl	800bccc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800be26:	4620      	mov	r0, r4
 800be28:	f7ff ff54 	bl	800bcd4 <HAL_TIM_PWM_PulseFinishedCallback>
 800be2c:	e796      	b.n	800bd5c <HAL_TIM_IRQHandler+0x80>
 800be2e:	bf00      	nop

0800be30 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800be30:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800be34:	2b01      	cmp	r3, #1
 800be36:	d037      	beq.n	800bea8 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800be38:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800be3a:	2202      	movs	r2, #2
{
 800be3c:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800be3e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800be42:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800be44:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800be46:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800be48:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800be4c:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800be4e:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800be50:	4a16      	ldr	r2, [pc, #88]	; (800beac <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800be52:	4293      	cmp	r3, r2
 800be54:	d01a      	beq.n	800be8c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800be56:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800be5a:	d017      	beq.n	800be8c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800be5c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800be60:	4293      	cmp	r3, r2
 800be62:	d013      	beq.n	800be8c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800be64:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800be68:	4293      	cmp	r3, r2
 800be6a:	d00f      	beq.n	800be8c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800be6c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800be70:	4293      	cmp	r3, r2
 800be72:	d00b      	beq.n	800be8c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800be74:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800be78:	4293      	cmp	r3, r2
 800be7a:	d007      	beq.n	800be8c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800be7c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800be80:	4293      	cmp	r3, r2
 800be82:	d003      	beq.n	800be8c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800be84:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800be88:	4293      	cmp	r3, r2
 800be8a:	d104      	bne.n	800be96 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800be8c:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800be8e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800be92:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800be94:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800be96:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800be98:	2201      	movs	r2, #1
 800be9a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800be9e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800bea2:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800bea4:	4618      	mov	r0, r3
}
 800bea6:	4770      	bx	lr
  __HAL_LOCK(htim);
 800bea8:	2002      	movs	r0, #2
}
 800beaa:	4770      	bx	lr
 800beac:	40010000 	.word	0x40010000

0800beb0 <HAL_TIMEx_CommutCallback>:
 800beb0:	4770      	bx	lr
 800beb2:	bf00      	nop

0800beb4 <HAL_TIMEx_BreakCallback>:
 800beb4:	4770      	bx	lr
 800beb6:	bf00      	nop

0800beb8 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800beb8:	680b      	ldr	r3, [r1, #0]
{
 800beba:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800bebc:	b9d3      	cbnz	r3, 800bef4 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800bebe:	6803      	ldr	r3, [r0, #0]
 800bec0:	684c      	ldr	r4, [r1, #4]
 800bec2:	688a      	ldr	r2, [r1, #8]
 800bec4:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800bec8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800becc:	4323      	orrs	r3, r4
 800bece:	4313      	orrs	r3, r2
 800bed0:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800bed4:	4323      	orrs	r3, r4
 800bed6:	4313      	orrs	r3, r2
 800bed8:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800bedc:	4323      	orrs	r3, r4
 800bede:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800bee2:	4313      	orrs	r3, r2
 800bee4:	432b      	orrs	r3, r5
 800bee6:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800bee8:	4323      	orrs	r3, r4
 800beea:	4313      	orrs	r3, r2
 800beec:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800beee:	bc30      	pop	{r4, r5}
 800bef0:	2000      	movs	r0, #0
 800bef2:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800bef4:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800bef8:	6803      	ldr	r3, [r0, #0]
 800befa:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800befe:	4323      	orrs	r3, r4
 800bf00:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800bf02:	4313      	orrs	r3, r2
 800bf04:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800bf06:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800bf08:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800bf0a:	6843      	ldr	r3, [r0, #4]
 800bf0c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800bf10:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800bf14:	4313      	orrs	r3, r2
 800bf16:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800bf1a:	4323      	orrs	r3, r4
 800bf1c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800bf20:	4313      	orrs	r3, r2
 800bf22:	432b      	orrs	r3, r5
 800bf24:	698a      	ldr	r2, [r1, #24]
 800bf26:	4323      	orrs	r3, r4
 800bf28:	4313      	orrs	r3, r2
 800bf2a:	6043      	str	r3, [r0, #4]
}
 800bf2c:	bc30      	pop	{r4, r5}
 800bf2e:	2000      	movs	r0, #0
 800bf30:	4770      	bx	lr
 800bf32:	bf00      	nop

0800bf34 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800bf34:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800bf36:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800bf38:	bb02      	cbnz	r2, 800bf7c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800bf3a:	e9d1 2400 	ldrd	r2, r4, [r1]
 800bf3e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800bf42:	3c01      	subs	r4, #1
 800bf44:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800bf48:	3a01      	subs	r2, #1
 800bf4a:	4313      	orrs	r3, r2
 800bf4c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800bf50:	3c01      	subs	r4, #1
 800bf52:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bf56:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800bf5a:	3a01      	subs	r2, #1
 800bf5c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800bf60:	698a      	ldr	r2, [r1, #24]
 800bf62:	1e69      	subs	r1, r5, #1
 800bf64:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bf68:	1e61      	subs	r1, r4, #1
 800bf6a:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800bf6e:	3a01      	subs	r2, #1
 800bf70:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800bf74:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800bf76:	bc30      	pop	{r4, r5}
 800bf78:	2000      	movs	r0, #0
 800bf7a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800bf7c:	68cc      	ldr	r4, [r1, #12]
 800bf7e:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800bf80:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800bf82:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800bf86:	3c01      	subs	r4, #1
 800bf88:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800bf8c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800bf90:	3a01      	subs	r2, #1
 800bf92:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800bf96:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800bf98:	e9d1 2400 	ldrd	r2, r4, [r1]
 800bf9c:	68c3      	ldr	r3, [r0, #12]
 800bf9e:	3c01      	subs	r4, #1
 800bfa0:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800bfa4:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800bfa8:	3a01      	subs	r2, #1
 800bfaa:	690c      	ldr	r4, [r1, #16]
 800bfac:	4313      	orrs	r3, r2
 800bfae:	698a      	ldr	r2, [r1, #24]
 800bfb0:	1e69      	subs	r1, r5, #1
 800bfb2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800bfb6:	1e61      	subs	r1, r4, #1
 800bfb8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bfbc:	3a01      	subs	r2, #1
 800bfbe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800bfc2:	60c3      	str	r3, [r0, #12]
}
 800bfc4:	bc30      	pop	{r4, r5}
 800bfc6:	2000      	movs	r0, #0
 800bfc8:	4770      	bx	lr
 800bfca:	bf00      	nop

0800bfcc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800bfcc:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800bfce:	680b      	ldr	r3, [r1, #0]
{
 800bfd0:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800bfd2:	684a      	ldr	r2, [r1, #4]
{
 800bfd4:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800bfd6:	4313      	orrs	r3, r2
 800bfd8:	6900      	ldr	r0, [r0, #16]
 800bfda:	68ca      	ldr	r2, [r1, #12]
 800bfdc:	0d80      	lsrs	r0, r0, #22
 800bfde:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800bfe2:	688a      	ldr	r2, [r1, #8]
 800bfe4:	0580      	lsls	r0, r0, #22
 800bfe6:	4303      	orrs	r3, r0
 800bfe8:	3a01      	subs	r2, #1
 800bfea:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800bfee:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800bff0:	f7fc fa32 	bl	8008458 <HAL_GetTick>
 800bff4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800bff6:	1c6b      	adds	r3, r5, #1
 800bff8:	d105      	bne.n	800c006 <FMC_SDRAM_SendCommand+0x3a>
 800bffa:	69a3      	ldr	r3, [r4, #24]
 800bffc:	f013 0320 	ands.w	r3, r3, #32
 800c000:	d1fb      	bne.n	800bffa <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800c002:	4618      	mov	r0, r3
}
 800c004:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c006:	69a3      	ldr	r3, [r4, #24]
 800c008:	f013 0320 	ands.w	r3, r3, #32
 800c00c:	d0f9      	beq.n	800c002 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800c00e:	b125      	cbz	r5, 800c01a <FMC_SDRAM_SendCommand+0x4e>
 800c010:	f7fc fa22 	bl	8008458 <HAL_GetTick>
 800c014:	1b80      	subs	r0, r0, r6
 800c016:	42a8      	cmp	r0, r5
 800c018:	d9ed      	bls.n	800bff6 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800c01a:	2003      	movs	r0, #3
}
 800c01c:	bd70      	pop	{r4, r5, r6, pc}
 800c01e:	bf00      	nop

0800c020 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c020:	6943      	ldr	r3, [r0, #20]
 800c022:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800c026:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c028:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800c02c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800c030:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c032:	6151      	str	r1, [r2, #20]
}
 800c034:	4770      	bx	lr
 800c036:	bf00      	nop

0800c038 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800c038:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800c03a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c03e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800c040:	f002 fb00 	bl	800e644 <xTaskGetSchedulerState>
 800c044:	2801      	cmp	r0, #1
 800c046:	d100      	bne.n	800c04a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800c048:	bd08      	pop	{r3, pc}
 800c04a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800c04e:	f000 bc41 	b.w	800c8d4 <xPortSysTickHandler>
 800c052:	bf00      	nop

0800c054 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800c054:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800c058:	b92b      	cbnz	r3, 800c066 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800c05a:	4b06      	ldr	r3, [pc, #24]	; (800c074 <osKernelInitialize+0x20>)
 800c05c:	6818      	ldr	r0, [r3, #0]
 800c05e:	b928      	cbnz	r0, 800c06c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800c060:	2201      	movs	r2, #1
 800c062:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800c064:	4770      	bx	lr
    stat = osErrorISR;
 800c066:	f06f 0005 	mvn.w	r0, #5
 800c06a:	4770      	bx	lr
    } else {
      stat = osError;
 800c06c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800c070:	4770      	bx	lr
 800c072:	bf00      	nop
 800c074:	20002c70 	.word	0x20002c70

0800c078 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800c078:	b510      	push	{r4, lr}
 800c07a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c07e:	b974      	cbnz	r4, 800c09e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800c080:	4b08      	ldr	r3, [pc, #32]	; (800c0a4 <osKernelStart+0x2c>)
 800c082:	681a      	ldr	r2, [r3, #0]
 800c084:	2a01      	cmp	r2, #1
 800c086:	d107      	bne.n	800c098 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c088:	4907      	ldr	r1, [pc, #28]	; (800c0a8 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800c08a:	2202      	movs	r2, #2
 800c08c:	77cc      	strb	r4, [r1, #31]
 800c08e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800c090:	f002 f8b2 	bl	800e1f8 <vTaskStartScheduler>
      stat = osOK;
 800c094:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800c096:	bd10      	pop	{r4, pc}
      stat = osError;
 800c098:	f04f 30ff 	mov.w	r0, #4294967295
}
 800c09c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c09e:	f06f 0005 	mvn.w	r0, #5
}
 800c0a2:	bd10      	pop	{r4, pc}
 800c0a4:	20002c70 	.word	0x20002c70
 800c0a8:	e000ed00 	.word	0xe000ed00

0800c0ac <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c0ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c0ae:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800c0b0:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c0b2:	4615      	mov	r5, r2
  hTask = NULL;
 800c0b4:	9405      	str	r4, [sp, #20]
 800c0b6:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800c0ba:	b9ea      	cbnz	r2, 800c0f8 <osThreadNew+0x4c>
 800c0bc:	b350      	cbz	r0, 800c114 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800c0be:	b1f5      	cbz	r5, 800c0fe <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800c0c0:	69ab      	ldr	r3, [r5, #24]
 800c0c2:	bb5b      	cbnz	r3, 800c11c <osThreadNew+0x70>
 800c0c4:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c0c6:	686a      	ldr	r2, [r5, #4]
 800c0c8:	07d2      	lsls	r2, r2, #31
 800c0ca:	d423      	bmi.n	800c114 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800c0cc:	696e      	ldr	r6, [r5, #20]
 800c0ce:	b34e      	cbz	r6, 800c124 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800c0d0:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c0d4:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800c0d6:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c0d8:	b34c      	cbz	r4, 800c12e <osThreadNew+0x82>
 800c0da:	68ea      	ldr	r2, [r5, #12]
 800c0dc:	2aab      	cmp	r2, #171	; 0xab
 800c0de:	d919      	bls.n	800c114 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c0e0:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c0e2:	b1bd      	cbz	r5, 800c114 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c0e4:	b1b6      	cbz	r6, 800c114 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800c0e6:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c0ea:	9300      	str	r3, [sp, #0]
 800c0ec:	4662      	mov	r2, ip
 800c0ee:	460b      	mov	r3, r1
 800c0f0:	4639      	mov	r1, r7
 800c0f2:	f001 ffbf 	bl	800e074 <xTaskCreateStatic>
 800c0f6:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800c0f8:	4620      	mov	r0, r4
 800c0fa:	b007      	add	sp, #28
 800c0fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c0fe:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800c100:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c102:	ac05      	add	r4, sp, #20
 800c104:	9300      	str	r3, [sp, #0]
 800c106:	9401      	str	r4, [sp, #4]
 800c108:	460b      	mov	r3, r1
 800c10a:	4629      	mov	r1, r5
 800c10c:	f001 ffec 	bl	800e0e8 <xTaskCreate>
 800c110:	2801      	cmp	r0, #1
 800c112:	d00a      	beq.n	800c12a <osThreadNew+0x7e>
        return (NULL);
 800c114:	2400      	movs	r4, #0
}
 800c116:	4620      	mov	r0, r4
 800c118:	b007      	add	sp, #28
 800c11a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c11c:	1e5c      	subs	r4, r3, #1
 800c11e:	2c37      	cmp	r4, #55	; 0x37
 800c120:	d9d1      	bls.n	800c0c6 <osThreadNew+0x1a>
 800c122:	e7f7      	b.n	800c114 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800c124:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800c128:	e7d4      	b.n	800c0d4 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800c12a:	9c05      	ldr	r4, [sp, #20]
 800c12c:	e7e4      	b.n	800c0f8 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800c12e:	68ee      	ldr	r6, [r5, #12]
 800c130:	2e00      	cmp	r6, #0
 800c132:	d1e1      	bne.n	800c0f8 <osThreadNew+0x4c>
 800c134:	692d      	ldr	r5, [r5, #16]
 800c136:	2d00      	cmp	r5, #0
 800c138:	d1de      	bne.n	800c0f8 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c13a:	fa1f f28c 	uxth.w	r2, ip
 800c13e:	463d      	mov	r5, r7
 800c140:	e7df      	b.n	800c102 <osThreadNew+0x56>
 800c142:	bf00      	nop

0800c144 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800c144:	b510      	push	{r4, lr}
 800c146:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c14a:	b92c      	cbnz	r4, 800c158 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800c14c:	b900      	cbnz	r0, 800c150 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800c14e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800c150:	f001 fffc 	bl	800e14c <vTaskDelay>
    stat = osOK;
 800c154:	4620      	mov	r0, r4
}
 800c156:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c158:	f06f 0005 	mvn.w	r0, #5
}
 800c15c:	bd10      	pop	{r4, pc}
 800c15e:	bf00      	nop

0800c160 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800c160:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c162:	b083      	sub	sp, #12
 800c164:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800c168:	b9fe      	cbnz	r6, 800c1aa <osSemaphoreNew+0x4a>
 800c16a:	b1f0      	cbz	r0, 800c1aa <osSemaphoreNew+0x4a>
 800c16c:	4288      	cmp	r0, r1
 800c16e:	460f      	mov	r7, r1
 800c170:	d31b      	bcc.n	800c1aa <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800c172:	4615      	mov	r5, r2
 800c174:	b192      	cbz	r2, 800c19c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800c176:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800c17a:	b1d2      	cbz	r2, 800c1b2 <osSemaphoreNew+0x52>
 800c17c:	2b4f      	cmp	r3, #79	; 0x4f
 800c17e:	d914      	bls.n	800c1aa <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800c180:	2801      	cmp	r0, #1
 800c182:	d038      	beq.n	800c1f6 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800c184:	f000 fd8c 	bl	800cca0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800c188:	4604      	mov	r4, r0
 800c18a:	b170      	cbz	r0, 800c1aa <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800c18c:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800c18e:	4620      	mov	r0, r4
 800c190:	4629      	mov	r1, r5
 800c192:	f001 fc37 	bl	800da04 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800c196:	4620      	mov	r0, r4
 800c198:	b003      	add	sp, #12
 800c19a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800c19c:	2801      	cmp	r0, #1
 800c19e:	d012      	beq.n	800c1c6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c1a0:	f000 fdde 	bl	800cd60 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c1a4:	4604      	mov	r4, r0
 800c1a6:	2800      	cmp	r0, #0
 800c1a8:	d1f1      	bne.n	800c18e <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800c1aa:	2400      	movs	r4, #0
}
 800c1ac:	4620      	mov	r0, r4
 800c1ae:	b003      	add	sp, #12
 800c1b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800c1b2:	2b00      	cmp	r3, #0
 800c1b4:	d1f9      	bne.n	800c1aa <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800c1b6:	2801      	cmp	r0, #1
 800c1b8:	d005      	beq.n	800c1c6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c1ba:	f000 fdd1 	bl	800cd60 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c1be:	4604      	mov	r4, r0
 800c1c0:	2800      	cmp	r0, #0
 800c1c2:	d1e3      	bne.n	800c18c <osSemaphoreNew+0x2c>
 800c1c4:	e7f1      	b.n	800c1aa <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800c1c6:	2203      	movs	r2, #3
 800c1c8:	2100      	movs	r1, #0
 800c1ca:	2001      	movs	r0, #1
 800c1cc:	f000 fd26 	bl	800cc1c <xQueueGenericCreate>
 800c1d0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800c1d2:	2c00      	cmp	r4, #0
 800c1d4:	d0e9      	beq.n	800c1aa <osSemaphoreNew+0x4a>
 800c1d6:	b917      	cbnz	r7, 800c1de <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800c1d8:	2d00      	cmp	r5, #0
 800c1da:	d1d7      	bne.n	800c18c <osSemaphoreNew+0x2c>
 800c1dc:	e7d7      	b.n	800c18e <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c1de:	2300      	movs	r3, #0
 800c1e0:	461a      	mov	r2, r3
 800c1e2:	4619      	mov	r1, r3
 800c1e4:	4620      	mov	r0, r4
 800c1e6:	f000 fe01 	bl	800cdec <xQueueGenericSend>
 800c1ea:	2801      	cmp	r0, #1
 800c1ec:	d0f4      	beq.n	800c1d8 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800c1ee:	4620      	mov	r0, r4
 800c1f0:	f001 fbc2 	bl	800d978 <vQueueDelete>
 800c1f4:	e7d9      	b.n	800c1aa <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800c1f6:	4613      	mov	r3, r2
 800c1f8:	2203      	movs	r2, #3
 800c1fa:	9200      	str	r2, [sp, #0]
 800c1fc:	4631      	mov	r1, r6
 800c1fe:	4632      	mov	r2, r6
 800c200:	f000 fc9e 	bl	800cb40 <xQueueGenericCreateStatic>
 800c204:	4604      	mov	r4, r0
 800c206:	e7e4      	b.n	800c1d2 <osSemaphoreNew+0x72>

0800c208 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c208:	b370      	cbz	r0, 800c268 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800c20a:	b510      	push	{r4, lr}
 800c20c:	460c      	mov	r4, r1
 800c20e:	b082      	sub	sp, #8
 800c210:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c214:	b1c3      	cbz	r3, 800c248 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800c216:	bb21      	cbnz	r1, 800c262 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c218:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c21a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c21c:	f001 fb2a 	bl	800d874 <xQueueReceiveFromISR>
 800c220:	2801      	cmp	r0, #1
 800c222:	d11a      	bne.n	800c25a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c224:	9b01      	ldr	r3, [sp, #4]
 800c226:	b913      	cbnz	r3, 800c22e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800c228:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800c22a:	b002      	add	sp, #8
 800c22c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800c22e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c232:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c236:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c23a:	f3bf 8f4f 	dsb	sy
 800c23e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c242:	4620      	mov	r0, r4
}
 800c244:	b002      	add	sp, #8
 800c246:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800c248:	f001 f98a 	bl	800d560 <xQueueSemaphoreTake>
 800c24c:	2801      	cmp	r0, #1
 800c24e:	d0eb      	beq.n	800c228 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800c250:	b11c      	cbz	r4, 800c25a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800c252:	f06f 0001 	mvn.w	r0, #1
}
 800c256:	b002      	add	sp, #8
 800c258:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800c25a:	f06f 0002 	mvn.w	r0, #2
}
 800c25e:	b002      	add	sp, #8
 800c260:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800c262:	f06f 0003 	mvn.w	r0, #3
 800c266:	e7e0      	b.n	800c22a <osSemaphoreAcquire+0x22>
 800c268:	f06f 0003 	mvn.w	r0, #3
}
 800c26c:	4770      	bx	lr
 800c26e:	bf00      	nop

0800c270 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c270:	b330      	cbz	r0, 800c2c0 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800c272:	b510      	push	{r4, lr}
 800c274:	b082      	sub	sp, #8
 800c276:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c27a:	b1ab      	cbz	r3, 800c2a8 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800c27c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c27e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800c280:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c282:	f000 ff97 	bl	800d1b4 <xQueueGiveFromISR>
 800c286:	2801      	cmp	r0, #1
 800c288:	d117      	bne.n	800c2ba <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800c28a:	9b01      	ldr	r3, [sp, #4]
 800c28c:	b193      	cbz	r3, 800c2b4 <osSemaphoreRelease+0x44>
 800c28e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c292:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c296:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c29a:	f3bf 8f4f 	dsb	sy
 800c29e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c2a2:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800c2a4:	b002      	add	sp, #8
 800c2a6:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c2a8:	461a      	mov	r2, r3
 800c2aa:	4619      	mov	r1, r3
 800c2ac:	f000 fd9e 	bl	800cdec <xQueueGenericSend>
 800c2b0:	2801      	cmp	r0, #1
 800c2b2:	d102      	bne.n	800c2ba <osSemaphoreRelease+0x4a>
  stat = osOK;
 800c2b4:	2000      	movs	r0, #0
}
 800c2b6:	b002      	add	sp, #8
 800c2b8:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800c2ba:	f06f 0002 	mvn.w	r0, #2
 800c2be:	e7fa      	b.n	800c2b6 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800c2c0:	f06f 0003 	mvn.w	r0, #3
}
 800c2c4:	4770      	bx	lr
 800c2c6:	bf00      	nop

0800c2c8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800c2c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c2ca:	b085      	sub	sp, #20
 800c2cc:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800c2d0:	b987      	cbnz	r7, 800c2f4 <osMessageQueueNew+0x2c>
 800c2d2:	4605      	mov	r5, r0
 800c2d4:	b170      	cbz	r0, 800c2f4 <osMessageQueueNew+0x2c>
 800c2d6:	b169      	cbz	r1, 800c2f4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800c2d8:	4614      	mov	r4, r2
 800c2da:	b1ea      	cbz	r2, 800c318 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c2dc:	6893      	ldr	r3, [r2, #8]
 800c2de:	b163      	cbz	r3, 800c2fa <osMessageQueueNew+0x32>
 800c2e0:	68d2      	ldr	r2, [r2, #12]
 800c2e2:	2a4f      	cmp	r2, #79	; 0x4f
 800c2e4:	d906      	bls.n	800c2f4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c2e6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c2e8:	b122      	cbz	r2, 800c2f4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c2ea:	6966      	ldr	r6, [r4, #20]
 800c2ec:	fb01 f505 	mul.w	r5, r1, r5
 800c2f0:	42ae      	cmp	r6, r5
 800c2f2:	d21c      	bcs.n	800c32e <osMessageQueueNew+0x66>
  hQueue = NULL;
 800c2f4:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800c2f6:	b005      	add	sp, #20
 800c2f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800c2fa:	68d3      	ldr	r3, [r2, #12]
 800c2fc:	2b00      	cmp	r3, #0
 800c2fe:	d1f9      	bne.n	800c2f4 <osMessageQueueNew+0x2c>
 800c300:	6913      	ldr	r3, [r2, #16]
 800c302:	2b00      	cmp	r3, #0
 800c304:	d1f6      	bne.n	800c2f4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800c306:	6952      	ldr	r2, [r2, #20]
 800c308:	2a00      	cmp	r2, #0
 800c30a:	d1f3      	bne.n	800c2f4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800c30c:	f000 fc86 	bl	800cc1c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800c310:	2800      	cmp	r0, #0
 800c312:	d0ef      	beq.n	800c2f4 <osMessageQueueNew+0x2c>
        name = attr->name;
 800c314:	6824      	ldr	r4, [r4, #0]
 800c316:	e003      	b.n	800c320 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800c318:	f000 fc80 	bl	800cc1c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800c31c:	2800      	cmp	r0, #0
 800c31e:	d0e9      	beq.n	800c2f4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800c320:	4621      	mov	r1, r4
 800c322:	9003      	str	r0, [sp, #12]
 800c324:	f001 fb6e 	bl	800da04 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800c328:	9803      	ldr	r0, [sp, #12]
}
 800c32a:	b005      	add	sp, #20
 800c32c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800c32e:	9700      	str	r7, [sp, #0]
 800c330:	f000 fc06 	bl	800cb40 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800c334:	2800      	cmp	r0, #0
 800c336:	d1ed      	bne.n	800c314 <osMessageQueueNew+0x4c>
 800c338:	e7dc      	b.n	800c2f4 <osMessageQueueNew+0x2c>
 800c33a:	bf00      	nop

0800c33c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800c33c:	b570      	push	{r4, r5, r6, lr}
 800c33e:	461c      	mov	r4, r3
 800c340:	b082      	sub	sp, #8
 800c342:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800c346:	b1be      	cbz	r6, 800c378 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800c348:	b350      	cbz	r0, 800c3a0 <osMessageQueuePut+0x64>
 800c34a:	b349      	cbz	r1, 800c3a0 <osMessageQueuePut+0x64>
 800c34c:	bb43      	cbnz	r3, 800c3a0 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800c34e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c350:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800c352:	f000 fec9 	bl	800d0e8 <xQueueGenericSendFromISR>
 800c356:	2801      	cmp	r0, #1
 800c358:	d11e      	bne.n	800c398 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c35a:	9b01      	ldr	r3, [sp, #4]
 800c35c:	b1cb      	cbz	r3, 800c392 <osMessageQueuePut+0x56>
 800c35e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c362:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c366:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c36a:	f3bf 8f4f 	dsb	sy
 800c36e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c372:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800c374:	b002      	add	sp, #8
 800c376:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800c378:	b190      	cbz	r0, 800c3a0 <osMessageQueuePut+0x64>
 800c37a:	b189      	cbz	r1, 800c3a0 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800c37c:	4633      	mov	r3, r6
 800c37e:	4622      	mov	r2, r4
 800c380:	f000 fd34 	bl	800cdec <xQueueGenericSend>
 800c384:	2801      	cmp	r0, #1
 800c386:	d004      	beq.n	800c392 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800c388:	b134      	cbz	r4, 800c398 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800c38a:	f06f 0001 	mvn.w	r0, #1
}
 800c38e:	b002      	add	sp, #8
 800c390:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800c392:	2000      	movs	r0, #0
}
 800c394:	b002      	add	sp, #8
 800c396:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800c398:	f06f 0002 	mvn.w	r0, #2
}
 800c39c:	b002      	add	sp, #8
 800c39e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800c3a0:	f06f 0003 	mvn.w	r0, #3
 800c3a4:	e7e6      	b.n	800c374 <osMessageQueuePut+0x38>
 800c3a6:	bf00      	nop

0800c3a8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800c3a8:	b530      	push	{r4, r5, lr}
 800c3aa:	461c      	mov	r4, r3
 800c3ac:	b083      	sub	sp, #12
 800c3ae:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800c3b2:	b1bb      	cbz	r3, 800c3e4 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800c3b4:	b348      	cbz	r0, 800c40a <osMessageQueueGet+0x62>
 800c3b6:	b341      	cbz	r1, 800c40a <osMessageQueueGet+0x62>
 800c3b8:	bb3c      	cbnz	r4, 800c40a <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800c3ba:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c3bc:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800c3be:	f001 fa59 	bl	800d874 <xQueueReceiveFromISR>
 800c3c2:	2801      	cmp	r0, #1
 800c3c4:	d11d      	bne.n	800c402 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c3c6:	9b01      	ldr	r3, [sp, #4]
 800c3c8:	b1c3      	cbz	r3, 800c3fc <osMessageQueueGet+0x54>
 800c3ca:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c3ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c3d2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c3d6:	f3bf 8f4f 	dsb	sy
 800c3da:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c3de:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800c3e0:	b003      	add	sp, #12
 800c3e2:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800c3e4:	b188      	cbz	r0, 800c40a <osMessageQueueGet+0x62>
 800c3e6:	b181      	cbz	r1, 800c40a <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800c3e8:	4622      	mov	r2, r4
 800c3ea:	f000 ff3b 	bl	800d264 <xQueueReceive>
 800c3ee:	2801      	cmp	r0, #1
 800c3f0:	d004      	beq.n	800c3fc <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800c3f2:	b134      	cbz	r4, 800c402 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800c3f4:	f06f 0001 	mvn.w	r0, #1
}
 800c3f8:	b003      	add	sp, #12
 800c3fa:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800c3fc:	2000      	movs	r0, #0
}
 800c3fe:	b003      	add	sp, #12
 800c400:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800c402:	f06f 0002 	mvn.w	r0, #2
}
 800c406:	b003      	add	sp, #12
 800c408:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800c40a:	f06f 0003 	mvn.w	r0, #3
 800c40e:	e7e7      	b.n	800c3e0 <osMessageQueueGet+0x38>

0800c410 <osMessageQueueGetCount>:
 800c410:	b130      	cbz	r0, 800c420 <osMessageQueueGetCount+0x10>
 800c412:	f3ef 8305 	mrs	r3, IPSR
 800c416:	b10b      	cbz	r3, 800c41c <osMessageQueueGetCount+0xc>
 800c418:	f001 baa0 	b.w	800d95c <uxQueueMessagesWaitingFromISR>
 800c41c:	f001 ba88 	b.w	800d930 <uxQueueMessagesWaiting>
 800c420:	4770      	bx	lr
 800c422:	bf00      	nop

0800c424 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800c424:	4b04      	ldr	r3, [pc, #16]	; (800c438 <vApplicationGetIdleTaskMemory+0x14>)
 800c426:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800c428:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800c42a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800c42c:	4c03      	ldr	r4, [pc, #12]	; (800c43c <vApplicationGetIdleTaskMemory+0x18>)
 800c42e:	600c      	str	r4, [r1, #0]
}
 800c430:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800c434:	6013      	str	r3, [r2, #0]
}
 800c436:	4770      	bx	lr
 800c438:	20002bc4 	.word	0x20002bc4
 800c43c:	200029c4 	.word	0x200029c4

0800c440 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800c440:	4b05      	ldr	r3, [pc, #20]	; (800c458 <vApplicationGetTimerTaskMemory+0x18>)
 800c442:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800c444:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800c446:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800c44a:	4c04      	ldr	r4, [pc, #16]	; (800c45c <vApplicationGetTimerTaskMemory+0x1c>)
 800c44c:	600c      	str	r4, [r1, #0]
}
 800c44e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800c452:	6013      	str	r3, [r2, #0]
}
 800c454:	4770      	bx	lr
 800c456:	bf00      	nop
 800c458:	20003074 	.word	0x20003074
 800c45c:	20002c74 	.word	0x20002c74

0800c460 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800c460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c464:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800c466:	f001 ff43 	bl	800e2f0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800c46a:	4a54      	ldr	r2, [pc, #336]	; (800c5bc <pvPortMalloc+0x15c>)
 800c46c:	6816      	ldr	r6, [r2, #0]
 800c46e:	2e00      	cmp	r6, #0
 800c470:	d06e      	beq.n	800c550 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800c472:	4b53      	ldr	r3, [pc, #332]	; (800c5c0 <pvPortMalloc+0x160>)
 800c474:	681f      	ldr	r7, [r3, #0]
 800c476:	423d      	tst	r5, r7
 800c478:	d12e      	bne.n	800c4d8 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800c47a:	b36d      	cbz	r5, 800c4d8 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800c47c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800c480:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800c482:	bf1c      	itt	ne
 800c484:	f024 0407 	bicne.w	r4, r4, #7
 800c488:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800c48a:	b32c      	cbz	r4, 800c4d8 <pvPortMalloc+0x78>
 800c48c:	f8df c144 	ldr.w	ip, [pc, #324]	; 800c5d4 <pvPortMalloc+0x174>
 800c490:	f8dc 5000 	ldr.w	r5, [ip]
 800c494:	42a5      	cmp	r5, r4
 800c496:	d31f      	bcc.n	800c4d8 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800c498:	484a      	ldr	r0, [pc, #296]	; (800c5c4 <pvPortMalloc+0x164>)
 800c49a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800c49c:	e003      	b.n	800c4a6 <pvPortMalloc+0x46>
 800c49e:	681a      	ldr	r2, [r3, #0]
 800c4a0:	b122      	cbz	r2, 800c4ac <pvPortMalloc+0x4c>
 800c4a2:	4618      	mov	r0, r3
 800c4a4:	4613      	mov	r3, r2
 800c4a6:	6859      	ldr	r1, [r3, #4]
 800c4a8:	42a1      	cmp	r1, r4
 800c4aa:	d3f8      	bcc.n	800c49e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800c4ac:	42b3      	cmp	r3, r6
 800c4ae:	d013      	beq.n	800c4d8 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800c4b0:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800c4b2:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800c4b4:	f858 eb08 	ldr.w	lr, [r8], #8
 800c4b8:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800c4bc:	2a10      	cmp	r2, #16
 800c4be:	d929      	bls.n	800c514 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800c4c0:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800c4c2:	0748      	lsls	r0, r1, #29
 800c4c4:	d00f      	beq.n	800c4e6 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800c4c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c4ca:	f383 8811 	msr	BASEPRI, r3
 800c4ce:	f3bf 8f6f 	isb	sy
 800c4d2:	f3bf 8f4f 	dsb	sy
 800c4d6:	e7fe      	b.n	800c4d6 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800c4d8:	f001 ff12 	bl	800e300 <xTaskResumeAll>
 800c4dc:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800c4e0:	4640      	mov	r0, r8
 800c4e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800c4e6:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800c4e8:	4a36      	ldr	r2, [pc, #216]	; (800c5c4 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800c4ea:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800c4ec:	4614      	mov	r4, r2
 800c4ee:	6812      	ldr	r2, [r2, #0]
 800c4f0:	4291      	cmp	r1, r2
 800c4f2:	d8fb      	bhi.n	800c4ec <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800c4f4:	6860      	ldr	r0, [r4, #4]
 800c4f6:	eb04 0e00 	add.w	lr, r4, r0
 800c4fa:	4571      	cmp	r1, lr
 800c4fc:	d04b      	beq.n	800c596 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800c4fe:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800c502:	eb01 000e 	add.w	r0, r1, lr
 800c506:	4282      	cmp	r2, r0
 800c508:	d051      	beq.n	800c5ae <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800c50a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800c50c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800c50e:	bf18      	it	ne
 800c510:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800c512:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800c514:	4a2c      	ldr	r2, [pc, #176]	; (800c5c8 <pvPortMalloc+0x168>)
 800c516:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800c518:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800c51a:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800c51c:	bf38      	it	cc
 800c51e:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800c520:	4a2a      	ldr	r2, [pc, #168]	; (800c5cc <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800c522:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800c526:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800c528:	2000      	movs	r0, #0
 800c52a:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800c52e:	6813      	ldr	r3, [r2, #0]
 800c530:	3301      	adds	r3, #1
 800c532:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800c534:	f001 fee4 	bl	800e300 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800c538:	f018 0f07 	tst.w	r8, #7
 800c53c:	d0d0      	beq.n	800c4e0 <pvPortMalloc+0x80>
 800c53e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c542:	f383 8811 	msr	BASEPRI, r3
 800c546:	f3bf 8f6f 	isb	sy
 800c54a:	f3bf 8f4f 	dsb	sy
 800c54e:	e7fe      	b.n	800c54e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800c550:	4b1f      	ldr	r3, [pc, #124]	; (800c5d0 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800c552:	075e      	lsls	r6, r3, #29
 800c554:	d118      	bne.n	800c588 <pvPortMalloc+0x128>
 800c556:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800c55a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800c55c:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800c55e:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800c562:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800c564:	4a18      	ldr	r2, [pc, #96]	; (800c5c8 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800c566:	4817      	ldr	r0, [pc, #92]	; (800c5c4 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800c568:	4c15      	ldr	r4, [pc, #84]	; (800c5c0 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800c56a:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800c56c:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800c56e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800c570:	4a18      	ldr	r2, [pc, #96]	; (800c5d4 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800c572:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800c576:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800c578:	2200      	movs	r2, #0
 800c57a:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800c57c:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800c57e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800c582:	e9c1 6300 	strd	r6, r3, [r1]
}
 800c586:	e776      	b.n	800c476 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800c588:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800c58a:	f021 0107 	bic.w	r1, r1, #7
 800c58e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800c592:	460b      	mov	r3, r1
 800c594:	e7e2      	b.n	800c55c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800c596:	6849      	ldr	r1, [r1, #4]
 800c598:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800c59c:	eb04 010e 	add.w	r1, r4, lr
 800c5a0:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800c5a2:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800c5a6:	d001      	beq.n	800c5ac <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800c5a8:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800c5aa:	e7b2      	b.n	800c512 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800c5ac:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800c5ae:	42b2      	cmp	r2, r6
 800c5b0:	d0ab      	beq.n	800c50a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800c5b2:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800c5b4:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800c5b6:	4470      	add	r0, lr
 800c5b8:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800c5ba:	e7a6      	b.n	800c50a <pvPortMalloc+0xaa>
 800c5bc:	20003120 	.word	0x20003120
 800c5c0:	20013124 	.word	0x20013124
 800c5c4:	20013138 	.word	0x20013138
 800c5c8:	2001312c 	.word	0x2001312c
 800c5cc:	20013130 	.word	0x20013130
 800c5d0:	20003124 	.word	0x20003124
 800c5d4:	20013128 	.word	0x20013128

0800c5d8 <vPortFree>:
	if( pv != NULL )
 800c5d8:	b1d0      	cbz	r0, 800c610 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800c5da:	4a2c      	ldr	r2, [pc, #176]	; (800c68c <vPortFree+0xb4>)
 800c5dc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800c5e0:	6812      	ldr	r2, [r2, #0]
 800c5e2:	4213      	tst	r3, r2
 800c5e4:	d00b      	beq.n	800c5fe <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800c5e6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800c5ea:	b191      	cbz	r1, 800c612 <vPortFree+0x3a>
 800c5ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c5f0:	f383 8811 	msr	BASEPRI, r3
 800c5f4:	f3bf 8f6f 	isb	sy
 800c5f8:	f3bf 8f4f 	dsb	sy
 800c5fc:	e7fe      	b.n	800c5fc <vPortFree+0x24>
 800c5fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c602:	f383 8811 	msr	BASEPRI, r3
 800c606:	f3bf 8f6f 	isb	sy
 800c60a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800c60e:	e7fe      	b.n	800c60e <vPortFree+0x36>
 800c610:	4770      	bx	lr
{
 800c612:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800c614:	ea23 0302 	bic.w	r3, r3, r2
{
 800c618:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800c61a:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800c61e:	4c1c      	ldr	r4, [pc, #112]	; (800c690 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800c620:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800c622:	f001 fe65 	bl	800e2f0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800c626:	9801      	ldr	r0, [sp, #4]
 800c628:	6822      	ldr	r2, [r4, #0]
 800c62a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800c62e:	4b19      	ldr	r3, [pc, #100]	; (800c694 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800c630:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800c632:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800c634:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800c636:	461a      	mov	r2, r3
 800c638:	681b      	ldr	r3, [r3, #0]
 800c63a:	4298      	cmp	r0, r3
 800c63c:	d8fb      	bhi.n	800c636 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800c63e:	6854      	ldr	r4, [r2, #4]
 800c640:	eb02 0e04 	add.w	lr, r2, r4
 800c644:	4570      	cmp	r0, lr
 800c646:	d010      	beq.n	800c66a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800c648:	eb00 0c01 	add.w	ip, r0, r1
 800c64c:	4563      	cmp	r3, ip
 800c64e:	d014      	beq.n	800c67a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800c650:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800c652:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800c654:	bf18      	it	ne
 800c656:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800c658:	4a0f      	ldr	r2, [pc, #60]	; (800c698 <vPortFree+0xc0>)
 800c65a:	6813      	ldr	r3, [r2, #0]
 800c65c:	3301      	adds	r3, #1
 800c65e:	6013      	str	r3, [r2, #0]
}
 800c660:	b002      	add	sp, #8
 800c662:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800c666:	f001 be4b 	b.w	800e300 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800c66a:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800c66c:	1850      	adds	r0, r2, r1
 800c66e:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800c670:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800c672:	d001      	beq.n	800c678 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800c674:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800c676:	e7ef      	b.n	800c658 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800c678:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800c67a:	4c08      	ldr	r4, [pc, #32]	; (800c69c <vPortFree+0xc4>)
 800c67c:	6824      	ldr	r4, [r4, #0]
 800c67e:	42a3      	cmp	r3, r4
 800c680:	d0e6      	beq.n	800c650 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800c682:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800c686:	4421      	add	r1, r4
 800c688:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800c68a:	e7e1      	b.n	800c650 <vPortFree+0x78>
 800c68c:	20013124 	.word	0x20013124
 800c690:	20013128 	.word	0x20013128
 800c694:	20013138 	.word	0x20013138
 800c698:	20013134 	.word	0x20013134
 800c69c:	20003120 	.word	0x20003120

0800c6a0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800c6a0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800c6a4:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800c6a8:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800c6aa:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800c6ae:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800c6b2:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800c6b4:	4770      	bx	lr
 800c6b6:	bf00      	nop

0800c6b8 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800c6b8:	2300      	movs	r3, #0
 800c6ba:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800c6bc:	4770      	bx	lr
 800c6be:	bf00      	nop

0800c6c0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800c6c0:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800c6c2:	689a      	ldr	r2, [r3, #8]
 800c6c4:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800c6c6:	6802      	ldr	r2, [r0, #0]
{
 800c6c8:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800c6ca:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800c6cc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800c6ce:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800c6d0:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800c6d2:	6099      	str	r1, [r3, #8]
}
 800c6d4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800c6d8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800c6da:	6002      	str	r2, [r0, #0]
}
 800c6dc:	4770      	bx	lr
 800c6de:	bf00      	nop

0800c6e0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800c6e0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800c6e2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800c6e4:	1c6b      	adds	r3, r5, #1
 800c6e6:	d010      	beq.n	800c70a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800c6e8:	f100 0308 	add.w	r3, r0, #8
 800c6ec:	461c      	mov	r4, r3
 800c6ee:	685b      	ldr	r3, [r3, #4]
 800c6f0:	681a      	ldr	r2, [r3, #0]
 800c6f2:	42aa      	cmp	r2, r5
 800c6f4:	d9fa      	bls.n	800c6ec <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800c6f6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800c6f8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800c6fa:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800c6fc:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800c6fe:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800c700:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800c702:	6108      	str	r0, [r1, #16]
}
 800c704:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800c706:	6002      	str	r2, [r0, #0]
}
 800c708:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800c70a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800c70c:	6863      	ldr	r3, [r4, #4]
 800c70e:	e7f2      	b.n	800c6f6 <vListInsert+0x16>

0800c710 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800c710:	6903      	ldr	r3, [r0, #16]
{
 800c712:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800c714:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800c718:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800c71a:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800c71c:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800c71e:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800c720:	bf08      	it	eq
 800c722:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800c724:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800c726:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800c72a:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800c72c:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800c72e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800c730:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800c732:	6818      	ldr	r0, [r3, #0]
}
 800c734:	4770      	bx	lr
 800c736:	bf00      	nop

0800c738 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800c738:	4808      	ldr	r0, [pc, #32]	; (800c75c <prvPortStartFirstTask+0x24>)
 800c73a:	6800      	ldr	r0, [r0, #0]
 800c73c:	6800      	ldr	r0, [r0, #0]
 800c73e:	f380 8808 	msr	MSP, r0
 800c742:	f04f 0000 	mov.w	r0, #0
 800c746:	f380 8814 	msr	CONTROL, r0
 800c74a:	b662      	cpsie	i
 800c74c:	b661      	cpsie	f
 800c74e:	f3bf 8f4f 	dsb	sy
 800c752:	f3bf 8f6f 	isb	sy
 800c756:	df00      	svc	0
 800c758:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800c75a:	0000      	.short	0x0000
 800c75c:	e000ed08 	.word	0xe000ed08

0800c760 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800c760:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800c770 <vPortEnableVFP+0x10>
 800c764:	6801      	ldr	r1, [r0, #0]
 800c766:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800c76a:	6001      	str	r1, [r0, #0]
 800c76c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800c76e:	0000      	.short	0x0000
 800c770:	e000ed88 	.word	0xe000ed88

0800c774 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800c774:	4b0e      	ldr	r3, [pc, #56]	; (800c7b0 <prvTaskExitError+0x3c>)
 800c776:	681b      	ldr	r3, [r3, #0]
{
 800c778:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800c77a:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800c77c:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800c77e:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800c780:	d008      	beq.n	800c794 <prvTaskExitError+0x20>
 800c782:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c786:	f383 8811 	msr	BASEPRI, r3
 800c78a:	f3bf 8f6f 	isb	sy
 800c78e:	f3bf 8f4f 	dsb	sy
 800c792:	e7fe      	b.n	800c792 <prvTaskExitError+0x1e>
 800c794:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c798:	f383 8811 	msr	BASEPRI, r3
 800c79c:	f3bf 8f6f 	isb	sy
 800c7a0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800c7a4:	9b01      	ldr	r3, [sp, #4]
 800c7a6:	2b00      	cmp	r3, #0
 800c7a8:	d0fc      	beq.n	800c7a4 <prvTaskExitError+0x30>
}
 800c7aa:	b002      	add	sp, #8
 800c7ac:	4770      	bx	lr
 800c7ae:	bf00      	nop
 800c7b0:	20000084 	.word	0x20000084

0800c7b4 <pxPortInitialiseStack>:
{
 800c7b4:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800c7b6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800c7ba:	4c07      	ldr	r4, [pc, #28]	; (800c7d8 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800c7bc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800c7c0:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800c7c4:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800c7c8:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800c7cc:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800c7d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c7d4:	3844      	subs	r0, #68	; 0x44
 800c7d6:	4770      	bx	lr
 800c7d8:	0800c775 	.word	0x0800c775
 800c7dc:	00000000 	.word	0x00000000

0800c7e0 <SVC_Handler>:
	__asm volatile (
 800c7e0:	4b07      	ldr	r3, [pc, #28]	; (800c800 <pxCurrentTCBConst2>)
 800c7e2:	6819      	ldr	r1, [r3, #0]
 800c7e4:	6808      	ldr	r0, [r1, #0]
 800c7e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7ea:	f380 8809 	msr	PSP, r0
 800c7ee:	f3bf 8f6f 	isb	sy
 800c7f2:	f04f 0000 	mov.w	r0, #0
 800c7f6:	f380 8811 	msr	BASEPRI, r0
 800c7fa:	4770      	bx	lr
 800c7fc:	f3af 8000 	nop.w

0800c800 <pxCurrentTCBConst2>:
 800c800:	20013188 	.word	0x20013188

0800c804 <vPortEnterCritical>:
 800c804:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c808:	f383 8811 	msr	BASEPRI, r3
 800c80c:	f3bf 8f6f 	isb	sy
 800c810:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800c814:	4a0b      	ldr	r2, [pc, #44]	; (800c844 <vPortEnterCritical+0x40>)
 800c816:	6813      	ldr	r3, [r2, #0]
 800c818:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800c81a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800c81c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800c81e:	d000      	beq.n	800c822 <vPortEnterCritical+0x1e>
}
 800c820:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800c822:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c826:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800c82a:	b2db      	uxtb	r3, r3
 800c82c:	2b00      	cmp	r3, #0
 800c82e:	d0f7      	beq.n	800c820 <vPortEnterCritical+0x1c>
 800c830:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c834:	f383 8811 	msr	BASEPRI, r3
 800c838:	f3bf 8f6f 	isb	sy
 800c83c:	f3bf 8f4f 	dsb	sy
 800c840:	e7fe      	b.n	800c840 <vPortEnterCritical+0x3c>
 800c842:	bf00      	nop
 800c844:	20000084 	.word	0x20000084

0800c848 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800c848:	4a08      	ldr	r2, [pc, #32]	; (800c86c <vPortExitCritical+0x24>)
 800c84a:	6813      	ldr	r3, [r2, #0]
 800c84c:	b943      	cbnz	r3, 800c860 <vPortExitCritical+0x18>
 800c84e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c852:	f383 8811 	msr	BASEPRI, r3
 800c856:	f3bf 8f6f 	isb	sy
 800c85a:	f3bf 8f4f 	dsb	sy
 800c85e:	e7fe      	b.n	800c85e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800c860:	3b01      	subs	r3, #1
 800c862:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800c864:	b90b      	cbnz	r3, 800c86a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800c866:	f383 8811 	msr	BASEPRI, r3
}
 800c86a:	4770      	bx	lr
 800c86c:	20000084 	.word	0x20000084

0800c870 <PendSV_Handler>:
	__asm volatile
 800c870:	f3ef 8009 	mrs	r0, PSP
 800c874:	f3bf 8f6f 	isb	sy
 800c878:	4b15      	ldr	r3, [pc, #84]	; (800c8d0 <pxCurrentTCBConst>)
 800c87a:	681a      	ldr	r2, [r3, #0]
 800c87c:	f01e 0f10 	tst.w	lr, #16
 800c880:	bf08      	it	eq
 800c882:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800c886:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c88a:	6010      	str	r0, [r2, #0]
 800c88c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800c890:	f04f 0050 	mov.w	r0, #80	; 0x50
 800c894:	f380 8811 	msr	BASEPRI, r0
 800c898:	f3bf 8f4f 	dsb	sy
 800c89c:	f3bf 8f6f 	isb	sy
 800c8a0:	f001 fd54 	bl	800e34c <vTaskSwitchContext>
 800c8a4:	f04f 0000 	mov.w	r0, #0
 800c8a8:	f380 8811 	msr	BASEPRI, r0
 800c8ac:	bc09      	pop	{r0, r3}
 800c8ae:	6819      	ldr	r1, [r3, #0]
 800c8b0:	6808      	ldr	r0, [r1, #0]
 800c8b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8b6:	f01e 0f10 	tst.w	lr, #16
 800c8ba:	bf08      	it	eq
 800c8bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800c8c0:	f380 8809 	msr	PSP, r0
 800c8c4:	f3bf 8f6f 	isb	sy
 800c8c8:	4770      	bx	lr
 800c8ca:	bf00      	nop
 800c8cc:	f3af 8000 	nop.w

0800c8d0 <pxCurrentTCBConst>:
 800c8d0:	20013188 	.word	0x20013188

0800c8d4 <xPortSysTickHandler>:
{
 800c8d4:	b508      	push	{r3, lr}
	__asm volatile
 800c8d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c8da:	f383 8811 	msr	BASEPRI, r3
 800c8de:	f3bf 8f6f 	isb	sy
 800c8e2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800c8e6:	f001 fd21 	bl	800e32c <xTaskIncrementTick>
 800c8ea:	b128      	cbz	r0, 800c8f8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800c8ec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c8f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c8f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800c8f8:	2300      	movs	r3, #0
 800c8fa:	f383 8811 	msr	BASEPRI, r3
}
 800c8fe:	bd08      	pop	{r3, pc}

0800c900 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800c900:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800c904:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c906:	4906      	ldr	r1, [pc, #24]	; (800c920 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800c908:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800c90a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c90c:	680b      	ldr	r3, [r1, #0]
 800c90e:	4905      	ldr	r1, [pc, #20]	; (800c924 <vPortSetupTimerInterrupt+0x24>)
 800c910:	fba1 1303 	umull	r1, r3, r1, r3
 800c914:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800c916:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c918:	3b01      	subs	r3, #1
 800c91a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800c91c:	6110      	str	r0, [r2, #16]
}
 800c91e:	4770      	bx	lr
 800c920:	20000078 	.word	0x20000078
 800c924:	10624dd3 	.word	0x10624dd3

0800c928 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c928:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c92c:	4a49      	ldr	r2, [pc, #292]	; (800ca54 <xPortStartScheduler+0x12c>)
 800c92e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800c932:	4291      	cmp	r1, r2
 800c934:	d043      	beq.n	800c9be <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800c936:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800c93a:	4b47      	ldr	r3, [pc, #284]	; (800ca58 <xPortStartScheduler+0x130>)
 800c93c:	429a      	cmp	r2, r3
 800c93e:	d035      	beq.n	800c9ac <xPortStartScheduler+0x84>
{
 800c940:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c942:	4b46      	ldr	r3, [pc, #280]	; (800ca5c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c944:	4846      	ldr	r0, [pc, #280]	; (800ca60 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c946:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c948:	4c46      	ldr	r4, [pc, #280]	; (800ca64 <xPortStartScheduler+0x13c>)
{
 800c94a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800c94c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c94e:	b2d2      	uxtb	r2, r2
 800c950:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800c952:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800c954:	781b      	ldrb	r3, [r3, #0]
 800c956:	b2db      	uxtb	r3, r3
 800c958:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c95c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c960:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c964:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c968:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c96a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c96c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c96e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c970:	bf48      	it	mi
 800c972:	2206      	movmi	r2, #6
 800c974:	d511      	bpl.n	800c99a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800c976:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800c97a:	005b      	lsls	r3, r3, #1
 800c97c:	b2db      	uxtb	r3, r3
 800c97e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c982:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c986:	0609      	lsls	r1, r1, #24
 800c988:	4610      	mov	r0, r2
 800c98a:	f102 32ff 	add.w	r2, r2, #4294967295
 800c98e:	d4f2      	bmi.n	800c976 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800c990:	2803      	cmp	r0, #3
 800c992:	6020      	str	r0, [r4, #0]
 800c994:	f88d 3007 	strb.w	r3, [sp, #7]
 800c998:	d01a      	beq.n	800c9d0 <xPortStartScheduler+0xa8>
	__asm volatile
 800c99a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c99e:	f383 8811 	msr	BASEPRI, r3
 800c9a2:	f3bf 8f6f 	isb	sy
 800c9a6:	f3bf 8f4f 	dsb	sy
 800c9aa:	e7fe      	b.n	800c9aa <xPortStartScheduler+0x82>
 800c9ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9b0:	f383 8811 	msr	BASEPRI, r3
 800c9b4:	f3bf 8f6f 	isb	sy
 800c9b8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800c9bc:	e7fe      	b.n	800c9bc <xPortStartScheduler+0x94>
 800c9be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9c2:	f383 8811 	msr	BASEPRI, r3
 800c9c6:	f3bf 8f6f 	isb	sy
 800c9ca:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c9ce:	e7fe      	b.n	800c9ce <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c9d0:	9b02      	ldr	r3, [sp, #8]
 800c9d2:	4a22      	ldr	r2, [pc, #136]	; (800ca5c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c9d4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800c9d8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c9dc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800c9de:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c9e0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c9e2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800c9e6:	4c20      	ldr	r4, [pc, #128]	; (800ca68 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c9e8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800c9ec:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800c9f0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800c9f4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800c9f8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800c9fc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800c9fe:	f7ff ff7f 	bl	800c900 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800ca02:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800ca04:	f7ff feac 	bl	800c760 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800ca08:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800ca0c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800ca10:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800ca14:	f7ff fe90 	bl	800c738 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800ca18:	f001 fc98 	bl	800e34c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800ca1c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800ca1e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800ca20:	3301      	adds	r3, #1
 800ca22:	d008      	beq.n	800ca36 <xPortStartScheduler+0x10e>
 800ca24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca28:	f383 8811 	msr	BASEPRI, r3
 800ca2c:	f3bf 8f6f 	isb	sy
 800ca30:	f3bf 8f4f 	dsb	sy
 800ca34:	e7fe      	b.n	800ca34 <xPortStartScheduler+0x10c>
 800ca36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca3a:	f383 8811 	msr	BASEPRI, r3
 800ca3e:	f3bf 8f6f 	isb	sy
 800ca42:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800ca46:	9b03      	ldr	r3, [sp, #12]
 800ca48:	2b00      	cmp	r3, #0
 800ca4a:	d0fc      	beq.n	800ca46 <xPortStartScheduler+0x11e>
}
 800ca4c:	2000      	movs	r0, #0
 800ca4e:	b004      	add	sp, #16
 800ca50:	bd70      	pop	{r4, r5, r6, pc}
 800ca52:	bf00      	nop
 800ca54:	410fc271 	.word	0x410fc271
 800ca58:	410fc270 	.word	0x410fc270
 800ca5c:	e000e400 	.word	0xe000e400
 800ca60:	20013140 	.word	0x20013140
 800ca64:	20013144 	.word	0x20013144
 800ca68:	20000084 	.word	0x20000084

0800ca6c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800ca6c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800ca70:	2b0f      	cmp	r3, #15
 800ca72:	d90e      	bls.n	800ca92 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800ca74:	4911      	ldr	r1, [pc, #68]	; (800cabc <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800ca76:	4a12      	ldr	r2, [pc, #72]	; (800cac0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800ca78:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800ca7a:	7812      	ldrb	r2, [r2, #0]
 800ca7c:	429a      	cmp	r2, r3
 800ca7e:	d908      	bls.n	800ca92 <vPortValidateInterruptPriority+0x26>
 800ca80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca84:	f383 8811 	msr	BASEPRI, r3
 800ca88:	f3bf 8f6f 	isb	sy
 800ca8c:	f3bf 8f4f 	dsb	sy
 800ca90:	e7fe      	b.n	800ca90 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800ca92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ca96:	4a0b      	ldr	r2, [pc, #44]	; (800cac4 <vPortValidateInterruptPriority+0x58>)
 800ca98:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800ca9c:	6812      	ldr	r2, [r2, #0]
 800ca9e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800caa2:	4293      	cmp	r3, r2
 800caa4:	d908      	bls.n	800cab8 <vPortValidateInterruptPriority+0x4c>
 800caa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800caaa:	f383 8811 	msr	BASEPRI, r3
 800caae:	f3bf 8f6f 	isb	sy
 800cab2:	f3bf 8f4f 	dsb	sy
 800cab6:	e7fe      	b.n	800cab6 <vPortValidateInterruptPriority+0x4a>
	}
 800cab8:	4770      	bx	lr
 800caba:	bf00      	nop
 800cabc:	e000e3f0 	.word	0xe000e3f0
 800cac0:	20013140 	.word	0x20013140
 800cac4:	20013144 	.word	0x20013144

0800cac8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800cac8:	b570      	push	{r4, r5, r6, lr}
 800caca:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800cacc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800cace:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800cad0:	b920      	cbnz	r0, 800cadc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800cad2:	6825      	ldr	r5, [r4, #0]
 800cad4:	b34d      	cbz	r5, 800cb2a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800cad6:	3601      	adds	r6, #1
 800cad8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800cada:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800cadc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800cade:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800cae0:	b97d      	cbnz	r5, 800cb02 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800cae2:	6860      	ldr	r0, [r4, #4]
 800cae4:	f01b fbaf 	bl	8028246 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cae8:	6863      	ldr	r3, [r4, #4]
 800caea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800caec:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800caee:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800caf0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800caf2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800caf4:	bf24      	itt	cs
 800caf6:	6823      	ldrcs	r3, [r4, #0]
 800caf8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800cafa:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800cafc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800cafe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800cb00:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800cb02:	68e0      	ldr	r0, [r4, #12]
 800cb04:	f01b fb9f 	bl	8028246 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800cb08:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cb0a:	68e3      	ldr	r3, [r4, #12]
 800cb0c:	4251      	negs	r1, r2
 800cb0e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800cb10:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800cb12:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800cb14:	4293      	cmp	r3, r2
 800cb16:	d202      	bcs.n	800cb1e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800cb18:	68a3      	ldr	r3, [r4, #8]
 800cb1a:	440b      	add	r3, r1
 800cb1c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800cb1e:	2d02      	cmp	r5, #2
 800cb20:	d008      	beq.n	800cb34 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800cb22:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800cb24:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800cb26:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800cb28:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800cb2a:	68a0      	ldr	r0, [r4, #8]
 800cb2c:	f001 fde0 	bl	800e6f0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800cb30:	60a5      	str	r5, [r4, #8]
 800cb32:	e7d0      	b.n	800cad6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800cb34:	2e01      	cmp	r6, #1
 800cb36:	bf38      	it	cc
 800cb38:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800cb3a:	2000      	movs	r0, #0
 800cb3c:	e7cc      	b.n	800cad8 <prvCopyDataToQueue+0x10>
 800cb3e:	bf00      	nop

0800cb40 <xQueueGenericCreateStatic>:
	{
 800cb40:	b530      	push	{r4, r5, lr}
 800cb42:	b083      	sub	sp, #12
 800cb44:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800cb48:	b940      	cbnz	r0, 800cb5c <xQueueGenericCreateStatic+0x1c>
 800cb4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb4e:	f383 8811 	msr	BASEPRI, r3
 800cb52:	f3bf 8f6f 	isb	sy
 800cb56:	f3bf 8f4f 	dsb	sy
 800cb5a:	e7fe      	b.n	800cb5a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800cb5c:	461d      	mov	r5, r3
 800cb5e:	b17b      	cbz	r3, 800cb80 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800cb60:	b302      	cbz	r2, 800cba4 <xQueueGenericCreateStatic+0x64>
 800cb62:	b1b1      	cbz	r1, 800cb92 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800cb64:	2350      	movs	r3, #80	; 0x50
 800cb66:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800cb68:	9b01      	ldr	r3, [sp, #4]
 800cb6a:	2b50      	cmp	r3, #80	; 0x50
 800cb6c:	d023      	beq.n	800cbb6 <xQueueGenericCreateStatic+0x76>
 800cb6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb72:	f383 8811 	msr	BASEPRI, r3
 800cb76:	f3bf 8f6f 	isb	sy
 800cb7a:	f3bf 8f4f 	dsb	sy
 800cb7e:	e7fe      	b.n	800cb7e <xQueueGenericCreateStatic+0x3e>
 800cb80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb84:	f383 8811 	msr	BASEPRI, r3
 800cb88:	f3bf 8f6f 	isb	sy
 800cb8c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800cb90:	e7fe      	b.n	800cb90 <xQueueGenericCreateStatic+0x50>
 800cb92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb96:	f383 8811 	msr	BASEPRI, r3
 800cb9a:	f3bf 8f6f 	isb	sy
 800cb9e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800cba2:	e7fe      	b.n	800cba2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800cba4:	bb89      	cbnz	r1, 800cc0a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800cba6:	2250      	movs	r2, #80	; 0x50
 800cba8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800cbaa:	9a01      	ldr	r2, [sp, #4]
 800cbac:	2a50      	cmp	r2, #80	; 0x50
 800cbae:	d1de      	bne.n	800cb6e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800cbb0:	9a01      	ldr	r2, [sp, #4]
 800cbb2:	462a      	mov	r2, r5
 800cbb4:	e000      	b.n	800cbb8 <xQueueGenericCreateStatic+0x78>
 800cbb6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800cbb8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800cbba:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800cbbc:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800cbc0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800cbc4:	f7ff fe1e 	bl	800c804 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cbc8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800cbcc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800cbce:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cbd0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cbd4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cbd6:	4401      	add	r1, r0
 800cbd8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800cbda:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cbdc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800cbde:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800cbe0:	21ff      	movs	r1, #255	; 0xff
 800cbe2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cbe6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800cbe8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800cbec:	f105 0010 	add.w	r0, r5, #16
 800cbf0:	f7ff fd56 	bl	800c6a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800cbf4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800cbf8:	f7ff fd52 	bl	800c6a0 <vListInitialise>
	taskEXIT_CRITICAL();
 800cbfc:	f7ff fe24 	bl	800c848 <vPortExitCritical>
	}
 800cc00:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800cc02:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800cc06:	b003      	add	sp, #12
 800cc08:	bd30      	pop	{r4, r5, pc}
 800cc0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cc0e:	f383 8811 	msr	BASEPRI, r3
 800cc12:	f3bf 8f6f 	isb	sy
 800cc16:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800cc1a:	e7fe      	b.n	800cc1a <xQueueGenericCreateStatic+0xda>

0800cc1c <xQueueGenericCreate>:
	{
 800cc1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800cc1e:	b940      	cbnz	r0, 800cc32 <xQueueGenericCreate+0x16>
 800cc20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cc24:	f383 8811 	msr	BASEPRI, r3
 800cc28:	f3bf 8f6f 	isb	sy
 800cc2c:	f3bf 8f4f 	dsb	sy
 800cc30:	e7fe      	b.n	800cc30 <xQueueGenericCreate+0x14>
 800cc32:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800cc34:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800cc38:	3050      	adds	r0, #80	; 0x50
 800cc3a:	460e      	mov	r6, r1
 800cc3c:	4617      	mov	r7, r2
 800cc3e:	f7ff fc0f 	bl	800c460 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800cc42:	4604      	mov	r4, r0
 800cc44:	b340      	cbz	r0, 800cc98 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800cc46:	2300      	movs	r3, #0
 800cc48:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800cc4c:	b336      	cbz	r6, 800cc9c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cc4e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800cc52:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800cc54:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800cc58:	f7ff fdd4 	bl	800c804 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cc5c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800cc60:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800cc62:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cc64:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cc68:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cc6a:	440a      	add	r2, r1
 800cc6c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800cc6e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cc70:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800cc72:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800cc74:	22ff      	movs	r2, #255	; 0xff
 800cc76:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cc7a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800cc7c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800cc80:	f104 0010 	add.w	r0, r4, #16
 800cc84:	f7ff fd0c 	bl	800c6a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800cc88:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800cc8c:	f7ff fd08 	bl	800c6a0 <vListInitialise>
	taskEXIT_CRITICAL();
 800cc90:	f7ff fdda 	bl	800c848 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800cc94:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800cc98:	4620      	mov	r0, r4
 800cc9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cc9c:	4603      	mov	r3, r0
 800cc9e:	e7d8      	b.n	800cc52 <xQueueGenericCreate+0x36>

0800cca0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800cca0:	b940      	cbnz	r0, 800ccb4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800cca2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cca6:	f383 8811 	msr	BASEPRI, r3
 800ccaa:	f3bf 8f6f 	isb	sy
 800ccae:	f3bf 8f4f 	dsb	sy
 800ccb2:	e7fe      	b.n	800ccb2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800ccb4:	4288      	cmp	r0, r1
 800ccb6:	d208      	bcs.n	800ccca <xQueueCreateCountingSemaphoreStatic+0x2a>
 800ccb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ccbc:	f383 8811 	msr	BASEPRI, r3
 800ccc0:	f3bf 8f6f 	isb	sy
 800ccc4:	f3bf 8f4f 	dsb	sy
 800ccc8:	e7fe      	b.n	800ccc8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800ccca:	b530      	push	{r4, r5, lr}
 800cccc:	4615      	mov	r5, r2
 800ccce:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800ccd0:	2a00      	cmp	r2, #0
 800ccd2:	d03c      	beq.n	800cd4e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800ccd4:	2350      	movs	r3, #80	; 0x50
 800ccd6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800ccd8:	9b03      	ldr	r3, [sp, #12]
 800ccda:	2b50      	cmp	r3, #80	; 0x50
 800ccdc:	d008      	beq.n	800ccf0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800ccde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cce2:	f383 8811 	msr	BASEPRI, r3
 800cce6:	f3bf 8f6f 	isb	sy
 800ccea:	f3bf 8f4f 	dsb	sy
 800ccee:	e7fe      	b.n	800ccee <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800ccf0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800ccf2:	2301      	movs	r3, #1
 800ccf4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800ccf8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800ccfa:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800ccfe:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800cd00:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800cd02:	f7ff fd7f 	bl	800c804 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cd06:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800cd0a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800cd0c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cd0e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cd12:	1ac3      	subs	r3, r0, r3
 800cd14:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cd16:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800cd18:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800cd1c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cd20:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800cd22:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800cd24:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cd28:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800cd2a:	f105 0010 	add.w	r0, r5, #16
 800cd2e:	f7ff fcb7 	bl	800c6a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800cd32:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800cd36:	f7ff fcb3 	bl	800c6a0 <vListInitialise>
	taskEXIT_CRITICAL();
 800cd3a:	f7ff fd85 	bl	800c848 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800cd3e:	9901      	ldr	r1, [sp, #4]
 800cd40:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800cd42:	2302      	movs	r3, #2
	}
 800cd44:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800cd46:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800cd4a:	b005      	add	sp, #20
 800cd4c:	bd30      	pop	{r4, r5, pc}
 800cd4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd52:	f383 8811 	msr	BASEPRI, r3
 800cd56:	f3bf 8f6f 	isb	sy
 800cd5a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800cd5e:	e7fe      	b.n	800cd5e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800cd60 <xQueueCreateCountingSemaphore>:
	{
 800cd60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800cd62:	b940      	cbnz	r0, 800cd76 <xQueueCreateCountingSemaphore+0x16>
 800cd64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd68:	f383 8811 	msr	BASEPRI, r3
 800cd6c:	f3bf 8f6f 	isb	sy
 800cd70:	f3bf 8f4f 	dsb	sy
 800cd74:	e7fe      	b.n	800cd74 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800cd76:	4288      	cmp	r0, r1
 800cd78:	460e      	mov	r6, r1
 800cd7a:	4604      	mov	r4, r0
 800cd7c:	d208      	bcs.n	800cd90 <xQueueCreateCountingSemaphore+0x30>
 800cd7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd82:	f383 8811 	msr	BASEPRI, r3
 800cd86:	f3bf 8f6f 	isb	sy
 800cd8a:	f3bf 8f4f 	dsb	sy
 800cd8e:	e7fe      	b.n	800cd8e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800cd90:	2050      	movs	r0, #80	; 0x50
 800cd92:	f7ff fb65 	bl	800c460 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800cd96:	4605      	mov	r5, r0
 800cd98:	b330      	cbz	r0, 800cde8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800cd9a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800cd9c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800cda0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800cda4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800cda6:	f7ff fd2d 	bl	800c804 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cdaa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800cdae:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800cdb0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cdb2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cdb6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cdb8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cdba:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cdbc:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800cdbe:	22ff      	movs	r2, #255	; 0xff
 800cdc0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800cdc4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800cdc6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800cdc8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800cdcc:	f105 0010 	add.w	r0, r5, #16
 800cdd0:	f7ff fc66 	bl	800c6a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800cdd4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800cdd8:	f7ff fc62 	bl	800c6a0 <vListInitialise>
	taskEXIT_CRITICAL();
 800cddc:	f7ff fd34 	bl	800c848 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800cde0:	2302      	movs	r3, #2
 800cde2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800cde6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800cde8:	4628      	mov	r0, r5
 800cdea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cdec <xQueueGenericSend>:
{
 800cdec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cdf0:	b085      	sub	sp, #20
 800cdf2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800cdf4:	2800      	cmp	r0, #0
 800cdf6:	f000 80a4 	beq.w	800cf42 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800cdfa:	4688      	mov	r8, r1
 800cdfc:	461f      	mov	r7, r3
 800cdfe:	4604      	mov	r4, r0
 800ce00:	2900      	cmp	r1, #0
 800ce02:	f000 8091 	beq.w	800cf28 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ce06:	2f02      	cmp	r7, #2
 800ce08:	d10b      	bne.n	800ce22 <xQueueGenericSend+0x36>
 800ce0a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ce0c:	2b01      	cmp	r3, #1
 800ce0e:	d008      	beq.n	800ce22 <xQueueGenericSend+0x36>
 800ce10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce14:	f383 8811 	msr	BASEPRI, r3
 800ce18:	f3bf 8f6f 	isb	sy
 800ce1c:	f3bf 8f4f 	dsb	sy
 800ce20:	e7fe      	b.n	800ce20 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ce22:	f001 fc0f 	bl	800e644 <xTaskGetSchedulerState>
 800ce26:	4605      	mov	r5, r0
 800ce28:	2800      	cmp	r0, #0
 800ce2a:	f000 8093 	beq.w	800cf54 <xQueueGenericSend+0x168>
 800ce2e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ce30:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ce34:	f7ff fce6 	bl	800c804 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ce38:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ce3a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ce3c:	429a      	cmp	r2, r3
 800ce3e:	f0c0 80ef 	bcc.w	800d020 <xQueueGenericSend+0x234>
 800ce42:	2f02      	cmp	r7, #2
 800ce44:	f000 80ec 	beq.w	800d020 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ce48:	9801      	ldr	r0, [sp, #4]
 800ce4a:	2800      	cmp	r0, #0
 800ce4c:	f000 8101 	beq.w	800d052 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800ce50:	2d00      	cmp	r5, #0
 800ce52:	f000 80e1 	beq.w	800d018 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800ce56:	f7ff fcf7 	bl	800c848 <vPortExitCritical>
		vTaskSuspendAll();
 800ce5a:	f001 fa49 	bl	800e2f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ce5e:	f7ff fcd1 	bl	800c804 <vPortEnterCritical>
 800ce62:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ce66:	2bff      	cmp	r3, #255	; 0xff
 800ce68:	bf04      	itt	eq
 800ce6a:	2300      	moveq	r3, #0
 800ce6c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800ce70:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ce74:	2bff      	cmp	r3, #255	; 0xff
 800ce76:	bf04      	itt	eq
 800ce78:	2300      	moveq	r3, #0
 800ce7a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ce7e:	f7ff fce3 	bl	800c848 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ce82:	a901      	add	r1, sp, #4
 800ce84:	a802      	add	r0, sp, #8
 800ce86:	f001 fb8f 	bl	800e5a8 <xTaskCheckForTimeOut>
 800ce8a:	2800      	cmp	r0, #0
 800ce8c:	f040 80e6 	bne.w	800d05c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800ce90:	f7ff fcb8 	bl	800c804 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800ce94:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ce96:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ce98:	429a      	cmp	r2, r3
 800ce9a:	d068      	beq.n	800cf6e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800ce9c:	f7ff fcd4 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cea0:	f7ff fcb0 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cea4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800cea8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ceaa:	2d00      	cmp	r5, #0
 800ceac:	dc04      	bgt.n	800ceb8 <xQueueGenericSend+0xcc>
 800ceae:	e011      	b.n	800ced4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800ceb0:	1e6a      	subs	r2, r5, #1
 800ceb2:	b2d3      	uxtb	r3, r2
 800ceb4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ceb6:	b16b      	cbz	r3, 800ced4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ceb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ceba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cebc:	b153      	cbz	r3, 800ced4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cebe:	f001 fb1f 	bl	800e500 <xTaskRemoveFromEventList>
 800cec2:	2800      	cmp	r0, #0
 800cec4:	d0f4      	beq.n	800ceb0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800cec6:	f001 fbb7 	bl	800e638 <vTaskMissedYield>
			--cTxLock;
 800ceca:	1e6a      	subs	r2, r5, #1
 800cecc:	b2d3      	uxtb	r3, r2
 800cece:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ced0:	2b00      	cmp	r3, #0
 800ced2:	d1f1      	bne.n	800ceb8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800ced4:	23ff      	movs	r3, #255	; 0xff
 800ced6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ceda:	f7ff fcb5 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cede:	f7ff fc91 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cee2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800cee6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cee8:	2d00      	cmp	r5, #0
 800ceea:	dd14      	ble.n	800cf16 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ceec:	f104 0910 	add.w	r9, r4, #16
 800cef0:	e003      	b.n	800cefa <xQueueGenericSend+0x10e>
				--cRxLock;
 800cef2:	1e6a      	subs	r2, r5, #1
 800cef4:	b2d3      	uxtb	r3, r2
 800cef6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cef8:	b16b      	cbz	r3, 800cf16 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cefa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cefc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cefe:	b153      	cbz	r3, 800cf16 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf00:	f001 fafe 	bl	800e500 <xTaskRemoveFromEventList>
 800cf04:	2800      	cmp	r0, #0
 800cf06:	d0f4      	beq.n	800cef2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800cf08:	f001 fb96 	bl	800e638 <vTaskMissedYield>
				--cRxLock;
 800cf0c:	1e6a      	subs	r2, r5, #1
 800cf0e:	b2d3      	uxtb	r3, r2
 800cf10:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cf12:	2b00      	cmp	r3, #0
 800cf14:	d1f1      	bne.n	800cefa <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800cf16:	23ff      	movs	r3, #255	; 0xff
 800cf18:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cf1c:	f7ff fc94 	bl	800c848 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800cf20:	f001 f9ee 	bl	800e300 <xTaskResumeAll>
 800cf24:	2501      	movs	r5, #1
 800cf26:	e785      	b.n	800ce34 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800cf28:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800cf2a:	2b00      	cmp	r3, #0
 800cf2c:	f43f af6b 	beq.w	800ce06 <xQueueGenericSend+0x1a>
 800cf30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf34:	f383 8811 	msr	BASEPRI, r3
 800cf38:	f3bf 8f6f 	isb	sy
 800cf3c:	f3bf 8f4f 	dsb	sy
 800cf40:	e7fe      	b.n	800cf40 <xQueueGenericSend+0x154>
 800cf42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf46:	f383 8811 	msr	BASEPRI, r3
 800cf4a:	f3bf 8f6f 	isb	sy
 800cf4e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800cf52:	e7fe      	b.n	800cf52 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800cf54:	9b01      	ldr	r3, [sp, #4]
 800cf56:	2b00      	cmp	r3, #0
 800cf58:	f43f af6a 	beq.w	800ce30 <xQueueGenericSend+0x44>
 800cf5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf60:	f383 8811 	msr	BASEPRI, r3
 800cf64:	f3bf 8f6f 	isb	sy
 800cf68:	f3bf 8f4f 	dsb	sy
 800cf6c:	e7fe      	b.n	800cf6c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800cf6e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800cf72:	f7ff fc69 	bl	800c848 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800cf76:	9901      	ldr	r1, [sp, #4]
 800cf78:	4648      	mov	r0, r9
 800cf7a:	f001 fa33 	bl	800e3e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800cf7e:	f7ff fc41 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cf82:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cf86:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf88:	2d00      	cmp	r5, #0
 800cf8a:	dc04      	bgt.n	800cf96 <xQueueGenericSend+0x1aa>
 800cf8c:	e011      	b.n	800cfb2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800cf8e:	1e6b      	subs	r3, r5, #1
 800cf90:	b2da      	uxtb	r2, r3
 800cf92:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf94:	b16a      	cbz	r2, 800cfb2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cf96:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cf98:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cf9a:	b153      	cbz	r3, 800cfb2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cf9c:	f001 fab0 	bl	800e500 <xTaskRemoveFromEventList>
 800cfa0:	2800      	cmp	r0, #0
 800cfa2:	d0f4      	beq.n	800cf8e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800cfa4:	f001 fb48 	bl	800e638 <vTaskMissedYield>
			--cTxLock;
 800cfa8:	1e6b      	subs	r3, r5, #1
 800cfaa:	b2da      	uxtb	r2, r3
 800cfac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cfae:	2a00      	cmp	r2, #0
 800cfb0:	d1f1      	bne.n	800cf96 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800cfb2:	23ff      	movs	r3, #255	; 0xff
 800cfb4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cfb8:	f7ff fc46 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cfbc:	f7ff fc22 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cfc0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cfc4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cfc6:	2d00      	cmp	r5, #0
 800cfc8:	dc04      	bgt.n	800cfd4 <xQueueGenericSend+0x1e8>
 800cfca:	e011      	b.n	800cff0 <xQueueGenericSend+0x204>
				--cRxLock;
 800cfcc:	1e6b      	subs	r3, r5, #1
 800cfce:	b2da      	uxtb	r2, r3
 800cfd0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cfd2:	b16a      	cbz	r2, 800cff0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cfd4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cfd6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cfd8:	b153      	cbz	r3, 800cff0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cfda:	f001 fa91 	bl	800e500 <xTaskRemoveFromEventList>
 800cfde:	2800      	cmp	r0, #0
 800cfe0:	d0f4      	beq.n	800cfcc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800cfe2:	f001 fb29 	bl	800e638 <vTaskMissedYield>
				--cRxLock;
 800cfe6:	1e6b      	subs	r3, r5, #1
 800cfe8:	b2da      	uxtb	r2, r3
 800cfea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cfec:	2a00      	cmp	r2, #0
 800cfee:	d1f1      	bne.n	800cfd4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800cff0:	23ff      	movs	r3, #255	; 0xff
 800cff2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cff6:	f7ff fc27 	bl	800c848 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800cffa:	f001 f981 	bl	800e300 <xTaskResumeAll>
 800cffe:	2800      	cmp	r0, #0
 800d000:	d190      	bne.n	800cf24 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800d002:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d006:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d00a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d00e:	f3bf 8f4f 	dsb	sy
 800d012:	f3bf 8f6f 	isb	sy
 800d016:	e785      	b.n	800cf24 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d018:	a802      	add	r0, sp, #8
 800d01a:	f001 fab9 	bl	800e590 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800d01e:	e71a      	b.n	800ce56 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d020:	463a      	mov	r2, r7
 800d022:	4641      	mov	r1, r8
 800d024:	4620      	mov	r0, r4
 800d026:	f7ff fd4f 	bl	800cac8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d02a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d02c:	2b00      	cmp	r3, #0
 800d02e:	d153      	bne.n	800d0d8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800d030:	b148      	cbz	r0, 800d046 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800d032:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d036:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d03a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d03e:	f3bf 8f4f 	dsb	sy
 800d042:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800d046:	f7ff fbff 	bl	800c848 <vPortExitCritical>
				return pdPASS;
 800d04a:	2001      	movs	r0, #1
}
 800d04c:	b005      	add	sp, #20
 800d04e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d052:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800d054:	f7ff fbf8 	bl	800c848 <vPortExitCritical>
					return errQUEUE_FULL;
 800d058:	9800      	ldr	r0, [sp, #0]
 800d05a:	e7f7      	b.n	800d04c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800d05c:	f7ff fbd2 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d060:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d064:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d066:	2d00      	cmp	r5, #0
 800d068:	dd10      	ble.n	800d08c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d06a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800d06e:	e003      	b.n	800d078 <xQueueGenericSend+0x28c>
			--cTxLock;
 800d070:	1e6b      	subs	r3, r5, #1
 800d072:	b2da      	uxtb	r2, r3
 800d074:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d076:	b14a      	cbz	r2, 800d08c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d078:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d07a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d07c:	b133      	cbz	r3, 800d08c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d07e:	f001 fa3f 	bl	800e500 <xTaskRemoveFromEventList>
 800d082:	2800      	cmp	r0, #0
 800d084:	d0f4      	beq.n	800d070 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800d086:	f001 fad7 	bl	800e638 <vTaskMissedYield>
 800d08a:	e7f1      	b.n	800d070 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800d08c:	23ff      	movs	r3, #255	; 0xff
 800d08e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d092:	f7ff fbd9 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d096:	f7ff fbb5 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d09a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d09e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d0a0:	2d00      	cmp	r5, #0
 800d0a2:	dd10      	ble.n	800d0c6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d0a4:	f104 0610 	add.w	r6, r4, #16
 800d0a8:	e003      	b.n	800d0b2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800d0aa:	1e6b      	subs	r3, r5, #1
 800d0ac:	b2da      	uxtb	r2, r3
 800d0ae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d0b0:	b14a      	cbz	r2, 800d0c6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d0b2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d0b4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d0b6:	b133      	cbz	r3, 800d0c6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d0b8:	f001 fa22 	bl	800e500 <xTaskRemoveFromEventList>
 800d0bc:	2800      	cmp	r0, #0
 800d0be:	d0f4      	beq.n	800d0aa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800d0c0:	f001 faba 	bl	800e638 <vTaskMissedYield>
 800d0c4:	e7f1      	b.n	800d0aa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800d0c6:	23ff      	movs	r3, #255	; 0xff
 800d0c8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d0cc:	f7ff fbbc 	bl	800c848 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800d0d0:	f001 f916 	bl	800e300 <xTaskResumeAll>
			return errQUEUE_FULL;
 800d0d4:	2000      	movs	r0, #0
 800d0d6:	e7b9      	b.n	800d04c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d0d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d0dc:	f001 fa10 	bl	800e500 <xTaskRemoveFromEventList>
 800d0e0:	2800      	cmp	r0, #0
 800d0e2:	d0b0      	beq.n	800d046 <xQueueGenericSend+0x25a>
 800d0e4:	e7a5      	b.n	800d032 <xQueueGenericSend+0x246>
 800d0e6:	bf00      	nop

0800d0e8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800d0e8:	2800      	cmp	r0, #0
 800d0ea:	d04b      	beq.n	800d184 <xQueueGenericSendFromISR+0x9c>
{
 800d0ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0f0:	460e      	mov	r6, r1
 800d0f2:	4617      	mov	r7, r2
 800d0f4:	461d      	mov	r5, r3
 800d0f6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d0f8:	b321      	cbz	r1, 800d144 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d0fa:	2d02      	cmp	r5, #2
 800d0fc:	d10b      	bne.n	800d116 <xQueueGenericSendFromISR+0x2e>
 800d0fe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d100:	2b01      	cmp	r3, #1
 800d102:	d008      	beq.n	800d116 <xQueueGenericSendFromISR+0x2e>
 800d104:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d108:	f383 8811 	msr	BASEPRI, r3
 800d10c:	f3bf 8f6f 	isb	sy
 800d110:	f3bf 8f4f 	dsb	sy
 800d114:	e7fe      	b.n	800d114 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d116:	f7ff fca9 	bl	800ca6c <vPortValidateInterruptPriority>
	__asm volatile
 800d11a:	f3ef 8811 	mrs	r8, BASEPRI
 800d11e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d122:	f383 8811 	msr	BASEPRI, r3
 800d126:	f3bf 8f6f 	isb	sy
 800d12a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d12e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d130:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d132:	429a      	cmp	r2, r3
 800d134:	d312      	bcc.n	800d15c <xQueueGenericSendFromISR+0x74>
 800d136:	2d02      	cmp	r5, #2
 800d138:	d010      	beq.n	800d15c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800d13a:	2000      	movs	r0, #0
	__asm volatile
 800d13c:	f388 8811 	msr	BASEPRI, r8
}
 800d140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d144:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d146:	2b00      	cmp	r3, #0
 800d148:	d0d7      	beq.n	800d0fa <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800d14a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d14e:	f383 8811 	msr	BASEPRI, r3
 800d152:	f3bf 8f6f 	isb	sy
 800d156:	f3bf 8f4f 	dsb	sy
 800d15a:	e7fe      	b.n	800d15a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d15c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800d15e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d162:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d164:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800d166:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d168:	4620      	mov	r0, r4
 800d16a:	f7ff fcad 	bl	800cac8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800d16e:	1c6b      	adds	r3, r5, #1
 800d170:	d011      	beq.n	800d196 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d172:	1c6b      	adds	r3, r5, #1
 800d174:	b25b      	sxtb	r3, r3
 800d176:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800d17a:	2001      	movs	r0, #1
	__asm volatile
 800d17c:	f388 8811 	msr	BASEPRI, r8
}
 800d180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800d184:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d188:	f383 8811 	msr	BASEPRI, r3
 800d18c:	f3bf 8f6f 	isb	sy
 800d190:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d194:	e7fe      	b.n	800d194 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d196:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d198:	2b00      	cmp	r3, #0
 800d19a:	d0ee      	beq.n	800d17a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d19c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d1a0:	f001 f9ae 	bl	800e500 <xTaskRemoveFromEventList>
 800d1a4:	2800      	cmp	r0, #0
 800d1a6:	d0e8      	beq.n	800d17a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800d1a8:	2f00      	cmp	r7, #0
 800d1aa:	d0e6      	beq.n	800d17a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d1ac:	2001      	movs	r0, #1
 800d1ae:	6038      	str	r0, [r7, #0]
 800d1b0:	e7c4      	b.n	800d13c <xQueueGenericSendFromISR+0x54>
 800d1b2:	bf00      	nop

0800d1b4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800d1b4:	b370      	cbz	r0, 800d214 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800d1b6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800d1b8:	b570      	push	{r4, r5, r6, lr}
 800d1ba:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800d1bc:	b143      	cbz	r3, 800d1d0 <xQueueGiveFromISR+0x1c>
 800d1be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1c2:	f383 8811 	msr	BASEPRI, r3
 800d1c6:	f3bf 8f6f 	isb	sy
 800d1ca:	f3bf 8f4f 	dsb	sy
 800d1ce:	e7fe      	b.n	800d1ce <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d1d0:	6803      	ldr	r3, [r0, #0]
 800d1d2:	460c      	mov	r4, r1
 800d1d4:	b33b      	cbz	r3, 800d226 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d1d6:	f7ff fc49 	bl	800ca6c <vPortValidateInterruptPriority>
	__asm volatile
 800d1da:	f3ef 8511 	mrs	r5, BASEPRI
 800d1de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1e2:	f383 8811 	msr	BASEPRI, r3
 800d1e6:	f3bf 8f6f 	isb	sy
 800d1ea:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d1ee:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800d1f0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800d1f2:	429a      	cmp	r2, r3
 800d1f4:	d923      	bls.n	800d23e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800d1f6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d1fa:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800d1fc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d1fe:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800d200:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800d202:	d020      	beq.n	800d246 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d204:	3301      	adds	r3, #1
 800d206:	b25b      	sxtb	r3, r3
 800d208:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800d20c:	2001      	movs	r0, #1
	__asm volatile
 800d20e:	f385 8811 	msr	BASEPRI, r5
}
 800d212:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800d214:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d218:	f383 8811 	msr	BASEPRI, r3
 800d21c:	f3bf 8f6f 	isb	sy
 800d220:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d224:	e7fe      	b.n	800d224 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d226:	6883      	ldr	r3, [r0, #8]
 800d228:	2b00      	cmp	r3, #0
 800d22a:	d0d4      	beq.n	800d1d6 <xQueueGiveFromISR+0x22>
 800d22c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d230:	f383 8811 	msr	BASEPRI, r3
 800d234:	f3bf 8f6f 	isb	sy
 800d238:	f3bf 8f4f 	dsb	sy
 800d23c:	e7fe      	b.n	800d23c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800d23e:	2000      	movs	r0, #0
	__asm volatile
 800d240:	f385 8811 	msr	BASEPRI, r5
}
 800d244:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d246:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800d248:	2b00      	cmp	r3, #0
 800d24a:	d0df      	beq.n	800d20c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d24c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800d250:	f001 f956 	bl	800e500 <xTaskRemoveFromEventList>
 800d254:	2800      	cmp	r0, #0
 800d256:	d0d9      	beq.n	800d20c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800d258:	2c00      	cmp	r4, #0
 800d25a:	d0d7      	beq.n	800d20c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d25c:	2001      	movs	r0, #1
 800d25e:	6020      	str	r0, [r4, #0]
 800d260:	e7ee      	b.n	800d240 <xQueueGiveFromISR+0x8c>
 800d262:	bf00      	nop

0800d264 <xQueueReceive>:
{
 800d264:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d268:	b085      	sub	sp, #20
 800d26a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800d26c:	2800      	cmp	r0, #0
 800d26e:	f000 815c 	beq.w	800d52a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d272:	460f      	mov	r7, r1
 800d274:	4604      	mov	r4, r0
 800d276:	2900      	cmp	r1, #0
 800d278:	d079      	beq.n	800d36e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d27a:	f001 f9e3 	bl	800e644 <xTaskGetSchedulerState>
 800d27e:	2800      	cmp	r0, #0
 800d280:	f000 8081 	beq.w	800d386 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800d284:	f7ff fabe 	bl	800c804 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d288:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d28a:	2d00      	cmp	r5, #0
 800d28c:	f040 8138 	bne.w	800d500 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d290:	9b01      	ldr	r3, [sp, #4]
 800d292:	2b00      	cmp	r3, #0
 800d294:	f000 80d5 	beq.w	800d442 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d298:	a802      	add	r0, sp, #8
 800d29a:	f001 f979 	bl	800e590 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800d29e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d2a0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800d2a4:	f7ff fad0 	bl	800c848 <vPortExitCritical>
		vTaskSuspendAll();
 800d2a8:	f001 f822 	bl	800e2f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d2ac:	f7ff faaa 	bl	800c804 <vPortEnterCritical>
 800d2b0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d2b4:	2bff      	cmp	r3, #255	; 0xff
 800d2b6:	bf08      	it	eq
 800d2b8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800d2bc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d2c0:	2bff      	cmp	r3, #255	; 0xff
 800d2c2:	bf08      	it	eq
 800d2c4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800d2c8:	f7ff fabe 	bl	800c848 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d2cc:	a901      	add	r1, sp, #4
 800d2ce:	a802      	add	r0, sp, #8
 800d2d0:	f001 f96a 	bl	800e5a8 <xTaskCheckForTimeOut>
 800d2d4:	2800      	cmp	r0, #0
 800d2d6:	d163      	bne.n	800d3a0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800d2d8:	f7ff fa94 	bl	800c804 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d2dc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d2de:	2b00      	cmp	r3, #0
 800d2e0:	f000 80b5 	beq.w	800d44e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800d2e4:	f7ff fab0 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d2e8:	f7ff fa8c 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d2ec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d2f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d2f2:	2d00      	cmp	r5, #0
 800d2f4:	dc04      	bgt.n	800d300 <xQueueReceive+0x9c>
 800d2f6:	e011      	b.n	800d31c <xQueueReceive+0xb8>
			--cTxLock;
 800d2f8:	1e6b      	subs	r3, r5, #1
 800d2fa:	b2da      	uxtb	r2, r3
 800d2fc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d2fe:	b16a      	cbz	r2, 800d31c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d300:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d302:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d304:	b153      	cbz	r3, 800d31c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d306:	f001 f8fb 	bl	800e500 <xTaskRemoveFromEventList>
 800d30a:	2800      	cmp	r0, #0
 800d30c:	d0f4      	beq.n	800d2f8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800d30e:	f001 f993 	bl	800e638 <vTaskMissedYield>
			--cTxLock;
 800d312:	1e6b      	subs	r3, r5, #1
 800d314:	b2da      	uxtb	r2, r3
 800d316:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d318:	2a00      	cmp	r2, #0
 800d31a:	d1f1      	bne.n	800d300 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800d31c:	23ff      	movs	r3, #255	; 0xff
 800d31e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d322:	f7ff fa91 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d326:	f7ff fa6d 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d32a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d32e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d330:	2d00      	cmp	r5, #0
 800d332:	dd14      	ble.n	800d35e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d334:	f104 0910 	add.w	r9, r4, #16
 800d338:	e003      	b.n	800d342 <xQueueReceive+0xde>
				--cRxLock;
 800d33a:	1e6b      	subs	r3, r5, #1
 800d33c:	b2da      	uxtb	r2, r3
 800d33e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d340:	b16a      	cbz	r2, 800d35e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d342:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d344:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d346:	b153      	cbz	r3, 800d35e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d348:	f001 f8da 	bl	800e500 <xTaskRemoveFromEventList>
 800d34c:	2800      	cmp	r0, #0
 800d34e:	d0f4      	beq.n	800d33a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800d350:	f001 f972 	bl	800e638 <vTaskMissedYield>
				--cRxLock;
 800d354:	1e6b      	subs	r3, r5, #1
 800d356:	b2da      	uxtb	r2, r3
 800d358:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d35a:	2a00      	cmp	r2, #0
 800d35c:	d1f1      	bne.n	800d342 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800d35e:	23ff      	movs	r3, #255	; 0xff
 800d360:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d364:	f7ff fa70 	bl	800c848 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d368:	f000 ffca 	bl	800e300 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800d36c:	e060      	b.n	800d430 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d36e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d370:	2b00      	cmp	r3, #0
 800d372:	d082      	beq.n	800d27a <xQueueReceive+0x16>
	__asm volatile
 800d374:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d378:	f383 8811 	msr	BASEPRI, r3
 800d37c:	f3bf 8f6f 	isb	sy
 800d380:	f3bf 8f4f 	dsb	sy
 800d384:	e7fe      	b.n	800d384 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d386:	9b01      	ldr	r3, [sp, #4]
 800d388:	2b00      	cmp	r3, #0
 800d38a:	f43f af7b 	beq.w	800d284 <xQueueReceive+0x20>
 800d38e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d392:	f383 8811 	msr	BASEPRI, r3
 800d396:	f3bf 8f6f 	isb	sy
 800d39a:	f3bf 8f4f 	dsb	sy
 800d39e:	e7fe      	b.n	800d39e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800d3a0:	f7ff fa30 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d3a4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d3a8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d3aa:	2d00      	cmp	r5, #0
 800d3ac:	dc04      	bgt.n	800d3b8 <xQueueReceive+0x154>
 800d3ae:	e011      	b.n	800d3d4 <xQueueReceive+0x170>
			--cTxLock;
 800d3b0:	1e6b      	subs	r3, r5, #1
 800d3b2:	b2da      	uxtb	r2, r3
 800d3b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d3b6:	b16a      	cbz	r2, 800d3d4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d3b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d3ba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d3bc:	b153      	cbz	r3, 800d3d4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d3be:	f001 f89f 	bl	800e500 <xTaskRemoveFromEventList>
 800d3c2:	2800      	cmp	r0, #0
 800d3c4:	d0f4      	beq.n	800d3b0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800d3c6:	f001 f937 	bl	800e638 <vTaskMissedYield>
			--cTxLock;
 800d3ca:	1e6b      	subs	r3, r5, #1
 800d3cc:	b2da      	uxtb	r2, r3
 800d3ce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d3d0:	2a00      	cmp	r2, #0
 800d3d2:	d1f1      	bne.n	800d3b8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800d3d4:	23ff      	movs	r3, #255	; 0xff
 800d3d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d3da:	f7ff fa35 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d3de:	f7ff fa11 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d3e2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d3e6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d3e8:	2d00      	cmp	r5, #0
 800d3ea:	dd14      	ble.n	800d416 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d3ec:	f104 0910 	add.w	r9, r4, #16
 800d3f0:	e003      	b.n	800d3fa <xQueueReceive+0x196>
				--cRxLock;
 800d3f2:	1e6b      	subs	r3, r5, #1
 800d3f4:	b2da      	uxtb	r2, r3
 800d3f6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d3f8:	b16a      	cbz	r2, 800d416 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d3fa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d3fc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d3fe:	b153      	cbz	r3, 800d416 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d400:	f001 f87e 	bl	800e500 <xTaskRemoveFromEventList>
 800d404:	2800      	cmp	r0, #0
 800d406:	d0f4      	beq.n	800d3f2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800d408:	f001 f916 	bl	800e638 <vTaskMissedYield>
				--cRxLock;
 800d40c:	1e6b      	subs	r3, r5, #1
 800d40e:	b2da      	uxtb	r2, r3
 800d410:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d412:	2a00      	cmp	r2, #0
 800d414:	d1f1      	bne.n	800d3fa <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800d416:	23ff      	movs	r3, #255	; 0xff
 800d418:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d41c:	f7ff fa14 	bl	800c848 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800d420:	f000 ff6e 	bl	800e300 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800d424:	f7ff f9ee 	bl	800c804 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d428:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d42a:	b153      	cbz	r3, 800d442 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800d42c:	f7ff fa0c 	bl	800c848 <vPortExitCritical>
		taskENTER_CRITICAL();
 800d430:	f7ff f9e8 	bl	800c804 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d434:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d436:	2d00      	cmp	r5, #0
 800d438:	d162      	bne.n	800d500 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d43a:	9b01      	ldr	r3, [sp, #4]
 800d43c:	2b00      	cmp	r3, #0
 800d43e:	f47f af31 	bne.w	800d2a4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800d442:	f7ff fa01 	bl	800c848 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800d446:	2000      	movs	r0, #0
}
 800d448:	b005      	add	sp, #20
 800d44a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800d44e:	f7ff f9fb 	bl	800c848 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800d452:	9901      	ldr	r1, [sp, #4]
 800d454:	4630      	mov	r0, r6
 800d456:	f000 ffc5 	bl	800e3e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d45a:	f7ff f9d3 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d45e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d462:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d464:	2d00      	cmp	r5, #0
 800d466:	dc04      	bgt.n	800d472 <xQueueReceive+0x20e>
 800d468:	e011      	b.n	800d48e <xQueueReceive+0x22a>
			--cTxLock;
 800d46a:	1e6b      	subs	r3, r5, #1
 800d46c:	b2da      	uxtb	r2, r3
 800d46e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d470:	b16a      	cbz	r2, 800d48e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d472:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d474:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d476:	b153      	cbz	r3, 800d48e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d478:	f001 f842 	bl	800e500 <xTaskRemoveFromEventList>
 800d47c:	2800      	cmp	r0, #0
 800d47e:	d0f4      	beq.n	800d46a <xQueueReceive+0x206>
						vTaskMissedYield();
 800d480:	f001 f8da 	bl	800e638 <vTaskMissedYield>
			--cTxLock;
 800d484:	1e6b      	subs	r3, r5, #1
 800d486:	b2da      	uxtb	r2, r3
 800d488:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d48a:	2a00      	cmp	r2, #0
 800d48c:	d1f1      	bne.n	800d472 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800d48e:	23ff      	movs	r3, #255	; 0xff
 800d490:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d494:	f7ff f9d8 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d498:	f7ff f9b4 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d49c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d4a0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d4a2:	2d00      	cmp	r5, #0
 800d4a4:	dd14      	ble.n	800d4d0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d4a6:	f104 0910 	add.w	r9, r4, #16
 800d4aa:	e003      	b.n	800d4b4 <xQueueReceive+0x250>
				--cRxLock;
 800d4ac:	1e6b      	subs	r3, r5, #1
 800d4ae:	b2da      	uxtb	r2, r3
 800d4b0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d4b2:	b16a      	cbz	r2, 800d4d0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d4b4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d4b6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d4b8:	b153      	cbz	r3, 800d4d0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d4ba:	f001 f821 	bl	800e500 <xTaskRemoveFromEventList>
 800d4be:	2800      	cmp	r0, #0
 800d4c0:	d0f4      	beq.n	800d4ac <xQueueReceive+0x248>
					vTaskMissedYield();
 800d4c2:	f001 f8b9 	bl	800e638 <vTaskMissedYield>
				--cRxLock;
 800d4c6:	1e6b      	subs	r3, r5, #1
 800d4c8:	b2da      	uxtb	r2, r3
 800d4ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d4cc:	2a00      	cmp	r2, #0
 800d4ce:	d1f1      	bne.n	800d4b4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800d4d0:	23ff      	movs	r3, #255	; 0xff
 800d4d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d4d6:	f7ff f9b7 	bl	800c848 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d4da:	f000 ff11 	bl	800e300 <xTaskResumeAll>
 800d4de:	2800      	cmp	r0, #0
 800d4e0:	d1a6      	bne.n	800d430 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800d4e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d4e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d4ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d4ee:	f3bf 8f4f 	dsb	sy
 800d4f2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800d4f6:	f7ff f985 	bl	800c804 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d4fa:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d4fc:	2d00      	cmp	r5, #0
 800d4fe:	d09c      	beq.n	800d43a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d500:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d502:	b152      	cbz	r2, 800d51a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d504:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d506:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d508:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d50a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d50c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d50e:	bf24      	itt	cs
 800d510:	6821      	ldrcs	r1, [r4, #0]
 800d512:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d514:	4638      	mov	r0, r7
 800d516:	f01a fe96 	bl	8028246 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800d51a:	3d01      	subs	r5, #1
 800d51c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d51e:	6923      	ldr	r3, [r4, #16]
 800d520:	b963      	cbnz	r3, 800d53c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800d522:	f7ff f991 	bl	800c848 <vPortExitCritical>
				return pdPASS;
 800d526:	2001      	movs	r0, #1
 800d528:	e78e      	b.n	800d448 <xQueueReceive+0x1e4>
 800d52a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d52e:	f383 8811 	msr	BASEPRI, r3
 800d532:	f3bf 8f6f 	isb	sy
 800d536:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800d53a:	e7fe      	b.n	800d53a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d53c:	f104 0010 	add.w	r0, r4, #16
 800d540:	f000 ffde 	bl	800e500 <xTaskRemoveFromEventList>
 800d544:	2800      	cmp	r0, #0
 800d546:	d0ec      	beq.n	800d522 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800d548:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d54c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d550:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d554:	f3bf 8f4f 	dsb	sy
 800d558:	f3bf 8f6f 	isb	sy
 800d55c:	e7e1      	b.n	800d522 <xQueueReceive+0x2be>
 800d55e:	bf00      	nop

0800d560 <xQueueSemaphoreTake>:
{
 800d560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d564:	b084      	sub	sp, #16
 800d566:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800d568:	2800      	cmp	r0, #0
 800d56a:	d05c      	beq.n	800d626 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800d56c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800d56e:	4604      	mov	r4, r0
 800d570:	b147      	cbz	r7, 800d584 <xQueueSemaphoreTake+0x24>
 800d572:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d576:	f383 8811 	msr	BASEPRI, r3
 800d57a:	f3bf 8f6f 	isb	sy
 800d57e:	f3bf 8f4f 	dsb	sy
 800d582:	e7fe      	b.n	800d582 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d584:	f001 f85e 	bl	800e644 <xTaskGetSchedulerState>
 800d588:	4605      	mov	r5, r0
 800d58a:	2800      	cmp	r0, #0
 800d58c:	d054      	beq.n	800d638 <xQueueSemaphoreTake+0xd8>
 800d58e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d590:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d594:	f7ff f936 	bl	800c804 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800d598:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800d59a:	2b00      	cmp	r3, #0
 800d59c:	f040 8148 	bne.w	800d830 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d5a0:	9b01      	ldr	r3, [sp, #4]
 800d5a2:	2b00      	cmp	r3, #0
 800d5a4:	f000 813a 	beq.w	800d81c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800d5a8:	2d00      	cmp	r5, #0
 800d5aa:	f000 809d 	beq.w	800d6e8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800d5ae:	f7ff f94b 	bl	800c848 <vPortExitCritical>
		vTaskSuspendAll();
 800d5b2:	f000 fe9d 	bl	800e2f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d5b6:	f7ff f925 	bl	800c804 <vPortEnterCritical>
 800d5ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d5be:	2bff      	cmp	r3, #255	; 0xff
 800d5c0:	bf04      	itt	eq
 800d5c2:	2300      	moveq	r3, #0
 800d5c4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d5c8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d5cc:	2bff      	cmp	r3, #255	; 0xff
 800d5ce:	bf04      	itt	eq
 800d5d0:	2300      	moveq	r3, #0
 800d5d2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d5d6:	f7ff f937 	bl	800c848 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d5da:	a901      	add	r1, sp, #4
 800d5dc:	a802      	add	r0, sp, #8
 800d5de:	f000 ffe3 	bl	800e5a8 <xTaskCheckForTimeOut>
 800d5e2:	2800      	cmp	r0, #0
 800d5e4:	d135      	bne.n	800d652 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800d5e6:	f7ff f90d 	bl	800c804 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d5ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d5ec:	2b00      	cmp	r3, #0
 800d5ee:	f000 80a4 	beq.w	800d73a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800d5f2:	f7ff f929 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d5f6:	f7ff f905 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d5fa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d5fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d600:	2d00      	cmp	r5, #0
 800d602:	dc05      	bgt.n	800d610 <xQueueSemaphoreTake+0xb0>
 800d604:	e074      	b.n	800d6f0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800d606:	1e6b      	subs	r3, r5, #1
 800d608:	b2da      	uxtb	r2, r3
 800d60a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d60c:	2a00      	cmp	r2, #0
 800d60e:	d06f      	beq.n	800d6f0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d610:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d612:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d614:	2b00      	cmp	r3, #0
 800d616:	d06b      	beq.n	800d6f0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d618:	f000 ff72 	bl	800e500 <xTaskRemoveFromEventList>
 800d61c:	2800      	cmp	r0, #0
 800d61e:	d0f2      	beq.n	800d606 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800d620:	f001 f80a 	bl	800e638 <vTaskMissedYield>
 800d624:	e7ef      	b.n	800d606 <xQueueSemaphoreTake+0xa6>
 800d626:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d62a:	f383 8811 	msr	BASEPRI, r3
 800d62e:	f3bf 8f6f 	isb	sy
 800d632:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800d636:	e7fe      	b.n	800d636 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d638:	9b01      	ldr	r3, [sp, #4]
 800d63a:	2b00      	cmp	r3, #0
 800d63c:	f000 80d4 	beq.w	800d7e8 <xQueueSemaphoreTake+0x288>
 800d640:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d644:	f383 8811 	msr	BASEPRI, r3
 800d648:	f3bf 8f6f 	isb	sy
 800d64c:	f3bf 8f4f 	dsb	sy
 800d650:	e7fe      	b.n	800d650 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800d652:	f7ff f8d7 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d656:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d65a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d65c:	2d00      	cmp	r5, #0
 800d65e:	dc04      	bgt.n	800d66a <xQueueSemaphoreTake+0x10a>
 800d660:	e011      	b.n	800d686 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800d662:	1e6b      	subs	r3, r5, #1
 800d664:	b2da      	uxtb	r2, r3
 800d666:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d668:	b16a      	cbz	r2, 800d686 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d66a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d66c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d66e:	b153      	cbz	r3, 800d686 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d670:	f000 ff46 	bl	800e500 <xTaskRemoveFromEventList>
 800d674:	2800      	cmp	r0, #0
 800d676:	d0f4      	beq.n	800d662 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800d678:	f000 ffde 	bl	800e638 <vTaskMissedYield>
			--cTxLock;
 800d67c:	1e6b      	subs	r3, r5, #1
 800d67e:	b2da      	uxtb	r2, r3
 800d680:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d682:	2a00      	cmp	r2, #0
 800d684:	d1f1      	bne.n	800d66a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800d686:	23ff      	movs	r3, #255	; 0xff
 800d688:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d68c:	f7ff f8dc 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d690:	f7ff f8b8 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d694:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d698:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d69a:	2d00      	cmp	r5, #0
 800d69c:	dd14      	ble.n	800d6c8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d69e:	f104 0810 	add.w	r8, r4, #16
 800d6a2:	e003      	b.n	800d6ac <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800d6a4:	1e6b      	subs	r3, r5, #1
 800d6a6:	b2da      	uxtb	r2, r3
 800d6a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d6aa:	b16a      	cbz	r2, 800d6c8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d6ac:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d6ae:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d6b0:	b153      	cbz	r3, 800d6c8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d6b2:	f000 ff25 	bl	800e500 <xTaskRemoveFromEventList>
 800d6b6:	2800      	cmp	r0, #0
 800d6b8:	d0f4      	beq.n	800d6a4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800d6ba:	f000 ffbd 	bl	800e638 <vTaskMissedYield>
				--cRxLock;
 800d6be:	1e6b      	subs	r3, r5, #1
 800d6c0:	b2da      	uxtb	r2, r3
 800d6c2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d6c4:	2a00      	cmp	r2, #0
 800d6c6:	d1f1      	bne.n	800d6ac <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800d6c8:	23ff      	movs	r3, #255	; 0xff
 800d6ca:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d6ce:	f7ff f8bb 	bl	800c848 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800d6d2:	f000 fe15 	bl	800e300 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800d6d6:	f7ff f895 	bl	800c804 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d6da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d6dc:	2b00      	cmp	r3, #0
 800d6de:	d07c      	beq.n	800d7da <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800d6e0:	f7ff f8b2 	bl	800c848 <vPortExitCritical>
	return xReturn;
 800d6e4:	2501      	movs	r5, #1
 800d6e6:	e755      	b.n	800d594 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d6e8:	a802      	add	r0, sp, #8
 800d6ea:	f000 ff51 	bl	800e590 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800d6ee:	e75e      	b.n	800d5ae <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800d6f0:	23ff      	movs	r3, #255	; 0xff
 800d6f2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d6f6:	f7ff f8a7 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d6fa:	f7ff f883 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d6fe:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d702:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d704:	2d00      	cmp	r5, #0
 800d706:	dd10      	ble.n	800d72a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d708:	f104 0810 	add.w	r8, r4, #16
 800d70c:	e003      	b.n	800d716 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800d70e:	1e6b      	subs	r3, r5, #1
 800d710:	b2da      	uxtb	r2, r3
 800d712:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d714:	b14a      	cbz	r2, 800d72a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d716:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d718:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d71a:	b133      	cbz	r3, 800d72a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d71c:	f000 fef0 	bl	800e500 <xTaskRemoveFromEventList>
 800d720:	2800      	cmp	r0, #0
 800d722:	d0f4      	beq.n	800d70e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800d724:	f000 ff88 	bl	800e638 <vTaskMissedYield>
 800d728:	e7f1      	b.n	800d70e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800d72a:	23ff      	movs	r3, #255	; 0xff
 800d72c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d730:	f7ff f88a 	bl	800c848 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d734:	f000 fde4 	bl	800e300 <xTaskResumeAll>
 800d738:	e7d4      	b.n	800d6e4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800d73a:	f7ff f885 	bl	800c848 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d73e:	6823      	ldr	r3, [r4, #0]
 800d740:	2b00      	cmp	r3, #0
 800d742:	d062      	beq.n	800d80a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800d744:	9901      	ldr	r1, [sp, #4]
 800d746:	4630      	mov	r0, r6
 800d748:	f000 fe4c 	bl	800e3e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d74c:	f7ff f85a 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d750:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d754:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d756:	2d00      	cmp	r5, #0
 800d758:	dc04      	bgt.n	800d764 <xQueueSemaphoreTake+0x204>
 800d75a:	e00d      	b.n	800d778 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800d75c:	1e6b      	subs	r3, r5, #1
 800d75e:	b2da      	uxtb	r2, r3
 800d760:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d762:	b14a      	cbz	r2, 800d778 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d764:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d766:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d768:	b133      	cbz	r3, 800d778 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d76a:	f000 fec9 	bl	800e500 <xTaskRemoveFromEventList>
 800d76e:	2800      	cmp	r0, #0
 800d770:	d0f4      	beq.n	800d75c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800d772:	f000 ff61 	bl	800e638 <vTaskMissedYield>
 800d776:	e7f1      	b.n	800d75c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d778:	23ff      	movs	r3, #255	; 0xff
 800d77a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d77e:	f7ff f863 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d782:	f7ff f83f 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d786:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d78a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d78c:	2d00      	cmp	r5, #0
 800d78e:	dd10      	ble.n	800d7b2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d790:	f104 0810 	add.w	r8, r4, #16
 800d794:	e003      	b.n	800d79e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800d796:	1e6b      	subs	r3, r5, #1
 800d798:	b2da      	uxtb	r2, r3
 800d79a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d79c:	b14a      	cbz	r2, 800d7b2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d79e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d7a0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d7a2:	b133      	cbz	r3, 800d7b2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d7a4:	f000 feac 	bl	800e500 <xTaskRemoveFromEventList>
 800d7a8:	2800      	cmp	r0, #0
 800d7aa:	d0f4      	beq.n	800d796 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800d7ac:	f000 ff44 	bl	800e638 <vTaskMissedYield>
 800d7b0:	e7f1      	b.n	800d796 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800d7b2:	23ff      	movs	r3, #255	; 0xff
 800d7b4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d7b8:	f7ff f846 	bl	800c848 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d7bc:	f000 fda0 	bl	800e300 <xTaskResumeAll>
 800d7c0:	2800      	cmp	r0, #0
 800d7c2:	d18f      	bne.n	800d6e4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800d7c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d7c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d7cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d7d0:	f3bf 8f4f 	dsb	sy
 800d7d4:	f3bf 8f6f 	isb	sy
 800d7d8:	e784      	b.n	800d6e4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800d7da:	f7ff f835 	bl	800c848 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800d7de:	b92f      	cbnz	r7, 800d7ec <xQueueSemaphoreTake+0x28c>
}
 800d7e0:	4638      	mov	r0, r7
 800d7e2:	b004      	add	sp, #16
 800d7e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d7e8:	4607      	mov	r7, r0
 800d7ea:	e6d1      	b.n	800d590 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800d7ec:	f7ff f80a 	bl	800c804 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800d7f0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d7f2:	b119      	cbz	r1, 800d7fc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800d7f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d7f6:	6819      	ldr	r1, [r3, #0]
 800d7f8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800d7fc:	68a0      	ldr	r0, [r4, #8]
 800d7fe:	f000 ffbd 	bl	800e77c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800d802:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800d804:	f7ff f820 	bl	800c848 <vPortExitCritical>
 800d808:	e7ea      	b.n	800d7e0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800d80a:	f7fe fffb 	bl	800c804 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d80e:	68a0      	ldr	r0, [r4, #8]
 800d810:	f000 ff28 	bl	800e664 <xTaskPriorityInherit>
 800d814:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800d816:	f7ff f817 	bl	800c848 <vPortExitCritical>
 800d81a:	e793      	b.n	800d744 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800d81c:	b197      	cbz	r7, 800d844 <xQueueSemaphoreTake+0x2e4>
 800d81e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d822:	f383 8811 	msr	BASEPRI, r3
 800d826:	f3bf 8f6f 	isb	sy
 800d82a:	f3bf 8f4f 	dsb	sy
 800d82e:	e7fe      	b.n	800d82e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d830:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800d832:	3b01      	subs	r3, #1
 800d834:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d836:	b1ca      	cbz	r2, 800d86c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d838:	6923      	ldr	r3, [r4, #16]
 800d83a:	b933      	cbnz	r3, 800d84a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800d83c:	f7ff f804 	bl	800c848 <vPortExitCritical>
				return pdPASS;
 800d840:	2701      	movs	r7, #1
 800d842:	e7cd      	b.n	800d7e0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800d844:	f7ff f800 	bl	800c848 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800d848:	e7ca      	b.n	800d7e0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d84a:	f104 0010 	add.w	r0, r4, #16
 800d84e:	f000 fe57 	bl	800e500 <xTaskRemoveFromEventList>
 800d852:	2800      	cmp	r0, #0
 800d854:	d0f2      	beq.n	800d83c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800d856:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d85a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d85e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d862:	f3bf 8f4f 	dsb	sy
 800d866:	f3bf 8f6f 	isb	sy
 800d86a:	e7e7      	b.n	800d83c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800d86c:	f000 ffda 	bl	800e824 <pvTaskIncrementMutexHeldCount>
 800d870:	60a0      	str	r0, [r4, #8]
 800d872:	e7e1      	b.n	800d838 <xQueueSemaphoreTake+0x2d8>

0800d874 <xQueueReceiveFromISR>:
{
 800d874:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800d878:	b310      	cbz	r0, 800d8c0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d87a:	460e      	mov	r6, r1
 800d87c:	4617      	mov	r7, r2
 800d87e:	4604      	mov	r4, r0
 800d880:	b191      	cbz	r1, 800d8a8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d882:	f7ff f8f3 	bl	800ca6c <vPortValidateInterruptPriority>
	__asm volatile
 800d886:	f3ef 8911 	mrs	r9, BASEPRI
 800d88a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d88e:	f383 8811 	msr	BASEPRI, r3
 800d892:	f3bf 8f6f 	isb	sy
 800d896:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d89a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d89c:	b9cd      	cbnz	r5, 800d8d2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800d89e:	4628      	mov	r0, r5
	__asm volatile
 800d8a0:	f389 8811 	msr	BASEPRI, r9
}
 800d8a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d8a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d8aa:	2b00      	cmp	r3, #0
 800d8ac:	d0e9      	beq.n	800d882 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800d8ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8b2:	f383 8811 	msr	BASEPRI, r3
 800d8b6:	f3bf 8f6f 	isb	sy
 800d8ba:	f3bf 8f4f 	dsb	sy
 800d8be:	e7fe      	b.n	800d8be <xQueueReceiveFromISR+0x4a>
 800d8c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8c4:	f383 8811 	msr	BASEPRI, r3
 800d8c8:	f3bf 8f6f 	isb	sy
 800d8cc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d8d0:	e7fe      	b.n	800d8d0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800d8d2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d8d6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800d8d8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d8dc:	b152      	cbz	r2, 800d8f4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8de:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d8e0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8e2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d8e4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8e6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d8e8:	bf24      	itt	cs
 800d8ea:	6821      	ldrcs	r1, [r4, #0]
 800d8ec:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d8ee:	4630      	mov	r0, r6
 800d8f0:	f01a fca9 	bl	8028246 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800d8f4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800d8f6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800d8fa:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800d8fc:	d009      	beq.n	800d912 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800d8fe:	f108 0301 	add.w	r3, r8, #1
 800d902:	b25b      	sxtb	r3, r3
 800d904:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800d908:	2001      	movs	r0, #1
	__asm volatile
 800d90a:	f389 8811 	msr	BASEPRI, r9
}
 800d90e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d912:	6923      	ldr	r3, [r4, #16]
 800d914:	2b00      	cmp	r3, #0
 800d916:	d0f7      	beq.n	800d908 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d918:	f104 0010 	add.w	r0, r4, #16
 800d91c:	f000 fdf0 	bl	800e500 <xTaskRemoveFromEventList>
 800d920:	2800      	cmp	r0, #0
 800d922:	d0f1      	beq.n	800d908 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800d924:	2f00      	cmp	r7, #0
 800d926:	d0ef      	beq.n	800d908 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800d928:	2001      	movs	r0, #1
 800d92a:	6038      	str	r0, [r7, #0]
 800d92c:	e7b8      	b.n	800d8a0 <xQueueReceiveFromISR+0x2c>
 800d92e:	bf00      	nop

0800d930 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800d930:	b158      	cbz	r0, 800d94a <uxQueueMessagesWaiting+0x1a>
{
 800d932:	b510      	push	{r4, lr}
 800d934:	4604      	mov	r4, r0
 800d936:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800d938:	f7fe ff64 	bl	800c804 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800d93c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d93e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800d940:	f7fe ff82 	bl	800c848 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800d944:	9801      	ldr	r0, [sp, #4]
 800d946:	b002      	add	sp, #8
 800d948:	bd10      	pop	{r4, pc}
	__asm volatile
 800d94a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d94e:	f383 8811 	msr	BASEPRI, r3
 800d952:	f3bf 8f6f 	isb	sy
 800d956:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800d95a:	e7fe      	b.n	800d95a <uxQueueMessagesWaiting+0x2a>

0800d95c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800d95c:	b108      	cbz	r0, 800d962 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800d95e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800d960:	4770      	bx	lr
 800d962:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d966:	f383 8811 	msr	BASEPRI, r3
 800d96a:	f3bf 8f6f 	isb	sy
 800d96e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d972:	e7fe      	b.n	800d972 <uxQueueMessagesWaitingFromISR+0x16>
 800d974:	0000      	movs	r0, r0
	...

0800d978 <vQueueDelete>:
	configASSERT( pxQueue );
 800d978:	b1f0      	cbz	r0, 800d9b8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800d97a:	4b21      	ldr	r3, [pc, #132]	; (800da00 <vQueueDelete+0x88>)
 800d97c:	685a      	ldr	r2, [r3, #4]
 800d97e:	4290      	cmp	r0, r2
 800d980:	d025      	beq.n	800d9ce <vQueueDelete+0x56>
 800d982:	68da      	ldr	r2, [r3, #12]
 800d984:	4290      	cmp	r0, r2
 800d986:	d02c      	beq.n	800d9e2 <vQueueDelete+0x6a>
 800d988:	695a      	ldr	r2, [r3, #20]
 800d98a:	4290      	cmp	r0, r2
 800d98c:	d02b      	beq.n	800d9e6 <vQueueDelete+0x6e>
 800d98e:	69da      	ldr	r2, [r3, #28]
 800d990:	4290      	cmp	r0, r2
 800d992:	d02a      	beq.n	800d9ea <vQueueDelete+0x72>
 800d994:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d996:	4290      	cmp	r0, r2
 800d998:	d029      	beq.n	800d9ee <vQueueDelete+0x76>
 800d99a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800d99c:	4290      	cmp	r0, r2
 800d99e:	d01e      	beq.n	800d9de <vQueueDelete+0x66>
 800d9a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d9a2:	4290      	cmp	r0, r2
 800d9a4:	d025      	beq.n	800d9f2 <vQueueDelete+0x7a>
 800d9a6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800d9a8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d9aa:	bf08      	it	eq
 800d9ac:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800d9ae:	d00f      	beq.n	800d9d0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800d9b0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800d9b4:	b14b      	cbz	r3, 800d9ca <vQueueDelete+0x52>
}
 800d9b6:	4770      	bx	lr
 800d9b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9bc:	f383 8811 	msr	BASEPRI, r3
 800d9c0:	f3bf 8f6f 	isb	sy
 800d9c4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d9c8:	e7fe      	b.n	800d9c8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800d9ca:	f7fe be05 	b.w	800c5d8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d9ce:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800d9d0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800d9f8 <vQueueDelete+0x80>
 800d9d4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d9d8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800d9dc:	e7e8      	b.n	800d9b0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d9de:	2205      	movs	r2, #5
 800d9e0:	e7f6      	b.n	800d9d0 <vQueueDelete+0x58>
 800d9e2:	2201      	movs	r2, #1
 800d9e4:	e7f4      	b.n	800d9d0 <vQueueDelete+0x58>
 800d9e6:	2202      	movs	r2, #2
 800d9e8:	e7f2      	b.n	800d9d0 <vQueueDelete+0x58>
 800d9ea:	2203      	movs	r2, #3
 800d9ec:	e7f0      	b.n	800d9d0 <vQueueDelete+0x58>
 800d9ee:	2204      	movs	r2, #4
 800d9f0:	e7ee      	b.n	800d9d0 <vQueueDelete+0x58>
 800d9f2:	2206      	movs	r2, #6
 800d9f4:	e7ec      	b.n	800d9d0 <vQueueDelete+0x58>
 800d9f6:	bf00      	nop
	...
 800da00:	20013148 	.word	0x20013148

0800da04 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800da04:	4b12      	ldr	r3, [pc, #72]	; (800da50 <vQueueAddToRegistry+0x4c>)
 800da06:	681a      	ldr	r2, [r3, #0]
 800da08:	b17a      	cbz	r2, 800da2a <vQueueAddToRegistry+0x26>
 800da0a:	689a      	ldr	r2, [r3, #8]
 800da0c:	b162      	cbz	r2, 800da28 <vQueueAddToRegistry+0x24>
 800da0e:	691a      	ldr	r2, [r3, #16]
 800da10:	b192      	cbz	r2, 800da38 <vQueueAddToRegistry+0x34>
 800da12:	699a      	ldr	r2, [r3, #24]
 800da14:	b192      	cbz	r2, 800da3c <vQueueAddToRegistry+0x38>
 800da16:	6a1a      	ldr	r2, [r3, #32]
 800da18:	b192      	cbz	r2, 800da40 <vQueueAddToRegistry+0x3c>
 800da1a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800da1c:	b192      	cbz	r2, 800da44 <vQueueAddToRegistry+0x40>
 800da1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800da20:	b192      	cbz	r2, 800da48 <vQueueAddToRegistry+0x44>
 800da22:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800da24:	b192      	cbz	r2, 800da4c <vQueueAddToRegistry+0x48>
	}
 800da26:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800da28:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800da2a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800da2e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800da32:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800da36:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800da38:	2202      	movs	r2, #2
 800da3a:	e7f6      	b.n	800da2a <vQueueAddToRegistry+0x26>
 800da3c:	2203      	movs	r2, #3
 800da3e:	e7f4      	b.n	800da2a <vQueueAddToRegistry+0x26>
 800da40:	2204      	movs	r2, #4
 800da42:	e7f2      	b.n	800da2a <vQueueAddToRegistry+0x26>
 800da44:	2205      	movs	r2, #5
 800da46:	e7f0      	b.n	800da2a <vQueueAddToRegistry+0x26>
 800da48:	2206      	movs	r2, #6
 800da4a:	e7ee      	b.n	800da2a <vQueueAddToRegistry+0x26>
 800da4c:	2207      	movs	r2, #7
 800da4e:	e7ec      	b.n	800da2a <vQueueAddToRegistry+0x26>
 800da50:	20013148 	.word	0x20013148

0800da54 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800da54:	b570      	push	{r4, r5, r6, lr}
 800da56:	4605      	mov	r5, r0
 800da58:	460e      	mov	r6, r1
 800da5a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800da5c:	f7fe fed2 	bl	800c804 <vPortEnterCritical>
 800da60:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800da64:	2bff      	cmp	r3, #255	; 0xff
 800da66:	bf04      	itt	eq
 800da68:	2300      	moveq	r3, #0
 800da6a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800da6e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800da72:	2bff      	cmp	r3, #255	; 0xff
 800da74:	bf04      	itt	eq
 800da76:	2300      	moveq	r3, #0
 800da78:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800da7c:	f7fe fee4 	bl	800c848 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800da80:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800da82:	2b00      	cmp	r3, #0
 800da84:	d043      	beq.n	800db0e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800da86:	f7fe febd 	bl	800c804 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800da8a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800da8e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da90:	2c00      	cmp	r4, #0
 800da92:	dd14      	ble.n	800dabe <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da94:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800da98:	e003      	b.n	800daa2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800da9a:	1e63      	subs	r3, r4, #1
 800da9c:	b2da      	uxtb	r2, r3
 800da9e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800daa0:	b16a      	cbz	r2, 800dabe <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800daa2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800daa4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800daa6:	b153      	cbz	r3, 800dabe <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800daa8:	f000 fd2a 	bl	800e500 <xTaskRemoveFromEventList>
 800daac:	2800      	cmp	r0, #0
 800daae:	d0f4      	beq.n	800da9a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800dab0:	f000 fdc2 	bl	800e638 <vTaskMissedYield>
			--cTxLock;
 800dab4:	1e63      	subs	r3, r4, #1
 800dab6:	b2da      	uxtb	r2, r3
 800dab8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800daba:	2a00      	cmp	r2, #0
 800dabc:	d1f1      	bne.n	800daa2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800dabe:	23ff      	movs	r3, #255	; 0xff
 800dac0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dac4:	f7fe fec0 	bl	800c848 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dac8:	f7fe fe9c 	bl	800c804 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dacc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800dad0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dad2:	2c00      	cmp	r4, #0
 800dad4:	dd14      	ble.n	800db00 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dad6:	f105 0610 	add.w	r6, r5, #16
 800dada:	e003      	b.n	800dae4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800dadc:	1e63      	subs	r3, r4, #1
 800dade:	b2da      	uxtb	r2, r3
 800dae0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dae2:	b16a      	cbz	r2, 800db00 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dae4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dae6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dae8:	b153      	cbz	r3, 800db00 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800daea:	f000 fd09 	bl	800e500 <xTaskRemoveFromEventList>
 800daee:	2800      	cmp	r0, #0
 800daf0:	d0f4      	beq.n	800dadc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800daf2:	f000 fda1 	bl	800e638 <vTaskMissedYield>
				--cRxLock;
 800daf6:	1e63      	subs	r3, r4, #1
 800daf8:	b2da      	uxtb	r2, r3
 800dafa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dafc:	2a00      	cmp	r2, #0
 800dafe:	d1f1      	bne.n	800dae4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800db00:	23ff      	movs	r3, #255	; 0xff
 800db02:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800db06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800db0a:	f7fe be9d 	b.w	800c848 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800db0e:	4622      	mov	r2, r4
 800db10:	4631      	mov	r1, r6
 800db12:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800db16:	f000 fca9 	bl	800e46c <vTaskPlaceOnEventListRestricted>
 800db1a:	e7b4      	b.n	800da86 <vQueueWaitForMessageRestricted+0x32>

0800db1c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800db1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800db20:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800db22:	f7fe fe6f 	bl	800c804 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800db26:	4a34      	ldr	r2, [pc, #208]	; (800dbf8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800db28:	4e34      	ldr	r6, [pc, #208]	; (800dbfc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800db2a:	6813      	ldr	r3, [r2, #0]
 800db2c:	3301      	adds	r3, #1
 800db2e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800db30:	6833      	ldr	r3, [r6, #0]
 800db32:	2b00      	cmp	r3, #0
 800db34:	d032      	beq.n	800db9c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800db36:	4c32      	ldr	r4, [pc, #200]	; (800dc00 <prvAddNewTaskToReadyList+0xe4>)
 800db38:	6823      	ldr	r3, [r4, #0]
 800db3a:	b33b      	cbz	r3, 800db8c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800db3c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800db3e:	4f31      	ldr	r7, [pc, #196]	; (800dc04 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800db40:	4a31      	ldr	r2, [pc, #196]	; (800dc08 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800db42:	4932      	ldr	r1, [pc, #200]	; (800dc0c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800db44:	6813      	ldr	r3, [r2, #0]
 800db46:	3301      	adds	r3, #1
 800db48:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800db4a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800db4c:	680b      	ldr	r3, [r1, #0]
 800db4e:	4283      	cmp	r3, r0
 800db50:	bf38      	it	cc
 800db52:	6008      	strcc	r0, [r1, #0]
 800db54:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800db58:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800db5c:	1d29      	adds	r1, r5, #4
 800db5e:	f7fe fdaf 	bl	800c6c0 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800db62:	f7fe fe71 	bl	800c848 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800db66:	6823      	ldr	r3, [r4, #0]
 800db68:	b173      	cbz	r3, 800db88 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800db6a:	6832      	ldr	r2, [r6, #0]
 800db6c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800db6e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800db70:	429a      	cmp	r2, r3
 800db72:	d209      	bcs.n	800db88 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800db74:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db78:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800db7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800db80:	f3bf 8f4f 	dsb	sy
 800db84:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800db88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800db8c:	6833      	ldr	r3, [r6, #0]
 800db8e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800db90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800db92:	4f1c      	ldr	r7, [pc, #112]	; (800dc04 <prvAddNewTaskToReadyList+0xe8>)
 800db94:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800db96:	bf98      	it	ls
 800db98:	6035      	strls	r5, [r6, #0]
 800db9a:	e7d1      	b.n	800db40 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800db9c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800db9e:	6813      	ldr	r3, [r2, #0]
 800dba0:	2b01      	cmp	r3, #1
 800dba2:	d003      	beq.n	800dbac <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800dba4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800dba6:	4f17      	ldr	r7, [pc, #92]	; (800dc04 <prvAddNewTaskToReadyList+0xe8>)
 800dba8:	4c15      	ldr	r4, [pc, #84]	; (800dc00 <prvAddNewTaskToReadyList+0xe4>)
 800dbaa:	e7c9      	b.n	800db40 <prvAddNewTaskToReadyList+0x24>
 800dbac:	4f15      	ldr	r7, [pc, #84]	; (800dc04 <prvAddNewTaskToReadyList+0xe8>)
 800dbae:	463c      	mov	r4, r7
 800dbb0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800dbb4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800dbb6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800dbb8:	f7fe fd72 	bl	800c6a0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800dbbc:	45a0      	cmp	r8, r4
 800dbbe:	d1f9      	bne.n	800dbb4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800dbc0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800dc24 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800dbc4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800dc28 <prvAddNewTaskToReadyList+0x10c>
 800dbc8:	4c0d      	ldr	r4, [pc, #52]	; (800dc00 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800dbca:	4648      	mov	r0, r9
 800dbcc:	f7fe fd68 	bl	800c6a0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800dbd0:	4640      	mov	r0, r8
 800dbd2:	f7fe fd65 	bl	800c6a0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800dbd6:	480e      	ldr	r0, [pc, #56]	; (800dc10 <prvAddNewTaskToReadyList+0xf4>)
 800dbd8:	f7fe fd62 	bl	800c6a0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800dbdc:	480d      	ldr	r0, [pc, #52]	; (800dc14 <prvAddNewTaskToReadyList+0xf8>)
 800dbde:	f7fe fd5f 	bl	800c6a0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800dbe2:	480d      	ldr	r0, [pc, #52]	; (800dc18 <prvAddNewTaskToReadyList+0xfc>)
 800dbe4:	f7fe fd5c 	bl	800c6a0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800dbe8:	4b0c      	ldr	r3, [pc, #48]	; (800dc1c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800dbea:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800dbec:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800dbf0:	4b0b      	ldr	r3, [pc, #44]	; (800dc20 <prvAddNewTaskToReadyList+0x104>)
 800dbf2:	f8c3 8000 	str.w	r8, [r3]
}
 800dbf6:	e7a3      	b.n	800db40 <prvAddNewTaskToReadyList+0x24>
 800dbf8:	200135f4 	.word	0x200135f4
 800dbfc:	20013188 	.word	0x20013188
 800dc00:	20013650 	.word	0x20013650
 800dc04:	20013194 	.word	0x20013194
 800dc08:	20013600 	.word	0x20013600
 800dc0c:	20013604 	.word	0x20013604
 800dc10:	2001363c 	.word	0x2001363c
 800dc14:	20013668 	.word	0x20013668
 800dc18:	20013654 	.word	0x20013654
 800dc1c:	2001318c 	.word	0x2001318c
 800dc20:	20013190 	.word	0x20013190
 800dc24:	20013608 	.word	0x20013608
 800dc28:	2001361c 	.word	0x2001361c

0800dc2c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800dc2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800dc32:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800dc36:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800dc3a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800dc3c:	4606      	mov	r6, r0
 800dc3e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800dc40:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dc42:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800dc44:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800dc46:	f01a f9d8 	bl	8027ffa <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800dc4a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dc4c:	f1a9 0904 	sub.w	r9, r9, #4
 800dc50:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800dc52:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800dc56:	2d00      	cmp	r5, #0
 800dc58:	d079      	beq.n	800dd4e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dc5a:	782b      	ldrb	r3, [r5, #0]
 800dc5c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800dc60:	2b00      	cmp	r3, #0
 800dc62:	d03b      	beq.n	800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dc64:	786b      	ldrb	r3, [r5, #1]
 800dc66:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800dc6a:	2b00      	cmp	r3, #0
 800dc6c:	d036      	beq.n	800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dc6e:	78ab      	ldrb	r3, [r5, #2]
 800dc70:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800dc74:	b393      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dc76:	78eb      	ldrb	r3, [r5, #3]
 800dc78:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800dc7c:	b373      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dc7e:	792b      	ldrb	r3, [r5, #4]
 800dc80:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800dc84:	b353      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dc86:	796b      	ldrb	r3, [r5, #5]
 800dc88:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800dc8c:	b333      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dc8e:	79ab      	ldrb	r3, [r5, #6]
 800dc90:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800dc94:	b313      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dc96:	79eb      	ldrb	r3, [r5, #7]
 800dc98:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800dc9c:	b1f3      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dc9e:	7a2b      	ldrb	r3, [r5, #8]
 800dca0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800dca4:	b1d3      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dca6:	7a6b      	ldrb	r3, [r5, #9]
 800dca8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800dcac:	b1b3      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dcae:	7aab      	ldrb	r3, [r5, #10]
 800dcb0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800dcb4:	b193      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dcb6:	7aeb      	ldrb	r3, [r5, #11]
 800dcb8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800dcbc:	b173      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dcbe:	7b2b      	ldrb	r3, [r5, #12]
 800dcc0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800dcc4:	b153      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dcc6:	7b6b      	ldrb	r3, [r5, #13]
 800dcc8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800dccc:	b133      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dcce:	7bab      	ldrb	r3, [r5, #14]
 800dcd0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800dcd4:	b113      	cbz	r3, 800dcdc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800dcd6:	7beb      	ldrb	r3, [r5, #15]
 800dcd8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800dcdc:	2300      	movs	r3, #0
 800dcde:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800dce2:	9d08      	ldr	r5, [sp, #32]
 800dce4:	2d37      	cmp	r5, #55	; 0x37
 800dce6:	bf28      	it	cs
 800dce8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800dcea:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800dcee:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800dcf0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800dcf2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800dcf4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800dcf8:	f7fe fcde 	bl	800c6b8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dcfc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800dd00:	f104 0018 	add.w	r0, r4, #24
 800dd04:	f7fe fcd8 	bl	800c6b8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dd08:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800dd0a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800dd0e:	4651      	mov	r1, sl
 800dd10:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800dd12:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800dd14:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800dd16:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800dd1a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800dd1e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800dd22:	f01a f96a 	bl	8027ffa <memset>
 800dd26:	4b0b      	ldr	r3, [pc, #44]	; (800dd54 <prvInitialiseNewTask.constprop.0+0x128>)
 800dd28:	65e3      	str	r3, [r4, #92]	; 0x5c
 800dd2a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800dd2e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800dd30:	463a      	mov	r2, r7
 800dd32:	4631      	mov	r1, r6
 800dd34:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800dd36:	6625      	str	r5, [r4, #96]	; 0x60
 800dd38:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800dd3a:	f7fe fd3b 	bl	800c7b4 <pxPortInitialiseStack>
 800dd3e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800dd40:	f1b8 0f00 	cmp.w	r8, #0
 800dd44:	d001      	beq.n	800dd4a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800dd46:	f8c8 4000 	str.w	r4, [r8]
}
 800dd4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800dd4e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800dd52:	e7c6      	b.n	800dce2 <prvInitialiseNewTask.constprop.0+0xb6>
 800dd54:	20014118 	.word	0x20014118

0800dd58 <prvIdleTask>:
{
 800dd58:	b580      	push	{r7, lr}
 800dd5a:	4d23      	ldr	r5, [pc, #140]	; (800dde8 <prvIdleTask+0x90>)
 800dd5c:	4f23      	ldr	r7, [pc, #140]	; (800ddec <prvIdleTask+0x94>)
 800dd5e:	4e24      	ldr	r6, [pc, #144]	; (800ddf0 <prvIdleTask+0x98>)
 800dd60:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800ddf4 <prvIdleTask+0x9c>
				taskYIELD();
 800dd64:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800dd68:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800dd6c:	682b      	ldr	r3, [r5, #0]
 800dd6e:	b35b      	cbz	r3, 800ddc8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800dd70:	f7fe fd48 	bl	800c804 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dd74:	68fb      	ldr	r3, [r7, #12]
 800dd76:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800dd78:	1d20      	adds	r0, r4, #4
 800dd7a:	f7fe fcc9 	bl	800c710 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800dd7e:	6833      	ldr	r3, [r6, #0]
 800dd80:	3b01      	subs	r3, #1
 800dd82:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800dd84:	682b      	ldr	r3, [r5, #0]
 800dd86:	3b01      	subs	r3, #1
 800dd88:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800dd8a:	f7fe fd5d 	bl	800c848 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800dd8e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800dd92:	f01a f97b 	bl	802808c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800dd96:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800dd9a:	b163      	cbz	r3, 800ddb6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800dd9c:	2b01      	cmp	r3, #1
 800dd9e:	d01e      	beq.n	800ddde <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800dda0:	2b02      	cmp	r3, #2
 800dda2:	d0e3      	beq.n	800dd6c <prvIdleTask+0x14>
 800dda4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dda8:	f383 8811 	msr	BASEPRI, r3
 800ddac:	f3bf 8f6f 	isb	sy
 800ddb0:	f3bf 8f4f 	dsb	sy
 800ddb4:	e7fe      	b.n	800ddb4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800ddb6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ddb8:	f7fe fc0e 	bl	800c5d8 <vPortFree>
				vPortFree( pxTCB );
 800ddbc:	4620      	mov	r0, r4
 800ddbe:	f7fe fc0b 	bl	800c5d8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ddc2:	682b      	ldr	r3, [r5, #0]
 800ddc4:	2b00      	cmp	r3, #0
 800ddc6:	d1d3      	bne.n	800dd70 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800ddc8:	f8d8 3000 	ldr.w	r3, [r8]
 800ddcc:	2b01      	cmp	r3, #1
 800ddce:	d9cd      	bls.n	800dd6c <prvIdleTask+0x14>
				taskYIELD();
 800ddd0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800ddd4:	f3bf 8f4f 	dsb	sy
 800ddd8:	f3bf 8f6f 	isb	sy
 800dddc:	e7c6      	b.n	800dd6c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800ddde:	4620      	mov	r0, r4
 800dde0:	f7fe fbfa 	bl	800c5d8 <vPortFree>
 800dde4:	e7c2      	b.n	800dd6c <prvIdleTask+0x14>
 800dde6:	bf00      	nop
 800dde8:	200135f8 	.word	0x200135f8
 800ddec:	20013668 	.word	0x20013668
 800ddf0:	200135f4 	.word	0x200135f4
 800ddf4:	20013194 	.word	0x20013194

0800ddf8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800ddf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800ddfc:	4b47      	ldr	r3, [pc, #284]	; (800df1c <xTaskIncrementTick.part.0+0x124>)
 800ddfe:	681e      	ldr	r6, [r3, #0]
 800de00:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800de02:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800de04:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800de06:	2e00      	cmp	r6, #0
 800de08:	d040      	beq.n	800de8c <xTaskIncrementTick.part.0+0x94>
 800de0a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800df30 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800de0e:	f8db 3000 	ldr.w	r3, [fp]
 800de12:	429e      	cmp	r6, r3
 800de14:	d347      	bcc.n	800dea6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800de16:	4f42      	ldr	r7, [pc, #264]	; (800df20 <xTaskIncrementTick.part.0+0x128>)
 800de18:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800df34 <xTaskIncrementTick.part.0+0x13c>
 800de1c:	683b      	ldr	r3, [r7, #0]
 800de1e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800df38 <xTaskIncrementTick.part.0+0x140>
 800de22:	681d      	ldr	r5, [r3, #0]
 800de24:	2d00      	cmp	r5, #0
 800de26:	d073      	beq.n	800df10 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800de28:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800df3c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800de2c:	2500      	movs	r5, #0
 800de2e:	e022      	b.n	800de76 <xTaskIncrementTick.part.0+0x7e>
 800de30:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800de32:	f7fe fc6d 	bl	800c710 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800de36:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800de38:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800de3a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800de3e:	b113      	cbz	r3, 800de46 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800de40:	f7fe fc66 	bl	800c710 <uxListRemove>
 800de44:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800de46:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800de48:	f8d8 2000 	ldr.w	r2, [r8]
 800de4c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800de50:	4293      	cmp	r3, r2
 800de52:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800de56:	bf88      	it	hi
 800de58:	f8c8 3000 	strhi.w	r3, [r8]
 800de5c:	f7fe fc30 	bl	800c6c0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800de60:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800de64:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800de66:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800de68:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800de6a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800de6c:	4291      	cmp	r1, r2
 800de6e:	bf28      	it	cs
 800de70:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800de72:	2b00      	cmp	r3, #0
 800de74:	d04c      	beq.n	800df10 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800de76:	683b      	ldr	r3, [r7, #0]
 800de78:	68db      	ldr	r3, [r3, #12]
 800de7a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800de7c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800de7e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800de80:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800de82:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800de84:	d2d4      	bcs.n	800de30 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800de86:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800de8a:	e011      	b.n	800deb0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800de8c:	4b24      	ldr	r3, [pc, #144]	; (800df20 <xTaskIncrementTick.part.0+0x128>)
 800de8e:	681a      	ldr	r2, [r3, #0]
 800de90:	6812      	ldr	r2, [r2, #0]
 800de92:	b30a      	cbz	r2, 800ded8 <xTaskIncrementTick.part.0+0xe0>
 800de94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de98:	f383 8811 	msr	BASEPRI, r3
 800de9c:	f3bf 8f6f 	isb	sy
 800dea0:	f3bf 8f4f 	dsb	sy
 800dea4:	e7fe      	b.n	800dea4 <xTaskIncrementTick.part.0+0xac>
 800dea6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800df34 <xTaskIncrementTick.part.0+0x13c>
 800deaa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800df38 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800deae:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800deb0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800deb4:	491b      	ldr	r1, [pc, #108]	; (800df24 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800deb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800deb8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800debc:	009b      	lsls	r3, r3, #2
 800debe:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800dec2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800dec4:	2a02      	cmp	r2, #2
 800dec6:	bf28      	it	cs
 800dec8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800deca:	2b00      	cmp	r3, #0
}
 800decc:	bf0c      	ite	eq
 800dece:	4628      	moveq	r0, r5
 800ded0:	2001      	movne	r0, #1
 800ded2:	b003      	add	sp, #12
 800ded4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800ded8:	4a13      	ldr	r2, [pc, #76]	; (800df28 <xTaskIncrementTick.part.0+0x130>)
 800deda:	6818      	ldr	r0, [r3, #0]
 800dedc:	6811      	ldr	r1, [r2, #0]
 800dede:	6019      	str	r1, [r3, #0]
 800dee0:	4912      	ldr	r1, [pc, #72]	; (800df2c <xTaskIncrementTick.part.0+0x134>)
 800dee2:	6010      	str	r0, [r2, #0]
 800dee4:	680a      	ldr	r2, [r1, #0]
 800dee6:	3201      	adds	r2, #1
 800dee8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800deea:	681a      	ldr	r2, [r3, #0]
 800deec:	6812      	ldr	r2, [r2, #0]
 800deee:	b932      	cbnz	r2, 800defe <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800def0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800df30 <xTaskIncrementTick.part.0+0x138>
 800def4:	f04f 33ff 	mov.w	r3, #4294967295
 800def8:	f8cb 3000 	str.w	r3, [fp]
 800defc:	e787      	b.n	800de0e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800defe:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800df00:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800df30 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800df04:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800df06:	68db      	ldr	r3, [r3, #12]
 800df08:	685b      	ldr	r3, [r3, #4]
 800df0a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800df0e:	e77e      	b.n	800de0e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800df10:	f04f 33ff 	mov.w	r3, #4294967295
 800df14:	f8cb 3000 	str.w	r3, [fp]
					break;
 800df18:	e7ca      	b.n	800deb0 <xTaskIncrementTick.part.0+0xb8>
 800df1a:	bf00      	nop
 800df1c:	2001367c 	.word	0x2001367c
 800df20:	2001318c 	.word	0x2001318c
 800df24:	20013680 	.word	0x20013680
 800df28:	20013190 	.word	0x20013190
 800df2c:	20013634 	.word	0x20013634
 800df30:	20013630 	.word	0x20013630
 800df34:	20013194 	.word	0x20013194
 800df38:	20013188 	.word	0x20013188
 800df3c:	20013604 	.word	0x20013604

0800df40 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800df40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800df44:	4d41      	ldr	r5, [pc, #260]	; (800e04c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800df46:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800df48:	f7fe fc5c 	bl	800c804 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800df4c:	682b      	ldr	r3, [r5, #0]
 800df4e:	3b01      	subs	r3, #1
 800df50:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800df52:	682b      	ldr	r3, [r5, #0]
 800df54:	2b00      	cmp	r3, #0
 800df56:	d161      	bne.n	800e01c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800df58:	4b3d      	ldr	r3, [pc, #244]	; (800e050 <xTaskResumeAll.part.0+0x110>)
 800df5a:	681b      	ldr	r3, [r3, #0]
 800df5c:	2b00      	cmp	r3, #0
 800df5e:	d05d      	beq.n	800e01c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800df60:	4e3c      	ldr	r6, [pc, #240]	; (800e054 <xTaskResumeAll.part.0+0x114>)
 800df62:	6833      	ldr	r3, [r6, #0]
 800df64:	2b00      	cmp	r3, #0
 800df66:	d06e      	beq.n	800e046 <xTaskResumeAll.part.0+0x106>
 800df68:	4f3b      	ldr	r7, [pc, #236]	; (800e058 <xTaskResumeAll.part.0+0x118>)
 800df6a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800e068 <xTaskResumeAll.part.0+0x128>
 800df6e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800e06c <xTaskResumeAll.part.0+0x12c>
 800df72:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800e070 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800df76:	68f3      	ldr	r3, [r6, #12]
 800df78:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800df7a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800df7e:	f104 0018 	add.w	r0, r4, #24
 800df82:	f7fe fbc5 	bl	800c710 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800df86:	4658      	mov	r0, fp
 800df88:	f7fe fbc2 	bl	800c710 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800df8c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800df8e:	683a      	ldr	r2, [r7, #0]
 800df90:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800df94:	4293      	cmp	r3, r2
 800df96:	4659      	mov	r1, fp
 800df98:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800df9c:	bf88      	it	hi
 800df9e:	603b      	strhi	r3, [r7, #0]
 800dfa0:	f7fe fb8e 	bl	800c6c0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800dfa4:	f8d8 3000 	ldr.w	r3, [r8]
 800dfa8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dfaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dfac:	429a      	cmp	r2, r3
 800dfae:	d33d      	bcc.n	800e02c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800dfb0:	2301      	movs	r3, #1
 800dfb2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800dfb6:	6833      	ldr	r3, [r6, #0]
 800dfb8:	2b00      	cmp	r3, #0
 800dfba:	d1dc      	bne.n	800df76 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800dfbc:	4b27      	ldr	r3, [pc, #156]	; (800e05c <xTaskResumeAll.part.0+0x11c>)
 800dfbe:	681a      	ldr	r2, [r3, #0]
 800dfc0:	6812      	ldr	r2, [r2, #0]
 800dfc2:	2a00      	cmp	r2, #0
 800dfc4:	d03a      	beq.n	800e03c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dfc6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800dfc8:	4b25      	ldr	r3, [pc, #148]	; (800e060 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dfca:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800dfcc:	68d2      	ldr	r2, [r2, #12]
 800dfce:	6852      	ldr	r2, [r2, #4]
 800dfd0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800dfd2:	4e24      	ldr	r6, [pc, #144]	; (800e064 <xTaskResumeAll.part.0+0x124>)
 800dfd4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800dfd6:	b194      	cbz	r4, 800dffe <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800dfd8:	2701      	movs	r7, #1
 800dfda:	e006      	b.n	800dfea <xTaskResumeAll.part.0+0xaa>
 800dfdc:	f7ff ff0c 	bl	800ddf8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800dfe0:	b108      	cbz	r0, 800dfe6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800dfe2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800dfe6:	3c01      	subs	r4, #1
 800dfe8:	d008      	beq.n	800dffc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800dfea:	682b      	ldr	r3, [r5, #0]
 800dfec:	2b00      	cmp	r3, #0
 800dfee:	d0f5      	beq.n	800dfdc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800dff0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800dff2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800dff4:	f103 0301 	add.w	r3, r3, #1
 800dff8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800dffa:	d1f6      	bne.n	800dfea <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800dffc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800dffe:	f8da 3000 	ldr.w	r3, [sl]
 800e002:	b15b      	cbz	r3, 800e01c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800e004:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e008:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e00c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e010:	f3bf 8f4f 	dsb	sy
 800e014:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e018:	2001      	movs	r0, #1
 800e01a:	e000      	b.n	800e01e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800e01c:	2000      	movs	r0, #0
 800e01e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e020:	f7fe fc12 	bl	800c848 <vPortExitCritical>
}
 800e024:	9801      	ldr	r0, [sp, #4]
 800e026:	b003      	add	sp, #12
 800e028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e02c:	6833      	ldr	r3, [r6, #0]
 800e02e:	2b00      	cmp	r3, #0
 800e030:	d1a1      	bne.n	800df76 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e032:	4b0a      	ldr	r3, [pc, #40]	; (800e05c <xTaskResumeAll.part.0+0x11c>)
 800e034:	681a      	ldr	r2, [r3, #0]
 800e036:	6812      	ldr	r2, [r2, #0]
 800e038:	2a00      	cmp	r2, #0
 800e03a:	d1c4      	bne.n	800dfc6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e03c:	4b08      	ldr	r3, [pc, #32]	; (800e060 <xTaskResumeAll.part.0+0x120>)
 800e03e:	f04f 32ff 	mov.w	r2, #4294967295
 800e042:	601a      	str	r2, [r3, #0]
 800e044:	e7c5      	b.n	800dfd2 <xTaskResumeAll.part.0+0x92>
 800e046:	f8df a028 	ldr.w	sl, [pc, #40]	; 800e070 <xTaskResumeAll.part.0+0x130>
 800e04a:	e7c2      	b.n	800dfd2 <xTaskResumeAll.part.0+0x92>
 800e04c:	200135fc 	.word	0x200135fc
 800e050:	200135f4 	.word	0x200135f4
 800e054:	2001363c 	.word	0x2001363c
 800e058:	20013604 	.word	0x20013604
 800e05c:	2001318c 	.word	0x2001318c
 800e060:	20013630 	.word	0x20013630
 800e064:	20013638 	.word	0x20013638
 800e068:	20013194 	.word	0x20013194
 800e06c:	20013188 	.word	0x20013188
 800e070:	20013680 	.word	0x20013680

0800e074 <xTaskCreateStatic>:
	{
 800e074:	b530      	push	{r4, r5, lr}
 800e076:	b087      	sub	sp, #28
 800e078:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e07a:	b1c4      	cbz	r4, 800e0ae <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800e07c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e07e:	b16d      	cbz	r5, 800e09c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e080:	25ac      	movs	r5, #172	; 0xac
 800e082:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e084:	9d05      	ldr	r5, [sp, #20]
 800e086:	2dac      	cmp	r5, #172	; 0xac
 800e088:	d01a      	beq.n	800e0c0 <xTaskCreateStatic+0x4c>
 800e08a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e08e:	f383 8811 	msr	BASEPRI, r3
 800e092:	f3bf 8f6f 	isb	sy
 800e096:	f3bf 8f4f 	dsb	sy
 800e09a:	e7fe      	b.n	800e09a <xTaskCreateStatic+0x26>
 800e09c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0a0:	f383 8811 	msr	BASEPRI, r3
 800e0a4:	f3bf 8f6f 	isb	sy
 800e0a8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e0ac:	e7fe      	b.n	800e0ac <xTaskCreateStatic+0x38>
 800e0ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0b2:	f383 8811 	msr	BASEPRI, r3
 800e0b6:	f3bf 8f6f 	isb	sy
 800e0ba:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e0be:	e7fe      	b.n	800e0be <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e0c0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e0c2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e0c4:	2402      	movs	r4, #2
 800e0c6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e0ca:	ac04      	add	r4, sp, #16
 800e0cc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800e0d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e0d2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e0d4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e0d6:	f7ff fda9 	bl	800dc2c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e0da:	980c      	ldr	r0, [sp, #48]	; 0x30
 800e0dc:	f7ff fd1e 	bl	800db1c <prvAddNewTaskToReadyList>
	}
 800e0e0:	9804      	ldr	r0, [sp, #16]
 800e0e2:	b007      	add	sp, #28
 800e0e4:	bd30      	pop	{r4, r5, pc}
 800e0e6:	bf00      	nop

0800e0e8 <xTaskCreate>:
	{
 800e0e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e0ec:	4607      	mov	r7, r0
 800e0ee:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e0f0:	0090      	lsls	r0, r2, #2
	{
 800e0f2:	4615      	mov	r5, r2
 800e0f4:	4688      	mov	r8, r1
 800e0f6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e0f8:	f7fe f9b2 	bl	800c460 <pvPortMalloc>
			if( pxStack != NULL )
 800e0fc:	b1d8      	cbz	r0, 800e136 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e0fe:	4604      	mov	r4, r0
 800e100:	20ac      	movs	r0, #172	; 0xac
 800e102:	f7fe f9ad 	bl	800c460 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e106:	4606      	mov	r6, r0
 800e108:	b1d0      	cbz	r0, 800e140 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800e10a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e10c:	2400      	movs	r4, #0
 800e10e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e112:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e114:	9401      	str	r4, [sp, #4]
 800e116:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800e118:	9602      	str	r6, [sp, #8]
 800e11a:	464b      	mov	r3, r9
 800e11c:	462a      	mov	r2, r5
 800e11e:	4641      	mov	r1, r8
 800e120:	4638      	mov	r0, r7
 800e122:	9400      	str	r4, [sp, #0]
 800e124:	f7ff fd82 	bl	800dc2c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e128:	4630      	mov	r0, r6
 800e12a:	f7ff fcf7 	bl	800db1c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e12e:	2001      	movs	r0, #1
	}
 800e130:	b005      	add	sp, #20
 800e132:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e136:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800e13a:	b005      	add	sp, #20
 800e13c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e140:	4620      	mov	r0, r4
 800e142:	f7fe fa49 	bl	800c5d8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e146:	f04f 30ff 	mov.w	r0, #4294967295
 800e14a:	e7f1      	b.n	800e130 <xTaskCreate+0x48>

0800e14c <vTaskDelay>:
	{
 800e14c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e14e:	b950      	cbnz	r0, 800e166 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e150:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e154:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e158:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e15c:	f3bf 8f4f 	dsb	sy
 800e160:	f3bf 8f6f 	isb	sy
	}
 800e164:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e166:	4d1e      	ldr	r5, [pc, #120]	; (800e1e0 <vTaskDelay+0x94>)
 800e168:	682b      	ldr	r3, [r5, #0]
 800e16a:	b143      	cbz	r3, 800e17e <vTaskDelay+0x32>
 800e16c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e170:	f383 8811 	msr	BASEPRI, r3
 800e174:	f3bf 8f6f 	isb	sy
 800e178:	f3bf 8f4f 	dsb	sy
 800e17c:	e7fe      	b.n	800e17c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800e17e:	682b      	ldr	r3, [r5, #0]
 800e180:	3301      	adds	r3, #1
 800e182:	4604      	mov	r4, r0
 800e184:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e186:	4b17      	ldr	r3, [pc, #92]	; (800e1e4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e188:	4e17      	ldr	r6, [pc, #92]	; (800e1e8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800e18a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e18c:	6830      	ldr	r0, [r6, #0]
 800e18e:	3004      	adds	r0, #4
 800e190:	f7fe fabe 	bl	800c710 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e194:	6833      	ldr	r3, [r6, #0]
 800e196:	19e4      	adds	r4, r4, r7
 800e198:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800e19a:	d310      	bcc.n	800e1be <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e19c:	4b13      	ldr	r3, [pc, #76]	; (800e1ec <vTaskDelay+0xa0>)
 800e19e:	6818      	ldr	r0, [r3, #0]
 800e1a0:	6831      	ldr	r1, [r6, #0]
 800e1a2:	3104      	adds	r1, #4
 800e1a4:	f7fe fa9c 	bl	800c6e0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800e1a8:	682b      	ldr	r3, [r5, #0]
 800e1aa:	b9a3      	cbnz	r3, 800e1d6 <vTaskDelay+0x8a>
 800e1ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1b0:	f383 8811 	msr	BASEPRI, r3
 800e1b4:	f3bf 8f6f 	isb	sy
 800e1b8:	f3bf 8f4f 	dsb	sy
 800e1bc:	e7fe      	b.n	800e1bc <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e1be:	4b0c      	ldr	r3, [pc, #48]	; (800e1f0 <vTaskDelay+0xa4>)
 800e1c0:	6818      	ldr	r0, [r3, #0]
 800e1c2:	6831      	ldr	r1, [r6, #0]
 800e1c4:	3104      	adds	r1, #4
 800e1c6:	f7fe fa8b 	bl	800c6e0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800e1ca:	4b0a      	ldr	r3, [pc, #40]	; (800e1f4 <vTaskDelay+0xa8>)
 800e1cc:	681a      	ldr	r2, [r3, #0]
 800e1ce:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800e1d0:	bf38      	it	cc
 800e1d2:	601c      	strcc	r4, [r3, #0]
 800e1d4:	e7e8      	b.n	800e1a8 <vTaskDelay+0x5c>
 800e1d6:	f7ff feb3 	bl	800df40 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800e1da:	2800      	cmp	r0, #0
 800e1dc:	d0b8      	beq.n	800e150 <vTaskDelay+0x4>
	}
 800e1de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e1e0:	200135fc 	.word	0x200135fc
 800e1e4:	2001367c 	.word	0x2001367c
 800e1e8:	20013188 	.word	0x20013188
 800e1ec:	20013190 	.word	0x20013190
 800e1f0:	2001318c 	.word	0x2001318c
 800e1f4:	20013630 	.word	0x20013630

0800e1f8 <vTaskStartScheduler>:
{
 800e1f8:	b530      	push	{r4, r5, lr}
 800e1fa:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e1fc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e1fe:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e200:	a906      	add	r1, sp, #24
 800e202:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e204:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e208:	f7fe f90c 	bl	800c424 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e20c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e210:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800e212:	b1bb      	cbz	r3, 800e244 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800e214:	b16d      	cbz	r5, 800e232 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e216:	21ac      	movs	r1, #172	; 0xac
 800e218:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800e21a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e21c:	29ac      	cmp	r1, #172	; 0xac
 800e21e:	d01a      	beq.n	800e256 <vTaskStartScheduler+0x5e>
 800e220:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e224:	f383 8811 	msr	BASEPRI, r3
 800e228:	f3bf 8f6f 	isb	sy
 800e22c:	f3bf 8f4f 	dsb	sy
 800e230:	e7fe      	b.n	800e230 <vTaskStartScheduler+0x38>
 800e232:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e236:	f383 8811 	msr	BASEPRI, r3
 800e23a:	f3bf 8f6f 	isb	sy
 800e23e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e242:	e7fe      	b.n	800e242 <vTaskStartScheduler+0x4a>
 800e244:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e248:	f383 8811 	msr	BASEPRI, r3
 800e24c:	f3bf 8f6f 	isb	sy
 800e250:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e254:	e7fe      	b.n	800e254 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e256:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e258:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e25a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e25c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e260:	4623      	mov	r3, r4
 800e262:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800e266:	491b      	ldr	r1, [pc, #108]	; (800e2d4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e268:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e26a:	9400      	str	r4, [sp, #0]
 800e26c:	481a      	ldr	r0, [pc, #104]	; (800e2d8 <vTaskStartScheduler+0xe0>)
 800e26e:	f7ff fcdd 	bl	800dc2c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e272:	4628      	mov	r0, r5
 800e274:	f7ff fc52 	bl	800db1c <prvAddNewTaskToReadyList>
		return xReturn;
 800e278:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800e27a:	b1eb      	cbz	r3, 800e2b8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800e27c:	f000 fc6e 	bl	800eb5c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e280:	2801      	cmp	r0, #1
 800e282:	d11b      	bne.n	800e2bc <vTaskStartScheduler+0xc4>
 800e284:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e288:	f383 8811 	msr	BASEPRI, r3
 800e28c:	f3bf 8f6f 	isb	sy
 800e290:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e294:	4b11      	ldr	r3, [pc, #68]	; (800e2dc <vTaskStartScheduler+0xe4>)
 800e296:	4a12      	ldr	r2, [pc, #72]	; (800e2e0 <vTaskStartScheduler+0xe8>)
 800e298:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800e29a:	4912      	ldr	r1, [pc, #72]	; (800e2e4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e29c:	3358      	adds	r3, #88	; 0x58
 800e29e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800e2a0:	4a11      	ldr	r2, [pc, #68]	; (800e2e8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e2a2:	4b12      	ldr	r3, [pc, #72]	; (800e2ec <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800e2a4:	f04f 35ff 	mov.w	r5, #4294967295
 800e2a8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800e2aa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e2ac:	601c      	str	r4, [r3, #0]
}
 800e2ae:	b00b      	add	sp, #44	; 0x2c
 800e2b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e2b4:	f7fe bb38 	b.w	800c928 <xPortStartScheduler>
}
 800e2b8:	b00b      	add	sp, #44	; 0x2c
 800e2ba:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e2bc:	3001      	adds	r0, #1
 800e2be:	d1fb      	bne.n	800e2b8 <vTaskStartScheduler+0xc0>
 800e2c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2c4:	f383 8811 	msr	BASEPRI, r3
 800e2c8:	f3bf 8f6f 	isb	sy
 800e2cc:	f3bf 8f4f 	dsb	sy
 800e2d0:	e7fe      	b.n	800e2d0 <vTaskStartScheduler+0xd8>
 800e2d2:	bf00      	nop
 800e2d4:	0802baac 	.word	0x0802baac
 800e2d8:	0800dd59 	.word	0x0800dd59
 800e2dc:	20013188 	.word	0x20013188
 800e2e0:	20000160 	.word	0x20000160
 800e2e4:	20013630 	.word	0x20013630
 800e2e8:	20013650 	.word	0x20013650
 800e2ec:	2001367c 	.word	0x2001367c

0800e2f0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e2f0:	4a02      	ldr	r2, [pc, #8]	; (800e2fc <vTaskSuspendAll+0xc>)
 800e2f2:	6813      	ldr	r3, [r2, #0]
 800e2f4:	3301      	adds	r3, #1
 800e2f6:	6013      	str	r3, [r2, #0]
}
 800e2f8:	4770      	bx	lr
 800e2fa:	bf00      	nop
 800e2fc:	200135fc 	.word	0x200135fc

0800e300 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800e300:	4b06      	ldr	r3, [pc, #24]	; (800e31c <xTaskResumeAll+0x1c>)
 800e302:	681b      	ldr	r3, [r3, #0]
 800e304:	b943      	cbnz	r3, 800e318 <xTaskResumeAll+0x18>
 800e306:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e30a:	f383 8811 	msr	BASEPRI, r3
 800e30e:	f3bf 8f6f 	isb	sy
 800e312:	f3bf 8f4f 	dsb	sy
 800e316:	e7fe      	b.n	800e316 <xTaskResumeAll+0x16>
 800e318:	f7ff be12 	b.w	800df40 <xTaskResumeAll.part.0>
 800e31c:	200135fc 	.word	0x200135fc

0800e320 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e320:	4b01      	ldr	r3, [pc, #4]	; (800e328 <xTaskGetTickCount+0x8>)
 800e322:	6818      	ldr	r0, [r3, #0]
}
 800e324:	4770      	bx	lr
 800e326:	bf00      	nop
 800e328:	2001367c 	.word	0x2001367c

0800e32c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e32c:	4b05      	ldr	r3, [pc, #20]	; (800e344 <xTaskIncrementTick+0x18>)
 800e32e:	681b      	ldr	r3, [r3, #0]
 800e330:	b90b      	cbnz	r3, 800e336 <xTaskIncrementTick+0xa>
 800e332:	f7ff bd61 	b.w	800ddf8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800e336:	4a04      	ldr	r2, [pc, #16]	; (800e348 <xTaskIncrementTick+0x1c>)
 800e338:	6813      	ldr	r3, [r2, #0]
 800e33a:	3301      	adds	r3, #1
}
 800e33c:	2000      	movs	r0, #0
		++xPendedTicks;
 800e33e:	6013      	str	r3, [r2, #0]
}
 800e340:	4770      	bx	lr
 800e342:	bf00      	nop
 800e344:	200135fc 	.word	0x200135fc
 800e348:	20013638 	.word	0x20013638

0800e34c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e34c:	4b1f      	ldr	r3, [pc, #124]	; (800e3cc <vTaskSwitchContext+0x80>)
 800e34e:	681b      	ldr	r3, [r3, #0]
 800e350:	b11b      	cbz	r3, 800e35a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800e352:	4b1f      	ldr	r3, [pc, #124]	; (800e3d0 <vTaskSwitchContext+0x84>)
 800e354:	2201      	movs	r2, #1
 800e356:	601a      	str	r2, [r3, #0]
 800e358:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800e35a:	4a1d      	ldr	r2, [pc, #116]	; (800e3d0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e35c:	491d      	ldr	r1, [pc, #116]	; (800e3d4 <vTaskSwitchContext+0x88>)
{
 800e35e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e360:	4c1d      	ldr	r4, [pc, #116]	; (800e3d8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800e362:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e364:	6823      	ldr	r3, [r4, #0]
 800e366:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800e36a:	0092      	lsls	r2, r2, #2
 800e36c:	0098      	lsls	r0, r3, #2
 800e36e:	588a      	ldr	r2, [r1, r2]
 800e370:	b942      	cbnz	r2, 800e384 <vTaskSwitchContext+0x38>
 800e372:	b313      	cbz	r3, 800e3ba <vTaskSwitchContext+0x6e>
 800e374:	3b01      	subs	r3, #1
 800e376:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800e37a:	0098      	lsls	r0, r3, #2
 800e37c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800e380:	2a00      	cmp	r2, #0
 800e382:	d0f6      	beq.n	800e372 <vTaskSwitchContext+0x26>
 800e384:	4418      	add	r0, r3
 800e386:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800e38a:	4662      	mov	r2, ip
 800e38c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e390:	6849      	ldr	r1, [r1, #4]
 800e392:	f8cc 1004 	str.w	r1, [ip, #4]
 800e396:	3208      	adds	r2, #8
 800e398:	4291      	cmp	r1, r2
 800e39a:	bf08      	it	eq
 800e39c:	6849      	ldreq	r1, [r1, #4]
 800e39e:	4a0f      	ldr	r2, [pc, #60]	; (800e3dc <vTaskSwitchContext+0x90>)
 800e3a0:	bf08      	it	eq
 800e3a2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800e3a6:	68c9      	ldr	r1, [r1, #12]
 800e3a8:	6011      	str	r1, [r2, #0]
 800e3aa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e3ac:	6813      	ldr	r3, [r2, #0]
 800e3ae:	4a0c      	ldr	r2, [pc, #48]	; (800e3e0 <vTaskSwitchContext+0x94>)
}
 800e3b0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e3b4:	3358      	adds	r3, #88	; 0x58
 800e3b6:	6013      	str	r3, [r2, #0]
}
 800e3b8:	4770      	bx	lr
 800e3ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3be:	f383 8811 	msr	BASEPRI, r3
 800e3c2:	f3bf 8f6f 	isb	sy
 800e3c6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e3ca:	e7fe      	b.n	800e3ca <vTaskSwitchContext+0x7e>
 800e3cc:	200135fc 	.word	0x200135fc
 800e3d0:	20013680 	.word	0x20013680
 800e3d4:	20013194 	.word	0x20013194
 800e3d8:	20013604 	.word	0x20013604
 800e3dc:	20013188 	.word	0x20013188
 800e3e0:	20000160 	.word	0x20000160

0800e3e4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800e3e4:	b1d0      	cbz	r0, 800e41c <vTaskPlaceOnEventList+0x38>
{
 800e3e6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e3e8:	4d1a      	ldr	r5, [pc, #104]	; (800e454 <vTaskPlaceOnEventList+0x70>)
 800e3ea:	460c      	mov	r4, r1
 800e3ec:	6829      	ldr	r1, [r5, #0]
 800e3ee:	3118      	adds	r1, #24
 800e3f0:	f7fe f976 	bl	800c6e0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800e3f4:	4b18      	ldr	r3, [pc, #96]	; (800e458 <vTaskPlaceOnEventList+0x74>)
 800e3f6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e3f8:	6828      	ldr	r0, [r5, #0]
 800e3fa:	3004      	adds	r0, #4
 800e3fc:	f7fe f988 	bl	800c710 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800e400:	1c63      	adds	r3, r4, #1
 800e402:	d014      	beq.n	800e42e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e404:	682b      	ldr	r3, [r5, #0]
 800e406:	19a4      	adds	r4, r4, r6
 800e408:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800e40a:	d317      	bcc.n	800e43c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e40c:	4b13      	ldr	r3, [pc, #76]	; (800e45c <vTaskPlaceOnEventList+0x78>)
 800e40e:	6818      	ldr	r0, [r3, #0]
 800e410:	6829      	ldr	r1, [r5, #0]
}
 800e412:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e416:	3104      	adds	r1, #4
 800e418:	f7fe b962 	b.w	800c6e0 <vListInsert>
 800e41c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e420:	f383 8811 	msr	BASEPRI, r3
 800e424:	f3bf 8f6f 	isb	sy
 800e428:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800e42c:	e7fe      	b.n	800e42c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e42e:	6829      	ldr	r1, [r5, #0]
 800e430:	480b      	ldr	r0, [pc, #44]	; (800e460 <vTaskPlaceOnEventList+0x7c>)
}
 800e432:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e436:	3104      	adds	r1, #4
 800e438:	f7fe b942 	b.w	800c6c0 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e43c:	4b09      	ldr	r3, [pc, #36]	; (800e464 <vTaskPlaceOnEventList+0x80>)
 800e43e:	6818      	ldr	r0, [r3, #0]
 800e440:	6829      	ldr	r1, [r5, #0]
 800e442:	3104      	adds	r1, #4
 800e444:	f7fe f94c 	bl	800c6e0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e448:	4b07      	ldr	r3, [pc, #28]	; (800e468 <vTaskPlaceOnEventList+0x84>)
 800e44a:	681a      	ldr	r2, [r3, #0]
 800e44c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800e44e:	bf38      	it	cc
 800e450:	601c      	strcc	r4, [r3, #0]
}
 800e452:	bd70      	pop	{r4, r5, r6, pc}
 800e454:	20013188 	.word	0x20013188
 800e458:	2001367c 	.word	0x2001367c
 800e45c:	20013190 	.word	0x20013190
 800e460:	20013654 	.word	0x20013654
 800e464:	2001318c 	.word	0x2001318c
 800e468:	20013630 	.word	0x20013630

0800e46c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800e46c:	b330      	cbz	r0, 800e4bc <vTaskPlaceOnEventListRestricted+0x50>
	{
 800e46e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e470:	4e1d      	ldr	r6, [pc, #116]	; (800e4e8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800e472:	460c      	mov	r4, r1
 800e474:	6831      	ldr	r1, [r6, #0]
 800e476:	4615      	mov	r5, r2
 800e478:	3118      	adds	r1, #24
 800e47a:	f7fe f921 	bl	800c6c0 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800e47e:	4b1b      	ldr	r3, [pc, #108]	; (800e4ec <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800e480:	b985      	cbnz	r5, 800e4a4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800e482:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e484:	6830      	ldr	r0, [r6, #0]
 800e486:	3004      	adds	r0, #4
 800e488:	f7fe f942 	bl	800c710 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e48c:	6833      	ldr	r3, [r6, #0]
 800e48e:	1964      	adds	r4, r4, r5
 800e490:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800e492:	d31c      	bcc.n	800e4ce <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e494:	4b16      	ldr	r3, [pc, #88]	; (800e4f0 <vTaskPlaceOnEventListRestricted+0x84>)
 800e496:	6818      	ldr	r0, [r3, #0]
 800e498:	6831      	ldr	r1, [r6, #0]
	}
 800e49a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e49e:	3104      	adds	r1, #4
 800e4a0:	f7fe b91e 	b.w	800c6e0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800e4a4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e4a6:	6830      	ldr	r0, [r6, #0]
 800e4a8:	3004      	adds	r0, #4
 800e4aa:	f7fe f931 	bl	800c710 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e4ae:	6831      	ldr	r1, [r6, #0]
 800e4b0:	4810      	ldr	r0, [pc, #64]	; (800e4f4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800e4b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e4b6:	3104      	adds	r1, #4
 800e4b8:	f7fe b902 	b.w	800c6c0 <vListInsertEnd>
 800e4bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4c0:	f383 8811 	msr	BASEPRI, r3
 800e4c4:	f3bf 8f6f 	isb	sy
 800e4c8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800e4cc:	e7fe      	b.n	800e4cc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e4ce:	4b0a      	ldr	r3, [pc, #40]	; (800e4f8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800e4d0:	6818      	ldr	r0, [r3, #0]
 800e4d2:	6831      	ldr	r1, [r6, #0]
 800e4d4:	3104      	adds	r1, #4
 800e4d6:	f7fe f903 	bl	800c6e0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e4da:	4b08      	ldr	r3, [pc, #32]	; (800e4fc <vTaskPlaceOnEventListRestricted+0x90>)
 800e4dc:	681a      	ldr	r2, [r3, #0]
 800e4de:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800e4e0:	bf38      	it	cc
 800e4e2:	601c      	strcc	r4, [r3, #0]
	}
 800e4e4:	bd70      	pop	{r4, r5, r6, pc}
 800e4e6:	bf00      	nop
 800e4e8:	20013188 	.word	0x20013188
 800e4ec:	2001367c 	.word	0x2001367c
 800e4f0:	20013190 	.word	0x20013190
 800e4f4:	20013654 	.word	0x20013654
 800e4f8:	2001318c 	.word	0x2001318c
 800e4fc:	20013630 	.word	0x20013630

0800e500 <xTaskRemoveFromEventList>:
{
 800e500:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e502:	68c3      	ldr	r3, [r0, #12]
 800e504:	68dc      	ldr	r4, [r3, #12]
{
 800e506:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800e508:	2c00      	cmp	r4, #0
 800e50a:	d02b      	beq.n	800e564 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800e50c:	f104 0518 	add.w	r5, r4, #24
 800e510:	4628      	mov	r0, r5
 800e512:	f7fe f8fd 	bl	800c710 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e516:	4b18      	ldr	r3, [pc, #96]	; (800e578 <xTaskRemoveFromEventList+0x78>)
 800e518:	681b      	ldr	r3, [r3, #0]
 800e51a:	b17b      	cbz	r3, 800e53c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800e51c:	4817      	ldr	r0, [pc, #92]	; (800e57c <xTaskRemoveFromEventList+0x7c>)
 800e51e:	4629      	mov	r1, r5
 800e520:	f7fe f8ce 	bl	800c6c0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800e524:	4b16      	ldr	r3, [pc, #88]	; (800e580 <xTaskRemoveFromEventList+0x80>)
 800e526:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e528:	681b      	ldr	r3, [r3, #0]
 800e52a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e52c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800e52e:	bf85      	ittet	hi
 800e530:	4b14      	ldrhi	r3, [pc, #80]	; (800e584 <xTaskRemoveFromEventList+0x84>)
 800e532:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800e534:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800e536:	6018      	strhi	r0, [r3, #0]
}
 800e538:	b003      	add	sp, #12
 800e53a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800e53c:	1d21      	adds	r1, r4, #4
 800e53e:	4608      	mov	r0, r1
 800e540:	9101      	str	r1, [sp, #4]
 800e542:	f7fe f8e5 	bl	800c710 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800e546:	4a10      	ldr	r2, [pc, #64]	; (800e588 <xTaskRemoveFromEventList+0x88>)
 800e548:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e54a:	6810      	ldr	r0, [r2, #0]
 800e54c:	9901      	ldr	r1, [sp, #4]
 800e54e:	4283      	cmp	r3, r0
 800e550:	480e      	ldr	r0, [pc, #56]	; (800e58c <xTaskRemoveFromEventList+0x8c>)
 800e552:	bf88      	it	hi
 800e554:	6013      	strhi	r3, [r2, #0]
 800e556:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e55a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800e55e:	f7fe f8af 	bl	800c6c0 <vListInsertEnd>
 800e562:	e7df      	b.n	800e524 <xTaskRemoveFromEventList+0x24>
 800e564:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e568:	f383 8811 	msr	BASEPRI, r3
 800e56c:	f3bf 8f6f 	isb	sy
 800e570:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800e574:	e7fe      	b.n	800e574 <xTaskRemoveFromEventList+0x74>
 800e576:	bf00      	nop
 800e578:	200135fc 	.word	0x200135fc
 800e57c:	2001363c 	.word	0x2001363c
 800e580:	20013188 	.word	0x20013188
 800e584:	20013680 	.word	0x20013680
 800e588:	20013604 	.word	0x20013604
 800e58c:	20013194 	.word	0x20013194

0800e590 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800e590:	4a03      	ldr	r2, [pc, #12]	; (800e5a0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800e592:	4b04      	ldr	r3, [pc, #16]	; (800e5a4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800e594:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800e596:	681b      	ldr	r3, [r3, #0]
 800e598:	e9c0 2300 	strd	r2, r3, [r0]
}
 800e59c:	4770      	bx	lr
 800e59e:	bf00      	nop
 800e5a0:	20013634 	.word	0x20013634
 800e5a4:	2001367c 	.word	0x2001367c

0800e5a8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800e5a8:	b328      	cbz	r0, 800e5f6 <xTaskCheckForTimeOut+0x4e>
{
 800e5aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e5ac:	460d      	mov	r5, r1
 800e5ae:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800e5b0:	b1c1      	cbz	r1, 800e5e4 <xTaskCheckForTimeOut+0x3c>
 800e5b2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800e5b4:	f7fe f926 	bl	800c804 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800e5b8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800e5ba:	4a1d      	ldr	r2, [pc, #116]	; (800e630 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800e5bc:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800e5be:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800e5c0:	d030      	beq.n	800e624 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800e5c2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800e634 <xTaskCheckForTimeOut+0x8c>
 800e5c6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800e5ca:	f8dc 7000 	ldr.w	r7, [ip]
 800e5ce:	42be      	cmp	r6, r7
 800e5d0:	d01a      	beq.n	800e608 <xTaskCheckForTimeOut+0x60>
 800e5d2:	4288      	cmp	r0, r1
 800e5d4:	d818      	bhi.n	800e608 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800e5d6:	2001      	movs	r0, #1
 800e5d8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e5da:	f7fe f935 	bl	800c848 <vPortExitCritical>
}
 800e5de:	9801      	ldr	r0, [sp, #4]
 800e5e0:	b003      	add	sp, #12
 800e5e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e5e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5e8:	f383 8811 	msr	BASEPRI, r3
 800e5ec:	f3bf 8f6f 	isb	sy
 800e5f0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800e5f4:	e7fe      	b.n	800e5f4 <xTaskCheckForTimeOut+0x4c>
 800e5f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5fa:	f383 8811 	msr	BASEPRI, r3
 800e5fe:	f3bf 8f6f 	isb	sy
 800e602:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800e606:	e7fe      	b.n	800e606 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800e608:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800e60c:	4573      	cmp	r3, lr
 800e60e:	d90b      	bls.n	800e628 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800e610:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800e612:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800e616:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800e618:	4403      	add	r3, r0
 800e61a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800e61c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800e61e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800e622:	e7d9      	b.n	800e5d8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800e624:	2000      	movs	r0, #0
 800e626:	e7d7      	b.n	800e5d8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800e628:	2300      	movs	r3, #0
 800e62a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800e62c:	2001      	movs	r0, #1
 800e62e:	e7d3      	b.n	800e5d8 <xTaskCheckForTimeOut+0x30>
 800e630:	2001367c 	.word	0x2001367c
 800e634:	20013634 	.word	0x20013634

0800e638 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800e638:	4b01      	ldr	r3, [pc, #4]	; (800e640 <vTaskMissedYield+0x8>)
 800e63a:	2201      	movs	r2, #1
 800e63c:	601a      	str	r2, [r3, #0]
}
 800e63e:	4770      	bx	lr
 800e640:	20013680 	.word	0x20013680

0800e644 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800e644:	4b05      	ldr	r3, [pc, #20]	; (800e65c <xTaskGetSchedulerState+0x18>)
 800e646:	681b      	ldr	r3, [r3, #0]
 800e648:	b133      	cbz	r3, 800e658 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e64a:	4b05      	ldr	r3, [pc, #20]	; (800e660 <xTaskGetSchedulerState+0x1c>)
 800e64c:	6818      	ldr	r0, [r3, #0]
 800e64e:	fab0 f080 	clz	r0, r0
 800e652:	0940      	lsrs	r0, r0, #5
 800e654:	0040      	lsls	r0, r0, #1
 800e656:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800e658:	2001      	movs	r0, #1
	}
 800e65a:	4770      	bx	lr
 800e65c:	20013650 	.word	0x20013650
 800e660:	200135fc 	.word	0x200135fc

0800e664 <xTaskPriorityInherit>:
	{
 800e664:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800e666:	4604      	mov	r4, r0
	{
 800e668:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800e66a:	b1c8      	cbz	r0, 800e6a0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800e66c:	4d1d      	ldr	r5, [pc, #116]	; (800e6e4 <xTaskPriorityInherit+0x80>)
 800e66e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e670:	682a      	ldr	r2, [r5, #0]
 800e672:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e674:	4293      	cmp	r3, r2
 800e676:	d215      	bcs.n	800e6a4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e678:	6982      	ldr	r2, [r0, #24]
 800e67a:	2a00      	cmp	r2, #0
 800e67c:	db04      	blt.n	800e688 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e67e:	682a      	ldr	r2, [r5, #0]
 800e680:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e682:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800e686:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800e688:	4e17      	ldr	r6, [pc, #92]	; (800e6e8 <xTaskPriorityInherit+0x84>)
 800e68a:	6962      	ldr	r2, [r4, #20]
 800e68c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e690:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800e694:	429a      	cmp	r2, r3
 800e696:	d00e      	beq.n	800e6b6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e698:	682b      	ldr	r3, [r5, #0]
 800e69a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e69c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800e69e:	2001      	movs	r0, #1
	}
 800e6a0:	b002      	add	sp, #8
 800e6a2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800e6a4:	682b      	ldr	r3, [r5, #0]
 800e6a6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e6a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6aa:	4298      	cmp	r0, r3
 800e6ac:	bf2c      	ite	cs
 800e6ae:	2000      	movcs	r0, #0
 800e6b0:	2001      	movcc	r0, #1
	}
 800e6b2:	b002      	add	sp, #8
 800e6b4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e6b6:	1d21      	adds	r1, r4, #4
 800e6b8:	4608      	mov	r0, r1
 800e6ba:	9101      	str	r1, [sp, #4]
 800e6bc:	f7fe f828 	bl	800c710 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e6c0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e6c2:	4b0a      	ldr	r3, [pc, #40]	; (800e6ec <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e6c4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e6c6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e6c8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e6ca:	4290      	cmp	r0, r2
 800e6cc:	bf88      	it	hi
 800e6ce:	6018      	strhi	r0, [r3, #0]
 800e6d0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e6d4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800e6d8:	9901      	ldr	r1, [sp, #4]
 800e6da:	f7fd fff1 	bl	800c6c0 <vListInsertEnd>
				xReturn = pdTRUE;
 800e6de:	2001      	movs	r0, #1
 800e6e0:	e7de      	b.n	800e6a0 <xTaskPriorityInherit+0x3c>
 800e6e2:	bf00      	nop
 800e6e4:	20013188 	.word	0x20013188
 800e6e8:	20013194 	.word	0x20013194
 800e6ec:	20013604 	.word	0x20013604

0800e6f0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800e6f0:	b318      	cbz	r0, 800e73a <xTaskPriorityDisinherit+0x4a>
	{
 800e6f2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800e6f4:	4b1e      	ldr	r3, [pc, #120]	; (800e770 <xTaskPriorityDisinherit+0x80>)
 800e6f6:	681c      	ldr	r4, [r3, #0]
 800e6f8:	4284      	cmp	r4, r0
	{
 800e6fa:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800e6fc:	d008      	beq.n	800e710 <xTaskPriorityDisinherit+0x20>
 800e6fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e702:	f383 8811 	msr	BASEPRI, r3
 800e706:	f3bf 8f6f 	isb	sy
 800e70a:	f3bf 8f4f 	dsb	sy
 800e70e:	e7fe      	b.n	800e70e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800e710:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800e712:	b14b      	cbz	r3, 800e728 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e714:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e716:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800e718:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e71a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800e71c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e71e:	d000      	beq.n	800e722 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800e720:	b16b      	cbz	r3, 800e73e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800e722:	2000      	movs	r0, #0
	}
 800e724:	b002      	add	sp, #8
 800e726:	bd10      	pop	{r4, pc}
 800e728:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e72c:	f383 8811 	msr	BASEPRI, r3
 800e730:	f3bf 8f6f 	isb	sy
 800e734:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800e738:	e7fe      	b.n	800e738 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800e73a:	2000      	movs	r0, #0
	}
 800e73c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e73e:	1d21      	adds	r1, r4, #4
 800e740:	4608      	mov	r0, r1
 800e742:	9101      	str	r1, [sp, #4]
 800e744:	f7fd ffe4 	bl	800c710 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800e748:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800e74a:	4a0a      	ldr	r2, [pc, #40]	; (800e774 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800e74c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e74e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800e752:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800e754:	6810      	ldr	r0, [r2, #0]
 800e756:	9901      	ldr	r1, [sp, #4]
 800e758:	4283      	cmp	r3, r0
 800e75a:	4807      	ldr	r0, [pc, #28]	; (800e778 <xTaskPriorityDisinherit+0x88>)
 800e75c:	bf88      	it	hi
 800e75e:	6013      	strhi	r3, [r2, #0]
 800e760:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e764:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800e768:	f7fd ffaa 	bl	800c6c0 <vListInsertEnd>
					xReturn = pdTRUE;
 800e76c:	2001      	movs	r0, #1
		return xReturn;
 800e76e:	e7d9      	b.n	800e724 <xTaskPriorityDisinherit+0x34>
 800e770:	20013188 	.word	0x20013188
 800e774:	20013604 	.word	0x20013604
 800e778:	20013194 	.word	0x20013194

0800e77c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800e77c:	2800      	cmp	r0, #0
 800e77e:	d041      	beq.n	800e804 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800e780:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800e782:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800e784:	b083      	sub	sp, #12
 800e786:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800e788:	b153      	cbz	r3, 800e7a0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800e78a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800e78c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e78e:	4281      	cmp	r1, r0
 800e790:	bf38      	it	cc
 800e792:	4601      	movcc	r1, r0
 800e794:	428a      	cmp	r2, r1
 800e796:	d001      	beq.n	800e79c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800e798:	2b01      	cmp	r3, #1
 800e79a:	d00a      	beq.n	800e7b2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800e79c:	b003      	add	sp, #12
 800e79e:	bd30      	pop	{r4, r5, pc}
 800e7a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7a4:	f383 8811 	msr	BASEPRI, r3
 800e7a8:	f3bf 8f6f 	isb	sy
 800e7ac:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800e7b0:	e7fe      	b.n	800e7b0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800e7b2:	4b19      	ldr	r3, [pc, #100]	; (800e818 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800e7b4:	681b      	ldr	r3, [r3, #0]
 800e7b6:	42a3      	cmp	r3, r4
 800e7b8:	d025      	beq.n	800e806 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e7ba:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800e7bc:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e7be:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e7c0:	bfa8      	it	ge
 800e7c2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e7c6:	4d15      	ldr	r5, [pc, #84]	; (800e81c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e7c8:	bfa8      	it	ge
 800e7ca:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e7cc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800e7d0:	6961      	ldr	r1, [r4, #20]
 800e7d2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800e7d6:	4299      	cmp	r1, r3
 800e7d8:	d1e0      	bne.n	800e79c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e7da:	1d21      	adds	r1, r4, #4
 800e7dc:	4608      	mov	r0, r1
 800e7de:	9101      	str	r1, [sp, #4]
 800e7e0:	f7fd ff96 	bl	800c710 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800e7e4:	4b0e      	ldr	r3, [pc, #56]	; (800e820 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800e7e6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800e7e8:	681a      	ldr	r2, [r3, #0]
 800e7ea:	9901      	ldr	r1, [sp, #4]
 800e7ec:	4290      	cmp	r0, r2
 800e7ee:	bf88      	it	hi
 800e7f0:	6018      	strhi	r0, [r3, #0]
 800e7f2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e7f6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800e7fa:	b003      	add	sp, #12
 800e7fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800e800:	f7fd bf5e 	b.w	800c6c0 <vListInsertEnd>
 800e804:	4770      	bx	lr
 800e806:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e80a:	f383 8811 	msr	BASEPRI, r3
 800e80e:	f3bf 8f6f 	isb	sy
 800e812:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800e816:	e7fe      	b.n	800e816 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800e818:	20013188 	.word	0x20013188
 800e81c:	20013194 	.word	0x20013194
 800e820:	20013604 	.word	0x20013604

0800e824 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800e824:	4b04      	ldr	r3, [pc, #16]	; (800e838 <pvTaskIncrementMutexHeldCount+0x14>)
 800e826:	681a      	ldr	r2, [r3, #0]
 800e828:	b11a      	cbz	r2, 800e832 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800e82a:	6819      	ldr	r1, [r3, #0]
 800e82c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800e82e:	3201      	adds	r2, #1
 800e830:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800e832:	6818      	ldr	r0, [r3, #0]
	}
 800e834:	4770      	bx	lr
 800e836:	bf00      	nop
 800e838:	20013188 	.word	0x20013188

0800e83c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800e83c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e840:	4e22      	ldr	r6, [pc, #136]	; (800e8cc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800e842:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800e8d4 <prvSwitchTimerLists+0x98>
{
 800e846:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800e848:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800e84c:	e00d      	b.n	800e86a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800e84e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e850:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800e852:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800e854:	1d25      	adds	r5, r4, #4
 800e856:	4628      	mov	r0, r5
 800e858:	f7fd ff5a 	bl	800c710 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800e85c:	6a23      	ldr	r3, [r4, #32]
 800e85e:	4620      	mov	r0, r4
 800e860:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800e862:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800e866:	075b      	lsls	r3, r3, #29
 800e868:	d40a      	bmi.n	800e880 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800e86a:	6833      	ldr	r3, [r6, #0]
 800e86c:	681a      	ldr	r2, [r3, #0]
 800e86e:	2a00      	cmp	r2, #0
 800e870:	d1ed      	bne.n	800e84e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800e872:	4a17      	ldr	r2, [pc, #92]	; (800e8d0 <prvSwitchTimerLists+0x94>)
 800e874:	6811      	ldr	r1, [r2, #0]
 800e876:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800e878:	6013      	str	r3, [r2, #0]
}
 800e87a:	b005      	add	sp, #20
 800e87c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800e880:	69a3      	ldr	r3, [r4, #24]
 800e882:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800e884:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e886:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800e888:	d205      	bcs.n	800e896 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e88a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800e88c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e88e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e890:	f7fd ff26 	bl	800c6e0 <vListInsert>
 800e894:	e7e9      	b.n	800e86a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800e896:	f8d9 3000 	ldr.w	r3, [r9]
 800e89a:	b16b      	cbz	r3, 800e8b8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800e89c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800e8a0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800e8a2:	f7ff fecf 	bl	800e644 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800e8a6:	2300      	movs	r3, #0
 800e8a8:	f8d9 0000 	ldr.w	r0, [r9]
 800e8ac:	461a      	mov	r2, r3
 800e8ae:	4669      	mov	r1, sp
 800e8b0:	f7fe fa9c 	bl	800cdec <xQueueGenericSend>
				configASSERT( xResult );
 800e8b4:	2800      	cmp	r0, #0
 800e8b6:	d1d8      	bne.n	800e86a <prvSwitchTimerLists+0x2e>
 800e8b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8bc:	f383 8811 	msr	BASEPRI, r3
 800e8c0:	f3bf 8f6f 	isb	sy
 800e8c4:	f3bf 8f4f 	dsb	sy
 800e8c8:	e7fe      	b.n	800e8c8 <prvSwitchTimerLists+0x8c>
 800e8ca:	bf00      	nop
 800e8cc:	20013684 	.word	0x20013684
 800e8d0:	20013688 	.word	0x20013688
 800e8d4:	200137a8 	.word	0x200137a8

0800e8d8 <prvTimerTask>:
{
 800e8d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e8dc:	4e9b      	ldr	r6, [pc, #620]	; (800eb4c <prvTimerTask+0x274>)
 800e8de:	4d9c      	ldr	r5, [pc, #624]	; (800eb50 <prvTimerTask+0x278>)
 800e8e0:	4c9c      	ldr	r4, [pc, #624]	; (800eb54 <prvTimerTask+0x27c>)
 800e8e2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800e8e4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800e8e8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800e8ec:	6833      	ldr	r3, [r6, #0]
 800e8ee:	681f      	ldr	r7, [r3, #0]
 800e8f0:	2f00      	cmp	r7, #0
 800e8f2:	f000 80a8 	beq.w	800ea46 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800e8f6:	68db      	ldr	r3, [r3, #12]
 800e8f8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800e8fa:	f7ff fcf9 	bl	800e2f0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800e8fe:	f7ff fd0f 	bl	800e320 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800e902:	682a      	ldr	r2, [r5, #0]
 800e904:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800e906:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800e908:	f0c0 80ae 	bcc.w	800ea68 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800e90c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800e90e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800e910:	f240 80b4 	bls.w	800ea7c <prvTimerTask+0x1a4>
 800e914:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800e916:	6820      	ldr	r0, [r4, #0]
 800e918:	eba7 010a 	sub.w	r1, r7, sl
 800e91c:	f7ff f89a 	bl	800da54 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800e920:	f7ff fcee 	bl	800e300 <xTaskResumeAll>
 800e924:	b928      	cbnz	r0, 800e932 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800e926:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800e92a:	f3bf 8f4f 	dsb	sy
 800e92e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800e932:	6820      	ldr	r0, [r4, #0]
 800e934:	2200      	movs	r2, #0
 800e936:	a902      	add	r1, sp, #8
 800e938:	f7fe fc94 	bl	800d264 <xQueueReceive>
 800e93c:	2800      	cmp	r0, #0
 800e93e:	d0d5      	beq.n	800e8ec <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800e940:	9b02      	ldr	r3, [sp, #8]
 800e942:	2b00      	cmp	r3, #0
 800e944:	db76      	blt.n	800ea34 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800e946:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800e948:	697b      	ldr	r3, [r7, #20]
 800e94a:	b113      	cbz	r3, 800e952 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800e94c:	1d38      	adds	r0, r7, #4
 800e94e:	f7fd fedf 	bl	800c710 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800e952:	f7ff fce5 	bl	800e320 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800e956:	682b      	ldr	r3, [r5, #0]
 800e958:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800e95a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800e95c:	f0c0 808b 	bcc.w	800ea76 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800e960:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800e962:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800e966:	2b09      	cmp	r3, #9
 800e968:	d8e3      	bhi.n	800e932 <prvTimerTask+0x5a>
 800e96a:	e8df f003 	tbb	[pc, r3]
 800e96e:	0505      	.short	0x0505
 800e970:	5a3d5305 	.word	0x5a3d5305
 800e974:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800e978:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800e97c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e97e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800e980:	f043 0301 	orr.w	r3, r3, #1
 800e984:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800e988:	9b03      	ldr	r3, [sp, #12]
 800e98a:	1899      	adds	r1, r3, r2
 800e98c:	bf2c      	ite	cs
 800e98e:	2001      	movcs	r0, #1
 800e990:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800e992:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800e994:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800e996:	f200 808c 	bhi.w	800eab2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e99a:	ebaa 0303 	sub.w	r3, sl, r3
 800e99e:	429a      	cmp	r2, r3
 800e9a0:	d832      	bhi.n	800ea08 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800e9a2:	6a3b      	ldr	r3, [r7, #32]
 800e9a4:	4638      	mov	r0, r7
 800e9a6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800e9a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e9ac:	075b      	lsls	r3, r3, #29
 800e9ae:	d5c0      	bpl.n	800e932 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800e9b0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800e9b2:	9903      	ldr	r1, [sp, #12]
 800e9b4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800e9b6:	b172      	cbz	r2, 800e9d6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800e9b8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800e9ba:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800e9be:	2300      	movs	r3, #0
 800e9c0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800e9c2:	f7ff fe3f 	bl	800e644 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800e9c6:	2300      	movs	r3, #0
 800e9c8:	6820      	ldr	r0, [r4, #0]
 800e9ca:	461a      	mov	r2, r3
 800e9cc:	a906      	add	r1, sp, #24
 800e9ce:	f7fe fa0d 	bl	800cdec <xQueueGenericSend>
							configASSERT( xResult );
 800e9d2:	2800      	cmp	r0, #0
 800e9d4:	d1ad      	bne.n	800e932 <prvTimerTask+0x5a>
 800e9d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9da:	f383 8811 	msr	BASEPRI, r3
 800e9de:	f3bf 8f6f 	isb	sy
 800e9e2:	f3bf 8f4f 	dsb	sy
 800e9e6:	e7fe      	b.n	800e9e6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800e9e8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e9ec:	f043 0301 	orr.w	r3, r3, #1
 800e9f0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800e9f4:	9b03      	ldr	r3, [sp, #12]
 800e9f6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800e9f8:	2b00      	cmp	r3, #0
 800e9fa:	f000 809d 	beq.w	800eb38 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800e9fe:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800ea00:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ea02:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ea04:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800ea06:	d85e      	bhi.n	800eac6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ea08:	4b53      	ldr	r3, [pc, #332]	; (800eb58 <prvTimerTask+0x280>)
 800ea0a:	1d39      	adds	r1, r7, #4
 800ea0c:	6818      	ldr	r0, [r3, #0]
 800ea0e:	f7fd fe67 	bl	800c6e0 <vListInsert>
	return xProcessTimerNow;
 800ea12:	e78e      	b.n	800e932 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ea14:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ea18:	f023 0301 	bic.w	r3, r3, #1
 800ea1c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800ea20:	e787      	b.n	800e932 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800ea22:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ea26:	079a      	lsls	r2, r3, #30
 800ea28:	d552      	bpl.n	800ead0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ea2a:	f023 0301 	bic.w	r3, r3, #1
 800ea2e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800ea32:	e77e      	b.n	800e932 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ea34:	9b03      	ldr	r3, [sp, #12]
 800ea36:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ea3a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800ea3c:	9b02      	ldr	r3, [sp, #8]
 800ea3e:	2b00      	cmp	r3, #0
 800ea40:	f6ff af77 	blt.w	800e932 <prvTimerTask+0x5a>
 800ea44:	e77f      	b.n	800e946 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800ea46:	f7ff fc53 	bl	800e2f0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800ea4a:	f7ff fc69 	bl	800e320 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ea4e:	682a      	ldr	r2, [r5, #0]
 800ea50:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800ea52:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ea54:	d808      	bhi.n	800ea68 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ea56:	4b40      	ldr	r3, [pc, #256]	; (800eb58 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800ea58:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ea5c:	681a      	ldr	r2, [r3, #0]
 800ea5e:	6812      	ldr	r2, [r2, #0]
 800ea60:	fab2 f282 	clz	r2, r2
 800ea64:	0952      	lsrs	r2, r2, #5
 800ea66:	e756      	b.n	800e916 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800ea68:	f7ff fee8 	bl	800e83c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800ea6c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800ea70:	f7ff fc46 	bl	800e300 <xTaskResumeAll>
 800ea74:	e75d      	b.n	800e932 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800ea76:	f7ff fee1 	bl	800e83c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800ea7a:	e771      	b.n	800e960 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800ea7c:	f7ff fc40 	bl	800e300 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea80:	6832      	ldr	r2, [r6, #0]
 800ea82:	68d2      	ldr	r2, [r2, #12]
 800ea84:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ea88:	f10b 0104 	add.w	r1, fp, #4
 800ea8c:	4608      	mov	r0, r1
 800ea8e:	9101      	str	r1, [sp, #4]
 800ea90:	f7fd fe3e 	bl	800c710 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ea94:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800ea98:	9901      	ldr	r1, [sp, #4]
 800ea9a:	f010 0f04 	tst.w	r0, #4
 800ea9e:	d11b      	bne.n	800ead8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800eaa0:	f020 0001 	bic.w	r0, r0, #1
 800eaa4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800eaa8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800eaac:	4658      	mov	r0, fp
 800eaae:	4798      	blx	r3
}
 800eab0:	e73f      	b.n	800e932 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800eab2:	4553      	cmp	r3, sl
 800eab4:	d902      	bls.n	800eabc <prvTimerTask+0x1e4>
 800eab6:	2800      	cmp	r0, #0
 800eab8:	f43f af73 	beq.w	800e9a2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eabc:	6830      	ldr	r0, [r6, #0]
 800eabe:	1d39      	adds	r1, r7, #4
 800eac0:	f7fd fe0e 	bl	800c6e0 <vListInsert>
	return xProcessTimerNow;
 800eac4:	e735      	b.n	800e932 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eac6:	6830      	ldr	r0, [r6, #0]
 800eac8:	1d39      	adds	r1, r7, #4
 800eaca:	f7fd fe09 	bl	800c6e0 <vListInsert>
 800eace:	e730      	b.n	800e932 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800ead0:	4638      	mov	r0, r7
 800ead2:	f7fd fd81 	bl	800c5d8 <vPortFree>
 800ead6:	e72c      	b.n	800e932 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ead8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800eadc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800eae0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800eae2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800eae4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800eae8:	d903      	bls.n	800eaf2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eaea:	6830      	ldr	r0, [r6, #0]
 800eaec:	f7fd fdf8 	bl	800c6e0 <vListInsert>
	return xProcessTimerNow;
 800eaf0:	e7da      	b.n	800eaa8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eaf2:	ebaa 0307 	sub.w	r3, sl, r7
 800eaf6:	429a      	cmp	r2, r3
 800eaf8:	d819      	bhi.n	800eb2e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800eafa:	6823      	ldr	r3, [r4, #0]
 800eafc:	b173      	cbz	r3, 800eb1c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800eafe:	2300      	movs	r3, #0
 800eb00:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800eb02:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800eb04:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800eb08:	f7ff fd9c 	bl	800e644 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800eb0c:	2300      	movs	r3, #0
 800eb0e:	6820      	ldr	r0, [r4, #0]
 800eb10:	461a      	mov	r2, r3
 800eb12:	a906      	add	r1, sp, #24
 800eb14:	f7fe f96a 	bl	800cdec <xQueueGenericSend>
			configASSERT( xResult );
 800eb18:	2800      	cmp	r0, #0
 800eb1a:	d1c5      	bne.n	800eaa8 <prvTimerTask+0x1d0>
 800eb1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb20:	f383 8811 	msr	BASEPRI, r3
 800eb24:	f3bf 8f6f 	isb	sy
 800eb28:	f3bf 8f4f 	dsb	sy
 800eb2c:	e7fe      	b.n	800eb2c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800eb2e:	4b0a      	ldr	r3, [pc, #40]	; (800eb58 <prvTimerTask+0x280>)
 800eb30:	6818      	ldr	r0, [r3, #0]
 800eb32:	f7fd fdd5 	bl	800c6e0 <vListInsert>
	return xProcessTimerNow;
 800eb36:	e7b7      	b.n	800eaa8 <prvTimerTask+0x1d0>
 800eb38:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb3c:	f383 8811 	msr	BASEPRI, r3
 800eb40:	f3bf 8f6f 	isb	sy
 800eb44:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800eb48:	e7fe      	b.n	800eb48 <prvTimerTask+0x270>
 800eb4a:	bf00      	nop
 800eb4c:	20013684 	.word	0x20013684
 800eb50:	20013754 	.word	0x20013754
 800eb54:	200137a8 	.word	0x200137a8
 800eb58:	20013688 	.word	0x20013688

0800eb5c <xTimerCreateTimerTask>:
{
 800eb5c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800eb5e:	4c23      	ldr	r4, [pc, #140]	; (800ebec <xTimerCreateTimerTask+0x90>)
{
 800eb60:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800eb62:	f7fd fe4f 	bl	800c804 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800eb66:	6825      	ldr	r5, [r4, #0]
 800eb68:	b335      	cbz	r5, 800ebb8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800eb6a:	f7fd fe6d 	bl	800c848 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800eb6e:	6823      	ldr	r3, [r4, #0]
 800eb70:	b1cb      	cbz	r3, 800eba6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800eb72:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800eb74:	aa07      	add	r2, sp, #28
 800eb76:	a906      	add	r1, sp, #24
 800eb78:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800eb7a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800eb7e:	f7fd fc5f 	bl	800c440 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800eb82:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800eb86:	2302      	movs	r3, #2
 800eb88:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800eb8c:	9300      	str	r3, [sp, #0]
 800eb8e:	9a07      	ldr	r2, [sp, #28]
 800eb90:	4917      	ldr	r1, [pc, #92]	; (800ebf0 <xTimerCreateTimerTask+0x94>)
 800eb92:	4818      	ldr	r0, [pc, #96]	; (800ebf4 <xTimerCreateTimerTask+0x98>)
 800eb94:	4623      	mov	r3, r4
 800eb96:	f7ff fa6d 	bl	800e074 <xTaskCreateStatic>
 800eb9a:	4b17      	ldr	r3, [pc, #92]	; (800ebf8 <xTimerCreateTimerTask+0x9c>)
 800eb9c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800eb9e:	b110      	cbz	r0, 800eba6 <xTimerCreateTimerTask+0x4a>
}
 800eba0:	2001      	movs	r0, #1
 800eba2:	b009      	add	sp, #36	; 0x24
 800eba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eba6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebaa:	f383 8811 	msr	BASEPRI, r3
 800ebae:	f3bf 8f6f 	isb	sy
 800ebb2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800ebb6:	e7fe      	b.n	800ebb6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800ebb8:	4f10      	ldr	r7, [pc, #64]	; (800ebfc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800ebba:	4e11      	ldr	r6, [pc, #68]	; (800ec00 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800ebbc:	4638      	mov	r0, r7
 800ebbe:	f7fd fd6f 	bl	800c6a0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800ebc2:	4630      	mov	r0, r6
 800ebc4:	f7fd fd6c 	bl	800c6a0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800ebc8:	4a0e      	ldr	r2, [pc, #56]	; (800ec04 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ebca:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800ebcc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800ebce:	4a0e      	ldr	r2, [pc, #56]	; (800ec08 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ebd0:	4b0e      	ldr	r3, [pc, #56]	; (800ec0c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800ebd2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ebd4:	2110      	movs	r1, #16
 800ebd6:	4a0e      	ldr	r2, [pc, #56]	; (800ec10 <xTimerCreateTimerTask+0xb4>)
 800ebd8:	200a      	movs	r0, #10
 800ebda:	f7fd ffb1 	bl	800cb40 <xQueueGenericCreateStatic>
 800ebde:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800ebe0:	2800      	cmp	r0, #0
 800ebe2:	d0c2      	beq.n	800eb6a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800ebe4:	490b      	ldr	r1, [pc, #44]	; (800ec14 <xTimerCreateTimerTask+0xb8>)
 800ebe6:	f7fe ff0d 	bl	800da04 <vQueueAddToRegistry>
 800ebea:	e7be      	b.n	800eb6a <xTimerCreateTimerTask+0xe>
 800ebec:	200137a8 	.word	0x200137a8
 800ebf0:	0802babc 	.word	0x0802babc
 800ebf4:	0800e8d9 	.word	0x0800e8d9
 800ebf8:	200137ac 	.word	0x200137ac
 800ebfc:	2001372c 	.word	0x2001372c
 800ec00:	20013740 	.word	0x20013740
 800ec04:	20013684 	.word	0x20013684
 800ec08:	20013688 	.word	0x20013688
 800ec0c:	20013758 	.word	0x20013758
 800ec10:	2001368c 	.word	0x2001368c
 800ec14:	0802bab4 	.word	0x0802bab4

0800ec18 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ec18:	8880      	ldrh	r0, [r0, #4]
 800ec1a:	4770      	bx	lr

0800ec1c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ec1c:	b570      	push	{r4, r5, r6, lr}
 800ec1e:	6803      	ldr	r3, [r0, #0]
 800ec20:	4605      	mov	r5, r0
 800ec22:	460c      	mov	r4, r1
 800ec24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ec26:	2100      	movs	r1, #0
 800ec28:	4798      	blx	r3
 800ec2a:	682b      	ldr	r3, [r5, #0]
 800ec2c:	4606      	mov	r6, r0
 800ec2e:	6a1b      	ldr	r3, [r3, #32]
 800ec30:	4628      	mov	r0, r5
 800ec32:	4798      	blx	r3
 800ec34:	1ba4      	subs	r4, r4, r6
 800ec36:	b2a4      	uxth	r4, r4
 800ec38:	fbb4 f0f0 	udiv	r0, r4, r0
 800ec3c:	bd70      	pop	{r4, r5, r6, pc}

0800ec3e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800ec3e:	2300      	movs	r3, #0
 800ec40:	8083      	strh	r3, [r0, #4]
 800ec42:	4770      	bx	lr

0800ec44 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800ec44:	b510      	push	{r4, lr}
 800ec46:	6803      	ldr	r3, [r0, #0]
 800ec48:	8881      	ldrh	r1, [r0, #4]
 800ec4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ec4c:	4604      	mov	r4, r0
 800ec4e:	4798      	blx	r3
 800ec50:	88a3      	ldrh	r3, [r4, #4]
 800ec52:	3301      	adds	r3, #1
 800ec54:	80a3      	strh	r3, [r4, #4]
 800ec56:	bd10      	pop	{r4, pc}

0800ec58 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800ec58:	6803      	ldr	r3, [r0, #0]
 800ec5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ec5c:	4718      	bx	r3

0800ec5e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800ec5e:	4770      	bx	lr

0800ec60 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800ec60:	4a02      	ldr	r2, [pc, #8]	; (800ec6c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800ec62:	6002      	str	r2, [r0, #0]
 800ec64:	2200      	movs	r2, #0
 800ec66:	8082      	strh	r2, [r0, #4]
 800ec68:	4770      	bx	lr
 800ec6a:	bf00      	nop
 800ec6c:	0802bacc 	.word	0x0802bacc

0800ec70 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800ec70:	b510      	push	{r4, lr}
 800ec72:	6803      	ldr	r3, [r0, #0]
 800ec74:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800ec78:	4604      	mov	r4, r0
 800ec7a:	4798      	blx	r3
 800ec7c:	b110      	cbz	r0, 800ec84 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800ec7e:	4620      	mov	r0, r4
 800ec80:	f7f2 faf8 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800ec84:	bd10      	pop	{r4, pc}

0800ec86 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800ec86:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800ec8a:	4770      	bx	lr

0800ec8c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800ec8c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800ec90:	4770      	bx	lr

0800ec92 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800ec92:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800ec96:	4770      	bx	lr

0800ec98 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800ec98:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800ec9c:	4770      	bx	lr

0800ec9e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800ec9e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eca0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800eca4:	461e      	mov	r6, r3
 800eca6:	6803      	ldr	r3, [r0, #0]
 800eca8:	460f      	mov	r7, r1
 800ecaa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ecae:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800ecb2:	4604      	mov	r4, r0
 800ecb4:	4615      	mov	r5, r2
 800ecb6:	4798      	blx	r3
 800ecb8:	b93e      	cbnz	r6, 800ecca <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800ecba:	1bed      	subs	r5, r5, r7
 800ecbc:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800ecc0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800ecc4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800ecc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ecca:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800ecce:	e7f7      	b.n	800ecc0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800ecd0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800ecd0:	b510      	push	{r4, lr}
 800ecd2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800ecd6:	600c      	str	r4, [r1, #0]
 800ecd8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800ecdc:	6011      	str	r1, [r2, #0]
 800ecde:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800ece2:	801a      	strh	r2, [r3, #0]
 800ece4:	9b02      	ldr	r3, [sp, #8]
 800ece6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800ecea:	801a      	strh	r2, [r3, #0]
 800ecec:	bd10      	pop	{r4, pc}

0800ecee <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800ecee:	b510      	push	{r4, lr}
 800ecf0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800ecf4:	600c      	str	r4, [r1, #0]
 800ecf6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800ecfa:	6011      	str	r1, [r2, #0]
 800ecfc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800ed00:	801a      	strh	r2, [r3, #0]
 800ed02:	bd10      	pop	{r4, pc}

0800ed04 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800ed04:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800ed08:	600b      	str	r3, [r1, #0]
 800ed0a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800ed0e:	6013      	str	r3, [r2, #0]
 800ed10:	4770      	bx	lr

0800ed12 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800ed12:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800ed16:	4770      	bx	lr

0800ed18 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800ed18:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800ed1c:	4770      	bx	lr

0800ed1e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800ed1e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800ed22:	4770      	bx	lr

0800ed24 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800ed24:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800ed28:	4770      	bx	lr

0800ed2a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800ed2a:	4770      	bx	lr

0800ed2c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800ed2c:	b510      	push	{r4, lr}
 800ed2e:	21b4      	movs	r1, #180	; 0xb4
 800ed30:	4604      	mov	r4, r0
 800ed32:	f018 f96c 	bl	802700e <_ZdlPvj>
 800ed36:	4620      	mov	r0, r4
 800ed38:	bd10      	pop	{r4, pc}

0800ed3a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800ed3a:	b570      	push	{r4, r5, r6, lr}
 800ed3c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800ed40:	428d      	cmp	r5, r1
 800ed42:	bfb8      	it	lt
 800ed44:	460d      	movlt	r5, r1
 800ed46:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800ed4a:	428d      	cmp	r5, r1
 800ed4c:	4604      	mov	r4, r0
 800ed4e:	bfa8      	it	ge
 800ed50:	460d      	movge	r5, r1
 800ed52:	4616      	mov	r6, r2
 800ed54:	b99a      	cbnz	r2, 800ed7e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800ed56:	6803      	ldr	r3, [r0, #0]
 800ed58:	4629      	mov	r1, r5
 800ed5a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ed5e:	4798      	blx	r3
 800ed60:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800ed64:	b368      	cbz	r0, 800edc2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800ed66:	6803      	ldr	r3, [r0, #0]
 800ed68:	68db      	ldr	r3, [r3, #12]
 800ed6a:	4798      	blx	r3
 800ed6c:	b348      	cbz	r0, 800edc2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800ed6e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800ed72:	6803      	ldr	r3, [r0, #0]
 800ed74:	4621      	mov	r1, r4
 800ed76:	689b      	ldr	r3, [r3, #8]
 800ed78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ed7c:	4718      	bx	r3
 800ed7e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800ed82:	2b00      	cmp	r3, #0
 800ed84:	dd08      	ble.n	800ed98 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800ed86:	f005 fbe3 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
 800ed8a:	4621      	mov	r1, r4
 800ed8c:	3004      	adds	r0, #4
 800ed8e:	f005 fc2c 	bl	80145ea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800ed92:	2300      	movs	r3, #0
 800ed94:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800ed98:	6823      	ldr	r3, [r4, #0]
 800ed9a:	4620      	mov	r0, r4
 800ed9c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800eda0:	4798      	blx	r3
 800eda2:	2300      	movs	r3, #0
 800eda4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800eda8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800edac:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800edb0:	f005 fbce 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
 800edb4:	4621      	mov	r1, r4
 800edb6:	3004      	adds	r0, #4
 800edb8:	f005 fcc0 	bl	801473c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800edbc:	2301      	movs	r3, #1
 800edbe:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800edc2:	bd70      	pop	{r4, r5, r6, pc}

0800edc4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800edc4:	b510      	push	{r4, lr}
 800edc6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800edca:	4299      	cmp	r1, r3
 800edcc:	bfb8      	it	lt
 800edce:	4619      	movlt	r1, r3
 800edd0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800edd4:	4299      	cmp	r1, r3
 800edd6:	bfa8      	it	ge
 800edd8:	4619      	movge	r1, r3
 800edda:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800edde:	428b      	cmp	r3, r1
 800ede0:	4604      	mov	r4, r0
 800ede2:	d010      	beq.n	800ee06 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800ede4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800ede8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800edec:	b158      	cbz	r0, 800ee06 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800edee:	6803      	ldr	r3, [r0, #0]
 800edf0:	68db      	ldr	r3, [r3, #12]
 800edf2:	4798      	blx	r3
 800edf4:	b138      	cbz	r0, 800ee06 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800edf6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800edfa:	6803      	ldr	r3, [r0, #0]
 800edfc:	4621      	mov	r1, r4
 800edfe:	689b      	ldr	r3, [r3, #8]
 800ee00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ee04:	4718      	bx	r3
 800ee06:	bd10      	pop	{r4, pc}

0800ee08 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800ee08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ee0a:	4604      	mov	r4, r0
 800ee0c:	460d      	mov	r5, r1
 800ee0e:	b1a9      	cbz	r1, 800ee3c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800ee10:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800ee14:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800ee18:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800ee1c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800ee20:	ab01      	add	r3, sp, #4
 800ee22:	1a12      	subs	r2, r2, r0
 800ee24:	1b89      	subs	r1, r1, r6
 800ee26:	1a38      	subs	r0, r7, r0
 800ee28:	f006 fe48 	bl	8015abc <_ZN8touchgfx6muldivElllRl>
 800ee2c:	4629      	mov	r1, r5
 800ee2e:	ab01      	add	r3, sp, #4
 800ee30:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800ee34:	4430      	add	r0, r6
 800ee36:	f006 fe41 	bl	8015abc <_ZN8touchgfx6muldivElllRl>
 800ee3a:	b285      	uxth	r5, r0
 800ee3c:	4628      	mov	r0, r5
 800ee3e:	b003      	add	sp, #12
 800ee40:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ee42 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800ee42:	b570      	push	{r4, r5, r6, lr}
 800ee44:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800ee48:	4604      	mov	r4, r0
 800ee4a:	2b00      	cmp	r3, #0
 800ee4c:	d035      	beq.n	800eeba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800ee4e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800ee52:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800ee56:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800ee5a:	3001      	adds	r0, #1
 800ee5c:	1ad2      	subs	r2, r2, r3
 800ee5e:	b212      	sxth	r2, r2
 800ee60:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800ee64:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800ee68:	2100      	movs	r1, #0
 800ee6a:	b280      	uxth	r0, r0
 800ee6c:	47a8      	blx	r5
 800ee6e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800ee72:	6823      	ldr	r3, [r4, #0]
 800ee74:	4401      	add	r1, r0
 800ee76:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ee7a:	4620      	mov	r0, r4
 800ee7c:	4798      	blx	r3
 800ee7e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800ee82:	429a      	cmp	r2, r3
 800ee84:	db19      	blt.n	800eeba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800ee86:	2500      	movs	r5, #0
 800ee88:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800ee8c:	f005 fb60 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
 800ee90:	4621      	mov	r1, r4
 800ee92:	3004      	adds	r0, #4
 800ee94:	f005 fba9 	bl	80145ea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800ee98:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800ee9c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800eea0:	b158      	cbz	r0, 800eeba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800eea2:	6803      	ldr	r3, [r0, #0]
 800eea4:	68db      	ldr	r3, [r3, #12]
 800eea6:	4798      	blx	r3
 800eea8:	b138      	cbz	r0, 800eeba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800eeaa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800eeae:	6803      	ldr	r3, [r0, #0]
 800eeb0:	4621      	mov	r1, r4
 800eeb2:	689b      	ldr	r3, [r3, #8]
 800eeb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eeb8:	4718      	bx	r3
 800eeba:	bd70      	pop	{r4, r5, r6, pc}

0800eebc <_ZN8touchgfx8DrawableC1Ev>:
 800eebc:	4a0a      	ldr	r2, [pc, #40]	; (800eee8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800eebe:	6002      	str	r2, [r0, #0]
 800eec0:	2200      	movs	r2, #0
 800eec2:	8082      	strh	r2, [r0, #4]
 800eec4:	80c2      	strh	r2, [r0, #6]
 800eec6:	8102      	strh	r2, [r0, #8]
 800eec8:	8142      	strh	r2, [r0, #10]
 800eeca:	8182      	strh	r2, [r0, #12]
 800eecc:	81c2      	strh	r2, [r0, #14]
 800eece:	8202      	strh	r2, [r0, #16]
 800eed0:	8242      	strh	r2, [r0, #18]
 800eed2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800eed6:	61c2      	str	r2, [r0, #28]
 800eed8:	8402      	strh	r2, [r0, #32]
 800eeda:	8442      	strh	r2, [r0, #34]	; 0x22
 800eedc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800eee0:	2201      	movs	r2, #1
 800eee2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800eee6:	4770      	bx	lr
 800eee8:	0802c26c 	.word	0x0802c26c

0800eeec <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800eeec:	b570      	push	{r4, r5, r6, lr}
 800eeee:	6803      	ldr	r3, [r0, #0]
 800eef0:	4604      	mov	r4, r0
 800eef2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800eef4:	4615      	mov	r5, r2
 800eef6:	4798      	blx	r3
 800eef8:	6823      	ldr	r3, [r4, #0]
 800eefa:	4629      	mov	r1, r5
 800eefc:	4620      	mov	r0, r4
 800eefe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ef00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ef04:	4718      	bx	r3

0800ef06 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800ef06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef0a:	4604      	mov	r4, r0
 800ef0c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800ef10:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800ef14:	460e      	mov	r6, r1
 800ef16:	4615      	mov	r5, r2
 800ef18:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800ef1c:	4619      	mov	r1, r3
 800ef1e:	463a      	mov	r2, r7
 800ef20:	3058      	adds	r0, #88	; 0x58
 800ef22:	4698      	mov	r8, r3
 800ef24:	f7ff ffe2 	bl	800eeec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ef28:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800ef2c:	4446      	add	r6, r8
 800ef2e:	42b3      	cmp	r3, r6
 800ef30:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ef34:	bfb8      	it	lt
 800ef36:	8126      	strhlt	r6, [r4, #8]
 800ef38:	443d      	add	r5, r7
 800ef3a:	42ab      	cmp	r3, r5
 800ef3c:	bfb8      	it	lt
 800ef3e:	8165      	strhlt	r5, [r4, #10]
 800ef40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ef44 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800ef44:	b510      	push	{r4, lr}
 800ef46:	4604      	mov	r4, r0
 800ef48:	302c      	adds	r0, #44	; 0x2c
 800ef4a:	f002 fdf8 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ef4e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800ef52:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800ef56:	4620      	mov	r0, r4
 800ef58:	f7ff ffc8 	bl	800eeec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ef5c:	bd10      	pop	{r4, pc}
	...

0800ef60 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800ef60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ef62:	4604      	mov	r4, r0
 800ef64:	4626      	mov	r6, r4
 800ef66:	2500      	movs	r5, #0
 800ef68:	f7ff ffa8 	bl	800eebc <_ZN8touchgfx8DrawableC1Ev>
 800ef6c:	4b23      	ldr	r3, [pc, #140]	; (800effc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800ef6e:	62a5      	str	r5, [r4, #40]	; 0x28
 800ef70:	f846 3b2c 	str.w	r3, [r6], #44
 800ef74:	2226      	movs	r2, #38	; 0x26
 800ef76:	4629      	mov	r1, r5
 800ef78:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800ef7c:	4630      	mov	r0, r6
 800ef7e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ef82:	f019 f83a 	bl	8027ffa <memset>
 800ef86:	4630      	mov	r0, r6
 800ef88:	f7ff ff98 	bl	800eebc <_ZN8touchgfx8DrawableC1Ev>
 800ef8c:	a902      	add	r1, sp, #8
 800ef8e:	4b1c      	ldr	r3, [pc, #112]	; (800f000 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800ef90:	62e3      	str	r3, [r4, #44]	; 0x2c
 800ef92:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800ef96:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800ef9a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800ef9e:	4630      	mov	r0, r6
 800efa0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800efa4:	f002 fdcb 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800efa8:	4638      	mov	r0, r7
 800efaa:	f7ff ff87 	bl	800eebc <_ZN8touchgfx8DrawableC1Ev>
 800efae:	4b15      	ldr	r3, [pc, #84]	; (800f004 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800efb0:	65a3      	str	r3, [r4, #88]	; 0x58
 800efb2:	2364      	movs	r3, #100	; 0x64
 800efb4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800efb8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800efbc:	4b12      	ldr	r3, [pc, #72]	; (800f008 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800efbe:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800efc2:	4629      	mov	r1, r5
 800efc4:	4630      	mov	r0, r6
 800efc6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800efca:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800efce:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800efd2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800efd6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800efda:	f7f2 f8ad 	bl	8001138 <_ZN8touchgfx8Drawable4setXEs>
 800efde:	4629      	mov	r1, r5
 800efe0:	4630      	mov	r0, r6
 800efe2:	f7f2 f8ab 	bl	800113c <_ZN8touchgfx8Drawable4setYEs>
 800efe6:	4631      	mov	r1, r6
 800efe8:	4620      	mov	r0, r4
 800efea:	f000 f819 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800efee:	4620      	mov	r0, r4
 800eff0:	4639      	mov	r1, r7
 800eff2:	f000 f815 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800eff6:	4620      	mov	r0, r4
 800eff8:	b003      	add	sp, #12
 800effa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800effc:	0802bb00 	.word	0x0802bb00
 800f000:	0802c128 	.word	0x0802c128
 800f004:	0802bbd4 	.word	0x0802bbd4
 800f008:	0801621b 	.word	0x0801621b

0800f00c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f00c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f00e:	2000      	movs	r0, #0
 800f010:	b12b      	cbz	r3, 800f01e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f012:	b920      	cbnz	r0, 800f01e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f014:	1a5a      	subs	r2, r3, r1
 800f016:	4250      	negs	r0, r2
 800f018:	4150      	adcs	r0, r2
 800f01a:	699b      	ldr	r3, [r3, #24]
 800f01c:	e7f8      	b.n	800f010 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f01e:	4770      	bx	lr

0800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f020:	2300      	movs	r3, #0
 800f022:	6148      	str	r0, [r1, #20]
 800f024:	618b      	str	r3, [r1, #24]
 800f026:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f028:	b913      	cbnz	r3, 800f030 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f02a:	6281      	str	r1, [r0, #40]	; 0x28
 800f02c:	4770      	bx	lr
 800f02e:	4613      	mov	r3, r2
 800f030:	699a      	ldr	r2, [r3, #24]
 800f032:	2a00      	cmp	r2, #0
 800f034:	d1fb      	bne.n	800f02e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f036:	6199      	str	r1, [r3, #24]
 800f038:	4770      	bx	lr

0800f03a <_ZN8touchgfx9Container9removeAllEv>:
 800f03a:	2200      	movs	r2, #0
 800f03c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f03e:	b123      	cbz	r3, 800f04a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f040:	6999      	ldr	r1, [r3, #24]
 800f042:	6281      	str	r1, [r0, #40]	; 0x28
 800f044:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f048:	e7f8      	b.n	800f03c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f04a:	4770      	bx	lr

0800f04c <_ZN8touchgfx9Container6unlinkEv>:
 800f04c:	2300      	movs	r3, #0
 800f04e:	6283      	str	r3, [r0, #40]	; 0x28
 800f050:	4770      	bx	lr

0800f052 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f052:	2200      	movs	r2, #0
 800f054:	8002      	strh	r2, [r0, #0]
 800f056:	8042      	strh	r2, [r0, #2]
 800f058:	8082      	strh	r2, [r0, #4]
 800f05a:	80c2      	strh	r2, [r0, #6]
 800f05c:	4770      	bx	lr

0800f05e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f05e:	b570      	push	{r4, r5, r6, lr}
 800f060:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f062:	460d      	mov	r5, r1
 800f064:	4616      	mov	r6, r2
 800f066:	b13c      	cbz	r4, 800f078 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f068:	6823      	ldr	r3, [r4, #0]
 800f06a:	4620      	mov	r0, r4
 800f06c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f06e:	4632      	mov	r2, r6
 800f070:	4629      	mov	r1, r5
 800f072:	4798      	blx	r3
 800f074:	69a4      	ldr	r4, [r4, #24]
 800f076:	e7f6      	b.n	800f066 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f078:	bd70      	pop	{r4, r5, r6, pc}

0800f07a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f07a:	b538      	push	{r3, r4, r5, lr}
 800f07c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f07e:	460d      	mov	r5, r1
 800f080:	b134      	cbz	r4, 800f090 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f082:	682b      	ldr	r3, [r5, #0]
 800f084:	4621      	mov	r1, r4
 800f086:	689b      	ldr	r3, [r3, #8]
 800f088:	4628      	mov	r0, r5
 800f08a:	4798      	blx	r3
 800f08c:	69a4      	ldr	r4, [r4, #24]
 800f08e:	e7f7      	b.n	800f080 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f090:	bd38      	pop	{r3, r4, r5, pc}

0800f092 <_ZN8touchgfx9ContainerD1Ev>:
 800f092:	4770      	bx	lr

0800f094 <_ZN8touchgfx9ContainerD0Ev>:
 800f094:	b510      	push	{r4, lr}
 800f096:	212c      	movs	r1, #44	; 0x2c
 800f098:	4604      	mov	r4, r0
 800f09a:	f017 ffb8 	bl	802700e <_ZdlPvj>
 800f09e:	4620      	mov	r0, r4
 800f0a0:	bd10      	pop	{r4, pc}

0800f0a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f0a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f0a4:	b19b      	cbz	r3, 800f0ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f0a6:	428b      	cmp	r3, r1
 800f0a8:	d109      	bne.n	800f0be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f0aa:	699a      	ldr	r2, [r3, #24]
 800f0ac:	2100      	movs	r1, #0
 800f0ae:	6159      	str	r1, [r3, #20]
 800f0b0:	6282      	str	r2, [r0, #40]	; 0x28
 800f0b2:	b902      	cbnz	r2, 800f0b6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f0b4:	4770      	bx	lr
 800f0b6:	6199      	str	r1, [r3, #24]
 800f0b8:	4770      	bx	lr
 800f0ba:	4613      	mov	r3, r2
 800f0bc:	b13a      	cbz	r2, 800f0ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f0be:	699a      	ldr	r2, [r3, #24]
 800f0c0:	428a      	cmp	r2, r1
 800f0c2:	d1fa      	bne.n	800f0ba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f0c4:	698a      	ldr	r2, [r1, #24]
 800f0c6:	619a      	str	r2, [r3, #24]
 800f0c8:	2300      	movs	r3, #0
 800f0ca:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f0ce:	4770      	bx	lr

0800f0d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f0d0:	b410      	push	{r4}
 800f0d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f0d4:	4604      	mov	r4, r0
 800f0d6:	b92b      	cbnz	r3, 800f0e4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f0d8:	6803      	ldr	r3, [r0, #0]
 800f0da:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f0de:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f0e0:	4611      	mov	r1, r2
 800f0e2:	4718      	bx	r3
 800f0e4:	b941      	cbnz	r1, 800f0f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f0e6:	6193      	str	r3, [r2, #24]
 800f0e8:	6282      	str	r2, [r0, #40]	; 0x28
 800f0ea:	6154      	str	r4, [r2, #20]
 800f0ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f0f0:	4770      	bx	lr
 800f0f2:	4603      	mov	r3, r0
 800f0f4:	2800      	cmp	r0, #0
 800f0f6:	d0f9      	beq.n	800f0ec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f0f8:	4299      	cmp	r1, r3
 800f0fa:	6998      	ldr	r0, [r3, #24]
 800f0fc:	d1f9      	bne.n	800f0f2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f0fe:	6190      	str	r0, [r2, #24]
 800f100:	618a      	str	r2, [r1, #24]
 800f102:	e7f2      	b.n	800f0ea <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f104 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f108:	461f      	mov	r7, r3
 800f10a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f10e:	460d      	mov	r5, r1
 800f110:	4616      	mov	r6, r2
 800f112:	b103      	cbz	r3, 800f116 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f114:	6038      	str	r0, [r7, #0]
 800f116:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f118:	b314      	cbz	r4, 800f160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f11a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f11e:	b1eb      	cbz	r3, 800f15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f120:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f124:	428d      	cmp	r5, r1
 800f126:	db19      	blt.n	800f15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f128:	8923      	ldrh	r3, [r4, #8]
 800f12a:	b289      	uxth	r1, r1
 800f12c:	440b      	add	r3, r1
 800f12e:	b21b      	sxth	r3, r3
 800f130:	429d      	cmp	r5, r3
 800f132:	da13      	bge.n	800f15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f134:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f138:	4296      	cmp	r6, r2
 800f13a:	db0f      	blt.n	800f15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f13c:	8963      	ldrh	r3, [r4, #10]
 800f13e:	b292      	uxth	r2, r2
 800f140:	4413      	add	r3, r2
 800f142:	b21b      	sxth	r3, r3
 800f144:	429e      	cmp	r6, r3
 800f146:	da09      	bge.n	800f15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f148:	6823      	ldr	r3, [r4, #0]
 800f14a:	1ab2      	subs	r2, r6, r2
 800f14c:	1a69      	subs	r1, r5, r1
 800f14e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f152:	b212      	sxth	r2, r2
 800f154:	463b      	mov	r3, r7
 800f156:	b209      	sxth	r1, r1
 800f158:	4620      	mov	r0, r4
 800f15a:	47c0      	blx	r8
 800f15c:	69a4      	ldr	r4, [r4, #24]
 800f15e:	e7db      	b.n	800f118 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f164 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f168:	4c6e      	ldr	r4, [pc, #440]	; (800f324 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f16a:	b0a1      	sub	sp, #132	; 0x84
 800f16c:	6824      	ldr	r4, [r4, #0]
 800f16e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f170:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f174:	9303      	str	r3, [sp, #12]
 800f176:	2400      	movs	r4, #0
 800f178:	802c      	strh	r4, [r5, #0]
 800f17a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f17c:	802c      	strh	r4, [r5, #0]
 800f17e:	601c      	str	r4, [r3, #0]
 800f180:	4606      	mov	r6, r0
 800f182:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f186:	f7ff ffbd 	bl	800f104 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f18a:	f1b9 0f03 	cmp.w	r9, #3
 800f18e:	f340 80c2 	ble.w	800f316 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f192:	4631      	mov	r1, r6
 800f194:	a80c      	add	r0, sp, #48	; 0x30
 800f196:	f006 fb5f 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f19a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f19e:	9306      	str	r3, [sp, #24]
 800f1a0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f1a4:	9307      	str	r3, [sp, #28]
 800f1a6:	9b03      	ldr	r3, [sp, #12]
 800f1a8:	f8d3 a000 	ldr.w	sl, [r3]
 800f1ac:	f1ba 0f00 	cmp.w	sl, #0
 800f1b0:	f000 80b4 	beq.w	800f31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f1b4:	4651      	mov	r1, sl
 800f1b6:	a810      	add	r0, sp, #64	; 0x40
 800f1b8:	f006 fb4e 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f1bc:	9b01      	ldr	r3, [sp, #4]
 800f1be:	9a06      	ldr	r2, [sp, #24]
 800f1c0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f1c4:	189d      	adds	r5, r3, r2
 800f1c6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f1ca:	9a07      	ldr	r2, [sp, #28]
 800f1cc:	2002      	movs	r0, #2
 800f1ce:	fb91 f1f0 	sdiv	r1, r1, r0
 800f1d2:	4419      	add	r1, r3
 800f1d4:	1a6d      	subs	r5, r5, r1
 800f1d6:	9b02      	ldr	r3, [sp, #8]
 800f1d8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f1dc:	4413      	add	r3, r2
 800f1de:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f1e2:	fb92 f2f0 	sdiv	r2, r2, r0
 800f1e6:	440a      	add	r2, r1
 800f1e8:	1a9b      	subs	r3, r3, r2
 800f1ea:	435b      	muls	r3, r3
 800f1ec:	fb05 3505 	mla	r5, r5, r5, r3
 800f1f0:	4f4d      	ldr	r7, [pc, #308]	; (800f328 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f1f2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f1f4:	ac10      	add	r4, sp, #64	; 0x40
 800f1f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f1f8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f1fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f1fc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f1fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f200:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f204:	f1b9 0f0c 	cmp.w	r9, #12
 800f208:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f20c:	f04f 0303 	mov.w	r3, #3
 800f210:	bfc8      	it	gt
 800f212:	4698      	movgt	r8, r3
 800f214:	f8cd 9000 	str.w	r9, [sp]
 800f218:	f04f 0400 	mov.w	r4, #0
 800f21c:	bfdc      	itt	le
 800f21e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f222:	fb92 f8f3 	sdivle	r8, r2, r3
 800f226:	1c63      	adds	r3, r4, #1
 800f228:	aa10      	add	r2, sp, #64	; 0x40
 800f22a:	f004 0401 	and.w	r4, r4, #1
 800f22e:	9308      	str	r3, [sp, #32]
 800f230:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f234:	9b00      	ldr	r3, [sp, #0]
 800f236:	fb93 f3f8 	sdiv	r3, r3, r8
 800f23a:	b29b      	uxth	r3, r3
 800f23c:	3404      	adds	r4, #4
 800f23e:	f04f 0b00 	mov.w	fp, #0
 800f242:	9304      	str	r3, [sp, #16]
 800f244:	9a04      	ldr	r2, [sp, #16]
 800f246:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f24a:	fb13 f302 	smulbb	r3, r3, r2
 800f24e:	9a01      	ldr	r2, [sp, #4]
 800f250:	b29b      	uxth	r3, r3
 800f252:	1899      	adds	r1, r3, r2
 800f254:	9305      	str	r3, [sp, #20]
 800f256:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f25a:	b209      	sxth	r1, r1
 800f25c:	4299      	cmp	r1, r3
 800f25e:	db4d      	blt.n	800f2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f260:	8932      	ldrh	r2, [r6, #8]
 800f262:	4413      	add	r3, r2
 800f264:	b21b      	sxth	r3, r3
 800f266:	4299      	cmp	r1, r3
 800f268:	da48      	bge.n	800f2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f26a:	9b04      	ldr	r3, [sp, #16]
 800f26c:	6827      	ldr	r7, [r4, #0]
 800f26e:	fb17 f703 	smulbb	r7, r7, r3
 800f272:	9b02      	ldr	r3, [sp, #8]
 800f274:	b2bf      	uxth	r7, r7
 800f276:	18fa      	adds	r2, r7, r3
 800f278:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f27c:	b212      	sxth	r2, r2
 800f27e:	429a      	cmp	r2, r3
 800f280:	db3c      	blt.n	800f2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f282:	8970      	ldrh	r0, [r6, #10]
 800f284:	4403      	add	r3, r0
 800f286:	b21b      	sxth	r3, r3
 800f288:	429a      	cmp	r2, r3
 800f28a:	da37      	bge.n	800f2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f28c:	2300      	movs	r3, #0
 800f28e:	930b      	str	r3, [sp, #44]	; 0x2c
 800f290:	4630      	mov	r0, r6
 800f292:	ab0b      	add	r3, sp, #44	; 0x2c
 800f294:	f7ff ff36 	bl	800f104 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f298:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f29a:	b37a      	cbz	r2, 800f2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f29c:	4552      	cmp	r2, sl
 800f29e:	d02d      	beq.n	800f2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f2a0:	4611      	mov	r1, r2
 800f2a2:	a80e      	add	r0, sp, #56	; 0x38
 800f2a4:	9209      	str	r2, [sp, #36]	; 0x24
 800f2a6:	f006 fad7 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f2aa:	9a06      	ldr	r2, [sp, #24]
 800f2ac:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f2b0:	9b01      	ldr	r3, [sp, #4]
 800f2b2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f2b6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f2ba:	4413      	add	r3, r2
 800f2bc:	f04f 0e02 	mov.w	lr, #2
 800f2c0:	fb91 f1fe 	sdiv	r1, r1, lr
 800f2c4:	4401      	add	r1, r0
 800f2c6:	1a58      	subs	r0, r3, r1
 800f2c8:	9a07      	ldr	r2, [sp, #28]
 800f2ca:	9b02      	ldr	r3, [sp, #8]
 800f2cc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800f2d0:	fb9c fcfe 	sdiv	ip, ip, lr
 800f2d4:	4413      	add	r3, r2
 800f2d6:	448c      	add	ip, r1
 800f2d8:	eba3 030c 	sub.w	r3, r3, ip
 800f2dc:	435b      	muls	r3, r3
 800f2de:	fb00 3300 	mla	r3, r0, r0, r3
 800f2e2:	42ab      	cmp	r3, r5
 800f2e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f2e6:	d208      	bcs.n	800f2fa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f2e8:	9803      	ldr	r0, [sp, #12]
 800f2ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f2ec:	6001      	str	r1, [r0, #0]
 800f2ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f2f0:	9805      	ldr	r0, [sp, #20]
 800f2f2:	8008      	strh	r0, [r1, #0]
 800f2f4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f2f6:	461d      	mov	r5, r3
 800f2f8:	800f      	strh	r7, [r1, #0]
 800f2fa:	4692      	mov	sl, r2
 800f2fc:	f10b 0b01 	add.w	fp, fp, #1
 800f300:	f1bb 0f04 	cmp.w	fp, #4
 800f304:	f104 0408 	add.w	r4, r4, #8
 800f308:	d19c      	bne.n	800f244 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f30a:	9b00      	ldr	r3, [sp, #0]
 800f30c:	9c08      	ldr	r4, [sp, #32]
 800f30e:	444b      	add	r3, r9
 800f310:	4544      	cmp	r4, r8
 800f312:	9300      	str	r3, [sp, #0]
 800f314:	d187      	bne.n	800f226 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f316:	b021      	add	sp, #132	; 0x84
 800f318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f31c:	f04f 35ff 	mov.w	r5, #4294967295
 800f320:	e766      	b.n	800f1f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f322:	bf00      	nop
 800f324:	200137bc 	.word	0x200137bc
 800f328:	08028d08 	.word	0x08028d08

0800f32c <_ZN8touchgfx4RectaNERKS0_>:
 800f32c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f330:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f334:	888c      	ldrh	r4, [r1, #4]
 800f336:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f33a:	443c      	add	r4, r7
 800f33c:	b2a4      	uxth	r4, r4
 800f33e:	fa0f f884 	sxth.w	r8, r4
 800f342:	45c1      	cmp	r9, r8
 800f344:	da2f      	bge.n	800f3a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f346:	8882      	ldrh	r2, [r0, #4]
 800f348:	444a      	add	r2, r9
 800f34a:	b292      	uxth	r2, r2
 800f34c:	fa0f fe82 	sxth.w	lr, r2
 800f350:	4577      	cmp	r7, lr
 800f352:	da28      	bge.n	800f3a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f354:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f358:	88cb      	ldrh	r3, [r1, #6]
 800f35a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f35e:	442b      	add	r3, r5
 800f360:	b21b      	sxth	r3, r3
 800f362:	429e      	cmp	r6, r3
 800f364:	da1f      	bge.n	800f3a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f366:	88c3      	ldrh	r3, [r0, #6]
 800f368:	4433      	add	r3, r6
 800f36a:	b29b      	uxth	r3, r3
 800f36c:	fa0f fc83 	sxth.w	ip, r3
 800f370:	4565      	cmp	r5, ip
 800f372:	da18      	bge.n	800f3a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f374:	454f      	cmp	r7, r9
 800f376:	bfb8      	it	lt
 800f378:	464f      	movlt	r7, r9
 800f37a:	42b5      	cmp	r5, r6
 800f37c:	bfb8      	it	lt
 800f37e:	4635      	movlt	r5, r6
 800f380:	45f0      	cmp	r8, lr
 800f382:	bfd8      	it	le
 800f384:	4622      	movle	r2, r4
 800f386:	1bd2      	subs	r2, r2, r7
 800f388:	8082      	strh	r2, [r0, #4]
 800f38a:	884a      	ldrh	r2, [r1, #2]
 800f38c:	88c9      	ldrh	r1, [r1, #6]
 800f38e:	8007      	strh	r7, [r0, #0]
 800f390:	440a      	add	r2, r1
 800f392:	b292      	uxth	r2, r2
 800f394:	b211      	sxth	r1, r2
 800f396:	458c      	cmp	ip, r1
 800f398:	bfa8      	it	ge
 800f39a:	4613      	movge	r3, r2
 800f39c:	1b5b      	subs	r3, r3, r5
 800f39e:	80c3      	strh	r3, [r0, #6]
 800f3a0:	8045      	strh	r5, [r0, #2]
 800f3a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f3a6:	2300      	movs	r3, #0
 800f3a8:	8003      	strh	r3, [r0, #0]
 800f3aa:	8043      	strh	r3, [r0, #2]
 800f3ac:	8083      	strh	r3, [r0, #4]
 800f3ae:	80c3      	strh	r3, [r0, #6]
 800f3b0:	e7f7      	b.n	800f3a2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800f3b2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f3b6:	2b00      	cmp	r3, #0
 800f3b8:	dd06      	ble.n	800f3c8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800f3ba:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f3be:	2800      	cmp	r0, #0
 800f3c0:	bfcc      	ite	gt
 800f3c2:	2000      	movgt	r0, #0
 800f3c4:	2001      	movle	r0, #1
 800f3c6:	4770      	bx	lr
 800f3c8:	2001      	movs	r0, #1
 800f3ca:	4770      	bx	lr

0800f3cc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800f3cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f3d0:	2300      	movs	r3, #0
 800f3d2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f3d4:	8003      	strh	r3, [r0, #0]
 800f3d6:	4604      	mov	r4, r0
 800f3d8:	8043      	strh	r3, [r0, #2]
 800f3da:	8083      	strh	r3, [r0, #4]
 800f3dc:	80c3      	strh	r3, [r0, #6]
 800f3de:	2d00      	cmp	r5, #0
 800f3e0:	d040      	beq.n	800f464 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800f3e2:	1d28      	adds	r0, r5, #4
 800f3e4:	f7ff ffe5 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f3e8:	b988      	cbnz	r0, 800f40e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f3ea:	4620      	mov	r0, r4
 800f3ec:	f7ff ffe1 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f3f0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800f3f4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f3f8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800f3fc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800f400:	b138      	cbz	r0, 800f412 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800f402:	8022      	strh	r2, [r4, #0]
 800f404:	8063      	strh	r3, [r4, #2]
 800f406:	f8a4 e004 	strh.w	lr, [r4, #4]
 800f40a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f40e:	69ad      	ldr	r5, [r5, #24]
 800f410:	e7e5      	b.n	800f3de <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800f412:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f416:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f41a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800f41e:	4290      	cmp	r0, r2
 800f420:	4607      	mov	r7, r0
 800f422:	bfa8      	it	ge
 800f424:	4617      	movge	r7, r2
 800f426:	4472      	add	r2, lr
 800f428:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800f42c:	8027      	strh	r7, [r4, #0]
 800f42e:	4299      	cmp	r1, r3
 800f430:	460e      	mov	r6, r1
 800f432:	4440      	add	r0, r8
 800f434:	bfa8      	it	ge
 800f436:	461e      	movge	r6, r3
 800f438:	4471      	add	r1, lr
 800f43a:	4463      	add	r3, ip
 800f43c:	b200      	sxth	r0, r0
 800f43e:	b212      	sxth	r2, r2
 800f440:	b209      	sxth	r1, r1
 800f442:	b21b      	sxth	r3, r3
 800f444:	4290      	cmp	r0, r2
 800f446:	bfac      	ite	ge
 800f448:	ebc7 0200 	rsbge	r2, r7, r0
 800f44c:	ebc7 0202 	rsblt	r2, r7, r2
 800f450:	4299      	cmp	r1, r3
 800f452:	bfac      	ite	ge
 800f454:	ebc6 0301 	rsbge	r3, r6, r1
 800f458:	ebc6 0303 	rsblt	r3, r6, r3
 800f45c:	8066      	strh	r6, [r4, #2]
 800f45e:	80a2      	strh	r2, [r4, #4]
 800f460:	80e3      	strh	r3, [r4, #6]
 800f462:	e7d4      	b.n	800f40e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f464:	4620      	mov	r0, r4
 800f466:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f46a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800f46a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f46e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f472:	b383      	cbz	r3, 800f4d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f474:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f476:	b374      	cbz	r4, 800f4d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f478:	f9b1 5000 	ldrsh.w	r5, [r1]
 800f47c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800f480:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800f484:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800f488:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f48c:	b303      	cbz	r3, 800f4d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f48e:	4668      	mov	r0, sp
 800f490:	1d21      	adds	r1, r4, #4
 800f492:	f8ad 5000 	strh.w	r5, [sp]
 800f496:	f8ad 6002 	strh.w	r6, [sp, #2]
 800f49a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f49e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800f4a2:	f7ff ff43 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 800f4a6:	4668      	mov	r0, sp
 800f4a8:	f7ff ff83 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f4ac:	b980      	cbnz	r0, 800f4d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f4ae:	f8bd 3000 	ldrh.w	r3, [sp]
 800f4b2:	88a2      	ldrh	r2, [r4, #4]
 800f4b4:	1a9b      	subs	r3, r3, r2
 800f4b6:	f8ad 3000 	strh.w	r3, [sp]
 800f4ba:	88e2      	ldrh	r2, [r4, #6]
 800f4bc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f4c0:	1a9b      	subs	r3, r3, r2
 800f4c2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f4c6:	6823      	ldr	r3, [r4, #0]
 800f4c8:	4669      	mov	r1, sp
 800f4ca:	689b      	ldr	r3, [r3, #8]
 800f4cc:	4620      	mov	r0, r4
 800f4ce:	4798      	blx	r3
 800f4d0:	69a4      	ldr	r4, [r4, #24]
 800f4d2:	2c00      	cmp	r4, #0
 800f4d4:	d1d8      	bne.n	800f488 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800f4d6:	b002      	add	sp, #8
 800f4d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f4dc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800f4dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f4de:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f4e2:	460d      	mov	r5, r1
 800f4e4:	4616      	mov	r6, r2
 800f4e6:	b323      	cbz	r3, 800f532 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f4e8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f4ea:	b314      	cbz	r4, 800f532 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f4ec:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f4f0:	b1eb      	cbz	r3, 800f52e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f4f2:	6828      	ldr	r0, [r5, #0]
 800f4f4:	6869      	ldr	r1, [r5, #4]
 800f4f6:	466b      	mov	r3, sp
 800f4f8:	c303      	stmia	r3!, {r0, r1}
 800f4fa:	4668      	mov	r0, sp
 800f4fc:	1d21      	adds	r1, r4, #4
 800f4fe:	f7ff ff15 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 800f502:	4668      	mov	r0, sp
 800f504:	f7ff ff55 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f508:	b988      	cbnz	r0, 800f52e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f50a:	f8bd 3000 	ldrh.w	r3, [sp]
 800f50e:	88a2      	ldrh	r2, [r4, #4]
 800f510:	1a9b      	subs	r3, r3, r2
 800f512:	f8ad 3000 	strh.w	r3, [sp]
 800f516:	88e2      	ldrh	r2, [r4, #6]
 800f518:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f51c:	1a9b      	subs	r3, r3, r2
 800f51e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f522:	6823      	ldr	r3, [r4, #0]
 800f524:	4632      	mov	r2, r6
 800f526:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800f528:	4669      	mov	r1, sp
 800f52a:	4620      	mov	r0, r4
 800f52c:	4798      	blx	r3
 800f52e:	69a4      	ldr	r4, [r4, #24]
 800f530:	e7db      	b.n	800f4ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800f532:	b002      	add	sp, #8
 800f534:	bd70      	pop	{r4, r5, r6, pc}

0800f536 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800f536:	b513      	push	{r0, r1, r4, lr}
 800f538:	6803      	ldr	r3, [r0, #0]
 800f53a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800f53e:	2300      	movs	r3, #0
 800f540:	e9cd 3300 	strd	r3, r3, [sp]
 800f544:	466b      	mov	r3, sp
 800f546:	47a0      	blx	r4
 800f548:	b002      	add	sp, #8
 800f54a:	bd10      	pop	{r4, pc}

0800f54c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800f54c:	2301      	movs	r3, #1
 800f54e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800f552:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800f556:	4770      	bx	lr

0800f558 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800f558:	2301      	movs	r3, #1
 800f55a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800f55e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800f562:	4770      	bx	lr

0800f564 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800f564:	6843      	ldr	r3, [r0, #4]
 800f566:	2201      	movs	r2, #1
 800f568:	725a      	strb	r2, [r3, #9]
 800f56a:	6840      	ldr	r0, [r0, #4]
 800f56c:	6803      	ldr	r3, [r0, #0]
 800f56e:	691b      	ldr	r3, [r3, #16]
 800f570:	4718      	bx	r3

0800f572 <_ZN8touchgfx3HAL8flushDMAEv>:
 800f572:	6840      	ldr	r0, [r0, #4]
 800f574:	6803      	ldr	r3, [r0, #0]
 800f576:	689b      	ldr	r3, [r3, #8]
 800f578:	4718      	bx	r3

0800f57a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800f57a:	b530      	push	{r4, r5, lr}
 800f57c:	b08b      	sub	sp, #44	; 0x2c
 800f57e:	6804      	ldr	r4, [r0, #0]
 800f580:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800f584:	9509      	str	r5, [sp, #36]	; 0x24
 800f586:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800f58a:	9508      	str	r5, [sp, #32]
 800f58c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800f590:	9507      	str	r5, [sp, #28]
 800f592:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800f596:	9506      	str	r5, [sp, #24]
 800f598:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800f59c:	9505      	str	r5, [sp, #20]
 800f59e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800f5a2:	9504      	str	r5, [sp, #16]
 800f5a4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800f5a8:	9503      	str	r5, [sp, #12]
 800f5aa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800f5ae:	9502      	str	r5, [sp, #8]
 800f5b0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800f5b4:	e9cd 3500 	strd	r3, r5, [sp]
 800f5b8:	4613      	mov	r3, r2
 800f5ba:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800f5bc:	2200      	movs	r2, #0
 800f5be:	47a0      	blx	r4
 800f5c0:	b00b      	add	sp, #44	; 0x2c
 800f5c2:	bd30      	pop	{r4, r5, pc}

0800f5c4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800f5c4:	4b04      	ldr	r3, [pc, #16]	; (800f5d8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800f5c6:	781b      	ldrb	r3, [r3, #0]
 800f5c8:	b123      	cbz	r3, 800f5d4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800f5ca:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800f5ce:	f080 0001 	eor.w	r0, r0, #1
 800f5d2:	4770      	bx	lr
 800f5d4:	2001      	movs	r0, #1
 800f5d6:	4770      	bx	lr
 800f5d8:	200137ba 	.word	0x200137ba

0800f5dc <_ZN8touchgfx3HAL8endFrameEv>:
 800f5dc:	b510      	push	{r4, lr}
 800f5de:	4604      	mov	r4, r0
 800f5e0:	6840      	ldr	r0, [r0, #4]
 800f5e2:	6803      	ldr	r3, [r0, #0]
 800f5e4:	689b      	ldr	r3, [r3, #8]
 800f5e6:	4798      	blx	r3
 800f5e8:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800f5ec:	b113      	cbz	r3, 800f5f4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800f5ee:	2301      	movs	r3, #1
 800f5f0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800f5f4:	bd10      	pop	{r4, pc}

0800f5f6 <_ZN8touchgfx3HAL10initializeEv>:
 800f5f6:	b510      	push	{r4, lr}
 800f5f8:	4604      	mov	r4, r0
 800f5fa:	f7f1 f9f7 	bl	80009ec <_ZN8touchgfx10OSWrappers10initializeEv>
 800f5fe:	f7f1 f903 	bl	8000808 <_ZN8touchgfx4GPIO4initEv>
 800f602:	6860      	ldr	r0, [r4, #4]
 800f604:	6803      	ldr	r3, [r0, #0]
 800f606:	68db      	ldr	r3, [r3, #12]
 800f608:	4798      	blx	r3
 800f60a:	68e0      	ldr	r0, [r4, #12]
 800f60c:	6803      	ldr	r3, [r0, #0]
 800f60e:	689b      	ldr	r3, [r3, #8]
 800f610:	4798      	blx	r3
 800f612:	6823      	ldr	r3, [r4, #0]
 800f614:	4620      	mov	r0, r4
 800f616:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800f618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f61c:	4718      	bx	r3
	...

0800f620 <_ZN8touchgfx3HAL4tickEv>:
 800f620:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f622:	6803      	ldr	r3, [r0, #0]
 800f624:	4d5b      	ldr	r5, [pc, #364]	; (800f794 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800f626:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f62a:	4604      	mov	r4, r0
 800f62c:	4798      	blx	r3
 800f62e:	2800      	cmp	r0, #0
 800f630:	f000 8095 	beq.w	800f75e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800f634:	2001      	movs	r0, #1
 800f636:	f7f1 f899 	bl	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800f63a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800f63e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800f642:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800f646:	2600      	movs	r6, #0
 800f648:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800f64c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800f650:	b133      	cbz	r3, 800f660 <_ZN8touchgfx3HAL4tickEv+0x40>
 800f652:	6823      	ldr	r3, [r4, #0]
 800f654:	4620      	mov	r0, r4
 800f656:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800f65a:	4798      	blx	r3
 800f65c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800f660:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800f664:	6862      	ldr	r2, [r4, #4]
 800f666:	f083 0301 	eor.w	r3, r3, #1
 800f66a:	7253      	strb	r3, [r2, #9]
 800f66c:	2601      	movs	r6, #1
 800f66e:	702e      	strb	r6, [r5, #0]
 800f670:	f004 ff6e 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
 800f674:	6803      	ldr	r3, [r0, #0]
 800f676:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f678:	4798      	blx	r3
 800f67a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800f67e:	b90b      	cbnz	r3, 800f684 <_ZN8touchgfx3HAL4tickEv+0x64>
 800f680:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800f684:	f004 ff64 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
 800f688:	6803      	ldr	r3, [r0, #0]
 800f68a:	695b      	ldr	r3, [r3, #20]
 800f68c:	4798      	blx	r3
 800f68e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800f690:	6803      	ldr	r3, [r0, #0]
 800f692:	691b      	ldr	r3, [r3, #16]
 800f694:	4798      	blx	r3
 800f696:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800f69a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800f69e:	3b01      	subs	r3, #1
 800f6a0:	b2db      	uxtb	r3, r3
 800f6a2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800f6a6:	b10a      	cbz	r2, 800f6ac <_ZN8touchgfx3HAL4tickEv+0x8c>
 800f6a8:	2b00      	cmp	r3, #0
 800f6aa:	d1eb      	bne.n	800f684 <_ZN8touchgfx3HAL4tickEv+0x64>
 800f6ac:	4a3a      	ldr	r2, [pc, #232]	; (800f798 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800f6ae:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800f6b2:	7813      	ldrb	r3, [r2, #0]
 800f6b4:	3301      	adds	r3, #1
 800f6b6:	b25b      	sxtb	r3, r3
 800f6b8:	4299      	cmp	r1, r3
 800f6ba:	7013      	strb	r3, [r2, #0]
 800f6bc:	dc10      	bgt.n	800f6e0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800f6be:	68e0      	ldr	r0, [r4, #12]
 800f6c0:	2300      	movs	r3, #0
 800f6c2:	7013      	strb	r3, [r2, #0]
 800f6c4:	6803      	ldr	r3, [r0, #0]
 800f6c6:	aa03      	add	r2, sp, #12
 800f6c8:	68db      	ldr	r3, [r3, #12]
 800f6ca:	a902      	add	r1, sp, #8
 800f6cc:	4798      	blx	r3
 800f6ce:	6823      	ldr	r3, [r4, #0]
 800f6d0:	2800      	cmp	r0, #0
 800f6d2:	d050      	beq.n	800f776 <_ZN8touchgfx3HAL4tickEv+0x156>
 800f6d4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f6d8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800f6dc:	4620      	mov	r0, r4
 800f6de:	4798      	blx	r3
 800f6e0:	6960      	ldr	r0, [r4, #20]
 800f6e2:	2300      	movs	r3, #0
 800f6e4:	f88d 3007 	strb.w	r3, [sp, #7]
 800f6e8:	b158      	cbz	r0, 800f702 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800f6ea:	6803      	ldr	r3, [r0, #0]
 800f6ec:	f10d 0107 	add.w	r1, sp, #7
 800f6f0:	68db      	ldr	r3, [r3, #12]
 800f6f2:	4798      	blx	r3
 800f6f4:	b128      	cbz	r0, 800f702 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800f6f6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800f6f8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800f6fc:	6803      	ldr	r3, [r0, #0]
 800f6fe:	68db      	ldr	r3, [r3, #12]
 800f700:	4798      	blx	r3
 800f702:	f104 001c 	add.w	r0, r4, #28
 800f706:	f015 fcc5 	bl	8025094 <_ZN8touchgfx8Gestures4tickEv>
 800f70a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800f70e:	b30b      	cbz	r3, 800f754 <_ZN8touchgfx3HAL4tickEv+0x134>
 800f710:	6920      	ldr	r0, [r4, #16]
 800f712:	6803      	ldr	r3, [r0, #0]
 800f714:	691b      	ldr	r3, [r3, #16]
 800f716:	4798      	blx	r3
 800f718:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800f71a:	4606      	mov	r6, r0
 800f71c:	b903      	cbnz	r3, 800f720 <_ZN8touchgfx3HAL4tickEv+0x100>
 800f71e:	6760      	str	r0, [r4, #116]	; 0x74
 800f720:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800f722:	4a1e      	ldr	r2, [pc, #120]	; (800f79c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800f724:	1af3      	subs	r3, r6, r3
 800f726:	4293      	cmp	r3, r2
 800f728:	d914      	bls.n	800f754 <_ZN8touchgfx3HAL4tickEv+0x134>
 800f72a:	6920      	ldr	r0, [r4, #16]
 800f72c:	6803      	ldr	r3, [r0, #0]
 800f72e:	699b      	ldr	r3, [r3, #24]
 800f730:	4798      	blx	r3
 800f732:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800f734:	2264      	movs	r2, #100	; 0x64
 800f736:	1af3      	subs	r3, r6, r3
 800f738:	fbb3 f3f2 	udiv	r3, r3, r2
 800f73c:	fbb0 f0f3 	udiv	r0, r0, r3
 800f740:	2800      	cmp	r0, #0
 800f742:	dc1d      	bgt.n	800f780 <_ZN8touchgfx3HAL4tickEv+0x160>
 800f744:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800f748:	6920      	ldr	r0, [r4, #16]
 800f74a:	6803      	ldr	r3, [r0, #0]
 800f74c:	2100      	movs	r1, #0
 800f74e:	69db      	ldr	r3, [r3, #28]
 800f750:	4798      	blx	r3
 800f752:	6766      	str	r6, [r4, #116]	; 0x74
 800f754:	f004 fefc 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
 800f758:	6803      	ldr	r3, [r0, #0]
 800f75a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f75c:	4798      	blx	r3
 800f75e:	6823      	ldr	r3, [r4, #0]
 800f760:	4620      	mov	r0, r4
 800f762:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800f766:	4798      	blx	r3
 800f768:	2001      	movs	r0, #1
 800f76a:	f7f1 f817 	bl	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800f76e:	2300      	movs	r3, #0
 800f770:	702b      	strb	r3, [r5, #0]
 800f772:	b004      	add	sp, #16
 800f774:	bd70      	pop	{r4, r5, r6, pc}
 800f776:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800f77a:	4620      	mov	r0, r4
 800f77c:	4798      	blx	r3
 800f77e:	e7af      	b.n	800f6e0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800f780:	2863      	cmp	r0, #99	; 0x63
 800f782:	bfcb      	itete	gt
 800f784:	2300      	movgt	r3, #0
 800f786:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800f78a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800f78e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800f792:	e7d9      	b.n	800f748 <_ZN8touchgfx3HAL4tickEv+0x128>
 800f794:	200137c0 	.word	0x200137c0
 800f798:	200137c1 	.word	0x200137c1
 800f79c:	05f5e100 	.word	0x05f5e100

0800f7a0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800f7a0:	b510      	push	{r4, lr}
 800f7a2:	4604      	mov	r4, r0
 800f7a4:	f7f1 f952 	bl	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800f7a8:	6863      	ldr	r3, [r4, #4]
 800f7aa:	2200      	movs	r2, #0
 800f7ac:	729a      	strb	r2, [r3, #10]
 800f7ae:	bd10      	pop	{r4, pc}

0800f7b0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800f7b0:	65c1      	str	r1, [r0, #92]	; 0x5c
 800f7b2:	301c      	adds	r0, #28
 800f7b4:	f015 bc6c 	b.w	8025090 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800f7b8 <_ZN8touchgfx3HAL5touchEll>:
 800f7b8:	b530      	push	{r4, r5, lr}
 800f7ba:	b087      	sub	sp, #28
 800f7bc:	4604      	mov	r4, r0
 800f7be:	a804      	add	r0, sp, #16
 800f7c0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800f7c4:	f004 fc90 	bl	80140e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800f7c8:	9b04      	ldr	r3, [sp, #16]
 800f7ca:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f7ce:	a906      	add	r1, sp, #24
 800f7d0:	9b05      	ldr	r3, [sp, #20]
 800f7d2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800f7d6:	a803      	add	r0, sp, #12
 800f7d8:	f004 fcd8 	bl	801418c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800f7dc:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800f7e0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800f7e4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800f7e8:	f104 001c 	add.w	r0, r4, #28
 800f7ec:	b189      	cbz	r1, 800f812 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800f7ee:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800f7f2:	9300      	str	r3, [sp, #0]
 800f7f4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800f7f8:	4613      	mov	r3, r2
 800f7fa:	462a      	mov	r2, r5
 800f7fc:	f015 fc58 	bl	80250b0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800f800:	b128      	cbz	r0, 800f80e <_ZN8touchgfx3HAL5touchEll+0x56>
 800f802:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800f806:	6623      	str	r3, [r4, #96]	; 0x60
 800f808:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f80c:	6663      	str	r3, [r4, #100]	; 0x64
 800f80e:	b007      	add	sp, #28
 800f810:	bd30      	pop	{r4, r5, pc}
 800f812:	f015 fc8d 	bl	8025130 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f816:	2301      	movs	r3, #1
 800f818:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800f81c:	e7f1      	b.n	800f802 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800f81e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800f81e:	b510      	push	{r4, lr}
 800f820:	2b00      	cmp	r3, #0
 800f822:	d046      	beq.n	800f8b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f824:	ea81 0002 	eor.w	r0, r1, r2
 800f828:	07c4      	lsls	r4, r0, #31
 800f82a:	d508      	bpl.n	800f83e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800f82c:	440b      	add	r3, r1
 800f82e:	3a01      	subs	r2, #1
 800f830:	428b      	cmp	r3, r1
 800f832:	d93e      	bls.n	800f8b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f834:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f838:	f801 0b01 	strb.w	r0, [r1], #1
 800f83c:	e7f8      	b.n	800f830 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800f83e:	07d0      	lsls	r0, r2, #31
 800f840:	bf42      	ittt	mi
 800f842:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800f846:	f801 0b01 	strbmi.w	r0, [r1], #1
 800f84a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800f84e:	2b01      	cmp	r3, #1
 800f850:	d911      	bls.n	800f876 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f852:	ea81 0402 	eor.w	r4, r1, r2
 800f856:	07a4      	lsls	r4, r4, #30
 800f858:	4610      	mov	r0, r2
 800f85a:	d022      	beq.n	800f8a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800f85c:	f023 0401 	bic.w	r4, r3, #1
 800f860:	440c      	add	r4, r1
 800f862:	428c      	cmp	r4, r1
 800f864:	4602      	mov	r2, r0
 800f866:	d904      	bls.n	800f872 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800f868:	8812      	ldrh	r2, [r2, #0]
 800f86a:	f821 2b02 	strh.w	r2, [r1], #2
 800f86e:	3002      	adds	r0, #2
 800f870:	e7f7      	b.n	800f862 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800f872:	f003 0301 	and.w	r3, r3, #1
 800f876:	f023 0003 	bic.w	r0, r3, #3
 800f87a:	4408      	add	r0, r1
 800f87c:	4288      	cmp	r0, r1
 800f87e:	4614      	mov	r4, r2
 800f880:	d904      	bls.n	800f88c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800f882:	6824      	ldr	r4, [r4, #0]
 800f884:	f841 4b04 	str.w	r4, [r1], #4
 800f888:	3204      	adds	r2, #4
 800f88a:	e7f7      	b.n	800f87c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800f88c:	f003 0303 	and.w	r3, r3, #3
 800f890:	440b      	add	r3, r1
 800f892:	3a01      	subs	r2, #1
 800f894:	428b      	cmp	r3, r1
 800f896:	d90c      	bls.n	800f8b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f898:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f89c:	f801 0b01 	strb.w	r0, [r1], #1
 800f8a0:	e7f8      	b.n	800f894 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800f8a2:	0790      	lsls	r0, r2, #30
 800f8a4:	d0e7      	beq.n	800f876 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f8a6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800f8aa:	f821 0b02 	strh.w	r0, [r1], #2
 800f8ae:	3b02      	subs	r3, #2
 800f8b0:	e7e1      	b.n	800f876 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f8b2:	2001      	movs	r0, #1
 800f8b4:	bd10      	pop	{r4, pc}

0800f8b6 <_ZN8touchgfx3HAL7noTouchEv>:
 800f8b6:	b510      	push	{r4, lr}
 800f8b8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800f8bc:	4604      	mov	r4, r0
 800f8be:	b153      	cbz	r3, 800f8d6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800f8c0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800f8c4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800f8c8:	2101      	movs	r1, #1
 800f8ca:	301c      	adds	r0, #28
 800f8cc:	f015 fc30 	bl	8025130 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f8d0:	2300      	movs	r3, #0
 800f8d2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800f8d6:	bd10      	pop	{r4, pc}

0800f8d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800f8d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f8dc:	b085      	sub	sp, #20
 800f8de:	ad04      	add	r5, sp, #16
 800f8e0:	4604      	mov	r4, r0
 800f8e2:	2000      	movs	r0, #0
 800f8e4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800f8e8:	69a0      	ldr	r0, [r4, #24]
 800f8ea:	6806      	ldr	r6, [r0, #0]
 800f8ec:	9501      	str	r5, [sp, #4]
 800f8ee:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800f8f2:	9500      	str	r5, [sp, #0]
 800f8f4:	6835      	ldr	r5, [r6, #0]
 800f8f6:	4699      	mov	r9, r3
 800f8f8:	460f      	mov	r7, r1
 800f8fa:	4690      	mov	r8, r2
 800f8fc:	47a8      	blx	r5
 800f8fe:	4d10      	ldr	r5, [pc, #64]	; (800f940 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800f900:	4606      	mov	r6, r0
 800f902:	f8a5 9000 	strh.w	r9, [r5]
 800f906:	f7f3 fcc9 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 800f90a:	6803      	ldr	r3, [r0, #0]
 800f90c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f90e:	4798      	blx	r3
 800f910:	b128      	cbz	r0, 800f91e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800f912:	2801      	cmp	r0, #1
 800f914:	d00b      	beq.n	800f92e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800f916:	4630      	mov	r0, r6
 800f918:	b005      	add	sp, #20
 800f91a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f91e:	882b      	ldrh	r3, [r5, #0]
 800f920:	fb08 7203 	mla	r2, r8, r3, r7
 800f924:	9b03      	ldr	r3, [sp, #12]
 800f926:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800f92a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f92c:	e7f3      	b.n	800f916 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f92e:	882a      	ldrh	r2, [r5, #0]
 800f930:	9b03      	ldr	r3, [sp, #12]
 800f932:	fb08 7202 	mla	r2, r8, r2, r7
 800f936:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800f93a:	1a9a      	subs	r2, r3, r2
 800f93c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800f93e:	e7ea      	b.n	800f916 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f940:	200137b6 	.word	0x200137b6

0800f944 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800f944:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f946:	b08b      	sub	sp, #44	; 0x2c
 800f948:	4617      	mov	r7, r2
 800f94a:	4604      	mov	r4, r0
 800f94c:	460e      	mov	r6, r1
 800f94e:	461d      	mov	r5, r3
 800f950:	f7f3 fca4 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 800f954:	6803      	ldr	r3, [r0, #0]
 800f956:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f958:	4798      	blx	r3
 800f95a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800f95e:	9007      	str	r0, [sp, #28]
 800f960:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f964:	4b0d      	ldr	r3, [pc, #52]	; (800f99c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800f966:	6822      	ldr	r2, [r4, #0]
 800f968:	881b      	ldrh	r3, [r3, #0]
 800f96a:	9306      	str	r3, [sp, #24]
 800f96c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f970:	9305      	str	r3, [sp, #20]
 800f972:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800f976:	9304      	str	r3, [sp, #16]
 800f978:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f97c:	9303      	str	r3, [sp, #12]
 800f97e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f982:	9302      	str	r3, [sp, #8]
 800f984:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f988:	e9cd 5300 	strd	r5, r3, [sp]
 800f98c:	4631      	mov	r1, r6
 800f98e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800f990:	463b      	mov	r3, r7
 800f992:	2200      	movs	r2, #0
 800f994:	4620      	mov	r0, r4
 800f996:	47a8      	blx	r5
 800f998:	b00b      	add	sp, #44	; 0x2c
 800f99a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f99c:	200137b6 	.word	0x200137b6

0800f9a0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800f9a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f9a4:	4698      	mov	r8, r3
 800f9a6:	6803      	ldr	r3, [r0, #0]
 800f9a8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800f9aa:	4b15      	ldr	r3, [pc, #84]	; (800fa00 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800f9ac:	b08b      	sub	sp, #44	; 0x2c
 800f9ae:	4617      	mov	r7, r2
 800f9b0:	f8b3 9000 	ldrh.w	r9, [r3]
 800f9b4:	460e      	mov	r6, r1
 800f9b6:	4604      	mov	r4, r0
 800f9b8:	f7f3 fc70 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 800f9bc:	6803      	ldr	r3, [r0, #0]
 800f9be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f9c0:	4798      	blx	r3
 800f9c2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f9c6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f9ca:	2302      	movs	r3, #2
 800f9cc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800f9d0:	2301      	movs	r3, #1
 800f9d2:	9305      	str	r3, [sp, #20]
 800f9d4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800f9d8:	9304      	str	r3, [sp, #16]
 800f9da:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800f9de:	9303      	str	r3, [sp, #12]
 800f9e0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f9e4:	9302      	str	r3, [sp, #8]
 800f9e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f9ea:	2200      	movs	r2, #0
 800f9ec:	e9cd 8300 	strd	r8, r3, [sp]
 800f9f0:	4631      	mov	r1, r6
 800f9f2:	463b      	mov	r3, r7
 800f9f4:	4620      	mov	r0, r4
 800f9f6:	47a8      	blx	r5
 800f9f8:	b00b      	add	sp, #44	; 0x2c
 800f9fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9fe:	bf00      	nop
 800fa00:	200137b6 	.word	0x200137b6

0800fa04 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800fa04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa08:	4698      	mov	r8, r3
 800fa0a:	6803      	ldr	r3, [r0, #0]
 800fa0c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800fa0e:	4b11      	ldr	r3, [pc, #68]	; (800fa54 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800fa10:	b087      	sub	sp, #28
 800fa12:	f8b3 9000 	ldrh.w	r9, [r3]
 800fa16:	460e      	mov	r6, r1
 800fa18:	4617      	mov	r7, r2
 800fa1a:	4604      	mov	r4, r0
 800fa1c:	f7f3 fc3e 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 800fa20:	6803      	ldr	r3, [r0, #0]
 800fa22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa24:	4798      	blx	r3
 800fa26:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800fa2a:	f8cd 900c 	str.w	r9, [sp, #12]
 800fa2e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800fa32:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800fa36:	9302      	str	r3, [sp, #8]
 800fa38:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800fa3c:	9301      	str	r3, [sp, #4]
 800fa3e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800fa42:	9300      	str	r3, [sp, #0]
 800fa44:	463a      	mov	r2, r7
 800fa46:	4643      	mov	r3, r8
 800fa48:	4631      	mov	r1, r6
 800fa4a:	4620      	mov	r0, r4
 800fa4c:	47a8      	blx	r5
 800fa4e:	b007      	add	sp, #28
 800fa50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fa54:	200137b6 	.word	0x200137b6

0800fa58 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800fa58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa5c:	4604      	mov	r4, r0
 800fa5e:	b08f      	sub	sp, #60	; 0x3c
 800fa60:	4610      	mov	r0, r2
 800fa62:	460d      	mov	r5, r1
 800fa64:	4691      	mov	r9, r2
 800fa66:	461e      	mov	r6, r3
 800fa68:	f007 fefc 	bl	8017864 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800fa6c:	2800      	cmp	r0, #0
 800fa6e:	f000 809d 	beq.w	800fbac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800fa72:	6823      	ldr	r3, [r4, #0]
 800fa74:	f8df b198 	ldr.w	fp, [pc, #408]	; 800fc10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800fa78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fa7a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800fc14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800fa7e:	4f61      	ldr	r7, [pc, #388]	; (800fc04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800fa80:	4620      	mov	r0, r4
 800fa82:	4798      	blx	r3
 800fa84:	6823      	ldr	r3, [r4, #0]
 800fa86:	4620      	mov	r0, r4
 800fa88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa8a:	4798      	blx	r3
 800fa8c:	f8bb 3000 	ldrh.w	r3, [fp]
 800fa90:	9301      	str	r3, [sp, #4]
 800fa92:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800fa96:	f8ba 3000 	ldrh.w	r3, [sl]
 800fa9a:	9302      	str	r3, [sp, #8]
 800fa9c:	883b      	ldrh	r3, [r7, #0]
 800fa9e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800faa2:	9303      	str	r3, [sp, #12]
 800faa4:	4b58      	ldr	r3, [pc, #352]	; (800fc08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800faa6:	9305      	str	r3, [sp, #20]
 800faa8:	881a      	ldrh	r2, [r3, #0]
 800faaa:	9204      	str	r2, [sp, #16]
 800faac:	4640      	mov	r0, r8
 800faae:	f007 ff6d 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fab2:	8038      	strh	r0, [r7, #0]
 800fab4:	4640      	mov	r0, r8
 800fab6:	f007 ff9d 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800faba:	9b05      	ldr	r3, [sp, #20]
 800fabc:	b280      	uxth	r0, r0
 800fabe:	8018      	strh	r0, [r3, #0]
 800fac0:	4b52      	ldr	r3, [pc, #328]	; (800fc0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800fac2:	781b      	ldrb	r3, [r3, #0]
 800fac4:	2b00      	cmp	r3, #0
 800fac6:	d174      	bne.n	800fbb2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800fac8:	883b      	ldrh	r3, [r7, #0]
 800faca:	f8ab 3000 	strh.w	r3, [fp]
 800face:	f8aa 0000 	strh.w	r0, [sl]
 800fad2:	4648      	mov	r0, r9
 800fad4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800fad8:	f007 fec4 	bl	8017864 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800fadc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800fae0:	2200      	movs	r2, #0
 800fae2:	4611      	mov	r1, r2
 800fae4:	4628      	mov	r0, r5
 800fae6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800faea:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800faee:	f7f2 fcce 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800faf2:	2301      	movs	r3, #1
 800faf4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800faf8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800fafc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fb00:	2b00      	cmp	r3, #0
 800fb02:	dd5c      	ble.n	800fbbe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800fb04:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fb08:	2b00      	cmp	r3, #0
 800fb0a:	dd58      	ble.n	800fbbe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800fb0c:	462a      	mov	r2, r5
 800fb0e:	ab0a      	add	r3, sp, #40	; 0x28
 800fb10:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800fb14:	6851      	ldr	r1, [r2, #4]
 800fb16:	c303      	stmia	r3!, {r0, r1}
 800fb18:	4631      	mov	r1, r6
 800fb1a:	a80a      	add	r0, sp, #40	; 0x28
 800fb1c:	f7ff fc06 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 800fb20:	4b38      	ldr	r3, [pc, #224]	; (800fc04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800fb22:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fb26:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800fb2a:	2100      	movs	r1, #0
 800fb2c:	aa0a      	add	r2, sp, #40	; 0x28
 800fb2e:	4b36      	ldr	r3, [pc, #216]	; (800fc08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800fb30:	910c      	str	r1, [sp, #48]	; 0x30
 800fb32:	e892 0003 	ldmia.w	r2, {r0, r1}
 800fb36:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fb3a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800fb3e:	ab08      	add	r3, sp, #32
 800fb40:	e883 0003 	stmia.w	r3, {r0, r1}
 800fb44:	4618      	mov	r0, r3
 800fb46:	a90c      	add	r1, sp, #48	; 0x30
 800fb48:	f7ff fbf0 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 800fb4c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800fb4e:	2b00      	cmp	r3, #0
 800fb50:	d13c      	bne.n	800fbcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800fb52:	2000      	movs	r0, #0
 800fb54:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800fb58:	2600      	movs	r6, #0
 800fb5a:	682a      	ldr	r2, [r5, #0]
 800fb5c:	696b      	ldr	r3, [r5, #20]
 800fb5e:	616e      	str	r6, [r5, #20]
 800fb60:	9305      	str	r3, [sp, #20]
 800fb62:	6892      	ldr	r2, [r2, #8]
 800fb64:	a908      	add	r1, sp, #32
 800fb66:	4628      	mov	r0, r5
 800fb68:	4790      	blx	r2
 800fb6a:	9b05      	ldr	r3, [sp, #20]
 800fb6c:	616b      	str	r3, [r5, #20]
 800fb6e:	4652      	mov	r2, sl
 800fb70:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800fb74:	4649      	mov	r1, r9
 800fb76:	4628      	mov	r0, r5
 800fb78:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800fb7c:	f7f2 fc87 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 800fb80:	4b23      	ldr	r3, [pc, #140]	; (800fc10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800fb82:	9a01      	ldr	r2, [sp, #4]
 800fb84:	801a      	strh	r2, [r3, #0]
 800fb86:	4b23      	ldr	r3, [pc, #140]	; (800fc14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800fb88:	9a02      	ldr	r2, [sp, #8]
 800fb8a:	801a      	strh	r2, [r3, #0]
 800fb8c:	4b1d      	ldr	r3, [pc, #116]	; (800fc04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800fb8e:	9a03      	ldr	r2, [sp, #12]
 800fb90:	801a      	strh	r2, [r3, #0]
 800fb92:	4b1d      	ldr	r3, [pc, #116]	; (800fc08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800fb94:	9a04      	ldr	r2, [sp, #16]
 800fb96:	801a      	strh	r2, [r3, #0]
 800fb98:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800fb9c:	6823      	ldr	r3, [r4, #0]
 800fb9e:	4620      	mov	r0, r4
 800fba0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fba2:	4798      	blx	r3
 800fba4:	6823      	ldr	r3, [r4, #0]
 800fba6:	4620      	mov	r0, r4
 800fba8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fbaa:	4798      	blx	r3
 800fbac:	b00f      	add	sp, #60	; 0x3c
 800fbae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbb2:	883b      	ldrh	r3, [r7, #0]
 800fbb4:	f8ab 0000 	strh.w	r0, [fp]
 800fbb8:	f8aa 3000 	strh.w	r3, [sl]
 800fbbc:	e789      	b.n	800fad2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800fbbe:	462a      	mov	r2, r5
 800fbc0:	ab0a      	add	r3, sp, #40	; 0x28
 800fbc2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800fbc6:	6851      	ldr	r1, [r2, #4]
 800fbc8:	c303      	stmia	r3!, {r0, r1}
 800fbca:	e7a9      	b.n	800fb20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800fbcc:	a807      	add	r0, sp, #28
 800fbce:	f008 f84d 	bl	8017c6c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800fbd2:	4606      	mov	r6, r0
 800fbd4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800fbd6:	6803      	ldr	r3, [r0, #0]
 800fbd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fbda:	4798      	blx	r3
 800fbdc:	4286      	cmp	r6, r0
 800fbde:	d1b8      	bne.n	800fb52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800fbe0:	f7f3 fb5c 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 800fbe4:	6803      	ldr	r3, [r0, #0]
 800fbe6:	4606      	mov	r6, r0
 800fbe8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fbea:	9305      	str	r3, [sp, #20]
 800fbec:	a807      	add	r0, sp, #28
 800fbee:	f008 f83d 	bl	8017c6c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800fbf2:	9b05      	ldr	r3, [sp, #20]
 800fbf4:	4601      	mov	r1, r0
 800fbf6:	4630      	mov	r0, r6
 800fbf8:	4798      	blx	r3
 800fbfa:	f080 0001 	eor.w	r0, r0, #1
 800fbfe:	b2c0      	uxtb	r0, r0
 800fc00:	e7a8      	b.n	800fb54 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800fc02:	bf00      	nop
 800fc04:	200137b0 	.word	0x200137b0
 800fc08:	200137b2 	.word	0x200137b2
 800fc0c:	200137b4 	.word	0x200137b4
 800fc10:	200137b6 	.word	0x200137b6
 800fc14:	200137b8 	.word	0x200137b8

0800fc18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800fc18:	b510      	push	{r4, lr}
 800fc1a:	4b07      	ldr	r3, [pc, #28]	; (800fc38 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800fc1c:	781b      	ldrb	r3, [r3, #0]
 800fc1e:	4604      	mov	r4, r0
 800fc20:	b13b      	cbz	r3, 800fc32 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800fc22:	6803      	ldr	r3, [r0, #0]
 800fc24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fc26:	4798      	blx	r3
 800fc28:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fc2a:	4283      	cmp	r3, r0
 800fc2c:	d101      	bne.n	800fc32 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800fc2e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800fc30:	bd10      	pop	{r4, pc}
 800fc32:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800fc34:	e7fc      	b.n	800fc30 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800fc36:	bf00      	nop
 800fc38:	200137ba 	.word	0x200137ba

0800fc3c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800fc3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc40:	b08a      	sub	sp, #40	; 0x28
 800fc42:	461d      	mov	r5, r3
 800fc44:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800fc48:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fc4c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800fc50:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fc54:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fc58:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fc5c:	2400      	movs	r4, #0
 800fc5e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fc62:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800fc66:	f8ad 301c 	strh.w	r3, [sp, #28]
 800fc6a:	4690      	mov	r8, r2
 800fc6c:	4607      	mov	r7, r0
 800fc6e:	9404      	str	r4, [sp, #16]
 800fc70:	f88d 4020 	strb.w	r4, [sp, #32]
 800fc74:	f7ff ffd0 	bl	800fc18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800fc78:	fb06 8505 	mla	r5, r6, r5, r8
 800fc7c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800fc80:	6878      	ldr	r0, [r7, #4]
 800fc82:	9505      	str	r5, [sp, #20]
 800fc84:	f8ad 601e 	strh.w	r6, [sp, #30]
 800fc88:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800fc8c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800fc90:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800fc94:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800fc98:	6803      	ldr	r3, [r0, #0]
 800fc9a:	a901      	add	r1, sp, #4
 800fc9c:	685b      	ldr	r3, [r3, #4]
 800fc9e:	4798      	blx	r3
 800fca0:	b00a      	add	sp, #40	; 0x28
 800fca2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fca6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800fca6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fcaa:	b08b      	sub	sp, #44	; 0x2c
 800fcac:	2400      	movs	r4, #0
 800fcae:	461d      	mov	r5, r3
 800fcb0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800fcb4:	4688      	mov	r8, r1
 800fcb6:	4691      	mov	r9, r2
 800fcb8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800fcbc:	9404      	str	r4, [sp, #16]
 800fcbe:	4607      	mov	r7, r0
 800fcc0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800fcc4:	f7ff ffa8 	bl	800fc18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800fcc8:	fb06 9505 	mla	r5, r6, r5, r9
 800fccc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fcd0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fcd4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800fcd8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800fcdc:	6878      	ldr	r0, [r7, #4]
 800fcde:	9505      	str	r5, [sp, #20]
 800fce0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fce4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800fce8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800fcec:	f8cd 8010 	str.w	r8, [sp, #16]
 800fcf0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800fcf4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800fcf8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800fcfc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800fd00:	6803      	ldr	r3, [r0, #0]
 800fd02:	a901      	add	r1, sp, #4
 800fd04:	685b      	ldr	r3, [r3, #4]
 800fd06:	4798      	blx	r3
 800fd08:	b00b      	add	sp, #44	; 0x2c
 800fd0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800fd10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800fd10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd14:	b08a      	sub	sp, #40	; 0x28
 800fd16:	4698      	mov	r8, r3
 800fd18:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800fd1c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800fd20:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800fd24:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800fd28:	2300      	movs	r3, #0
 800fd2a:	2d0b      	cmp	r5, #11
 800fd2c:	4606      	mov	r6, r0
 800fd2e:	9304      	str	r3, [sp, #16]
 800fd30:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800fd34:	d138      	bne.n	800fda8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800fd36:	2380      	movs	r3, #128	; 0x80
 800fd38:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fd3c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fd40:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fd44:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fd48:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fd4c:	f88d 0020 	strb.w	r0, [sp, #32]
 800fd50:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800fd54:	f8ad 301c 	strh.w	r3, [sp, #28]
 800fd58:	4630      	mov	r0, r6
 800fd5a:	9203      	str	r2, [sp, #12]
 800fd5c:	f7ff ff5c 	bl	800fc18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800fd60:	2c0b      	cmp	r4, #11
 800fd62:	bf98      	it	ls
 800fd64:	4b1b      	ldrls	r3, [pc, #108]	; (800fdd4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800fd66:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800fd6a:	bf98      	it	ls
 800fd6c:	5d19      	ldrbls	r1, [r3, r4]
 800fd6e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800fd72:	bf88      	it	hi
 800fd74:	2100      	movhi	r1, #0
 800fd76:	fb02 8307 	mla	r3, r2, r7, r8
 800fd7a:	10c9      	asrs	r1, r1, #3
 800fd7c:	fb01 0003 	mla	r0, r1, r3, r0
 800fd80:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800fd84:	9005      	str	r0, [sp, #20]
 800fd86:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800fd8a:	6870      	ldr	r0, [r6, #4]
 800fd8c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800fd90:	2300      	movs	r3, #0
 800fd92:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800fd96:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800fd9a:	6803      	ldr	r3, [r0, #0]
 800fd9c:	a901      	add	r1, sp, #4
 800fd9e:	685b      	ldr	r3, [r3, #4]
 800fda0:	4798      	blx	r3
 800fda2:	b00a      	add	sp, #40	; 0x28
 800fda4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fda8:	2d02      	cmp	r5, #2
 800fdaa:	d109      	bne.n	800fdc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800fdac:	28ff      	cmp	r0, #255	; 0xff
 800fdae:	d105      	bne.n	800fdbc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800fdb0:	f1bc 0f00 	cmp.w	ip, #0
 800fdb4:	bf14      	ite	ne
 800fdb6:	2340      	movne	r3, #64	; 0x40
 800fdb8:	2320      	moveq	r3, #32
 800fdba:	e7bd      	b.n	800fd38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800fdbc:	2340      	movs	r3, #64	; 0x40
 800fdbe:	e7bb      	b.n	800fd38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800fdc0:	28ff      	cmp	r0, #255	; 0xff
 800fdc2:	d105      	bne.n	800fdd0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800fdc4:	f1bc 0f00 	cmp.w	ip, #0
 800fdc8:	bf14      	ite	ne
 800fdca:	2304      	movne	r3, #4
 800fdcc:	2301      	moveq	r3, #1
 800fdce:	e7b3      	b.n	800fd38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800fdd0:	2304      	movs	r3, #4
 800fdd2:	e7b1      	b.n	800fd38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800fdd4:	0802bc5c 	.word	0x0802bc5c

0800fdd8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800fdd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fddc:	b08b      	sub	sp, #44	; 0x2c
 800fdde:	461d      	mov	r5, r3
 800fde0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800fde4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800fde8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800fdec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800fdf0:	bf14      	ite	ne
 800fdf2:	2308      	movne	r3, #8
 800fdf4:	2302      	moveq	r3, #2
 800fdf6:	2400      	movs	r4, #0
 800fdf8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800fdfc:	4688      	mov	r8, r1
 800fdfe:	4693      	mov	fp, r2
 800fe00:	9404      	str	r4, [sp, #16]
 800fe02:	4607      	mov	r7, r0
 800fe04:	f7ff ff08 	bl	800fc18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800fe08:	2e0b      	cmp	r6, #11
 800fe0a:	bf98      	it	ls
 800fe0c:	4b15      	ldrls	r3, [pc, #84]	; (800fe64 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800fe0e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800fe12:	bf98      	it	ls
 800fe14:	5d9c      	ldrbls	r4, [r3, r6]
 800fe16:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800fe1a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fe1e:	fb05 b50a 	mla	r5, r5, sl, fp
 800fe22:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800fe26:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fe2a:	10e4      	asrs	r4, r4, #3
 800fe2c:	fb04 0405 	mla	r4, r4, r5, r0
 800fe30:	2300      	movs	r3, #0
 800fe32:	6878      	ldr	r0, [r7, #4]
 800fe34:	9405      	str	r4, [sp, #20]
 800fe36:	f8ad 301c 	strh.w	r3, [sp, #28]
 800fe3a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800fe3e:	f8cd 8010 	str.w	r8, [sp, #16]
 800fe42:	f88d 9020 	strb.w	r9, [sp, #32]
 800fe46:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800fe4a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800fe4e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800fe52:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800fe56:	6803      	ldr	r3, [r0, #0]
 800fe58:	a901      	add	r1, sp, #4
 800fe5a:	685b      	ldr	r3, [r3, #4]
 800fe5c:	4798      	blx	r3
 800fe5e:	b00b      	add	sp, #44	; 0x2c
 800fe60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe64:	0802bc5c 	.word	0x0802bc5c

0800fe68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800fe68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe6c:	461e      	mov	r6, r3
 800fe6e:	4b0a      	ldr	r3, [pc, #40]	; (800fe98 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800fe70:	460f      	mov	r7, r1
 800fe72:	881d      	ldrh	r5, [r3, #0]
 800fe74:	4690      	mov	r8, r2
 800fe76:	f7f3 fa11 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 800fe7a:	6803      	ldr	r3, [r0, #0]
 800fe7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe7e:	4798      	blx	r3
 800fe80:	280b      	cmp	r0, #11
 800fe82:	bf9a      	itte	ls
 800fe84:	4b05      	ldrls	r3, [pc, #20]	; (800fe9c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800fe86:	5c1c      	ldrbls	r4, [r3, r0]
 800fe88:	2400      	movhi	r4, #0
 800fe8a:	fb08 7005 	mla	r0, r8, r5, r7
 800fe8e:	10e4      	asrs	r4, r4, #3
 800fe90:	fb04 6000 	mla	r0, r4, r0, r6
 800fe94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fe98:	200137b6 	.word	0x200137b6
 800fe9c:	0802bc5c 	.word	0x0802bc5c

0800fea0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800fea0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fea2:	b08b      	sub	sp, #44	; 0x2c
 800fea4:	461f      	mov	r7, r3
 800fea6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800feaa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800feae:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800feb2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800feb6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800feba:	f8ad 301a 	strh.w	r3, [sp, #26]
 800febe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fec2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800fec6:	2500      	movs	r5, #0
 800fec8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800fecc:	f88d 3020 	strb.w	r3, [sp, #32]
 800fed0:	4604      	mov	r4, r0
 800fed2:	4616      	mov	r6, r2
 800fed4:	9504      	str	r5, [sp, #16]
 800fed6:	f7ff fe9f 	bl	800fc18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800feda:	463a      	mov	r2, r7
 800fedc:	4631      	mov	r1, r6
 800fede:	4603      	mov	r3, r0
 800fee0:	4620      	mov	r0, r4
 800fee2:	f7ff ffc1 	bl	800fe68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800fee6:	4b0e      	ldr	r3, [pc, #56]	; (800ff20 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800fee8:	9005      	str	r0, [sp, #20]
 800feea:	881b      	ldrh	r3, [r3, #0]
 800feec:	f8ad 301e 	strh.w	r3, [sp, #30]
 800fef0:	f7f3 f9d4 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 800fef4:	6803      	ldr	r3, [r0, #0]
 800fef6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fef8:	4798      	blx	r3
 800fefa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fefc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800ff00:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800ff04:	9304      	str	r3, [sp, #16]
 800ff06:	6860      	ldr	r0, [r4, #4]
 800ff08:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ff0c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800ff10:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800ff14:	6803      	ldr	r3, [r0, #0]
 800ff16:	a901      	add	r1, sp, #4
 800ff18:	685b      	ldr	r3, [r3, #4]
 800ff1a:	4798      	blx	r3
 800ff1c:	b00b      	add	sp, #44	; 0x2c
 800ff1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff20:	200137b6 	.word	0x200137b6

0800ff24 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800ff24:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff26:	b08d      	sub	sp, #52	; 0x34
 800ff28:	466b      	mov	r3, sp
 800ff2a:	e883 0006 	stmia.w	r3, {r1, r2}
 800ff2e:	2300      	movs	r3, #0
 800ff30:	9306      	str	r3, [sp, #24]
 800ff32:	6803      	ldr	r3, [r0, #0]
 800ff34:	f8bd 6000 	ldrh.w	r6, [sp]
 800ff38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ff3a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800ff3e:	2501      	movs	r5, #1
 800ff40:	9503      	str	r5, [sp, #12]
 800ff42:	4604      	mov	r4, r0
 800ff44:	4798      	blx	r3
 800ff46:	463a      	mov	r2, r7
 800ff48:	4631      	mov	r1, r6
 800ff4a:	4603      	mov	r3, r0
 800ff4c:	4620      	mov	r0, r4
 800ff4e:	f7ff ff8b 	bl	800fe68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ff52:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ff54:	9307      	str	r3, [sp, #28]
 800ff56:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ff5a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ff5e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ff62:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ff66:	4b0f      	ldr	r3, [pc, #60]	; (800ffa4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800ff68:	9004      	str	r0, [sp, #16]
 800ff6a:	881b      	ldrh	r3, [r3, #0]
 800ff6c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ff70:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ff74:	f7f3 f992 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 800ff78:	6803      	ldr	r3, [r0, #0]
 800ff7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff7c:	4798      	blx	r3
 800ff7e:	23ff      	movs	r3, #255	; 0xff
 800ff80:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ff84:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ff88:	6860      	ldr	r0, [r4, #4]
 800ff8a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ff8e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ff92:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ff96:	6803      	ldr	r3, [r0, #0]
 800ff98:	a903      	add	r1, sp, #12
 800ff9a:	685b      	ldr	r3, [r3, #4]
 800ff9c:	4798      	blx	r3
 800ff9e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800ffa0:	b00d      	add	sp, #52	; 0x34
 800ffa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ffa4:	200137b6 	.word	0x200137b6

0800ffa8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800ffa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffac:	b08c      	sub	sp, #48	; 0x30
 800ffae:	461e      	mov	r6, r3
 800ffb0:	466d      	mov	r5, sp
 800ffb2:	2300      	movs	r3, #0
 800ffb4:	e885 0006 	stmia.w	r5, {r1, r2}
 800ffb8:	9306      	str	r3, [sp, #24]
 800ffba:	6803      	ldr	r3, [r0, #0]
 800ffbc:	f8bd 7000 	ldrh.w	r7, [sp]
 800ffc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ffc2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ffc6:	2501      	movs	r5, #1
 800ffc8:	9503      	str	r5, [sp, #12]
 800ffca:	4604      	mov	r4, r0
 800ffcc:	4798      	blx	r3
 800ffce:	4642      	mov	r2, r8
 800ffd0:	4639      	mov	r1, r7
 800ffd2:	4603      	mov	r3, r0
 800ffd4:	4620      	mov	r0, r4
 800ffd6:	f7ff ff47 	bl	800fe68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ffda:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ffde:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ffe2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ffe6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ffea:	4b11      	ldr	r3, [pc, #68]	; (8010030 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800ffec:	9004      	str	r0, [sp, #16]
 800ffee:	881b      	ldrh	r3, [r3, #0]
 800fff0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800fff4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fff6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800fffa:	9607      	str	r6, [sp, #28]
 800fffc:	f7f3 f94e 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 8010000:	6803      	ldr	r3, [r0, #0]
 8010002:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010004:	4798      	blx	r3
 8010006:	23ff      	movs	r3, #255	; 0xff
 8010008:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801000c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010010:	6860      	ldr	r0, [r4, #4]
 8010012:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010016:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801001a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801001e:	6803      	ldr	r3, [r0, #0]
 8010020:	a903      	add	r1, sp, #12
 8010022:	685b      	ldr	r3, [r3, #4]
 8010024:	4798      	blx	r3
 8010026:	4630      	mov	r0, r6
 8010028:	b00c      	add	sp, #48	; 0x30
 801002a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801002e:	bf00      	nop
 8010030:	200137b6 	.word	0x200137b6

08010034 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010034:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010036:	b085      	sub	sp, #20
 8010038:	ac02      	add	r4, sp, #8
 801003a:	e884 0006 	stmia.w	r4, {r1, r2}
 801003e:	4605      	mov	r5, r0
 8010040:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010044:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010048:	f7ff fde6 	bl	800fc18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801004c:	463a      	mov	r2, r7
 801004e:	4603      	mov	r3, r0
 8010050:	4631      	mov	r1, r6
 8010052:	4628      	mov	r0, r5
 8010054:	f7ff ff08 	bl	800fe68 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010058:	4a05      	ldr	r2, [pc, #20]	; (8010070 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801005a:	682b      	ldr	r3, [r5, #0]
 801005c:	8812      	ldrh	r2, [r2, #0]
 801005e:	9200      	str	r2, [sp, #0]
 8010060:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010062:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010066:	4603      	mov	r3, r0
 8010068:	4628      	mov	r0, r5
 801006a:	47b0      	blx	r6
 801006c:	b005      	add	sp, #20
 801006e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010070:	200137b6 	.word	0x200137b6

08010074 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010074:	b570      	push	{r4, r5, r6, lr}
 8010076:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 801007a:	4604      	mov	r4, r0
 801007c:	b19b      	cbz	r3, 80100a6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801007e:	2002      	movs	r0, #2
 8010080:	f7f0 fba4 	bl	80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010084:	2300      	movs	r3, #0
 8010086:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801008a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 801008e:	6823      	ldr	r3, [r4, #0]
 8010090:	4620      	mov	r0, r4
 8010092:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010096:	f7ff fdbf 	bl	800fc18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801009a:	462b      	mov	r3, r5
 801009c:	4601      	mov	r1, r0
 801009e:	4620      	mov	r0, r4
 80100a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80100a4:	4718      	bx	r3
 80100a6:	bd70      	pop	{r4, r5, r6, pc}

080100a8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80100a8:	b538      	push	{r3, r4, r5, lr}
 80100aa:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80100ae:	428b      	cmp	r3, r1
 80100b0:	4604      	mov	r4, r0
 80100b2:	460d      	mov	r5, r1
 80100b4:	d006      	beq.n	80100c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80100b6:	6803      	ldr	r3, [r0, #0]
 80100b8:	b929      	cbnz	r1, 80100c6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80100ba:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80100be:	4798      	blx	r3
 80100c0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 80100c4:	bd38      	pop	{r3, r4, r5, pc}
 80100c6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80100ca:	e7f8      	b.n	80100be <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080100cc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80100cc:	b510      	push	{r4, lr}
 80100ce:	4b0d      	ldr	r3, [pc, #52]	; (8010104 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80100d0:	781b      	ldrb	r3, [r3, #0]
 80100d2:	4604      	mov	r4, r0
 80100d4:	b95b      	cbnz	r3, 80100ee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80100d6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80100da:	2b02      	cmp	r3, #2
 80100dc:	d007      	beq.n	80100ee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80100de:	6840      	ldr	r0, [r0, #4]
 80100e0:	f000 f92c 	bl	801033c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80100e4:	b118      	cbz	r0, 80100ee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80100e6:	6862      	ldr	r2, [r4, #4]
 80100e8:	7a53      	ldrb	r3, [r2, #9]
 80100ea:	2b00      	cmp	r3, #0
 80100ec:	d0fc      	beq.n	80100e8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80100ee:	f7f0 fca5 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80100f2:	4620      	mov	r0, r4
 80100f4:	2100      	movs	r1, #0
 80100f6:	f7ff ffd7 	bl	80100a8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80100fa:	4620      	mov	r0, r4
 80100fc:	f7ff fd8c 	bl	800fc18 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010100:	bd10      	pop	{r4, pc}
 8010102:	bf00      	nop
 8010104:	200137ba 	.word	0x200137ba

08010108 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010108:	b570      	push	{r4, r5, r6, lr}
 801010a:	4604      	mov	r4, r0
 801010c:	6803      	ldr	r3, [r0, #0]
 801010e:	b919      	cbnz	r1, 8010118 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010110:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010112:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010116:	4718      	bx	r3
 8010118:	2200      	movs	r2, #0
 801011a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801011e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010122:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010124:	4798      	blx	r3
 8010126:	6863      	ldr	r3, [r4, #4]
 8010128:	2101      	movs	r1, #1
 801012a:	4605      	mov	r5, r0
 801012c:	7299      	strb	r1, [r3, #10]
 801012e:	4620      	mov	r0, r4
 8010130:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010134:	f7ff ffb8 	bl	80100a8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010138:	4628      	mov	r0, r5
 801013a:	bd70      	pop	{r4, r5, r6, pc}

0801013c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801013c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010140:	1a13      	subs	r3, r2, r0
 8010142:	4258      	negs	r0, r3
 8010144:	4158      	adcs	r0, r3
 8010146:	4770      	bx	lr

08010148 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010148:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801014c:	1a9b      	subs	r3, r3, r2
 801014e:	2b00      	cmp	r3, #0
 8010150:	bfdc      	itt	le
 8010152:	6882      	ldrle	r2, [r0, #8]
 8010154:	189b      	addle	r3, r3, r2
 8010156:	2b01      	cmp	r3, #1
 8010158:	bfcc      	ite	gt
 801015a:	2000      	movgt	r0, #0
 801015c:	2001      	movle	r0, #1
 801015e:	4770      	bx	lr

08010160 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010160:	6902      	ldr	r2, [r0, #16]
 8010162:	6843      	ldr	r3, [r0, #4]
 8010164:	2024      	movs	r0, #36	; 0x24
 8010166:	fb00 3002 	mla	r0, r0, r2, r3
 801016a:	4770      	bx	lr

0801016c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801016c:	6803      	ldr	r3, [r0, #0]
 801016e:	691b      	ldr	r3, [r3, #16]
 8010170:	4718      	bx	r3

08010172 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010172:	b570      	push	{r4, r5, r6, lr}
 8010174:	2301      	movs	r3, #1
 8010176:	7203      	strb	r3, [r0, #8]
 8010178:	4604      	mov	r4, r0
 801017a:	6840      	ldr	r0, [r0, #4]
 801017c:	6803      	ldr	r3, [r0, #0]
 801017e:	699b      	ldr	r3, [r3, #24]
 8010180:	4798      	blx	r3
 8010182:	6803      	ldr	r3, [r0, #0]
 8010184:	2b40      	cmp	r3, #64	; 0x40
 8010186:	4605      	mov	r5, r0
 8010188:	d00c      	beq.n	80101a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801018a:	d810      	bhi.n	80101ae <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801018c:	2b04      	cmp	r3, #4
 801018e:	d01d      	beq.n	80101cc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010190:	d804      	bhi.n	801019c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010192:	2b01      	cmp	r3, #1
 8010194:	d006      	beq.n	80101a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010196:	2b02      	cmp	r3, #2
 8010198:	d02c      	beq.n	80101f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801019a:	bd70      	pop	{r4, r5, r6, pc}
 801019c:	2b08      	cmp	r3, #8
 801019e:	d01d      	beq.n	80101dc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80101a0:	2b20      	cmp	r3, #32
 80101a2:	d1fa      	bne.n	801019a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80101a4:	6823      	ldr	r3, [r4, #0]
 80101a6:	4620      	mov	r0, r4
 80101a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80101aa:	4798      	blx	r3
 80101ac:	e013      	b.n	80101d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80101ae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80101b2:	d0f7      	beq.n	80101a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80101b4:	d804      	bhi.n	80101c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80101b6:	2b80      	cmp	r3, #128	; 0x80
 80101b8:	d0f4      	beq.n	80101a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80101ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80101be:	e7f0      	b.n	80101a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80101c0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80101c4:	d0ee      	beq.n	80101a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80101c6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80101ca:	e7e5      	b.n	8010198 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80101cc:	6823      	ldr	r3, [r4, #0]
 80101ce:	7f01      	ldrb	r1, [r0, #28]
 80101d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80101d2:	4620      	mov	r0, r4
 80101d4:	4798      	blx	r3
 80101d6:	6823      	ldr	r3, [r4, #0]
 80101d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80101da:	e006      	b.n	80101ea <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80101dc:	6823      	ldr	r3, [r4, #0]
 80101de:	7f01      	ldrb	r1, [r0, #28]
 80101e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80101e2:	4620      	mov	r0, r4
 80101e4:	4798      	blx	r3
 80101e6:	6823      	ldr	r3, [r4, #0]
 80101e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80101ea:	4629      	mov	r1, r5
 80101ec:	4620      	mov	r0, r4
 80101ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80101f2:	4718      	bx	r3
 80101f4:	6823      	ldr	r3, [r4, #0]
 80101f6:	4620      	mov	r0, r4
 80101f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80101fa:	4798      	blx	r3
 80101fc:	e7f3      	b.n	80101e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080101fe <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80101fe:	4770      	bx	lr

08010200 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010200:	4770      	bx	lr

08010202 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010202:	4770      	bx	lr

08010204 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010204:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010208:	1ad2      	subs	r2, r2, r3
 801020a:	2a00      	cmp	r2, #0
 801020c:	b510      	push	{r4, lr}
 801020e:	bfdc      	itt	le
 8010210:	6884      	ldrle	r4, [r0, #8]
 8010212:	1912      	addle	r2, r2, r4
 8010214:	2a01      	cmp	r2, #1
 8010216:	dd16      	ble.n	8010246 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010218:	6842      	ldr	r2, [r0, #4]
 801021a:	2424      	movs	r4, #36	; 0x24
 801021c:	fb04 2303 	mla	r3, r4, r3, r2
 8010220:	f101 0220 	add.w	r2, r1, #32
 8010224:	f851 4b04 	ldr.w	r4, [r1], #4
 8010228:	f843 4b04 	str.w	r4, [r3], #4
 801022c:	4291      	cmp	r1, r2
 801022e:	d1f9      	bne.n	8010224 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010230:	780a      	ldrb	r2, [r1, #0]
 8010232:	701a      	strb	r2, [r3, #0]
 8010234:	68c3      	ldr	r3, [r0, #12]
 8010236:	6882      	ldr	r2, [r0, #8]
 8010238:	f3bf 8f5b 	dmb	ish
 801023c:	3301      	adds	r3, #1
 801023e:	429a      	cmp	r2, r3
 8010240:	bfd8      	it	le
 8010242:	1a9b      	suble	r3, r3, r2
 8010244:	60c3      	str	r3, [r0, #12]
 8010246:	bd10      	pop	{r4, pc}

08010248 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010248:	6903      	ldr	r3, [r0, #16]
 801024a:	6882      	ldr	r2, [r0, #8]
 801024c:	f3bf 8f5b 	dmb	ish
 8010250:	3301      	adds	r3, #1
 8010252:	429a      	cmp	r2, r3
 8010254:	bfd8      	it	le
 8010256:	1a9b      	suble	r3, r3, r2
 8010258:	6103      	str	r3, [r0, #16]
 801025a:	4770      	bx	lr

0801025c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801025c:	b570      	push	{r4, r5, r6, lr}
 801025e:	4604      	mov	r4, r0
 8010260:	460e      	mov	r6, r1
 8010262:	6860      	ldr	r0, [r4, #4]
 8010264:	6803      	ldr	r3, [r0, #0]
 8010266:	685b      	ldr	r3, [r3, #4]
 8010268:	4798      	blx	r3
 801026a:	2800      	cmp	r0, #0
 801026c:	d1f9      	bne.n	8010262 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801026e:	4d0d      	ldr	r5, [pc, #52]	; (80102a4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010270:	6828      	ldr	r0, [r5, #0]
 8010272:	6803      	ldr	r3, [r0, #0]
 8010274:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010276:	4798      	blx	r3
 8010278:	f7f0 fbee 	bl	8000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 801027c:	6828      	ldr	r0, [r5, #0]
 801027e:	2101      	movs	r1, #1
 8010280:	f7ff ff12 	bl	80100a8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010284:	6860      	ldr	r0, [r4, #4]
 8010286:	6803      	ldr	r3, [r0, #0]
 8010288:	4631      	mov	r1, r6
 801028a:	689b      	ldr	r3, [r3, #8]
 801028c:	4798      	blx	r3
 801028e:	6823      	ldr	r3, [r4, #0]
 8010290:	4620      	mov	r0, r4
 8010292:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010294:	4798      	blx	r3
 8010296:	6828      	ldr	r0, [r5, #0]
 8010298:	6803      	ldr	r3, [r0, #0]
 801029a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801029e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80102a0:	4718      	bx	r3
 80102a2:	bf00      	nop
 80102a4:	200137bc 	.word	0x200137bc

080102a8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80102a8:	b508      	push	{r3, lr}
 80102aa:	f7f0 fbc7 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80102ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80102b2:	f7f0 bbcb 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080102b6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80102b6:	b510      	push	{r4, lr}
 80102b8:	2114      	movs	r1, #20
 80102ba:	4604      	mov	r4, r0
 80102bc:	f016 fea7 	bl	802700e <_ZdlPvj>
 80102c0:	4620      	mov	r0, r4
 80102c2:	bd10      	pop	{r4, pc}

080102c4 <_ZN8touchgfx13DMA_Interface5startEv>:
 80102c4:	b510      	push	{r4, lr}
 80102c6:	4604      	mov	r4, r0
 80102c8:	6840      	ldr	r0, [r0, #4]
 80102ca:	6803      	ldr	r3, [r0, #0]
 80102cc:	681b      	ldr	r3, [r3, #0]
 80102ce:	4798      	blx	r3
 80102d0:	b948      	cbnz	r0, 80102e6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80102d2:	7a63      	ldrb	r3, [r4, #9]
 80102d4:	b13b      	cbz	r3, 80102e6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80102d6:	7a23      	ldrb	r3, [r4, #8]
 80102d8:	b92b      	cbnz	r3, 80102e6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80102da:	6823      	ldr	r3, [r4, #0]
 80102dc:	4620      	mov	r0, r4
 80102de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80102e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80102e4:	4718      	bx	r3
 80102e6:	bd10      	pop	{r4, pc}

080102e8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80102e8:	b570      	push	{r4, r5, r6, lr}
 80102ea:	4604      	mov	r4, r0
 80102ec:	6840      	ldr	r0, [r0, #4]
 80102ee:	6803      	ldr	r3, [r0, #0]
 80102f0:	681b      	ldr	r3, [r3, #0]
 80102f2:	4798      	blx	r3
 80102f4:	4605      	mov	r5, r0
 80102f6:	b930      	cbnz	r0, 8010306 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80102f8:	7a23      	ldrb	r3, [r4, #8]
 80102fa:	b123      	cbz	r3, 8010306 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80102fc:	6860      	ldr	r0, [r4, #4]
 80102fe:	6803      	ldr	r3, [r0, #0]
 8010300:	695b      	ldr	r3, [r3, #20]
 8010302:	4798      	blx	r3
 8010304:	7225      	strb	r5, [r4, #8]
 8010306:	6860      	ldr	r0, [r4, #4]
 8010308:	6803      	ldr	r3, [r0, #0]
 801030a:	681b      	ldr	r3, [r3, #0]
 801030c:	4798      	blx	r3
 801030e:	b928      	cbnz	r0, 801031c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010310:	6823      	ldr	r3, [r4, #0]
 8010312:	4620      	mov	r0, r4
 8010314:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010316:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801031a:	4718      	bx	r3
 801031c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010320:	f7f0 bba2 	b.w	8000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010324 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010324:	b510      	push	{r4, lr}
 8010326:	4c04      	ldr	r4, [pc, #16]	; (8010338 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010328:	6082      	str	r2, [r0, #8]
 801032a:	2200      	movs	r2, #0
 801032c:	e9c0 4100 	strd	r4, r1, [r0]
 8010330:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010334:	bd10      	pop	{r4, pc}
 8010336:	bf00      	nop
 8010338:	0802bc70 	.word	0x0802bc70

0801033c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801033c:	6840      	ldr	r0, [r0, #4]
 801033e:	6803      	ldr	r3, [r0, #0]
 8010340:	681b      	ldr	r3, [r3, #0]
 8010342:	4718      	bx	r3

08010344 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010344:	4b06      	ldr	r3, [pc, #24]	; (8010360 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010346:	60c1      	str	r1, [r0, #12]
 8010348:	094a      	lsrs	r2, r1, #5
 801034a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 801034e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010352:	4313      	orrs	r3, r2
 8010354:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8010358:	4319      	orrs	r1, r3
 801035a:	8201      	strh	r1, [r0, #16]
 801035c:	4770      	bx	lr
 801035e:	bf00      	nop
 8010360:	fffff800 	.word	0xfffff800

08010364 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010364:	f1a0 0008 	sub.w	r0, r0, #8
 8010368:	e7ec      	b.n	8010344 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 801036a:	bf00      	nop

0801036c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 801036c:	b508      	push	{r3, lr}
 801036e:	4b05      	ldr	r3, [pc, #20]	; (8010384 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8010370:	6818      	ldr	r0, [r3, #0]
 8010372:	6803      	ldr	r3, [r0, #0]
 8010374:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010378:	4798      	blx	r3
 801037a:	1e43      	subs	r3, r0, #1
 801037c:	4258      	negs	r0, r3
 801037e:	4158      	adcs	r0, r3
 8010380:	bd08      	pop	{r3, pc}
 8010382:	bf00      	nop
 8010384:	200137bc 	.word	0x200137bc

08010388 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8010388:	4770      	bx	lr

0801038a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 801038a:	3808      	subs	r0, #8
 801038c:	4770      	bx	lr

0801038e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 801038e:	b430      	push	{r4, r5}
 8010390:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010394:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010398:	8a02      	ldrh	r2, [r0, #16]
 801039a:	9202      	str	r2, [sp, #8]
 801039c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80103a0:	68c2      	ldr	r2, [r0, #12]
 80103a2:	4629      	mov	r1, r5
 80103a4:	4620      	mov	r0, r4
 80103a6:	bc30      	pop	{r4, r5}
 80103a8:	f7f0 bd22 	b.w	8000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080103ac <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80103ac:	f7f0 bd16 	b.w	8000ddc <_ZN8touchgfx5paint8tearDownEv>

080103b0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80103b0:	b510      	push	{r4, lr}
 80103b2:	2114      	movs	r1, #20
 80103b4:	4604      	mov	r4, r0
 80103b6:	f016 fe2a 	bl	802700e <_ZdlPvj>
 80103ba:	4620      	mov	r0, r4
 80103bc:	bd10      	pop	{r4, pc}

080103be <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80103be:	f1a0 0008 	sub.w	r0, r0, #8
 80103c2:	e7f5      	b.n	80103b0 <_ZN8touchgfx13PainterRGB565D0Ev>

080103c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80103c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80103c6:	6803      	ldr	r3, [r0, #0]
 80103c8:	460d      	mov	r5, r1
 80103ca:	4604      	mov	r4, r0
 80103cc:	4601      	mov	r1, r0
 80103ce:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80103d0:	a802      	add	r0, sp, #8
 80103d2:	4798      	blx	r3
 80103d4:	6828      	ldr	r0, [r5, #0]
 80103d6:	6869      	ldr	r1, [r5, #4]
 80103d8:	466b      	mov	r3, sp
 80103da:	c303      	stmia	r3!, {r0, r1}
 80103dc:	4668      	mov	r0, sp
 80103de:	4619      	mov	r1, r3
 80103e0:	f7fe ffa4 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 80103e4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80103e6:	b188      	cbz	r0, 801040c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80103e8:	6803      	ldr	r3, [r0, #0]
 80103ea:	1d21      	adds	r1, r4, #4
 80103ec:	68db      	ldr	r3, [r3, #12]
 80103ee:	4798      	blx	r3
 80103f0:	b160      	cbz	r0, 801040c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80103f2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80103f6:	2b00      	cmp	r3, #0
 80103f8:	dd08      	ble.n	801040c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80103fa:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80103fe:	2d00      	cmp	r5, #0
 8010400:	dd04      	ble.n	801040c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010402:	4a2b      	ldr	r2, [pc, #172]	; (80104b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010404:	7812      	ldrb	r2, [r2, #0]
 8010406:	b11a      	cbz	r2, 8010410 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010408:	2a01      	cmp	r2, #1
 801040a:	d029      	beq.n	8010460 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 801040c:	b004      	add	sp, #16
 801040e:	bd70      	pop	{r4, r5, r6, pc}
 8010410:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010414:	441d      	add	r5, r3
 8010416:	b2ad      	uxth	r5, r5
 8010418:	b22e      	sxth	r6, r5
 801041a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801041e:	42b3      	cmp	r3, r6
 8010420:	daf4      	bge.n	801040c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010422:	6823      	ldr	r3, [r4, #0]
 8010424:	4669      	mov	r1, sp
 8010426:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010428:	4620      	mov	r0, r4
 801042a:	4798      	blx	r3
 801042c:	b940      	cbnz	r0, 8010440 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801042e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010432:	2b01      	cmp	r3, #1
 8010434:	d004      	beq.n	8010440 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010436:	3301      	adds	r3, #1
 8010438:	105b      	asrs	r3, r3, #1
 801043a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801043e:	e7f0      	b.n	8010422 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010440:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010444:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010448:	4413      	add	r3, r2
 801044a:	b29b      	uxth	r3, r3
 801044c:	441a      	add	r2, r3
 801044e:	b212      	sxth	r2, r2
 8010450:	4296      	cmp	r6, r2
 8010452:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010456:	dae0      	bge.n	801041a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010458:	1aeb      	subs	r3, r5, r3
 801045a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801045e:	e7dc      	b.n	801041a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010460:	f8bd 5000 	ldrh.w	r5, [sp]
 8010464:	441d      	add	r5, r3
 8010466:	b2ad      	uxth	r5, r5
 8010468:	b22e      	sxth	r6, r5
 801046a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801046e:	42b3      	cmp	r3, r6
 8010470:	dacc      	bge.n	801040c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010472:	6823      	ldr	r3, [r4, #0]
 8010474:	4669      	mov	r1, sp
 8010476:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010478:	4620      	mov	r0, r4
 801047a:	4798      	blx	r3
 801047c:	b940      	cbnz	r0, 8010490 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801047e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010482:	2b01      	cmp	r3, #1
 8010484:	d004      	beq.n	8010490 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010486:	3301      	adds	r3, #1
 8010488:	105b      	asrs	r3, r3, #1
 801048a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801048e:	e7f0      	b.n	8010472 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010490:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010494:	f8bd 3000 	ldrh.w	r3, [sp]
 8010498:	4413      	add	r3, r2
 801049a:	b29b      	uxth	r3, r3
 801049c:	441a      	add	r2, r3
 801049e:	b212      	sxth	r2, r2
 80104a0:	4296      	cmp	r6, r2
 80104a2:	f8ad 3000 	strh.w	r3, [sp]
 80104a6:	dae0      	bge.n	801046a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80104a8:	1aeb      	subs	r3, r5, r3
 80104aa:	f8ad 3004 	strh.w	r3, [sp, #4]
 80104ae:	e7dc      	b.n	801046a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80104b0:	200137b4 	.word	0x200137b4

080104b4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80104b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80104b6:	6803      	ldr	r3, [r0, #0]
 80104b8:	4604      	mov	r4, r0
 80104ba:	4601      	mov	r1, r0
 80104bc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80104be:	4668      	mov	r0, sp
 80104c0:	4798      	blx	r3
 80104c2:	2100      	movs	r1, #0
 80104c4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80104c8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80104cc:	9102      	str	r1, [sp, #8]
 80104ce:	4668      	mov	r0, sp
 80104d0:	a902      	add	r1, sp, #8
 80104d2:	f8ad 200c 	strh.w	r2, [sp, #12]
 80104d6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80104da:	f7fe ff27 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 80104de:	6823      	ldr	r3, [r4, #0]
 80104e0:	4669      	mov	r1, sp
 80104e2:	691b      	ldr	r3, [r3, #16]
 80104e4:	4620      	mov	r0, r4
 80104e6:	4798      	blx	r3
 80104e8:	b004      	add	sp, #16
 80104ea:	bd10      	pop	{r4, pc}

080104ec <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80104ec:	2101      	movs	r1, #1
 80104ee:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80104f2:	490b      	ldr	r1, [pc, #44]	; (8010520 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80104f4:	6001      	str	r1, [r0, #0]
 80104f6:	2200      	movs	r2, #0
 80104f8:	21ff      	movs	r1, #255	; 0xff
 80104fa:	8082      	strh	r2, [r0, #4]
 80104fc:	80c2      	strh	r2, [r0, #6]
 80104fe:	8102      	strh	r2, [r0, #8]
 8010500:	8142      	strh	r2, [r0, #10]
 8010502:	8182      	strh	r2, [r0, #12]
 8010504:	81c2      	strh	r2, [r0, #14]
 8010506:	8202      	strh	r2, [r0, #16]
 8010508:	8242      	strh	r2, [r0, #18]
 801050a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801050e:	61c2      	str	r2, [r0, #28]
 8010510:	8402      	strh	r2, [r0, #32]
 8010512:	8442      	strh	r2, [r0, #34]	; 0x22
 8010514:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010518:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 801051c:	6282      	str	r2, [r0, #40]	; 0x28
 801051e:	4770      	bx	lr
 8010520:	0802bccc 	.word	0x0802bccc

08010524 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010524:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010528:	4602      	mov	r2, r0
 801052a:	cb03      	ldmia	r3!, {r0, r1}
 801052c:	6010      	str	r0, [r2, #0]
 801052e:	6051      	str	r1, [r2, #4]
 8010530:	4610      	mov	r0, r2
 8010532:	4770      	bx	lr

08010534 <_ZN8touchgfx4LineD1Ev>:
 8010534:	4770      	bx	lr

08010536 <_ZN8touchgfx4LineD0Ev>:
 8010536:	b510      	push	{r4, lr}
 8010538:	2170      	movs	r1, #112	; 0x70
 801053a:	4604      	mov	r4, r0
 801053c:	f016 fd67 	bl	802700e <_ZdlPvj>
 8010540:	4620      	mov	r0, r4
 8010542:	bd10      	pop	{r4, pc}

08010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010544:	b507      	push	{r0, r1, r2, lr}
 8010546:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 801054a:	ab01      	add	r3, sp, #4
 801054c:	6809      	ldr	r1, [r1, #0]
 801054e:	6800      	ldr	r0, [r0, #0]
 8010550:	f005 fab4 	bl	8015abc <_ZN8touchgfx6muldivElllRl>
 8010554:	b003      	add	sp, #12
 8010556:	f85d fb04 	ldr.w	pc, [sp], #4

0801055a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 801055a:	6800      	ldr	r0, [r0, #0]
 801055c:	2800      	cmp	r0, #0
 801055e:	bfb9      	ittee	lt
 8010560:	2320      	movlt	r3, #32
 8010562:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010566:	301f      	addge	r0, #31
 8010568:	1140      	asrge	r0, r0, #5
 801056a:	4770      	bx	lr

0801056c <_ZNK8touchgfx4Line17invalidateContentEv>:
 801056c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010570:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010574:	b089      	sub	sp, #36	; 0x24
 8010576:	4604      	mov	r4, r0
 8010578:	b353      	cbz	r3, 80105d0 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 801057a:	6803      	ldr	r3, [r0, #0]
 801057c:	4601      	mov	r1, r0
 801057e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010580:	a802      	add	r0, sp, #8
 8010582:	4798      	blx	r3
 8010584:	2220      	movs	r2, #32
 8010586:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 801058a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801058c:	fb9a f0f2 	sdiv	r0, sl, r2
 8010590:	fb91 f5f2 	sdiv	r5, r1, r2
 8010594:	1b40      	subs	r0, r0, r5
 8010596:	2800      	cmp	r0, #0
 8010598:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801059a:	fb93 f6f2 	sdiv	r6, r3, r2
 801059e:	bfb8      	it	lt
 80105a0:	4240      	neglt	r0, r0
 80105a2:	0076      	lsls	r6, r6, #1
 80105a4:	4286      	cmp	r6, r0
 80105a6:	f8d4 b000 	ldr.w	fp, [r4]
 80105aa:	dc0c      	bgt.n	80105c6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 80105ac:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80105ae:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 80105b2:	fb95 f0f2 	sdiv	r0, r5, r2
 80105b6:	fb98 f7f2 	sdiv	r7, r8, r2
 80105ba:	1bc0      	subs	r0, r0, r7
 80105bc:	2800      	cmp	r0, #0
 80105be:	bfb8      	it	lt
 80105c0:	4240      	neglt	r0, r0
 80105c2:	4286      	cmp	r6, r0
 80105c4:	dd07      	ble.n	80105d6 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80105c6:	f8db 3010 	ldr.w	r3, [fp, #16]
 80105ca:	a902      	add	r1, sp, #8
 80105cc:	4620      	mov	r0, r4
 80105ce:	4798      	blx	r3
 80105d0:	b009      	add	sp, #36	; 0x24
 80105d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105d6:	3301      	adds	r3, #1
 80105d8:	2002      	movs	r0, #2
 80105da:	f10d 0920 	add.w	r9, sp, #32
 80105de:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80105e2:	4103      	asrs	r3, r0
 80105e4:	f849 3d08 	str.w	r3, [r9, #-8]!
 80105e8:	eb01 060a 	add.w	r6, r1, sl
 80105ec:	eb08 0705 	add.w	r7, r8, r5
 80105f0:	fb96 f6f0 	sdiv	r6, r6, r0
 80105f4:	fb97 f7f0 	sdiv	r7, r7, r0
 80105f8:	4648      	mov	r0, r9
 80105fa:	9101      	str	r1, [sp, #4]
 80105fc:	b236      	sxth	r6, r6
 80105fe:	b23f      	sxth	r7, r7
 8010600:	fb96 f6f2 	sdiv	r6, r6, r2
 8010604:	fb97 f7f2 	sdiv	r7, r7, r2
 8010608:	f7ff ffa7 	bl	801055a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801060c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010610:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010614:	9901      	ldr	r1, [sp, #4]
 8010616:	4293      	cmp	r3, r2
 8010618:	fa1f fe87 	uxth.w	lr, r7
 801061c:	fa1f fc86 	uxth.w	ip, r6
 8010620:	eba1 0a0a 	sub.w	sl, r1, sl
 8010624:	b280      	uxth	r0, r0
 8010626:	da54      	bge.n	80106d2 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010628:	ebac 0100 	sub.w	r1, ip, r0
 801062c:	b289      	uxth	r1, r1
 801062e:	4460      	add	r0, ip
 8010630:	f1ba 0f00 	cmp.w	sl, #0
 8010634:	b20e      	sxth	r6, r1
 8010636:	b280      	uxth	r0, r0
 8010638:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801063c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8010640:	da29      	bge.n	8010696 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8010642:	eba8 0505 	sub.w	r5, r8, r5
 8010646:	2d00      	cmp	r5, #0
 8010648:	da2a      	bge.n	80106a0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 801064a:	fa1f f88a 	uxth.w	r8, sl
 801064e:	eba0 0008 	sub.w	r0, r0, r8
 8010652:	fa1f f58c 	uxth.w	r5, ip
 8010656:	4443      	add	r3, r8
 8010658:	f8ad 0014 	strh.w	r0, [sp, #20]
 801065c:	1a59      	subs	r1, r3, r1
 801065e:	ebae 0005 	sub.w	r0, lr, r5
 8010662:	f8ad a010 	strh.w	sl, [sp, #16]
 8010666:	f8ad c012 	strh.w	ip, [sp, #18]
 801066a:	f8ad 0016 	strh.w	r0, [sp, #22]
 801066e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010672:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010676:	f8ad 101c 	strh.w	r1, [sp, #28]
 801067a:	442a      	add	r2, r5
 801067c:	eba2 0e0e 	sub.w	lr, r2, lr
 8010680:	f8ad e01e 	strh.w	lr, [sp, #30]
 8010684:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010688:	a904      	add	r1, sp, #16
 801068a:	4620      	mov	r0, r4
 801068c:	4798      	blx	r3
 801068e:	6823      	ldr	r3, [r4, #0]
 8010690:	4649      	mov	r1, r9
 8010692:	691b      	ldr	r3, [r3, #16]
 8010694:	e79a      	b.n	80105cc <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8010696:	d003      	beq.n	80106a0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010698:	eba8 0505 	sub.w	r5, r8, r5
 801069c:	2d00      	cmp	r5, #0
 801069e:	dcd4      	bgt.n	801064a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 80106a0:	fa1f f88a 	uxth.w	r8, sl
 80106a4:	4443      	add	r3, r8
 80106a6:	fa1f f58c 	uxth.w	r5, ip
 80106aa:	1a59      	subs	r1, r3, r1
 80106ac:	eba0 0008 	sub.w	r0, r0, r8
 80106b0:	ebae 0305 	sub.w	r3, lr, r5
 80106b4:	f8ad 6010 	strh.w	r6, [sp, #16]
 80106b8:	f8ad c012 	strh.w	ip, [sp, #18]
 80106bc:	f8ad 1014 	strh.w	r1, [sp, #20]
 80106c0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80106c4:	f8ad a018 	strh.w	sl, [sp, #24]
 80106c8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80106cc:	f8ad 001c 	strh.w	r0, [sp, #28]
 80106d0:	e7d3      	b.n	801067a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80106d2:	ebae 0100 	sub.w	r1, lr, r0
 80106d6:	b289      	uxth	r1, r1
 80106d8:	4470      	add	r0, lr
 80106da:	f1ba 0f00 	cmp.w	sl, #0
 80106de:	b20f      	sxth	r7, r1
 80106e0:	b280      	uxth	r0, r0
 80106e2:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80106e6:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80106ea:	da20      	bge.n	801072e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80106ec:	eba8 0505 	sub.w	r5, r8, r5
 80106f0:	2d00      	cmp	r5, #0
 80106f2:	da21      	bge.n	8010738 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80106f4:	fa1f f88e 	uxth.w	r8, lr
 80106f8:	fa1f f58a 	uxth.w	r5, sl
 80106fc:	4443      	add	r3, r8
 80106fe:	442a      	add	r2, r5
 8010700:	f8ad e010 	strh.w	lr, [sp, #16]
 8010704:	1b40      	subs	r0, r0, r5
 8010706:	ebac 0e08 	sub.w	lr, ip, r8
 801070a:	1a51      	subs	r1, r2, r1
 801070c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010710:	f8ad a012 	strh.w	sl, [sp, #18]
 8010714:	f8ad e014 	strh.w	lr, [sp, #20]
 8010718:	f8ad 0016 	strh.w	r0, [sp, #22]
 801071c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010720:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010724:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010728:	f8ad 101e 	strh.w	r1, [sp, #30]
 801072c:	e7aa      	b.n	8010684 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 801072e:	d003      	beq.n	8010738 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010730:	eba8 0505 	sub.w	r5, r8, r5
 8010734:	2d00      	cmp	r5, #0
 8010736:	dcdd      	bgt.n	80106f4 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8010738:	fa1f f58e 	uxth.w	r5, lr
 801073c:	fa1f f88a 	uxth.w	r8, sl
 8010740:	4442      	add	r2, r8
 8010742:	442b      	add	r3, r5
 8010744:	f8ad 7012 	strh.w	r7, [sp, #18]
 8010748:	1a51      	subs	r1, r2, r1
 801074a:	ebac 0705 	sub.w	r7, ip, r5
 801074e:	eba0 0008 	sub.w	r0, r0, r8
 8010752:	eba3 0c0c 	sub.w	ip, r3, ip
 8010756:	f8ad e010 	strh.w	lr, [sp, #16]
 801075a:	f8ad 7014 	strh.w	r7, [sp, #20]
 801075e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010762:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010766:	f8ad a01a 	strh.w	sl, [sp, #26]
 801076a:	f8ad c01c 	strh.w	ip, [sp, #28]
 801076e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010772:	e787      	b.n	8010684 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08010774 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010774:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8010778:	fb90 f2f3 	sdiv	r2, r0, r3
 801077c:	fb02 0013 	mls	r0, r2, r3, r0
 8010780:	2800      	cmp	r0, #0
 8010782:	bfb8      	it	lt
 8010784:	18c0      	addlt	r0, r0, r3
 8010786:	285a      	cmp	r0, #90	; 0x5a
 8010788:	4b09      	ldr	r3, [pc, #36]	; (80107b0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 801078a:	dc02      	bgt.n	8010792 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 801078c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010790:	4770      	bx	lr
 8010792:	28b4      	cmp	r0, #180	; 0xb4
 8010794:	dc02      	bgt.n	801079c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8010796:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 801079a:	e7f7      	b.n	801078c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 801079c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80107a0:	bfd4      	ite	le
 80107a2:	38b4      	suble	r0, #180	; 0xb4
 80107a4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80107a8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80107ac:	4240      	negs	r0, r0
 80107ae:	4770      	bx	lr
 80107b0:	0802bd98 	.word	0x0802bd98

080107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80107b4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80107b8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80107ba:	fb90 f2f3 	sdiv	r2, r0, r3
 80107be:	fb02 0013 	mls	r0, r2, r3, r0
 80107c2:	2800      	cmp	r0, #0
 80107c4:	bfb8      	it	lt
 80107c6:	18c0      	addlt	r0, r0, r3
 80107c8:	1144      	asrs	r4, r0, #5
 80107ca:	f000 061f 	and.w	r6, r0, #31
 80107ce:	4620      	mov	r0, r4
 80107d0:	f7ff ffd0 	bl	8010774 <_ZN8touchgfx7CWRUtil4sineEi>
 80107d4:	4605      	mov	r5, r0
 80107d6:	b90e      	cbnz	r6, 80107dc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80107d8:	b002      	add	sp, #8
 80107da:	bd70      	pop	{r4, r5, r6, pc}
 80107dc:	1c60      	adds	r0, r4, #1
 80107de:	f7ff ffc9 	bl	8010774 <_ZN8touchgfx7CWRUtil4sineEi>
 80107e2:	ab01      	add	r3, sp, #4
 80107e4:	2220      	movs	r2, #32
 80107e6:	4631      	mov	r1, r6
 80107e8:	1b40      	subs	r0, r0, r5
 80107ea:	f005 f967 	bl	8015abc <_ZN8touchgfx6muldivElllRl>
 80107ee:	4428      	add	r0, r5
 80107f0:	e7f2      	b.n	80107d8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080107f2 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80107f2:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80107f6:	bf2c      	ite	cs
 80107f8:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80107fc:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8010800:	2300      	movs	r3, #0
 8010802:	1899      	adds	r1, r3, r2
 8010804:	4288      	cmp	r0, r1
 8010806:	bf24      	itt	cs
 8010808:	1853      	addcs	r3, r2, r1
 801080a:	1a40      	subcs	r0, r0, r1
 801080c:	0892      	lsrs	r2, r2, #2
 801080e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8010812:	d1f6      	bne.n	8010802 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8010814:	4618      	mov	r0, r3
 8010816:	4770      	bx	lr

08010818 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8010818:	b510      	push	{r4, lr}
 801081a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801081e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8010822:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8010826:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801082a:	13a4      	asrs	r4, r4, #14
 801082c:	139b      	asrs	r3, r3, #14
 801082e:	429c      	cmp	r4, r3
 8010830:	bfb8      	it	lt
 8010832:	461c      	movlt	r4, r3
 8010834:	2c01      	cmp	r4, #1
 8010836:	dd07      	ble.n	8010848 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8010838:	fb91 f1f4 	sdiv	r1, r1, r4
 801083c:	fb90 f0f4 	sdiv	r0, r0, r4
 8010840:	f7ff ffea 	bl	8010818 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010844:	4360      	muls	r0, r4
 8010846:	bd10      	pop	{r4, pc}
 8010848:	4340      	muls	r0, r0
 801084a:	fb01 0001 	mla	r0, r1, r1, r0
 801084e:	f7ff ffd0 	bl	80107f2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010852:	e7f8      	b.n	8010846 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08010854 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010854:	2800      	cmp	r0, #0
 8010856:	b508      	push	{r3, lr}
 8010858:	da05      	bge.n	8010866 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801085a:	4240      	negs	r0, r0
 801085c:	f7ff fffa 	bl	8010854 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010860:	4240      	negs	r0, r0
 8010862:	b240      	sxtb	r0, r0
 8010864:	bd08      	pop	{r3, pc}
 8010866:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801086a:	dc11      	bgt.n	8010890 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801086c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8010870:	dd09      	ble.n	8010886 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8010872:	4340      	muls	r0, r0
 8010874:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8010878:	f7ff ffbb 	bl	80107f2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 801087c:	f7ff ffea 	bl	8010854 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010880:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010884:	e7ed      	b.n	8010862 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8010886:	3003      	adds	r0, #3
 8010888:	10c0      	asrs	r0, r0, #3
 801088a:	4b02      	ldr	r3, [pc, #8]	; (8010894 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 801088c:	5618      	ldrsb	r0, [r3, r0]
 801088e:	e7e9      	b.n	8010864 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010890:	2000      	movs	r0, #0
 8010892:	e7e7      	b.n	8010864 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010894:	0802bd3c 	.word	0x0802bd3c

08010898 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8010898:	4281      	cmp	r1, r0
 801089a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801089c:	460c      	mov	r4, r1
 801089e:	4615      	mov	r5, r2
 80108a0:	dd07      	ble.n	80108b2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80108a2:	4601      	mov	r1, r0
 80108a4:	4620      	mov	r0, r4
 80108a6:	f7ff fff7 	bl	8010898 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80108aa:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80108ae:	b003      	add	sp, #12
 80108b0:	bd30      	pop	{r4, r5, pc}
 80108b2:	f7ff ffb1 	bl	8010818 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80108b6:	6028      	str	r0, [r5, #0]
 80108b8:	2800      	cmp	r0, #0
 80108ba:	d0f8      	beq.n	80108ae <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80108bc:	4602      	mov	r2, r0
 80108be:	ab01      	add	r3, sp, #4
 80108c0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80108c4:	4620      	mov	r0, r4
 80108c6:	f005 f8f9 	bl	8015abc <_ZN8touchgfx6muldivElllRl>
 80108ca:	f7ff ffc3 	bl	8010854 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80108ce:	e7ee      	b.n	80108ae <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080108d0 <_ZN8touchgfx4LineC1Ev>:
 80108d0:	b510      	push	{r4, lr}
 80108d2:	4604      	mov	r4, r0
 80108d4:	f7ff fe0a 	bl	80104ec <_ZN8touchgfx12CanvasWidgetC1Ev>
 80108d8:	4b0c      	ldr	r3, [pc, #48]	; (801090c <_ZN8touchgfx4LineC1Ev+0x3c>)
 80108da:	6023      	str	r3, [r4, #0]
 80108dc:	2220      	movs	r2, #32
 80108de:	2300      	movs	r3, #0
 80108e0:	63e2      	str	r2, [r4, #60]	; 0x3c
 80108e2:	2212      	movs	r2, #18
 80108e4:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80108e8:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80108ec:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80108f0:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80108f4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80108f8:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80108fc:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8010900:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8010904:	66e2      	str	r2, [r4, #108]	; 0x6c
 8010906:	60a3      	str	r3, [r4, #8]
 8010908:	4620      	mov	r0, r4
 801090a:	bd10      	pop	{r4, pc}
 801090c:	0802be58 	.word	0x0802be58

08010910 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8010910:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010914:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8010916:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010918:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801091a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801091c:	1aff      	subs	r7, r7, r3
 801091e:	4604      	mov	r4, r0
 8010920:	eba5 0502 	sub.w	r5, r5, r2
 8010924:	d142      	bne.n	80109ac <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8010926:	b955      	cbnz	r5, 801093e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8010928:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801092c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8010930:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8010934:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8010938:	b002      	add	sp, #8
 801093a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801093e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8010942:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8010946:	4629      	mov	r1, r5
 8010948:	4642      	mov	r2, r8
 801094a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801094c:	f005 f8d5 	bl	8015afa <_ZN8touchgfx6muldivElll>
 8010950:	2502      	movs	r5, #2
 8010952:	4642      	mov	r2, r8
 8010954:	fb90 f6f5 	sdiv	r6, r0, r5
 8010958:	4639      	mov	r1, r7
 801095a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801095c:	f005 f8cd 	bl	8015afa <_ZN8touchgfx6muldivElll>
 8010960:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8010964:	fb90 f5f5 	sdiv	r5, r0, r5
 8010968:	f1b9 0f00 	cmp.w	r9, #0
 801096c:	d067      	beq.n	8010a3e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801096e:	f1b9 0f02 	cmp.w	r9, #2
 8010972:	d878      	bhi.n	8010a66 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8010974:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010976:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010978:	1b93      	subs	r3, r2, r6
 801097a:	1b5b      	subs	r3, r3, r5
 801097c:	6463      	str	r3, [r4, #68]	; 0x44
 801097e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010980:	18e9      	adds	r1, r5, r3
 8010982:	1b89      	subs	r1, r1, r6
 8010984:	6561      	str	r1, [r4, #84]	; 0x54
 8010986:	1b81      	subs	r1, r0, r6
 8010988:	4429      	add	r1, r5
 801098a:	64a1      	str	r1, [r4, #72]	; 0x48
 801098c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801098e:	4430      	add	r0, r6
 8010990:	186f      	adds	r7, r5, r1
 8010992:	4432      	add	r2, r6
 8010994:	1b49      	subs	r1, r1, r5
 8010996:	4437      	add	r7, r6
 8010998:	4428      	add	r0, r5
 801099a:	4431      	add	r1, r6
 801099c:	1b52      	subs	r2, r2, r5
 801099e:	1b5b      	subs	r3, r3, r5
 80109a0:	65a7      	str	r7, [r4, #88]	; 0x58
 80109a2:	64e0      	str	r0, [r4, #76]	; 0x4c
 80109a4:	65e1      	str	r1, [r4, #92]	; 0x5c
 80109a6:	6522      	str	r2, [r4, #80]	; 0x50
 80109a8:	1b9b      	subs	r3, r3, r6
 80109aa:	e05b      	b.n	8010a64 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80109ac:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80109b0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80109b4:	2d00      	cmp	r5, #0
 80109b6:	d0c6      	beq.n	8010946 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80109b8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80109bc:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80109c0:	fb93 f2f8 	sdiv	r2, r3, r8
 80109c4:	fb08 3312 	mls	r3, r8, r2, r3
 80109c8:	b353      	cbz	r3, 8010a20 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80109ca:	fb98 f2f3 	sdiv	r2, r8, r3
 80109ce:	fb03 8812 	mls	r8, r3, r2, r8
 80109d2:	f1b8 0f00 	cmp.w	r8, #0
 80109d6:	d1f3      	bne.n	80109c0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80109d8:	2b01      	cmp	r3, #1
 80109da:	bf1c      	itt	ne
 80109dc:	fb95 f5f3 	sdivne	r5, r5, r3
 80109e0:	fb97 f7f3 	sdivne	r7, r7, r3
 80109e4:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80109e8:	f24b 5104 	movw	r1, #46340	; 0xb504
 80109ec:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80109f0:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80109f4:	428b      	cmp	r3, r1
 80109f6:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80109fa:	4608      	mov	r0, r1
 80109fc:	dd01      	ble.n	8010a02 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80109fe:	428a      	cmp	r2, r1
 8010a00:	dc10      	bgt.n	8010a24 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8010a02:	fb90 f3f3 	sdiv	r3, r0, r3
 8010a06:	fb90 f2f2 	sdiv	r2, r0, r2
 8010a0a:	4293      	cmp	r3, r2
 8010a0c:	bfa8      	it	ge
 8010a0e:	4613      	movge	r3, r2
 8010a10:	435f      	muls	r7, r3
 8010a12:	435d      	muls	r5, r3
 8010a14:	4629      	mov	r1, r5
 8010a16:	4638      	mov	r0, r7
 8010a18:	f7ff fefe 	bl	8010818 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010a1c:	4680      	mov	r8, r0
 8010a1e:	e792      	b.n	8010946 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8010a20:	4643      	mov	r3, r8
 8010a22:	e7d9      	b.n	80109d8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8010a24:	fb93 f3f1 	sdiv	r3, r3, r1
 8010a28:	fb92 f2f1 	sdiv	r2, r2, r1
 8010a2c:	4293      	cmp	r3, r2
 8010a2e:	bfcc      	ite	gt
 8010a30:	3301      	addgt	r3, #1
 8010a32:	1c53      	addle	r3, r2, #1
 8010a34:	fb97 f7f3 	sdiv	r7, r7, r3
 8010a38:	fb95 f5f3 	sdiv	r5, r5, r3
 8010a3c:	e7ea      	b.n	8010a14 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8010a3e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010a40:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010a42:	1b93      	subs	r3, r2, r6
 8010a44:	6463      	str	r3, [r4, #68]	; 0x44
 8010a46:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010a48:	18e9      	adds	r1, r5, r3
 8010a4a:	6561      	str	r1, [r4, #84]	; 0x54
 8010a4c:	1b81      	subs	r1, r0, r6
 8010a4e:	64a1      	str	r1, [r4, #72]	; 0x48
 8010a50:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010a52:	4430      	add	r0, r6
 8010a54:	186f      	adds	r7, r5, r1
 8010a56:	4432      	add	r2, r6
 8010a58:	1b49      	subs	r1, r1, r5
 8010a5a:	65a7      	str	r7, [r4, #88]	; 0x58
 8010a5c:	64e0      	str	r0, [r4, #76]	; 0x4c
 8010a5e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010a60:	6522      	str	r2, [r4, #80]	; 0x50
 8010a62:	1b5b      	subs	r3, r3, r5
 8010a64:	6623      	str	r3, [r4, #96]	; 0x60
 8010a66:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8010a68:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8010a6a:	9200      	str	r2, [sp, #0]
 8010a6c:	9301      	str	r3, [sp, #4]
 8010a6e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8010a72:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8010a76:	680f      	ldr	r7, [r1, #0]
 8010a78:	9800      	ldr	r0, [sp, #0]
 8010a7a:	42ba      	cmp	r2, r7
 8010a7c:	bfa8      	it	ge
 8010a7e:	463a      	movge	r2, r7
 8010a80:	4287      	cmp	r7, r0
 8010a82:	bfc8      	it	gt
 8010a84:	9700      	strgt	r7, [sp, #0]
 8010a86:	690f      	ldr	r7, [r1, #16]
 8010a88:	9801      	ldr	r0, [sp, #4]
 8010a8a:	42bb      	cmp	r3, r7
 8010a8c:	bfa8      	it	ge
 8010a8e:	463b      	movge	r3, r7
 8010a90:	3104      	adds	r1, #4
 8010a92:	4287      	cmp	r7, r0
 8010a94:	bfc8      	it	gt
 8010a96:	9701      	strgt	r7, [sp, #4]
 8010a98:	458c      	cmp	ip, r1
 8010a9a:	d1ec      	bne.n	8010a76 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8010a9c:	4668      	mov	r0, sp
 8010a9e:	2720      	movs	r7, #32
 8010aa0:	fb92 f8f7 	sdiv	r8, r2, r7
 8010aa4:	fb93 f7f7 	sdiv	r7, r3, r7
 8010aa8:	f7ff fd57 	bl	801055a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010aac:	4682      	mov	sl, r0
 8010aae:	a801      	add	r0, sp, #4
 8010ab0:	f7ff fd53 	bl	801055a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010ab4:	ebaa 0208 	sub.w	r2, sl, r8
 8010ab8:	1bc0      	subs	r0, r0, r7
 8010aba:	f1b9 0f01 	cmp.w	r9, #1
 8010abe:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8010ac2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8010ac6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8010aca:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8010ace:	f47f af33 	bne.w	8010938 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8010ad2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8010ad4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010ad6:	1b83      	subs	r3, r0, r6
 8010ad8:	6463      	str	r3, [r4, #68]	; 0x44
 8010ada:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010adc:	18ea      	adds	r2, r5, r3
 8010ade:	6562      	str	r2, [r4, #84]	; 0x54
 8010ae0:	1b8a      	subs	r2, r1, r6
 8010ae2:	64a2      	str	r2, [r4, #72]	; 0x48
 8010ae4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010ae6:	4431      	add	r1, r6
 8010ae8:	18af      	adds	r7, r5, r2
 8010aea:	4406      	add	r6, r0
 8010aec:	1b52      	subs	r2, r2, r5
 8010aee:	1b5d      	subs	r5, r3, r5
 8010af0:	65a7      	str	r7, [r4, #88]	; 0x58
 8010af2:	64e1      	str	r1, [r4, #76]	; 0x4c
 8010af4:	65e2      	str	r2, [r4, #92]	; 0x5c
 8010af6:	6526      	str	r6, [r4, #80]	; 0x50
 8010af8:	6625      	str	r5, [r4, #96]	; 0x60
 8010afa:	e71d      	b.n	8010938 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08010afc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8010afc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010afe:	428b      	cmp	r3, r1
 8010b00:	d102      	bne.n	8010b08 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8010b02:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8010b04:	4293      	cmp	r3, r2
 8010b06:	d003      	beq.n	8010b10 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8010b08:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8010b0c:	f7ff bf00 	b.w	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8010b10:	4770      	bx	lr

08010b12 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8010b12:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8010b14:	428b      	cmp	r3, r1
 8010b16:	d102      	bne.n	8010b1e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8010b18:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8010b1a:	4293      	cmp	r3, r2
 8010b1c:	d003      	beq.n	8010b26 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8010b1e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8010b22:	f7ff bef5 	b.w	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8010b26:	4770      	bx	lr

08010b28 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8010b28:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8010b2c:	f7ff bef0 	b.w	8010910 <_ZN8touchgfx4Line17updateCachedShapeEv>

08010b30 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8010b30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b34:	b0a0      	sub	sp, #128	; 0x80
 8010b36:	4604      	mov	r4, r0
 8010b38:	460a      	mov	r2, r1
 8010b3a:	4601      	mov	r1, r0
 8010b3c:	a804      	add	r0, sp, #16
 8010b3e:	f014 fc47 	bl	80253d0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8010b42:	2300      	movs	r3, #0
 8010b44:	9301      	str	r3, [sp, #4]
 8010b46:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8010b4a:	2b01      	cmp	r3, #1
 8010b4c:	d17c      	bne.n	8010c48 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8010b4e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010b50:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010b52:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8010b54:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8010b56:	1ac0      	subs	r0, r0, r3
 8010b58:	eba1 0102 	sub.w	r1, r1, r2
 8010b5c:	d437      	bmi.n	8010bce <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8010b5e:	2900      	cmp	r1, #0
 8010b60:	aa01      	add	r2, sp, #4
 8010b62:	db2e      	blt.n	8010bc2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8010b64:	f7ff fe98 	bl	8010898 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010b68:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8010b6c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8010b6e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8010b70:	a804      	add	r0, sp, #16
 8010b72:	f014 fdad 	bl	80256d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8010b76:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8010b78:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8010b7a:	a804      	add	r0, sp, #16
 8010b7c:	f014 fdf5 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010b80:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8010b82:	2db3      	cmp	r5, #179	; 0xb3
 8010b84:	dc33      	bgt.n	8010bee <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8010b86:	eba6 0805 	sub.w	r8, r6, r5
 8010b8a:	4640      	mov	r0, r8
 8010b8c:	f7ff fdf2 	bl	8010774 <_ZN8touchgfx7CWRUtil4sineEi>
 8010b90:	a902      	add	r1, sp, #8
 8010b92:	9002      	str	r0, [sp, #8]
 8010b94:	a801      	add	r0, sp, #4
 8010b96:	f7ff fcd5 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010b9a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010b9c:	1847      	adds	r7, r0, r1
 8010b9e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8010ba2:	f7ff fde7 	bl	8010774 <_ZN8touchgfx7CWRUtil4sineEi>
 8010ba6:	a903      	add	r1, sp, #12
 8010ba8:	9003      	str	r0, [sp, #12]
 8010baa:	a801      	add	r0, sp, #4
 8010bac:	f7ff fcca 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010bb0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010bb2:	4639      	mov	r1, r7
 8010bb4:	1a12      	subs	r2, r2, r0
 8010bb6:	a804      	add	r0, sp, #16
 8010bb8:	f014 fdd7 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010bbc:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8010bbe:	441d      	add	r5, r3
 8010bc0:	e7df      	b.n	8010b82 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8010bc2:	4249      	negs	r1, r1
 8010bc4:	f7ff fe68 	bl	8010898 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010bc8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8010bcc:	e7ce      	b.n	8010b6c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8010bce:	2900      	cmp	r1, #0
 8010bd0:	f1c0 0000 	rsb	r0, r0, #0
 8010bd4:	aa01      	add	r2, sp, #4
 8010bd6:	db04      	blt.n	8010be2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8010bd8:	f7ff fe5e 	bl	8010898 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010bdc:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8010be0:	e7c4      	b.n	8010b6c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8010be2:	4249      	negs	r1, r1
 8010be4:	f7ff fe58 	bl	8010898 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010be8:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8010bec:	e7be      	b.n	8010b6c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8010bee:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8010bf0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8010bf2:	a804      	add	r0, sp, #16
 8010bf4:	f014 fdb9 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010bf8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8010bfa:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8010bfc:	a804      	add	r0, sp, #16
 8010bfe:	f014 fdb4 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010c02:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8010c04:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8010c08:	2d00      	cmp	r5, #0
 8010c0a:	dd31      	ble.n	8010c70 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8010c0c:	eb05 0806 	add.w	r8, r5, r6
 8010c10:	4640      	mov	r0, r8
 8010c12:	f7ff fdaf 	bl	8010774 <_ZN8touchgfx7CWRUtil4sineEi>
 8010c16:	a902      	add	r1, sp, #8
 8010c18:	9002      	str	r0, [sp, #8]
 8010c1a:	a801      	add	r0, sp, #4
 8010c1c:	f7ff fc92 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010c20:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010c22:	1847      	adds	r7, r0, r1
 8010c24:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8010c28:	f7ff fda4 	bl	8010774 <_ZN8touchgfx7CWRUtil4sineEi>
 8010c2c:	a903      	add	r1, sp, #12
 8010c2e:	9003      	str	r0, [sp, #12]
 8010c30:	a801      	add	r0, sp, #4
 8010c32:	f7ff fc87 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010c36:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8010c38:	4639      	mov	r1, r7
 8010c3a:	1a12      	subs	r2, r2, r0
 8010c3c:	a804      	add	r0, sp, #16
 8010c3e:	f014 fd94 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010c42:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8010c44:	1aed      	subs	r5, r5, r3
 8010c46:	e7df      	b.n	8010c08 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8010c48:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8010c4a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8010c4c:	a804      	add	r0, sp, #16
 8010c4e:	f014 fd3f 	bl	80256d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8010c52:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8010c54:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8010c56:	a804      	add	r0, sp, #16
 8010c58:	f014 fd87 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010c5c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8010c5e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8010c60:	a804      	add	r0, sp, #16
 8010c62:	f014 fd82 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010c66:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8010c68:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8010c6a:	a804      	add	r0, sp, #16
 8010c6c:	f014 fd7d 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010c70:	21ff      	movs	r1, #255	; 0xff
 8010c72:	a804      	add	r0, sp, #16
 8010c74:	f014 fc68 	bl	8025548 <_ZN8touchgfx6Canvas6renderEh>
 8010c78:	4b04      	ldr	r3, [pc, #16]	; (8010c8c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8010c7a:	9304      	str	r3, [sp, #16]
 8010c7c:	4604      	mov	r4, r0
 8010c7e:	a80c      	add	r0, sp, #48	; 0x30
 8010c80:	f001 f8cc 	bl	8011e1c <_ZN8touchgfx7OutlineD1Ev>
 8010c84:	4620      	mov	r0, r4
 8010c86:	b020      	add	sp, #128	; 0x80
 8010c88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c8c:	0802c680 	.word	0x0802c680

08010c90 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8010c90:	2000      	movs	r0, #0
 8010c92:	4770      	bx	lr

08010c94 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8010c94:	4b07      	ldr	r3, [pc, #28]	; (8010cb4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8010c96:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010c98:	881b      	ldrh	r3, [r3, #0]
 8010c9a:	4293      	cmp	r3, r2
 8010c9c:	bf81      	itttt	hi
 8010c9e:	4b06      	ldrhi	r3, [pc, #24]	; (8010cb8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8010ca0:	681b      	ldrhi	r3, [r3, #0]
 8010ca2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8010ca6:	7858      	ldrbhi	r0, [r3, #1]
 8010ca8:	bf8c      	ite	hi
 8010caa:	f000 0003 	andhi.w	r0, r0, #3
 8010cae:	2000      	movls	r0, #0
 8010cb0:	4770      	bx	lr
 8010cb2:	bf00      	nop
 8010cb4:	20013818 	.word	0x20013818
 8010cb8:	20013814 	.word	0x20013814

08010cbc <_ZN8touchgfx8TextAreaD1Ev>:
 8010cbc:	4770      	bx	lr
	...

08010cc0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8010cc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010cc4:	4b10      	ldr	r3, [pc, #64]	; (8010d08 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8010cc6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010cc8:	881b      	ldrh	r3, [r3, #0]
 8010cca:	428b      	cmp	r3, r1
 8010ccc:	4604      	mov	r4, r0
 8010cce:	d918      	bls.n	8010d02 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8010cd0:	6803      	ldr	r3, [r0, #0]
 8010cd2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8010cd4:	4b0d      	ldr	r3, [pc, #52]	; (8010d0c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8010cd6:	6818      	ldr	r0, [r3, #0]
 8010cd8:	f7f6 fcba 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8010cdc:	6823      	ldr	r3, [r4, #0]
 8010cde:	4606      	mov	r6, r0
 8010ce0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010ce2:	4620      	mov	r0, r4
 8010ce4:	4798      	blx	r3
 8010ce6:	6823      	ldr	r3, [r4, #0]
 8010ce8:	4607      	mov	r7, r0
 8010cea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010cee:	4620      	mov	r0, r4
 8010cf0:	4798      	blx	r3
 8010cf2:	463a      	mov	r2, r7
 8010cf4:	4603      	mov	r3, r0
 8010cf6:	4631      	mov	r1, r6
 8010cf8:	4620      	mov	r0, r4
 8010cfa:	46ac      	mov	ip, r5
 8010cfc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010d00:	4760      	bx	ip
 8010d02:	2000      	movs	r0, #0
 8010d04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d08:	20013818 	.word	0x20013818
 8010d0c:	20013820 	.word	0x20013820

08010d10 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8010d10:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010d14:	4b17      	ldr	r3, [pc, #92]	; (8010d74 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8010d16:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010d18:	881b      	ldrh	r3, [r3, #0]
 8010d1a:	428b      	cmp	r3, r1
 8010d1c:	4604      	mov	r4, r0
 8010d1e:	d926      	bls.n	8010d6e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8010d20:	4b15      	ldr	r3, [pc, #84]	; (8010d78 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8010d22:	681b      	ldr	r3, [r3, #0]
 8010d24:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8010d28:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8010d2c:	4b13      	ldr	r3, [pc, #76]	; (8010d7c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8010d2e:	7855      	ldrb	r5, [r2, #1]
 8010d30:	681b      	ldr	r3, [r3, #0]
 8010d32:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8010d36:	6833      	ldr	r3, [r6, #0]
 8010d38:	69df      	ldr	r7, [r3, #28]
 8010d3a:	4b11      	ldr	r3, [pc, #68]	; (8010d80 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8010d3c:	6818      	ldr	r0, [r3, #0]
 8010d3e:	f7f6 fc87 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8010d42:	6823      	ldr	r3, [r4, #0]
 8010d44:	4680      	mov	r8, r0
 8010d46:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010d48:	4620      	mov	r0, r4
 8010d4a:	4798      	blx	r3
 8010d4c:	6823      	ldr	r3, [r4, #0]
 8010d4e:	4681      	mov	r9, r0
 8010d50:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010d54:	4620      	mov	r0, r4
 8010d56:	4798      	blx	r3
 8010d58:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8010d5c:	9000      	str	r0, [sp, #0]
 8010d5e:	464b      	mov	r3, r9
 8010d60:	4642      	mov	r2, r8
 8010d62:	4629      	mov	r1, r5
 8010d64:	4630      	mov	r0, r6
 8010d66:	47b8      	blx	r7
 8010d68:	b003      	add	sp, #12
 8010d6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010d6e:	2000      	movs	r0, #0
 8010d70:	e7fa      	b.n	8010d68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8010d72:	bf00      	nop
 8010d74:	20013818 	.word	0x20013818
 8010d78:	20013814 	.word	0x20013814
 8010d7c:	2001381c 	.word	0x2001381c
 8010d80:	20013820 	.word	0x20013820

08010d84 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8010d84:	b40e      	push	{r1, r2, r3}
 8010d86:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010d8a:	4b2f      	ldr	r3, [pc, #188]	; (8010e48 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8010d8c:	881a      	ldrh	r2, [r3, #0]
 8010d8e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8010d90:	429a      	cmp	r2, r3
 8010d92:	b09d      	sub	sp, #116	; 0x74
 8010d94:	4604      	mov	r4, r0
 8010d96:	d954      	bls.n	8010e42 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8010d98:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8010e4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8010d9c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8010e50 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8010da0:	aa26      	add	r2, sp, #152	; 0x98
 8010da2:	9202      	str	r2, [sp, #8]
 8010da4:	f8d9 2000 	ldr.w	r2, [r9]
 8010da8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8010dac:	f8d8 3000 	ldr.w	r3, [r8]
 8010db0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010db4:	682b      	ldr	r3, [r5, #0]
 8010db6:	4628      	mov	r0, r5
 8010db8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010dba:	4798      	blx	r3
 8010dbc:	b207      	sxth	r7, r0
 8010dbe:	4606      	mov	r6, r0
 8010dc0:	a803      	add	r0, sp, #12
 8010dc2:	f005 fa57 	bl	8016274 <_ZN8touchgfx12TextProviderC1Ev>
 8010dc6:	682b      	ldr	r3, [r5, #0]
 8010dc8:	4628      	mov	r0, r5
 8010dca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010dcc:	4798      	blx	r3
 8010dce:	682b      	ldr	r3, [r5, #0]
 8010dd0:	4682      	mov	sl, r0
 8010dd2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010dd4:	4628      	mov	r0, r5
 8010dd6:	4798      	blx	r3
 8010dd8:	4653      	mov	r3, sl
 8010dda:	9000      	str	r0, [sp, #0]
 8010ddc:	9a02      	ldr	r2, [sp, #8]
 8010dde:	9925      	ldr	r1, [sp, #148]	; 0x94
 8010de0:	a803      	add	r0, sp, #12
 8010de2:	f005 faa2 	bl	801632a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010de6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010de8:	f8d9 3000 	ldr.w	r3, [r9]
 8010dec:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8010df0:	8925      	ldrh	r5, [r4, #8]
 8010df2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8010df6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8010dfa:	eba5 050c 	sub.w	r5, r5, ip
 8010dfe:	784a      	ldrb	r2, [r1, #1]
 8010e00:	f8d8 3000 	ldr.w	r3, [r8]
 8010e04:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8010e08:	b22d      	sxth	r5, r5
 8010e0a:	9500      	str	r5, [sp, #0]
 8010e0c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8010e10:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8010e14:	a803      	add	r0, sp, #12
 8010e16:	f002 feed 	bl	8013bf4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8010e1a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8010e1e:	18b9      	adds	r1, r7, r2
 8010e20:	2900      	cmp	r1, #0
 8010e22:	b203      	sxth	r3, r0
 8010e24:	dd0b      	ble.n	8010e3e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8010e26:	3b01      	subs	r3, #1
 8010e28:	fb13 f302 	smulbb	r3, r3, r2
 8010e2c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8010e30:	b21f      	sxth	r7, r3
 8010e32:	4638      	mov	r0, r7
 8010e34:	b01d      	add	sp, #116	; 0x74
 8010e36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010e3a:	b003      	add	sp, #12
 8010e3c:	4770      	bx	lr
 8010e3e:	2b00      	cmp	r3, #0
 8010e40:	dcf7      	bgt.n	8010e32 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8010e42:	2700      	movs	r7, #0
 8010e44:	e7f5      	b.n	8010e32 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8010e46:	bf00      	nop
 8010e48:	20013818 	.word	0x20013818
 8010e4c:	20013814 	.word	0x20013814
 8010e50:	2001381c 	.word	0x2001381c

08010e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8010e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e58:	4bbc      	ldr	r3, [pc, #752]	; (801114c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8010e5a:	460c      	mov	r4, r1
 8010e5c:	881b      	ldrh	r3, [r3, #0]
 8010e5e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8010e60:	428b      	cmp	r3, r1
 8010e62:	b0a9      	sub	sp, #164	; 0xa4
 8010e64:	4680      	mov	r8, r0
 8010e66:	d809      	bhi.n	8010e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8010e68:	2300      	movs	r3, #0
 8010e6a:	f04f 32ff 	mov.w	r2, #4294967295
 8010e6e:	e9c0 3200 	strd	r3, r2, [r0]
 8010e72:	6083      	str	r3, [r0, #8]
 8010e74:	4640      	mov	r0, r8
 8010e76:	b029      	add	sp, #164	; 0xa4
 8010e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e7c:	4eb4      	ldr	r6, [pc, #720]	; (8011150 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8010e7e:	6833      	ldr	r3, [r6, #0]
 8010e80:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8010e84:	4bb3      	ldr	r3, [pc, #716]	; (8011154 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8010e86:	681b      	ldr	r3, [r3, #0]
 8010e88:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010e8c:	4bb2      	ldr	r3, [pc, #712]	; (8011158 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8010e8e:	6818      	ldr	r0, [r3, #0]
 8010e90:	f7f6 fbde 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8010e94:	682b      	ldr	r3, [r5, #0]
 8010e96:	4681      	mov	r9, r0
 8010e98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010e9a:	4628      	mov	r0, r5
 8010e9c:	4798      	blx	r3
 8010e9e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8010ea0:	b203      	sxth	r3, r0
 8010ea2:	4407      	add	r7, r0
 8010ea4:	9304      	str	r3, [sp, #16]
 8010ea6:	b2bb      	uxth	r3, r7
 8010ea8:	9303      	str	r3, [sp, #12]
 8010eaa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8010eae:	4682      	mov	sl, r0
 8010eb0:	a80f      	add	r0, sp, #60	; 0x3c
 8010eb2:	2b00      	cmp	r3, #0
 8010eb4:	f040 80a6 	bne.w	8011004 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8010eb8:	f005 f9dc 	bl	8016274 <_ZN8touchgfx12TextProviderC1Ev>
 8010ebc:	682b      	ldr	r3, [r5, #0]
 8010ebe:	4628      	mov	r0, r5
 8010ec0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010ec2:	4798      	blx	r3
 8010ec4:	682b      	ldr	r3, [r5, #0]
 8010ec6:	4606      	mov	r6, r0
 8010ec8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010eca:	4628      	mov	r0, r5
 8010ecc:	4798      	blx	r3
 8010ece:	6823      	ldr	r3, [r4, #0]
 8010ed0:	4607      	mov	r7, r0
 8010ed2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010ed4:	4620      	mov	r0, r4
 8010ed6:	4798      	blx	r3
 8010ed8:	6823      	ldr	r3, [r4, #0]
 8010eda:	4683      	mov	fp, r0
 8010edc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010ee0:	4620      	mov	r0, r4
 8010ee2:	4798      	blx	r3
 8010ee4:	463b      	mov	r3, r7
 8010ee6:	e9cd b000 	strd	fp, r0, [sp]
 8010eea:	4649      	mov	r1, r9
 8010eec:	4632      	mov	r2, r6
 8010eee:	a80f      	add	r0, sp, #60	; 0x3c
 8010ef0:	f005 fa30 	bl	8016354 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8010ef4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010ef8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011150 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8010efc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010f00:	f04f 0600 	mov.w	r6, #0
 8010f04:	bf0c      	ite	eq
 8010f06:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8010f0a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8010f0e:	4637      	mov	r7, r6
 8010f10:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010f12:	f8db 3000 	ldr.w	r3, [fp]
 8010f16:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010f1a:	4629      	mov	r1, r5
 8010f1c:	785b      	ldrb	r3, [r3, #1]
 8010f1e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010f22:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010f26:	a80f      	add	r0, sp, #60	; 0x3c
 8010f28:	f002 fb7f 	bl	801362a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010f2c:	9b03      	ldr	r3, [sp, #12]
 8010f2e:	4286      	cmp	r6, r0
 8010f30:	bfb8      	it	lt
 8010f32:	4606      	movlt	r6, r0
 8010f34:	3701      	adds	r7, #1
 8010f36:	eba9 0903 	sub.w	r9, r9, r3
 8010f3a:	a80f      	add	r0, sp, #60	; 0x3c
 8010f3c:	b236      	sxth	r6, r6
 8010f3e:	b2bf      	uxth	r7, r7
 8010f40:	fa0f f989 	sxth.w	r9, r9
 8010f44:	f005 f9bd 	bl	80162c2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8010f48:	b918      	cbnz	r0, 8010f52 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8010f4a:	7a2b      	ldrb	r3, [r5, #8]
 8010f4c:	444b      	add	r3, r9
 8010f4e:	2b00      	cmp	r3, #0
 8010f50:	dcde      	bgt.n	8010f10 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8010f52:	9b03      	ldr	r3, [sp, #12]
 8010f54:	9a04      	ldr	r2, [sp, #16]
 8010f56:	f895 9009 	ldrb.w	r9, [r5, #9]
 8010f5a:	fb13 f707 	smulbb	r7, r3, r7
 8010f5e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010f60:	1aff      	subs	r7, r7, r3
 8010f62:	b2bf      	uxth	r7, r7
 8010f64:	b23b      	sxth	r3, r7
 8010f66:	429a      	cmp	r2, r3
 8010f68:	bfa8      	it	ge
 8010f6a:	4657      	movge	r7, sl
 8010f6c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010f70:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010f74:	6823      	ldr	r3, [r4, #0]
 8010f76:	bf08      	it	eq
 8010f78:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8010f7c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010f7e:	bf18      	it	ne
 8010f80:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8010f84:	4620      	mov	r0, r4
 8010f86:	4798      	blx	r3
 8010f88:	444f      	add	r7, r9
 8010f8a:	fa1f f987 	uxth.w	r9, r7
 8010f8e:	2801      	cmp	r0, #1
 8010f90:	fa0f f789 	sxth.w	r7, r9
 8010f94:	b2b3      	uxth	r3, r6
 8010f96:	f000 80e1 	beq.w	801115c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8010f9a:	2802      	cmp	r0, #2
 8010f9c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8010fa0:	f000 80e2 	beq.w	8011168 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8010fa4:	7aea      	ldrb	r2, [r5, #11]
 8010fa6:	7b2d      	ldrb	r5, [r5, #12]
 8010fa8:	b236      	sxth	r6, r6
 8010faa:	1ab6      	subs	r6, r6, r2
 8010fac:	442a      	add	r2, r5
 8010fae:	4413      	add	r3, r2
 8010fb0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8010fb4:	fa1f fa86 	uxth.w	sl, r6
 8010fb8:	b29b      	uxth	r3, r3
 8010fba:	2a02      	cmp	r2, #2
 8010fbc:	fa0f fb8a 	sxth.w	fp, sl
 8010fc0:	b21e      	sxth	r6, r3
 8010fc2:	f000 80d5 	beq.w	8011170 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8010fc6:	2a03      	cmp	r2, #3
 8010fc8:	f000 80dd 	beq.w	8011186 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8010fcc:	2a01      	cmp	r2, #1
 8010fce:	f040 80e5 	bne.w	801119c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8010fd2:	8925      	ldrh	r5, [r4, #8]
 8010fd4:	4633      	mov	r3, r6
 8010fd6:	eba5 0909 	sub.w	r9, r5, r9
 8010fda:	463e      	mov	r6, r7
 8010fdc:	465d      	mov	r5, fp
 8010fde:	461f      	mov	r7, r3
 8010fe0:	fa0f fb89 	sxth.w	fp, r9
 8010fe4:	4b5c      	ldr	r3, [pc, #368]	; (8011158 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8010fe6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010fe8:	6818      	ldr	r0, [r3, #0]
 8010fea:	f7f6 fb31 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8010fee:	f8a8 b000 	strh.w	fp, [r8]
 8010ff2:	f8a8 5002 	strh.w	r5, [r8, #2]
 8010ff6:	f8a8 6004 	strh.w	r6, [r8, #4]
 8010ffa:	f8a8 7006 	strh.w	r7, [r8, #6]
 8010ffe:	f8c8 0008 	str.w	r0, [r8, #8]
 8011002:	e737      	b.n	8010e74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011004:	f005 f936 	bl	8016274 <_ZN8touchgfx12TextProviderC1Ev>
 8011008:	682b      	ldr	r3, [r5, #0]
 801100a:	4628      	mov	r0, r5
 801100c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801100e:	4798      	blx	r3
 8011010:	682b      	ldr	r3, [r5, #0]
 8011012:	4607      	mov	r7, r0
 8011014:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011016:	4628      	mov	r0, r5
 8011018:	4798      	blx	r3
 801101a:	6823      	ldr	r3, [r4, #0]
 801101c:	4683      	mov	fp, r0
 801101e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011020:	4620      	mov	r0, r4
 8011022:	4798      	blx	r3
 8011024:	6822      	ldr	r2, [r4, #0]
 8011026:	9005      	str	r0, [sp, #20]
 8011028:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801102c:	4620      	mov	r0, r4
 801102e:	4790      	blx	r2
 8011030:	9b05      	ldr	r3, [sp, #20]
 8011032:	9001      	str	r0, [sp, #4]
 8011034:	463a      	mov	r2, r7
 8011036:	4649      	mov	r1, r9
 8011038:	9300      	str	r3, [sp, #0]
 801103a:	a80f      	add	r0, sp, #60	; 0x3c
 801103c:	465b      	mov	r3, fp
 801103e:	f005 f989 	bl	8016354 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011042:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011046:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801104a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801104c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011050:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011054:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011058:	bf0a      	itet	eq
 801105a:	464a      	moveq	r2, r9
 801105c:	461a      	movne	r2, r3
 801105e:	4699      	moveq	r9, r3
 8011060:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011064:	1ad2      	subs	r2, r2, r3
 8011066:	6833      	ldr	r3, [r6, #0]
 8011068:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801106c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011070:	af0f      	add	r7, sp, #60	; 0x3c
 8011072:	7859      	ldrb	r1, [r3, #1]
 8011074:	9707      	str	r7, [sp, #28]
 8011076:	2300      	movs	r3, #0
 8011078:	f3c1 0181 	ubfx	r1, r1, #2, #2
 801107c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011080:	f88d 1020 	strb.w	r1, [sp, #32]
 8011084:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011088:	9509      	str	r5, [sp, #36]	; 0x24
 801108a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801108e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011092:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011096:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801109a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801109e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80110a2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80110a6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80110aa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80110ae:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80110b2:	b350      	cbz	r0, 801110a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80110b4:	682b      	ldr	r3, [r5, #0]
 80110b6:	4628      	mov	r0, r5
 80110b8:	695b      	ldr	r3, [r3, #20]
 80110ba:	4798      	blx	r3
 80110bc:	4607      	mov	r7, r0
 80110be:	b320      	cbz	r0, 801110a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80110c0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80110c2:	6803      	ldr	r3, [r0, #0]
 80110c4:	4639      	mov	r1, r7
 80110c6:	68db      	ldr	r3, [r3, #12]
 80110c8:	4798      	blx	r3
 80110ca:	4606      	mov	r6, r0
 80110cc:	b1e8      	cbz	r0, 801110a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80110ce:	7b43      	ldrb	r3, [r0, #13]
 80110d0:	7a82      	ldrb	r2, [r0, #10]
 80110d2:	005b      	lsls	r3, r3, #1
 80110d4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80110d8:	4313      	orrs	r3, r2
 80110da:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80110de:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80110e2:	2b06      	cmp	r3, #6
 80110e4:	d111      	bne.n	801110a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80110e6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80110e8:	6803      	ldr	r3, [r0, #0]
 80110ea:	4632      	mov	r2, r6
 80110ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80110ee:	4639      	mov	r1, r7
 80110f0:	4798      	blx	r3
 80110f2:	7b73      	ldrb	r3, [r6, #13]
 80110f4:	005b      	lsls	r3, r3, #1
 80110f6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80110fa:	7ab3      	ldrb	r3, [r6, #10]
 80110fc:	4313      	orrs	r3, r2
 80110fe:	4418      	add	r0, r3
 8011100:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011104:	4418      	add	r0, r3
 8011106:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801110a:	2600      	movs	r6, #0
 801110c:	4637      	mov	r7, r6
 801110e:	a806      	add	r0, sp, #24
 8011110:	f002 fc6c 	bl	80139ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011114:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011118:	9b03      	ldr	r3, [sp, #12]
 801111a:	4286      	cmp	r6, r0
 801111c:	eba9 0903 	sub.w	r9, r9, r3
 8011120:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011124:	bfb8      	it	lt
 8011126:	4606      	movlt	r6, r0
 8011128:	3701      	adds	r7, #1
 801112a:	b236      	sxth	r6, r6
 801112c:	b2bf      	uxth	r7, r7
 801112e:	fa0f f989 	sxth.w	r9, r9
 8011132:	2b00      	cmp	r3, #0
 8011134:	f43f af0d 	beq.w	8010f52 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011138:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801113c:	2b00      	cmp	r3, #0
 801113e:	f47f af08 	bne.w	8010f52 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011142:	7a2b      	ldrb	r3, [r5, #8]
 8011144:	444b      	add	r3, r9
 8011146:	2b00      	cmp	r3, #0
 8011148:	dce1      	bgt.n	801110e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801114a:	e702      	b.n	8010f52 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801114c:	20013818 	.word	0x20013818
 8011150:	20013814 	.word	0x20013814
 8011154:	2001381c 	.word	0x2001381c
 8011158:	20013820 	.word	0x20013820
 801115c:	ebaa 0606 	sub.w	r6, sl, r6
 8011160:	2002      	movs	r0, #2
 8011162:	fb96 f6f0 	sdiv	r6, r6, r0
 8011166:	e71d      	b.n	8010fa4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011168:	441e      	add	r6, r3
 801116a:	ebaa 0606 	sub.w	r6, sl, r6
 801116e:	e719      	b.n	8010fa4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011170:	8925      	ldrh	r5, [r4, #8]
 8011172:	1aed      	subs	r5, r5, r3
 8011174:	eba5 050a 	sub.w	r5, r5, sl
 8011178:	fa0f fb85 	sxth.w	fp, r5
 801117c:	8965      	ldrh	r5, [r4, #10]
 801117e:	eba5 0509 	sub.w	r5, r5, r9
 8011182:	b22d      	sxth	r5, r5
 8011184:	e72e      	b.n	8010fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011186:	8965      	ldrh	r5, [r4, #10]
 8011188:	1aed      	subs	r5, r5, r3
 801118a:	eba5 050a 	sub.w	r5, r5, sl
 801118e:	4633      	mov	r3, r6
 8011190:	b22d      	sxth	r5, r5
 8011192:	463e      	mov	r6, r7
 8011194:	f04f 0b00 	mov.w	fp, #0
 8011198:	461f      	mov	r7, r3
 801119a:	e723      	b.n	8010fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801119c:	2500      	movs	r5, #0
 801119e:	e721      	b.n	8010fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080111a0 <_ZN8touchgfx8TextAreaD0Ev>:
 80111a0:	b510      	push	{r4, lr}
 80111a2:	2148      	movs	r1, #72	; 0x48
 80111a4:	4604      	mov	r4, r0
 80111a6:	f015 ff32 	bl	802700e <_ZdlPvj>
 80111aa:	4620      	mov	r0, r4
 80111ac:	bd10      	pop	{r4, pc}
	...

080111b0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80111b0:	b513      	push	{r0, r1, r4, lr}
 80111b2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80111b6:	4604      	mov	r4, r0
 80111b8:	b1fb      	cbz	r3, 80111fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80111ba:	4b16      	ldr	r3, [pc, #88]	; (8011214 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80111bc:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80111be:	881b      	ldrh	r3, [r3, #0]
 80111c0:	428b      	cmp	r3, r1
 80111c2:	d91a      	bls.n	80111fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80111c4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80111c8:	2b00      	cmp	r3, #0
 80111ca:	dd16      	ble.n	80111fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80111cc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80111d0:	2b00      	cmp	r3, #0
 80111d2:	dd12      	ble.n	80111fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80111d4:	4b10      	ldr	r3, [pc, #64]	; (8011218 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80111d6:	6818      	ldr	r0, [r3, #0]
 80111d8:	f7f6 fa3a 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 80111dc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80111e0:	6822      	ldr	r2, [r4, #0]
 80111e2:	2b00      	cmp	r3, #0
 80111e4:	db06      	blt.n	80111f4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80111e6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80111ea:	2b00      	cmp	r3, #0
 80111ec:	db02      	blt.n	80111f4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80111ee:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80111f0:	4298      	cmp	r0, r3
 80111f2:	d004      	beq.n	80111fe <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80111f4:	6953      	ldr	r3, [r2, #20]
 80111f6:	4620      	mov	r0, r4
 80111f8:	4798      	blx	r3
 80111fa:	b002      	add	sp, #8
 80111fc:	bd10      	pop	{r4, pc}
 80111fe:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011202:	c903      	ldmia	r1, {r0, r1}
 8011204:	466b      	mov	r3, sp
 8011206:	e883 0003 	stmia.w	r3, {r0, r1}
 801120a:	6912      	ldr	r2, [r2, #16]
 801120c:	4619      	mov	r1, r3
 801120e:	4620      	mov	r0, r4
 8011210:	4790      	blx	r2
 8011212:	e7f2      	b.n	80111fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011214:	20013818 	.word	0x20013818
 8011218:	20013820 	.word	0x20013820

0801121c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801121c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011220:	4b44      	ldr	r3, [pc, #272]	; (8011334 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011222:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011224:	881b      	ldrh	r3, [r3, #0]
 8011226:	4293      	cmp	r3, r2
 8011228:	b08e      	sub	sp, #56	; 0x38
 801122a:	4604      	mov	r4, r0
 801122c:	d97e      	bls.n	801132c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801122e:	6808      	ldr	r0, [r1, #0]
 8011230:	4d41      	ldr	r5, [pc, #260]	; (8011338 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011232:	6849      	ldr	r1, [r1, #4]
 8011234:	ab05      	add	r3, sp, #20
 8011236:	c303      	stmia	r3!, {r0, r1}
 8011238:	4611      	mov	r1, r2
 801123a:	6828      	ldr	r0, [r5, #0]
 801123c:	f7f6 fa08 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8011240:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011244:	2b00      	cmp	r3, #0
 8011246:	db11      	blt.n	801126c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011248:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801124c:	2b00      	cmp	r3, #0
 801124e:	db0d      	blt.n	801126c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011250:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011252:	4298      	cmp	r0, r3
 8011254:	d10a      	bne.n	801126c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011256:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801125a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801125e:	ab09      	add	r3, sp, #36	; 0x24
 8011260:	e883 0003 	stmia.w	r3, {r0, r1}
 8011264:	4619      	mov	r1, r3
 8011266:	a805      	add	r0, sp, #20
 8011268:	f7fe f860 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 801126c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011270:	2b00      	cmp	r3, #0
 8011272:	dd5b      	ble.n	801132c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011274:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011278:	2b00      	cmp	r3, #0
 801127a:	dd57      	ble.n	801132c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801127c:	4f2f      	ldr	r7, [pc, #188]	; (801133c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801127e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011280:	683b      	ldr	r3, [r7, #0]
 8011282:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011286:	4b2e      	ldr	r3, [pc, #184]	; (8011340 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011288:	681b      	ldr	r3, [r3, #0]
 801128a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801128e:	2e00      	cmp	r6, #0
 8011290:	d04c      	beq.n	801132c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011292:	6823      	ldr	r3, [r4, #0]
 8011294:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011298:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801129a:	4620      	mov	r0, r4
 801129c:	4798      	blx	r3
 801129e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80112a0:	683b      	ldr	r3, [r7, #0]
 80112a2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80112a6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80112aa:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80112ae:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80112b0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80112b4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80112b8:	785b      	ldrb	r3, [r3, #1]
 80112ba:	9609      	str	r6, [sp, #36]	; 0x24
 80112bc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80112c0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80112c4:	4b1f      	ldr	r3, [pc, #124]	; (8011344 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80112c6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80112ca:	681b      	ldr	r3, [r3, #0]
 80112cc:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80112d0:	910b      	str	r1, [sp, #44]	; 0x2c
 80112d2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80112d6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80112da:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80112de:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80112e2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80112e6:	b10a      	cbz	r2, 80112ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80112e8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80112ea:	b906      	cbnz	r6, 80112ee <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80112ec:	689e      	ldr	r6, [r3, #8]
 80112ee:	af07      	add	r7, sp, #28
 80112f0:	4621      	mov	r1, r4
 80112f2:	4638      	mov	r0, r7
 80112f4:	f004 fab0 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80112f8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80112fa:	6828      	ldr	r0, [r5, #0]
 80112fc:	f7f6 f9a8 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8011300:	6823      	ldr	r3, [r4, #0]
 8011302:	4605      	mov	r5, r0
 8011304:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011306:	4620      	mov	r0, r4
 8011308:	4798      	blx	r3
 801130a:	6823      	ldr	r3, [r4, #0]
 801130c:	4680      	mov	r8, r0
 801130e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011312:	4620      	mov	r0, r4
 8011314:	4798      	blx	r3
 8011316:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801131a:	ab09      	add	r3, sp, #36	; 0x24
 801131c:	9300      	str	r3, [sp, #0]
 801131e:	9501      	str	r5, [sp, #4]
 8011320:	ab05      	add	r3, sp, #20
 8011322:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011326:	4630      	mov	r0, r6
 8011328:	f7f6 f944 	bl	80075b4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801132c:	b00e      	add	sp, #56	; 0x38
 801132e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011332:	bf00      	nop
 8011334:	20013818 	.word	0x20013818
 8011338:	20013820 	.word	0x20013820
 801133c:	20013814 	.word	0x20013814
 8011340:	2001381c 	.word	0x2001381c
 8011344:	200137bc 	.word	0x200137bc

08011348 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011348:	b538      	push	{r3, r4, r5, lr}
 801134a:	4b0e      	ldr	r3, [pc, #56]	; (8011384 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801134c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801134e:	881b      	ldrh	r3, [r3, #0]
 8011350:	429a      	cmp	r2, r3
 8011352:	4604      	mov	r4, r0
 8011354:	d214      	bcs.n	8011380 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8011356:	6803      	ldr	r3, [r0, #0]
 8011358:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801135a:	4798      	blx	r3
 801135c:	6823      	ldr	r3, [r4, #0]
 801135e:	4605      	mov	r5, r0
 8011360:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011362:	4620      	mov	r0, r4
 8011364:	4798      	blx	r3
 8011366:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801136a:	b22d      	sxth	r5, r5
 801136c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011370:	4601      	mov	r1, r0
 8011372:	bf06      	itte	eq
 8011374:	4602      	moveq	r2, r0
 8011376:	4629      	moveq	r1, r5
 8011378:	462a      	movne	r2, r5
 801137a:	4620      	mov	r0, r4
 801137c:	f7fd fdb6 	bl	800eeec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011380:	bd38      	pop	{r3, r4, r5, pc}
 8011382:	bf00      	nop
 8011384:	20013818 	.word	0x20013818

08011388 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8011388:	b530      	push	{r4, r5, lr}
 801138a:	888b      	ldrh	r3, [r1, #4]
 801138c:	8583      	strh	r3, [r0, #44]	; 0x2c
 801138e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011392:	b085      	sub	sp, #20
 8011394:	4604      	mov	r4, r0
 8011396:	b923      	cbnz	r3, 80113a2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011398:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801139c:	b90b      	cbnz	r3, 80113a2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801139e:	f7ff ffd3 	bl	8011348 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80113a2:	6823      	ldr	r3, [r4, #0]
 80113a4:	466d      	mov	r5, sp
 80113a6:	4621      	mov	r1, r4
 80113a8:	4628      	mov	r0, r5
 80113aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80113ae:	4798      	blx	r3
 80113b0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80113b4:	343c      	adds	r4, #60	; 0x3c
 80113b6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80113ba:	b005      	add	sp, #20
 80113bc:	bd30      	pop	{r4, r5, pc}

080113be <_ZNK8touchgfx3Box12getSolidRectEv>:
 80113be:	2300      	movs	r3, #0
 80113c0:	8083      	strh	r3, [r0, #4]
 80113c2:	80c3      	strh	r3, [r0, #6]
 80113c4:	8003      	strh	r3, [r0, #0]
 80113c6:	8043      	strh	r3, [r0, #2]
 80113c8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80113cc:	2bff      	cmp	r3, #255	; 0xff
 80113ce:	bf01      	itttt	eq
 80113d0:	890b      	ldrheq	r3, [r1, #8]
 80113d2:	8083      	strheq	r3, [r0, #4]
 80113d4:	894b      	ldrheq	r3, [r1, #10]
 80113d6:	80c3      	strheq	r3, [r0, #6]
 80113d8:	4770      	bx	lr
	...

080113dc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80113dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80113de:	4604      	mov	r4, r0
 80113e0:	6808      	ldr	r0, [r1, #0]
 80113e2:	6849      	ldr	r1, [r1, #4]
 80113e4:	466b      	mov	r3, sp
 80113e6:	c303      	stmia	r3!, {r0, r1}
 80113e8:	6823      	ldr	r3, [r4, #0]
 80113ea:	4669      	mov	r1, sp
 80113ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80113ee:	4620      	mov	r0, r4
 80113f0:	4798      	blx	r3
 80113f2:	4b08      	ldr	r3, [pc, #32]	; (8011414 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80113f4:	681b      	ldr	r3, [r3, #0]
 80113f6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80113fa:	b10a      	cbz	r2, 8011400 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80113fc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80113fe:	b900      	cbnz	r0, 8011402 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011400:	6898      	ldr	r0, [r3, #8]
 8011402:	6803      	ldr	r3, [r0, #0]
 8011404:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011406:	6a1d      	ldr	r5, [r3, #32]
 8011408:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801140c:	4669      	mov	r1, sp
 801140e:	47a8      	blx	r5
 8011410:	b003      	add	sp, #12
 8011412:	bd30      	pop	{r4, r5, pc}
 8011414:	200137bc 	.word	0x200137bc

08011418 <_ZN8touchgfx3BoxD1Ev>:
 8011418:	4770      	bx	lr

0801141a <_ZN8touchgfx3BoxD0Ev>:
 801141a:	b510      	push	{r4, lr}
 801141c:	212c      	movs	r1, #44	; 0x2c
 801141e:	4604      	mov	r4, r0
 8011420:	f015 fdf5 	bl	802700e <_ZdlPvj>
 8011424:	4620      	mov	r0, r4
 8011426:	bd10      	pop	{r4, pc}

08011428 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011428:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801142c:	b12a      	cbz	r2, 801143a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801142e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011432:	b112      	cbz	r2, 801143a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011434:	6803      	ldr	r3, [r0, #0]
 8011436:	695b      	ldr	r3, [r3, #20]
 8011438:	4718      	bx	r3
 801143a:	4770      	bx	lr

0801143c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 801143c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8011440:	600b      	str	r3, [r1, #0]
 8011442:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8011446:	6013      	str	r3, [r2, #0]
 8011448:	4770      	bx	lr

0801144a <_ZN8touchgfx5Gauge8setWidthEs>:
 801144a:	8101      	strh	r1, [r0, #8]
 801144c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8011450:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8011454:	4770      	bx	lr

08011456 <_ZN8touchgfx5Gauge9setHeightEs>:
 8011456:	8141      	strh	r1, [r0, #10]
 8011458:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 801145c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8011460:	4770      	bx	lr

08011462 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8011462:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8011466:	4770      	bx	lr

08011468 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8011468:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 801146c:	4770      	bx	lr

0801146e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 801146e:	4770      	bx	lr

08011470 <_ZN8touchgfx5GaugeD1Ev>:
 8011470:	4770      	bx	lr

08011472 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8011472:	b538      	push	{r3, r4, r5, lr}
 8011474:	4604      	mov	r4, r0
 8011476:	460d      	mov	r5, r1
 8011478:	f7fd fc51 	bl	800ed1e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 801147c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8011480:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8011484:	bd38      	pop	{r3, r4, r5, pc}

08011486 <_ZN8touchgfx5GaugeD0Ev>:
 8011486:	b510      	push	{r4, lr}
 8011488:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 801148c:	4604      	mov	r4, r0
 801148e:	f015 fdbe 	bl	802700e <_ZdlPvj>
 8011492:	4620      	mov	r0, r4
 8011494:	bd10      	pop	{r4, pc}

08011496 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8011496:	b510      	push	{r4, lr}
 8011498:	6803      	ldr	r3, [r0, #0]
 801149a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801149e:	4604      	mov	r4, r0
 80114a0:	4798      	blx	r3
 80114a2:	b170      	cbz	r0, 80114c2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80114a4:	6823      	ldr	r3, [r4, #0]
 80114a6:	4620      	mov	r0, r4
 80114a8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80114ac:	4798      	blx	r3
 80114ae:	b140      	cbz	r0, 80114c2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80114b0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80114b4:	b12b      	cbz	r3, 80114c2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80114b6:	6823      	ldr	r3, [r4, #0]
 80114b8:	4620      	mov	r0, r4
 80114ba:	695b      	ldr	r3, [r3, #20]
 80114bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80114c0:	4718      	bx	r3
 80114c2:	bd10      	pop	{r4, pc}

080114c4 <_ZN8touchgfx5GaugeC1Ev>:
 80114c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80114c6:	4604      	mov	r4, r0
 80114c8:	4626      	mov	r6, r4
 80114ca:	f7fd fd49 	bl	800ef60 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80114ce:	4b18      	ldr	r3, [pc, #96]	; (8011530 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 80114d0:	f846 3bb4 	str.w	r3, [r6], #180
 80114d4:	a902      	add	r1, sp, #8
 80114d6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80114da:	f821 3d04 	strh.w	r3, [r1, #-4]!
 80114de:	4630      	mov	r0, r6
 80114e0:	f014 ff7c 	bl	80263dc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 80114e4:	2500      	movs	r5, #0
 80114e6:	2301      	movs	r3, #1
 80114e8:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 80114ec:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 80114f0:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 80114f4:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 80114f8:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 80114fc:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8011500:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8011504:	4638      	mov	r0, r7
 8011506:	f014 f9ad 	bl	8025864 <_ZN8touchgfx6CircleC1Ev>
 801150a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 801150e:	4620      	mov	r0, r4
 8011510:	f7fd fdc7 	bl	800f0a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011514:	4639      	mov	r1, r7
 8011516:	4620      	mov	r0, r4
 8011518:	f7fd fd82 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801151c:	4620      	mov	r0, r4
 801151e:	4631      	mov	r1, r6
 8011520:	f7fd fd7e 	bl	800f020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011524:	4620      	mov	r0, r4
 8011526:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801152a:	b003      	add	sp, #12
 801152c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801152e:	bf00      	nop
 8011530:	0802bfc8 	.word	0x0802bfc8

08011534 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011534:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8011538:	4770      	bx	lr

0801153a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 801153a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 801153e:	4770      	bx	lr

08011540 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8011540:	b538      	push	{r3, r4, r5, lr}
 8011542:	8902      	ldrh	r2, [r0, #8]
 8011544:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011548:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 801154c:	4604      	mov	r4, r0
 801154e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011552:	2200      	movs	r2, #0
 8011554:	4611      	mov	r1, r2
 8011556:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 801155a:	4628      	mov	r0, r5
 801155c:	f7f0 ff97 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 8011560:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8011564:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011568:	1a9b      	subs	r3, r3, r2
 801156a:	ee07 3a90 	vmov	s15, r3
 801156e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8011572:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8011576:	1a9b      	subs	r3, r3, r2
 8011578:	ee07 3a10 	vmov	s14, r3
 801157c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011580:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011584:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8011588:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 801158c:	4628      	mov	r0, r5
 801158e:	f014 ff71 	bl	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011592:	4b16      	ldr	r3, [pc, #88]	; (80115ec <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8011594:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8011598:	4628      	mov	r0, r5
 801159a:	f014 ff6b 	bl	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801159e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80115a2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 80115a6:	ee07 3a90 	vmov	s15, r3
 80115aa:	ee07 2a10 	vmov	s14, r2
 80115ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80115b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80115b6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80115ba:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 80115be:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 80115c2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80115c6:	4628      	mov	r0, r5
 80115c8:	f014 ff54 	bl	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80115cc:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 80115d0:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 80115d4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80115d8:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 80115dc:	4628      	mov	r0, r5
 80115de:	f014 ff49 	bl	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80115e2:	2301      	movs	r3, #1
 80115e4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80115e8:	bd38      	pop	{r3, r4, r5, pc}
 80115ea:	bf00      	nop
 80115ec:	43960000 	.word	0x43960000

080115f0 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 80115f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80115f2:	4604      	mov	r4, r0
 80115f4:	a802      	add	r0, sp, #8
 80115f6:	4616      	mov	r6, r2
 80115f8:	f820 1d04 	strh.w	r1, [r0, #-4]!
 80115fc:	461d      	mov	r5, r3
 80115fe:	4601      	mov	r1, r0
 8011600:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011604:	f015 f88c 	bl	8026720 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8011608:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 801160c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8011610:	4620      	mov	r0, r4
 8011612:	f7ff ff95 	bl	8011540 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011616:	b002      	add	sp, #8
 8011618:	bd70      	pop	{r4, r5, r6, pc}

0801161a <_ZN8touchgfx5Gauge9setCenterEii>:
 801161a:	b570      	push	{r4, r5, r6, lr}
 801161c:	4606      	mov	r6, r0
 801161e:	460d      	mov	r5, r1
 8011620:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8011624:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8011628:	4614      	mov	r4, r2
 801162a:	f7ff ff89 	bl	8011540 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801162e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8011632:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8011636:	1aa4      	subs	r4, r4, r2
 8011638:	1a6d      	subs	r5, r5, r1
 801163a:	0164      	lsls	r4, r4, #5
 801163c:	016d      	lsls	r5, r5, #5
 801163e:	3410      	adds	r4, #16
 8011640:	3510      	adds	r5, #16
 8011642:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8011646:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 801164a:	bd70      	pop	{r4, r5, r6, pc}

0801164c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 801164c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801164e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8011650:	0149      	lsls	r1, r1, #5
 8011652:	4299      	cmp	r1, r3
 8011654:	4604      	mov	r4, r0
 8011656:	9101      	str	r1, [sp, #4]
 8011658:	d00b      	beq.n	8011672 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 801165a:	4601      	mov	r1, r0
 801165c:	aa01      	add	r2, sp, #4
 801165e:	a802      	add	r0, sp, #8
 8011660:	f014 fafe 	bl	8025c60 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8011664:	9b01      	ldr	r3, [sp, #4]
 8011666:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011668:	6823      	ldr	r3, [r4, #0]
 801166a:	a902      	add	r1, sp, #8
 801166c:	691b      	ldr	r3, [r3, #16]
 801166e:	4620      	mov	r0, r4
 8011670:	4798      	blx	r3
 8011672:	b004      	add	sp, #16
 8011674:	bd10      	pop	{r4, pc}
	...

08011678 <_ZN8touchgfx5Gauge8setValueEi>:
 8011678:	b570      	push	{r4, r5, r6, lr}
 801167a:	4604      	mov	r4, r0
 801167c:	f7fd fba2 	bl	800edc4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011680:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8011684:	429a      	cmp	r2, r3
 8011686:	bfac      	ite	ge
 8011688:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 801168c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8011690:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011694:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8011698:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 801169c:	1ac9      	subs	r1, r1, r3
 801169e:	2900      	cmp	r1, #0
 80116a0:	bfb8      	it	lt
 80116a2:	4249      	neglt	r1, r1
 80116a4:	b289      	uxth	r1, r1
 80116a6:	4620      	mov	r0, r4
 80116a8:	f7fd fbae 	bl	800ee08 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 80116ac:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80116b0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80116b4:	eddf 6a19 	vldr	s13, [pc, #100]	; 801171c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 80116b8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8011720 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 80116bc:	429a      	cmp	r2, r3
 80116be:	4605      	mov	r5, r0
 80116c0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80116c4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80116c8:	da15      	bge.n	80116f6 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80116ca:	1b5b      	subs	r3, r3, r5
 80116cc:	ee07 3a90 	vmov	s15, r3
 80116d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80116d4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80116d8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80116dc:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80116e0:	ee21 1a07 	vmul.f32	s2, s2, s14
 80116e4:	f014 fe35 	bl	8026352 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80116e8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80116ec:	1b49      	subs	r1, r1, r5
 80116ee:	4630      	mov	r0, r6
 80116f0:	f7ff ffac 	bl	801164c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 80116f4:	bd70      	pop	{r4, r5, r6, pc}
 80116f6:	442b      	add	r3, r5
 80116f8:	ee07 3a90 	vmov	s15, r3
 80116fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011700:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8011704:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8011708:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 801170c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8011710:	f014 fe1f 	bl	8026352 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8011714:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8011718:	4429      	add	r1, r5
 801171a:	e7e8      	b.n	80116ee <_ZN8touchgfx5Gauge8setValueEi+0x76>
 801171c:	43340000 	.word	0x43340000
 8011720:	40490fdb 	.word	0x40490fdb

08011724 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8011724:	b510      	push	{r4, lr}
 8011726:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801172a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801172e:	0149      	lsls	r1, r1, #5
 8011730:	0152      	lsls	r2, r2, #5
 8011732:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8011736:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801173a:	4604      	mov	r4, r0
 801173c:	f7fd faec 	bl	800ed18 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8011740:	4601      	mov	r1, r0
 8011742:	4620      	mov	r0, r4
 8011744:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011748:	f7ff bf96 	b.w	8011678 <_ZN8touchgfx5Gauge8setValueEi>

0801174c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801174c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011750:	4770      	bx	lr

08011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8011752:	b570      	push	{r4, r5, r6, lr}
 8011754:	880b      	ldrh	r3, [r1, #0]
 8011756:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8011758:	4605      	mov	r5, r0
 801175a:	8813      	ldrh	r3, [r2, #0]
 801175c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8011760:	4604      	mov	r4, r0
 8011762:	4628      	mov	r0, r5
 8011764:	f006 f912 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011768:	4606      	mov	r6, r0
 801176a:	4628      	mov	r0, r5
 801176c:	f006 f942 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011770:	6823      	ldr	r3, [r4, #0]
 8011772:	4605      	mov	r5, r0
 8011774:	4631      	mov	r1, r6
 8011776:	4620      	mov	r0, r4
 8011778:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801177a:	4798      	blx	r3
 801177c:	6823      	ldr	r3, [r4, #0]
 801177e:	4629      	mov	r1, r5
 8011780:	4620      	mov	r0, r4
 8011782:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011784:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011788:	4718      	bx	r3

0801178a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801178a:	b510      	push	{r4, lr}
 801178c:	4604      	mov	r4, r0
 801178e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011790:	b150      	cbz	r0, 80117a8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011792:	6803      	ldr	r3, [r0, #0]
 8011794:	68db      	ldr	r3, [r3, #12]
 8011796:	4798      	blx	r3
 8011798:	b130      	cbz	r0, 80117a8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801179a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801179c:	6803      	ldr	r3, [r0, #0]
 801179e:	4621      	mov	r1, r4
 80117a0:	689b      	ldr	r3, [r3, #8]
 80117a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80117a6:	4718      	bx	r3
 80117a8:	bd10      	pop	{r4, pc}

080117aa <_ZNK8touchgfx6Button12getSolidRectEv>:
 80117aa:	b510      	push	{r4, lr}
 80117ac:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80117b0:	2bff      	cmp	r3, #255	; 0xff
 80117b2:	4604      	mov	r4, r0
 80117b4:	d006      	beq.n	80117c4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80117b6:	2300      	movs	r3, #0
 80117b8:	8003      	strh	r3, [r0, #0]
 80117ba:	8043      	strh	r3, [r0, #2]
 80117bc:	8083      	strh	r3, [r0, #4]
 80117be:	80c3      	strh	r3, [r0, #6]
 80117c0:	4620      	mov	r0, r4
 80117c2:	bd10      	pop	{r4, pc}
 80117c4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80117c8:	b11b      	cbz	r3, 80117d2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80117ca:	3130      	adds	r1, #48	; 0x30
 80117cc:	f006 f946 	bl	8017a5c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80117d0:	e7f6      	b.n	80117c0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80117d2:	312e      	adds	r1, #46	; 0x2e
 80117d4:	e7fa      	b.n	80117cc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080117d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80117d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80117dc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80117e0:	b08a      	sub	sp, #40	; 0x28
 80117e2:	4604      	mov	r4, r0
 80117e4:	4688      	mov	r8, r1
 80117e6:	2b00      	cmp	r3, #0
 80117e8:	d066      	beq.n	80118b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80117ea:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80117ec:	f8ad 3014 	strh.w	r3, [sp, #20]
 80117f0:	a805      	add	r0, sp, #20
 80117f2:	f006 f8cb 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80117f6:	4607      	mov	r7, r0
 80117f8:	a805      	add	r0, sp, #20
 80117fa:	f006 f8fb 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80117fe:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011802:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011806:	4432      	add	r2, r6
 8011808:	b292      	uxth	r2, r2
 801180a:	2300      	movs	r3, #0
 801180c:	fa0f fc82 	sxth.w	ip, r2
 8011810:	459c      	cmp	ip, r3
 8011812:	9306      	str	r3, [sp, #24]
 8011814:	dd52      	ble.n	80118bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011816:	42b7      	cmp	r7, r6
 8011818:	dd50      	ble.n	80118bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801181a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801181e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011822:	442b      	add	r3, r5
 8011824:	b29b      	uxth	r3, r3
 8011826:	b219      	sxth	r1, r3
 8011828:	2900      	cmp	r1, #0
 801182a:	dd47      	ble.n	80118bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801182c:	42a8      	cmp	r0, r5
 801182e:	dd45      	ble.n	80118bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011830:	4567      	cmp	r7, ip
 8011832:	bfb8      	it	lt
 8011834:	b2ba      	uxthlt	r2, r7
 8011836:	4288      	cmp	r0, r1
 8011838:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801183c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011840:	bfb8      	it	lt
 8011842:	b283      	uxthlt	r3, r0
 8011844:	1b92      	subs	r2, r2, r6
 8011846:	1b5b      	subs	r3, r3, r5
 8011848:	f8ad 201c 	strh.w	r2, [sp, #28]
 801184c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011850:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011854:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011858:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801185c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011860:	429a      	cmp	r2, r3
 8011862:	d026      	beq.n	80118b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011864:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011868:	2b00      	cmp	r3, #0
 801186a:	dd22      	ble.n	80118b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801186c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011870:	2b00      	cmp	r3, #0
 8011872:	dd1e      	ble.n	80118b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011874:	2300      	movs	r3, #0
 8011876:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801187a:	6823      	ldr	r3, [r4, #0]
 801187c:	a908      	add	r1, sp, #32
 801187e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011880:	4620      	mov	r0, r4
 8011882:	4798      	blx	r3
 8011884:	4b0f      	ldr	r3, [pc, #60]	; (80118c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8011886:	681b      	ldr	r3, [r3, #0]
 8011888:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801188c:	b10a      	cbz	r2, 8011892 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 801188e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011890:	b900      	cbnz	r0, 8011894 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8011892:	6898      	ldr	r0, [r3, #8]
 8011894:	6801      	ldr	r1, [r0, #0]
 8011896:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801189a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801189e:	2501      	movs	r5, #1
 80118a0:	9502      	str	r5, [sp, #8]
 80118a2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80118a6:	9401      	str	r4, [sp, #4]
 80118a8:	ac06      	add	r4, sp, #24
 80118aa:	9400      	str	r4, [sp, #0]
 80118ac:	688c      	ldr	r4, [r1, #8]
 80118ae:	a905      	add	r1, sp, #20
 80118b0:	47a0      	blx	r4
 80118b2:	b00a      	add	sp, #40	; 0x28
 80118b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80118b8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80118ba:	e797      	b.n	80117ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80118bc:	2300      	movs	r3, #0
 80118be:	9307      	str	r3, [sp, #28]
 80118c0:	e7ca      	b.n	8011858 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80118c2:	bf00      	nop
 80118c4:	200137bc 	.word	0x200137bc

080118c8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80118c8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80118cc:	b12a      	cbz	r2, 80118da <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80118ce:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80118d2:	b112      	cbz	r2, 80118da <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80118d4:	6803      	ldr	r3, [r0, #0]
 80118d6:	695b      	ldr	r3, [r3, #20]
 80118d8:	4718      	bx	r3
 80118da:	4770      	bx	lr

080118dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80118dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80118e0:	4b2f      	ldr	r3, [pc, #188]	; (80119a0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80118e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80118e4:	881b      	ldrh	r3, [r3, #0]
 80118e6:	4293      	cmp	r3, r2
 80118e8:	b08d      	sub	sp, #52	; 0x34
 80118ea:	4604      	mov	r4, r0
 80118ec:	460f      	mov	r7, r1
 80118ee:	d954      	bls.n	801199a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80118f0:	4b2c      	ldr	r3, [pc, #176]	; (80119a4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80118f2:	6819      	ldr	r1, [r3, #0]
 80118f4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80118f8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80118fc:	4a2a      	ldr	r2, [pc, #168]	; (80119a8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80118fe:	6812      	ldr	r2, [r2, #0]
 8011900:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8011904:	2900      	cmp	r1, #0
 8011906:	d048      	beq.n	801199a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011908:	785a      	ldrb	r2, [r3, #1]
 801190a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801190e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8011912:	4b26      	ldr	r3, [pc, #152]	; (80119ac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8011914:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8011918:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801191c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8011920:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8011922:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8011926:	9107      	str	r1, [sp, #28]
 8011928:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801192c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011930:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8011934:	681a      	ldr	r2, [r3, #0]
 8011936:	f88d 8020 	strb.w	r8, [sp, #32]
 801193a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801193e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8011942:	9609      	str	r6, [sp, #36]	; 0x24
 8011944:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8011948:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801194c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8011950:	b10b      	cbz	r3, 8011956 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8011952:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8011954:	b905      	cbnz	r5, 8011958 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8011956:	6895      	ldr	r5, [r2, #8]
 8011958:	ae05      	add	r6, sp, #20
 801195a:	4621      	mov	r1, r4
 801195c:	4630      	mov	r0, r6
 801195e:	f003 ff7b 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011962:	4b13      	ldr	r3, [pc, #76]	; (80119b0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8011964:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011966:	6818      	ldr	r0, [r3, #0]
 8011968:	f7f5 fe72 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 801196c:	6823      	ldr	r3, [r4, #0]
 801196e:	4680      	mov	r8, r0
 8011970:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011972:	4620      	mov	r0, r4
 8011974:	4798      	blx	r3
 8011976:	6823      	ldr	r3, [r4, #0]
 8011978:	4681      	mov	r9, r0
 801197a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801197e:	4620      	mov	r0, r4
 8011980:	4798      	blx	r3
 8011982:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8011986:	ab07      	add	r3, sp, #28
 8011988:	9300      	str	r3, [sp, #0]
 801198a:	f8cd 8004 	str.w	r8, [sp, #4]
 801198e:	463b      	mov	r3, r7
 8011990:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011994:	4628      	mov	r0, r5
 8011996:	f7f5 fe0d 	bl	80075b4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801199a:	b00d      	add	sp, #52	; 0x34
 801199c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80119a0:	20013818 	.word	0x20013818
 80119a4:	20013814 	.word	0x20013814
 80119a8:	2001381c 	.word	0x2001381c
 80119ac:	200137bc 	.word	0x200137bc
 80119b0:	20013820 	.word	0x20013820

080119b4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80119b4:	4770      	bx	lr

080119b6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80119b6:	4770      	bx	lr

080119b8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80119b8:	b510      	push	{r4, lr}
 80119ba:	213c      	movs	r1, #60	; 0x3c
 80119bc:	4604      	mov	r4, r0
 80119be:	f015 fb26 	bl	802700e <_ZdlPvj>
 80119c2:	4620      	mov	r0, r4
 80119c4:	bd10      	pop	{r4, pc}

080119c6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80119c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119ca:	461c      	mov	r4, r3
 80119cc:	4606      	mov	r6, r0
 80119ce:	9f06      	ldr	r7, [sp, #24]
 80119d0:	f7ff febf 	bl	8011752 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80119d4:	8823      	ldrh	r3, [r4, #0]
 80119d6:	86b3      	strh	r3, [r6, #52]	; 0x34
 80119d8:	883b      	ldrh	r3, [r7, #0]
 80119da:	86f3      	strh	r3, [r6, #54]	; 0x36
 80119dc:	4638      	mov	r0, r7
 80119de:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80119e2:	f005 ffd3 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80119e6:	f04f 0802 	mov.w	r8, #2
 80119ea:	fb95 f5f8 	sdiv	r5, r5, r8
 80119ee:	b2ad      	uxth	r5, r5
 80119f0:	fb90 f0f8 	sdiv	r0, r0, r8
 80119f4:	1a2d      	subs	r5, r5, r0
 80119f6:	8735      	strh	r5, [r6, #56]	; 0x38
 80119f8:	4638      	mov	r0, r7
 80119fa:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80119fe:	fb94 f4f8 	sdiv	r4, r4, r8
 8011a02:	f005 fff7 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011a06:	b2a4      	uxth	r4, r4
 8011a08:	fb90 f0f8 	sdiv	r0, r0, r8
 8011a0c:	1a24      	subs	r4, r4, r0
 8011a0e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8011a10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011a14 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8011a14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a18:	4604      	mov	r4, r0
 8011a1a:	b08c      	sub	sp, #48	; 0x30
 8011a1c:	460d      	mov	r5, r1
 8011a1e:	f7ff fedb 	bl	80117d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011a22:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8011a26:	2b00      	cmp	r3, #0
 8011a28:	d05d      	beq.n	8011ae6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8011a2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8011a2c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011a30:	a805      	add	r0, sp, #20
 8011a32:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8011a36:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8011a3a:	f005 ffa7 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011a3e:	4606      	mov	r6, r0
 8011a40:	a805      	add	r0, sp, #20
 8011a42:	f005 ffd7 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011a46:	6869      	ldr	r1, [r5, #4]
 8011a48:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011a4c:	6828      	ldr	r0, [r5, #0]
 8011a4e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8011a52:	ab08      	add	r3, sp, #32
 8011a54:	ad08      	add	r5, sp, #32
 8011a56:	c303      	stmia	r3!, {r0, r1}
 8011a58:	a906      	add	r1, sp, #24
 8011a5a:	4628      	mov	r0, r5
 8011a5c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011a60:	f8ad 601c 	strh.w	r6, [sp, #28]
 8011a64:	f7fd fc62 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 8011a68:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011a6c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011a70:	429a      	cmp	r2, r3
 8011a72:	d035      	beq.n	8011ae0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011a74:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8011a78:	2b00      	cmp	r3, #0
 8011a7a:	dd31      	ble.n	8011ae0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011a7c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8011a80:	2b00      	cmp	r3, #0
 8011a82:	dd2d      	ble.n	8011ae0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011a84:	2300      	movs	r3, #0
 8011a86:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8011a8a:	6823      	ldr	r3, [r4, #0]
 8011a8c:	a90a      	add	r1, sp, #40	; 0x28
 8011a8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a90:	4620      	mov	r0, r4
 8011a92:	4798      	blx	r3
 8011a94:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011a98:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8011a9a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011a9e:	1a9b      	subs	r3, r3, r2
 8011aa0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011aa4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8011aa6:	1ac9      	subs	r1, r1, r3
 8011aa8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8011aac:	490f      	ldr	r1, [pc, #60]	; (8011aec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8011aae:	6809      	ldr	r1, [r1, #0]
 8011ab0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8011ab4:	b108      	cbz	r0, 8011aba <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8011ab6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8011ab8:	b900      	cbnz	r0, 8011abc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8011aba:	6888      	ldr	r0, [r1, #8]
 8011abc:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8011ac0:	440b      	add	r3, r1
 8011ac2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8011ac6:	2601      	movs	r6, #1
 8011ac8:	440a      	add	r2, r1
 8011aca:	6801      	ldr	r1, [r0, #0]
 8011acc:	9602      	str	r6, [sp, #8]
 8011ace:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011ad2:	e9cd 5400 	strd	r5, r4, [sp]
 8011ad6:	b21b      	sxth	r3, r3
 8011ad8:	688c      	ldr	r4, [r1, #8]
 8011ada:	b212      	sxth	r2, r2
 8011adc:	a905      	add	r1, sp, #20
 8011ade:	47a0      	blx	r4
 8011ae0:	b00c      	add	sp, #48	; 0x30
 8011ae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ae6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011ae8:	e7a0      	b.n	8011a2c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8011aea:	bf00      	nop
 8011aec:	200137bc 	.word	0x200137bc

08011af0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8011af0:	b510      	push	{r4, lr}
 8011af2:	2101      	movs	r1, #1
 8011af4:	2200      	movs	r2, #0
 8011af6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011afa:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8011afe:	4c0e      	ldr	r4, [pc, #56]	; (8011b38 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8011b00:	8082      	strh	r2, [r0, #4]
 8011b02:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011b06:	80c2      	strh	r2, [r0, #6]
 8011b08:	8102      	strh	r2, [r0, #8]
 8011b0a:	8142      	strh	r2, [r0, #10]
 8011b0c:	8182      	strh	r2, [r0, #12]
 8011b0e:	81c2      	strh	r2, [r0, #14]
 8011b10:	8202      	strh	r2, [r0, #16]
 8011b12:	8242      	strh	r2, [r0, #18]
 8011b14:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011b18:	61c2      	str	r2, [r0, #28]
 8011b1a:	8402      	strh	r2, [r0, #32]
 8011b1c:	8442      	strh	r2, [r0, #34]	; 0x22
 8011b1e:	6282      	str	r2, [r0, #40]	; 0x28
 8011b20:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8011b24:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8011b26:	8601      	strh	r1, [r0, #48]	; 0x30
 8011b28:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8011b2c:	6004      	str	r4, [r0, #0]
 8011b2e:	8681      	strh	r1, [r0, #52]	; 0x34
 8011b30:	86c1      	strh	r1, [r0, #54]	; 0x36
 8011b32:	8702      	strh	r2, [r0, #56]	; 0x38
 8011b34:	8742      	strh	r2, [r0, #58]	; 0x3a
 8011b36:	bd10      	pop	{r4, pc}
 8011b38:	0802c0b0 	.word	0x0802c0b0

08011b3c <_ZN8touchgfx5ImageD1Ev>:
 8011b3c:	4770      	bx	lr

08011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8011b3e:	b570      	push	{r4, r5, r6, lr}
 8011b40:	880b      	ldrh	r3, [r1, #0]
 8011b42:	84c3      	strh	r3, [r0, #38]	; 0x26
 8011b44:	4604      	mov	r4, r0
 8011b46:	4608      	mov	r0, r1
 8011b48:	460d      	mov	r5, r1
 8011b4a:	f005 ff1f 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011b4e:	4606      	mov	r6, r0
 8011b50:	4628      	mov	r0, r5
 8011b52:	f005 ff4f 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011b56:	6823      	ldr	r3, [r4, #0]
 8011b58:	4605      	mov	r5, r0
 8011b5a:	4631      	mov	r1, r6
 8011b5c:	4620      	mov	r0, r4
 8011b5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b60:	4798      	blx	r3
 8011b62:	6823      	ldr	r3, [r4, #0]
 8011b64:	4629      	mov	r1, r5
 8011b66:	4620      	mov	r0, r4
 8011b68:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011b6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b6e:	4718      	bx	r3

08011b70 <_ZN8touchgfx5ImageD0Ev>:
 8011b70:	b510      	push	{r4, lr}
 8011b72:	212c      	movs	r1, #44	; 0x2c
 8011b74:	4604      	mov	r4, r0
 8011b76:	f015 fa4a 	bl	802700e <_ZdlPvj>
 8011b7a:	4620      	mov	r0, r4
 8011b7c:	bd10      	pop	{r4, pc}

08011b7e <_ZNK8touchgfx5Image12getSolidRectEv>:
 8011b7e:	b510      	push	{r4, lr}
 8011b80:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8011b84:	2bff      	cmp	r3, #255	; 0xff
 8011b86:	4604      	mov	r4, r0
 8011b88:	d006      	beq.n	8011b98 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8011b8a:	2300      	movs	r3, #0
 8011b8c:	8003      	strh	r3, [r0, #0]
 8011b8e:	8043      	strh	r3, [r0, #2]
 8011b90:	8083      	strh	r3, [r0, #4]
 8011b92:	80c3      	strh	r3, [r0, #6]
 8011b94:	4620      	mov	r0, r4
 8011b96:	bd10      	pop	{r4, pc}
 8011b98:	3126      	adds	r1, #38	; 0x26
 8011b9a:	f005 ff5f 	bl	8017a5c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011b9e:	e7f9      	b.n	8011b94 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08011ba0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8011ba0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8011ba4:	b12a      	cbz	r2, 8011bb2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011ba6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011baa:	b112      	cbz	r2, 8011bb2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011bac:	6803      	ldr	r3, [r0, #0]
 8011bae:	695b      	ldr	r3, [r3, #20]
 8011bb0:	4718      	bx	r3
 8011bb2:	4770      	bx	lr

08011bb4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8011bb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bb8:	4604      	mov	r4, r0
 8011bba:	b088      	sub	sp, #32
 8011bbc:	f854 3b26 	ldr.w	r3, [r4], #38
 8011bc0:	2500      	movs	r5, #0
 8011bc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011bc4:	460f      	mov	r7, r1
 8011bc6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8011bca:	a904      	add	r1, sp, #16
 8011bcc:	4606      	mov	r6, r0
 8011bce:	4798      	blx	r3
 8011bd0:	4620      	mov	r0, r4
 8011bd2:	f005 fedb 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011bd6:	4680      	mov	r8, r0
 8011bd8:	4620      	mov	r0, r4
 8011bda:	f005 ff0b 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011bde:	9506      	str	r5, [sp, #24]
 8011be0:	ad06      	add	r5, sp, #24
 8011be2:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011be6:	4639      	mov	r1, r7
 8011be8:	4628      	mov	r0, r5
 8011bea:	f8ad 801c 	strh.w	r8, [sp, #28]
 8011bee:	f7fd fb9d 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 8011bf2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011bf6:	2b00      	cmp	r3, #0
 8011bf8:	dd19      	ble.n	8011c2e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011bfa:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011bfe:	2b00      	cmp	r3, #0
 8011c00:	dd15      	ble.n	8011c2e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011c02:	4b0c      	ldr	r3, [pc, #48]	; (8011c34 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8011c04:	681b      	ldr	r3, [r3, #0]
 8011c06:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011c0a:	b10a      	cbz	r2, 8011c10 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8011c0c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011c0e:	b900      	cbnz	r0, 8011c12 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8011c10:	6898      	ldr	r0, [r3, #8]
 8011c12:	6801      	ldr	r1, [r0, #0]
 8011c14:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011c18:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011c1c:	2701      	movs	r7, #1
 8011c1e:	9702      	str	r7, [sp, #8]
 8011c20:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8011c24:	e9cd 5600 	strd	r5, r6, [sp]
 8011c28:	688d      	ldr	r5, [r1, #8]
 8011c2a:	4621      	mov	r1, r4
 8011c2c:	47a8      	blx	r5
 8011c2e:	b008      	add	sp, #32
 8011c30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011c34:	200137bc 	.word	0x200137bc

08011c38 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8011c38:	4770      	bx	lr

08011c3a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8011c3a:	b510      	push	{r4, lr}
 8011c3c:	2148      	movs	r1, #72	; 0x48
 8011c3e:	4604      	mov	r4, r0
 8011c40:	f015 f9e5 	bl	802700e <_ZdlPvj>
 8011c44:	4620      	mov	r0, r4
 8011c46:	bd10      	pop	{r4, pc}

08011c48 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8011c48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011c4c:	b08d      	sub	sp, #52	; 0x34
 8011c4e:	4604      	mov	r4, r0
 8011c50:	460f      	mov	r7, r1
 8011c52:	f7ff fdc1 	bl	80117d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011c56:	4a55      	ldr	r2, [pc, #340]	; (8011dac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8011c58:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8011c5a:	8812      	ldrh	r2, [r2, #0]
 8011c5c:	429a      	cmp	r2, r3
 8011c5e:	f240 8082 	bls.w	8011d66 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011c62:	4d53      	ldr	r5, [pc, #332]	; (8011db0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8011c64:	682a      	ldr	r2, [r5, #0]
 8011c66:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011c6a:	4b52      	ldr	r3, [pc, #328]	; (8011db4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8011c6c:	681b      	ldr	r3, [r3, #0]
 8011c6e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011c72:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8011c76:	2200      	movs	r2, #0
 8011c78:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8011c7c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8011c80:	2a03      	cmp	r2, #3
 8011c82:	d811      	bhi.n	8011ca8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8011c84:	e8df f002 	tbb	[pc, r2]
 8011c88:	89727902 	.word	0x89727902
 8011c8c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011c90:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011c94:	1ad2      	subs	r2, r2, r3
 8011c96:	2002      	movs	r0, #2
 8011c98:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011c9c:	fb92 f2f0 	sdiv	r2, r2, r0
 8011ca0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011ca4:	f8ad 200e 	strh.w	r2, [sp, #14]
 8011ca8:	f10d 080c 	add.w	r8, sp, #12
 8011cac:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011cb0:	f10d 0914 	add.w	r9, sp, #20
 8011cb4:	e889 0003 	stmia.w	r9, {r0, r1}
 8011cb8:	4639      	mov	r1, r7
 8011cba:	4648      	mov	r0, r9
 8011cbc:	f7fd fb36 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 8011cc0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011cc4:	2b00      	cmp	r3, #0
 8011cc6:	dd4e      	ble.n	8011d66 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011cc8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011ccc:	2b00      	cmp	r3, #0
 8011cce:	dd4a      	ble.n	8011d66 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011cd0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8011cd4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011cd8:	1a9b      	subs	r3, r3, r2
 8011cda:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011cde:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8011ce2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8011ce6:	1a9b      	subs	r3, r3, r2
 8011ce8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011cec:	6823      	ldr	r3, [r4, #0]
 8011cee:	4641      	mov	r1, r8
 8011cf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cf2:	4620      	mov	r0, r4
 8011cf4:	4798      	blx	r3
 8011cf6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8011cfa:	2b00      	cmp	r3, #0
 8011cfc:	d053      	beq.n	8011da6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8011cfe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8011d00:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8011d02:	682b      	ldr	r3, [r5, #0]
 8011d04:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8011d08:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8011d0c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011d10:	785b      	ldrb	r3, [r3, #1]
 8011d12:	9209      	str	r2, [sp, #36]	; 0x24
 8011d14:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8011d18:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011d1c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8011d20:	2300      	movs	r3, #0
 8011d22:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8011d26:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8011d2a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8011d2e:	4b22      	ldr	r3, [pc, #136]	; (8011db8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8011d30:	9607      	str	r6, [sp, #28]
 8011d32:	681b      	ldr	r3, [r3, #0]
 8011d34:	f88d 5020 	strb.w	r5, [sp, #32]
 8011d38:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011d3c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011d40:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011d44:	b10a      	cbz	r2, 8011d4a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8011d46:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8011d48:	b904      	cbnz	r4, 8011d4c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8011d4a:	689c      	ldr	r4, [r3, #8]
 8011d4c:	4b1b      	ldr	r3, [pc, #108]	; (8011dbc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8011d4e:	6818      	ldr	r0, [r3, #0]
 8011d50:	f7f5 fc7e 	bl	8007650 <_ZNK8touchgfx5Texts7getTextEt>
 8011d54:	ab07      	add	r3, sp, #28
 8011d56:	9001      	str	r0, [sp, #4]
 8011d58:	9300      	str	r3, [sp, #0]
 8011d5a:	e898 0006 	ldmia.w	r8, {r1, r2}
 8011d5e:	464b      	mov	r3, r9
 8011d60:	4620      	mov	r0, r4
 8011d62:	f7f5 fc27 	bl	80075b4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011d66:	b00d      	add	sp, #52	; 0x34
 8011d68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011d6c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011d70:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011d74:	1ad2      	subs	r2, r2, r3
 8011d76:	3201      	adds	r2, #1
 8011d78:	e78d      	b.n	8011c96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8011d7a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011d7e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011d82:	1ad2      	subs	r2, r2, r3
 8011d84:	3201      	adds	r2, #1
 8011d86:	2002      	movs	r0, #2
 8011d88:	f8ad 3010 	strh.w	r3, [sp, #16]
 8011d8c:	fb92 f2f0 	sdiv	r2, r2, r0
 8011d90:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011d94:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011d98:	e786      	b.n	8011ca8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8011d9a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011d9e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011da2:	1ad2      	subs	r2, r2, r3
 8011da4:	e7ef      	b.n	8011d86 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8011da6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8011da8:	e7aa      	b.n	8011d00 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8011daa:	bf00      	nop
 8011dac:	20013818 	.word	0x20013818
 8011db0:	20013814 	.word	0x20013814
 8011db4:	2001381c 	.word	0x2001381c
 8011db8:	200137bc 	.word	0x200137bc
 8011dbc:	20013820 	.word	0x20013820

08011dc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8011dc0:	b510      	push	{r4, lr}
 8011dc2:	2101      	movs	r1, #1
 8011dc4:	4c13      	ldr	r4, [pc, #76]	; (8011e14 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8011dc6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011dca:	2200      	movs	r2, #0
 8011dcc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8011dd0:	6004      	str	r4, [r0, #0]
 8011dd2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011dd6:	4c10      	ldr	r4, [pc, #64]	; (8011e18 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8011dd8:	8082      	strh	r2, [r0, #4]
 8011dda:	80c2      	strh	r2, [r0, #6]
 8011ddc:	8102      	strh	r2, [r0, #8]
 8011dde:	8142      	strh	r2, [r0, #10]
 8011de0:	8182      	strh	r2, [r0, #12]
 8011de2:	81c2      	strh	r2, [r0, #14]
 8011de4:	8202      	strh	r2, [r0, #16]
 8011de6:	8242      	strh	r2, [r0, #18]
 8011de8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011dec:	61c2      	str	r2, [r0, #28]
 8011dee:	8402      	strh	r2, [r0, #32]
 8011df0:	8442      	strh	r2, [r0, #34]	; 0x22
 8011df2:	6282      	str	r2, [r0, #40]	; 0x28
 8011df4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8011df8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8011dfa:	8601      	strh	r1, [r0, #48]	; 0x30
 8011dfc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8011e00:	6344      	str	r4, [r0, #52]	; 0x34
 8011e02:	8701      	strh	r1, [r0, #56]	; 0x38
 8011e04:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8011e08:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8011e0c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8011e10:	bd10      	pop	{r4, pc}
 8011e12:	bf00      	nop
 8011e14:	0802c194 	.word	0x0802c194
 8011e18:	080297fc 	.word	0x080297fc

08011e1c <_ZN8touchgfx7OutlineD1Ev>:
 8011e1c:	4770      	bx	lr

08011e1e <_ZN8touchgfx7OutlineD0Ev>:
 8011e1e:	b510      	push	{r4, lr}
 8011e20:	2130      	movs	r1, #48	; 0x30
 8011e22:	4604      	mov	r4, r0
 8011e24:	f015 f8f3 	bl	802700e <_ZdlPvj>
 8011e28:	4620      	mov	r0, r4
 8011e2a:	bd10      	pop	{r4, pc}

08011e2c <_ZN8touchgfx7Outline5resetEv>:
 8011e2c:	b510      	push	{r4, lr}
 8011e2e:	4604      	mov	r4, r0
 8011e30:	f000 fe96 	bl	8012b60 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8011e34:	60e0      	str	r0, [r4, #12]
 8011e36:	f000 fe99 	bl	8012b6c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8011e3a:	68e3      	ldr	r3, [r4, #12]
 8011e3c:	6123      	str	r3, [r4, #16]
 8011e3e:	08c0      	lsrs	r0, r0, #3
 8011e40:	2200      	movs	r2, #0
 8011e42:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8011e46:	3801      	subs	r0, #1
 8011e48:	6060      	str	r0, [r4, #4]
 8011e4a:	60a2      	str	r2, [r4, #8]
 8011e4c:	8019      	strh	r1, [r3, #0]
 8011e4e:	8059      	strh	r1, [r3, #2]
 8011e50:	809a      	strh	r2, [r3, #4]
 8011e52:	80da      	strh	r2, [r3, #6]
 8011e54:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011e56:	f023 0301 	bic.w	r3, r3, #1
 8011e5a:	f043 0302 	orr.w	r3, r3, #2
 8011e5e:	6263      	str	r3, [r4, #36]	; 0x24
 8011e60:	bd10      	pop	{r4, pc}
	...

08011e64 <_ZN8touchgfx7OutlineC1Ev>:
 8011e64:	b510      	push	{r4, lr}
 8011e66:	4b0a      	ldr	r3, [pc, #40]	; (8011e90 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8011e68:	6003      	str	r3, [r0, #0]
 8011e6a:	2300      	movs	r3, #0
 8011e6c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8011e70:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8011e74:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8011e78:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8011e7c:	6243      	str	r3, [r0, #36]	; 0x24
 8011e7e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8011e82:	4604      	mov	r4, r0
 8011e84:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8011e88:	f7ff ffd0 	bl	8011e2c <_ZN8touchgfx7Outline5resetEv>
 8011e8c:	4620      	mov	r0, r4
 8011e8e:	bd10      	pop	{r4, pc}
 8011e90:	0802c208 	.word	0x0802c208

08011e94 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8011e94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e98:	b093      	sub	sp, #76	; 0x4c
 8011e9a:	1156      	asrs	r6, r2, #5
 8011e9c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8011e9e:	9305      	str	r3, [sp, #20]
 8011ea0:	f004 051f 	and.w	r5, r4, #31
 8011ea4:	1153      	asrs	r3, r2, #5
 8011ea6:	9504      	str	r5, [sp, #16]
 8011ea8:	1165      	asrs	r5, r4, #5
 8011eaa:	9303      	str	r3, [sp, #12]
 8011eac:	42ae      	cmp	r6, r5
 8011eae:	ea4f 1364 	mov.w	r3, r4, asr #5
 8011eb2:	9306      	str	r3, [sp, #24]
 8011eb4:	f002 031f 	and.w	r3, r2, #31
 8011eb8:	f040 80f8 	bne.w	80120ac <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8011ebc:	9c04      	ldr	r4, [sp, #16]
 8011ebe:	9a05      	ldr	r2, [sp, #20]
 8011ec0:	42a3      	cmp	r3, r4
 8011ec2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8011ec6:	6902      	ldr	r2, [r0, #16]
 8011ec8:	d125      	bne.n	8011f16 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8011eca:	f9b2 3000 	ldrsh.w	r3, [r2]
 8011ece:	459e      	cmp	lr, r3
 8011ed0:	d103      	bne.n	8011eda <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8011ed2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011ed6:	429e      	cmp	r6, r3
 8011ed8:	d035      	beq.n	8011f46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011eda:	88d1      	ldrh	r1, [r2, #6]
 8011edc:	8893      	ldrh	r3, [r2, #4]
 8011ede:	430b      	orrs	r3, r1
 8011ee0:	d010      	beq.n	8011f04 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011ee2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011ee6:	2b00      	cmp	r3, #0
 8011ee8:	db0c      	blt.n	8011f04 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011eea:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8011eec:	428b      	cmp	r3, r1
 8011eee:	da09      	bge.n	8011f04 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011ef0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8011ef4:	428b      	cmp	r3, r1
 8011ef6:	bf38      	it	cc
 8011ef8:	3208      	addcc	r2, #8
 8011efa:	f103 0301 	add.w	r3, r3, #1
 8011efe:	bf38      	it	cc
 8011f00:	6102      	strcc	r2, [r0, #16]
 8011f02:	6083      	str	r3, [r0, #8]
 8011f04:	6903      	ldr	r3, [r0, #16]
 8011f06:	9a03      	ldr	r2, [sp, #12]
 8011f08:	f8a3 e000 	strh.w	lr, [r3]
 8011f0c:	805a      	strh	r2, [r3, #2]
 8011f0e:	2200      	movs	r2, #0
 8011f10:	809a      	strh	r2, [r3, #4]
 8011f12:	80da      	strh	r2, [r3, #6]
 8011f14:	e017      	b.n	8011f46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011f16:	9c05      	ldr	r4, [sp, #20]
 8011f18:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8011f1c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8011f20:	f004 041f 	and.w	r4, r4, #31
 8011f24:	114e      	asrs	r6, r1, #5
 8011f26:	9402      	str	r4, [sp, #8]
 8011f28:	9c04      	ldr	r4, [sp, #16]
 8011f2a:	4576      	cmp	r6, lr
 8011f2c:	f001 0c1f 	and.w	ip, r1, #31
 8011f30:	eba4 0403 	sub.w	r4, r4, r3
 8011f34:	d10a      	bne.n	8011f4c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8011f36:	9b02      	ldr	r3, [sp, #8]
 8011f38:	449c      	add	ip, r3
 8011f3a:	44a0      	add	r8, r4
 8011f3c:	fb04 a40c 	mla	r4, r4, ip, sl
 8011f40:	f8a2 8004 	strh.w	r8, [r2, #4]
 8011f44:	80d4      	strh	r4, [r2, #6]
 8011f46:	b013      	add	sp, #76	; 0x4c
 8011f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f4c:	9d05      	ldr	r5, [sp, #20]
 8011f4e:	1a69      	subs	r1, r5, r1
 8011f50:	bf5b      	ittet	pl
 8011f52:	f1cc 0520 	rsbpl	r5, ip, #32
 8011f56:	436c      	mulpl	r4, r5
 8011f58:	2500      	movmi	r5, #0
 8011f5a:	2520      	movpl	r5, #32
 8011f5c:	bf44      	itt	mi
 8011f5e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8011f62:	4249      	negmi	r1, r1
 8011f64:	9501      	str	r5, [sp, #4]
 8011f66:	9f01      	ldr	r7, [sp, #4]
 8011f68:	fb94 f5f1 	sdiv	r5, r4, r1
 8011f6c:	fb01 4415 	mls	r4, r1, r5, r4
 8011f70:	bf54      	ite	pl
 8011f72:	f04f 0901 	movpl.w	r9, #1
 8011f76:	f04f 39ff 	movmi.w	r9, #4294967295
 8011f7a:	2c00      	cmp	r4, #0
 8011f7c:	bfb8      	it	lt
 8011f7e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8011f82:	44bc      	add	ip, r7
 8011f84:	44a8      	add	r8, r5
 8011f86:	fb05 ac0c 	mla	ip, r5, ip, sl
 8011f8a:	f8a2 8004 	strh.w	r8, [r2, #4]
 8011f8e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011f92:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011f96:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8011f9a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8011f9e:	bfb8      	it	lt
 8011fa0:	1864      	addlt	r4, r4, r1
 8011fa2:	ea58 0202 	orrs.w	r2, r8, r2
 8011fa6:	444e      	add	r6, r9
 8011fa8:	d011      	beq.n	8011fce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8011faa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8011fae:	f1b8 0f00 	cmp.w	r8, #0
 8011fb2:	db0c      	blt.n	8011fce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8011fb4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8011fb6:	4590      	cmp	r8, r2
 8011fb8:	da09      	bge.n	8011fce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8011fba:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8011fbe:	4590      	cmp	r8, r2
 8011fc0:	bf3c      	itt	cc
 8011fc2:	f10c 0208 	addcc.w	r2, ip, #8
 8011fc6:	6102      	strcc	r2, [r0, #16]
 8011fc8:	f108 0201 	add.w	r2, r8, #1
 8011fcc:	6082      	str	r2, [r0, #8]
 8011fce:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011fd2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011fd6:	f8ac 6000 	strh.w	r6, [ip]
 8011fda:	2700      	movs	r7, #0
 8011fdc:	45b6      	cmp	lr, r6
 8011fde:	f8ac 2002 	strh.w	r2, [ip, #2]
 8011fe2:	f8ac 7004 	strh.w	r7, [ip, #4]
 8011fe6:	f8ac 7006 	strh.w	r7, [ip, #6]
 8011fea:	442b      	add	r3, r5
 8011fec:	d04d      	beq.n	801208a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8011fee:	9f04      	ldr	r7, [sp, #16]
 8011ff0:	1aff      	subs	r7, r7, r3
 8011ff2:	443d      	add	r5, r7
 8011ff4:	016d      	lsls	r5, r5, #5
 8011ff6:	fb95 f8f1 	sdiv	r8, r5, r1
 8011ffa:	fb01 5518 	mls	r5, r1, r8, r5
 8011ffe:	2d00      	cmp	r5, #0
 8012000:	bfb8      	it	lt
 8012002:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012006:	f108 0701 	add.w	r7, r8, #1
 801200a:	bfb8      	it	lt
 801200c:	186d      	addlt	r5, r5, r1
 801200e:	1a64      	subs	r4, r4, r1
 8012010:	9703      	str	r7, [sp, #12]
 8012012:	f04f 0a00 	mov.w	sl, #0
 8012016:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801201a:	1964      	adds	r4, r4, r5
 801201c:	bf58      	it	pl
 801201e:	9f03      	ldrpl	r7, [sp, #12]
 8012020:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012024:	bf48      	it	mi
 8012026:	4647      	movmi	r7, r8
 8012028:	44bb      	add	fp, r7
 801202a:	f8ac b004 	strh.w	fp, [ip, #4]
 801202e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012032:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012036:	f8ac b006 	strh.w	fp, [ip, #6]
 801203a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801203e:	443b      	add	r3, r7
 8012040:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012044:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012048:	bf58      	it	pl
 801204a:	1a64      	subpl	r4, r4, r1
 801204c:	ea5b 0707 	orrs.w	r7, fp, r7
 8012050:	444e      	add	r6, r9
 8012052:	d011      	beq.n	8012078 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012054:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012058:	f1bb 0f00 	cmp.w	fp, #0
 801205c:	db0c      	blt.n	8012078 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801205e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012060:	45bb      	cmp	fp, r7
 8012062:	da09      	bge.n	8012078 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012064:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012068:	45bb      	cmp	fp, r7
 801206a:	bf3c      	itt	cc
 801206c:	f10c 0708 	addcc.w	r7, ip, #8
 8012070:	6107      	strcc	r7, [r0, #16]
 8012072:	f10b 0701 	add.w	r7, fp, #1
 8012076:	6087      	str	r7, [r0, #8]
 8012078:	6907      	ldr	r7, [r0, #16]
 801207a:	45b6      	cmp	lr, r6
 801207c:	803e      	strh	r6, [r7, #0]
 801207e:	807a      	strh	r2, [r7, #2]
 8012080:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012084:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012088:	d1c5      	bne.n	8012016 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801208a:	9a04      	ldr	r2, [sp, #16]
 801208c:	1ad3      	subs	r3, r2, r3
 801208e:	6902      	ldr	r2, [r0, #16]
 8012090:	8891      	ldrh	r1, [r2, #4]
 8012092:	88d6      	ldrh	r6, [r2, #6]
 8012094:	4419      	add	r1, r3
 8012096:	8091      	strh	r1, [r2, #4]
 8012098:	9902      	ldr	r1, [sp, #8]
 801209a:	f101 0c20 	add.w	ip, r1, #32
 801209e:	9901      	ldr	r1, [sp, #4]
 80120a0:	ebac 0c01 	sub.w	ip, ip, r1
 80120a4:	fb03 630c 	mla	r3, r3, ip, r6
 80120a8:	80d3      	strh	r3, [r2, #6]
 80120aa:	e74c      	b.n	8011f46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80120ac:	9d05      	ldr	r5, [sp, #20]
 80120ae:	1aa2      	subs	r2, r4, r2
 80120b0:	eba5 0501 	sub.w	r5, r5, r1
 80120b4:	9508      	str	r5, [sp, #32]
 80120b6:	9202      	str	r2, [sp, #8]
 80120b8:	f140 8128 	bpl.w	801230c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80120bc:	9a03      	ldr	r2, [sp, #12]
 80120be:	2a00      	cmp	r2, #0
 80120c0:	f6ff af41 	blt.w	8011f46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80120c4:	9a02      	ldr	r2, [sp, #8]
 80120c6:	4252      	negs	r2, r2
 80120c8:	9202      	str	r2, [sp, #8]
 80120ca:	9a06      	ldr	r2, [sp, #24]
 80120cc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 80120d0:	f04f 34ff 	mov.w	r4, #4294967295
 80120d4:	9206      	str	r2, [sp, #24]
 80120d6:	462a      	mov	r2, r5
 80120d8:	940b      	str	r4, [sp, #44]	; 0x2c
 80120da:	435a      	muls	r2, r3
 80120dc:	2400      	movs	r4, #0
 80120de:	9d02      	ldr	r5, [sp, #8]
 80120e0:	9401      	str	r4, [sp, #4]
 80120e2:	9c02      	ldr	r4, [sp, #8]
 80120e4:	fb92 f4f4 	sdiv	r4, r2, r4
 80120e8:	fb05 2214 	mls	r2, r5, r4, r2
 80120ec:	2a00      	cmp	r2, #0
 80120ee:	9207      	str	r2, [sp, #28]
 80120f0:	bfbc      	itt	lt
 80120f2:	1952      	addlt	r2, r2, r5
 80120f4:	9207      	strlt	r2, [sp, #28]
 80120f6:	9a01      	ldr	r2, [sp, #4]
 80120f8:	6905      	ldr	r5, [r0, #16]
 80120fa:	bfb8      	it	lt
 80120fc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012100:	eb04 0901 	add.w	r9, r4, r1
 8012104:	429a      	cmp	r2, r3
 8012106:	ea4f 1669 	mov.w	r6, r9, asr #5
 801210a:	f040 8112 	bne.w	8012332 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801210e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012112:	429e      	cmp	r6, r3
 8012114:	d104      	bne.n	8012120 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012116:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801211a:	9a03      	ldr	r2, [sp, #12]
 801211c:	429a      	cmp	r2, r3
 801211e:	d01b      	beq.n	8012158 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012120:	88ea      	ldrh	r2, [r5, #6]
 8012122:	88ab      	ldrh	r3, [r5, #4]
 8012124:	4313      	orrs	r3, r2
 8012126:	d010      	beq.n	801214a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012128:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801212c:	2a00      	cmp	r2, #0
 801212e:	db0c      	blt.n	801214a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012130:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012132:	429a      	cmp	r2, r3
 8012134:	da09      	bge.n	801214a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012136:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801213a:	429a      	cmp	r2, r3
 801213c:	bf38      	it	cc
 801213e:	3508      	addcc	r5, #8
 8012140:	f102 0201 	add.w	r2, r2, #1
 8012144:	bf38      	it	cc
 8012146:	6105      	strcc	r5, [r0, #16]
 8012148:	6082      	str	r2, [r0, #8]
 801214a:	6903      	ldr	r3, [r0, #16]
 801214c:	9a03      	ldr	r2, [sp, #12]
 801214e:	805a      	strh	r2, [r3, #2]
 8012150:	2200      	movs	r2, #0
 8012152:	801e      	strh	r6, [r3, #0]
 8012154:	809a      	strh	r2, [r3, #4]
 8012156:	80da      	strh	r2, [r3, #6]
 8012158:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801215a:	9a03      	ldr	r2, [sp, #12]
 801215c:	6901      	ldr	r1, [r0, #16]
 801215e:	441a      	add	r2, r3
 8012160:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012164:	42b3      	cmp	r3, r6
 8012166:	d103      	bne.n	8012170 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012168:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801216c:	429a      	cmp	r2, r3
 801216e:	d01a      	beq.n	80121a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012170:	88cc      	ldrh	r4, [r1, #6]
 8012172:	888b      	ldrh	r3, [r1, #4]
 8012174:	4323      	orrs	r3, r4
 8012176:	d010      	beq.n	801219a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012178:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801217c:	2c00      	cmp	r4, #0
 801217e:	db0c      	blt.n	801219a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012180:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012182:	429c      	cmp	r4, r3
 8012184:	da09      	bge.n	801219a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012186:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801218a:	429c      	cmp	r4, r3
 801218c:	bf38      	it	cc
 801218e:	3108      	addcc	r1, #8
 8012190:	f104 0401 	add.w	r4, r4, #1
 8012194:	bf38      	it	cc
 8012196:	6101      	strcc	r1, [r0, #16]
 8012198:	6084      	str	r4, [r0, #8]
 801219a:	6903      	ldr	r3, [r0, #16]
 801219c:	2100      	movs	r1, #0
 801219e:	801e      	strh	r6, [r3, #0]
 80121a0:	805a      	strh	r2, [r3, #2]
 80121a2:	8099      	strh	r1, [r3, #4]
 80121a4:	80d9      	strh	r1, [r3, #6]
 80121a6:	9b06      	ldr	r3, [sp, #24]
 80121a8:	4293      	cmp	r3, r2
 80121aa:	f000 8082 	beq.w	80122b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80121ae:	9b08      	ldr	r3, [sp, #32]
 80121b0:	9c02      	ldr	r4, [sp, #8]
 80121b2:	9902      	ldr	r1, [sp, #8]
 80121b4:	015b      	lsls	r3, r3, #5
 80121b6:	fb93 f1f1 	sdiv	r1, r3, r1
 80121ba:	fb04 3311 	mls	r3, r4, r1, r3
 80121be:	2b00      	cmp	r3, #0
 80121c0:	9103      	str	r1, [sp, #12]
 80121c2:	9308      	str	r3, [sp, #32]
 80121c4:	da04      	bge.n	80121d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80121c6:	1e4b      	subs	r3, r1, #1
 80121c8:	9303      	str	r3, [sp, #12]
 80121ca:	9b08      	ldr	r3, [sp, #32]
 80121cc:	4423      	add	r3, r4
 80121ce:	9308      	str	r3, [sp, #32]
 80121d0:	9b07      	ldr	r3, [sp, #28]
 80121d2:	9902      	ldr	r1, [sp, #8]
 80121d4:	1a5b      	subs	r3, r3, r1
 80121d6:	9307      	str	r3, [sp, #28]
 80121d8:	9b01      	ldr	r3, [sp, #4]
 80121da:	f1c3 0320 	rsb	r3, r3, #32
 80121de:	930e      	str	r3, [sp, #56]	; 0x38
 80121e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80121e2:	9b01      	ldr	r3, [sp, #4]
 80121e4:	1a5b      	subs	r3, r3, r1
 80121e6:	464f      	mov	r7, r9
 80121e8:	930a      	str	r3, [sp, #40]	; 0x28
 80121ea:	2600      	movs	r6, #0
 80121ec:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80121f0:	185b      	adds	r3, r3, r1
 80121f2:	bf58      	it	pl
 80121f4:	9902      	ldrpl	r1, [sp, #8]
 80121f6:	9307      	str	r3, [sp, #28]
 80121f8:	bf5d      	ittte	pl
 80121fa:	1a5b      	subpl	r3, r3, r1
 80121fc:	9307      	strpl	r3, [sp, #28]
 80121fe:	9b03      	ldrpl	r3, [sp, #12]
 8012200:	9903      	ldrmi	r1, [sp, #12]
 8012202:	bf58      	it	pl
 8012204:	1c59      	addpl	r1, r3, #1
 8012206:	4489      	add	r9, r1
 8012208:	2a00      	cmp	r2, #0
 801220a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801220e:	db2e      	blt.n	801226e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012210:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012212:	4293      	cmp	r3, r2
 8012214:	dd2b      	ble.n	801226e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012216:	9c01      	ldr	r4, [sp, #4]
 8012218:	6905      	ldr	r5, [r0, #16]
 801221a:	46a0      	mov	r8, r4
 801221c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801221e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012222:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012226:	45a0      	cmp	r8, r4
 8012228:	f040 814f 	bne.w	80124ca <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801222c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012230:	4551      	cmp	r1, sl
 8012232:	d103      	bne.n	801223c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012234:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012238:	4291      	cmp	r1, r2
 801223a:	d018      	beq.n	801226e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801223c:	ea5c 010e 	orrs.w	r1, ip, lr
 8012240:	d00f      	beq.n	8012262 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012242:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012246:	2900      	cmp	r1, #0
 8012248:	db0b      	blt.n	8012262 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801224a:	428b      	cmp	r3, r1
 801224c:	dd09      	ble.n	8012262 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801224e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012252:	4299      	cmp	r1, r3
 8012254:	bf38      	it	cc
 8012256:	3508      	addcc	r5, #8
 8012258:	f101 0101 	add.w	r1, r1, #1
 801225c:	bf38      	it	cc
 801225e:	6105      	strcc	r5, [r0, #16]
 8012260:	6081      	str	r1, [r0, #8]
 8012262:	6903      	ldr	r3, [r0, #16]
 8012264:	f8a3 a000 	strh.w	sl, [r3]
 8012268:	805a      	strh	r2, [r3, #2]
 801226a:	809e      	strh	r6, [r3, #4]
 801226c:	80de      	strh	r6, [r3, #6]
 801226e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012270:	6901      	ldr	r1, [r0, #16]
 8012272:	441a      	add	r2, r3
 8012274:	88cc      	ldrh	r4, [r1, #6]
 8012276:	888b      	ldrh	r3, [r1, #4]
 8012278:	4323      	orrs	r3, r4
 801227a:	d010      	beq.n	801229e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801227c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012280:	2c00      	cmp	r4, #0
 8012282:	db0c      	blt.n	801229e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012284:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012286:	429c      	cmp	r4, r3
 8012288:	da09      	bge.n	801229e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801228a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801228e:	429c      	cmp	r4, r3
 8012290:	bf38      	it	cc
 8012292:	3108      	addcc	r1, #8
 8012294:	f104 0401 	add.w	r4, r4, #1
 8012298:	bf38      	it	cc
 801229a:	6101      	strcc	r1, [r0, #16]
 801229c:	6084      	str	r4, [r0, #8]
 801229e:	6903      	ldr	r3, [r0, #16]
 80122a0:	f8a3 a000 	strh.w	sl, [r3]
 80122a4:	805a      	strh	r2, [r3, #2]
 80122a6:	809e      	strh	r6, [r3, #4]
 80122a8:	80de      	strh	r6, [r3, #6]
 80122aa:	9b06      	ldr	r3, [sp, #24]
 80122ac:	4293      	cmp	r3, r2
 80122ae:	464f      	mov	r7, r9
 80122b0:	d19c      	bne.n	80121ec <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80122b2:	9b01      	ldr	r3, [sp, #4]
 80122b4:	6907      	ldr	r7, [r0, #16]
 80122b6:	f1c3 0620 	rsb	r6, r3, #32
 80122ba:	9b05      	ldr	r3, [sp, #20]
 80122bc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80122c0:	9b04      	ldr	r3, [sp, #16]
 80122c2:	429e      	cmp	r6, r3
 80122c4:	f040 81cc 	bne.w	8012660 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80122c8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80122cc:	459e      	cmp	lr, r3
 80122ce:	d104      	bne.n	80122da <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80122d0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80122d4:	429a      	cmp	r2, r3
 80122d6:	f43f ae36 	beq.w	8011f46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80122da:	88f9      	ldrh	r1, [r7, #6]
 80122dc:	88bb      	ldrh	r3, [r7, #4]
 80122de:	430b      	orrs	r3, r1
 80122e0:	d010      	beq.n	8012304 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80122e2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80122e6:	2b00      	cmp	r3, #0
 80122e8:	db0c      	blt.n	8012304 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80122ea:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80122ec:	428b      	cmp	r3, r1
 80122ee:	da09      	bge.n	8012304 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80122f0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80122f4:	428b      	cmp	r3, r1
 80122f6:	bf38      	it	cc
 80122f8:	3708      	addcc	r7, #8
 80122fa:	f103 0301 	add.w	r3, r3, #1
 80122fe:	bf38      	it	cc
 8012300:	6107      	strcc	r7, [r0, #16]
 8012302:	6083      	str	r3, [r0, #8]
 8012304:	6903      	ldr	r3, [r0, #16]
 8012306:	f8a3 e000 	strh.w	lr, [r3]
 801230a:	e5ff      	b.n	8011f0c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801230c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801230e:	9c03      	ldr	r4, [sp, #12]
 8012310:	42a2      	cmp	r2, r4
 8012312:	f6ff ae18 	blt.w	8011f46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012316:	9c06      	ldr	r4, [sp, #24]
 8012318:	42a2      	cmp	r2, r4
 801231a:	bfb8      	it	lt
 801231c:	3201      	addlt	r2, #1
 801231e:	9c08      	ldr	r4, [sp, #32]
 8012320:	bfb8      	it	lt
 8012322:	9206      	strlt	r2, [sp, #24]
 8012324:	f1c3 0220 	rsb	r2, r3, #32
 8012328:	4362      	muls	r2, r4
 801232a:	2401      	movs	r4, #1
 801232c:	940b      	str	r4, [sp, #44]	; 0x2c
 801232e:	2420      	movs	r4, #32
 8012330:	e6d5      	b.n	80120de <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012332:	f009 021f 	and.w	r2, r9, #31
 8012336:	ea4f 1861 	mov.w	r8, r1, asr #5
 801233a:	920c      	str	r2, [sp, #48]	; 0x30
 801233c:	9a01      	ldr	r2, [sp, #4]
 801233e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012342:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012346:	45b0      	cmp	r8, r6
 8012348:	f001 011f 	and.w	r1, r1, #31
 801234c:	eba2 0203 	sub.w	r2, r2, r3
 8012350:	d108      	bne.n	8012364 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012352:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012354:	4419      	add	r1, r3
 8012356:	4496      	add	lr, r2
 8012358:	fb02 a101 	mla	r1, r2, r1, sl
 801235c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012360:	80e9      	strh	r1, [r5, #6]
 8012362:	e6f9      	b.n	8012158 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012364:	2c00      	cmp	r4, #0
 8012366:	f2c0 80a9 	blt.w	80124bc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801236a:	2701      	movs	r7, #1
 801236c:	f1c1 0c20 	rsb	ip, r1, #32
 8012370:	970a      	str	r7, [sp, #40]	; 0x28
 8012372:	fb02 f20c 	mul.w	r2, r2, ip
 8012376:	2720      	movs	r7, #32
 8012378:	9709      	str	r7, [sp, #36]	; 0x24
 801237a:	fb92 fcf4 	sdiv	ip, r2, r4
 801237e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012380:	fb04 221c 	mls	r2, r4, ip, r2
 8012384:	2a00      	cmp	r2, #0
 8012386:	bfb8      	it	lt
 8012388:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801238c:	4439      	add	r1, r7
 801238e:	fb0c a101 	mla	r1, ip, r1, sl
 8012392:	80e9      	strh	r1, [r5, #6]
 8012394:	44e6      	add	lr, ip
 8012396:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012398:	f8a5 e004 	strh.w	lr, [r5, #4]
 801239c:	eb08 0501 	add.w	r5, r8, r1
 80123a0:	6901      	ldr	r1, [r0, #16]
 80123a2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80123a6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80123aa:	bfb8      	it	lt
 80123ac:	1912      	addlt	r2, r2, r4
 80123ae:	ea58 070e 	orrs.w	r7, r8, lr
 80123b2:	d010      	beq.n	80123d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80123b4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80123b8:	f1be 0f00 	cmp.w	lr, #0
 80123bc:	db0b      	blt.n	80123d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80123be:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80123c0:	45be      	cmp	lr, r7
 80123c2:	da08      	bge.n	80123d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80123c4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80123c8:	45be      	cmp	lr, r7
 80123ca:	bf3c      	itt	cc
 80123cc:	3108      	addcc	r1, #8
 80123ce:	6101      	strcc	r1, [r0, #16]
 80123d0:	f10e 0101 	add.w	r1, lr, #1
 80123d4:	6081      	str	r1, [r0, #8]
 80123d6:	6901      	ldr	r1, [r0, #16]
 80123d8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80123dc:	800d      	strh	r5, [r1, #0]
 80123de:	f04f 0e00 	mov.w	lr, #0
 80123e2:	42ae      	cmp	r6, r5
 80123e4:	f8a1 8002 	strh.w	r8, [r1, #2]
 80123e8:	f8a1 e004 	strh.w	lr, [r1, #4]
 80123ec:	f8a1 e006 	strh.w	lr, [r1, #6]
 80123f0:	4463      	add	r3, ip
 80123f2:	d054      	beq.n	801249e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80123f4:	9901      	ldr	r1, [sp, #4]
 80123f6:	1ac9      	subs	r1, r1, r3
 80123f8:	4461      	add	r1, ip
 80123fa:	0149      	lsls	r1, r1, #5
 80123fc:	fb91 fef4 	sdiv	lr, r1, r4
 8012400:	fb04 111e 	mls	r1, r4, lr, r1
 8012404:	2900      	cmp	r1, #0
 8012406:	bfb8      	it	lt
 8012408:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801240c:	f10e 0701 	add.w	r7, lr, #1
 8012410:	bfb8      	it	lt
 8012412:	1909      	addlt	r1, r1, r4
 8012414:	1b12      	subs	r2, r2, r4
 8012416:	970d      	str	r7, [sp, #52]	; 0x34
 8012418:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801241c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801241e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012422:	1852      	adds	r2, r2, r1
 8012424:	bf54      	ite	pl
 8012426:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801242a:	46f4      	movmi	ip, lr
 801242c:	44e3      	add	fp, ip
 801242e:	f8aa b004 	strh.w	fp, [sl, #4]
 8012432:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012436:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801243a:	f8aa b006 	strh.w	fp, [sl, #6]
 801243e:	4463      	add	r3, ip
 8012440:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012444:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012448:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801244c:	bf58      	it	pl
 801244e:	1b12      	subpl	r2, r2, r4
 8012450:	443d      	add	r5, r7
 8012452:	ea5b 070a 	orrs.w	r7, fp, sl
 8012456:	d014      	beq.n	8012482 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012458:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801245c:	f1ba 0f00 	cmp.w	sl, #0
 8012460:	db0f      	blt.n	8012482 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012462:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012464:	45ba      	cmp	sl, r7
 8012466:	da0c      	bge.n	8012482 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012468:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801246c:	45ba      	cmp	sl, r7
 801246e:	bf38      	it	cc
 8012470:	f10c 0c08 	addcc.w	ip, ip, #8
 8012474:	f10a 0a01 	add.w	sl, sl, #1
 8012478:	bf38      	it	cc
 801247a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801247e:	f8c0 a008 	str.w	sl, [r0, #8]
 8012482:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012486:	f04f 0700 	mov.w	r7, #0
 801248a:	42ae      	cmp	r6, r5
 801248c:	f8ac 5000 	strh.w	r5, [ip]
 8012490:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012494:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012498:	f8ac 7006 	strh.w	r7, [ip, #6]
 801249c:	d1bc      	bne.n	8012418 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801249e:	6904      	ldr	r4, [r0, #16]
 80124a0:	9a01      	ldr	r2, [sp, #4]
 80124a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80124a4:	1ad3      	subs	r3, r2, r3
 80124a6:	88a2      	ldrh	r2, [r4, #4]
 80124a8:	441a      	add	r2, r3
 80124aa:	80a2      	strh	r2, [r4, #4]
 80124ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80124ae:	3120      	adds	r1, #32
 80124b0:	1a89      	subs	r1, r1, r2
 80124b2:	88e2      	ldrh	r2, [r4, #6]
 80124b4:	fb03 2301 	mla	r3, r3, r1, r2
 80124b8:	80e3      	strh	r3, [r4, #6]
 80124ba:	e64d      	b.n	8012158 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80124bc:	f04f 37ff 	mov.w	r7, #4294967295
 80124c0:	970a      	str	r7, [sp, #40]	; 0x28
 80124c2:	434a      	muls	r2, r1
 80124c4:	4264      	negs	r4, r4
 80124c6:	2700      	movs	r7, #0
 80124c8:	e756      	b.n	8012378 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80124ca:	ea4f 1867 	mov.w	r8, r7, asr #5
 80124ce:	f009 031f 	and.w	r3, r9, #31
 80124d2:	45d0      	cmp	r8, sl
 80124d4:	f007 071f 	and.w	r7, r7, #31
 80124d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80124da:	fa1f fc8c 	uxth.w	ip, ip
 80124de:	fa1f fe8e 	uxth.w	lr, lr
 80124e2:	d10a      	bne.n	80124fa <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 80124e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80124e6:	449c      	add	ip, r3
 80124e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80124ea:	f8a5 c004 	strh.w	ip, [r5, #4]
 80124ee:	441f      	add	r7, r3
 80124f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80124f2:	fb03 e707 	mla	r7, r3, r7, lr
 80124f6:	80ef      	strh	r7, [r5, #6]
 80124f8:	e6b9      	b.n	801226e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80124fa:	2900      	cmp	r1, #0
 80124fc:	f2c0 80a8 	blt.w	8012650 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012500:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012502:	f1c7 0320 	rsb	r3, r7, #32
 8012506:	4363      	muls	r3, r4
 8012508:	2401      	movs	r4, #1
 801250a:	940d      	str	r4, [sp, #52]	; 0x34
 801250c:	2420      	movs	r4, #32
 801250e:	940c      	str	r4, [sp, #48]	; 0x30
 8012510:	fb93 f4f1 	sdiv	r4, r3, r1
 8012514:	fb01 3b14 	mls	fp, r1, r4, r3
 8012518:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801251a:	f1bb 0f00 	cmp.w	fp, #0
 801251e:	bfb8      	it	lt
 8012520:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012524:	441f      	add	r7, r3
 8012526:	fb04 e707 	mla	r7, r4, r7, lr
 801252a:	44a4      	add	ip, r4
 801252c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012530:	80ef      	strh	r7, [r5, #6]
 8012532:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012536:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012538:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801253c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012540:	bfb8      	it	lt
 8012542:	448b      	addlt	fp, r1
 8012544:	eb08 0503 	add.w	r5, r8, r3
 8012548:	ea5e 0307 	orrs.w	r3, lr, r7
 801254c:	d011      	beq.n	8012572 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801254e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012552:	f1be 0f00 	cmp.w	lr, #0
 8012556:	db0c      	blt.n	8012572 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012558:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801255a:	45be      	cmp	lr, r7
 801255c:	da09      	bge.n	8012572 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801255e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012562:	45be      	cmp	lr, r7
 8012564:	bf3c      	itt	cc
 8012566:	f10c 0708 	addcc.w	r7, ip, #8
 801256a:	6107      	strcc	r7, [r0, #16]
 801256c:	f10e 0701 	add.w	r7, lr, #1
 8012570:	6087      	str	r7, [r0, #8]
 8012572:	6907      	ldr	r7, [r0, #16]
 8012574:	b213      	sxth	r3, r2
 8012576:	9310      	str	r3, [sp, #64]	; 0x40
 8012578:	807b      	strh	r3, [r7, #2]
 801257a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801257c:	803d      	strh	r5, [r7, #0]
 801257e:	4555      	cmp	r5, sl
 8012580:	80be      	strh	r6, [r7, #4]
 8012582:	80fe      	strh	r6, [r7, #6]
 8012584:	eb04 0c03 	add.w	ip, r4, r3
 8012588:	d051      	beq.n	801262e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801258a:	9b01      	ldr	r3, [sp, #4]
 801258c:	eba3 070c 	sub.w	r7, r3, ip
 8012590:	443c      	add	r4, r7
 8012592:	0164      	lsls	r4, r4, #5
 8012594:	fb94 f8f1 	sdiv	r8, r4, r1
 8012598:	fb01 4418 	mls	r4, r1, r8, r4
 801259c:	2c00      	cmp	r4, #0
 801259e:	bfb8      	it	lt
 80125a0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80125a4:	ebab 0301 	sub.w	r3, fp, r1
 80125a8:	f108 0701 	add.w	r7, r8, #1
 80125ac:	bfb8      	it	lt
 80125ae:	1864      	addlt	r4, r4, r1
 80125b0:	9309      	str	r3, [sp, #36]	; 0x24
 80125b2:	9711      	str	r7, [sp, #68]	; 0x44
 80125b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80125b6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80125ba:	191b      	adds	r3, r3, r4
 80125bc:	bf58      	it	pl
 80125be:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 80125c0:	f8be b004 	ldrh.w	fp, [lr, #4]
 80125c4:	9309      	str	r3, [sp, #36]	; 0x24
 80125c6:	bf48      	it	mi
 80125c8:	4647      	movmi	r7, r8
 80125ca:	44bb      	add	fp, r7
 80125cc:	f8ae b004 	strh.w	fp, [lr, #4]
 80125d0:	f8be b006 	ldrh.w	fp, [lr, #6]
 80125d4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80125d8:	f8ae b006 	strh.w	fp, [lr, #6]
 80125dc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80125e0:	44bc      	add	ip, r7
 80125e2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80125e4:	f8be b006 	ldrh.w	fp, [lr, #6]
 80125e8:	443d      	add	r5, r7
 80125ea:	f8be 7004 	ldrh.w	r7, [lr, #4]
 80125ee:	bf5c      	itt	pl
 80125f0:	1a5b      	subpl	r3, r3, r1
 80125f2:	9309      	strpl	r3, [sp, #36]	; 0x24
 80125f4:	ea5b 0307 	orrs.w	r3, fp, r7
 80125f8:	d011      	beq.n	801261e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80125fa:	f9be b002 	ldrsh.w	fp, [lr, #2]
 80125fe:	f1bb 0f00 	cmp.w	fp, #0
 8012602:	db0c      	blt.n	801261e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012604:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012606:	45bb      	cmp	fp, r7
 8012608:	da09      	bge.n	801261e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801260a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801260e:	45bb      	cmp	fp, r7
 8012610:	bf3c      	itt	cc
 8012612:	f10e 0708 	addcc.w	r7, lr, #8
 8012616:	6107      	strcc	r7, [r0, #16]
 8012618:	f10b 0701 	add.w	r7, fp, #1
 801261c:	6087      	str	r7, [r0, #8]
 801261e:	6907      	ldr	r7, [r0, #16]
 8012620:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012622:	803d      	strh	r5, [r7, #0]
 8012624:	4555      	cmp	r5, sl
 8012626:	807b      	strh	r3, [r7, #2]
 8012628:	80be      	strh	r6, [r7, #4]
 801262a:	80fe      	strh	r6, [r7, #6]
 801262c:	d1c2      	bne.n	80125b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801262e:	9b01      	ldr	r3, [sp, #4]
 8012630:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012632:	eba3 0c0c 	sub.w	ip, r3, ip
 8012636:	6903      	ldr	r3, [r0, #16]
 8012638:	8899      	ldrh	r1, [r3, #4]
 801263a:	4461      	add	r1, ip
 801263c:	8099      	strh	r1, [r3, #4]
 801263e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012640:	3720      	adds	r7, #32
 8012642:	1a7f      	subs	r7, r7, r1
 8012644:	88d9      	ldrh	r1, [r3, #6]
 8012646:	fb0c 1c07 	mla	ip, ip, r7, r1
 801264a:	f8a3 c006 	strh.w	ip, [r3, #6]
 801264e:	e60e      	b.n	801226e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012652:	f04f 34ff 	mov.w	r4, #4294967295
 8012656:	940d      	str	r4, [sp, #52]	; 0x34
 8012658:	437b      	muls	r3, r7
 801265a:	4249      	negs	r1, r1
 801265c:	2400      	movs	r4, #0
 801265e:	e756      	b.n	801250e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012660:	9905      	ldr	r1, [sp, #20]
 8012662:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012666:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801266a:	f001 011f 	and.w	r1, r1, #31
 801266e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012672:	9102      	str	r1, [sp, #8]
 8012674:	9904      	ldr	r1, [sp, #16]
 8012676:	45f3      	cmp	fp, lr
 8012678:	f009 0c1f 	and.w	ip, r9, #31
 801267c:	eba1 0406 	sub.w	r4, r1, r6
 8012680:	d108      	bne.n	8012694 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012682:	9b02      	ldr	r3, [sp, #8]
 8012684:	449c      	add	ip, r3
 8012686:	44a0      	add	r8, r4
 8012688:	fb04 a40c 	mla	r4, r4, ip, sl
 801268c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012690:	80fc      	strh	r4, [r7, #6]
 8012692:	e458      	b.n	8011f46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012694:	9905      	ldr	r1, [sp, #20]
 8012696:	ebb1 0109 	subs.w	r1, r1, r9
 801269a:	bf5b      	ittet	pl
 801269c:	f1cc 0520 	rsbpl	r5, ip, #32
 80126a0:	436c      	mulpl	r4, r5
 80126a2:	2500      	movmi	r5, #0
 80126a4:	2520      	movpl	r5, #32
 80126a6:	bf44      	itt	mi
 80126a8:	fb04 f40c 	mulmi.w	r4, r4, ip
 80126ac:	4249      	negmi	r1, r1
 80126ae:	9501      	str	r5, [sp, #4]
 80126b0:	9b01      	ldr	r3, [sp, #4]
 80126b2:	fb94 f5f1 	sdiv	r5, r4, r1
 80126b6:	fb01 4415 	mls	r4, r1, r5, r4
 80126ba:	bf54      	ite	pl
 80126bc:	f04f 0901 	movpl.w	r9, #1
 80126c0:	f04f 39ff 	movmi.w	r9, #4294967295
 80126c4:	2c00      	cmp	r4, #0
 80126c6:	bfb8      	it	lt
 80126c8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80126cc:	449c      	add	ip, r3
 80126ce:	44a8      	add	r8, r5
 80126d0:	fb05 ac0c 	mla	ip, r5, ip, sl
 80126d4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80126d8:	f8a7 c006 	strh.w	ip, [r7, #6]
 80126dc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80126e0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80126e4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80126e8:	bfb8      	it	lt
 80126ea:	1864      	addlt	r4, r4, r1
 80126ec:	ea58 0707 	orrs.w	r7, r8, r7
 80126f0:	eb0b 0309 	add.w	r3, fp, r9
 80126f4:	d011      	beq.n	801271a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80126f6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80126fa:	f1b8 0f00 	cmp.w	r8, #0
 80126fe:	db0c      	blt.n	801271a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012700:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012702:	45b8      	cmp	r8, r7
 8012704:	da09      	bge.n	801271a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012706:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801270a:	45b8      	cmp	r8, r7
 801270c:	bf3c      	itt	cc
 801270e:	f10c 0708 	addcc.w	r7, ip, #8
 8012712:	6107      	strcc	r7, [r0, #16]
 8012714:	f108 0701 	add.w	r7, r8, #1
 8012718:	6087      	str	r7, [r0, #8]
 801271a:	6907      	ldr	r7, [r0, #16]
 801271c:	f04f 0c00 	mov.w	ip, #0
 8012720:	b212      	sxth	r2, r2
 8012722:	459e      	cmp	lr, r3
 8012724:	803b      	strh	r3, [r7, #0]
 8012726:	807a      	strh	r2, [r7, #2]
 8012728:	f8a7 c004 	strh.w	ip, [r7, #4]
 801272c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012730:	442e      	add	r6, r5
 8012732:	d04d      	beq.n	80127d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8012734:	9f04      	ldr	r7, [sp, #16]
 8012736:	1bbf      	subs	r7, r7, r6
 8012738:	443d      	add	r5, r7
 801273a:	016d      	lsls	r5, r5, #5
 801273c:	fb95 f8f1 	sdiv	r8, r5, r1
 8012740:	fb01 5518 	mls	r5, r1, r8, r5
 8012744:	4565      	cmp	r5, ip
 8012746:	bfb8      	it	lt
 8012748:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801274c:	f108 0701 	add.w	r7, r8, #1
 8012750:	bfb8      	it	lt
 8012752:	186d      	addlt	r5, r5, r1
 8012754:	1a64      	subs	r4, r4, r1
 8012756:	9703      	str	r7, [sp, #12]
 8012758:	f04f 0a00 	mov.w	sl, #0
 801275c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012760:	1964      	adds	r4, r4, r5
 8012762:	bf58      	it	pl
 8012764:	9f03      	ldrpl	r7, [sp, #12]
 8012766:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801276a:	bf48      	it	mi
 801276c:	4647      	movmi	r7, r8
 801276e:	44bb      	add	fp, r7
 8012770:	f8ac b004 	strh.w	fp, [ip, #4]
 8012774:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012778:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801277c:	f8ac b006 	strh.w	fp, [ip, #6]
 8012780:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012784:	443e      	add	r6, r7
 8012786:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801278a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801278e:	bf58      	it	pl
 8012790:	1a64      	subpl	r4, r4, r1
 8012792:	ea5b 0707 	orrs.w	r7, fp, r7
 8012796:	444b      	add	r3, r9
 8012798:	d011      	beq.n	80127be <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801279a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801279e:	f1bb 0f00 	cmp.w	fp, #0
 80127a2:	db0c      	blt.n	80127be <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80127a4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80127a6:	45bb      	cmp	fp, r7
 80127a8:	da09      	bge.n	80127be <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80127aa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80127ae:	45bb      	cmp	fp, r7
 80127b0:	bf3c      	itt	cc
 80127b2:	f10c 0708 	addcc.w	r7, ip, #8
 80127b6:	6107      	strcc	r7, [r0, #16]
 80127b8:	f10b 0701 	add.w	r7, fp, #1
 80127bc:	6087      	str	r7, [r0, #8]
 80127be:	6907      	ldr	r7, [r0, #16]
 80127c0:	459e      	cmp	lr, r3
 80127c2:	803b      	strh	r3, [r7, #0]
 80127c4:	807a      	strh	r2, [r7, #2]
 80127c6:	f8a7 a004 	strh.w	sl, [r7, #4]
 80127ca:	f8a7 a006 	strh.w	sl, [r7, #6]
 80127ce:	d1c5      	bne.n	801275c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80127d0:	9b04      	ldr	r3, [sp, #16]
 80127d2:	1b9e      	subs	r6, r3, r6
 80127d4:	6903      	ldr	r3, [r0, #16]
 80127d6:	889a      	ldrh	r2, [r3, #4]
 80127d8:	4432      	add	r2, r6
 80127da:	809a      	strh	r2, [r3, #4]
 80127dc:	9a02      	ldr	r2, [sp, #8]
 80127de:	f102 0c20 	add.w	ip, r2, #32
 80127e2:	9a01      	ldr	r2, [sp, #4]
 80127e4:	ebac 0c02 	sub.w	ip, ip, r2
 80127e8:	88da      	ldrh	r2, [r3, #6]
 80127ea:	fb06 260c 	mla	r6, r6, ip, r2
 80127ee:	80de      	strh	r6, [r3, #6]
 80127f0:	f7ff bba9 	b.w	8011f46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080127f4 <_ZN8touchgfx7Outline6lineToEii>:
 80127f4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80127f6:	079b      	lsls	r3, r3, #30
 80127f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80127fa:	460e      	mov	r6, r1
 80127fc:	4615      	mov	r5, r2
 80127fe:	d511      	bpl.n	8012824 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012800:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8012804:	ea86 0701 	eor.w	r7, r6, r1
 8012808:	ea85 0302 	eor.w	r3, r5, r2
 801280c:	433b      	orrs	r3, r7
 801280e:	d009      	beq.n	8012824 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012810:	4633      	mov	r3, r6
 8012812:	9500      	str	r5, [sp, #0]
 8012814:	f7ff fb3e 	bl	8011e94 <_ZN8touchgfx7Outline10renderLineEiiii>
 8012818:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801281a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801281e:	f043 0301 	orr.w	r3, r3, #1
 8012822:	6243      	str	r3, [r0, #36]	; 0x24
 8012824:	b003      	add	sp, #12
 8012826:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012828 <_ZN8touchgfx7Outline6moveToEii>:
 8012828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801282a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801282c:	4615      	mov	r5, r2
 801282e:	079a      	lsls	r2, r3, #30
 8012830:	4604      	mov	r4, r0
 8012832:	460e      	mov	r6, r1
 8012834:	d401      	bmi.n	801283a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8012836:	f7ff faf9 	bl	8011e2c <_ZN8touchgfx7Outline5resetEv>
 801283a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801283c:	07db      	lsls	r3, r3, #31
 801283e:	d504      	bpl.n	801284a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012840:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012844:	4620      	mov	r0, r4
 8012846:	f7ff ffd5 	bl	80127f4 <_ZN8touchgfx7Outline6lineToEii>
 801284a:	6923      	ldr	r3, [r4, #16]
 801284c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012850:	1170      	asrs	r0, r6, #5
 8012852:	4290      	cmp	r0, r2
 8012854:	ea4f 1165 	mov.w	r1, r5, asr #5
 8012858:	d103      	bne.n	8012862 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801285a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801285e:	4291      	cmp	r1, r2
 8012860:	d01a      	beq.n	8012898 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012862:	88df      	ldrh	r7, [r3, #6]
 8012864:	889a      	ldrh	r2, [r3, #4]
 8012866:	433a      	orrs	r2, r7
 8012868:	d010      	beq.n	801288c <_ZN8touchgfx7Outline6moveToEii+0x64>
 801286a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801286e:	2a00      	cmp	r2, #0
 8012870:	db0c      	blt.n	801288c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012872:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8012874:	42ba      	cmp	r2, r7
 8012876:	da09      	bge.n	801288c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012878:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801287c:	42ba      	cmp	r2, r7
 801287e:	bf38      	it	cc
 8012880:	3308      	addcc	r3, #8
 8012882:	f102 0201 	add.w	r2, r2, #1
 8012886:	bf38      	it	cc
 8012888:	6123      	strcc	r3, [r4, #16]
 801288a:	60a2      	str	r2, [r4, #8]
 801288c:	6923      	ldr	r3, [r4, #16]
 801288e:	2200      	movs	r2, #0
 8012890:	8018      	strh	r0, [r3, #0]
 8012892:	8059      	strh	r1, [r3, #2]
 8012894:	809a      	strh	r2, [r3, #4]
 8012896:	80da      	strh	r2, [r3, #6]
 8012898:	6166      	str	r6, [r4, #20]
 801289a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801289e:	6225      	str	r5, [r4, #32]
 80128a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080128a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80128a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80128a6:	b0d0      	sub	sp, #320	; 0x140
 80128a8:	466c      	mov	r4, sp
 80128aa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80128ae:	4627      	mov	r7, r4
 80128b0:	1a0d      	subs	r5, r1, r0
 80128b2:	2d48      	cmp	r5, #72	; 0x48
 80128b4:	f100 0308 	add.w	r3, r0, #8
 80128b8:	f340 80d5 	ble.w	8012a66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80128bc:	112d      	asrs	r5, r5, #4
 80128be:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80128c2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80128c6:	6816      	ldr	r6, [r2, #0]
 80128c8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80128cc:	6006      	str	r6, [r0, #0]
 80128ce:	6856      	ldr	r6, [r2, #4]
 80128d0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80128d4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80128d8:	6046      	str	r6, [r0, #4]
 80128da:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80128de:	f8a2 8002 	strh.w	r8, [r2, #2]
 80128e2:	f8a2 e004 	strh.w	lr, [r2, #4]
 80128e6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80128ea:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80128ee:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80128f2:	4565      	cmp	r5, ip
 80128f4:	f1a1 0208 	sub.w	r2, r1, #8
 80128f8:	db06      	blt.n	8012908 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80128fa:	d119      	bne.n	8012930 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80128fc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8012900:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8012904:	42ae      	cmp	r6, r5
 8012906:	dd13      	ble.n	8012930 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012908:	460e      	mov	r6, r1
 801290a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801290e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012912:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8012916:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801291a:	601d      	str	r5, [r3, #0]
 801291c:	6875      	ldr	r5, [r6, #4]
 801291e:	605d      	str	r5, [r3, #4]
 8012920:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012924:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012928:	f821 8c04 	strh.w	r8, [r1, #-4]
 801292c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012930:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012934:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8012938:	42ae      	cmp	r6, r5
 801293a:	db06      	blt.n	801294a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801293c:	d116      	bne.n	801296c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801293e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8012942:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8012946:	45ac      	cmp	ip, r5
 8012948:	da10      	bge.n	801296c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801294a:	681d      	ldr	r5, [r3, #0]
 801294c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012950:	6005      	str	r5, [r0, #0]
 8012952:	685d      	ldr	r5, [r3, #4]
 8012954:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012958:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801295c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8012960:	6045      	str	r5, [r0, #4]
 8012962:	8146      	strh	r6, [r0, #10]
 8012964:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8012968:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801296c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012970:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012974:	4565      	cmp	r5, ip
 8012976:	db06      	blt.n	8012986 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8012978:	d119      	bne.n	80129ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801297a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801297e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012982:	42ae      	cmp	r6, r5
 8012984:	da13      	bge.n	80129ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012986:	460e      	mov	r6, r1
 8012988:	f9b0 9000 	ldrsh.w	r9, [r0]
 801298c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012990:	6005      	str	r5, [r0, #0]
 8012992:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8012996:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801299a:	6875      	ldr	r5, [r6, #4]
 801299c:	6045      	str	r5, [r0, #4]
 801299e:	f821 9c08 	strh.w	r9, [r1, #-8]
 80129a2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80129a6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80129aa:	f821 ec02 	strh.w	lr, [r1, #-2]
 80129ae:	3308      	adds	r3, #8
 80129b0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80129b4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80129b8:	45e6      	cmp	lr, ip
 80129ba:	dbf8      	blt.n	80129ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80129bc:	d105      	bne.n	80129ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80129be:	f9b3 6000 	ldrsh.w	r6, [r3]
 80129c2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80129c6:	42ae      	cmp	r6, r5
 80129c8:	dbf1      	blt.n	80129ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80129ca:	4615      	mov	r5, r2
 80129cc:	3a08      	subs	r2, #8
 80129ce:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80129d2:	45b4      	cmp	ip, r6
 80129d4:	dbf9      	blt.n	80129ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80129d6:	d105      	bne.n	80129e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80129d8:	f9b0 8000 	ldrsh.w	r8, [r0]
 80129dc:	f9b2 6000 	ldrsh.w	r6, [r2]
 80129e0:	45b0      	cmp	r8, r6
 80129e2:	dbf2      	blt.n	80129ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80129e4:	4293      	cmp	r3, r2
 80129e6:	f1a5 0608 	sub.w	r6, r5, #8
 80129ea:	d816      	bhi.n	8012a1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80129ec:	f8d6 c000 	ldr.w	ip, [r6]
 80129f0:	f9b3 a000 	ldrsh.w	sl, [r3]
 80129f4:	f8c3 c000 	str.w	ip, [r3]
 80129f8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80129fc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8012a00:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8012a04:	f8c3 c004 	str.w	ip, [r3, #4]
 8012a08:	f825 ac08 	strh.w	sl, [r5, #-8]
 8012a0c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8012a10:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012a14:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012a18:	e7c9      	b.n	80129ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012a1a:	f8d6 e000 	ldr.w	lr, [r6]
 8012a1e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8012a22:	f8c0 e000 	str.w	lr, [r0]
 8012a26:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8012a2a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8012a2e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8012a32:	f8c0 e004 	str.w	lr, [r0, #4]
 8012a36:	f825 ac08 	strh.w	sl, [r5, #-8]
 8012a3a:	f825 cc06 	strh.w	ip, [r5, #-6]
 8012a3e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012a42:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012a46:	1acd      	subs	r5, r1, r3
 8012a48:	1a16      	subs	r6, r2, r0
 8012a4a:	10ed      	asrs	r5, r5, #3
 8012a4c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8012a50:	bfb5      	itete	lt
 8012a52:	e9c4 0200 	strdlt	r0, r2, [r4]
 8012a56:	e9c4 3100 	strdge	r3, r1, [r4]
 8012a5a:	460a      	movlt	r2, r1
 8012a5c:	4603      	movge	r3, r0
 8012a5e:	3408      	adds	r4, #8
 8012a60:	4618      	mov	r0, r3
 8012a62:	4611      	mov	r1, r2
 8012a64:	e724      	b.n	80128b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8012a66:	4299      	cmp	r1, r3
 8012a68:	d928      	bls.n	8012abc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8012a6a:	f1a3 0210 	sub.w	r2, r3, #16
 8012a6e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8012a72:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8012a76:	45ac      	cmp	ip, r5
 8012a78:	db06      	blt.n	8012a88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8012a7a:	d11d      	bne.n	8012ab8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8012a7c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8012a80:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8012a84:	42ae      	cmp	r6, r5
 8012a86:	da17      	bge.n	8012ab8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8012a88:	4615      	mov	r5, r2
 8012a8a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8012a8e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8012a92:	6116      	str	r6, [r2, #16]
 8012a94:	686e      	ldr	r6, [r5, #4]
 8012a96:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8012a9a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8012a9e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8012aa2:	42a8      	cmp	r0, r5
 8012aa4:	6156      	str	r6, [r2, #20]
 8012aa6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8012aaa:	f8a2 800c 	strh.w	r8, [r2, #12]
 8012aae:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8012ab2:	f1a2 0208 	sub.w	r2, r2, #8
 8012ab6:	d1da      	bne.n	8012a6e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8012ab8:	3308      	adds	r3, #8
 8012aba:	e7d4      	b.n	8012a66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8012abc:	42bc      	cmp	r4, r7
 8012abe:	d903      	bls.n	8012ac8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8012ac0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8012ac4:	3c08      	subs	r4, #8
 8012ac6:	e6f3      	b.n	80128b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8012ac8:	b050      	add	sp, #320	; 0x140
 8012aca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08012ace <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8012ace:	b510      	push	{r4, lr}
 8012ad0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012ad2:	07da      	lsls	r2, r3, #31
 8012ad4:	4604      	mov	r4, r0
 8012ad6:	d507      	bpl.n	8012ae8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8012ad8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8012adc:	f7ff fe8a 	bl	80127f4 <_ZN8touchgfx7Outline6lineToEii>
 8012ae0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012ae2:	f023 0301 	bic.w	r3, r3, #1
 8012ae6:	6243      	str	r3, [r0, #36]	; 0x24
 8012ae8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012aea:	079b      	lsls	r3, r3, #30
 8012aec:	d521      	bpl.n	8012b32 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8012aee:	6923      	ldr	r3, [r4, #16]
 8012af0:	88d9      	ldrh	r1, [r3, #6]
 8012af2:	889a      	ldrh	r2, [r3, #4]
 8012af4:	430a      	orrs	r2, r1
 8012af6:	d010      	beq.n	8012b1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012af8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012afc:	2a00      	cmp	r2, #0
 8012afe:	db0c      	blt.n	8012b1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012b00:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012b02:	428a      	cmp	r2, r1
 8012b04:	da09      	bge.n	8012b1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012b06:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8012b0a:	4291      	cmp	r1, r2
 8012b0c:	bf88      	it	hi
 8012b0e:	3308      	addhi	r3, #8
 8012b10:	f102 0201 	add.w	r2, r2, #1
 8012b14:	bf88      	it	hi
 8012b16:	6123      	strhi	r3, [r4, #16]
 8012b18:	60a2      	str	r2, [r4, #8]
 8012b1a:	68a1      	ldr	r1, [r4, #8]
 8012b1c:	b129      	cbz	r1, 8012b2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8012b1e:	6863      	ldr	r3, [r4, #4]
 8012b20:	4299      	cmp	r1, r3
 8012b22:	d802      	bhi.n	8012b2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8012b24:	68e0      	ldr	r0, [r4, #12]
 8012b26:	f7ff febc 	bl	80128a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8012b2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012b2c:	f023 0302 	bic.w	r3, r3, #2
 8012b30:	6263      	str	r3, [r4, #36]	; 0x24
 8012b32:	68e0      	ldr	r0, [r4, #12]
 8012b34:	bd10      	pop	{r4, pc}
	...

08012b38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8012b38:	4b02      	ldr	r3, [pc, #8]	; (8012b44 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8012b3a:	6018      	str	r0, [r3, #0]
 8012b3c:	4b02      	ldr	r3, [pc, #8]	; (8012b48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8012b3e:	6019      	str	r1, [r3, #0]
 8012b40:	4770      	bx	lr
 8012b42:	bf00      	nop
 8012b44:	200137c4 	.word	0x200137c4
 8012b48:	200137c8 	.word	0x200137c8

08012b4c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8012b4c:	4a02      	ldr	r2, [pc, #8]	; (8012b58 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8012b4e:	2300      	movs	r3, #0
 8012b50:	6013      	str	r3, [r2, #0]
 8012b52:	4a02      	ldr	r2, [pc, #8]	; (8012b5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8012b54:	6013      	str	r3, [r2, #0]
 8012b56:	4770      	bx	lr
 8012b58:	200137c4 	.word	0x200137c4
 8012b5c:	200137c8 	.word	0x200137c8

08012b60 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8012b60:	4b01      	ldr	r3, [pc, #4]	; (8012b68 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8012b62:	6818      	ldr	r0, [r3, #0]
 8012b64:	4770      	bx	lr
 8012b66:	bf00      	nop
 8012b68:	200137c4 	.word	0x200137c4

08012b6c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8012b6c:	4b01      	ldr	r3, [pc, #4]	; (8012b74 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8012b6e:	6818      	ldr	r0, [r3, #0]
 8012b70:	4770      	bx	lr
 8012b72:	bf00      	nop
 8012b74:	200137c8 	.word	0x200137c8

08012b78 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8012b78:	b510      	push	{r4, lr}
 8012b7a:	6803      	ldr	r3, [r0, #0]
 8012b7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012b7e:	460c      	mov	r4, r1
 8012b80:	4798      	blx	r3
 8012b82:	1b03      	subs	r3, r0, r4
 8012b84:	4258      	negs	r0, r3
 8012b86:	4158      	adcs	r0, r3
 8012b88:	bd10      	pop	{r4, pc}
	...

08012b8c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8012b8c:	4b01      	ldr	r3, [pc, #4]	; (8012b94 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8012b8e:	6019      	str	r1, [r3, #0]
 8012b90:	4770      	bx	lr
 8012b92:	bf00      	nop
 8012b94:	200137cc 	.word	0x200137cc

08012b98 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b9c:	4696      	mov	lr, r2
 8012b9e:	4605      	mov	r5, r0
 8012ba0:	4614      	mov	r4, r2
 8012ba2:	460e      	mov	r6, r1
 8012ba4:	461f      	mov	r7, r3
 8012ba6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012baa:	b097      	sub	sp, #92	; 0x5c
 8012bac:	f10d 0c1c 	add.w	ip, sp, #28
 8012bb0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012bb4:	f8de 3000 	ldr.w	r3, [lr]
 8012bb8:	f8cc 3000 	str.w	r3, [ip]
 8012bbc:	f104 0e14 	add.w	lr, r4, #20
 8012bc0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012bc4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8012bc8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012bcc:	f8de 3000 	ldr.w	r3, [lr]
 8012bd0:	f8cc 3000 	str.w	r3, [ip]
 8012bd4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8012bd8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012bdc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8012be0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012be4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8012be8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8012bec:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8012bf0:	f8de 3000 	ldr.w	r3, [lr]
 8012bf4:	f8cc 3000 	str.w	r3, [ip]
 8012bf8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8012bfa:	682b      	ldr	r3, [r5, #0]
 8012bfc:	9201      	str	r2, [sp, #4]
 8012bfe:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012c02:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8012c04:	9200      	str	r2, [sp, #0]
 8012c06:	f8cd 8008 	str.w	r8, [sp, #8]
 8012c0a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8012c0e:	aa07      	add	r2, sp, #28
 8012c10:	463b      	mov	r3, r7
 8012c12:	4631      	mov	r1, r6
 8012c14:	4628      	mov	r0, r5
 8012c16:	47d8      	blx	fp
 8012c18:	46a6      	mov	lr, r4
 8012c1a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012c1e:	f10d 0c1c 	add.w	ip, sp, #28
 8012c22:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012c26:	f8de 3000 	ldr.w	r3, [lr]
 8012c2a:	f8cc 3000 	str.w	r3, [ip]
 8012c2e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8012c32:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012c36:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8012c3a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012c3e:	343c      	adds	r4, #60	; 0x3c
 8012c40:	f8de 3000 	ldr.w	r3, [lr]
 8012c44:	f8cc 3000 	str.w	r3, [ip]
 8012c48:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012c4a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8012c4e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012c52:	6823      	ldr	r3, [r4, #0]
 8012c54:	f8cc 3000 	str.w	r3, [ip]
 8012c58:	682b      	ldr	r3, [r5, #0]
 8012c5a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012c5e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8012c60:	9201      	str	r2, [sp, #4]
 8012c62:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8012c64:	9200      	str	r2, [sp, #0]
 8012c66:	f8cd 8008 	str.w	r8, [sp, #8]
 8012c6a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8012c6c:	aa07      	add	r2, sp, #28
 8012c6e:	463b      	mov	r3, r7
 8012c70:	4631      	mov	r1, r6
 8012c72:	4628      	mov	r0, r5
 8012c74:	47a0      	blx	r4
 8012c76:	b017      	add	sp, #92	; 0x5c
 8012c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012c7c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8012c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c80:	b08d      	sub	sp, #52	; 0x34
 8012c82:	4688      	mov	r8, r1
 8012c84:	9916      	ldr	r1, [sp, #88]	; 0x58
 8012c86:	f8d3 c000 	ldr.w	ip, [r3]
 8012c8a:	680f      	ldr	r7, [r1, #0]
 8012c8c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8012c90:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8012c94:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8012c98:	edd3 6a07 	vldr	s13, [r3, #28]
 8012c9c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8012c9e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8012ca2:	f9b1 9000 	ldrsh.w	r9, [r1]
 8012ca6:	f9ba 1000 	ldrsh.w	r1, [sl]
 8012caa:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8012cae:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8012cb2:	eba7 070c 	sub.w	r7, r7, ip
 8012cb6:	42bc      	cmp	r4, r7
 8012cb8:	bfa8      	it	ge
 8012cba:	463c      	movge	r4, r7
 8012cbc:	ee07 4a90 	vmov	s15, r4
 8012cc0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012cc4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8012cc8:	ee25 4a04 	vmul.f32	s8, s10, s8
 8012ccc:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012cd0:	ee25 5a27 	vmul.f32	s10, s10, s15
 8012cd4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8012cd8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8012cdc:	eb09 0e0c 	add.w	lr, r9, ip
 8012ce0:	4571      	cmp	r1, lr
 8012ce2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8012ce6:	ee32 1a05 	vadd.f32	s2, s4, s10
 8012cea:	ee36 0a84 	vadd.f32	s0, s13, s8
 8012cee:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012cf2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012cf6:	f340 808d 	ble.w	8012e14 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8012cfa:	eba1 060e 	sub.w	r6, r1, lr
 8012cfe:	fb96 f5f4 	sdiv	r5, r6, r4
 8012d02:	ee07 5a10 	vmov	s14, r5
 8012d06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d0a:	2d00      	cmp	r5, #0
 8012d0c:	fb04 6615 	mls	r6, r4, r5, r6
 8012d10:	eea7 0a04 	vfma.f32	s0, s14, s8
 8012d14:	eee7 0a24 	vfma.f32	s1, s14, s9
 8012d18:	eea7 1a05 	vfma.f32	s2, s14, s10
 8012d1c:	dd13      	ble.n	8012d46 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8012d1e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8012d22:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8012d26:	eef5 6a40 	vcmp.f32	s13, #0.0
 8012d2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012d2e:	bf18      	it	ne
 8012d30:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8012d34:	ee31 2a45 	vsub.f32	s4, s2, s10
 8012d38:	bf08      	it	eq
 8012d3a:	eeb0 7a67 	vmoveq.f32	s14, s15
 8012d3e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012d42:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012d46:	fb05 f204 	mul.w	r2, r5, r4
 8012d4a:	1abf      	subs	r7, r7, r2
 8012d4c:	4494      	add	ip, r2
 8012d4e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8012d52:	4411      	add	r1, r2
 8012d54:	eb09 020c 	add.w	r2, r9, ip
 8012d58:	443a      	add	r2, r7
 8012d5a:	b209      	sxth	r1, r1
 8012d5c:	428a      	cmp	r2, r1
 8012d5e:	bfc4      	itt	gt
 8012d60:	eba1 0209 	subgt.w	r2, r1, r9
 8012d64:	eba2 070c 	subgt.w	r7, r2, ip
 8012d68:	2f00      	cmp	r7, #0
 8012d6a:	dd50      	ble.n	8012e0e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8012d6c:	fb97 f1f4 	sdiv	r1, r7, r4
 8012d70:	fb04 7211 	mls	r2, r4, r1, r7
 8012d74:	b90a      	cbnz	r2, 8012d7a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8012d76:	3901      	subs	r1, #1
 8012d78:	4622      	mov	r2, r4
 8012d7a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8012d7e:	6840      	ldr	r0, [r0, #4]
 8012d80:	900b      	str	r0, [sp, #44]	; 0x2c
 8012d82:	f8d0 a000 	ldr.w	sl, [r0]
 8012d86:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8012d88:	9008      	str	r0, [sp, #32]
 8012d8a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8012d8e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8012d90:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8012d94:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8012d98:	695b      	ldr	r3, [r3, #20]
 8012d9a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8012d9c:	445b      	add	r3, fp
 8012d9e:	eef0 6a42 	vmov.f32	s13, s4
 8012da2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8012da6:	ee21 3a23 	vmul.f32	s6, s2, s7
 8012daa:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8012dae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012db2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012db6:	9307      	str	r3, [sp, #28]
 8012db8:	ee17 7a90 	vmov	r7, s15
 8012dbc:	ee73 7a42 	vsub.f32	s15, s6, s4
 8012dc0:	eeb0 7a61 	vmov.f32	s14, s3
 8012dc4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012dc8:	ee16 3a90 	vmov	r3, s13
 8012dcc:	fb97 f7f4 	sdiv	r7, r7, r4
 8012dd0:	ee17 ca90 	vmov	ip, s15
 8012dd4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8012dd8:	fb9c fcf4 	sdiv	ip, ip, r4
 8012ddc:	fb0c 3306 	mla	r3, ip, r6, r3
 8012de0:	9302      	str	r3, [sp, #8]
 8012de2:	ee17 3a10 	vmov	r3, s14
 8012de6:	44b6      	add	lr, r6
 8012de8:	fb04 e505 	mla	r5, r4, r5, lr
 8012dec:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8012df0:	fb07 3706 	mla	r7, r7, r6, r3
 8012df4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8012df8:	e9cd 4700 	strd	r4, r7, [sp]
 8012dfc:	2900      	cmp	r1, #0
 8012dfe:	bfcc      	ite	gt
 8012e00:	46a1      	movgt	r9, r4
 8012e02:	4691      	movle	r9, r2
 8012e04:	eba9 0306 	sub.w	r3, r9, r6
 8012e08:	f8da 4008 	ldr.w	r4, [sl, #8]
 8012e0c:	47a0      	blx	r4
 8012e0e:	b00d      	add	sp, #52	; 0x34
 8012e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e14:	2500      	movs	r5, #0
 8012e16:	462e      	mov	r6, r5
 8012e18:	e799      	b.n	8012d4e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08012e1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e20:	b0db      	sub	sp, #364	; 0x16c
 8012e22:	461d      	mov	r5, r3
 8012e24:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8012e28:	930a      	str	r3, [sp, #40]	; 0x28
 8012e2a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8012e2e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012e30:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8012e34:	9310      	str	r3, [sp, #64]	; 0x40
 8012e36:	6803      	ldr	r3, [r0, #0]
 8012e38:	910f      	str	r1, [sp, #60]	; 0x3c
 8012e3a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8012e3c:	9009      	str	r0, [sp, #36]	; 0x24
 8012e3e:	4614      	mov	r4, r2
 8012e40:	4629      	mov	r1, r5
 8012e42:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8012e46:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8012e4a:	47b8      	blx	r7
 8012e4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012e4e:	6058      	str	r0, [r3, #4]
 8012e50:	2800      	cmp	r0, #0
 8012e52:	f000 83a1 	beq.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012e56:	682b      	ldr	r3, [r5, #0]
 8012e58:	9314      	str	r3, [sp, #80]	; 0x50
 8012e5a:	686b      	ldr	r3, [r5, #4]
 8012e5c:	9315      	str	r3, [sp, #84]	; 0x54
 8012e5e:	4bc4      	ldr	r3, [pc, #784]	; (8013170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8012e60:	ed94 7a02 	vldr	s14, [r4, #8]
 8012e64:	7819      	ldrb	r1, [r3, #0]
 8012e66:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8012e6a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8012e6e:	2900      	cmp	r1, #0
 8012e70:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012e74:	bf16      	itet	ne
 8012e76:	4619      	movne	r1, r3
 8012e78:	4611      	moveq	r1, r2
 8012e7a:	4613      	movne	r3, r2
 8012e7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e80:	9116      	str	r1, [sp, #88]	; 0x58
 8012e82:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8012e86:	f240 8387 	bls.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012e8a:	ed94 7a07 	vldr	s14, [r4, #28]
 8012e8e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012e92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e96:	f240 837f 	bls.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012e9a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8012e9e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012ea2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ea6:	f240 8377 	bls.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012eaa:	6822      	ldr	r2, [r4, #0]
 8012eac:	4bb1      	ldr	r3, [pc, #708]	; (8013174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8012eae:	429a      	cmp	r2, r3
 8012eb0:	f2c0 8372 	blt.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012eb4:	49b0      	ldr	r1, [pc, #704]	; (8013178 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8012eb6:	6963      	ldr	r3, [r4, #20]
 8012eb8:	428a      	cmp	r2, r1
 8012eba:	f300 836d 	bgt.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012ebe:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8012ec2:	48ae      	ldr	r0, [pc, #696]	; (801317c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8012ec4:	33ff      	adds	r3, #255	; 0xff
 8012ec6:	4283      	cmp	r3, r0
 8012ec8:	f200 8366 	bhi.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012ecc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8012ece:	4dac      	ldr	r5, [pc, #688]	; (8013180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012ed0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8012ed4:	33ff      	adds	r3, #255	; 0xff
 8012ed6:	42ab      	cmp	r3, r5
 8012ed8:	f200 835e 	bhi.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012edc:	6862      	ldr	r2, [r4, #4]
 8012ede:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8012ee2:	33ff      	adds	r3, #255	; 0xff
 8012ee4:	4283      	cmp	r3, r0
 8012ee6:	f200 8357 	bhi.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012eea:	69a1      	ldr	r1, [r4, #24]
 8012eec:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8012ef0:	33ff      	adds	r3, #255	; 0xff
 8012ef2:	4283      	cmp	r3, r0
 8012ef4:	f200 8350 	bhi.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012ef8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012efa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8012efe:	30ff      	adds	r0, #255	; 0xff
 8012f00:	42a8      	cmp	r0, r5
 8012f02:	f200 8349 	bhi.w	8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012f06:	428a      	cmp	r2, r1
 8012f08:	f280 8110 	bge.w	801312c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8012f0c:	429a      	cmp	r2, r3
 8012f0e:	f300 8119 	bgt.w	8013144 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8012f12:	4299      	cmp	r1, r3
 8012f14:	f280 811d 	bge.w	8013152 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8012f18:	2502      	movs	r5, #2
 8012f1a:	2701      	movs	r7, #1
 8012f1c:	46a9      	mov	r9, r5
 8012f1e:	46b8      	mov	r8, r7
 8012f20:	f04f 0a00 	mov.w	sl, #0
 8012f24:	4621      	mov	r1, r4
 8012f26:	a849      	add	r0, sp, #292	; 0x124
 8012f28:	f003 feec 	bl	8016d04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8012f2c:	4622      	mov	r2, r4
 8012f2e:	4653      	mov	r3, sl
 8012f30:	a949      	add	r1, sp, #292	; 0x124
 8012f32:	f8cd 9000 	str.w	r9, [sp]
 8012f36:	a819      	add	r0, sp, #100	; 0x64
 8012f38:	f004 f814 	bl	8016f64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012f3c:	4622      	mov	r2, r4
 8012f3e:	4653      	mov	r3, sl
 8012f40:	a949      	add	r1, sp, #292	; 0x124
 8012f42:	f8cd 8000 	str.w	r8, [sp]
 8012f46:	a829      	add	r0, sp, #164	; 0xa4
 8012f48:	f004 f80c 	bl	8016f64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012f4c:	4643      	mov	r3, r8
 8012f4e:	4622      	mov	r2, r4
 8012f50:	a949      	add	r1, sp, #292	; 0x124
 8012f52:	f8cd 9000 	str.w	r9, [sp]
 8012f56:	a839      	add	r0, sp, #228	; 0xe4
 8012f58:	f004 f804 	bl	8016f64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012f5c:	42af      	cmp	r7, r5
 8012f5e:	bfb5      	itete	lt
 8012f60:	2300      	movlt	r3, #0
 8012f62:	2301      	movge	r3, #1
 8012f64:	930e      	strlt	r3, [sp, #56]	; 0x38
 8012f66:	930e      	strge	r3, [sp, #56]	; 0x38
 8012f68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012f6a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012f6e:	af12      	add	r7, sp, #72	; 0x48
 8012f70:	bfb9      	ittee	lt
 8012f72:	ad29      	addlt	r5, sp, #164	; 0xa4
 8012f74:	ac19      	addlt	r4, sp, #100	; 0x64
 8012f76:	ad19      	addge	r5, sp, #100	; 0x64
 8012f78:	ac29      	addge	r4, sp, #164	; 0xa4
 8012f7a:	e887 0003 	stmia.w	r7, {r0, r1}
 8012f7e:	b928      	cbnz	r0, 8012f8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8012f80:	4b80      	ldr	r3, [pc, #512]	; (8013184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8012f82:	6818      	ldr	r0, [r3, #0]
 8012f84:	6803      	ldr	r3, [r0, #0]
 8012f86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012f88:	4798      	blx	r3
 8012f8a:	6038      	str	r0, [r7, #0]
 8012f8c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012f8e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012f92:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012f96:	930c      	str	r3, [sp, #48]	; 0x30
 8012f98:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012f9a:	6963      	ldr	r3, [r4, #20]
 8012f9c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8012f9e:	440b      	add	r3, r1
 8012fa0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012fa4:	4408      	add	r0, r1
 8012fa6:	b200      	sxth	r0, r0
 8012fa8:	4283      	cmp	r3, r0
 8012faa:	900d      	str	r0, [sp, #52]	; 0x34
 8012fac:	f280 80dd 	bge.w	801316a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8012fb0:	428b      	cmp	r3, r1
 8012fb2:	da08      	bge.n	8012fc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012fb4:	2a00      	cmp	r2, #0
 8012fb6:	dd06      	ble.n	8012fc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012fb8:	1acb      	subs	r3, r1, r3
 8012fba:	429a      	cmp	r2, r3
 8012fbc:	f2c0 80e4 	blt.w	8013188 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8012fc0:	2b00      	cmp	r3, #0
 8012fc2:	f300 80e2 	bgt.w	801318a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8012fc6:	6967      	ldr	r7, [r4, #20]
 8012fc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012fca:	443b      	add	r3, r7
 8012fcc:	461f      	mov	r7, r3
 8012fce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012fd0:	1bdf      	subs	r7, r3, r7
 8012fd2:	4297      	cmp	r7, r2
 8012fd4:	bfa8      	it	ge
 8012fd6:	4617      	movge	r7, r2
 8012fd8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8012fdc:	2f00      	cmp	r7, #0
 8012fde:	f340 8166 	ble.w	80132ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8012fe2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012fe4:	6829      	ldr	r1, [r5, #0]
 8012fe6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012fea:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012fee:	6820      	ldr	r0, [r4, #0]
 8012ff0:	4411      	add	r1, r2
 8012ff2:	4299      	cmp	r1, r3
 8012ff4:	dd1a      	ble.n	801302c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012ff6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012ffa:	440b      	add	r3, r1
 8012ffc:	4402      	add	r2, r0
 8012ffe:	b21b      	sxth	r3, r3
 8013000:	429a      	cmp	r2, r3
 8013002:	dc13      	bgt.n	801302c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013004:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013006:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013008:	681b      	ldr	r3, [r3, #0]
 801300a:	9206      	str	r2, [sp, #24]
 801300c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801300e:	9205      	str	r2, [sp, #20]
 8013010:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013012:	9500      	str	r5, [sp, #0]
 8013014:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013018:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801301a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801301c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013020:	a912      	add	r1, sp, #72	; 0x48
 8013022:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013026:	aa49      	add	r2, sp, #292	; 0x124
 8013028:	4623      	mov	r3, r4
 801302a:	47c8      	blx	r9
 801302c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013030:	441a      	add	r2, r3
 8013032:	6963      	ldr	r3, [r4, #20]
 8013034:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013038:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801303c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013040:	68a1      	ldr	r1, [r4, #8]
 8013042:	ed94 6a08 	vldr	s12, [r4, #32]
 8013046:	6022      	str	r2, [r4, #0]
 8013048:	3301      	adds	r3, #1
 801304a:	6163      	str	r3, [r4, #20]
 801304c:	69a3      	ldr	r3, [r4, #24]
 801304e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013052:	3b01      	subs	r3, #1
 8013054:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013058:	61a3      	str	r3, [r4, #24]
 801305a:	6923      	ldr	r3, [r4, #16]
 801305c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013060:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013064:	edd4 6a07 	vldr	s13, [r4, #28]
 8013068:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801306c:	440b      	add	r3, r1
 801306e:	68e1      	ldr	r1, [r4, #12]
 8013070:	6123      	str	r3, [r4, #16]
 8013072:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013076:	428b      	cmp	r3, r1
 8013078:	edc4 6a07 	vstr	s13, [r4, #28]
 801307c:	db15      	blt.n	80130aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801307e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013082:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013086:	3201      	adds	r2, #1
 8013088:	edc4 6a07 	vstr	s13, [r4, #28]
 801308c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013090:	6022      	str	r2, [r4, #0]
 8013092:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013096:	1a5b      	subs	r3, r3, r1
 8013098:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801309c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80130a0:	6123      	str	r3, [r4, #16]
 80130a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80130a6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80130aa:	e9d5 2300 	ldrd	r2, r3, [r5]
 80130ae:	441a      	add	r2, r3
 80130b0:	696b      	ldr	r3, [r5, #20]
 80130b2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80130b6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80130ba:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80130be:	68a9      	ldr	r1, [r5, #8]
 80130c0:	ed95 6a08 	vldr	s12, [r5, #32]
 80130c4:	602a      	str	r2, [r5, #0]
 80130c6:	3301      	adds	r3, #1
 80130c8:	616b      	str	r3, [r5, #20]
 80130ca:	69ab      	ldr	r3, [r5, #24]
 80130cc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80130d0:	3b01      	subs	r3, #1
 80130d2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80130d6:	61ab      	str	r3, [r5, #24]
 80130d8:	692b      	ldr	r3, [r5, #16]
 80130da:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80130de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80130e2:	edd5 6a07 	vldr	s13, [r5, #28]
 80130e6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80130ea:	440b      	add	r3, r1
 80130ec:	68e9      	ldr	r1, [r5, #12]
 80130ee:	612b      	str	r3, [r5, #16]
 80130f0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80130f4:	428b      	cmp	r3, r1
 80130f6:	edc5 6a07 	vstr	s13, [r5, #28]
 80130fa:	db15      	blt.n	8013128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80130fc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013100:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013104:	3201      	adds	r2, #1
 8013106:	edc5 6a07 	vstr	s13, [r5, #28]
 801310a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801310e:	602a      	str	r2, [r5, #0]
 8013110:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013114:	1a5b      	subs	r3, r3, r1
 8013116:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801311a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801311e:	612b      	str	r3, [r5, #16]
 8013120:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013124:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013128:	3f01      	subs	r7, #1
 801312a:	e757      	b.n	8012fdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801312c:	4299      	cmp	r1, r3
 801312e:	dc13      	bgt.n	8013158 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013130:	429a      	cmp	r2, r3
 8013132:	da14      	bge.n	801315e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013134:	2502      	movs	r5, #2
 8013136:	2703      	movs	r7, #3
 8013138:	46a9      	mov	r9, r5
 801313a:	f04f 0800 	mov.w	r8, #0
 801313e:	f04f 0a01 	mov.w	sl, #1
 8013142:	e6ef      	b.n	8012f24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013144:	2501      	movs	r5, #1
 8013146:	2700      	movs	r7, #0
 8013148:	46a9      	mov	r9, r5
 801314a:	46b8      	mov	r8, r7
 801314c:	f04f 0a02 	mov.w	sl, #2
 8013150:	e6e8      	b.n	8012f24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013152:	2501      	movs	r5, #1
 8013154:	2702      	movs	r7, #2
 8013156:	e6e1      	b.n	8012f1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013158:	2500      	movs	r5, #0
 801315a:	2701      	movs	r7, #1
 801315c:	e7f4      	b.n	8013148 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801315e:	2702      	movs	r7, #2
 8013160:	2503      	movs	r5, #3
 8013162:	f04f 0900 	mov.w	r9, #0
 8013166:	46b8      	mov	r8, r7
 8013168:	e7e9      	b.n	801313e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801316a:	4613      	mov	r3, r2
 801316c:	e728      	b.n	8012fc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801316e:	bf00      	nop
 8013170:	200137b4 	.word	0x200137b4
 8013174:	fffd8f01 	.word	0xfffd8f01
 8013178:	00027100 	.word	0x00027100
 801317c:	0004e1ff 	.word	0x0004e1ff
 8013180:	0004e1fe 	.word	0x0004e1fe
 8013184:	200137bc 	.word	0x200137bc
 8013188:	4613      	mov	r3, r2
 801318a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801318c:	9111      	str	r1, [sp, #68]	; 0x44
 801318e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013192:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013196:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013198:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801319c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80131a0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80131a4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80131a8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80131ac:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80131b0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80131b4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80131b8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80131bc:	469e      	mov	lr, r3
 80131be:	469c      	mov	ip, r3
 80131c0:	f04f 0900 	mov.w	r9, #0
 80131c4:	f1bc 0f00 	cmp.w	ip, #0
 80131c8:	d147      	bne.n	801325a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80131ca:	eb03 0c07 	add.w	ip, r3, r7
 80131ce:	1ad7      	subs	r7, r2, r3
 80131d0:	f1b9 0f00 	cmp.w	r9, #0
 80131d4:	d009      	beq.n	80131ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80131d6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80131da:	9029      	str	r0, [sp, #164]	; 0xa4
 80131dc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80131e0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80131e4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80131e8:	912d      	str	r1, [sp, #180]	; 0xb4
 80131ea:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80131ec:	9111      	str	r1, [sp, #68]	; 0x44
 80131ee:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80131f2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80131f6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80131fa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80131fe:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013202:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013206:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801320a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801320e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013212:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013216:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801321a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801321e:	f04f 0800 	mov.w	r8, #0
 8013222:	f1be 0f00 	cmp.w	lr, #0
 8013226:	d031      	beq.n	801328c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013228:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801322a:	4431      	add	r1, r6
 801322c:	4549      	cmp	r1, r9
 801322e:	4450      	add	r0, sl
 8013230:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013234:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013238:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801323c:	db08      	blt.n	8013250 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801323e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013242:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013246:	ee37 7a06 	vadd.f32	s14, s14, s12
 801324a:	3001      	adds	r0, #1
 801324c:	eba1 0109 	sub.w	r1, r1, r9
 8013250:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013254:	f04f 0801 	mov.w	r8, #1
 8013258:	e7e3      	b.n	8013222 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801325a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801325c:	4431      	add	r1, r6
 801325e:	4541      	cmp	r1, r8
 8013260:	4450      	add	r0, sl
 8013262:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013266:	ee77 7a84 	vadd.f32	s15, s15, s8
 801326a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801326e:	db08      	blt.n	8013282 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013270:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013274:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013278:	ee77 7a86 	vadd.f32	s15, s15, s12
 801327c:	3001      	adds	r0, #1
 801327e:	eba1 0108 	sub.w	r1, r1, r8
 8013282:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013286:	f04f 0901 	mov.w	r9, #1
 801328a:	e79b      	b.n	80131c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801328c:	449c      	add	ip, r3
 801328e:	1aff      	subs	r7, r7, r3
 8013290:	f1b8 0f00 	cmp.w	r8, #0
 8013294:	d009      	beq.n	80132aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013296:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801329a:	9019      	str	r0, [sp, #100]	; 0x64
 801329c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80132a0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80132a4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80132a8:	911d      	str	r1, [sp, #116]	; 0x74
 80132aa:	1ad2      	subs	r2, r2, r3
 80132ac:	e68b      	b.n	8012fc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80132ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80132b0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80132b2:	2b00      	cmp	r3, #0
 80132b4:	f000 80d1 	beq.w	801345a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80132b8:	ad19      	add	r5, sp, #100	; 0x64
 80132ba:	ac39      	add	r4, sp, #228	; 0xe4
 80132bc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80132be:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80132c2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80132c6:	930c      	str	r3, [sp, #48]	; 0x30
 80132c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80132ca:	6963      	ldr	r3, [r4, #20]
 80132cc:	440b      	add	r3, r1
 80132ce:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80132d2:	4408      	add	r0, r1
 80132d4:	b200      	sxth	r0, r0
 80132d6:	4283      	cmp	r3, r0
 80132d8:	900d      	str	r0, [sp, #52]	; 0x34
 80132da:	f280 80c1 	bge.w	8013460 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80132de:	428b      	cmp	r3, r1
 80132e0:	da08      	bge.n	80132f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80132e2:	2a00      	cmp	r2, #0
 80132e4:	dd06      	ble.n	80132f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80132e6:	1acb      	subs	r3, r1, r3
 80132e8:	429a      	cmp	r2, r3
 80132ea:	f2c0 80bb 	blt.w	8013464 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80132ee:	2b00      	cmp	r3, #0
 80132f0:	f300 80b9 	bgt.w	8013466 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80132f4:	6967      	ldr	r7, [r4, #20]
 80132f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80132f8:	443b      	add	r3, r7
 80132fa:	461f      	mov	r7, r3
 80132fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80132fe:	1bdf      	subs	r7, r3, r7
 8013300:	4297      	cmp	r7, r2
 8013302:	bfa8      	it	ge
 8013304:	4617      	movge	r7, r2
 8013306:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801330a:	2f00      	cmp	r7, #0
 801330c:	f340 813c 	ble.w	8013588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013310:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013312:	6829      	ldr	r1, [r5, #0]
 8013314:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013318:	f9bb 3000 	ldrsh.w	r3, [fp]
 801331c:	6820      	ldr	r0, [r4, #0]
 801331e:	4411      	add	r1, r2
 8013320:	4299      	cmp	r1, r3
 8013322:	dd1a      	ble.n	801335a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013324:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013328:	440b      	add	r3, r1
 801332a:	4402      	add	r2, r0
 801332c:	b21b      	sxth	r3, r3
 801332e:	429a      	cmp	r2, r3
 8013330:	dc13      	bgt.n	801335a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013332:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013334:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013336:	681b      	ldr	r3, [r3, #0]
 8013338:	9206      	str	r2, [sp, #24]
 801333a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801333c:	9205      	str	r2, [sp, #20]
 801333e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013340:	9500      	str	r5, [sp, #0]
 8013342:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013346:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013348:	9809      	ldr	r0, [sp, #36]	; 0x24
 801334a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801334e:	a912      	add	r1, sp, #72	; 0x48
 8013350:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013354:	aa49      	add	r2, sp, #292	; 0x124
 8013356:	4623      	mov	r3, r4
 8013358:	47c8      	blx	r9
 801335a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801335e:	441a      	add	r2, r3
 8013360:	6963      	ldr	r3, [r4, #20]
 8013362:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013366:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801336a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801336e:	68a1      	ldr	r1, [r4, #8]
 8013370:	ed94 6a08 	vldr	s12, [r4, #32]
 8013374:	6022      	str	r2, [r4, #0]
 8013376:	3301      	adds	r3, #1
 8013378:	6163      	str	r3, [r4, #20]
 801337a:	69a3      	ldr	r3, [r4, #24]
 801337c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013380:	3b01      	subs	r3, #1
 8013382:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013386:	61a3      	str	r3, [r4, #24]
 8013388:	6923      	ldr	r3, [r4, #16]
 801338a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801338e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013392:	edd4 6a07 	vldr	s13, [r4, #28]
 8013396:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801339a:	440b      	add	r3, r1
 801339c:	68e1      	ldr	r1, [r4, #12]
 801339e:	6123      	str	r3, [r4, #16]
 80133a0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80133a4:	428b      	cmp	r3, r1
 80133a6:	edc4 6a07 	vstr	s13, [r4, #28]
 80133aa:	db15      	blt.n	80133d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80133ac:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80133b0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80133b4:	3201      	adds	r2, #1
 80133b6:	edc4 6a07 	vstr	s13, [r4, #28]
 80133ba:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80133be:	6022      	str	r2, [r4, #0]
 80133c0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80133c4:	1a5b      	subs	r3, r3, r1
 80133c6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80133ca:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80133ce:	6123      	str	r3, [r4, #16]
 80133d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80133d4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80133d8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80133dc:	441a      	add	r2, r3
 80133de:	696b      	ldr	r3, [r5, #20]
 80133e0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80133e4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80133e8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80133ec:	68a9      	ldr	r1, [r5, #8]
 80133ee:	ed95 6a08 	vldr	s12, [r5, #32]
 80133f2:	602a      	str	r2, [r5, #0]
 80133f4:	3301      	adds	r3, #1
 80133f6:	616b      	str	r3, [r5, #20]
 80133f8:	69ab      	ldr	r3, [r5, #24]
 80133fa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80133fe:	3b01      	subs	r3, #1
 8013400:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013404:	61ab      	str	r3, [r5, #24]
 8013406:	692b      	ldr	r3, [r5, #16]
 8013408:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801340c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013410:	edd5 6a07 	vldr	s13, [r5, #28]
 8013414:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013418:	440b      	add	r3, r1
 801341a:	68e9      	ldr	r1, [r5, #12]
 801341c:	612b      	str	r3, [r5, #16]
 801341e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013422:	428b      	cmp	r3, r1
 8013424:	edc5 6a07 	vstr	s13, [r5, #28]
 8013428:	db15      	blt.n	8013456 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801342a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801342e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013432:	3201      	adds	r2, #1
 8013434:	edc5 6a07 	vstr	s13, [r5, #28]
 8013438:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801343c:	602a      	str	r2, [r5, #0]
 801343e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013442:	1a5b      	subs	r3, r3, r1
 8013444:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013448:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801344c:	612b      	str	r3, [r5, #16]
 801344e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013452:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013456:	3f01      	subs	r7, #1
 8013458:	e757      	b.n	801330a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801345a:	ad39      	add	r5, sp, #228	; 0xe4
 801345c:	ac19      	add	r4, sp, #100	; 0x64
 801345e:	e72d      	b.n	80132bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013460:	4613      	mov	r3, r2
 8013462:	e744      	b.n	80132ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013464:	4613      	mov	r3, r2
 8013466:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801346a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801346c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8013470:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8013474:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8013478:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801347c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8013480:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8013484:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8013488:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801348a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801348e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013492:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013496:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801349a:	960e      	str	r6, [sp, #56]	; 0x38
 801349c:	469e      	mov	lr, r3
 801349e:	461f      	mov	r7, r3
 80134a0:	f04f 0900 	mov.w	r9, #0
 80134a4:	2f00      	cmp	r7, #0
 80134a6:	d146      	bne.n	8013536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80134a8:	449c      	add	ip, r3
 80134aa:	1ad7      	subs	r7, r2, r3
 80134ac:	f1b9 0f00 	cmp.w	r9, #0
 80134b0:	d009      	beq.n	80134c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80134b2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80134b6:	9039      	str	r0, [sp, #228]	; 0xe4
 80134b8:	913d      	str	r1, [sp, #244]	; 0xf4
 80134ba:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80134be:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80134c2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80134c6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80134c8:	910e      	str	r1, [sp, #56]	; 0x38
 80134ca:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80134ce:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80134d2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80134d6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80134da:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80134de:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80134e2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80134e6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80134ea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80134ee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80134f2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80134f6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80134fa:	f04f 0800 	mov.w	r8, #0
 80134fe:	f1be 0f00 	cmp.w	lr, #0
 8013502:	d030      	beq.n	8013566 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013504:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013506:	4431      	add	r1, r6
 8013508:	4549      	cmp	r1, r9
 801350a:	4450      	add	r0, sl
 801350c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013510:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013514:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013518:	db08      	blt.n	801352c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801351a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801351e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013522:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013526:	3001      	adds	r0, #1
 8013528:	eba1 0109 	sub.w	r1, r1, r9
 801352c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013530:	f04f 0801 	mov.w	r8, #1
 8013534:	e7e3      	b.n	80134fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013536:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013538:	4431      	add	r1, r6
 801353a:	4541      	cmp	r1, r8
 801353c:	4450      	add	r0, sl
 801353e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013542:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013546:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801354a:	db08      	blt.n	801355e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801354c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013550:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013554:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013558:	3001      	adds	r0, #1
 801355a:	eba1 0108 	sub.w	r1, r1, r8
 801355e:	3f01      	subs	r7, #1
 8013560:	f04f 0901 	mov.w	r9, #1
 8013564:	e79e      	b.n	80134a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013566:	449c      	add	ip, r3
 8013568:	1aff      	subs	r7, r7, r3
 801356a:	f1b8 0f00 	cmp.w	r8, #0
 801356e:	d009      	beq.n	8013584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013570:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013574:	9019      	str	r0, [sp, #100]	; 0x64
 8013576:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801357a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801357e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013582:	911d      	str	r1, [sp, #116]	; 0x74
 8013584:	1ad2      	subs	r2, r2, r3
 8013586:	e6b5      	b.n	80132f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013588:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801358a:	681b      	ldr	r3, [r3, #0]
 801358c:	b923      	cbnz	r3, 8013598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801358e:	4b04      	ldr	r3, [pc, #16]	; (80135a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013590:	6818      	ldr	r0, [r3, #0]
 8013592:	6803      	ldr	r3, [r0, #0]
 8013594:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013596:	4798      	blx	r3
 8013598:	b05b      	add	sp, #364	; 0x16c
 801359a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801359e:	bf00      	nop
 80135a0:	200137bc 	.word	0x200137bc

080135a4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80135a4:	b570      	push	{r4, r5, r6, lr}
 80135a6:	4604      	mov	r4, r0
 80135a8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80135ac:	9805      	ldr	r0, [sp, #20]
 80135ae:	6061      	str	r1, [r4, #4]
 80135b0:	2500      	movs	r5, #0
 80135b2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80135b6:	8263      	strh	r3, [r4, #18]
 80135b8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80135bc:	8025      	strh	r5, [r4, #0]
 80135be:	7221      	strb	r1, [r4, #8]
 80135c0:	7266      	strb	r6, [r4, #9]
 80135c2:	60e0      	str	r0, [r4, #12]
 80135c4:	8222      	strh	r2, [r4, #16]
 80135c6:	82a3      	strh	r3, [r4, #20]
 80135c8:	82e5      	strh	r5, [r4, #22]
 80135ca:	8325      	strh	r5, [r4, #24]
 80135cc:	8365      	strh	r5, [r4, #26]
 80135ce:	83a5      	strh	r5, [r4, #28]
 80135d0:	83e5      	strh	r5, [r4, #30]
 80135d2:	8425      	strh	r5, [r4, #32]
 80135d4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 80135d8:	b32e      	cbz	r6, 8013626 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80135da:	6803      	ldr	r3, [r0, #0]
 80135dc:	695b      	ldr	r3, [r3, #20]
 80135de:	4798      	blx	r3
 80135e0:	4606      	mov	r6, r0
 80135e2:	b300      	cbz	r0, 8013626 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80135e4:	68e0      	ldr	r0, [r4, #12]
 80135e6:	6803      	ldr	r3, [r0, #0]
 80135e8:	4631      	mov	r1, r6
 80135ea:	68db      	ldr	r3, [r3, #12]
 80135ec:	4798      	blx	r3
 80135ee:	4605      	mov	r5, r0
 80135f0:	b1c8      	cbz	r0, 8013626 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80135f2:	7b43      	ldrb	r3, [r0, #13]
 80135f4:	7a82      	ldrb	r2, [r0, #10]
 80135f6:	005b      	lsls	r3, r3, #1
 80135f8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80135fc:	4313      	orrs	r3, r2
 80135fe:	8423      	strh	r3, [r4, #32]
 8013600:	7a63      	ldrb	r3, [r4, #9]
 8013602:	2b06      	cmp	r3, #6
 8013604:	d10f      	bne.n	8013626 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013606:	68e0      	ldr	r0, [r4, #12]
 8013608:	6803      	ldr	r3, [r0, #0]
 801360a:	462a      	mov	r2, r5
 801360c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801360e:	4631      	mov	r1, r6
 8013610:	4798      	blx	r3
 8013612:	7b6b      	ldrb	r3, [r5, #13]
 8013614:	005b      	lsls	r3, r3, #1
 8013616:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801361a:	7aab      	ldrb	r3, [r5, #10]
 801361c:	4313      	orrs	r3, r2
 801361e:	4418      	add	r0, r3
 8013620:	8c23      	ldrh	r3, [r4, #32]
 8013622:	4418      	add	r0, r3
 8013624:	8420      	strh	r0, [r4, #32]
 8013626:	4620      	mov	r0, r4
 8013628:	bd70      	pop	{r4, r5, r6, pc}

0801362a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801362a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801362e:	2400      	movs	r4, #0
 8013630:	b085      	sub	sp, #20
 8013632:	4681      	mov	r9, r0
 8013634:	4688      	mov	r8, r1
 8013636:	4692      	mov	sl, r2
 8013638:	469b      	mov	fp, r3
 801363a:	4627      	mov	r7, r4
 801363c:	4625      	mov	r5, r4
 801363e:	4626      	mov	r6, r4
 8013640:	4554      	cmp	r4, sl
 8013642:	da2a      	bge.n	801369a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013644:	2300      	movs	r3, #0
 8013646:	9303      	str	r3, [sp, #12]
 8013648:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801364c:	429d      	cmp	r5, r3
 801364e:	d004      	beq.n	801365a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013650:	f242 030b 	movw	r3, #8203	; 0x200b
 8013654:	429d      	cmp	r5, r3
 8013656:	bf18      	it	ne
 8013658:	462f      	movne	r7, r5
 801365a:	ab03      	add	r3, sp, #12
 801365c:	4642      	mov	r2, r8
 801365e:	4659      	mov	r1, fp
 8013660:	4648      	mov	r0, r9
 8013662:	f003 f965 	bl	8016930 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013666:	4605      	mov	r5, r0
 8013668:	b1b8      	cbz	r0, 801369a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801366a:	280a      	cmp	r0, #10
 801366c:	d015      	beq.n	801369a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801366e:	9a03      	ldr	r2, [sp, #12]
 8013670:	b18a      	cbz	r2, 8013696 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013672:	7b50      	ldrb	r0, [r2, #13]
 8013674:	7a93      	ldrb	r3, [r2, #10]
 8013676:	8895      	ldrh	r5, [r2, #4]
 8013678:	0040      	lsls	r0, r0, #1
 801367a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801367e:	4303      	orrs	r3, r0
 8013680:	9301      	str	r3, [sp, #4]
 8013682:	f8d8 3000 	ldr.w	r3, [r8]
 8013686:	4639      	mov	r1, r7
 8013688:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801368a:	4640      	mov	r0, r8
 801368c:	4798      	blx	r3
 801368e:	9b01      	ldr	r3, [sp, #4]
 8013690:	4418      	add	r0, r3
 8013692:	4406      	add	r6, r0
 8013694:	b2b6      	uxth	r6, r6
 8013696:	3401      	adds	r4, #1
 8013698:	e7d2      	b.n	8013640 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801369a:	4630      	mov	r0, r6
 801369c:	b005      	add	sp, #20
 801369e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080136a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80136a2:	2a02      	cmp	r2, #2
 80136a4:	b530      	push	{r4, r5, lr}
 80136a6:	d011      	beq.n	80136cc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80136a8:	2a03      	cmp	r2, #3
 80136aa:	d01c      	beq.n	80136e6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80136ac:	2a01      	cmp	r2, #1
 80136ae:	d10c      	bne.n	80136ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80136b0:	888b      	ldrh	r3, [r1, #4]
 80136b2:	8801      	ldrh	r1, [r0, #0]
 80136b4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80136b8:	8844      	ldrh	r4, [r0, #2]
 80136ba:	8004      	strh	r4, [r0, #0]
 80136bc:	1a5b      	subs	r3, r3, r1
 80136be:	1a9b      	subs	r3, r3, r2
 80136c0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80136c4:	8043      	strh	r3, [r0, #2]
 80136c6:	8081      	strh	r1, [r0, #4]
 80136c8:	80c2      	strh	r2, [r0, #6]
 80136ca:	bd30      	pop	{r4, r5, pc}
 80136cc:	88cb      	ldrh	r3, [r1, #6]
 80136ce:	8842      	ldrh	r2, [r0, #2]
 80136d0:	1a9b      	subs	r3, r3, r2
 80136d2:	88c2      	ldrh	r2, [r0, #6]
 80136d4:	1a9b      	subs	r3, r3, r2
 80136d6:	888a      	ldrh	r2, [r1, #4]
 80136d8:	8801      	ldrh	r1, [r0, #0]
 80136da:	8043      	strh	r3, [r0, #2]
 80136dc:	1a52      	subs	r2, r2, r1
 80136de:	8881      	ldrh	r1, [r0, #4]
 80136e0:	1a52      	subs	r2, r2, r1
 80136e2:	8002      	strh	r2, [r0, #0]
 80136e4:	e7f1      	b.n	80136ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80136e6:	88cb      	ldrh	r3, [r1, #6]
 80136e8:	8841      	ldrh	r1, [r0, #2]
 80136ea:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80136ee:	f9b0 5000 	ldrsh.w	r5, [r0]
 80136f2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80136f6:	8045      	strh	r5, [r0, #2]
 80136f8:	1a5b      	subs	r3, r3, r1
 80136fa:	1a9b      	subs	r3, r3, r2
 80136fc:	8003      	strh	r3, [r0, #0]
 80136fe:	8082      	strh	r2, [r0, #4]
 8013700:	80c4      	strh	r4, [r0, #6]
 8013702:	e7e2      	b.n	80136ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013704 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013708:	b09f      	sub	sp, #124	; 0x7c
 801370a:	9116      	str	r1, [sp, #88]	; 0x58
 801370c:	9317      	str	r3, [sp, #92]	; 0x5c
 801370e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013710:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013712:	8809      	ldrh	r1, [r1, #0]
 8013714:	889b      	ldrh	r3, [r3, #4]
 8013716:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801371a:	9212      	str	r2, [sp, #72]	; 0x48
 801371c:	440b      	add	r3, r1
 801371e:	b21b      	sxth	r3, r3
 8013720:	9310      	str	r3, [sp, #64]	; 0x40
 8013722:	f8d8 3000 	ldr.w	r3, [r8]
 8013726:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801372a:	7b19      	ldrb	r1, [r3, #12]
 801372c:	7adb      	ldrb	r3, [r3, #11]
 801372e:	9011      	str	r0, [sp, #68]	; 0x44
 8013730:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8013734:	9114      	str	r1, [sp, #80]	; 0x50
 8013736:	9315      	str	r3, [sp, #84]	; 0x54
 8013738:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801373c:	2a00      	cmp	r2, #0
 801373e:	d06a      	beq.n	8013816 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8013740:	f898 3010 	ldrb.w	r3, [r8, #16]
 8013744:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013746:	2b06      	cmp	r3, #6
 8013748:	bf14      	ite	ne
 801374a:	2301      	movne	r3, #1
 801374c:	2302      	moveq	r3, #2
 801374e:	4413      	add	r3, r2
 8013750:	f04f 0900 	mov.w	r9, #0
 8013754:	930f      	str	r3, [sp, #60]	; 0x3c
 8013756:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801375a:	464c      	mov	r4, r9
 801375c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013760:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8013764:	4293      	cmp	r3, r2
 8013766:	f280 808f 	bge.w	8013888 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801376a:	2300      	movs	r3, #0
 801376c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8013770:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8013774:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013778:	429c      	cmp	r4, r3
 801377a:	d006      	beq.n	801378a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801377c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801377e:	f242 020b 	movw	r2, #8203	; 0x200b
 8013782:	4294      	cmp	r4, r2
 8013784:	bf18      	it	ne
 8013786:	4623      	movne	r3, r4
 8013788:	930d      	str	r3, [sp, #52]	; 0x34
 801378a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801378c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801378e:	f8d8 2000 	ldr.w	r2, [r8]
 8013792:	428b      	cmp	r3, r1
 8013794:	db41      	blt.n	801381a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8013796:	6813      	ldr	r3, [r2, #0]
 8013798:	4610      	mov	r0, r2
 801379a:	695b      	ldr	r3, [r3, #20]
 801379c:	4798      	blx	r3
 801379e:	4604      	mov	r4, r0
 80137a0:	f8d8 0000 	ldr.w	r0, [r8]
 80137a4:	6803      	ldr	r3, [r0, #0]
 80137a6:	aa1d      	add	r2, sp, #116	; 0x74
 80137a8:	689d      	ldr	r5, [r3, #8]
 80137aa:	4621      	mov	r1, r4
 80137ac:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80137b0:	47a8      	blx	r5
 80137b2:	901c      	str	r0, [sp, #112]	; 0x70
 80137b4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80137b8:	429c      	cmp	r4, r3
 80137ba:	f000 80eb 	beq.w	8013994 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80137be:	f242 030b 	movw	r3, #8203	; 0x200b
 80137c2:	429c      	cmp	r4, r3
 80137c4:	f000 80e6 	beq.w	8013994 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80137c8:	2c00      	cmp	r4, #0
 80137ca:	f000 80f8 	beq.w	80139be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80137ce:	2c0a      	cmp	r4, #10
 80137d0:	d060      	beq.n	8013894 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80137d2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80137d4:	b36a      	cbz	r2, 8013832 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80137d6:	8894      	ldrh	r4, [r2, #4]
 80137d8:	f1bb 0f00 	cmp.w	fp, #0
 80137dc:	d03b      	beq.n	8013856 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80137de:	f892 900d 	ldrb.w	r9, [r2, #13]
 80137e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80137e6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80137ea:	f892 900a 	ldrb.w	r9, [r2, #10]
 80137ee:	f1bb 0f01 	cmp.w	fp, #1
 80137f2:	ea49 0903 	orr.w	r9, r9, r3
 80137f6:	d134      	bne.n	8013862 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80137f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80137fa:	eba6 0609 	sub.w	r6, r6, r9
 80137fe:	2b00      	cmp	r3, #0
 8013800:	d14f      	bne.n	80138a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013802:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013804:	eb09 0306 	add.w	r3, r9, r6
 8013808:	4413      	add	r3, r2
 801380a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801380c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013810:	4293      	cmp	r3, r2
 8013812:	da51      	bge.n	80138b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013814:	e038      	b.n	8013888 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013816:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013818:	e79a      	b.n	8013750 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801381a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801381e:	9301      	str	r3, [sp, #4]
 8013820:	ab1d      	add	r3, sp, #116	; 0x74
 8013822:	9300      	str	r3, [sp, #0]
 8013824:	4659      	mov	r1, fp
 8013826:	ab1c      	add	r3, sp, #112	; 0x70
 8013828:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801382a:	f003 f8ca 	bl	80169c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801382e:	4604      	mov	r4, r0
 8013830:	e7c0      	b.n	80137b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013832:	f8d8 0000 	ldr.w	r0, [r8]
 8013836:	6803      	ldr	r3, [r0, #0]
 8013838:	691b      	ldr	r3, [r3, #16]
 801383a:	4798      	blx	r3
 801383c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013840:	4298      	cmp	r0, r3
 8013842:	f000 80a7 	beq.w	8013994 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013846:	f242 030b 	movw	r3, #8203	; 0x200b
 801384a:	4298      	cmp	r0, r3
 801384c:	f000 80a2 	beq.w	8013994 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013850:	f1bb 0f00 	cmp.w	fp, #0
 8013854:	d100      	bne.n	8013858 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8013856:	444e      	add	r6, r9
 8013858:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801385a:	2a00      	cmp	r2, #0
 801385c:	d1bf      	bne.n	80137de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801385e:	4691      	mov	r9, r2
 8013860:	e098      	b.n	8013994 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013862:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013864:	2b00      	cmp	r3, #0
 8013866:	f000 80ac 	beq.w	80139c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801386a:	f1bb 0f00 	cmp.w	fp, #0
 801386e:	d118      	bne.n	80138a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013870:	f8d8 0000 	ldr.w	r0, [r8]
 8013874:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013876:	6803      	ldr	r3, [r0, #0]
 8013878:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801387a:	4798      	blx	r3
 801387c:	4406      	add	r6, r0
 801387e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013880:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013882:	1af3      	subs	r3, r6, r3
 8013884:	4293      	cmp	r3, r2
 8013886:	dd17      	ble.n	80138b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013888:	2c00      	cmp	r4, #0
 801388a:	f000 8098 	beq.w	80139be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801388e:	2c0a      	cmp	r4, #10
 8013890:	f040 8086 	bne.w	80139a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8013894:	240a      	movs	r4, #10
 8013896:	fab4 f084 	clz	r0, r4
 801389a:	0940      	lsrs	r0, r0, #5
 801389c:	b01f      	add	sp, #124	; 0x7c
 801389e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138a2:	f8d8 0000 	ldr.w	r0, [r8]
 80138a6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80138a8:	6803      	ldr	r3, [r0, #0]
 80138aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80138ac:	4798      	blx	r3
 80138ae:	f1bb 0f01 	cmp.w	fp, #1
 80138b2:	eba6 0600 	sub.w	r6, r6, r0
 80138b6:	d0a4      	beq.n	8013802 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80138b8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80138ba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80138bc:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80138c0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80138c4:	7b43      	ldrb	r3, [r0, #13]
 80138c6:	015b      	lsls	r3, r3, #5
 80138c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80138cc:	7983      	ldrb	r3, [r0, #6]
 80138ce:	4431      	add	r1, r6
 80138d0:	4313      	orrs	r3, r2
 80138d2:	440b      	add	r3, r1
 80138d4:	42bb      	cmp	r3, r7
 80138d6:	db5d      	blt.n	8013994 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80138d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80138da:	4299      	cmp	r1, r3
 80138dc:	da5a      	bge.n	8013994 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80138de:	f8d8 0000 	ldr.w	r0, [r8]
 80138e2:	6803      	ldr	r3, [r0, #0]
 80138e4:	42b7      	cmp	r7, r6
 80138e6:	bfc8      	it	gt
 80138e8:	1bbf      	subgt	r7, r7, r6
 80138ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80138ec:	bfcc      	ite	gt
 80138ee:	b2bf      	uxthgt	r7, r7
 80138f0:	2700      	movle	r7, #0
 80138f2:	4798      	blx	r3
 80138f4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80138f6:	7b5a      	ldrb	r2, [r3, #13]
 80138f8:	00d1      	lsls	r1, r2, #3
 80138fa:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80138fe:	7a19      	ldrb	r1, [r3, #8]
 8013900:	4329      	orrs	r1, r5
 8013902:	0655      	lsls	r5, r2, #25
 8013904:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8013906:	bf44      	itt	mi
 8013908:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801390c:	b209      	sxthmi	r1, r1
 801390e:	1945      	adds	r5, r0, r5
 8013910:	1a6d      	subs	r5, r5, r1
 8013912:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013914:	b2ad      	uxth	r5, r5
 8013916:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801391a:	fa0f fa85 	sxth.w	sl, r5
 801391e:	4551      	cmp	r1, sl
 8013920:	dd3c      	ble.n	801399c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8013922:	0112      	lsls	r2, r2, #4
 8013924:	79d8      	ldrb	r0, [r3, #7]
 8013926:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801392a:	4302      	orrs	r2, r0
 801392c:	4492      	add	sl, r2
 801392e:	4551      	cmp	r1, sl
 8013930:	dc30      	bgt.n	8013994 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013932:	1b4d      	subs	r5, r1, r5
 8013934:	b22d      	sxth	r5, r5
 8013936:	468a      	mov	sl, r1
 8013938:	9319      	str	r3, [sp, #100]	; 0x64
 801393a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801393c:	f8d8 0000 	ldr.w	r0, [r8]
 8013940:	681a      	ldr	r2, [r3, #0]
 8013942:	6801      	ldr	r1, [r0, #0]
 8013944:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8013946:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8013948:	9313      	str	r3, [sp, #76]	; 0x4c
 801394a:	9218      	str	r2, [sp, #96]	; 0x60
 801394c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801394e:	4788      	blx	r1
 8013950:	f898 1006 	ldrb.w	r1, [r8, #6]
 8013954:	910b      	str	r1, [sp, #44]	; 0x2c
 8013956:	f898 100e 	ldrb.w	r1, [r8, #14]
 801395a:	910a      	str	r1, [sp, #40]	; 0x28
 801395c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8013960:	9109      	str	r1, [sp, #36]	; 0x24
 8013962:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8013966:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013968:	9305      	str	r3, [sp, #20]
 801396a:	b2ad      	uxth	r5, r5
 801396c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8013970:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8013974:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013976:	9304      	str	r3, [sp, #16]
 8013978:	4437      	add	r7, r6
 801397a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801397c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801397e:	9206      	str	r2, [sp, #24]
 8013980:	b23f      	sxth	r7, r7
 8013982:	f8cd a004 	str.w	sl, [sp, #4]
 8013986:	9700      	str	r7, [sp, #0]
 8013988:	681a      	ldr	r2, [r3, #0]
 801398a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801398c:	685b      	ldr	r3, [r3, #4]
 801398e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013990:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013992:	47a8      	blx	r5
 8013994:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013996:	3301      	adds	r3, #1
 8013998:	930e      	str	r3, [sp, #56]	; 0x38
 801399a:	e6e1      	b.n	8013760 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801399c:	2500      	movs	r5, #0
 801399e:	e7cb      	b.n	8013938 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80139a0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80139a2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80139a4:	3501      	adds	r5, #1
 80139a6:	429d      	cmp	r5, r3
 80139a8:	f6bf af75 	bge.w	8013896 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80139ac:	4659      	mov	r1, fp
 80139ae:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80139b0:	f7f3 fdbc 	bl	800752c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80139b4:	4604      	mov	r4, r0
 80139b6:	b110      	cbz	r0, 80139be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80139b8:	280a      	cmp	r0, #10
 80139ba:	d1f2      	bne.n	80139a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80139bc:	e76a      	b.n	8013894 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80139be:	2400      	movs	r4, #0
 80139c0:	e769      	b.n	8013896 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80139c2:	f1bb 0f00 	cmp.w	fp, #0
 80139c6:	f43f af5a 	beq.w	801387e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80139ca:	e775      	b.n	80138b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080139cc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80139cc:	b530      	push	{r4, r5, lr}
 80139ce:	8ac4      	ldrh	r4, [r0, #22]
 80139d0:	8b45      	ldrh	r5, [r0, #26]
 80139d2:	8343      	strh	r3, [r0, #26]
 80139d4:	442c      	add	r4, r5
 80139d6:	1ae4      	subs	r4, r4, r3
 80139d8:	82c4      	strh	r4, [r0, #22]
 80139da:	8b83      	ldrh	r3, [r0, #28]
 80139dc:	8b04      	ldrh	r4, [r0, #24]
 80139de:	4422      	add	r2, r4
 80139e0:	440c      	add	r4, r1
 80139e2:	1a59      	subs	r1, r3, r1
 80139e4:	83c2      	strh	r2, [r0, #30]
 80139e6:	8304      	strh	r4, [r0, #24]
 80139e8:	8381      	strh	r1, [r0, #28]
 80139ea:	bd30      	pop	{r4, r5, pc}

080139ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80139ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139f0:	4604      	mov	r4, r0
 80139f2:	8a47      	ldrh	r7, [r0, #18]
 80139f4:	68c0      	ldr	r0, [r0, #12]
 80139f6:	6803      	ldr	r3, [r0, #0]
 80139f8:	b085      	sub	sp, #20
 80139fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80139fc:	4798      	blx	r3
 80139fe:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8013a02:	7a63      	ldrb	r3, [r4, #9]
 8013a04:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8013a08:	42b7      	cmp	r7, r6
 8013a0a:	f103 33ff 	add.w	r3, r3, #4294967295
 8013a0e:	bfac      	ite	ge
 8013a10:	f04f 0900 	movge.w	r9, #0
 8013a14:	f04f 0901 	movlt.w	r9, #1
 8013a18:	2b05      	cmp	r3, #5
 8013a1a:	d804      	bhi.n	8013a26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8013a1c:	e8df f003 	tbb	[pc, r3]
 8013a20:	470e0854 	.word	0x470e0854
 8013a24:	4c4c      	.short	0x4c4c
 8013a26:	2500      	movs	r5, #0
 8013a28:	46a9      	mov	r9, r5
 8013a2a:	462e      	mov	r6, r5
 8013a2c:	462f      	mov	r7, r5
 8013a2e:	e00d      	b.n	8013a4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013a30:	42b7      	cmp	r7, r6
 8013a32:	bfb4      	ite	lt
 8013a34:	2600      	movlt	r6, #0
 8013a36:	2601      	movge	r6, #1
 8013a38:	2500      	movs	r5, #0
 8013a3a:	e7f7      	b.n	8013a2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013a3c:	42b7      	cmp	r7, r6
 8013a3e:	464d      	mov	r5, r9
 8013a40:	f04f 0900 	mov.w	r9, #0
 8013a44:	bfb4      	ite	lt
 8013a46:	2600      	movlt	r6, #0
 8013a48:	2601      	movge	r6, #1
 8013a4a:	464f      	mov	r7, r9
 8013a4c:	f04f 0800 	mov.w	r8, #0
 8013a50:	f8a4 8016 	strh.w	r8, [r4, #22]
 8013a54:	f8a4 8018 	strh.w	r8, [r4, #24]
 8013a58:	f8cd 8004 	str.w	r8, [sp, #4]
 8013a5c:	2300      	movs	r3, #0
 8013a5e:	9303      	str	r3, [sp, #12]
 8013a60:	8823      	ldrh	r3, [r4, #0]
 8013a62:	2b20      	cmp	r3, #32
 8013a64:	d034      	beq.n	8013ad0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8013a66:	f242 010b 	movw	r1, #8203	; 0x200b
 8013a6a:	1a5a      	subs	r2, r3, r1
 8013a6c:	f1d2 0a00 	rsbs	sl, r2, #0
 8013a70:	eb4a 0a02 	adc.w	sl, sl, r2
 8013a74:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8013a78:	4293      	cmp	r3, r2
 8013a7a:	d009      	beq.n	8013a90 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013a7c:	428b      	cmp	r3, r1
 8013a7e:	9a01      	ldr	r2, [sp, #4]
 8013a80:	bf18      	it	ne
 8013a82:	461a      	movne	r2, r3
 8013a84:	9201      	str	r2, [sp, #4]
 8013a86:	bf0c      	ite	eq
 8013a88:	f04f 0a01 	moveq.w	sl, #1
 8013a8c:	f04f 0a00 	movne.w	sl, #0
 8013a90:	ab03      	add	r3, sp, #12
 8013a92:	68e2      	ldr	r2, [r4, #12]
 8013a94:	7a21      	ldrb	r1, [r4, #8]
 8013a96:	6860      	ldr	r0, [r4, #4]
 8013a98:	f002 ff4a 	bl	8016930 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013a9c:	8020      	strh	r0, [r4, #0]
 8013a9e:	b9d8      	cbnz	r0, 8013ad8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8013aa0:	8ba2      	ldrh	r2, [r4, #28]
 8013aa2:	2300      	movs	r3, #0
 8013aa4:	4611      	mov	r1, r2
 8013aa6:	4620      	mov	r0, r4
 8013aa8:	f7ff ff90 	bl	80139cc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013aac:	e06e      	b.n	8013b8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8013aae:	2500      	movs	r5, #0
 8013ab0:	46a9      	mov	r9, r5
 8013ab2:	462e      	mov	r6, r5
 8013ab4:	2701      	movs	r7, #1
 8013ab6:	e7c9      	b.n	8013a4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013ab8:	42b7      	cmp	r7, r6
 8013aba:	f04f 0500 	mov.w	r5, #0
 8013abe:	bfb4      	ite	lt
 8013ac0:	2700      	movlt	r7, #0
 8013ac2:	2701      	movge	r7, #1
 8013ac4:	462e      	mov	r6, r5
 8013ac6:	e7c1      	b.n	8013a4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013ac8:	2500      	movs	r5, #0
 8013aca:	46a9      	mov	r9, r5
 8013acc:	2601      	movs	r6, #1
 8013ace:	e7ad      	b.n	8013a2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013ad0:	9301      	str	r3, [sp, #4]
 8013ad2:	f04f 0a01 	mov.w	sl, #1
 8013ad6:	e7db      	b.n	8013a90 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013ad8:	8b63      	ldrh	r3, [r4, #26]
 8013ada:	280a      	cmp	r0, #10
 8013adc:	f103 0301 	add.w	r3, r3, #1
 8013ae0:	8363      	strh	r3, [r4, #26]
 8013ae2:	d0dd      	beq.n	8013aa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8013ae4:	9a03      	ldr	r2, [sp, #12]
 8013ae6:	bb62      	cbnz	r2, 8013b42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8013ae8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013aec:	4298      	cmp	r0, r3
 8013aee:	d003      	beq.n	8013af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8013af0:	f242 030b 	movw	r3, #8203	; 0x200b
 8013af4:	4298      	cmp	r0, r3
 8013af6:	d1b1      	bne.n	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013af8:	8823      	ldrh	r3, [r4, #0]
 8013afa:	8ba1      	ldrh	r1, [r4, #28]
 8013afc:	2b20      	cmp	r3, #32
 8013afe:	d003      	beq.n	8013b08 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8013b00:	f242 000b 	movw	r0, #8203	; 0x200b
 8013b04:	4283      	cmp	r3, r0
 8013b06:	d131      	bne.n	8013b6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8013b08:	f1ba 0f00 	cmp.w	sl, #0
 8013b0c:	bf0a      	itet	eq
 8013b0e:	4688      	moveq	r8, r1
 8013b10:	4650      	movne	r0, sl
 8013b12:	2001      	moveq	r0, #1
 8013b14:	440a      	add	r2, r1
 8013b16:	8b23      	ldrh	r3, [r4, #24]
 8013b18:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8013b1c:	b292      	uxth	r2, r2
 8013b1e:	83a2      	strh	r2, [r4, #28]
 8013b20:	4413      	add	r3, r2
 8013b22:	f1b9 0f00 	cmp.w	r9, #0
 8013b26:	d102      	bne.n	8013b2e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8013b28:	2d00      	cmp	r5, #0
 8013b2a:	d042      	beq.n	8013bb2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8013b2c:	b300      	cbz	r0, 8013b70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8013b2e:	8c21      	ldrh	r1, [r4, #32]
 8013b30:	4419      	add	r1, r3
 8013b32:	458c      	cmp	ip, r1
 8013b34:	da37      	bge.n	8013ba6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013b36:	8ae1      	ldrh	r1, [r4, #22]
 8013b38:	2900      	cmp	r1, #0
 8013b3a:	d034      	beq.n	8013ba6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013b3c:	4563      	cmp	r3, ip
 8013b3e:	dd8d      	ble.n	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013b40:	e01d      	b.n	8013b7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8013b42:	8893      	ldrh	r3, [r2, #4]
 8013b44:	8023      	strh	r3, [r4, #0]
 8013b46:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8013b4a:	9901      	ldr	r1, [sp, #4]
 8013b4c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8013b50:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8013b54:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8013b58:	ea4b 0b00 	orr.w	fp, fp, r0
 8013b5c:	68e0      	ldr	r0, [r4, #12]
 8013b5e:	6803      	ldr	r3, [r0, #0]
 8013b60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013b62:	4798      	blx	r3
 8013b64:	eb0b 0200 	add.w	r2, fp, r0
 8013b68:	b292      	uxth	r2, r2
 8013b6a:	e7c5      	b.n	8013af8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8013b6c:	2000      	movs	r0, #0
 8013b6e:	e7d1      	b.n	8013b14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8013b70:	4563      	cmp	r3, ip
 8013b72:	f77f af73 	ble.w	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013b76:	8ae3      	ldrh	r3, [r4, #22]
 8013b78:	2b00      	cmp	r3, #0
 8013b7a:	f43f af6f 	beq.w	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013b7e:	2301      	movs	r3, #1
 8013b80:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8013b84:	8c22      	ldrh	r2, [r4, #32]
 8013b86:	8be3      	ldrh	r3, [r4, #30]
 8013b88:	4413      	add	r3, r2
 8013b8a:	83e3      	strh	r3, [r4, #30]
 8013b8c:	68e0      	ldr	r0, [r4, #12]
 8013b8e:	6803      	ldr	r3, [r0, #0]
 8013b90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013b92:	4798      	blx	r3
 8013b94:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8013b98:	4418      	add	r0, r3
 8013b9a:	8a63      	ldrh	r3, [r4, #18]
 8013b9c:	1a18      	subs	r0, r3, r0
 8013b9e:	8260      	strh	r0, [r4, #18]
 8013ba0:	b005      	add	sp, #20
 8013ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ba6:	2300      	movs	r3, #0
 8013ba8:	4611      	mov	r1, r2
 8013baa:	4620      	mov	r0, r4
 8013bac:	f7ff ff0e 	bl	80139cc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013bb0:	e754      	b.n	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013bb2:	4563      	cmp	r3, ip
 8013bb4:	dd14      	ble.n	8013be0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8013bb6:	b117      	cbz	r7, 8013bbe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8013bb8:	2301      	movs	r3, #1
 8013bba:	460a      	mov	r2, r1
 8013bbc:	e772      	b.n	8013aa4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8013bbe:	2e00      	cmp	r6, #0
 8013bc0:	f43f af4c 	beq.w	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013bc4:	2800      	cmp	r0, #0
 8013bc6:	f47f af49 	bne.w	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013bca:	f1ba 0f00 	cmp.w	sl, #0
 8013bce:	d002      	beq.n	8013bd6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8013bd0:	2301      	movs	r3, #1
 8013bd2:	4642      	mov	r2, r8
 8013bd4:	e767      	b.n	8013aa6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8013bd6:	8ae3      	ldrh	r3, [r4, #22]
 8013bd8:	2b00      	cmp	r3, #0
 8013bda:	f43f af3f 	beq.w	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013bde:	e7d5      	b.n	8013b8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8013be0:	2800      	cmp	r0, #0
 8013be2:	f47f af3b 	bne.w	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013be6:	f1ba 0f00 	cmp.w	sl, #0
 8013bea:	f43f af37 	beq.w	8013a5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013bee:	2301      	movs	r3, #1
 8013bf0:	4642      	mov	r2, r8
 8013bf2:	e7da      	b.n	8013baa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08013bf4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8013bf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013bf6:	4605      	mov	r5, r0
 8013bf8:	b08f      	sub	sp, #60	; 0x3c
 8013bfa:	4617      	mov	r7, r2
 8013bfc:	461c      	mov	r4, r3
 8013bfe:	460e      	mov	r6, r1
 8013c00:	b1d1      	cbz	r1, 8013c38 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8013c02:	681b      	ldr	r3, [r3, #0]
 8013c04:	4620      	mov	r0, r4
 8013c06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013c08:	4798      	blx	r3
 8013c0a:	4240      	negs	r0, r0
 8013c0c:	b200      	sxth	r0, r0
 8013c0e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8013c12:	9603      	str	r6, [sp, #12]
 8013c14:	9700      	str	r7, [sp, #0]
 8013c16:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013c1a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013c1e:	4629      	mov	r1, r5
 8013c20:	a805      	add	r0, sp, #20
 8013c22:	f7ff fcbf 	bl	80135a4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013c26:	2401      	movs	r4, #1
 8013c28:	a805      	add	r0, sp, #20
 8013c2a:	f7ff fedf 	bl	80139ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013c2e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013c32:	b163      	cbz	r3, 8013c4e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8013c34:	3401      	adds	r4, #1
 8013c36:	e7f7      	b.n	8013c28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8013c38:	f002 ff48 	bl	8016acc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013c3c:	2401      	movs	r4, #1
 8013c3e:	280a      	cmp	r0, #10
 8013c40:	4628      	mov	r0, r5
 8013c42:	bf08      	it	eq
 8013c44:	3401      	addeq	r4, #1
 8013c46:	f002 ff41 	bl	8016acc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013c4a:	2800      	cmp	r0, #0
 8013c4c:	d1f7      	bne.n	8013c3e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8013c4e:	b2a0      	uxth	r0, r4
 8013c50:	b00f      	add	sp, #60	; 0x3c
 8013c52:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013c54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8013c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c58:	b0e3      	sub	sp, #396	; 0x18c
 8013c5a:	461c      	mov	r4, r3
 8013c5c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8013c5e:	4683      	mov	fp, r0
 8013c60:	4688      	mov	r8, r1
 8013c62:	2b00      	cmp	r3, #0
 8013c64:	f000 8112 	beq.w	8013e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013c68:	6823      	ldr	r3, [r4, #0]
 8013c6a:	2b00      	cmp	r3, #0
 8013c6c:	f000 810e 	beq.w	8013e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013c70:	7ba3      	ldrb	r3, [r4, #14]
 8013c72:	2b00      	cmp	r3, #0
 8013c74:	f000 810a 	beq.w	8013e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013c78:	6810      	ldr	r0, [r2, #0]
 8013c7a:	6851      	ldr	r1, [r2, #4]
 8013c7c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8013c80:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013c84:	ad0a      	add	r5, sp, #40	; 0x28
 8013c86:	462b      	mov	r3, r5
 8013c88:	c303      	stmia	r3!, {r0, r1}
 8013c8a:	2100      	movs	r1, #0
 8013c8c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8013c90:	910c      	str	r1, [sp, #48]	; 0x30
 8013c92:	79a2      	ldrb	r2, [r4, #6]
 8013c94:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013c98:	a90c      	add	r1, sp, #48	; 0x30
 8013c9a:	4628      	mov	r0, r5
 8013c9c:	f7ff fd01 	bl	80136a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013ca0:	a90c      	add	r1, sp, #48	; 0x30
 8013ca2:	4608      	mov	r0, r1
 8013ca4:	79a2      	ldrb	r2, [r4, #6]
 8013ca6:	f7ff fcfc 	bl	80136a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013caa:	a817      	add	r0, sp, #92	; 0x5c
 8013cac:	f002 fae2 	bl	8016274 <_ZN8touchgfx12TextProviderC1Ev>
 8013cb0:	6820      	ldr	r0, [r4, #0]
 8013cb2:	6803      	ldr	r3, [r0, #0]
 8013cb4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013cb6:	4798      	blx	r3
 8013cb8:	4606      	mov	r6, r0
 8013cba:	6820      	ldr	r0, [r4, #0]
 8013cbc:	6803      	ldr	r3, [r0, #0]
 8013cbe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013cc0:	4798      	blx	r3
 8013cc2:	4633      	mov	r3, r6
 8013cc4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8013cc6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8013cc8:	9000      	str	r0, [sp, #0]
 8013cca:	a817      	add	r0, sp, #92	; 0x5c
 8013ccc:	f002 fb2d 	bl	801632a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013cd0:	6820      	ldr	r0, [r4, #0]
 8013cd2:	f894 a004 	ldrb.w	sl, [r4, #4]
 8013cd6:	6803      	ldr	r3, [r0, #0]
 8013cd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013cda:	4798      	blx	r3
 8013cdc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8013ce0:	6823      	ldr	r3, [r4, #0]
 8013ce2:	4607      	mov	r7, r0
 8013ce4:	4406      	add	r6, r0
 8013ce6:	a830      	add	r0, sp, #192	; 0xc0
 8013ce8:	f893 9009 	ldrb.w	r9, [r3, #9]
 8013cec:	f002 fac2 	bl	8016274 <_ZN8touchgfx12TextProviderC1Ev>
 8013cf0:	7c23      	ldrb	r3, [r4, #16]
 8013cf2:	b17b      	cbz	r3, 8013d14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8013cf4:	6820      	ldr	r0, [r4, #0]
 8013cf6:	6803      	ldr	r3, [r0, #0]
 8013cf8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013cfa:	4798      	blx	r3
 8013cfc:	9009      	str	r0, [sp, #36]	; 0x24
 8013cfe:	6820      	ldr	r0, [r4, #0]
 8013d00:	6802      	ldr	r2, [r0, #0]
 8013d02:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8013d04:	4790      	blx	r2
 8013d06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d08:	9000      	str	r0, [sp, #0]
 8013d0a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8013d0c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8013d0e:	a830      	add	r0, sp, #192	; 0xc0
 8013d10:	f002 fb0b 	bl	801632a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013d14:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8013d18:	7be2      	ldrb	r2, [r4, #15]
 8013d1a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8013d1e:	1a8a      	subs	r2, r1, r2
 8013d20:	7c21      	ldrb	r1, [r4, #16]
 8013d22:	9103      	str	r1, [sp, #12]
 8013d24:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8013d28:	9102      	str	r1, [sp, #8]
 8013d2a:	6821      	ldr	r1, [r4, #0]
 8013d2c:	9101      	str	r1, [sp, #4]
 8013d2e:	7961      	ldrb	r1, [r4, #5]
 8013d30:	9100      	str	r1, [sp, #0]
 8013d32:	b292      	uxth	r2, r2
 8013d34:	a930      	add	r1, sp, #192	; 0xc0
 8013d36:	a80e      	add	r0, sp, #56	; 0x38
 8013d38:	f7ff fc34 	bl	80135a4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013d3c:	2e00      	cmp	r6, #0
 8013d3e:	dc5b      	bgt.n	8013df8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8013d40:	af17      	add	r7, sp, #92	; 0x5c
 8013d42:	f04f 0900 	mov.w	r9, #0
 8013d46:	7c23      	ldrb	r3, [r4, #16]
 8013d48:	2b00      	cmp	r3, #0
 8013d4a:	f000 80b1 	beq.w	8013eb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8013d4e:	a80e      	add	r0, sp, #56	; 0x38
 8013d50:	f7ff fe4c 	bl	80139ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013d54:	f1ba 0f00 	cmp.w	sl, #0
 8013d58:	f000 80a5 	beq.w	8013ea6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013d5c:	7c23      	ldrb	r3, [r4, #16]
 8013d5e:	9309      	str	r3, [sp, #36]	; 0x24
 8013d60:	2264      	movs	r2, #100	; 0x64
 8013d62:	4639      	mov	r1, r7
 8013d64:	a849      	add	r0, sp, #292	; 0x124
 8013d66:	f014 fa6e 	bl	8028246 <memcpy>
 8013d6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d6c:	2b00      	cmp	r3, #0
 8013d6e:	f000 80a7 	beq.w	8013ec0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8013d72:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8013d76:	7922      	ldrb	r2, [r4, #4]
 8013d78:	2a01      	cmp	r2, #1
 8013d7a:	f040 808a 	bne.w	8013e92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8013d7e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8013d82:	1ac0      	subs	r0, r0, r3
 8013d84:	2302      	movs	r3, #2
 8013d86:	fb90 f0f3 	sdiv	r0, r0, r3
 8013d8a:	b200      	sxth	r0, r0
 8013d8c:	7c23      	ldrb	r3, [r4, #16]
 8013d8e:	2b00      	cmp	r3, #0
 8013d90:	f000 808b 	beq.w	8013eaa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8013d94:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8013d98:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8013d9c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013da0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8013da4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8013da8:	4410      	add	r0, r2
 8013daa:	b200      	sxth	r0, r0
 8013dac:	9000      	str	r0, [sp, #0]
 8013dae:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8013db2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8013db6:	4642      	mov	r2, r8
 8013db8:	2100      	movs	r1, #0
 8013dba:	4658      	mov	r0, fp
 8013dbc:	f7ff fca2 	bl	8013704 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8013dc0:	2800      	cmp	r0, #0
 8013dc2:	d163      	bne.n	8013e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013dc4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8013dc8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8013dcc:	b2b2      	uxth	r2, r6
 8013dce:	4413      	add	r3, r2
 8013dd0:	1a8a      	subs	r2, r1, r2
 8013dd2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8013dd6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8013dda:	b21b      	sxth	r3, r3
 8013ddc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013de0:	2a00      	cmp	r2, #0
 8013de2:	d153      	bne.n	8013e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013de4:	6822      	ldr	r2, [r4, #0]
 8013de6:	8869      	ldrh	r1, [r5, #2]
 8013de8:	7a12      	ldrb	r2, [r2, #8]
 8013dea:	1a9b      	subs	r3, r3, r2
 8013dec:	88ea      	ldrh	r2, [r5, #6]
 8013dee:	440a      	add	r2, r1
 8013df0:	b212      	sxth	r2, r2
 8013df2:	4293      	cmp	r3, r2
 8013df4:	dda7      	ble.n	8013d46 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8013df6:	e049      	b.n	8013e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013df8:	7c23      	ldrb	r3, [r4, #16]
 8013dfa:	444f      	add	r7, r9
 8013dfc:	b1c3      	cbz	r3, 8013e30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8013dfe:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8013e02:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013e06:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013e0a:	443b      	add	r3, r7
 8013e0c:	4293      	cmp	r3, r2
 8013e0e:	da97      	bge.n	8013d40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013e10:	a80e      	add	r0, sp, #56	; 0x38
 8013e12:	f7ff fdeb 	bl	80139ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013e16:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8013e1a:	3b01      	subs	r3, #1
 8013e1c:	b29b      	uxth	r3, r3
 8013e1e:	454b      	cmp	r3, r9
 8013e20:	9309      	str	r3, [sp, #36]	; 0x24
 8013e22:	d021      	beq.n	8013e68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8013e24:	7961      	ldrb	r1, [r4, #5]
 8013e26:	a817      	add	r0, sp, #92	; 0x5c
 8013e28:	f7f3 fb80 	bl	800752c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013e2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e2e:	e7f4      	b.n	8013e1a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8013e30:	fa1f f986 	uxth.w	r9, r6
 8013e34:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013e38:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013e3c:	443b      	add	r3, r7
 8013e3e:	4293      	cmp	r3, r2
 8013e40:	f6bf af7e 	bge.w	8013d40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013e44:	a817      	add	r0, sp, #92	; 0x5c
 8013e46:	f002 fe41 	bl	8016acc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013e4a:	b1f8      	cbz	r0, 8013e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013e4c:	280a      	cmp	r0, #10
 8013e4e:	d1f1      	bne.n	8013e34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013e50:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8013e54:	444b      	add	r3, r9
 8013e56:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013e5a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8013e5e:	eba3 0309 	sub.w	r3, r3, r9
 8013e62:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013e66:	e7e5      	b.n	8013e34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013e68:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8013e6c:	b2b3      	uxth	r3, r6
 8013e6e:	441a      	add	r2, r3
 8013e70:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8013e74:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8013e78:	1ad3      	subs	r3, r2, r3
 8013e7a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013e7e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013e82:	b11b      	cbz	r3, 8013e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013e84:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8013e88:	2b00      	cmp	r3, #0
 8013e8a:	d0ba      	beq.n	8013e02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8013e8c:	b063      	add	sp, #396	; 0x18c
 8013e8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e92:	2a02      	cmp	r2, #2
 8013e94:	d105      	bne.n	8013ea2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8013e96:	7be2      	ldrb	r2, [r4, #15]
 8013e98:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8013e9c:	1a80      	subs	r0, r0, r2
 8013e9e:	1ac0      	subs	r0, r0, r3
 8013ea0:	e773      	b.n	8013d8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8013ea2:	2000      	movs	r0, #0
 8013ea4:	e772      	b.n	8013d8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013ea6:	7be0      	ldrb	r0, [r4, #15]
 8013ea8:	e770      	b.n	8013d8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013eaa:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8013eae:	e773      	b.n	8013d98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8013eb0:	f1ba 0f00 	cmp.w	sl, #0
 8013eb4:	d0f7      	beq.n	8013ea6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013eb6:	2264      	movs	r2, #100	; 0x64
 8013eb8:	4639      	mov	r1, r7
 8013eba:	a849      	add	r0, sp, #292	; 0x124
 8013ebc:	f014 f9c3 	bl	8028246 <memcpy>
 8013ec0:	2300      	movs	r3, #0
 8013ec2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8013ec6:	6821      	ldr	r1, [r4, #0]
 8013ec8:	a849      	add	r0, sp, #292	; 0x124
 8013eca:	f7ff fbae 	bl	801362a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8013ece:	b203      	sxth	r3, r0
 8013ed0:	e751      	b.n	8013d76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08013ed2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8013ed2:	2b03      	cmp	r3, #3
 8013ed4:	d818      	bhi.n	8013f08 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8013ed6:	e8df f003 	tbb	[pc, r3]
 8013eda:	0602      	.short	0x0602
 8013edc:	130d      	.short	0x130d
 8013ede:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013ee2:	1850      	adds	r0, r2, r1
 8013ee4:	4770      	bx	lr
 8013ee6:	8803      	ldrh	r3, [r0, #0]
 8013ee8:	8880      	ldrh	r0, [r0, #4]
 8013eea:	4418      	add	r0, r3
 8013eec:	b200      	sxth	r0, r0
 8013eee:	1a80      	subs	r0, r0, r2
 8013ef0:	3801      	subs	r0, #1
 8013ef2:	4770      	bx	lr
 8013ef4:	8803      	ldrh	r3, [r0, #0]
 8013ef6:	8880      	ldrh	r0, [r0, #4]
 8013ef8:	4418      	add	r0, r3
 8013efa:	b200      	sxth	r0, r0
 8013efc:	1a40      	subs	r0, r0, r1
 8013efe:	e7f7      	b.n	8013ef0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8013f00:	f9b0 0000 	ldrsh.w	r0, [r0]
 8013f04:	4410      	add	r0, r2
 8013f06:	4770      	bx	lr
 8013f08:	2000      	movs	r0, #0
 8013f0a:	4770      	bx	lr

08013f0c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8013f0c:	2b03      	cmp	r3, #3
 8013f0e:	d817      	bhi.n	8013f40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8013f10:	e8df f003 	tbb	[pc, r3]
 8013f14:	10090602 	.word	0x10090602
 8013f18:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013f1c:	1850      	adds	r0, r2, r1
 8013f1e:	4770      	bx	lr
 8013f20:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013f24:	e7fa      	b.n	8013f1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8013f26:	8843      	ldrh	r3, [r0, #2]
 8013f28:	88c0      	ldrh	r0, [r0, #6]
 8013f2a:	4418      	add	r0, r3
 8013f2c:	b200      	sxth	r0, r0
 8013f2e:	1a80      	subs	r0, r0, r2
 8013f30:	3801      	subs	r0, #1
 8013f32:	4770      	bx	lr
 8013f34:	8843      	ldrh	r3, [r0, #2]
 8013f36:	88c0      	ldrh	r0, [r0, #6]
 8013f38:	4418      	add	r0, r3
 8013f3a:	b200      	sxth	r0, r0
 8013f3c:	1a40      	subs	r0, r0, r1
 8013f3e:	e7f7      	b.n	8013f30 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8013f40:	2000      	movs	r0, #0
 8013f42:	4770      	bx	lr

08013f44 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8013f44:	4b01      	ldr	r3, [pc, #4]	; (8013f4c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8013f46:	2200      	movs	r2, #0
 8013f48:	601a      	str	r2, [r3, #0]
 8013f4a:	4770      	bx	lr
 8013f4c:	200137cc 	.word	0x200137cc

08013f50 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8013f50:	4603      	mov	r3, r0
 8013f52:	b1c8      	cbz	r0, 8013f88 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8013f54:	0c02      	lsrs	r2, r0, #16
 8013f56:	0412      	lsls	r2, r2, #16
 8013f58:	b9a2      	cbnz	r2, 8013f84 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8013f5a:	0403      	lsls	r3, r0, #16
 8013f5c:	2010      	movs	r0, #16
 8013f5e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8013f62:	bf04      	itt	eq
 8013f64:	021b      	lsleq	r3, r3, #8
 8013f66:	3008      	addeq	r0, #8
 8013f68:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8013f6c:	bf04      	itt	eq
 8013f6e:	011b      	lsleq	r3, r3, #4
 8013f70:	3004      	addeq	r0, #4
 8013f72:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8013f76:	bf04      	itt	eq
 8013f78:	009b      	lsleq	r3, r3, #2
 8013f7a:	3002      	addeq	r0, #2
 8013f7c:	2b00      	cmp	r3, #0
 8013f7e:	db04      	blt.n	8013f8a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8013f80:	3001      	adds	r0, #1
 8013f82:	4770      	bx	lr
 8013f84:	2000      	movs	r0, #0
 8013f86:	e7ea      	b.n	8013f5e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8013f88:	2020      	movs	r0, #32
 8013f8a:	4770      	bx	lr

08013f8c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8013f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f90:	b087      	sub	sp, #28
 8013f92:	460d      	mov	r5, r1
 8013f94:	4616      	mov	r6, r2
 8013f96:	4698      	mov	r8, r3
 8013f98:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8013f9c:	4601      	mov	r1, r0
 8013f9e:	b120      	cbz	r0, 8013faa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013fa0:	b11a      	cbz	r2, 8013faa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013fa2:	2d1f      	cmp	r5, #31
 8013fa4:	d801      	bhi.n	8013faa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013fa6:	2b1f      	cmp	r3, #31
 8013fa8:	d904      	bls.n	8013fb4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8013faa:	2000      	movs	r0, #0
 8013fac:	6038      	str	r0, [r7, #0]
 8013fae:	b007      	add	sp, #28
 8013fb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fb4:	b97d      	cbnz	r5, 8013fd6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8013fb6:	b143      	cbz	r3, 8013fca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8013fb8:	4602      	mov	r2, r0
 8013fba:	e9cd 4700 	strd	r4, r7, [sp]
 8013fbe:	462b      	mov	r3, r5
 8013fc0:	4641      	mov	r1, r8
 8013fc2:	4630      	mov	r0, r6
 8013fc4:	f7ff ffe2 	bl	8013f8c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013fc8:	e7f1      	b.n	8013fae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013fca:	f04f 33ff 	mov.w	r3, #4294967295
 8013fce:	603b      	str	r3, [r7, #0]
 8013fd0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8013fd4:	e7eb      	b.n	8013fae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013fd6:	fa32 fa05 	lsrs.w	sl, r2, r5
 8013fda:	d106      	bne.n	8013fea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8013fdc:	4346      	muls	r6, r0
 8013fde:	fbb6 f0f4 	udiv	r0, r6, r4
 8013fe2:	fb04 6610 	mls	r6, r4, r0, r6
 8013fe6:	603e      	str	r6, [r7, #0]
 8013fe8:	e7e1      	b.n	8013fae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013fea:	2201      	movs	r2, #1
 8013fec:	40aa      	lsls	r2, r5
 8013fee:	3a01      	subs	r2, #1
 8013ff0:	4016      	ands	r6, r2
 8013ff2:	fa00 fb05 	lsl.w	fp, r0, r5
 8013ff6:	4630      	mov	r0, r6
 8013ff8:	fbbb f9f4 	udiv	r9, fp, r4
 8013ffc:	fb0a f309 	mul.w	r3, sl, r9
 8014000:	9303      	str	r3, [sp, #12]
 8014002:	f7ff ffa5 	bl	8013f50 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014006:	462b      	mov	r3, r5
 8014008:	460a      	mov	r2, r1
 801400a:	e9cd 4700 	strd	r4, r7, [sp]
 801400e:	4601      	mov	r1, r0
 8014010:	4630      	mov	r0, r6
 8014012:	f7ff ffbb 	bl	8013f8c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014016:	fb04 b919 	mls	r9, r4, r9, fp
 801401a:	4606      	mov	r6, r0
 801401c:	4648      	mov	r0, r9
 801401e:	eb05 0108 	add.w	r1, r5, r8
 8014022:	f7ff ff95 	bl	8013f50 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014026:	ab05      	add	r3, sp, #20
 8014028:	e9cd 4300 	strd	r4, r3, [sp]
 801402c:	464a      	mov	r2, r9
 801402e:	4603      	mov	r3, r0
 8014030:	4650      	mov	r0, sl
 8014032:	f7ff ffab 	bl	8013f8c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014036:	6839      	ldr	r1, [r7, #0]
 8014038:	9a05      	ldr	r2, [sp, #20]
 801403a:	9b03      	ldr	r3, [sp, #12]
 801403c:	4411      	add	r1, r2
 801403e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014042:	18d3      	adds	r3, r2, r3
 8014044:	441e      	add	r6, r3
 8014046:	fb04 1412 	mls	r4, r4, r2, r1
 801404a:	4430      	add	r0, r6
 801404c:	603c      	str	r4, [r7, #0]
 801404e:	e7ae      	b.n	8013fae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014050 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014050:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014054:	b085      	sub	sp, #20
 8014056:	f1b0 0900 	subs.w	r9, r0, #0
 801405a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801405c:	461d      	mov	r5, r3
 801405e:	bfbf      	itttt	lt
 8014060:	6823      	ldrlt	r3, [r4, #0]
 8014062:	425b      	neglt	r3, r3
 8014064:	f1c9 0900 	rsblt	r9, r9, #0
 8014068:	6023      	strlt	r3, [r4, #0]
 801406a:	bfb4      	ite	lt
 801406c:	f04f 36ff 	movlt.w	r6, #4294967295
 8014070:	2601      	movge	r6, #1
 8014072:	2a00      	cmp	r2, #0
 8014074:	4617      	mov	r7, r2
 8014076:	da04      	bge.n	8014082 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014078:	6823      	ldr	r3, [r4, #0]
 801407a:	425b      	negs	r3, r3
 801407c:	4257      	negs	r7, r2
 801407e:	4276      	negs	r6, r6
 8014080:	6023      	str	r3, [r4, #0]
 8014082:	2d00      	cmp	r5, #0
 8014084:	4638      	mov	r0, r7
 8014086:	bfba      	itte	lt
 8014088:	426d      	neglt	r5, r5
 801408a:	f04f 38ff 	movlt.w	r8, #4294967295
 801408e:	f04f 0801 	movge.w	r8, #1
 8014092:	f7ff ff5d 	bl	8013f50 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014096:	ab03      	add	r3, sp, #12
 8014098:	e9cd 5300 	strd	r5, r3, [sp]
 801409c:	463a      	mov	r2, r7
 801409e:	4603      	mov	r3, r0
 80140a0:	4648      	mov	r0, r9
 80140a2:	f7ff ff73 	bl	8013f8c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80140a6:	6823      	ldr	r3, [r4, #0]
 80140a8:	9a03      	ldr	r2, [sp, #12]
 80140aa:	4546      	cmp	r6, r8
 80140ac:	441a      	add	r2, r3
 80140ae:	fb92 f3f5 	sdiv	r3, r2, r5
 80140b2:	4418      	add	r0, r3
 80140b4:	bf18      	it	ne
 80140b6:	4240      	negne	r0, r0
 80140b8:	fb05 2313 	mls	r3, r5, r3, r2
 80140bc:	1c72      	adds	r2, r6, #1
 80140be:	6023      	str	r3, [r4, #0]
 80140c0:	d105      	bne.n	80140ce <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80140c2:	2b00      	cmp	r3, #0
 80140c4:	f1c3 0200 	rsb	r2, r3, #0
 80140c8:	db0b      	blt.n	80140e2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80140ca:	6022      	str	r2, [r4, #0]
 80140cc:	e006      	b.n	80140dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80140ce:	2e01      	cmp	r6, #1
 80140d0:	d104      	bne.n	80140dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80140d2:	2b00      	cmp	r3, #0
 80140d4:	da02      	bge.n	80140dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80140d6:	442b      	add	r3, r5
 80140d8:	3801      	subs	r0, #1
 80140da:	6023      	str	r3, [r4, #0]
 80140dc:	b005      	add	sp, #20
 80140de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80140e2:	3801      	subs	r0, #1
 80140e4:	1b52      	subs	r2, r2, r5
 80140e6:	e7f0      	b.n	80140ca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080140e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80140e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80140ec:	4c1c      	ldr	r4, [pc, #112]	; (8014160 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80140ee:	6807      	ldr	r7, [r0, #0]
 80140f0:	69a3      	ldr	r3, [r4, #24]
 80140f2:	4605      	mov	r5, r0
 80140f4:	b92b      	cbnz	r3, 8014102 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80140f6:	6840      	ldr	r0, [r0, #4]
 80140f8:	e9c5 7000 	strd	r7, r0, [r5]
 80140fc:	b004      	add	sp, #16
 80140fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014102:	68a2      	ldr	r2, [r4, #8]
 8014104:	6820      	ldr	r0, [r4, #0]
 8014106:	ae04      	add	r6, sp, #16
 8014108:	f04f 0802 	mov.w	r8, #2
 801410c:	fb93 f1f8 	sdiv	r1, r3, r8
 8014110:	440a      	add	r2, r1
 8014112:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014116:	69e1      	ldr	r1, [r4, #28]
 8014118:	9600      	str	r6, [sp, #0]
 801411a:	463a      	mov	r2, r7
 801411c:	f7ff ff98 	bl	8014050 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014120:	69a3      	ldr	r3, [r4, #24]
 8014122:	686a      	ldr	r2, [r5, #4]
 8014124:	6a21      	ldr	r1, [r4, #32]
 8014126:	9600      	str	r6, [sp, #0]
 8014128:	4607      	mov	r7, r0
 801412a:	6860      	ldr	r0, [r4, #4]
 801412c:	f7ff ff90 	bl	8014050 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014130:	6962      	ldr	r2, [r4, #20]
 8014132:	69a3      	ldr	r3, [r4, #24]
 8014134:	fb93 f8f8 	sdiv	r8, r3, r8
 8014138:	4442      	add	r2, r8
 801413a:	9203      	str	r2, [sp, #12]
 801413c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801413e:	682a      	ldr	r2, [r5, #0]
 8014140:	9600      	str	r6, [sp, #0]
 8014142:	4407      	add	r7, r0
 8014144:	68e0      	ldr	r0, [r4, #12]
 8014146:	f7ff ff83 	bl	8014050 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801414a:	9600      	str	r6, [sp, #0]
 801414c:	4680      	mov	r8, r0
 801414e:	69a3      	ldr	r3, [r4, #24]
 8014150:	686a      	ldr	r2, [r5, #4]
 8014152:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014154:	6920      	ldr	r0, [r4, #16]
 8014156:	f7ff ff7b 	bl	8014050 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801415a:	4440      	add	r0, r8
 801415c:	e7cc      	b.n	80140f8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801415e:	bf00      	nop
 8014160:	200137d0 	.word	0x200137d0

08014164 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014164:	4b07      	ldr	r3, [pc, #28]	; (8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014166:	781b      	ldrb	r3, [r3, #0]
 8014168:	2b01      	cmp	r3, #1
 801416a:	d109      	bne.n	8014180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801416c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014170:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014174:	8003      	strh	r3, [r0, #0]
 8014176:	4b04      	ldr	r3, [pc, #16]	; (8014188 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014178:	881b      	ldrh	r3, [r3, #0]
 801417a:	3b01      	subs	r3, #1
 801417c:	1a9b      	subs	r3, r3, r2
 801417e:	800b      	strh	r3, [r1, #0]
 8014180:	4770      	bx	lr
 8014182:	bf00      	nop
 8014184:	200137b4 	.word	0x200137b4
 8014188:	200137b0 	.word	0x200137b0

0801418c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801418c:	b510      	push	{r4, lr}
 801418e:	4b07      	ldr	r3, [pc, #28]	; (80141ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014190:	781b      	ldrb	r3, [r3, #0]
 8014192:	2b01      	cmp	r3, #1
 8014194:	d108      	bne.n	80141a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014196:	4b06      	ldr	r3, [pc, #24]	; (80141b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014198:	880c      	ldrh	r4, [r1, #0]
 801419a:	881b      	ldrh	r3, [r3, #0]
 801419c:	f9b0 2000 	ldrsh.w	r2, [r0]
 80141a0:	3b01      	subs	r3, #1
 80141a2:	1b1b      	subs	r3, r3, r4
 80141a4:	8003      	strh	r3, [r0, #0]
 80141a6:	800a      	strh	r2, [r1, #0]
 80141a8:	bd10      	pop	{r4, pc}
 80141aa:	bf00      	nop
 80141ac:	200137b4 	.word	0x200137b4
 80141b0:	200137b0 	.word	0x200137b0

080141b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80141b4:	b510      	push	{r4, lr}
 80141b6:	4b0a      	ldr	r3, [pc, #40]	; (80141e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80141b8:	781b      	ldrb	r3, [r3, #0]
 80141ba:	2b01      	cmp	r3, #1
 80141bc:	d10e      	bne.n	80141dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80141be:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80141c2:	8843      	ldrh	r3, [r0, #2]
 80141c4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80141c8:	8044      	strh	r4, [r0, #2]
 80141ca:	18ca      	adds	r2, r1, r3
 80141cc:	4b05      	ldr	r3, [pc, #20]	; (80141e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80141ce:	881b      	ldrh	r3, [r3, #0]
 80141d0:	1a9b      	subs	r3, r3, r2
 80141d2:	8003      	strh	r3, [r0, #0]
 80141d4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80141d8:	80c3      	strh	r3, [r0, #6]
 80141da:	8081      	strh	r1, [r0, #4]
 80141dc:	bd10      	pop	{r4, pc}
 80141de:	bf00      	nop
 80141e0:	200137b4 	.word	0x200137b4
 80141e4:	200137b0 	.word	0x200137b0

080141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80141e8:	4b08      	ldr	r3, [pc, #32]	; (801420c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80141ea:	781b      	ldrb	r3, [r3, #0]
 80141ec:	2b01      	cmp	r3, #1
 80141ee:	d10c      	bne.n	801420a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80141f0:	8803      	ldrh	r3, [r0, #0]
 80141f2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80141f6:	8842      	ldrh	r2, [r0, #2]
 80141f8:	8002      	strh	r2, [r0, #0]
 80141fa:	185a      	adds	r2, r3, r1
 80141fc:	4b04      	ldr	r3, [pc, #16]	; (8014210 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80141fe:	881b      	ldrh	r3, [r3, #0]
 8014200:	1a9b      	subs	r3, r3, r2
 8014202:	8043      	strh	r3, [r0, #2]
 8014204:	88c3      	ldrh	r3, [r0, #6]
 8014206:	8083      	strh	r3, [r0, #4]
 8014208:	80c1      	strh	r1, [r0, #6]
 801420a:	4770      	bx	lr
 801420c:	200137b4 	.word	0x200137b4
 8014210:	200137b0 	.word	0x200137b0

08014214 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014214:	b510      	push	{r4, lr}
 8014216:	4b07      	ldr	r3, [pc, #28]	; (8014234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014218:	781b      	ldrb	r3, [r3, #0]
 801421a:	2b01      	cmp	r3, #1
 801421c:	d108      	bne.n	8014230 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801421e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014222:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014226:	8003      	strh	r3, [r0, #0]
 8014228:	8893      	ldrh	r3, [r2, #4]
 801422a:	3b01      	subs	r3, #1
 801422c:	1b1b      	subs	r3, r3, r4
 801422e:	800b      	strh	r3, [r1, #0]
 8014230:	bd10      	pop	{r4, pc}
 8014232:	bf00      	nop
 8014234:	200137b4 	.word	0x200137b4

08014238 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014238:	4b0b      	ldr	r3, [pc, #44]	; (8014268 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801423a:	781b      	ldrb	r3, [r3, #0]
 801423c:	2b01      	cmp	r3, #1
 801423e:	d111      	bne.n	8014264 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014240:	680b      	ldr	r3, [r1, #0]
 8014242:	ed90 7a00 	vldr	s14, [r0]
 8014246:	6003      	str	r3, [r0, #0]
 8014248:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801424c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801426c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014250:	ee07 3a90 	vmov	s15, r3
 8014254:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014258:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801425c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014260:	edc1 7a00 	vstr	s15, [r1]
 8014264:	4770      	bx	lr
 8014266:	bf00      	nop
 8014268:	200137b4 	.word	0x200137b4
 801426c:	38d1b717 	.word	0x38d1b717

08014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014270:	b510      	push	{r4, lr}
 8014272:	4b0a      	ldr	r3, [pc, #40]	; (801429c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014274:	781b      	ldrb	r3, [r3, #0]
 8014276:	2b01      	cmp	r3, #1
 8014278:	460a      	mov	r2, r1
 801427a:	d10d      	bne.n	8014298 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801427c:	8881      	ldrh	r1, [r0, #4]
 801427e:	8803      	ldrh	r3, [r0, #0]
 8014280:	440b      	add	r3, r1
 8014282:	4601      	mov	r1, r0
 8014284:	3b01      	subs	r3, #1
 8014286:	f821 3b02 	strh.w	r3, [r1], #2
 801428a:	f7ff ffc3 	bl	8014214 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801428e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014292:	88c2      	ldrh	r2, [r0, #6]
 8014294:	8082      	strh	r2, [r0, #4]
 8014296:	80c3      	strh	r3, [r0, #6]
 8014298:	bd10      	pop	{r4, pc}
 801429a:	bf00      	nop
 801429c:	200137b4 	.word	0x200137b4

080142a0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80142a0:	4b06      	ldr	r3, [pc, #24]	; (80142bc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80142a2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80142a6:	4b06      	ldr	r3, [pc, #24]	; (80142c0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80142a8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80142ac:	f9b3 3000 	ldrsh.w	r3, [r3]
 80142b0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80142b4:	2100      	movs	r1, #0
 80142b6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80142ba:	4770      	bx	lr
 80142bc:	200137b0 	.word	0x200137b0
 80142c0:	200137b2 	.word	0x200137b2

080142c4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80142c4:	4b03      	ldr	r3, [pc, #12]	; (80142d4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80142c6:	6818      	ldr	r0, [r3, #0]
 80142c8:	b110      	cbz	r0, 80142d0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80142ca:	6803      	ldr	r3, [r0, #0]
 80142cc:	699b      	ldr	r3, [r3, #24]
 80142ce:	4718      	bx	r3
 80142d0:	4770      	bx	lr
 80142d2:	bf00      	nop
 80142d4:	20013800 	.word	0x20013800

080142d8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80142d8:	4770      	bx	lr
	...

080142dc <_ZN8touchgfx11Application4drawEv>:
 80142dc:	b507      	push	{r0, r1, r2, lr}
 80142de:	4b09      	ldr	r3, [pc, #36]	; (8014304 <_ZN8touchgfx11Application4drawEv+0x28>)
 80142e0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80142e4:	4b08      	ldr	r3, [pc, #32]	; (8014308 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80142e6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80142ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 80142ee:	f8ad 3006 	strh.w	r3, [sp, #6]
 80142f2:	6803      	ldr	r3, [r0, #0]
 80142f4:	2100      	movs	r1, #0
 80142f6:	9100      	str	r1, [sp, #0]
 80142f8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80142fa:	4669      	mov	r1, sp
 80142fc:	4798      	blx	r3
 80142fe:	b003      	add	sp, #12
 8014300:	f85d fb04 	ldr.w	pc, [sp], #4
 8014304:	200137b0 	.word	0x200137b0
 8014308:	200137b2 	.word	0x200137b2

0801430c <_ZN8touchgfx11Application10invalidateEv>:
 801430c:	4b09      	ldr	r3, [pc, #36]	; (8014334 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801430e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014312:	4b09      	ldr	r3, [pc, #36]	; (8014338 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014314:	b082      	sub	sp, #8
 8014316:	f9b3 3000 	ldrsh.w	r3, [r3]
 801431a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801431e:	2100      	movs	r1, #0
 8014320:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014324:	9100      	str	r1, [sp, #0]
 8014326:	6803      	ldr	r3, [r0, #0]
 8014328:	aa02      	add	r2, sp, #8
 801432a:	e912 0006 	ldmdb	r2, {r1, r2}
 801432e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014330:	b002      	add	sp, #8
 8014332:	4718      	bx	r3
 8014334:	200137b0 	.word	0x200137b0
 8014338:	200137b2 	.word	0x200137b2

0801433c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801433c:	4b03      	ldr	r3, [pc, #12]	; (801434c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801433e:	6818      	ldr	r0, [r3, #0]
 8014340:	b110      	cbz	r0, 8014348 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014342:	6803      	ldr	r3, [r0, #0]
 8014344:	69db      	ldr	r3, [r3, #28]
 8014346:	4718      	bx	r3
 8014348:	4770      	bx	lr
 801434a:	bf00      	nop
 801434c:	20013800 	.word	0x20013800

08014350 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014350:	4b03      	ldr	r3, [pc, #12]	; (8014360 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014352:	6818      	ldr	r0, [r3, #0]
 8014354:	b110      	cbz	r0, 801435c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8014356:	6803      	ldr	r3, [r0, #0]
 8014358:	6a1b      	ldr	r3, [r3, #32]
 801435a:	4718      	bx	r3
 801435c:	4770      	bx	lr
 801435e:	bf00      	nop
 8014360:	20013800 	.word	0x20013800

08014364 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014364:	2300      	movs	r3, #0
 8014366:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801436a:	4770      	bx	lr

0801436c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801436c:	4b03      	ldr	r3, [pc, #12]	; (801437c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801436e:	6818      	ldr	r0, [r3, #0]
 8014370:	b110      	cbz	r0, 8014378 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014372:	6803      	ldr	r3, [r0, #0]
 8014374:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014376:	4718      	bx	r3
 8014378:	4770      	bx	lr
 801437a:	bf00      	nop
 801437c:	20013800 	.word	0x20013800

08014380 <_ZN8touchgfx11ApplicationD1Ev>:
 8014380:	4770      	bx	lr

08014382 <_ZN8touchgfx11ApplicationD0Ev>:
 8014382:	b510      	push	{r4, lr}
 8014384:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8014388:	4604      	mov	r4, r0
 801438a:	f012 fe40 	bl	802700e <_ZdlPvj>
 801438e:	4620      	mov	r0, r4
 8014390:	bd10      	pop	{r4, pc}

08014392 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014392:	b510      	push	{r4, lr}
 8014394:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014398:	888a      	ldrh	r2, [r1, #4]
 801439a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801439e:	4422      	add	r2, r4
 80143a0:	b212      	sxth	r2, r2
 80143a2:	4293      	cmp	r3, r2
 80143a4:	da15      	bge.n	80143d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80143a6:	8882      	ldrh	r2, [r0, #4]
 80143a8:	4413      	add	r3, r2
 80143aa:	b21b      	sxth	r3, r3
 80143ac:	429c      	cmp	r4, r3
 80143ae:	da10      	bge.n	80143d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80143b0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80143b4:	88c9      	ldrh	r1, [r1, #6]
 80143b6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80143ba:	4419      	add	r1, r3
 80143bc:	b209      	sxth	r1, r1
 80143be:	428a      	cmp	r2, r1
 80143c0:	da07      	bge.n	80143d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80143c2:	88c0      	ldrh	r0, [r0, #6]
 80143c4:	4410      	add	r0, r2
 80143c6:	b200      	sxth	r0, r0
 80143c8:	4283      	cmp	r3, r0
 80143ca:	bfac      	ite	ge
 80143cc:	2000      	movge	r0, #0
 80143ce:	2001      	movlt	r0, #1
 80143d0:	bd10      	pop	{r4, pc}
 80143d2:	2000      	movs	r0, #0
 80143d4:	e7fc      	b.n	80143d0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080143d6 <_ZN8touchgfx4Rect10restrictToEss>:
 80143d6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80143da:	2b00      	cmp	r3, #0
 80143dc:	b510      	push	{r4, lr}
 80143de:	da04      	bge.n	80143ea <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80143e0:	8884      	ldrh	r4, [r0, #4]
 80143e2:	4423      	add	r3, r4
 80143e4:	8083      	strh	r3, [r0, #4]
 80143e6:	2300      	movs	r3, #0
 80143e8:	8003      	strh	r3, [r0, #0]
 80143ea:	f9b0 4000 	ldrsh.w	r4, [r0]
 80143ee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80143f2:	1b09      	subs	r1, r1, r4
 80143f4:	428b      	cmp	r3, r1
 80143f6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80143fa:	bfc8      	it	gt
 80143fc:	8081      	strhgt	r1, [r0, #4]
 80143fe:	2b00      	cmp	r3, #0
 8014400:	da04      	bge.n	801440c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014402:	88c1      	ldrh	r1, [r0, #6]
 8014404:	440b      	add	r3, r1
 8014406:	80c3      	strh	r3, [r0, #6]
 8014408:	2300      	movs	r3, #0
 801440a:	8043      	strh	r3, [r0, #2]
 801440c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014410:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014414:	1a52      	subs	r2, r2, r1
 8014416:	4293      	cmp	r3, r2
 8014418:	bfc8      	it	gt
 801441a:	80c2      	strhgt	r2, [r0, #6]
 801441c:	bd10      	pop	{r4, pc}
	...

08014420 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014420:	b510      	push	{r4, lr}
 8014422:	4b10      	ldr	r3, [pc, #64]	; (8014464 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014424:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014428:	4b0f      	ldr	r3, [pc, #60]	; (8014468 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801442a:	460c      	mov	r4, r1
 801442c:	4620      	mov	r0, r4
 801442e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014432:	f7ff ffd0 	bl	80143d6 <_ZN8touchgfx4Rect10restrictToEss>
 8014436:	4b0d      	ldr	r3, [pc, #52]	; (801446c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014438:	6818      	ldr	r0, [r3, #0]
 801443a:	b190      	cbz	r0, 8014462 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801443c:	6803      	ldr	r3, [r0, #0]
 801443e:	4621      	mov	r1, r4
 8014440:	689b      	ldr	r3, [r3, #8]
 8014442:	4798      	blx	r3
 8014444:	4b0a      	ldr	r3, [pc, #40]	; (8014470 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014446:	6818      	ldr	r0, [r3, #0]
 8014448:	b118      	cbz	r0, 8014452 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801444a:	6803      	ldr	r3, [r0, #0]
 801444c:	4621      	mov	r1, r4
 801444e:	689b      	ldr	r3, [r3, #8]
 8014450:	4798      	blx	r3
 8014452:	4b08      	ldr	r3, [pc, #32]	; (8014474 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014454:	6818      	ldr	r0, [r3, #0]
 8014456:	6803      	ldr	r3, [r0, #0]
 8014458:	4621      	mov	r1, r4
 801445a:	69db      	ldr	r3, [r3, #28]
 801445c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014460:	4718      	bx	r3
 8014462:	bd10      	pop	{r4, pc}
 8014464:	200137b2 	.word	0x200137b2
 8014468:	200137b0 	.word	0x200137b0
 801446c:	20013800 	.word	0x20013800
 8014470:	200137fc 	.word	0x200137fc
 8014474:	200137bc 	.word	0x200137bc

08014478 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801447a:	4606      	mov	r6, r0
 801447c:	4608      	mov	r0, r1
 801447e:	460f      	mov	r7, r1
 8014480:	f7fa ff97 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014484:	b9e8      	cbnz	r0, 80144c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014486:	f9b7 5000 	ldrsh.w	r5, [r7]
 801448a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801448e:	42a5      	cmp	r5, r4
 8014490:	db17      	blt.n	80144c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014492:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014496:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801449a:	429a      	cmp	r2, r3
 801449c:	db11      	blt.n	80144c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801449e:	88b9      	ldrh	r1, [r7, #4]
 80144a0:	440d      	add	r5, r1
 80144a2:	88b1      	ldrh	r1, [r6, #4]
 80144a4:	440c      	add	r4, r1
 80144a6:	b22d      	sxth	r5, r5
 80144a8:	b224      	sxth	r4, r4
 80144aa:	42a5      	cmp	r5, r4
 80144ac:	dc09      	bgt.n	80144c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80144ae:	88f8      	ldrh	r0, [r7, #6]
 80144b0:	4410      	add	r0, r2
 80144b2:	88f2      	ldrh	r2, [r6, #6]
 80144b4:	4413      	add	r3, r2
 80144b6:	b200      	sxth	r0, r0
 80144b8:	b21b      	sxth	r3, r3
 80144ba:	4298      	cmp	r0, r3
 80144bc:	bfcc      	ite	gt
 80144be:	2000      	movgt	r0, #0
 80144c0:	2001      	movle	r0, #1
 80144c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080144c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80144c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80144c6:	4604      	mov	r4, r0
 80144c8:	4608      	mov	r0, r1
 80144ca:	460d      	mov	r5, r1
 80144cc:	f7fa ff71 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80144d0:	b978      	cbnz	r0, 80144f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80144d2:	4620      	mov	r0, r4
 80144d4:	f7fa ff6d 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80144d8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80144dc:	b150      	cbz	r0, 80144f4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80144de:	8026      	strh	r6, [r4, #0]
 80144e0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80144e4:	8063      	strh	r3, [r4, #2]
 80144e6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80144ea:	80a3      	strh	r3, [r4, #4]
 80144ec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80144f0:	80e3      	strh	r3, [r4, #6]
 80144f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80144f4:	f9b4 1000 	ldrsh.w	r1, [r4]
 80144f8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80144fc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014500:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014504:	88ed      	ldrh	r5, [r5, #6]
 8014506:	42b1      	cmp	r1, r6
 8014508:	460f      	mov	r7, r1
 801450a:	bfa8      	it	ge
 801450c:	4637      	movge	r7, r6
 801450e:	4293      	cmp	r3, r2
 8014510:	4618      	mov	r0, r3
 8014512:	4466      	add	r6, ip
 8014514:	bfa8      	it	ge
 8014516:	4610      	movge	r0, r2
 8014518:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801451c:	8027      	strh	r7, [r4, #0]
 801451e:	442a      	add	r2, r5
 8014520:	88e5      	ldrh	r5, [r4, #6]
 8014522:	8060      	strh	r0, [r4, #2]
 8014524:	4461      	add	r1, ip
 8014526:	442b      	add	r3, r5
 8014528:	b236      	sxth	r6, r6
 801452a:	b209      	sxth	r1, r1
 801452c:	b212      	sxth	r2, r2
 801452e:	b21b      	sxth	r3, r3
 8014530:	428e      	cmp	r6, r1
 8014532:	bfac      	ite	ge
 8014534:	ebc7 0106 	rsbge	r1, r7, r6
 8014538:	ebc7 0101 	rsblt	r1, r7, r1
 801453c:	429a      	cmp	r2, r3
 801453e:	bfac      	ite	ge
 8014540:	ebc0 0202 	rsbge	r2, r0, r2
 8014544:	ebc0 0203 	rsblt	r2, r0, r3
 8014548:	80a1      	strh	r1, [r4, #4]
 801454a:	80e2      	strh	r2, [r4, #6]
 801454c:	e7d1      	b.n	80144f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014550 <_ZN8touchgfx11Application11getInstanceEv>:
 8014550:	4b01      	ldr	r3, [pc, #4]	; (8014558 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014552:	6818      	ldr	r0, [r3, #0]
 8014554:	4770      	bx	lr
 8014556:	bf00      	nop
 8014558:	20013810 	.word	0x20013810

0801455c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801455c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801455e:	4b10      	ldr	r3, [pc, #64]	; (80145a0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014560:	781b      	ldrb	r3, [r3, #0]
 8014562:	4605      	mov	r5, r0
 8014564:	b1d3      	cbz	r3, 801459c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014566:	4b0f      	ldr	r3, [pc, #60]	; (80145a4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014568:	4f0f      	ldr	r7, [pc, #60]	; (80145a8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801456a:	881c      	ldrh	r4, [r3, #0]
 801456c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014570:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014574:	42a3      	cmp	r3, r4
 8014576:	d90e      	bls.n	8014596 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014578:	683b      	ldr	r3, [r7, #0]
 801457a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801457e:	b10a      	cbz	r2, 8014584 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014580:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014582:	b900      	cbnz	r0, 8014586 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014584:	6898      	ldr	r0, [r3, #8]
 8014586:	6803      	ldr	r3, [r0, #0]
 8014588:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 801458c:	69db      	ldr	r3, [r3, #28]
 801458e:	3401      	adds	r4, #1
 8014590:	4798      	blx	r3
 8014592:	b2a4      	uxth	r4, r4
 8014594:	e7ec      	b.n	8014570 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014596:	2300      	movs	r3, #0
 8014598:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 801459c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801459e:	bf00      	nop
 80145a0:	200137ba 	.word	0x200137ba
 80145a4:	20000088 	.word	0x20000088
 80145a8:	200137bc 	.word	0x200137bc

080145ac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80145ac:	b510      	push	{r4, lr}
 80145ae:	2300      	movs	r3, #0
 80145b0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80145b4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80145b8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80145bc:	4604      	mov	r4, r0
 80145be:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80145c2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80145c6:	429a      	cmp	r2, r3
 80145c8:	d90e      	bls.n	80145e8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80145ca:	18e2      	adds	r2, r4, r3
 80145cc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80145d0:	b122      	cbz	r2, 80145dc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80145d2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80145d6:	6803      	ldr	r3, [r0, #0]
 80145d8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80145da:	4798      	blx	r3
 80145dc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80145e0:	3301      	adds	r3, #1
 80145e2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80145e6:	e7ea      	b.n	80145be <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80145e8:	bd10      	pop	{r4, pc}

080145ea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80145ea:	b530      	push	{r4, r5, lr}
 80145ec:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 80145f0:	2200      	movs	r2, #0
 80145f2:	b293      	uxth	r3, r2
 80145f4:	429d      	cmp	r5, r3
 80145f6:	d90e      	bls.n	8014616 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80145f8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 80145fc:	428b      	cmp	r3, r1
 80145fe:	d10b      	bne.n	8014618 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014600:	1884      	adds	r4, r0, r2
 8014602:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014606:	b13b      	cbz	r3, 8014618 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014608:	3b01      	subs	r3, #1
 801460a:	b2db      	uxtb	r3, r3
 801460c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014610:	b90b      	cbnz	r3, 8014616 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014612:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014616:	bd30      	pop	{r4, r5, pc}
 8014618:	3201      	adds	r2, #1
 801461a:	e7ea      	b.n	80145f2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801461c:	2300      	movs	r3, #0
 801461e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014622:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014626:	30a4      	adds	r0, #164	; 0xa4
 8014628:	f802 3b01 	strb.w	r3, [r2], #1
 801462c:	4282      	cmp	r2, r0
 801462e:	d1fb      	bne.n	8014628 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014630:	4770      	bx	lr
	...

08014634 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014634:	b570      	push	{r4, r5, r6, lr}
 8014636:	4c0b      	ldr	r4, [pc, #44]	; (8014664 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014638:	4605      	mov	r5, r0
 801463a:	6820      	ldr	r0, [r4, #0]
 801463c:	460e      	mov	r6, r1
 801463e:	b110      	cbz	r0, 8014646 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014640:	6803      	ldr	r3, [r0, #0]
 8014642:	695b      	ldr	r3, [r3, #20]
 8014644:	4798      	blx	r3
 8014646:	1d28      	adds	r0, r5, #4
 8014648:	f7ff ffe8 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801464c:	6026      	str	r6, [r4, #0]
 801464e:	6833      	ldr	r3, [r6, #0]
 8014650:	4630      	mov	r0, r6
 8014652:	68db      	ldr	r3, [r3, #12]
 8014654:	4798      	blx	r3
 8014656:	682b      	ldr	r3, [r5, #0]
 8014658:	4628      	mov	r0, r5
 801465a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801465c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014660:	4718      	bx	r3
 8014662:	bf00      	nop
 8014664:	20013800 	.word	0x20013800

08014668 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014668:	2300      	movs	r3, #0
 801466a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801466e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8014672:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014674:	461a      	mov	r2, r3
 8014676:	461c      	mov	r4, r3
 8014678:	461d      	mov	r5, r3
 801467a:	459c      	cmp	ip, r3
 801467c:	dd1a      	ble.n	80146b4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801467e:	18c6      	adds	r6, r0, r3
 8014680:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8014684:	b16e      	cbz	r6, 80146a2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014686:	429a      	cmp	r2, r3
 8014688:	d008      	beq.n	801469c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801468a:	fa1f fe82 	uxth.w	lr, r2
 801468e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014692:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014696:	1887      	adds	r7, r0, r2
 8014698:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 801469c:	3201      	adds	r2, #1
 801469e:	3301      	adds	r3, #1
 80146a0:	e7eb      	b.n	801467a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80146a2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80146a6:	4299      	cmp	r1, r3
 80146a8:	bfa8      	it	ge
 80146aa:	3501      	addge	r5, #1
 80146ac:	429e      	cmp	r6, r3
 80146ae:	bfc8      	it	gt
 80146b0:	3401      	addgt	r4, #1
 80146b2:	e7f4      	b.n	801469e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80146b4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80146b8:	1b49      	subs	r1, r1, r5
 80146ba:	1b1b      	subs	r3, r3, r4
 80146bc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80146c0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80146c4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80146c8:	4293      	cmp	r3, r2
 80146ca:	dd03      	ble.n	80146d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80146cc:	3b01      	subs	r3, #1
 80146ce:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80146d2:	e7f7      	b.n	80146c4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80146d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080146d8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80146d8:	b570      	push	{r4, r5, r6, lr}
 80146da:	4d16      	ldr	r5, [pc, #88]	; (8014734 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80146dc:	4604      	mov	r4, r0
 80146de:	6828      	ldr	r0, [r5, #0]
 80146e0:	b140      	cbz	r0, 80146f4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80146e2:	7a03      	ldrb	r3, [r0, #8]
 80146e4:	b933      	cbnz	r3, 80146f4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80146e6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80146ea:	6803      	ldr	r3, [r0, #0]
 80146ec:	689b      	ldr	r3, [r3, #8]
 80146ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80146f2:	4718      	bx	r3
 80146f4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80146f8:	4e0f      	ldr	r6, [pc, #60]	; (8014738 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80146fa:	b973      	cbnz	r3, 801471a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80146fc:	b168      	cbz	r0, 801471a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80146fe:	7a03      	ldrb	r3, [r0, #8]
 8014700:	b15b      	cbz	r3, 801471a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014702:	6830      	ldr	r0, [r6, #0]
 8014704:	b110      	cbz	r0, 801470c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014706:	6803      	ldr	r3, [r0, #0]
 8014708:	691b      	ldr	r3, [r3, #16]
 801470a:	4798      	blx	r3
 801470c:	6828      	ldr	r0, [r5, #0]
 801470e:	6803      	ldr	r3, [r0, #0]
 8014710:	68db      	ldr	r3, [r3, #12]
 8014712:	4798      	blx	r3
 8014714:	2301      	movs	r3, #1
 8014716:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801471a:	3404      	adds	r4, #4
 801471c:	4620      	mov	r0, r4
 801471e:	f7ff ff45 	bl	80145ac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8014722:	4620      	mov	r0, r4
 8014724:	f7ff ffa0 	bl	8014668 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014728:	6830      	ldr	r0, [r6, #0]
 801472a:	b110      	cbz	r0, 8014732 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801472c:	6803      	ldr	r3, [r0, #0]
 801472e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014730:	e7dd      	b.n	80146ee <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8014732:	bd70      	pop	{r4, r5, r6, pc}
 8014734:	20013804 	.word	0x20013804
 8014738:	20013800 	.word	0x20013800

0801473c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801473c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801473e:	2300      	movs	r3, #0
 8014740:	4604      	mov	r4, r0
 8014742:	460d      	mov	r5, r1
 8014744:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8014748:	4618      	mov	r0, r3
 801474a:	b29a      	uxth	r2, r3
 801474c:	4291      	cmp	r1, r2
 801474e:	d911      	bls.n	8014774 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8014750:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8014754:	18e6      	adds	r6, r4, r3
 8014756:	42af      	cmp	r7, r5
 8014758:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801475c:	d105      	bne.n	801476a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801475e:	2aff      	cmp	r2, #255	; 0xff
 8014760:	d002      	beq.n	8014768 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014762:	3201      	adds	r2, #1
 8014764:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8014768:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801476a:	2a00      	cmp	r2, #0
 801476c:	bf08      	it	eq
 801476e:	2001      	moveq	r0, #1
 8014770:	3301      	adds	r3, #1
 8014772:	e7ea      	b.n	801474a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8014774:	b120      	cbz	r0, 8014780 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014776:	2920      	cmp	r1, #32
 8014778:	d102      	bne.n	8014780 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801477a:	4620      	mov	r0, r4
 801477c:	f7ff ff74 	bl	8014668 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014780:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8014784:	2b1f      	cmp	r3, #31
 8014786:	d8ef      	bhi.n	8014768 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014788:	18e2      	adds	r2, r4, r3
 801478a:	2101      	movs	r1, #1
 801478c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8014790:	185a      	adds	r2, r3, r1
 8014792:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8014796:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801479a:	e7e5      	b.n	8014768 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0801479c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801479c:	4603      	mov	r3, r0
 801479e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80147a2:	2200      	movs	r2, #0
 80147a4:	801a      	strh	r2, [r3, #0]
 80147a6:	805a      	strh	r2, [r3, #2]
 80147a8:	809a      	strh	r2, [r3, #4]
 80147aa:	80da      	strh	r2, [r3, #6]
 80147ac:	3308      	adds	r3, #8
 80147ae:	428b      	cmp	r3, r1
 80147b0:	d1f8      	bne.n	80147a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80147b2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80147b6:	4770      	bx	lr

080147b8 <_ZN8touchgfx11ApplicationC1Ev>:
 80147b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80147ba:	4606      	mov	r6, r0
 80147bc:	4b1c      	ldr	r3, [pc, #112]	; (8014830 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80147be:	f846 3b04 	str.w	r3, [r6], #4
 80147c2:	4604      	mov	r4, r0
 80147c4:	2500      	movs	r5, #0
 80147c6:	22a8      	movs	r2, #168	; 0xa8
 80147c8:	2100      	movs	r1, #0
 80147ca:	4630      	mov	r0, r6
 80147cc:	f013 fc15 	bl	8027ffa <memset>
 80147d0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80147d4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80147d8:	f7ff ffe0 	bl	801479c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80147dc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80147e0:	f7ff ffdc 	bl	801479c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80147e4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80147e8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80147ec:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80147f0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80147f4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80147f8:	490e      	ldr	r1, [pc, #56]	; (8014834 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80147fa:	480f      	ldr	r0, [pc, #60]	; (8014838 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80147fc:	4f0f      	ldr	r7, [pc, #60]	; (801483c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80147fe:	f010 fbf5 	bl	8024fec <CRC_Lock>
 8014802:	4b0f      	ldr	r3, [pc, #60]	; (8014840 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014804:	b158      	cbz	r0, 801481e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014806:	801d      	strh	r5, [r3, #0]
 8014808:	4a0e      	ldr	r2, [pc, #56]	; (8014844 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801480a:	2300      	movs	r3, #0
 801480c:	6013      	str	r3, [r2, #0]
 801480e:	4a0e      	ldr	r2, [pc, #56]	; (8014848 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014810:	603b      	str	r3, [r7, #0]
 8014812:	4630      	mov	r0, r6
 8014814:	6013      	str	r3, [r2, #0]
 8014816:	f7ff ff01 	bl	801461c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801481a:	4620      	mov	r0, r4
 801481c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801481e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8014822:	2002      	movs	r0, #2
 8014824:	801a      	strh	r2, [r3, #0]
 8014826:	6038      	str	r0, [r7, #0]
 8014828:	f001 fb4a 	bl	8015ec0 <_ZN8touchgfx6Screen4drawEv>
 801482c:	e7ec      	b.n	8014808 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801482e:	bf00      	nop
 8014830:	0802c218 	.word	0x0802c218
 8014834:	b5e8b5cd 	.word	0xb5e8b5cd
 8014838:	f407a5c2 	.word	0xf407a5c2
 801483c:	20013800 	.word	0x20013800
 8014840:	20000088 	.word	0x20000088
 8014844:	20013810 	.word	0x20013810
 8014848:	20013804 	.word	0x20013804

0801484c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801484c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8014850:	3b01      	subs	r3, #1
 8014852:	b29b      	uxth	r3, r3
 8014854:	428b      	cmp	r3, r1
 8014856:	b510      	push	{r4, lr}
 8014858:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801485c:	d908      	bls.n	8014870 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801485e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014862:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014866:	681a      	ldr	r2, [r3, #0]
 8014868:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801486c:	685a      	ldr	r2, [r3, #4]
 801486e:	6062      	str	r2, [r4, #4]
 8014870:	bd10      	pop	{r4, pc}
	...

08014874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014878:	4b8f      	ldr	r3, [pc, #572]	; (8014ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801487a:	b08f      	sub	sp, #60	; 0x3c
 801487c:	ac0a      	add	r4, sp, #40	; 0x28
 801487e:	e884 0006 	stmia.w	r4, {r1, r2}
 8014882:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014886:	4b8d      	ldr	r3, [pc, #564]	; (8014abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014888:	4683      	mov	fp, r0
 801488a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801488e:	4620      	mov	r0, r4
 8014890:	f7ff fda1 	bl	80143d6 <_ZN8touchgfx4Rect10restrictToEss>
 8014894:	4620      	mov	r0, r4
 8014896:	f7fa fd8c 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801489a:	2800      	cmp	r0, #0
 801489c:	d16a      	bne.n	8014974 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801489e:	9403      	str	r4, [sp, #12]
 80148a0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80148a4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80148a8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80148ac:	35a4      	adds	r5, #164	; 0xa4
 80148ae:	9301      	str	r3, [sp, #4]
 80148b0:	b15c      	cbz	r4, 80148ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80148b2:	4629      	mov	r1, r5
 80148b4:	9803      	ldr	r0, [sp, #12]
 80148b6:	f7ff fddf 	bl	8014478 <_ZNK8touchgfx4Rect8includesERKS0_>
 80148ba:	3c01      	subs	r4, #1
 80148bc:	b118      	cbz	r0, 80148c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80148be:	b2a1      	uxth	r1, r4
 80148c0:	9801      	ldr	r0, [sp, #4]
 80148c2:	f7ff ffc3 	bl	801484c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80148c6:	3d08      	subs	r5, #8
 80148c8:	e7f2      	b.n	80148b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80148ca:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80148ce:	f8cd a010 	str.w	sl, [sp, #16]
 80148d2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80148d6:	9302      	str	r3, [sp, #8]
 80148d8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80148dc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80148e0:	9306      	str	r3, [sp, #24]
 80148e2:	445c      	add	r4, fp
 80148e4:	2500      	movs	r5, #0
 80148e6:	4626      	mov	r6, r4
 80148e8:	f8cd a014 	str.w	sl, [sp, #20]
 80148ec:	462f      	mov	r7, r5
 80148ee:	9b05      	ldr	r3, [sp, #20]
 80148f0:	2b00      	cmp	r3, #0
 80148f2:	d073      	beq.n	80149dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80148f4:	9903      	ldr	r1, [sp, #12]
 80148f6:	4630      	mov	r0, r6
 80148f8:	f7ff fd4b 	bl	8014392 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80148fc:	b350      	cbz	r0, 8014954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80148fe:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8014902:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014906:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801490a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801490e:	45e6      	cmp	lr, ip
 8014910:	db33      	blt.n	801497a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014912:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8014916:	88b3      	ldrh	r3, [r6, #4]
 8014918:	4472      	add	r2, lr
 801491a:	4463      	add	r3, ip
 801491c:	b212      	sxth	r2, r2
 801491e:	b21b      	sxth	r3, r3
 8014920:	429a      	cmp	r2, r3
 8014922:	dc2a      	bgt.n	801497a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014924:	88f3      	ldrh	r3, [r6, #6]
 8014926:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801492a:	fa1f f289 	uxth.w	r2, r9
 801492e:	4413      	add	r3, r2
 8014930:	b29b      	uxth	r3, r3
 8014932:	45c8      	cmp	r8, r9
 8014934:	fa1f fc88 	uxth.w	ip, r8
 8014938:	fa0f fe83 	sxth.w	lr, r3
 801493c:	db0f      	blt.n	801495e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801493e:	eba3 030c 	sub.w	r3, r3, ip
 8014942:	1ac9      	subs	r1, r1, r3
 8014944:	b209      	sxth	r1, r1
 8014946:	2900      	cmp	r1, #0
 8014948:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801494c:	dd12      	ble.n	8014974 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801494e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8014952:	4605      	mov	r5, r0
 8014954:	9b05      	ldr	r3, [sp, #20]
 8014956:	3b01      	subs	r3, #1
 8014958:	9305      	str	r3, [sp, #20]
 801495a:	3e08      	subs	r6, #8
 801495c:	e7c7      	b.n	80148ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801495e:	4461      	add	r1, ip
 8014960:	b209      	sxth	r1, r1
 8014962:	4571      	cmp	r1, lr
 8014964:	dc38      	bgt.n	80149d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014966:	eba2 020c 	sub.w	r2, r2, ip
 801496a:	b212      	sxth	r2, r2
 801496c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8014970:	2a00      	cmp	r2, #0
 8014972:	dcee      	bgt.n	8014952 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014974:	b00f      	add	sp, #60	; 0x3c
 8014976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801497a:	45c8      	cmp	r8, r9
 801497c:	db2c      	blt.n	80149d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801497e:	88f3      	ldrh	r3, [r6, #6]
 8014980:	4499      	add	r9, r3
 8014982:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8014986:	4498      	add	r8, r3
 8014988:	fa0f f989 	sxth.w	r9, r9
 801498c:	fa0f f888 	sxth.w	r8, r8
 8014990:	45c1      	cmp	r9, r8
 8014992:	db21      	blt.n	80149d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014994:	88b3      	ldrh	r3, [r6, #4]
 8014996:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801499a:	fa1f f28c 	uxth.w	r2, ip
 801499e:	4413      	add	r3, r2
 80149a0:	b29b      	uxth	r3, r3
 80149a2:	45e6      	cmp	lr, ip
 80149a4:	fa1f f88e 	uxth.w	r8, lr
 80149a8:	fa0f f983 	sxth.w	r9, r3
 80149ac:	db0a      	blt.n	80149c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80149ae:	eba3 0308 	sub.w	r3, r3, r8
 80149b2:	1ac9      	subs	r1, r1, r3
 80149b4:	b209      	sxth	r1, r1
 80149b6:	2900      	cmp	r1, #0
 80149b8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80149bc:	ddda      	ble.n	8014974 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80149be:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80149c2:	e7c6      	b.n	8014952 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80149c4:	4441      	add	r1, r8
 80149c6:	b209      	sxth	r1, r1
 80149c8:	4549      	cmp	r1, r9
 80149ca:	dc05      	bgt.n	80149d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80149cc:	eba2 0208 	sub.w	r2, r2, r8
 80149d0:	b212      	sxth	r2, r2
 80149d2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80149d6:	e7cb      	b.n	8014970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80149d8:	4607      	mov	r7, r0
 80149da:	e7bb      	b.n	8014954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80149dc:	2d00      	cmp	r5, #0
 80149de:	d181      	bne.n	80148e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80149e0:	2f00      	cmp	r7, #0
 80149e2:	f000 81dd 	beq.w	8014da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80149e6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80149ea:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80149ee:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80149f2:	b2b3      	uxth	r3, r6
 80149f4:	9305      	str	r3, [sp, #20]
 80149f6:	9a05      	ldr	r2, [sp, #20]
 80149f8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80149fc:	4413      	add	r3, r2
 80149fe:	b2ba      	uxth	r2, r7
 8014a00:	4492      	add	sl, r2
 8014a02:	b29b      	uxth	r3, r3
 8014a04:	fa1f fa8a 	uxth.w	sl, sl
 8014a08:	fa0f f883 	sxth.w	r8, r3
 8014a0c:	fa0f f98a 	sxth.w	r9, sl
 8014a10:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8014a14:	9b04      	ldr	r3, [sp, #16]
 8014a16:	2b00      	cmp	r3, #0
 8014a18:	d052      	beq.n	8014ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8014a1a:	9903      	ldr	r1, [sp, #12]
 8014a1c:	4620      	mov	r0, r4
 8014a1e:	f7ff fcb8 	bl	8014392 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014a22:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8014a26:	b1c0      	cbz	r0, 8014a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014a28:	f9b4 e000 	ldrsh.w	lr, [r4]
 8014a2c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014a30:	4576      	cmp	r6, lr
 8014a32:	dc22      	bgt.n	8014a7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014a34:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014a38:	44f4      	add	ip, lr
 8014a3a:	fa0f fc8c 	sxth.w	ip, ip
 8014a3e:	45e0      	cmp	r8, ip
 8014a40:	db1b      	blt.n	8014a7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014a42:	428f      	cmp	r7, r1
 8014a44:	fa1f fc81 	uxth.w	ip, r1
 8014a48:	88e1      	ldrh	r1, [r4, #6]
 8014a4a:	dc0d      	bgt.n	8014a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8014a4c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8014a50:	eba1 010c 	sub.w	r1, r1, ip
 8014a54:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014a58:	80e1      	strh	r1, [r4, #6]
 8014a5a:	4628      	mov	r0, r5
 8014a5c:	9904      	ldr	r1, [sp, #16]
 8014a5e:	3901      	subs	r1, #1
 8014a60:	9104      	str	r1, [sp, #16]
 8014a62:	3c08      	subs	r4, #8
 8014a64:	4605      	mov	r5, r0
 8014a66:	e7d3      	b.n	8014a10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8014a68:	4461      	add	r1, ip
 8014a6a:	b209      	sxth	r1, r1
 8014a6c:	4549      	cmp	r1, r9
 8014a6e:	dcf5      	bgt.n	8014a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014a70:	eba2 0c0c 	sub.w	ip, r2, ip
 8014a74:	f8a4 c006 	strh.w	ip, [r4, #6]
 8014a78:	e7ef      	b.n	8014a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014a7a:	428f      	cmp	r7, r1
 8014a7c:	dcee      	bgt.n	8014a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014a7e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8014a82:	4461      	add	r1, ip
 8014a84:	b209      	sxth	r1, r1
 8014a86:	4589      	cmp	r9, r1
 8014a88:	dbe8      	blt.n	8014a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014a8a:	4576      	cmp	r6, lr
 8014a8c:	fa1f fc8e 	uxth.w	ip, lr
 8014a90:	88a1      	ldrh	r1, [r4, #4]
 8014a92:	dc07      	bgt.n	8014aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8014a94:	eba3 0c0c 	sub.w	ip, r3, ip
 8014a98:	eba1 010c 	sub.w	r1, r1, ip
 8014a9c:	f8a4 8000 	strh.w	r8, [r4]
 8014aa0:	80a1      	strh	r1, [r4, #4]
 8014aa2:	e7da      	b.n	8014a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014aa4:	4461      	add	r1, ip
 8014aa6:	b209      	sxth	r1, r1
 8014aa8:	4588      	cmp	r8, r1
 8014aaa:	dbd7      	blt.n	8014a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014aac:	9905      	ldr	r1, [sp, #20]
 8014aae:	eba1 0c0c 	sub.w	ip, r1, ip
 8014ab2:	f8a4 c004 	strh.w	ip, [r4, #4]
 8014ab6:	e7d0      	b.n	8014a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014ab8:	200137b2 	.word	0x200137b2
 8014abc:	200137b0 	.word	0x200137b0
 8014ac0:	2d00      	cmp	r5, #0
 8014ac2:	f000 816d 	beq.w	8014da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014ac6:	9b06      	ldr	r3, [sp, #24]
 8014ac8:	445b      	add	r3, fp
 8014aca:	461c      	mov	r4, r3
 8014acc:	9b02      	ldr	r3, [sp, #8]
 8014ace:	3301      	adds	r3, #1
 8014ad0:	f000 8166 	beq.w	8014da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014ad4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8014ad8:	4629      	mov	r1, r5
 8014ada:	9803      	ldr	r0, [sp, #12]
 8014adc:	f7ff fccc 	bl	8014478 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014ae0:	b120      	cbz	r0, 8014aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8014ae2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014ae6:	9801      	ldr	r0, [sp, #4]
 8014ae8:	f7ff feb0 	bl	801484c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014aec:	9903      	ldr	r1, [sp, #12]
 8014aee:	4628      	mov	r0, r5
 8014af0:	f7ff fc4f 	bl	8014392 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014af4:	2800      	cmp	r0, #0
 8014af6:	f000 809c 	beq.w	8014c32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014afa:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8014afe:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8014b02:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8014b06:	9309      	str	r3, [sp, #36]	; 0x24
 8014b08:	fa1f f189 	uxth.w	r1, r9
 8014b0c:	eb01 0c03 	add.w	ip, r1, r3
 8014b10:	fa1f fa8c 	uxth.w	sl, ip
 8014b14:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8014b18:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8014b1c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8014b20:	b283      	uxth	r3, r0
 8014b22:	eb03 050c 	add.w	r5, r3, ip
 8014b26:	b2ad      	uxth	r5, r5
 8014b28:	9505      	str	r5, [sp, #20]
 8014b2a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8014b2e:	9504      	str	r5, [sp, #16]
 8014b30:	4548      	cmp	r0, r9
 8014b32:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8014b36:	f340 8099 	ble.w	8014c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8014b3a:	1a5b      	subs	r3, r3, r1
 8014b3c:	b29b      	uxth	r3, r3
 8014b3e:	4596      	cmp	lr, r2
 8014b40:	fa0f f08a 	sxth.w	r0, sl
 8014b44:	b21e      	sxth	r6, r3
 8014b46:	dd2e      	ble.n	8014ba6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8014b48:	9f02      	ldr	r7, [sp, #8]
 8014b4a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8014b4e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8014b52:	9f04      	ldr	r7, [sp, #16]
 8014b54:	1a3f      	subs	r7, r7, r0
 8014b56:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8014b5a:	fa1f fe8e 	uxth.w	lr, lr
 8014b5e:	b292      	uxth	r2, r2
 8014b60:	ebae 0102 	sub.w	r1, lr, r2
 8014b64:	44a6      	add	lr, r4
 8014b66:	4402      	add	r2, r0
 8014b68:	b289      	uxth	r1, r1
 8014b6a:	fa0f fe8e 	sxth.w	lr, lr
 8014b6e:	b212      	sxth	r2, r2
 8014b70:	b20d      	sxth	r5, r1
 8014b72:	ebae 0202 	sub.w	r2, lr, r2
 8014b76:	436f      	muls	r7, r5
 8014b78:	4372      	muls	r2, r6
 8014b7a:	4297      	cmp	r7, r2
 8014b7c:	db09      	blt.n	8014b92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8014b7e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8014b82:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8014b86:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8014b8a:	449c      	add	ip, r3
 8014b8c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8014b90:	e686      	b.n	80148a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014b92:	4421      	add	r1, r4
 8014b94:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8014b98:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8014b9c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8014ba0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014ba4:	e67c      	b.n	80148a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014ba6:	9f04      	ldr	r7, [sp, #16]
 8014ba8:	42b8      	cmp	r0, r7
 8014baa:	da27      	bge.n	8014bfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8014bac:	9902      	ldr	r1, [sp, #8]
 8014bae:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8014bb2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8014bb6:	eb05 010e 	add.w	r1, r5, lr
 8014bba:	fa1f f881 	uxth.w	r8, r1
 8014bbe:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8014bc2:	4411      	add	r1, r2
 8014bc4:	eba1 0108 	sub.w	r1, r1, r8
 8014bc8:	b289      	uxth	r1, r1
 8014bca:	fa0f f988 	sxth.w	r9, r8
 8014bce:	eba2 020e 	sub.w	r2, r2, lr
 8014bd2:	fa0f f881 	sxth.w	r8, r1
 8014bd6:	1a3f      	subs	r7, r7, r0
 8014bd8:	4372      	muls	r2, r6
 8014bda:	fb08 f707 	mul.w	r7, r8, r7
 8014bde:	42ba      	cmp	r2, r7
 8014be0:	dc06      	bgt.n	8014bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8014be2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8014be6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8014bea:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8014bee:	e7ca      	b.n	8014b86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8014bf0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8014bf4:	4429      	add	r1, r5
 8014bf6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8014bfa:	e651      	b.n	80148a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014bfc:	9805      	ldr	r0, [sp, #20]
 8014bfe:	ebaa 0000 	sub.w	r0, sl, r0
 8014c02:	b280      	uxth	r0, r0
 8014c04:	2d06      	cmp	r5, #6
 8014c06:	fa0f fe80 	sxth.w	lr, r0
 8014c0a:	d817      	bhi.n	8014c3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8014c0c:	9b04      	ldr	r3, [sp, #16]
 8014c0e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014c12:	1c6b      	adds	r3, r5, #1
 8014c14:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8014c18:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8014c1c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8014c20:	9b01      	ldr	r3, [sp, #4]
 8014c22:	9801      	ldr	r0, [sp, #4]
 8014c24:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014c28:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014c2c:	805a      	strh	r2, [r3, #2]
 8014c2e:	809e      	strh	r6, [r3, #4]
 8014c30:	80d9      	strh	r1, [r3, #6]
 8014c32:	9b02      	ldr	r3, [sp, #8]
 8014c34:	3b01      	subs	r3, #1
 8014c36:	9302      	str	r3, [sp, #8]
 8014c38:	3c08      	subs	r4, #8
 8014c3a:	e747      	b.n	8014acc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8014c3c:	9a02      	ldr	r2, [sp, #8]
 8014c3e:	45b6      	cmp	lr, r6
 8014c40:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014c44:	db0d      	blt.n	8014c62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8014c46:	449c      	add	ip, r3
 8014c48:	fa1f fc8c 	uxth.w	ip, ip
 8014c4c:	445a      	add	r2, fp
 8014c4e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8014c52:	448c      	add	ip, r1
 8014c54:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8014c58:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8014c5c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8014c60:	e61e      	b.n	80148a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014c62:	445a      	add	r2, fp
 8014c64:	4484      	add	ip, r0
 8014c66:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8014c6a:	e78f      	b.n	8014b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014c6c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8014c70:	fa1f f18e 	uxth.w	r1, lr
 8014c74:	eb01 0806 	add.w	r8, r1, r6
 8014c78:	b293      	uxth	r3, r2
 8014c7a:	fa1f f888 	uxth.w	r8, r8
 8014c7e:	9306      	str	r3, [sp, #24]
 8014c80:	fa0f f388 	sxth.w	r3, r8
 8014c84:	9307      	str	r3, [sp, #28]
 8014c86:	9f06      	ldr	r7, [sp, #24]
 8014c88:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8014c8c:	443b      	add	r3, r7
 8014c8e:	b29b      	uxth	r3, r3
 8014c90:	4596      	cmp	lr, r2
 8014c92:	9308      	str	r3, [sp, #32]
 8014c94:	da24      	bge.n	8014ce0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8014c96:	9905      	ldr	r1, [sp, #20]
 8014c98:	eba3 0308 	sub.w	r3, r3, r8
 8014c9c:	ebaa 0401 	sub.w	r4, sl, r1
 8014ca0:	b2a4      	uxth	r4, r4
 8014ca2:	b29b      	uxth	r3, r3
 8014ca4:	b225      	sxth	r5, r4
 8014ca6:	b219      	sxth	r1, r3
 8014ca8:	eba2 020e 	sub.w	r2, r2, lr
 8014cac:	eba9 0000 	sub.w	r0, r9, r0
 8014cb0:	436a      	muls	r2, r5
 8014cb2:	4348      	muls	r0, r1
 8014cb4:	4282      	cmp	r2, r0
 8014cb6:	9a02      	ldr	r2, [sp, #8]
 8014cb8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014cbc:	445a      	add	r2, fp
 8014cbe:	dc06      	bgt.n	8014cce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8014cc0:	9b07      	ldr	r3, [sp, #28]
 8014cc2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8014cc6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8014cca:	44a4      	add	ip, r4
 8014ccc:	e75e      	b.n	8014b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014cce:	9904      	ldr	r1, [sp, #16]
 8014cd0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8014cd4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8014cd8:	4433      	add	r3, r6
 8014cda:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014cde:	e5df      	b.n	80148a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014ce0:	9f06      	ldr	r7, [sp, #24]
 8014ce2:	9b04      	ldr	r3, [sp, #16]
 8014ce4:	1bc9      	subs	r1, r1, r7
 8014ce6:	fa0f f78a 	sxth.w	r7, sl
 8014cea:	b289      	uxth	r1, r1
 8014cec:	429f      	cmp	r7, r3
 8014cee:	fa0f fe81 	sxth.w	lr, r1
 8014cf2:	dd23      	ble.n	8014d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8014cf4:	9a05      	ldr	r2, [sp, #20]
 8014cf6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014cfa:	9d07      	ldr	r5, [sp, #28]
 8014cfc:	ebaa 0202 	sub.w	r2, sl, r2
 8014d00:	b292      	uxth	r2, r2
 8014d02:	eba5 0a03 	sub.w	sl, r5, r3
 8014d06:	b214      	sxth	r4, r2
 8014d08:	eba9 0000 	sub.w	r0, r9, r0
 8014d0c:	9b02      	ldr	r3, [sp, #8]
 8014d0e:	fb0e f000 	mul.w	r0, lr, r0
 8014d12:	fb04 fa0a 	mul.w	sl, r4, sl
 8014d16:	00db      	lsls	r3, r3, #3
 8014d18:	4550      	cmp	r0, sl
 8014d1a:	445b      	add	r3, fp
 8014d1c:	db03      	blt.n	8014d26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8014d1e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8014d22:	4494      	add	ip, r2
 8014d24:	e732      	b.n	8014b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014d26:	9a04      	ldr	r2, [sp, #16]
 8014d28:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8014d2c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8014d30:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8014d34:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014d38:	4431      	add	r1, r6
 8014d3a:	e75c      	b.n	8014bf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8014d3c:	9b08      	ldr	r3, [sp, #32]
 8014d3e:	eba3 0308 	sub.w	r3, r3, r8
 8014d42:	b29b      	uxth	r3, r3
 8014d44:	2d06      	cmp	r5, #6
 8014d46:	b218      	sxth	r0, r3
 8014d48:	d813      	bhi.n	8014d72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8014d4a:	9b07      	ldr	r3, [sp, #28]
 8014d4c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8014d50:	1c6b      	adds	r3, r5, #1
 8014d52:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8014d56:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8014d5a:	9b01      	ldr	r3, [sp, #4]
 8014d5c:	9901      	ldr	r1, [sp, #4]
 8014d5e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014d62:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8014d66:	805a      	strh	r2, [r3, #2]
 8014d68:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014d6a:	809a      	strh	r2, [r3, #4]
 8014d6c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8014d70:	e75f      	b.n	8014c32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014d72:	9c02      	ldr	r4, [sp, #8]
 8014d74:	4570      	cmp	r0, lr
 8014d76:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8014d7a:	db0d      	blt.n	8014d98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8014d7c:	4431      	add	r1, r6
 8014d7e:	9b06      	ldr	r3, [sp, #24]
 8014d80:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8014d84:	b289      	uxth	r1, r1
 8014d86:	445c      	add	r4, fp
 8014d88:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8014d8c:	4419      	add	r1, r3
 8014d8e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8014d92:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8014d96:	e583      	b.n	80148a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014d98:	445c      	add	r4, fp
 8014d9a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8014d9e:	e79b      	b.n	8014cd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8014da0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8014da4:	1e65      	subs	r5, r4, #1
 8014da6:	b2ad      	uxth	r5, r5
 8014da8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8014dac:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8014db0:	42b5      	cmp	r5, r6
 8014db2:	d044      	beq.n	8014e3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8014db4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8014db8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8014dbc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8014dc0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8014dc4:	4282      	cmp	r2, r0
 8014dc6:	d11f      	bne.n	8014e08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014dc8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8014dcc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8014dd0:	459c      	cmp	ip, r3
 8014dd2:	d119      	bne.n	8014e08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014dd4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8014dd8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8014ddc:	19d8      	adds	r0, r3, r7
 8014dde:	b200      	sxth	r0, r0
 8014de0:	4288      	cmp	r0, r1
 8014de2:	d109      	bne.n	8014df8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8014de4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8014de8:	4413      	add	r3, r2
 8014dea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8014dee:	4629      	mov	r1, r5
 8014df0:	9801      	ldr	r0, [sp, #4]
 8014df2:	f7ff fd2b 	bl	801484c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014df6:	e003      	b.n	8014e00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014df8:	4411      	add	r1, r2
 8014dfa:	b209      	sxth	r1, r1
 8014dfc:	42b9      	cmp	r1, r7
 8014dfe:	d0f3      	beq.n	8014de8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8014e00:	3d01      	subs	r5, #1
 8014e02:	b2ad      	uxth	r5, r5
 8014e04:	3c08      	subs	r4, #8
 8014e06:	e7d3      	b.n	8014db0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8014e08:	42b9      	cmp	r1, r7
 8014e0a:	d1f9      	bne.n	8014e00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014e0c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8014e10:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8014e14:	4299      	cmp	r1, r3
 8014e16:	d1f3      	bne.n	8014e00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014e18:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8014e1c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8014e20:	181f      	adds	r7, r3, r0
 8014e22:	b23f      	sxth	r7, r7
 8014e24:	42ba      	cmp	r2, r7
 8014e26:	d105      	bne.n	8014e34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8014e28:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8014e2c:	440b      	add	r3, r1
 8014e2e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014e32:	e7dc      	b.n	8014dee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8014e34:	440a      	add	r2, r1
 8014e36:	b212      	sxth	r2, r2
 8014e38:	4290      	cmp	r0, r2
 8014e3a:	d1e1      	bne.n	8014e00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014e3c:	e7f6      	b.n	8014e2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8014e3e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8014e42:	2e07      	cmp	r6, #7
 8014e44:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8014e48:	d812      	bhi.n	8014e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8014e4a:	1c75      	adds	r5, r6, #1
 8014e4c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8014e50:	9d01      	ldr	r5, [sp, #4]
 8014e52:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8014e56:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8014e5a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8014e5e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8014e62:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8014e66:	442c      	add	r4, r5
 8014e68:	8061      	strh	r1, [r4, #2]
 8014e6a:	80a2      	strh	r2, [r4, #4]
 8014e6c:	80e3      	strh	r3, [r4, #6]
 8014e6e:	e581      	b.n	8014974 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014e70:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8014e74:	3e01      	subs	r6, #1
 8014e76:	445c      	add	r4, fp
 8014e78:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8014e7c:	f04f 37ff 	mov.w	r7, #4294967295
 8014e80:	2500      	movs	r5, #0
 8014e82:	9305      	str	r3, [sp, #20]
 8014e84:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8014e88:	9302      	str	r3, [sp, #8]
 8014e8a:	1e72      	subs	r2, r6, #1
 8014e8c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8014e90:	9304      	str	r3, [sp, #16]
 8014e92:	4691      	mov	r9, r2
 8014e94:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8014e98:	f1b9 3fff 	cmp.w	r9, #4294967295
 8014e9c:	bf14      	ite	ne
 8014e9e:	9905      	ldrne	r1, [sp, #20]
 8014ea0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8014ea4:	6818      	ldr	r0, [r3, #0]
 8014ea6:	9207      	str	r2, [sp, #28]
 8014ea8:	bf18      	it	ne
 8014eaa:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8014eae:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014eb2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014eb6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8014eba:	9306      	str	r3, [sp, #24]
 8014ebc:	fb18 f801 	smulbb	r8, r8, r1
 8014ec0:	6859      	ldr	r1, [r3, #4]
 8014ec2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014ec6:	4671      	mov	r1, lr
 8014ec8:	a80c      	add	r0, sp, #48	; 0x30
 8014eca:	f7ff fafb 	bl	80144c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014ece:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014ed2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014ed6:	9b04      	ldr	r3, [sp, #16]
 8014ed8:	9a02      	ldr	r2, [sp, #8]
 8014eda:	fb10 f001 	smulbb	r0, r0, r1
 8014ede:	fb02 8803 	mla	r8, r2, r3, r8
 8014ee2:	eba0 0108 	sub.w	r1, r0, r8
 8014ee6:	f04f 0c08 	mov.w	ip, #8
 8014eea:	fb90 f0fc 	sdiv	r0, r0, ip
 8014eee:	4288      	cmp	r0, r1
 8014ef0:	dc20      	bgt.n	8014f34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014ef2:	4551      	cmp	r1, sl
 8014ef4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8014ef8:	da03      	bge.n	8014f02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8014efa:	b1d9      	cbz	r1, 8014f34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014efc:	468a      	mov	sl, r1
 8014efe:	464f      	mov	r7, r9
 8014f00:	4635      	mov	r5, r6
 8014f02:	f109 39ff 	add.w	r9, r9, #4294967295
 8014f06:	f119 0f02 	cmn.w	r9, #2
 8014f0a:	d1c5      	bne.n	8014e98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8014f0c:	4616      	mov	r6, r2
 8014f0e:	3201      	adds	r2, #1
 8014f10:	f1a4 0408 	sub.w	r4, r4, #8
 8014f14:	d1b6      	bne.n	8014e84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8014f16:	9b01      	ldr	r3, [sp, #4]
 8014f18:	b2ac      	uxth	r4, r5
 8014f1a:	00ed      	lsls	r5, r5, #3
 8014f1c:	1958      	adds	r0, r3, r5
 8014f1e:	1c7b      	adds	r3, r7, #1
 8014f20:	d10b      	bne.n	8014f3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8014f22:	4601      	mov	r1, r0
 8014f24:	9803      	ldr	r0, [sp, #12]
 8014f26:	f7ff facd 	bl	80144c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014f2a:	4621      	mov	r1, r4
 8014f2c:	9801      	ldr	r0, [sp, #4]
 8014f2e:	f7ff fc8d 	bl	801484c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014f32:	e4b5      	b.n	80148a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014f34:	464f      	mov	r7, r9
 8014f36:	4635      	mov	r5, r6
 8014f38:	e7ed      	b.n	8014f16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8014f3a:	9b01      	ldr	r3, [sp, #4]
 8014f3c:	00ff      	lsls	r7, r7, #3
 8014f3e:	19d9      	adds	r1, r3, r7
 8014f40:	f7ff fac0 	bl	80144c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014f44:	9b03      	ldr	r3, [sp, #12]
 8014f46:	cb03      	ldmia	r3!, {r0, r1}
 8014f48:	445f      	add	r7, fp
 8014f4a:	445d      	add	r5, fp
 8014f4c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8014f50:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8014f54:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8014f58:	9b03      	ldr	r3, [sp, #12]
 8014f5a:	6869      	ldr	r1, [r5, #4]
 8014f5c:	c303      	stmia	r3!, {r0, r1}
 8014f5e:	e7e4      	b.n	8014f2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08014f60 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8014f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f64:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8014f68:	b09b      	sub	sp, #108	; 0x6c
 8014f6a:	4604      	mov	r4, r0
 8014f6c:	4630      	mov	r0, r6
 8014f6e:	f7fa fa20 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014f72:	4605      	mov	r5, r0
 8014f74:	b948      	cbnz	r0, 8014f8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8014f76:	6823      	ldr	r3, [r4, #0]
 8014f78:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014f7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014f7e:	4620      	mov	r0, r4
 8014f80:	4798      	blx	r3
 8014f82:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8014f86:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8014f8a:	4bc6      	ldr	r3, [pc, #792]	; (80152a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8014f8c:	681b      	ldr	r3, [r3, #0]
 8014f8e:	2b00      	cmp	r3, #0
 8014f90:	d03f      	beq.n	8015012 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014f92:	4dc5      	ldr	r5, [pc, #788]	; (80152a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8014f94:	4628      	mov	r0, r5
 8014f96:	f7fa fa0c 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014f9a:	4606      	mov	r6, r0
 8014f9c:	2800      	cmp	r0, #0
 8014f9e:	d138      	bne.n	8015012 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014fa0:	4628      	mov	r0, r5
 8014fa2:	f7ff f907 	bl	80141b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014fa6:	6823      	ldr	r3, [r4, #0]
 8014fa8:	6829      	ldr	r1, [r5, #0]
 8014faa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014fac:	686a      	ldr	r2, [r5, #4]
 8014fae:	4620      	mov	r0, r4
 8014fb0:	4798      	blx	r3
 8014fb2:	802e      	strh	r6, [r5, #0]
 8014fb4:	806e      	strh	r6, [r5, #2]
 8014fb6:	80ae      	strh	r6, [r5, #4]
 8014fb8:	80ee      	strh	r6, [r5, #6]
 8014fba:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8014fbe:	4dbb      	ldr	r5, [pc, #748]	; (80152ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8014fc0:	4640      	mov	r0, r8
 8014fc2:	f7ff fbeb 	bl	801479c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014fc6:	882e      	ldrh	r6, [r5, #0]
 8014fc8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8014fcc:	4633      	mov	r3, r6
 8014fce:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014fd2:	42bb      	cmp	r3, r7
 8014fd4:	d224      	bcs.n	8015020 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014fd6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8014fda:	2907      	cmp	r1, #7
 8014fdc:	d816      	bhi.n	801500c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8014fde:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8014fe2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8014fe6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8014fea:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8014fee:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8014ff2:	1c4a      	adds	r2, r1, #1
 8014ff4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8014ff8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8014ffc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015000:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015004:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015008:	f8a2 c006 	strh.w	ip, [r2, #6]
 801500c:	3301      	adds	r3, #1
 801500e:	b29b      	uxth	r3, r3
 8015010:	e7df      	b.n	8014fd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015012:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015016:	2b00      	cmp	r3, #0
 8015018:	d1cf      	bne.n	8014fba <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801501a:	b01b      	add	sp, #108	; 0x6c
 801501c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015020:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015024:	42b3      	cmp	r3, r6
 8015026:	d90c      	bls.n	8015042 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015028:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801502c:	6822      	ldr	r2, [r4, #0]
 801502e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015032:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015034:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015038:	4620      	mov	r0, r4
 801503a:	3601      	adds	r6, #1
 801503c:	47b8      	blx	r7
 801503e:	b2b6      	uxth	r6, r6
 8015040:	e7ee      	b.n	8015020 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015042:	4a9b      	ldr	r2, [pc, #620]	; (80152b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015044:	6813      	ldr	r3, [r2, #0]
 8015046:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801504a:	2b01      	cmp	r3, #1
 801504c:	4691      	mov	r9, r2
 801504e:	f040 80e2 	bne.w	8015216 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015052:	8829      	ldrh	r1, [r5, #0]
 8015054:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015058:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801505c:	33ae      	adds	r3, #174	; 0xae
 801505e:	2600      	movs	r6, #0
 8015060:	428f      	cmp	r7, r1
 8015062:	f103 0308 	add.w	r3, r3, #8
 8015066:	dd0a      	ble.n	801507e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015068:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801506c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015070:	4402      	add	r2, r0
 8015072:	b212      	sxth	r2, r2
 8015074:	4296      	cmp	r6, r2
 8015076:	bfb8      	it	lt
 8015078:	4616      	movlt	r6, r2
 801507a:	3101      	adds	r1, #1
 801507c:	e7f0      	b.n	8015060 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801507e:	4b8d      	ldr	r3, [pc, #564]	; (80152b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015080:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80152b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8015084:	881b      	ldrh	r3, [r3, #0]
 8015086:	2b0f      	cmp	r3, #15
 8015088:	bf88      	it	hi
 801508a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801508e:	f04f 0300 	mov.w	r3, #0
 8015092:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015096:	bf98      	it	ls
 8015098:	f04f 0b01 	movls.w	fp, #1
 801509c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80150a0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80150a4:	4b82      	ldr	r3, [pc, #520]	; (80152b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80150a6:	4438      	add	r0, r7
 80150a8:	b207      	sxth	r7, r0
 80150aa:	6818      	ldr	r0, [r3, #0]
 80150ac:	42b7      	cmp	r7, r6
 80150ae:	6803      	ldr	r3, [r0, #0]
 80150b0:	f280 8083 	bge.w	80151ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80150b4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80150b8:	4798      	blx	r3
 80150ba:	eb07 030b 	add.w	r3, r7, fp
 80150be:	4298      	cmp	r0, r3
 80150c0:	da07      	bge.n	80150d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80150c2:	42b0      	cmp	r0, r6
 80150c4:	da05      	bge.n	80150d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80150c6:	4287      	cmp	r7, r0
 80150c8:	dd6c      	ble.n	80151a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80150ca:	2f00      	cmp	r7, #0
 80150cc:	dd6a      	ble.n	80151a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80150ce:	4630      	mov	r0, r6
 80150d0:	e004      	b.n	80150dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80150d2:	4287      	cmp	r7, r0
 80150d4:	dcfb      	bgt.n	80150ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80150d6:	42b0      	cmp	r0, r6
 80150d8:	bfa8      	it	ge
 80150da:	4630      	movge	r0, r6
 80150dc:	4b76      	ldr	r3, [pc, #472]	; (80152b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80150de:	f8ad 7016 	strh.w	r7, [sp, #22]
 80150e2:	1bc0      	subs	r0, r0, r7
 80150e4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80150e8:	882f      	ldrh	r7, [r5, #0]
 80150ea:	f8ad 3018 	strh.w	r3, [sp, #24]
 80150ee:	2200      	movs	r2, #0
 80150f0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80150f4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80150f8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80150fc:	42bb      	cmp	r3, r7
 80150fe:	d9cd      	bls.n	801509c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015100:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015104:	ab07      	add	r3, sp, #28
 8015106:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801510a:	6851      	ldr	r1, [r2, #4]
 801510c:	c303      	stmia	r3!, {r0, r1}
 801510e:	a905      	add	r1, sp, #20
 8015110:	a807      	add	r0, sp, #28
 8015112:	f7ff f93e 	bl	8014392 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015116:	2800      	cmp	r0, #0
 8015118:	d04c      	beq.n	80151b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801511a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801511e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015122:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015126:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801512a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801512e:	9302      	str	r3, [sp, #8]
 8015130:	4686      	mov	lr, r0
 8015132:	4290      	cmp	r0, r2
 8015134:	4450      	add	r0, sl
 8015136:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801513a:	bfb8      	it	lt
 801513c:	4696      	movlt	lr, r2
 801513e:	4452      	add	r2, sl
 8015140:	4299      	cmp	r1, r3
 8015142:	b280      	uxth	r0, r0
 8015144:	b292      	uxth	r2, r2
 8015146:	468c      	mov	ip, r1
 8015148:	fa0f fa82 	sxth.w	sl, r2
 801514c:	bfb8      	it	lt
 801514e:	469c      	movlt	ip, r3
 8015150:	b203      	sxth	r3, r0
 8015152:	4553      	cmp	r3, sl
 8015154:	bfb8      	it	lt
 8015156:	4602      	movlt	r2, r0
 8015158:	eba2 020e 	sub.w	r2, r2, lr
 801515c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015160:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015164:	9b02      	ldr	r3, [sp, #8]
 8015166:	f8ad e01c 	strh.w	lr, [sp, #28]
 801516a:	4411      	add	r1, r2
 801516c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015170:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015174:	4413      	add	r3, r2
 8015176:	b289      	uxth	r1, r1
 8015178:	b29b      	uxth	r3, r3
 801517a:	b208      	sxth	r0, r1
 801517c:	b21a      	sxth	r2, r3
 801517e:	4290      	cmp	r0, r2
 8015180:	bfb8      	it	lt
 8015182:	460b      	movlt	r3, r1
 8015184:	eba3 030c 	sub.w	r3, r3, ip
 8015188:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801518c:	a807      	add	r0, sp, #28
 801518e:	f7fa f910 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015192:	b920      	cbnz	r0, 801519e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015194:	6823      	ldr	r3, [r4, #0]
 8015196:	a907      	add	r1, sp, #28
 8015198:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801519a:	4620      	mov	r0, r4
 801519c:	4798      	blx	r3
 801519e:	3701      	adds	r7, #1
 80151a0:	b2bf      	uxth	r7, r7
 80151a2:	e7a9      	b.n	80150f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80151a4:	f8d9 0000 	ldr.w	r0, [r9]
 80151a8:	6803      	ldr	r3, [r0, #0]
 80151aa:	2101      	movs	r1, #1
 80151ac:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80151b0:	4798      	blx	r3
 80151b2:	e773      	b.n	801509c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80151b4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80151b8:	e7e8      	b.n	801518c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80151ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80151bc:	4798      	blx	r3
 80151be:	4b3f      	ldr	r3, [pc, #252]	; (80152bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80151c0:	781b      	ldrb	r3, [r3, #0]
 80151c2:	2b00      	cmp	r3, #0
 80151c4:	f43f af29 	beq.w	801501a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80151c8:	2300      	movs	r3, #0
 80151ca:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80151ce:	882b      	ldrh	r3, [r5, #0]
 80151d0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80151d4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80151d8:	42ab      	cmp	r3, r5
 80151da:	f4bf af1e 	bcs.w	801501a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80151de:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80151e2:	2907      	cmp	r1, #7
 80151e4:	d814      	bhi.n	8015210 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80151e6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80151ea:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80151ee:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80151f2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80151f6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80151fa:	1c4a      	adds	r2, r1, #1
 80151fc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015200:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015204:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015208:	f8a2 c002 	strh.w	ip, [r2, #2]
 801520c:	8097      	strh	r7, [r2, #4]
 801520e:	80d6      	strh	r6, [r2, #6]
 8015210:	3301      	adds	r3, #1
 8015212:	b29b      	uxth	r3, r3
 8015214:	e7e0      	b.n	80151d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015216:	2b02      	cmp	r3, #2
 8015218:	f040 8133 	bne.w	8015482 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801521c:	4b28      	ldr	r3, [pc, #160]	; (80152c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801521e:	781b      	ldrb	r3, [r3, #0]
 8015220:	2b01      	cmp	r3, #1
 8015222:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015226:	f000 8098 	beq.w	801535a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801522a:	882a      	ldrh	r2, [r5, #0]
 801522c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015230:	3201      	adds	r2, #1
 8015232:	b292      	uxth	r2, r2
 8015234:	2900      	cmp	r1, #0
 8015236:	d0c2      	beq.n	80151be <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015238:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801523c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015240:	441e      	add	r6, r3
 8015242:	b236      	sxth	r6, r6
 8015244:	4694      	mov	ip, r2
 8015246:	f04f 0900 	mov.w	r9, #0
 801524a:	fa1f f38c 	uxth.w	r3, ip
 801524e:	4299      	cmp	r1, r3
 8015250:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015254:	f240 80bf 	bls.w	80153d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015258:	4427      	add	r7, r4
 801525a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801525e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8015262:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8015266:	4283      	cmp	r3, r0
 8015268:	f340 80a1 	ble.w	80153ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801526c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015270:	4406      	add	r6, r0
 8015272:	b236      	sxth	r6, r6
 8015274:	429e      	cmp	r6, r3
 8015276:	bfa8      	it	ge
 8015278:	461e      	movge	r6, r3
 801527a:	46e1      	mov	r9, ip
 801527c:	f10c 0c01 	add.w	ip, ip, #1
 8015280:	e7e3      	b.n	801524a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015282:	d10a      	bne.n	801529a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015284:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015288:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801528c:	4562      	cmp	r2, ip
 801528e:	bfb8      	it	lt
 8015290:	4662      	movlt	r2, ip
 8015292:	4288      	cmp	r0, r1
 8015294:	bfb8      	it	lt
 8015296:	461f      	movlt	r7, r3
 8015298:	e087      	b.n	80153aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801529a:	428a      	cmp	r2, r1
 801529c:	bfb8      	it	lt
 801529e:	460a      	movlt	r2, r1
 80152a0:	e083      	b.n	80153aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80152a2:	bf00      	nop
 80152a4:	200137fc 	.word	0x200137fc
 80152a8:	20013808 	.word	0x20013808
 80152ac:	20000088 	.word	0x20000088
 80152b0:	200137bc 	.word	0x200137bc
 80152b4:	200137b2 	.word	0x200137b2
 80152b8:	200137b0 	.word	0x200137b0
 80152bc:	200137ba 	.word	0x200137ba
 80152c0:	200137b4 	.word	0x200137b4
 80152c4:	19a1      	adds	r1, r4, r6
 80152c6:	ab07      	add	r3, sp, #28
 80152c8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80152cc:	6849      	ldr	r1, [r1, #4]
 80152ce:	c303      	stmia	r3!, {r0, r1}
 80152d0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80152d4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80152d8:	2b13      	cmp	r3, #19
 80152da:	bfd8      	it	le
 80152dc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80152e0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80152e4:	440b      	add	r3, r1
 80152e6:	1a9b      	subs	r3, r3, r2
 80152e8:	a807      	add	r0, sp, #28
 80152ea:	f8ad 3020 	strh.w	r3, [sp, #32]
 80152ee:	f7fe ff7b 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80152f2:	a807      	add	r0, sp, #28
 80152f4:	f7fa f85d 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80152f8:	bb78      	cbnz	r0, 801535a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80152fa:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80152fe:	f8d9 0000 	ldr.w	r0, [r9]
 8015302:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015306:	f8d0 e000 	ldr.w	lr, [r0]
 801530a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801530e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015312:	f1bc 0f14 	cmp.w	ip, #20
 8015316:	bfa8      	it	ge
 8015318:	f04f 0c14 	movge.w	ip, #20
 801531c:	fa1f fc8c 	uxth.w	ip, ip
 8015320:	f8cd c000 	str.w	ip, [sp]
 8015324:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015328:	47d8      	blx	fp
 801532a:	4683      	mov	fp, r0
 801532c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015330:	a807      	add	r0, sp, #28
 8015332:	f7fe ff3f 	bl	80141b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015336:	6823      	ldr	r3, [r4, #0]
 8015338:	4426      	add	r6, r4
 801533a:	4620      	mov	r0, r4
 801533c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801533e:	a907      	add	r1, sp, #28
 8015340:	4798      	blx	r3
 8015342:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015346:	eba0 000b 	sub.w	r0, r0, fp
 801534a:	b200      	sxth	r0, r0
 801534c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8015350:	b918      	cbnz	r0, 801535a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015352:	b2b9      	uxth	r1, r7
 8015354:	4650      	mov	r0, sl
 8015356:	f7ff fa79 	bl	801484c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801535a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801535e:	f1bb 0f00 	cmp.w	fp, #0
 8015362:	f43f af2c 	beq.w	80151be <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015366:	882b      	ldrh	r3, [r5, #0]
 8015368:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801536c:	3301      	adds	r3, #1
 801536e:	b29b      	uxth	r3, r3
 8015370:	2700      	movs	r7, #0
 8015372:	b299      	uxth	r1, r3
 8015374:	458b      	cmp	fp, r1
 8015376:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801537a:	d9a3      	bls.n	80152c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801537c:	4426      	add	r6, r4
 801537e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015382:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8015386:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801538a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801538e:	4408      	add	r0, r1
 8015390:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015394:	4461      	add	r1, ip
 8015396:	b200      	sxth	r0, r0
 8015398:	b209      	sxth	r1, r1
 801539a:	4288      	cmp	r0, r1
 801539c:	f6bf af71 	bge.w	8015282 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80153a0:	4584      	cmp	ip, r0
 80153a2:	4662      	mov	r2, ip
 80153a4:	461f      	mov	r7, r3
 80153a6:	bfb8      	it	lt
 80153a8:	4602      	movlt	r2, r0
 80153aa:	3301      	adds	r3, #1
 80153ac:	e7e1      	b.n	8015372 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80153ae:	d10e      	bne.n	80153ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80153b0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80153b4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80153b8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80153bc:	4473      	add	r3, lr
 80153be:	b21b      	sxth	r3, r3
 80153c0:	429e      	cmp	r6, r3
 80153c2:	bfa8      	it	ge
 80153c4:	461e      	movge	r6, r3
 80153c6:	4287      	cmp	r7, r0
 80153c8:	bfb8      	it	lt
 80153ca:	46e1      	movlt	r9, ip
 80153cc:	e756      	b.n	801527c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80153ce:	4286      	cmp	r6, r0
 80153d0:	bfa8      	it	ge
 80153d2:	4606      	movge	r6, r0
 80153d4:	e752      	b.n	801527c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80153d6:	eb0a 0007 	add.w	r0, sl, r7
 80153da:	4427      	add	r7, r4
 80153dc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80153e0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80153e4:	f1bb 0f13 	cmp.w	fp, #19
 80153e8:	bfde      	ittt	le
 80153ea:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80153ee:	445e      	addle	r6, fp
 80153f0:	b236      	sxthle	r6, r6
 80153f2:	f7f9 ffde 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80153f6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80153fa:	2800      	cmp	r0, #0
 80153fc:	f47f af1a 	bne.w	8015234 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015400:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015404:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015408:	482a      	ldr	r0, [pc, #168]	; (80154b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801540a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801540e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015412:	6800      	ldr	r0, [r0, #0]
 8015414:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015418:	1ab6      	subs	r6, r6, r2
 801541a:	2e14      	cmp	r6, #20
 801541c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015420:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015424:	bfa8      	it	ge
 8015426:	2614      	movge	r6, #20
 8015428:	f8d0 c000 	ldr.w	ip, [r0]
 801542c:	b2b6      	uxth	r6, r6
 801542e:	fa1f fb8b 	uxth.w	fp, fp
 8015432:	455e      	cmp	r6, fp
 8015434:	bf94      	ite	ls
 8015436:	9600      	strls	r6, [sp, #0]
 8015438:	f8cd b000 	strhi.w	fp, [sp]
 801543c:	b292      	uxth	r2, r2
 801543e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015442:	b29b      	uxth	r3, r3
 8015444:	b289      	uxth	r1, r1
 8015446:	47b0      	blx	r6
 8015448:	6823      	ldr	r3, [r4, #0]
 801544a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801544e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015450:	a907      	add	r1, sp, #28
 8015452:	4620      	mov	r0, r4
 8015454:	4798      	blx	r3
 8015456:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801545a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801545e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8015462:	1a5b      	subs	r3, r3, r1
 8015464:	440a      	add	r2, r1
 8015466:	b21b      	sxth	r3, r3
 8015468:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801546c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8015470:	2b00      	cmp	r3, #0
 8015472:	f47f aeda 	bne.w	801522a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015476:	fa1f f189 	uxth.w	r1, r9
 801547a:	4650      	mov	r0, sl
 801547c:	f7ff f9e6 	bl	801484c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015480:	e6d3      	b.n	801522a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015482:	882e      	ldrh	r6, [r5, #0]
 8015484:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015488:	42b3      	cmp	r3, r6
 801548a:	f67f ae98 	bls.w	80151be <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801548e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015492:	ab07      	add	r3, sp, #28
 8015494:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015498:	6851      	ldr	r1, [r2, #4]
 801549a:	c303      	stmia	r3!, {r0, r1}
 801549c:	a807      	add	r0, sp, #28
 801549e:	f7f9 ff88 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80154a2:	b920      	cbnz	r0, 80154ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80154a4:	6823      	ldr	r3, [r4, #0]
 80154a6:	a907      	add	r1, sp, #28
 80154a8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80154aa:	4620      	mov	r0, r4
 80154ac:	4798      	blx	r3
 80154ae:	3601      	adds	r6, #1
 80154b0:	b2b6      	uxth	r6, r6
 80154b2:	e7e7      	b.n	8015484 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80154b4:	200137bc 	.word	0x200137bc

080154b8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80154b8:	4b03      	ldr	r3, [pc, #12]	; (80154c8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80154ba:	2200      	movs	r2, #0
 80154bc:	801a      	strh	r2, [r3, #0]
 80154be:	805a      	strh	r2, [r3, #2]
 80154c0:	809a      	strh	r2, [r3, #4]
 80154c2:	80da      	strh	r2, [r3, #6]
 80154c4:	4770      	bx	lr
 80154c6:	bf00      	nop
 80154c8:	20013808 	.word	0x20013808

080154cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80154cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154d0:	4606      	mov	r6, r0
 80154d2:	b09d      	sub	sp, #116	; 0x74
 80154d4:	a803      	add	r0, sp, #12
 80154d6:	4614      	mov	r4, r2
 80154d8:	468a      	mov	sl, r1
 80154da:	461d      	mov	r5, r3
 80154dc:	f000 feca 	bl	8016274 <_ZN8touchgfx12TextProviderC1Ev>
 80154e0:	6833      	ldr	r3, [r6, #0]
 80154e2:	4630      	mov	r0, r6
 80154e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80154e6:	4798      	blx	r3
 80154e8:	6833      	ldr	r3, [r6, #0]
 80154ea:	4607      	mov	r7, r0
 80154ec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80154ee:	4630      	mov	r0, r6
 80154f0:	4798      	blx	r3
 80154f2:	462a      	mov	r2, r5
 80154f4:	9000      	str	r0, [sp, #0]
 80154f6:	4621      	mov	r1, r4
 80154f8:	463b      	mov	r3, r7
 80154fa:	a803      	add	r0, sp, #12
 80154fc:	f000 ff15 	bl	801632a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015500:	2500      	movs	r5, #0
 8015502:	462c      	mov	r4, r5
 8015504:	46a9      	mov	r9, r5
 8015506:	46a8      	mov	r8, r5
 8015508:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801550c:	2300      	movs	r3, #0
 801550e:	9302      	str	r3, [sp, #8]
 8015510:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015514:	429c      	cmp	r4, r3
 8015516:	d002      	beq.n	801551e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015518:	455c      	cmp	r4, fp
 801551a:	bf18      	it	ne
 801551c:	4625      	movne	r5, r4
 801551e:	ab02      	add	r3, sp, #8
 8015520:	4632      	mov	r2, r6
 8015522:	4651      	mov	r1, sl
 8015524:	a803      	add	r0, sp, #12
 8015526:	f001 fa03 	bl	8016930 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801552a:	4604      	mov	r4, r0
 801552c:	b108      	cbz	r0, 8015532 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801552e:	280a      	cmp	r0, #10
 8015530:	d10a      	bne.n	8015548 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015532:	45c1      	cmp	r9, r8
 8015534:	bf38      	it	cc
 8015536:	46c1      	movcc	r9, r8
 8015538:	f04f 0800 	mov.w	r8, #0
 801553c:	2c00      	cmp	r4, #0
 801553e:	d1e5      	bne.n	801550c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015540:	4648      	mov	r0, r9
 8015542:	b01d      	add	sp, #116	; 0x74
 8015544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015548:	9a02      	ldr	r2, [sp, #8]
 801554a:	2a00      	cmp	r2, #0
 801554c:	d0de      	beq.n	801550c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801554e:	7b57      	ldrb	r7, [r2, #13]
 8015550:	6833      	ldr	r3, [r6, #0]
 8015552:	8894      	ldrh	r4, [r2, #4]
 8015554:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015556:	007f      	lsls	r7, r7, #1
 8015558:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801555c:	7a97      	ldrb	r7, [r2, #10]
 801555e:	4629      	mov	r1, r5
 8015560:	4307      	orrs	r7, r0
 8015562:	4630      	mov	r0, r6
 8015564:	4798      	blx	r3
 8015566:	4438      	add	r0, r7
 8015568:	4480      	add	r8, r0
 801556a:	fa1f f888 	uxth.w	r8, r8
 801556e:	e7e5      	b.n	801553c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015570 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015570:	b508      	push	{r3, lr}
 8015572:	6803      	ldr	r3, [r0, #0]
 8015574:	68db      	ldr	r3, [r3, #12]
 8015576:	4798      	blx	r3
 8015578:	b128      	cbz	r0, 8015586 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801557a:	7b43      	ldrb	r3, [r0, #13]
 801557c:	7a80      	ldrb	r0, [r0, #10]
 801557e:	005b      	lsls	r3, r3, #1
 8015580:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015584:	4318      	orrs	r0, r3
 8015586:	bd08      	pop	{r3, pc}

08015588 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015588:	b40e      	push	{r1, r2, r3}
 801558a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801558c:	b09e      	sub	sp, #120	; 0x78
 801558e:	ab23      	add	r3, sp, #140	; 0x8c
 8015590:	4605      	mov	r5, r0
 8015592:	f853 4b04 	ldr.w	r4, [r3], #4
 8015596:	9303      	str	r3, [sp, #12]
 8015598:	a805      	add	r0, sp, #20
 801559a:	f000 fe6b 	bl	8016274 <_ZN8touchgfx12TextProviderC1Ev>
 801559e:	682b      	ldr	r3, [r5, #0]
 80155a0:	4628      	mov	r0, r5
 80155a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80155a4:	4798      	blx	r3
 80155a6:	682b      	ldr	r3, [r5, #0]
 80155a8:	4606      	mov	r6, r0
 80155aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80155ac:	4628      	mov	r0, r5
 80155ae:	4798      	blx	r3
 80155b0:	4633      	mov	r3, r6
 80155b2:	ae1e      	add	r6, sp, #120	; 0x78
 80155b4:	4621      	mov	r1, r4
 80155b6:	9000      	str	r0, [sp, #0]
 80155b8:	9a03      	ldr	r2, [sp, #12]
 80155ba:	2400      	movs	r4, #0
 80155bc:	a805      	add	r0, sp, #20
 80155be:	f000 feb4 	bl	801632a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80155c2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80155c6:	462a      	mov	r2, r5
 80155c8:	4633      	mov	r3, r6
 80155ca:	4621      	mov	r1, r4
 80155cc:	a805      	add	r0, sp, #20
 80155ce:	f001 f9af 	bl	8016930 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80155d2:	b1f0      	cbz	r0, 8015612 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80155d4:	280a      	cmp	r0, #10
 80155d6:	d018      	beq.n	801560a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80155d8:	9f04      	ldr	r7, [sp, #16]
 80155da:	b1b7      	cbz	r7, 801560a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80155dc:	7b78      	ldrb	r0, [r7, #13]
 80155de:	7a3b      	ldrb	r3, [r7, #8]
 80155e0:	88ea      	ldrh	r2, [r5, #6]
 80155e2:	00c1      	lsls	r1, r0, #3
 80155e4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80155e8:	4319      	orrs	r1, r3
 80155ea:	0643      	lsls	r3, r0, #25
 80155ec:	bf44      	itt	mi
 80155ee:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80155f2:	b219      	sxthmi	r1, r3
 80155f4:	0100      	lsls	r0, r0, #4
 80155f6:	79fb      	ldrb	r3, [r7, #7]
 80155f8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80155fc:	4303      	orrs	r3, r0
 80155fe:	4413      	add	r3, r2
 8015600:	1a5b      	subs	r3, r3, r1
 8015602:	b21b      	sxth	r3, r3
 8015604:	429c      	cmp	r4, r3
 8015606:	bfb8      	it	lt
 8015608:	461c      	movlt	r4, r3
 801560a:	4633      	mov	r3, r6
 801560c:	462a      	mov	r2, r5
 801560e:	2100      	movs	r1, #0
 8015610:	e7dc      	b.n	80155cc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015612:	b2a0      	uxth	r0, r4
 8015614:	b01e      	add	sp, #120	; 0x78
 8015616:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801561a:	b003      	add	sp, #12
 801561c:	4770      	bx	lr

0801561e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801561e:	7a43      	ldrb	r3, [r0, #9]
 8015620:	8880      	ldrh	r0, [r0, #4]
 8015622:	4418      	add	r0, r3
 8015624:	b280      	uxth	r0, r0
 8015626:	4770      	bx	lr

08015628 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015628:	6803      	ldr	r3, [r0, #0]
 801562a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801562c:	4718      	bx	r3

0801562e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801562e:	b40e      	push	{r1, r2, r3}
 8015630:	b570      	push	{r4, r5, r6, lr}
 8015632:	b09d      	sub	sp, #116	; 0x74
 8015634:	ab21      	add	r3, sp, #132	; 0x84
 8015636:	4604      	mov	r4, r0
 8015638:	f853 5b04 	ldr.w	r5, [r3], #4
 801563c:	9302      	str	r3, [sp, #8]
 801563e:	a803      	add	r0, sp, #12
 8015640:	f000 fe18 	bl	8016274 <_ZN8touchgfx12TextProviderC1Ev>
 8015644:	6823      	ldr	r3, [r4, #0]
 8015646:	4620      	mov	r0, r4
 8015648:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801564a:	4798      	blx	r3
 801564c:	6823      	ldr	r3, [r4, #0]
 801564e:	4606      	mov	r6, r0
 8015650:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015652:	4620      	mov	r0, r4
 8015654:	4798      	blx	r3
 8015656:	4633      	mov	r3, r6
 8015658:	9000      	str	r0, [sp, #0]
 801565a:	9a02      	ldr	r2, [sp, #8]
 801565c:	4629      	mov	r1, r5
 801565e:	a803      	add	r0, sp, #12
 8015660:	f000 fe63 	bl	801632a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015664:	a803      	add	r0, sp, #12
 8015666:	f001 fa31 	bl	8016acc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801566a:	2401      	movs	r4, #1
 801566c:	b2a3      	uxth	r3, r4
 801566e:	b140      	cbz	r0, 8015682 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015670:	280a      	cmp	r0, #10
 8015672:	bf08      	it	eq
 8015674:	3301      	addeq	r3, #1
 8015676:	a803      	add	r0, sp, #12
 8015678:	bf08      	it	eq
 801567a:	b21c      	sxtheq	r4, r3
 801567c:	f001 fa26 	bl	8016acc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015680:	e7f4      	b.n	801566c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015682:	4618      	mov	r0, r3
 8015684:	b01d      	add	sp, #116	; 0x74
 8015686:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801568a:	b003      	add	sp, #12
 801568c:	4770      	bx	lr

0801568e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801568e:	b40e      	push	{r1, r2, r3}
 8015690:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015692:	b09e      	sub	sp, #120	; 0x78
 8015694:	ab23      	add	r3, sp, #140	; 0x8c
 8015696:	4604      	mov	r4, r0
 8015698:	f853 5b04 	ldr.w	r5, [r3], #4
 801569c:	9303      	str	r3, [sp, #12]
 801569e:	a805      	add	r0, sp, #20
 80156a0:	f000 fde8 	bl	8016274 <_ZN8touchgfx12TextProviderC1Ev>
 80156a4:	6823      	ldr	r3, [r4, #0]
 80156a6:	4620      	mov	r0, r4
 80156a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80156aa:	4798      	blx	r3
 80156ac:	6823      	ldr	r3, [r4, #0]
 80156ae:	4606      	mov	r6, r0
 80156b0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80156b2:	4620      	mov	r0, r4
 80156b4:	4798      	blx	r3
 80156b6:	4633      	mov	r3, r6
 80156b8:	4629      	mov	r1, r5
 80156ba:	9000      	str	r0, [sp, #0]
 80156bc:	9a03      	ldr	r2, [sp, #12]
 80156be:	a805      	add	r0, sp, #20
 80156c0:	ad1e      	add	r5, sp, #120	; 0x78
 80156c2:	f000 fe32 	bl	801632a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80156c6:	2100      	movs	r1, #0
 80156c8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80156cc:	4622      	mov	r2, r4
 80156ce:	462b      	mov	r3, r5
 80156d0:	a805      	add	r0, sp, #20
 80156d2:	f001 f92d 	bl	8016930 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80156d6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80156da:	b1d8      	cbz	r0, 8015714 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80156dc:	280a      	cmp	r0, #10
 80156de:	d012      	beq.n	8015706 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80156e0:	9804      	ldr	r0, [sp, #16]
 80156e2:	b180      	cbz	r0, 8015706 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80156e4:	7b47      	ldrb	r7, [r0, #13]
 80156e6:	88e2      	ldrh	r2, [r4, #6]
 80156e8:	00fb      	lsls	r3, r7, #3
 80156ea:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80156ee:	7a03      	ldrb	r3, [r0, #8]
 80156f0:	430b      	orrs	r3, r1
 80156f2:	0679      	lsls	r1, r7, #25
 80156f4:	bf44      	itt	mi
 80156f6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80156fa:	b21b      	sxthmi	r3, r3
 80156fc:	1ad3      	subs	r3, r2, r3
 80156fe:	b21b      	sxth	r3, r3
 8015700:	429e      	cmp	r6, r3
 8015702:	bfa8      	it	ge
 8015704:	461e      	movge	r6, r3
 8015706:	462b      	mov	r3, r5
 8015708:	4622      	mov	r2, r4
 801570a:	2100      	movs	r1, #0
 801570c:	a805      	add	r0, sp, #20
 801570e:	f001 f90f 	bl	8016930 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015712:	e7e2      	b.n	80156da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015714:	4630      	mov	r0, r6
 8015716:	b01e      	add	sp, #120	; 0x78
 8015718:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801571c:	b003      	add	sp, #12
 801571e:	4770      	bx	lr

08015720 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8015720:	b513      	push	{r0, r1, r4, lr}
 8015722:	6803      	ldr	r3, [r0, #0]
 8015724:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015728:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801572c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015730:	2400      	movs	r4, #0
 8015732:	9400      	str	r4, [sp, #0]
 8015734:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015738:	691b      	ldr	r3, [r3, #16]
 801573a:	4669      	mov	r1, sp
 801573c:	4798      	blx	r3
 801573e:	b002      	add	sp, #8
 8015740:	bd10      	pop	{r4, pc}

08015742 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8015742:	b538      	push	{r3, r4, r5, lr}
 8015744:	680b      	ldr	r3, [r1, #0]
 8015746:	460c      	mov	r4, r1
 8015748:	68db      	ldr	r3, [r3, #12]
 801574a:	4605      	mov	r5, r0
 801574c:	4798      	blx	r3
 801574e:	6823      	ldr	r3, [r4, #0]
 8015750:	4620      	mov	r0, r4
 8015752:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015754:	4629      	mov	r1, r5
 8015756:	4798      	blx	r3
 8015758:	4628      	mov	r0, r5
 801575a:	bd38      	pop	{r3, r4, r5, pc}

0801575c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801575c:	b410      	push	{r4}
 801575e:	880a      	ldrh	r2, [r1, #0]
 8015760:	8884      	ldrh	r4, [r0, #4]
 8015762:	4422      	add	r2, r4
 8015764:	800a      	strh	r2, [r1, #0]
 8015766:	88c4      	ldrh	r4, [r0, #6]
 8015768:	884a      	ldrh	r2, [r1, #2]
 801576a:	4422      	add	r2, r4
 801576c:	804a      	strh	r2, [r1, #2]
 801576e:	6940      	ldr	r0, [r0, #20]
 8015770:	b120      	cbz	r0, 801577c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8015772:	6803      	ldr	r3, [r0, #0]
 8015774:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015778:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801577a:	4718      	bx	r3
 801577c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015780:	4770      	bx	lr

08015782 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015782:	b570      	push	{r4, r5, r6, lr}
 8015784:	8882      	ldrh	r2, [r0, #4]
 8015786:	880b      	ldrh	r3, [r1, #0]
 8015788:	4413      	add	r3, r2
 801578a:	800b      	strh	r3, [r1, #0]
 801578c:	88c2      	ldrh	r2, [r0, #6]
 801578e:	884b      	ldrh	r3, [r1, #2]
 8015790:	460c      	mov	r4, r1
 8015792:	4413      	add	r3, r2
 8015794:	804b      	strh	r3, [r1, #2]
 8015796:	4605      	mov	r5, r0
 8015798:	1d01      	adds	r1, r0, #4
 801579a:	4620      	mov	r0, r4
 801579c:	f7f9 fdc6 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 80157a0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80157a4:	2b00      	cmp	r3, #0
 80157a6:	dd0b      	ble.n	80157c0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80157a8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80157ac:	2b00      	cmp	r3, #0
 80157ae:	dd07      	ble.n	80157c0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80157b0:	6968      	ldr	r0, [r5, #20]
 80157b2:	b128      	cbz	r0, 80157c0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80157b4:	6803      	ldr	r3, [r0, #0]
 80157b6:	4621      	mov	r1, r4
 80157b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80157ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80157be:	4718      	bx	r3
 80157c0:	bd70      	pop	{r4, r5, r6, pc}
	...

080157c4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80157c4:	b570      	push	{r4, r5, r6, lr}
 80157c6:	8882      	ldrh	r2, [r0, #4]
 80157c8:	880b      	ldrh	r3, [r1, #0]
 80157ca:	4413      	add	r3, r2
 80157cc:	800b      	strh	r3, [r1, #0]
 80157ce:	88c2      	ldrh	r2, [r0, #6]
 80157d0:	884b      	ldrh	r3, [r1, #2]
 80157d2:	460c      	mov	r4, r1
 80157d4:	4413      	add	r3, r2
 80157d6:	804b      	strh	r3, [r1, #2]
 80157d8:	4605      	mov	r5, r0
 80157da:	1d01      	adds	r1, r0, #4
 80157dc:	4620      	mov	r0, r4
 80157de:	f7f9 fda5 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 80157e2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80157e6:	2b00      	cmp	r3, #0
 80157e8:	dd19      	ble.n	801581e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80157ea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80157ee:	2b00      	cmp	r3, #0
 80157f0:	dd15      	ble.n	801581e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80157f2:	6968      	ldr	r0, [r5, #20]
 80157f4:	b128      	cbz	r0, 8015802 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80157f6:	6803      	ldr	r3, [r0, #0]
 80157f8:	4621      	mov	r1, r4
 80157fa:	691b      	ldr	r3, [r3, #16]
 80157fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015800:	4718      	bx	r3
 8015802:	4b07      	ldr	r3, [pc, #28]	; (8015820 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015804:	681b      	ldr	r3, [r3, #0]
 8015806:	3304      	adds	r3, #4
 8015808:	429d      	cmp	r5, r3
 801580a:	d108      	bne.n	801581e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801580c:	f7fe fea0 	bl	8014550 <_ZN8touchgfx11Application11getInstanceEv>
 8015810:	6803      	ldr	r3, [r0, #0]
 8015812:	6821      	ldr	r1, [r4, #0]
 8015814:	6862      	ldr	r2, [r4, #4]
 8015816:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015818:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801581c:	4718      	bx	r3
 801581e:	bd70      	pop	{r4, r5, r6, pc}
 8015820:	20013800 	.word	0x20013800

08015824 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015824:	b570      	push	{r4, r5, r6, lr}
 8015826:	4604      	mov	r4, r0
 8015828:	4616      	mov	r6, r2
 801582a:	460d      	mov	r5, r1
 801582c:	b901      	cbnz	r1, 8015830 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801582e:	b192      	cbz	r2, 8015856 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8015830:	6823      	ldr	r3, [r4, #0]
 8015832:	4620      	mov	r0, r4
 8015834:	699b      	ldr	r3, [r3, #24]
 8015836:	4798      	blx	r3
 8015838:	88e2      	ldrh	r2, [r4, #6]
 801583a:	88a1      	ldrh	r1, [r4, #4]
 801583c:	4432      	add	r2, r6
 801583e:	4429      	add	r1, r5
 8015840:	4620      	mov	r0, r4
 8015842:	b212      	sxth	r2, r2
 8015844:	b209      	sxth	r1, r1
 8015846:	f7ec fe22 	bl	800248e <_ZN8touchgfx8Drawable5setXYEss>
 801584a:	6823      	ldr	r3, [r4, #0]
 801584c:	4620      	mov	r0, r4
 801584e:	699b      	ldr	r3, [r3, #24]
 8015850:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015854:	4718      	bx	r3
 8015856:	bd70      	pop	{r4, r5, r6, pc}

08015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015858:	b510      	push	{r4, lr}
 801585a:	4604      	mov	r4, r0
 801585c:	4608      	mov	r0, r1
 801585e:	2300      	movs	r3, #0
 8015860:	8023      	strh	r3, [r4, #0]
 8015862:	8063      	strh	r3, [r4, #2]
 8015864:	6803      	ldr	r3, [r0, #0]
 8015866:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801586a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801586e:	80a1      	strh	r1, [r4, #4]
 8015870:	80e2      	strh	r2, [r4, #6]
 8015872:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015874:	4621      	mov	r1, r4
 8015876:	4798      	blx	r3
 8015878:	4620      	mov	r0, r4
 801587a:	bd10      	pop	{r4, pc}

0801587c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801587c:	b530      	push	{r4, r5, lr}
 801587e:	8083      	strh	r3, [r0, #4]
 8015880:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015884:	80c3      	strh	r3, [r0, #6]
 8015886:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801588a:	7203      	strb	r3, [r0, #8]
 801588c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015890:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015894:	7243      	strb	r3, [r0, #9]
 8015896:	7a83      	ldrb	r3, [r0, #10]
 8015898:	6141      	str	r1, [r0, #20]
 801589a:	f365 0306 	bfi	r3, r5, #0, #7
 801589e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80158a2:	8302      	strh	r2, [r0, #24]
 80158a4:	f365 13c7 	bfi	r3, r5, #7, #1
 80158a8:	7283      	strb	r3, [r0, #10]
 80158aa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80158ae:	72c3      	strb	r3, [r0, #11]
 80158b0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80158b4:	7303      	strb	r3, [r0, #12]
 80158b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80158ba:	81c3      	strh	r3, [r0, #14]
 80158bc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80158c0:	8203      	strh	r3, [r0, #16]
 80158c2:	4b01      	ldr	r3, [pc, #4]	; (80158c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80158c4:	6003      	str	r3, [r0, #0]
 80158c6:	bd30      	pop	{r4, r5, pc}
 80158c8:	0802c2d4 	.word	0x0802c2d4

080158cc <_ZNK8touchgfx9ConstFont4findEt>:
 80158cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80158ce:	6944      	ldr	r4, [r0, #20]
 80158d0:	b3bc      	cbz	r4, 8015942 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80158d2:	88a3      	ldrh	r3, [r4, #4]
 80158d4:	8b02      	ldrh	r2, [r0, #24]
 80158d6:	1acb      	subs	r3, r1, r3
 80158d8:	f102 32ff 	add.w	r2, r2, #4294967295
 80158dc:	d431      	bmi.n	8015942 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80158de:	4293      	cmp	r3, r2
 80158e0:	dd0c      	ble.n	80158fc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80158e2:	230e      	movs	r3, #14
 80158e4:	fb03 4302 	mla	r3, r3, r2, r4
 80158e8:	889b      	ldrh	r3, [r3, #4]
 80158ea:	1a5b      	subs	r3, r3, r1
 80158ec:	1ad3      	subs	r3, r2, r3
 80158ee:	429a      	cmp	r2, r3
 80158f0:	db27      	blt.n	8015942 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80158f2:	2b00      	cmp	r3, #0
 80158f4:	bfbc      	itt	lt
 80158f6:	2302      	movlt	r3, #2
 80158f8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80158fc:	2500      	movs	r5, #0
 80158fe:	260e      	movs	r6, #14
 8015900:	4295      	cmp	r5, r2
 8015902:	dc1e      	bgt.n	8015942 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015904:	fb06 4003 	mla	r0, r6, r3, r4
 8015908:	8887      	ldrh	r7, [r0, #4]
 801590a:	42b9      	cmp	r1, r7
 801590c:	d01a      	beq.n	8015944 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801590e:	d20d      	bcs.n	801592c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8015910:	1e5a      	subs	r2, r3, #1
 8015912:	4295      	cmp	r5, r2
 8015914:	dc15      	bgt.n	8015942 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015916:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801591a:	1a5b      	subs	r3, r3, r1
 801591c:	1ad3      	subs	r3, r2, r3
 801591e:	429a      	cmp	r2, r3
 8015920:	db0f      	blt.n	8015942 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015922:	429d      	cmp	r5, r3
 8015924:	ddec      	ble.n	8015900 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015926:	1953      	adds	r3, r2, r5
 8015928:	105b      	asrs	r3, r3, #1
 801592a:	e7e9      	b.n	8015900 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801592c:	1c5d      	adds	r5, r3, #1
 801592e:	42aa      	cmp	r2, r5
 8015930:	db07      	blt.n	8015942 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015932:	8a43      	ldrh	r3, [r0, #18]
 8015934:	1acb      	subs	r3, r1, r3
 8015936:	442b      	add	r3, r5
 8015938:	429d      	cmp	r5, r3
 801593a:	dc02      	bgt.n	8015942 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801593c:	429a      	cmp	r2, r3
 801593e:	dadf      	bge.n	8015900 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015940:	e7f1      	b.n	8015926 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8015942:	2000      	movs	r0, #0
 8015944:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015946 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015946:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015948:	4604      	mov	r4, r0
 801594a:	4617      	mov	r7, r2
 801594c:	461e      	mov	r6, r3
 801594e:	b911      	cbnz	r1, 8015956 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015950:	2500      	movs	r5, #0
 8015952:	4628      	mov	r0, r5
 8015954:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015956:	290a      	cmp	r1, #10
 8015958:	d0fa      	beq.n	8015950 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801595a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801595e:	4291      	cmp	r1, r2
 8015960:	d0f6      	beq.n	8015950 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015962:	f242 020b 	movw	r2, #8203	; 0x200b
 8015966:	4291      	cmp	r1, r2
 8015968:	d0f2      	beq.n	8015950 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801596a:	f7ff ffaf 	bl	80158cc <_ZNK8touchgfx9ConstFont4findEt>
 801596e:	4605      	mov	r5, r0
 8015970:	b950      	cbnz	r0, 8015988 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8015972:	6823      	ldr	r3, [r4, #0]
 8015974:	4620      	mov	r0, r4
 8015976:	691b      	ldr	r3, [r3, #16]
 8015978:	4798      	blx	r3
 801597a:	4601      	mov	r1, r0
 801597c:	4620      	mov	r0, r4
 801597e:	f7ff ffa5 	bl	80158cc <_ZNK8touchgfx9ConstFont4findEt>
 8015982:	4605      	mov	r5, r0
 8015984:	2800      	cmp	r0, #0
 8015986:	d0e3      	beq.n	8015950 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015988:	6823      	ldr	r3, [r4, #0]
 801598a:	4629      	mov	r1, r5
 801598c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801598e:	4620      	mov	r0, r4
 8015990:	4798      	blx	r3
 8015992:	6038      	str	r0, [r7, #0]
 8015994:	6823      	ldr	r3, [r4, #0]
 8015996:	4620      	mov	r0, r4
 8015998:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801599a:	4798      	blx	r3
 801599c:	7030      	strb	r0, [r6, #0]
 801599e:	e7d8      	b.n	8015952 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080159a0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80159a0:	b538      	push	{r3, r4, r5, lr}
 80159a2:	4605      	mov	r5, r0
 80159a4:	f002 f962 	bl	8017c6c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80159a8:	4604      	mov	r4, r0
 80159aa:	4628      	mov	r0, r5
 80159ac:	f002 f8a2 	bl	8017af4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80159b0:	2800      	cmp	r0, #0
 80159b2:	bf14      	ite	ne
 80159b4:	2002      	movne	r0, #2
 80159b6:	2000      	moveq	r0, #0
 80159b8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80159bc:	b280      	uxth	r0, r0
 80159be:	bd38      	pop	{r3, r4, r5, pc}

080159c0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80159c0:	b538      	push	{r3, r4, r5, lr}
 80159c2:	4605      	mov	r5, r0
 80159c4:	f002 f952 	bl	8017c6c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80159c8:	4604      	mov	r4, r0
 80159ca:	4628      	mov	r0, r5
 80159cc:	f002 f892 	bl	8017af4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80159d0:	2800      	cmp	r0, #0
 80159d2:	bf14      	ite	ne
 80159d4:	2002      	movne	r0, #2
 80159d6:	2000      	moveq	r0, #0
 80159d8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80159dc:	f040 0001 	orr.w	r0, r0, #1
 80159e0:	b280      	uxth	r0, r0
 80159e2:	bd38      	pop	{r3, r4, r5, pc}

080159e4 <_ZN8touchgfx4clzuEm>:
 80159e4:	4603      	mov	r3, r0
 80159e6:	b1c8      	cbz	r0, 8015a1c <_ZN8touchgfx4clzuEm+0x38>
 80159e8:	0c02      	lsrs	r2, r0, #16
 80159ea:	0412      	lsls	r2, r2, #16
 80159ec:	b9a2      	cbnz	r2, 8015a18 <_ZN8touchgfx4clzuEm+0x34>
 80159ee:	0403      	lsls	r3, r0, #16
 80159f0:	2010      	movs	r0, #16
 80159f2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80159f6:	bf04      	itt	eq
 80159f8:	021b      	lsleq	r3, r3, #8
 80159fa:	3008      	addeq	r0, #8
 80159fc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8015a00:	bf04      	itt	eq
 8015a02:	011b      	lsleq	r3, r3, #4
 8015a04:	3004      	addeq	r0, #4
 8015a06:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015a0a:	bf04      	itt	eq
 8015a0c:	009b      	lsleq	r3, r3, #2
 8015a0e:	3002      	addeq	r0, #2
 8015a10:	2b00      	cmp	r3, #0
 8015a12:	db04      	blt.n	8015a1e <_ZN8touchgfx4clzuEm+0x3a>
 8015a14:	3001      	adds	r0, #1
 8015a16:	4770      	bx	lr
 8015a18:	2000      	movs	r0, #0
 8015a1a:	e7ea      	b.n	80159f2 <_ZN8touchgfx4clzuEm+0xe>
 8015a1c:	2020      	movs	r0, #32
 8015a1e:	4770      	bx	lr

08015a20 <_ZN8touchgfx7muldivuEmmmRm>:
 8015a20:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8015a24:	460f      	mov	r7, r1
 8015a26:	4615      	mov	r5, r2
 8015a28:	461e      	mov	r6, r3
 8015a2a:	4601      	mov	r1, r0
 8015a2c:	b100      	cbz	r0, 8015a30 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8015a2e:	b927      	cbnz	r7, 8015a3a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8015a30:	2000      	movs	r0, #0
 8015a32:	6030      	str	r0, [r6, #0]
 8015a34:	b002      	add	sp, #8
 8015a36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015a3a:	f7ff ffd3 	bl	80159e4 <_ZN8touchgfx4clzuEm>
 8015a3e:	b980      	cbnz	r0, 8015a62 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8015a40:	4638      	mov	r0, r7
 8015a42:	f7ff ffcf 	bl	80159e4 <_ZN8touchgfx4clzuEm>
 8015a46:	2800      	cmp	r0, #0
 8015a48:	dd05      	ble.n	8015a56 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8015a4a:	4633      	mov	r3, r6
 8015a4c:	462a      	mov	r2, r5
 8015a4e:	4638      	mov	r0, r7
 8015a50:	f7ff ffe6 	bl	8015a20 <_ZN8touchgfx7muldivuEmmmRm>
 8015a54:	e7ee      	b.n	8015a34 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015a56:	f04f 33ff 	mov.w	r3, #4294967295
 8015a5a:	6033      	str	r3, [r6, #0]
 8015a5c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015a60:	e7e8      	b.n	8015a34 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015a62:	fa37 f800 	lsrs.w	r8, r7, r0
 8015a66:	fb07 f301 	mul.w	r3, r7, r1
 8015a6a:	d105      	bne.n	8015a78 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8015a6c:	fbb3 f0f5 	udiv	r0, r3, r5
 8015a70:	fb05 3510 	mls	r5, r5, r0, r3
 8015a74:	6035      	str	r5, [r6, #0]
 8015a76:	e7dd      	b.n	8015a34 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015a78:	2301      	movs	r3, #1
 8015a7a:	fa01 fa00 	lsl.w	sl, r1, r0
 8015a7e:	fa03 f000 	lsl.w	r0, r3, r0
 8015a82:	3801      	subs	r0, #1
 8015a84:	462a      	mov	r2, r5
 8015a86:	4633      	mov	r3, r6
 8015a88:	4038      	ands	r0, r7
 8015a8a:	f7ff ffc9 	bl	8015a20 <_ZN8touchgfx7muldivuEmmmRm>
 8015a8e:	fbba f9f5 	udiv	r9, sl, r5
 8015a92:	462a      	mov	r2, r5
 8015a94:	4607      	mov	r7, r0
 8015a96:	ab01      	add	r3, sp, #4
 8015a98:	fb05 a119 	mls	r1, r5, r9, sl
 8015a9c:	4640      	mov	r0, r8
 8015a9e:	f7ff ffbf 	bl	8015a20 <_ZN8touchgfx7muldivuEmmmRm>
 8015aa2:	9b01      	ldr	r3, [sp, #4]
 8015aa4:	6832      	ldr	r2, [r6, #0]
 8015aa6:	fb08 f409 	mul.w	r4, r8, r9
 8015aaa:	441a      	add	r2, r3
 8015aac:	fbb2 f3f5 	udiv	r3, r2, r5
 8015ab0:	441c      	add	r4, r3
 8015ab2:	443c      	add	r4, r7
 8015ab4:	4420      	add	r0, r4
 8015ab6:	fb05 2513 	mls	r5, r5, r3, r2
 8015aba:	e7db      	b.n	8015a74 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08015abc <_ZN8touchgfx6muldivElllRl>:
 8015abc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015abe:	2800      	cmp	r0, #0
 8015ac0:	bfba      	itte	lt
 8015ac2:	4240      	neglt	r0, r0
 8015ac4:	f04f 34ff 	movlt.w	r4, #4294967295
 8015ac8:	2401      	movge	r4, #1
 8015aca:	2900      	cmp	r1, #0
 8015acc:	bfbc      	itt	lt
 8015ace:	4249      	neglt	r1, r1
 8015ad0:	4264      	neglt	r4, r4
 8015ad2:	2a00      	cmp	r2, #0
 8015ad4:	bfb6      	itet	lt
 8015ad6:	4265      	neglt	r5, r4
 8015ad8:	4625      	movge	r5, r4
 8015ada:	4252      	neglt	r2, r2
 8015adc:	4288      	cmp	r0, r1
 8015ade:	461e      	mov	r6, r3
 8015ae0:	bfc2      	ittt	gt
 8015ae2:	4603      	movgt	r3, r0
 8015ae4:	4608      	movgt	r0, r1
 8015ae6:	4619      	movgt	r1, r3
 8015ae8:	ab01      	add	r3, sp, #4
 8015aea:	f7ff ff99 	bl	8015a20 <_ZN8touchgfx7muldivuEmmmRm>
 8015aee:	9b01      	ldr	r3, [sp, #4]
 8015af0:	4368      	muls	r0, r5
 8015af2:	435c      	muls	r4, r3
 8015af4:	6034      	str	r4, [r6, #0]
 8015af6:	b002      	add	sp, #8
 8015af8:	bd70      	pop	{r4, r5, r6, pc}

08015afa <_ZN8touchgfx6muldivElll>:
 8015afa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015afc:	4606      	mov	r6, r0
 8015afe:	ab01      	add	r3, sp, #4
 8015b00:	460d      	mov	r5, r1
 8015b02:	4614      	mov	r4, r2
 8015b04:	f7ff ffda 	bl	8015abc <_ZN8touchgfx6muldivElllRl>
 8015b08:	2e00      	cmp	r6, #0
 8015b0a:	db20      	blt.n	8015b4e <_ZN8touchgfx6muldivElll+0x54>
 8015b0c:	bf14      	ite	ne
 8015b0e:	2301      	movne	r3, #1
 8015b10:	2300      	moveq	r3, #0
 8015b12:	2d00      	cmp	r5, #0
 8015b14:	db1e      	blt.n	8015b54 <_ZN8touchgfx6muldivElll+0x5a>
 8015b16:	bf14      	ite	ne
 8015b18:	2201      	movne	r2, #1
 8015b1a:	2200      	moveq	r2, #0
 8015b1c:	2c00      	cmp	r4, #0
 8015b1e:	fb03 f202 	mul.w	r2, r3, r2
 8015b22:	db1a      	blt.n	8015b5a <_ZN8touchgfx6muldivElll+0x60>
 8015b24:	bf14      	ite	ne
 8015b26:	2301      	movne	r3, #1
 8015b28:	2300      	moveq	r3, #0
 8015b2a:	4353      	muls	r3, r2
 8015b2c:	2b01      	cmp	r3, #1
 8015b2e:	d117      	bne.n	8015b60 <_ZN8touchgfx6muldivElll+0x66>
 8015b30:	9b01      	ldr	r3, [sp, #4]
 8015b32:	2c00      	cmp	r4, #0
 8015b34:	bfb8      	it	lt
 8015b36:	4264      	neglt	r4, r4
 8015b38:	2b00      	cmp	r3, #0
 8015b3a:	f104 0401 	add.w	r4, r4, #1
 8015b3e:	bfb8      	it	lt
 8015b40:	425b      	neglt	r3, r3
 8015b42:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8015b46:	db00      	blt.n	8015b4a <_ZN8touchgfx6muldivElll+0x50>
 8015b48:	3001      	adds	r0, #1
 8015b4a:	b002      	add	sp, #8
 8015b4c:	bd70      	pop	{r4, r5, r6, pc}
 8015b4e:	f04f 33ff 	mov.w	r3, #4294967295
 8015b52:	e7de      	b.n	8015b12 <_ZN8touchgfx6muldivElll+0x18>
 8015b54:	f04f 32ff 	mov.w	r2, #4294967295
 8015b58:	e7e0      	b.n	8015b1c <_ZN8touchgfx6muldivElll+0x22>
 8015b5a:	f04f 33ff 	mov.w	r3, #4294967295
 8015b5e:	e7e4      	b.n	8015b2a <_ZN8touchgfx6muldivElll+0x30>
 8015b60:	3301      	adds	r3, #1
 8015b62:	d1f2      	bne.n	8015b4a <_ZN8touchgfx6muldivElll+0x50>
 8015b64:	9b01      	ldr	r3, [sp, #4]
 8015b66:	2c00      	cmp	r4, #0
 8015b68:	bfb8      	it	lt
 8015b6a:	4264      	neglt	r4, r4
 8015b6c:	2b00      	cmp	r3, #0
 8015b6e:	bfb8      	it	lt
 8015b70:	425b      	neglt	r3, r3
 8015b72:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8015b76:	bfc8      	it	gt
 8015b78:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8015b7c:	e7e5      	b.n	8015b4a <_ZN8touchgfx6muldivElll+0x50>

08015b7e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8015b7e:	2000      	movs	r0, #0
 8015b80:	4770      	bx	lr

08015b82 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8015b82:	2001      	movs	r0, #1
 8015b84:	4770      	bx	lr

08015b86 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8015b86:	2002      	movs	r0, #2
 8015b88:	4770      	bx	lr

08015b8a <_ZN8touchgfx6ScreenD1Ev>:
 8015b8a:	4770      	bx	lr

08015b8c <_ZN8touchgfx12GestureEventD1Ev>:
 8015b8c:	4770      	bx	lr

08015b8e <_ZN8touchgfx9DragEventD1Ev>:
 8015b8e:	4770      	bx	lr

08015b90 <_ZN8touchgfx10ClickEventD1Ev>:
 8015b90:	4770      	bx	lr

08015b92 <_ZN8touchgfx10ClickEventD0Ev>:
 8015b92:	b510      	push	{r4, lr}
 8015b94:	210c      	movs	r1, #12
 8015b96:	4604      	mov	r4, r0
 8015b98:	f011 fa39 	bl	802700e <_ZdlPvj>
 8015b9c:	4620      	mov	r0, r4
 8015b9e:	bd10      	pop	{r4, pc}

08015ba0 <_ZN8touchgfx9DragEventD0Ev>:
 8015ba0:	b510      	push	{r4, lr}
 8015ba2:	2110      	movs	r1, #16
 8015ba4:	4604      	mov	r4, r0
 8015ba6:	f011 fa32 	bl	802700e <_ZdlPvj>
 8015baa:	4620      	mov	r0, r4
 8015bac:	bd10      	pop	{r4, pc}

08015bae <_ZN8touchgfx12GestureEventD0Ev>:
 8015bae:	b510      	push	{r4, lr}
 8015bb0:	210c      	movs	r1, #12
 8015bb2:	4604      	mov	r4, r0
 8015bb4:	f011 fa2b 	bl	802700e <_ZdlPvj>
 8015bb8:	4620      	mov	r0, r4
 8015bba:	bd10      	pop	{r4, pc}

08015bbc <_ZN8touchgfx6ScreenD0Ev>:
 8015bbc:	b510      	push	{r4, lr}
 8015bbe:	213c      	movs	r1, #60	; 0x3c
 8015bc0:	4604      	mov	r4, r0
 8015bc2:	f011 fa24 	bl	802700e <_ZdlPvj>
 8015bc6:	4620      	mov	r0, r4
 8015bc8:	bd10      	pop	{r4, pc}
	...

08015bcc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8015bcc:	b530      	push	{r4, r5, lr}
 8015bce:	460d      	mov	r5, r1
 8015bd0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015bd2:	b087      	sub	sp, #28
 8015bd4:	4604      	mov	r4, r0
 8015bd6:	b301      	cbz	r1, 8015c1a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8015bd8:	a801      	add	r0, sp, #4
 8015bda:	f7ff fe3d 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015bde:	892a      	ldrh	r2, [r5, #8]
 8015be0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015be4:	7928      	ldrb	r0, [r5, #4]
 8015be6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8015bea:	f88d 0010 	strb.w	r0, [sp, #16]
 8015bee:	1ad2      	subs	r2, r2, r3
 8015bf0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015bf2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8015bf4:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015bf8:	441a      	add	r2, r3
 8015bfa:	896b      	ldrh	r3, [r5, #10]
 8015bfc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8015c00:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015c04:	1b5b      	subs	r3, r3, r5
 8015c06:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8015c08:	442b      	add	r3, r5
 8015c0a:	4d05      	ldr	r5, [pc, #20]	; (8015c20 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8015c0c:	9503      	str	r5, [sp, #12]
 8015c0e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015c12:	6803      	ldr	r3, [r0, #0]
 8015c14:	a903      	add	r1, sp, #12
 8015c16:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015c18:	4798      	blx	r3
 8015c1a:	b007      	add	sp, #28
 8015c1c:	bd30      	pop	{r4, r5, pc}
 8015c1e:	bf00      	nop
 8015c20:	0802c35c 	.word	0x0802c35c

08015c24 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8015c24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015c28:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8015c2a:	b08a      	sub	sp, #40	; 0x28
 8015c2c:	4604      	mov	r4, r0
 8015c2e:	460d      	mov	r5, r1
 8015c30:	b113      	cbz	r3, 8015c38 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8015c32:	790b      	ldrb	r3, [r1, #4]
 8015c34:	2b00      	cmp	r3, #0
 8015c36:	d044      	beq.n	8015cc2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015c38:	f104 0804 	add.w	r8, r4, #4
 8015c3c:	4641      	mov	r1, r8
 8015c3e:	a803      	add	r0, sp, #12
 8015c40:	f7ff fe0a 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015c44:	792b      	ldrb	r3, [r5, #4]
 8015c46:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8015c4a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8015c4e:	b983      	cbnz	r3, 8015c72 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8015c50:	892a      	ldrh	r2, [r5, #8]
 8015c52:	88e9      	ldrh	r1, [r5, #6]
 8015c54:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8015c58:	1b92      	subs	r2, r2, r6
 8015c5a:	1bc9      	subs	r1, r1, r7
 8015c5c:	9301      	str	r3, [sp, #4]
 8015c5e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8015c62:	9300      	str	r3, [sp, #0]
 8015c64:	b212      	sxth	r2, r2
 8015c66:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8015c6a:	b209      	sxth	r1, r1
 8015c6c:	4640      	mov	r0, r8
 8015c6e:	f7f9 fa79 	bl	800f164 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8015c72:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015c74:	b329      	cbz	r1, 8015cc2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015c76:	a805      	add	r0, sp, #20
 8015c78:	f7ff fdee 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015c7c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015c80:	792b      	ldrb	r3, [r5, #4]
 8015c82:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8015c84:	f88d 3020 	strb.w	r3, [sp, #32]
 8015c88:	1abf      	subs	r7, r7, r2
 8015c8a:	88ea      	ldrh	r2, [r5, #6]
 8015c8c:	4417      	add	r7, r2
 8015c8e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8015c90:	4417      	add	r7, r2
 8015c92:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8015c96:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8015c9a:	1ab6      	subs	r6, r6, r2
 8015c9c:	892a      	ldrh	r2, [r5, #8]
 8015c9e:	4416      	add	r6, r2
 8015ca0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8015ca2:	4416      	add	r6, r2
 8015ca4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8015ca8:	4a07      	ldr	r2, [pc, #28]	; (8015cc8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8015caa:	9207      	str	r2, [sp, #28]
 8015cac:	2600      	movs	r6, #0
 8015cae:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8015cb2:	6803      	ldr	r3, [r0, #0]
 8015cb4:	a907      	add	r1, sp, #28
 8015cb6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015cb8:	4798      	blx	r3
 8015cba:	792b      	ldrb	r3, [r5, #4]
 8015cbc:	b10b      	cbz	r3, 8015cc2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015cbe:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8015cc2:	b00a      	add	sp, #40	; 0x28
 8015cc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015cc8:	0802c334 	.word	0x0802c334

08015ccc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8015ccc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015cd0:	460c      	mov	r4, r1
 8015cd2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015cd4:	b088      	sub	sp, #32
 8015cd6:	4605      	mov	r5, r0
 8015cd8:	2900      	cmp	r1, #0
 8015cda:	d06d      	beq.n	8015db8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8015cdc:	4668      	mov	r0, sp
 8015cde:	f7ff fdbb 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015ce2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8015ce4:	88e3      	ldrh	r3, [r4, #6]
 8015ce6:	f9bd 8000 	ldrsh.w	r8, [sp]
 8015cea:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8015cee:	440b      	add	r3, r1
 8015cf0:	b21b      	sxth	r3, r3
 8015cf2:	4543      	cmp	r3, r8
 8015cf4:	db31      	blt.n	8015d5a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015cf6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8015cfa:	44c4      	add	ip, r8
 8015cfc:	fa0f fc8c 	sxth.w	ip, ip
 8015d00:	4563      	cmp	r3, ip
 8015d02:	da2a      	bge.n	8015d5a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015d04:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8015d06:	8926      	ldrh	r6, [r4, #8]
 8015d08:	4416      	add	r6, r2
 8015d0a:	b236      	sxth	r6, r6
 8015d0c:	42be      	cmp	r6, r7
 8015d0e:	db24      	blt.n	8015d5a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015d10:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015d14:	4438      	add	r0, r7
 8015d16:	b200      	sxth	r0, r0
 8015d18:	4286      	cmp	r6, r0
 8015d1a:	da1e      	bge.n	8015d5a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015d1c:	8963      	ldrh	r3, [r4, #10]
 8015d1e:	4419      	add	r1, r3
 8015d20:	b209      	sxth	r1, r1
 8015d22:	4541      	cmp	r1, r8
 8015d24:	db08      	blt.n	8015d38 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015d26:	4561      	cmp	r1, ip
 8015d28:	da06      	bge.n	8015d38 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015d2a:	89a3      	ldrh	r3, [r4, #12]
 8015d2c:	441a      	add	r2, r3
 8015d2e:	b212      	sxth	r2, r2
 8015d30:	42ba      	cmp	r2, r7
 8015d32:	db01      	blt.n	8015d38 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015d34:	4282      	cmp	r2, r0
 8015d36:	db10      	blt.n	8015d5a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015d38:	4b21      	ldr	r3, [pc, #132]	; (8015dc0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8015d3a:	9304      	str	r3, [sp, #16]
 8015d3c:	2302      	movs	r3, #2
 8015d3e:	f88d 3014 	strb.w	r3, [sp, #20]
 8015d42:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8015d44:	2300      	movs	r3, #0
 8015d46:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015d4a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015d4e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015d52:	6803      	ldr	r3, [r0, #0]
 8015d54:	a904      	add	r1, sp, #16
 8015d56:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015d58:	4798      	blx	r3
 8015d5a:	1d29      	adds	r1, r5, #4
 8015d5c:	a802      	add	r0, sp, #8
 8015d5e:	f7ff fd7b 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015d62:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015d66:	88e0      	ldrh	r0, [r4, #6]
 8015d68:	7921      	ldrb	r1, [r4, #4]
 8015d6a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8015d6e:	8922      	ldrh	r2, [r4, #8]
 8015d70:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8015d72:	f88d 1014 	strb.w	r1, [sp, #20]
 8015d76:	eba3 0808 	sub.w	r8, r3, r8
 8015d7a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015d7e:	1bdf      	subs	r7, r3, r7
 8015d80:	b2bb      	uxth	r3, r7
 8015d82:	fa1f f888 	uxth.w	r8, r8
 8015d86:	8967      	ldrh	r7, [r4, #10]
 8015d88:	89a4      	ldrh	r4, [r4, #12]
 8015d8a:	4440      	add	r0, r8
 8015d8c:	4460      	add	r0, ip
 8015d8e:	441a      	add	r2, r3
 8015d90:	44b8      	add	r8, r7
 8015d92:	4423      	add	r3, r4
 8015d94:	f8ad 0016 	strh.w	r0, [sp, #22]
 8015d98:	4433      	add	r3, r6
 8015d9a:	4432      	add	r2, r6
 8015d9c:	44e0      	add	r8, ip
 8015d9e:	4c09      	ldr	r4, [pc, #36]	; (8015dc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8015da0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8015da2:	9404      	str	r4, [sp, #16]
 8015da4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015da8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8015dac:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015db0:	6803      	ldr	r3, [r0, #0]
 8015db2:	a904      	add	r1, sp, #16
 8015db4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015db6:	4798      	blx	r3
 8015db8:	b008      	add	sp, #32
 8015dba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015dbe:	bf00      	nop
 8015dc0:	0802c334 	.word	0x0802c334
 8015dc4:	0802c348 	.word	0x0802c348

08015dc8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8015dc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015dca:	4604      	mov	r4, r0
 8015dcc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8015dd0:	3201      	adds	r2, #1
 8015dd2:	d112      	bne.n	8015dfa <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8015dd4:	6803      	ldr	r3, [r0, #0]
 8015dd6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015dda:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015dde:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015de2:	2500      	movs	r5, #0
 8015de4:	9500      	str	r5, [sp, #0]
 8015de6:	466d      	mov	r5, sp
 8015de8:	4629      	mov	r1, r5
 8015dea:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015dee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015df0:	4798      	blx	r3
 8015df2:	e895 0003 	ldmia.w	r5, {r0, r1}
 8015df6:	e884 0003 	stmia.w	r4, {r0, r1}
 8015dfa:	4620      	mov	r0, r4
 8015dfc:	b003      	add	sp, #12
 8015dfe:	bd30      	pop	{r4, r5, pc}

08015e00 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8015e00:	b513      	push	{r0, r1, r4, lr}
 8015e02:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8015e06:	3301      	adds	r3, #1
 8015e08:	4604      	mov	r4, r0
 8015e0a:	d109      	bne.n	8015e20 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8015e0c:	4601      	mov	r1, r0
 8015e0e:	4668      	mov	r0, sp
 8015e10:	f7ff fd22 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015e14:	f8bd 3000 	ldrh.w	r3, [sp]
 8015e18:	8423      	strh	r3, [r4, #32]
 8015e1a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015e1e:	8463      	strh	r3, [r4, #34]	; 0x22
 8015e20:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8015e24:	b002      	add	sp, #8
 8015e26:	bd10      	pop	{r4, pc}

08015e28 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8015e28:	b513      	push	{r0, r1, r4, lr}
 8015e2a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8015e2e:	3301      	adds	r3, #1
 8015e30:	4604      	mov	r4, r0
 8015e32:	d109      	bne.n	8015e48 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8015e34:	4601      	mov	r1, r0
 8015e36:	4668      	mov	r0, sp
 8015e38:	f7ff fd0e 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015e3c:	f8bd 3000 	ldrh.w	r3, [sp]
 8015e40:	8423      	strh	r3, [r4, #32]
 8015e42:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015e46:	8463      	strh	r3, [r4, #34]	; 0x22
 8015e48:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8015e4c:	b002      	add	sp, #8
 8015e4e:	bd10      	pop	{r4, pc}

08015e50 <_ZN8touchgfx6ScreenC1Ev>:
 8015e50:	b570      	push	{r4, r5, r6, lr}
 8015e52:	4605      	mov	r5, r0
 8015e54:	4b16      	ldr	r3, [pc, #88]	; (8015eb0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8015e56:	f845 3b04 	str.w	r3, [r5], #4
 8015e5a:	2300      	movs	r3, #0
 8015e5c:	8103      	strh	r3, [r0, #8]
 8015e5e:	8143      	strh	r3, [r0, #10]
 8015e60:	8183      	strh	r3, [r0, #12]
 8015e62:	81c3      	strh	r3, [r0, #14]
 8015e64:	8203      	strh	r3, [r0, #16]
 8015e66:	8243      	strh	r3, [r0, #18]
 8015e68:	8283      	strh	r3, [r0, #20]
 8015e6a:	82c3      	strh	r3, [r0, #22]
 8015e6c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8015e70:	6203      	str	r3, [r0, #32]
 8015e72:	8483      	strh	r3, [r0, #36]	; 0x24
 8015e74:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015e76:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8015e7a:	4a0e      	ldr	r2, [pc, #56]	; (8015eb4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8015e7c:	6343      	str	r3, [r0, #52]	; 0x34
 8015e7e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8015e82:	4b0d      	ldr	r3, [pc, #52]	; (8015eb8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8015e84:	6042      	str	r2, [r0, #4]
 8015e86:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015e8a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8015e8c:	4a0b      	ldr	r2, [pc, #44]	; (8015ebc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8015e8e:	4604      	mov	r4, r0
 8015e90:	2101      	movs	r1, #1
 8015e92:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8015e96:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8015e9a:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015e9e:	4628      	mov	r0, r5
 8015ea0:	4798      	blx	r3
 8015ea2:	6863      	ldr	r3, [r4, #4]
 8015ea4:	4628      	mov	r0, r5
 8015ea6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015ea8:	4631      	mov	r1, r6
 8015eaa:	4798      	blx	r3
 8015eac:	4620      	mov	r0, r4
 8015eae:	bd70      	pop	{r4, r5, r6, pc}
 8015eb0:	0802c370 	.word	0x0802c370
 8015eb4:	0802bbd4 	.word	0x0802bbd4
 8015eb8:	200137b2 	.word	0x200137b2
 8015ebc:	200137b0 	.word	0x200137b0

08015ec0 <_ZN8touchgfx6Screen4drawEv>:
 8015ec0:	b507      	push	{r0, r1, r2, lr}
 8015ec2:	4b09      	ldr	r3, [pc, #36]	; (8015ee8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8015ec4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015ec8:	4b08      	ldr	r3, [pc, #32]	; (8015eec <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8015eca:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015ece:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015ed2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015ed6:	6803      	ldr	r3, [r0, #0]
 8015ed8:	2100      	movs	r1, #0
 8015eda:	9100      	str	r1, [sp, #0]
 8015edc:	689b      	ldr	r3, [r3, #8]
 8015ede:	4669      	mov	r1, sp
 8015ee0:	4798      	blx	r3
 8015ee2:	b003      	add	sp, #12
 8015ee4:	f85d fb04 	ldr.w	pc, [sp], #4
 8015ee8:	200137b0 	.word	0x200137b0
 8015eec:	200137b2 	.word	0x200137b2

08015ef0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8015ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ef4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8015ef8:	2b00      	cmp	r3, #0
 8015efa:	b089      	sub	sp, #36	; 0x24
 8015efc:	4680      	mov	r8, r0
 8015efe:	460c      	mov	r4, r1
 8015f00:	4615      	mov	r5, r2
 8015f02:	dd0e      	ble.n	8015f22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015f04:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015f08:	2b00      	cmp	r3, #0
 8015f0a:	dd0a      	ble.n	8015f22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015f0c:	4628      	mov	r0, r5
 8015f0e:	f7ff ff5b 	bl	8015dc8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015f12:	4621      	mov	r1, r4
 8015f14:	f7fe fa3d 	bl	8014392 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015f18:	69eb      	ldr	r3, [r5, #28]
 8015f1a:	b928      	cbnz	r0, 8015f28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8015f1c:	461d      	mov	r5, r3
 8015f1e:	2b00      	cmp	r3, #0
 8015f20:	d1f4      	bne.n	8015f0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8015f22:	b009      	add	sp, #36	; 0x24
 8015f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f28:	ae04      	add	r6, sp, #16
 8015f2a:	2b00      	cmp	r3, #0
 8015f2c:	f000 80b5 	beq.w	801609a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015f30:	682b      	ldr	r3, [r5, #0]
 8015f32:	4629      	mov	r1, r5
 8015f34:	68db      	ldr	r3, [r3, #12]
 8015f36:	a802      	add	r0, sp, #8
 8015f38:	4798      	blx	r3
 8015f3a:	4628      	mov	r0, r5
 8015f3c:	f7ff ff60 	bl	8015e00 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015f40:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8015f44:	4407      	add	r7, r0
 8015f46:	4628      	mov	r0, r5
 8015f48:	f7ff ff6e 	bl	8015e28 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015f4c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015f50:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8015f54:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015f58:	4418      	add	r0, r3
 8015f5a:	4621      	mov	r1, r4
 8015f5c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8015f60:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015f64:	b23f      	sxth	r7, r7
 8015f66:	4630      	mov	r0, r6
 8015f68:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015f6c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8015f70:	f7f9 f9dc 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 8015f74:	4628      	mov	r0, r5
 8015f76:	f7ff ff27 	bl	8015dc8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015f7a:	4602      	mov	r2, r0
 8015f7c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8015f80:	ab06      	add	r3, sp, #24
 8015f82:	e883 0003 	stmia.w	r3, {r0, r1}
 8015f86:	4611      	mov	r1, r2
 8015f88:	4618      	mov	r0, r3
 8015f8a:	f7f9 f9cf 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 8015f8e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015f92:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015f96:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8015f9a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8015f9e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8015fa2:	4299      	cmp	r1, r3
 8015fa4:	d10b      	bne.n	8015fbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015fa6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015faa:	4552      	cmp	r2, sl
 8015fac:	d107      	bne.n	8015fbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015fae:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8015fb2:	455a      	cmp	r2, fp
 8015fb4:	d103      	bne.n	8015fbe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015fb6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8015fba:	454a      	cmp	r2, r9
 8015fbc:	d06d      	beq.n	801609a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015fbe:	f1bb 0f00 	cmp.w	fp, #0
 8015fc2:	dd65      	ble.n	8016090 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015fc4:	f1b9 0f00 	cmp.w	r9, #0
 8015fc8:	dd62      	ble.n	8016090 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015fca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015fce:	fa1f f08a 	uxth.w	r0, sl
 8015fd2:	4552      	cmp	r2, sl
 8015fd4:	9000      	str	r0, [sp, #0]
 8015fd6:	da12      	bge.n	8015ffe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8015fd8:	9301      	str	r3, [sp, #4]
 8015fda:	9b00      	ldr	r3, [sp, #0]
 8015fdc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015fe0:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015fe4:	1a9a      	subs	r2, r3, r2
 8015fe6:	f8ad 1010 	strh.w	r1, [sp, #16]
 8015fea:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015fee:	f8ad 2016 	strh.w	r2, [sp, #22]
 8015ff2:	69ea      	ldr	r2, [r5, #28]
 8015ff4:	4631      	mov	r1, r6
 8015ff6:	4640      	mov	r0, r8
 8015ff8:	f7ff ff7a 	bl	8015ef0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015ffc:	9b01      	ldr	r3, [sp, #4]
 8015ffe:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016002:	429a      	cmp	r2, r3
 8016004:	b29f      	uxth	r7, r3
 8016006:	da0d      	bge.n	8016024 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016008:	f8ad 2010 	strh.w	r2, [sp, #16]
 801600c:	1aba      	subs	r2, r7, r2
 801600e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016012:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016016:	f8ad 9016 	strh.w	r9, [sp, #22]
 801601a:	69ea      	ldr	r2, [r5, #28]
 801601c:	4631      	mov	r1, r6
 801601e:	4640      	mov	r0, r8
 8016020:	f7ff ff66 	bl	8015ef0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016024:	8822      	ldrh	r2, [r4, #0]
 8016026:	88a3      	ldrh	r3, [r4, #4]
 8016028:	445f      	add	r7, fp
 801602a:	4413      	add	r3, r2
 801602c:	b29b      	uxth	r3, r3
 801602e:	b2bf      	uxth	r7, r7
 8016030:	b23a      	sxth	r2, r7
 8016032:	b219      	sxth	r1, r3
 8016034:	4291      	cmp	r1, r2
 8016036:	dd0d      	ble.n	8016054 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016038:	1bdb      	subs	r3, r3, r7
 801603a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801603e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016042:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016046:	f8ad 9016 	strh.w	r9, [sp, #22]
 801604a:	69ea      	ldr	r2, [r5, #28]
 801604c:	4631      	mov	r1, r6
 801604e:	4640      	mov	r0, r8
 8016050:	f7ff ff4e 	bl	8015ef0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016054:	88e2      	ldrh	r2, [r4, #6]
 8016056:	8863      	ldrh	r3, [r4, #2]
 8016058:	4413      	add	r3, r2
 801605a:	9a00      	ldr	r2, [sp, #0]
 801605c:	444a      	add	r2, r9
 801605e:	b29b      	uxth	r3, r3
 8016060:	fa1f f982 	uxth.w	r9, r2
 8016064:	fa0f f289 	sxth.w	r2, r9
 8016068:	b219      	sxth	r1, r3
 801606a:	428a      	cmp	r2, r1
 801606c:	da15      	bge.n	801609a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801606e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016072:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016076:	f8ad 1014 	strh.w	r1, [sp, #20]
 801607a:	eba3 0309 	sub.w	r3, r3, r9
 801607e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016082:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016086:	f8ad 3016 	strh.w	r3, [sp, #22]
 801608a:	69ea      	ldr	r2, [r5, #28]
 801608c:	4631      	mov	r1, r6
 801608e:	e001      	b.n	8016094 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016090:	69ea      	ldr	r2, [r5, #28]
 8016092:	4621      	mov	r1, r4
 8016094:	4640      	mov	r0, r8
 8016096:	f7ff ff2b 	bl	8015ef0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801609a:	4628      	mov	r0, r5
 801609c:	f7ff fe94 	bl	8015dc8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80160a0:	6861      	ldr	r1, [r4, #4]
 80160a2:	4602      	mov	r2, r0
 80160a4:	6820      	ldr	r0, [r4, #0]
 80160a6:	4633      	mov	r3, r6
 80160a8:	c303      	stmia	r3!, {r0, r1}
 80160aa:	4611      	mov	r1, r2
 80160ac:	4630      	mov	r0, r6
 80160ae:	f7f9 f93d 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 80160b2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80160b6:	2b00      	cmp	r3, #0
 80160b8:	f77f af33 	ble.w	8015f22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80160bc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80160c0:	2b00      	cmp	r3, #0
 80160c2:	f77f af2e 	ble.w	8015f22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80160c6:	4628      	mov	r0, r5
 80160c8:	f7ff fe9a 	bl	8015e00 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80160cc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80160d0:	1a18      	subs	r0, r3, r0
 80160d2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80160d6:	4628      	mov	r0, r5
 80160d8:	f7ff fea6 	bl	8015e28 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80160dc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80160e0:	1a18      	subs	r0, r3, r0
 80160e2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80160e6:	682b      	ldr	r3, [r5, #0]
 80160e8:	4631      	mov	r1, r6
 80160ea:	689b      	ldr	r3, [r3, #8]
 80160ec:	4628      	mov	r0, r5
 80160ee:	4798      	blx	r3
 80160f0:	e717      	b.n	8015f22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080160f2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80160f2:	b570      	push	{r4, r5, r6, lr}
 80160f4:	460c      	mov	r4, r1
 80160f6:	b086      	sub	sp, #24
 80160f8:	1d06      	adds	r6, r0, #4
 80160fa:	2300      	movs	r3, #0
 80160fc:	4631      	mov	r1, r6
 80160fe:	4605      	mov	r5, r0
 8016100:	a802      	add	r0, sp, #8
 8016102:	9301      	str	r3, [sp, #4]
 8016104:	f7ff fba8 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016108:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801610c:	8822      	ldrh	r2, [r4, #0]
 801610e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016112:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016116:	f8ad 0014 	strh.w	r0, [sp, #20]
 801611a:	1ad2      	subs	r2, r2, r3
 801611c:	8863      	ldrh	r3, [r4, #2]
 801611e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016122:	1a5b      	subs	r3, r3, r1
 8016124:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016128:	f8ad 1016 	strh.w	r1, [sp, #22]
 801612c:	aa01      	add	r2, sp, #4
 801612e:	a904      	add	r1, sp, #16
 8016130:	4630      	mov	r0, r6
 8016132:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016136:	f7f9 f9d1 	bl	800f4dc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801613a:	9a01      	ldr	r2, [sp, #4]
 801613c:	b11a      	cbz	r2, 8016146 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801613e:	4621      	mov	r1, r4
 8016140:	4628      	mov	r0, r5
 8016142:	f7ff fed5 	bl	8015ef0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016146:	b006      	add	sp, #24
 8016148:	bd70      	pop	{r4, r5, r6, pc}

0801614a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801614a:	b530      	push	{r4, r5, lr}
 801614c:	4602      	mov	r2, r0
 801614e:	4604      	mov	r4, r0
 8016150:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016154:	b085      	sub	sp, #20
 8016156:	460d      	mov	r5, r1
 8016158:	6851      	ldr	r1, [r2, #4]
 801615a:	466b      	mov	r3, sp
 801615c:	c303      	stmia	r3!, {r0, r1}
 801615e:	4629      	mov	r1, r5
 8016160:	4668      	mov	r0, sp
 8016162:	f7f9 f8e3 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 8016166:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801616a:	b12b      	cbz	r3, 8016178 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801616c:	4669      	mov	r1, sp
 801616e:	4620      	mov	r0, r4
 8016170:	f7ff ffbf 	bl	80160f2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016174:	b005      	add	sp, #20
 8016176:	bd30      	pop	{r4, r5, pc}
 8016178:	3404      	adds	r4, #4
 801617a:	4621      	mov	r1, r4
 801617c:	a802      	add	r0, sp, #8
 801617e:	f7ff fb6b 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016182:	f8bd 3000 	ldrh.w	r3, [sp]
 8016186:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801618a:	1a9b      	subs	r3, r3, r2
 801618c:	f8ad 3000 	strh.w	r3, [sp]
 8016190:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016194:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016198:	4669      	mov	r1, sp
 801619a:	1a9b      	subs	r3, r3, r2
 801619c:	4620      	mov	r0, r4
 801619e:	f8ad 3002 	strh.w	r3, [sp, #2]
 80161a2:	f7f9 f962 	bl	800f46a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80161a6:	e7e5      	b.n	8016174 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080161a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80161a8:	680a      	ldr	r2, [r1, #0]
 80161aa:	460b      	mov	r3, r1
 80161ac:	6992      	ldr	r2, [r2, #24]
 80161ae:	1d01      	adds	r1, r0, #4
 80161b0:	4618      	mov	r0, r3
 80161b2:	4710      	bx	r2

080161b4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80161b4:	4298      	cmp	r0, r3
 80161b6:	d200      	bcs.n	80161ba <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80161b8:	b913      	cbnz	r3, 80161c0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80161ba:	440a      	add	r2, r1
 80161bc:	b210      	sxth	r0, r2
 80161be:	4770      	bx	lr
 80161c0:	ee07 0a90 	vmov	s15, r0
 80161c4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80161c8:	ee07 3a90 	vmov	s15, r3
 80161cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80161d0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80161d4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80161d8:	ee37 7a66 	vsub.f32	s14, s14, s13
 80161dc:	ee07 2a90 	vmov	s15, r2
 80161e0:	ee67 5a07 	vmul.f32	s11, s14, s14
 80161e4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80161e8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80161ec:	ee07 1a90 	vmov	s15, r1
 80161f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80161f4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80161f8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80161fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016200:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016204:	bfcc      	ite	gt
 8016206:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801620a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801620e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016212:	ee17 3a90 	vmov	r3, s15
 8016216:	b218      	sxth	r0, r3
 8016218:	4770      	bx	lr

0801621a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801621a:	4298      	cmp	r0, r3
 801621c:	d200      	bcs.n	8016220 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801621e:	b913      	cbnz	r3, 8016226 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016220:	440a      	add	r2, r1
 8016222:	b210      	sxth	r0, r2
 8016224:	4770      	bx	lr
 8016226:	ee07 2a90 	vmov	s15, r2
 801622a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801622e:	ee07 0a90 	vmov	s15, r0
 8016232:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016236:	ee67 7a27 	vmul.f32	s15, s14, s15
 801623a:	ee07 3a10 	vmov	s14, r3
 801623e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016242:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016246:	ee07 1a90 	vmov	s15, r1
 801624a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801624e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016252:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016256:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801625a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801625e:	bfcc      	ite	gt
 8016260:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016264:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016268:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801626c:	ee17 3a90 	vmov	r3, s15
 8016270:	b218      	sxth	r0, r3
 8016272:	4770      	bx	lr

08016274 <_ZN8touchgfx12TextProviderC1Ev>:
 8016274:	b538      	push	{r3, r4, r5, lr}
 8016276:	2500      	movs	r5, #0
 8016278:	2302      	movs	r3, #2
 801627a:	4604      	mov	r4, r0
 801627c:	e9c0 5500 	strd	r5, r5, [r0]
 8016280:	7403      	strb	r3, [r0, #16]
 8016282:	6145      	str	r5, [r0, #20]
 8016284:	7605      	strb	r5, [r0, #24]
 8016286:	83c5      	strh	r5, [r0, #30]
 8016288:	8405      	strh	r5, [r0, #32]
 801628a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801628c:	8705      	strh	r5, [r0, #56]	; 0x38
 801628e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016290:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016294:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016298:	220e      	movs	r2, #14
 801629a:	4629      	mov	r1, r5
 801629c:	304c      	adds	r0, #76	; 0x4c
 801629e:	f011 feac 	bl	8027ffa <memset>
 80162a2:	2301      	movs	r3, #1
 80162a4:	4620      	mov	r0, r4
 80162a6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80162aa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80162ae:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80162b2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80162b6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80162ba:	f7f1 f979 	bl	80075b0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80162be:	4620      	mov	r0, r4
 80162c0:	bd38      	pop	{r3, r4, r5, pc}

080162c2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80162c2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80162c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80162c8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80162ca:	fab0 f080 	clz	r0, r0
 80162ce:	0940      	lsrs	r0, r0, #5
 80162d0:	4770      	bx	lr

080162d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80162d2:	b530      	push	{r4, r5, lr}
 80162d4:	2500      	movs	r5, #0
 80162d6:	2401      	movs	r4, #1
 80162d8:	6843      	ldr	r3, [r0, #4]
 80162da:	b913      	cbnz	r3, 80162e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80162dc:	6803      	ldr	r3, [r0, #0]
 80162de:	b313      	cbz	r3, 8016326 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80162e0:	6043      	str	r3, [r0, #4]
 80162e2:	7e03      	ldrb	r3, [r0, #24]
 80162e4:	b143      	cbz	r3, 80162f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80162e6:	6943      	ldr	r3, [r0, #20]
 80162e8:	b12b      	cbz	r3, 80162f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80162ea:	881a      	ldrh	r2, [r3, #0]
 80162ec:	b11a      	cbz	r2, 80162f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80162ee:	1c9a      	adds	r2, r3, #2
 80162f0:	6142      	str	r2, [r0, #20]
 80162f2:	8818      	ldrh	r0, [r3, #0]
 80162f4:	bd30      	pop	{r4, r5, pc}
 80162f6:	7605      	strb	r5, [r0, #24]
 80162f8:	6843      	ldr	r3, [r0, #4]
 80162fa:	8819      	ldrh	r1, [r3, #0]
 80162fc:	b199      	cbz	r1, 8016326 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80162fe:	1c9a      	adds	r2, r3, #2
 8016300:	2902      	cmp	r1, #2
 8016302:	6042      	str	r2, [r0, #4]
 8016304:	d1f5      	bne.n	80162f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016306:	7c03      	ldrb	r3, [r0, #16]
 8016308:	2b01      	cmp	r3, #1
 801630a:	d8e5      	bhi.n	80162d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801630c:	1c5a      	adds	r2, r3, #1
 801630e:	3302      	adds	r3, #2
 8016310:	7402      	strb	r2, [r0, #16]
 8016312:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016316:	6143      	str	r3, [r0, #20]
 8016318:	2b00      	cmp	r3, #0
 801631a:	d0dd      	beq.n	80162d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801631c:	881b      	ldrh	r3, [r3, #0]
 801631e:	2b00      	cmp	r3, #0
 8016320:	d0da      	beq.n	80162d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016322:	7604      	strb	r4, [r0, #24]
 8016324:	e7d8      	b.n	80162d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016326:	2000      	movs	r0, #0
 8016328:	e7e4      	b.n	80162f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801632a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801632a:	b430      	push	{r4, r5}
 801632c:	6001      	str	r1, [r0, #0]
 801632e:	2100      	movs	r1, #0
 8016330:	6041      	str	r1, [r0, #4]
 8016332:	6815      	ldr	r5, [r2, #0]
 8016334:	6085      	str	r5, [r0, #8]
 8016336:	6852      	ldr	r2, [r2, #4]
 8016338:	6443      	str	r3, [r0, #68]	; 0x44
 801633a:	9b02      	ldr	r3, [sp, #8]
 801633c:	60c2      	str	r2, [r0, #12]
 801633e:	7401      	strb	r1, [r0, #16]
 8016340:	6141      	str	r1, [r0, #20]
 8016342:	7601      	strb	r1, [r0, #24]
 8016344:	8701      	strh	r1, [r0, #56]	; 0x38
 8016346:	8401      	strh	r1, [r0, #32]
 8016348:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801634c:	6483      	str	r3, [r0, #72]	; 0x48
 801634e:	bc30      	pop	{r4, r5}
 8016350:	f7f1 b92e 	b.w	80075b0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016354 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016354:	b408      	push	{r3}
 8016356:	b510      	push	{r4, lr}
 8016358:	b085      	sub	sp, #20
 801635a:	ac07      	add	r4, sp, #28
 801635c:	f854 3b04 	ldr.w	r3, [r4], #4
 8016360:	9300      	str	r3, [sp, #0]
 8016362:	4613      	mov	r3, r2
 8016364:	4622      	mov	r2, r4
 8016366:	9403      	str	r4, [sp, #12]
 8016368:	f7ff ffdf 	bl	801632a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801636c:	b005      	add	sp, #20
 801636e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016372:	b001      	add	sp, #4
 8016374:	4770      	bx	lr

08016376 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016376:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016378:	4605      	mov	r5, r0
 801637a:	4608      	mov	r0, r1
 801637c:	b1e9      	cbz	r1, 80163ba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801637e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016382:	460b      	mov	r3, r1
 8016384:	f101 0708 	add.w	r7, r1, #8
 8016388:	4622      	mov	r2, r4
 801638a:	6818      	ldr	r0, [r3, #0]
 801638c:	6859      	ldr	r1, [r3, #4]
 801638e:	4626      	mov	r6, r4
 8016390:	c603      	stmia	r6!, {r0, r1}
 8016392:	3308      	adds	r3, #8
 8016394:	42bb      	cmp	r3, r7
 8016396:	4634      	mov	r4, r6
 8016398:	d1f7      	bne.n	801638a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801639a:	6818      	ldr	r0, [r3, #0]
 801639c:	6030      	str	r0, [r6, #0]
 801639e:	889b      	ldrh	r3, [r3, #4]
 80163a0:	80b3      	strh	r3, [r6, #4]
 80163a2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80163a6:	015b      	lsls	r3, r3, #5
 80163a8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80163ac:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80163b0:	430b      	orrs	r3, r1
 80163b2:	425b      	negs	r3, r3
 80163b4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80163b8:	4610      	mov	r0, r2
 80163ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

080163bc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80163bc:	b538      	push	{r3, r4, r5, lr}
 80163be:	460c      	mov	r4, r1
 80163c0:	6811      	ldr	r1, [r2, #0]
 80163c2:	4610      	mov	r0, r2
 80163c4:	68cd      	ldr	r5, [r1, #12]
 80163c6:	4619      	mov	r1, r3
 80163c8:	47a8      	blx	r5
 80163ca:	2800      	cmp	r0, #0
 80163cc:	bf08      	it	eq
 80163ce:	4620      	moveq	r0, r4
 80163d0:	bd38      	pop	{r3, r4, r5, pc}
	...

080163d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80163d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80163d6:	4604      	mov	r4, r0
 80163d8:	4615      	mov	r5, r2
 80163da:	4608      	mov	r0, r1
 80163dc:	b93a      	cbnz	r2, 80163ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80163de:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80163e2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80163e6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80163ea:	4628      	mov	r0, r5
 80163ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80163ee:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80163f2:	8893      	ldrh	r3, [r2, #4]
 80163f4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80163f8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80163fc:	79ee      	ldrb	r6, [r5, #7]
 80163fe:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016402:	4316      	orrs	r6, r2
 8016404:	19da      	adds	r2, r3, r7
 8016406:	b291      	uxth	r1, r2
 8016408:	291d      	cmp	r1, #29
 801640a:	b2b7      	uxth	r7, r6
 801640c:	d87a      	bhi.n	8016504 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801640e:	2201      	movs	r2, #1
 8016410:	408a      	lsls	r2, r1
 8016412:	4975      	ldr	r1, [pc, #468]	; (80165e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016414:	420a      	tst	r2, r1
 8016416:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801641a:	d12d      	bne.n	8016478 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801641c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016420:	d070      	beq.n	8016504 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016422:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016426:	462b      	mov	r3, r5
 8016428:	f105 0e08 	add.w	lr, r5, #8
 801642c:	4615      	mov	r5, r2
 801642e:	6818      	ldr	r0, [r3, #0]
 8016430:	6859      	ldr	r1, [r3, #4]
 8016432:	4694      	mov	ip, r2
 8016434:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016438:	3308      	adds	r3, #8
 801643a:	4573      	cmp	r3, lr
 801643c:	4662      	mov	r2, ip
 801643e:	d1f6      	bne.n	801642e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016440:	6818      	ldr	r0, [r3, #0]
 8016442:	f8cc 0000 	str.w	r0, [ip]
 8016446:	889b      	ldrh	r3, [r3, #4]
 8016448:	f8ac 3004 	strh.w	r3, [ip, #4]
 801644c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016450:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016454:	b2b3      	uxth	r3, r6
 8016456:	1aca      	subs	r2, r1, r3
 8016458:	b292      	uxth	r2, r2
 801645a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801645e:	10d2      	asrs	r2, r2, #3
 8016460:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016464:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016468:	4302      	orrs	r2, r0
 801646a:	1bcf      	subs	r7, r1, r7
 801646c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016470:	1afb      	subs	r3, r7, r3
 8016472:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016476:	e7b8      	b.n	80163ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016478:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801647a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801647e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016480:	f640 6333 	movw	r3, #3635	; 0xe33
 8016484:	4299      	cmp	r1, r3
 8016486:	d110      	bne.n	80164aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016488:	6803      	ldr	r3, [r0, #0]
 801648a:	68db      	ldr	r3, [r3, #12]
 801648c:	4798      	blx	r3
 801648e:	7b41      	ldrb	r1, [r0, #13]
 8016490:	00cb      	lsls	r3, r1, #3
 8016492:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016496:	7a03      	ldrb	r3, [r0, #8]
 8016498:	0648      	lsls	r0, r1, #25
 801649a:	ea43 0302 	orr.w	r3, r3, r2
 801649e:	bf44      	itt	mi
 80164a0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80164a4:	b21b      	sxthmi	r3, r3
 80164a6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80164aa:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80164ae:	443b      	add	r3, r7
 80164b0:	4433      	add	r3, r6
 80164b2:	b29b      	uxth	r3, r3
 80164b4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80164b8:	462a      	mov	r2, r5
 80164ba:	f105 0c08 	add.w	ip, r5, #8
 80164be:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80164c2:	4635      	mov	r5, r6
 80164c4:	6810      	ldr	r0, [r2, #0]
 80164c6:	6851      	ldr	r1, [r2, #4]
 80164c8:	4637      	mov	r7, r6
 80164ca:	c703      	stmia	r7!, {r0, r1}
 80164cc:	3208      	adds	r2, #8
 80164ce:	4562      	cmp	r2, ip
 80164d0:	463e      	mov	r6, r7
 80164d2:	d1f7      	bne.n	80164c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80164d4:	6810      	ldr	r0, [r2, #0]
 80164d6:	6038      	str	r0, [r7, #0]
 80164d8:	8892      	ldrh	r2, [r2, #4]
 80164da:	80ba      	strh	r2, [r7, #4]
 80164dc:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80164e0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80164e4:	10db      	asrs	r3, r3, #3
 80164e6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80164ea:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80164ee:	4313      	orrs	r3, r2
 80164f0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80164f4:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80164f8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80164fc:	1a9b      	subs	r3, r3, r2
 80164fe:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016502:	e772      	b.n	80163ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016504:	f023 0204 	bic.w	r2, r3, #4
 8016508:	f640 611b 	movw	r1, #3611	; 0xe1b
 801650c:	428a      	cmp	r2, r1
 801650e:	d003      	beq.n	8016518 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016510:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016514:	4293      	cmp	r3, r2
 8016516:	d120      	bne.n	801655a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016518:	3b01      	subs	r3, #1
 801651a:	4602      	mov	r2, r0
 801651c:	b29b      	uxth	r3, r3
 801651e:	4629      	mov	r1, r5
 8016520:	4620      	mov	r0, r4
 8016522:	f7ff ff4b 	bl	80163bc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016526:	7b41      	ldrb	r1, [r0, #13]
 8016528:	00cb      	lsls	r3, r1, #3
 801652a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801652e:	7a03      	ldrb	r3, [r0, #8]
 8016530:	0649      	lsls	r1, r1, #25
 8016532:	ea43 0302 	orr.w	r3, r3, r2
 8016536:	bf44      	itt	mi
 8016538:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801653c:	b21b      	sxthmi	r3, r3
 801653e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016542:	7b6b      	ldrb	r3, [r5, #13]
 8016544:	7aaa      	ldrb	r2, [r5, #10]
 8016546:	005b      	lsls	r3, r3, #1
 8016548:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801654c:	4313      	orrs	r3, r2
 801654e:	115a      	asrs	r2, r3, #5
 8016550:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016554:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016558:	e036      	b.n	80165c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801655a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801655e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016562:	7a2a      	ldrb	r2, [r5, #8]
 8016564:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016568:	ea42 0201 	orr.w	r2, r2, r1
 801656c:	bf1c      	itt	ne
 801656e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016572:	b212      	sxthne	r2, r2
 8016574:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016578:	f640 6109 	movw	r1, #3593	; 0xe09
 801657c:	f023 0210 	bic.w	r2, r3, #16
 8016580:	428a      	cmp	r2, r1
 8016582:	d003      	beq.n	801658c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016584:	f640 6213 	movw	r2, #3603	; 0xe13
 8016588:	4293      	cmp	r3, r2
 801658a:	d12a      	bne.n	80165e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801658c:	7b6e      	ldrb	r6, [r5, #13]
 801658e:	0076      	lsls	r6, r6, #1
 8016590:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016594:	7aae      	ldrb	r6, [r5, #10]
 8016596:	4316      	orrs	r6, r2
 8016598:	f640 6213 	movw	r2, #3603	; 0xe13
 801659c:	4293      	cmp	r3, r2
 801659e:	bf18      	it	ne
 80165a0:	f103 33ff 	addne.w	r3, r3, #4294967295
 80165a4:	4602      	mov	r2, r0
 80165a6:	bf14      	ite	ne
 80165a8:	b29b      	uxthne	r3, r3
 80165aa:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80165ae:	4629      	mov	r1, r5
 80165b0:	4620      	mov	r0, r4
 80165b2:	f7ff ff03 	bl	80163bc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80165b6:	7b43      	ldrb	r3, [r0, #13]
 80165b8:	7a82      	ldrb	r2, [r0, #10]
 80165ba:	005b      	lsls	r3, r3, #1
 80165bc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80165c0:	4313      	orrs	r3, r2
 80165c2:	1af6      	subs	r6, r6, r3
 80165c4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80165c8:	7b69      	ldrb	r1, [r5, #13]
 80165ca:	00cb      	lsls	r3, r1, #3
 80165cc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80165d0:	7a2b      	ldrb	r3, [r5, #8]
 80165d2:	4313      	orrs	r3, r2
 80165d4:	064a      	lsls	r2, r1, #25
 80165d6:	bf44      	itt	mi
 80165d8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80165dc:	b21b      	sxthmi	r3, r3
 80165de:	1bdb      	subs	r3, r3, r7
 80165e0:	e747      	b.n	8016472 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80165e2:	2300      	movs	r3, #0
 80165e4:	e7b6      	b.n	8016554 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 80165e6:	bf00      	nop
 80165e8:	3fc00079 	.word	0x3fc00079

080165ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80165ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80165f0:	4604      	mov	r4, r0
 80165f2:	b942      	cbnz	r2, 8016606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80165f4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80165f8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80165fc:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016600:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016604:	e047      	b.n	8016696 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016606:	7b51      	ldrb	r1, [r2, #13]
 8016608:	8893      	ldrh	r3, [r2, #4]
 801660a:	010d      	lsls	r5, r1, #4
 801660c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016610:	79d5      	ldrb	r5, [r2, #7]
 8016612:	4305      	orrs	r5, r0
 8016614:	2d04      	cmp	r5, #4
 8016616:	bfcc      	ite	gt
 8016618:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801661c:	f04f 0e01 	movle.w	lr, #1
 8016620:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016624:	f200 80ab 	bhi.w	801677e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016628:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801662c:	4283      	cmp	r3, r0
 801662e:	d216      	bcs.n	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016630:	f240 605b 	movw	r0, #1627	; 0x65b
 8016634:	4283      	cmp	r3, r0
 8016636:	d859      	bhi.n	80166ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016638:	f240 6057 	movw	r0, #1623	; 0x657
 801663c:	4283      	cmp	r3, r0
 801663e:	d20e      	bcs.n	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016640:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016644:	d24a      	bcs.n	80166dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016646:	f240 604e 	movw	r0, #1614	; 0x64e
 801664a:	4283      	cmp	r3, r0
 801664c:	d207      	bcs.n	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801664e:	f240 601a 	movw	r0, #1562	; 0x61a
 8016652:	4283      	cmp	r3, r0
 8016654:	d02a      	beq.n	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016656:	d821      	bhi.n	801669c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016658:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801665c:	d35b      	bcc.n	8016716 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801665e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016662:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016666:	f040 80d0 	bne.w	801680a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801666a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801666e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016672:	f040 80ca 	bne.w	801680a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016676:	00cb      	lsls	r3, r1, #3
 8016678:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801667c:	7a13      	ldrb	r3, [r2, #8]
 801667e:	0649      	lsls	r1, r1, #25
 8016680:	ea43 0300 	orr.w	r3, r3, r0
 8016684:	bf44      	itt	mi
 8016686:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801668a:	b21b      	sxthmi	r3, r3
 801668c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016690:	1b5d      	subs	r5, r3, r5
 8016692:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016696:	4610      	mov	r0, r2
 8016698:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801669c:	f240 604b 	movw	r0, #1611	; 0x64b
 80166a0:	4283      	cmp	r3, r0
 80166a2:	d338      	bcc.n	8016716 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80166a4:	f240 604c 	movw	r0, #1612	; 0x64c
 80166a8:	4283      	cmp	r3, r0
 80166aa:	d9d8      	bls.n	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80166ac:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80166b0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80166b4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80166b8:	f040 80f2 	bne.w	80168a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80166bc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80166c0:	f040 80ee 	bne.w	80168a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80166c4:	00cb      	lsls	r3, r1, #3
 80166c6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80166ca:	7a13      	ldrb	r3, [r2, #8]
 80166cc:	064e      	lsls	r6, r1, #25
 80166ce:	ea43 0300 	orr.w	r3, r3, r0
 80166d2:	bf44      	itt	mi
 80166d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80166d8:	b21b      	sxthmi	r3, r3
 80166da:	e7d9      	b.n	8016690 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80166dc:	f240 6054 	movw	r0, #1620	; 0x654
 80166e0:	4283      	cmp	r3, r0
 80166e2:	d8e3      	bhi.n	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80166e4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80166e8:	d9e0      	bls.n	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80166ea:	e7b8      	b.n	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80166ec:	f240 6074 	movw	r0, #1652	; 0x674
 80166f0:	4283      	cmp	r3, r0
 80166f2:	d0b4      	beq.n	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80166f4:	d82d      	bhi.n	8016752 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80166f6:	f240 605e 	movw	r0, #1630	; 0x65e
 80166fa:	4283      	cmp	r3, r0
 80166fc:	d804      	bhi.n	8016708 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80166fe:	f240 605d 	movw	r0, #1629	; 0x65d
 8016702:	4283      	cmp	r3, r0
 8016704:	d3d2      	bcc.n	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016706:	e7aa      	b.n	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016708:	f240 605f 	movw	r0, #1631	; 0x65f
 801670c:	4283      	cmp	r3, r0
 801670e:	d0cd      	beq.n	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016710:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8016714:	d0a3      	beq.n	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016716:	00cb      	lsls	r3, r1, #3
 8016718:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801671c:	7a13      	ldrb	r3, [r2, #8]
 801671e:	0649      	lsls	r1, r1, #25
 8016720:	ea43 0300 	orr.w	r3, r3, r0
 8016724:	bf44      	itt	mi
 8016726:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801672a:	b21b      	sxthmi	r3, r3
 801672c:	1b5d      	subs	r5, r3, r5
 801672e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016732:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016736:	7b53      	ldrb	r3, [r2, #13]
 8016738:	015b      	lsls	r3, r3, #5
 801673a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801673e:	7993      	ldrb	r3, [r2, #6]
 8016740:	430b      	orrs	r3, r1
 8016742:	005b      	lsls	r3, r3, #1
 8016744:	2105      	movs	r1, #5
 8016746:	fb93 f3f1 	sdiv	r3, r3, r1
 801674a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801674e:	440b      	add	r3, r1
 8016750:	e756      	b.n	8016600 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016752:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8016756:	4283      	cmp	r3, r0
 8016758:	d809      	bhi.n	801676e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801675a:	f240 60df 	movw	r0, #1759	; 0x6df
 801675e:	4283      	cmp	r3, r0
 8016760:	f4bf af7d 	bcs.w	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016764:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8016768:	2b05      	cmp	r3, #5
 801676a:	d8d4      	bhi.n	8016716 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801676c:	e777      	b.n	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801676e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8016772:	4283      	cmp	r3, r0
 8016774:	d09a      	beq.n	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016776:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801677a:	4283      	cmp	r3, r0
 801677c:	e7ca      	b.n	8016714 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801677e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8016782:	d22b      	bcs.n	80167dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016784:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8016788:	4283      	cmp	r3, r0
 801678a:	d28f      	bcs.n	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801678c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8016790:	4283      	cmp	r3, r0
 8016792:	d816      	bhi.n	80167c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016794:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8016798:	4283      	cmp	r3, r0
 801679a:	f4bf af60 	bcs.w	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801679e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80167a2:	4283      	cmp	r3, r0
 80167a4:	d80a      	bhi.n	80167bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80167a6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80167aa:	4283      	cmp	r3, r0
 80167ac:	f4bf af57 	bcs.w	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80167b0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80167b4:	4283      	cmp	r3, r0
 80167b6:	f43f af79 	beq.w	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80167ba:	e7ac      	b.n	8016716 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80167bc:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80167c0:	e7f8      	b.n	80167b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80167c2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80167c6:	4283      	cmp	r3, r0
 80167c8:	d802      	bhi.n	80167d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80167ca:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80167ce:	e798      	b.n	8016702 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80167d0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80167d4:	4283      	cmp	r3, r0
 80167d6:	f47f af42 	bne.w	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80167da:	e767      	b.n	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80167dc:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80167e0:	4283      	cmp	r3, r0
 80167e2:	f43f af63 	beq.w	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80167e6:	d802      	bhi.n	80167ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80167e8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80167ec:	e7f2      	b.n	80167d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80167ee:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80167f2:	4283      	cmp	r3, r0
 80167f4:	d805      	bhi.n	8016802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80167f6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80167fa:	4283      	cmp	r3, r0
 80167fc:	f4ff af2f 	bcc.w	801665e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016800:	e754      	b.n	80166ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016802:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8016806:	4283      	cmp	r3, r0
 8016808:	e7af      	b.n	801676a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801680a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801680e:	4617      	mov	r7, r2
 8016810:	f102 0808 	add.w	r8, r2, #8
 8016814:	4666      	mov	r6, ip
 8016816:	6838      	ldr	r0, [r7, #0]
 8016818:	6879      	ldr	r1, [r7, #4]
 801681a:	46e6      	mov	lr, ip
 801681c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016820:	3708      	adds	r7, #8
 8016822:	4547      	cmp	r7, r8
 8016824:	46f4      	mov	ip, lr
 8016826:	d1f6      	bne.n	8016816 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016828:	6838      	ldr	r0, [r7, #0]
 801682a:	f8ce 0000 	str.w	r0, [lr]
 801682e:	88b9      	ldrh	r1, [r7, #4]
 8016830:	f8ae 1004 	strh.w	r1, [lr, #4]
 8016834:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016838:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801683c:	d009      	beq.n	8016852 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801683e:	7b51      	ldrb	r1, [r2, #13]
 8016840:	7992      	ldrb	r2, [r2, #6]
 8016842:	0149      	lsls	r1, r1, #5
 8016844:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016848:	4311      	orrs	r1, r2
 801684a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801684e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016852:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016856:	b2ad      	uxth	r5, r5
 8016858:	d00d      	beq.n	8016876 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801685a:	442b      	add	r3, r5
 801685c:	b29b      	uxth	r3, r3
 801685e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016862:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016866:	10db      	asrs	r3, r3, #3
 8016868:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801686c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016870:	4313      	orrs	r3, r2
 8016872:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016876:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801687a:	00cb      	lsls	r3, r1, #3
 801687c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016880:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016884:	064f      	lsls	r7, r1, #25
 8016886:	ea43 0302 	orr.w	r3, r3, r2
 801688a:	bf44      	itt	mi
 801688c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016890:	b21b      	sxthmi	r3, r3
 8016892:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016896:	1b5b      	subs	r3, r3, r5
 8016898:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801689c:	4632      	mov	r2, r6
 801689e:	e6fa      	b.n	8016696 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80168a0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80168a4:	4617      	mov	r7, r2
 80168a6:	f102 0908 	add.w	r9, r2, #8
 80168aa:	4666      	mov	r6, ip
 80168ac:	6838      	ldr	r0, [r7, #0]
 80168ae:	6879      	ldr	r1, [r7, #4]
 80168b0:	46e0      	mov	r8, ip
 80168b2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80168b6:	3708      	adds	r7, #8
 80168b8:	454f      	cmp	r7, r9
 80168ba:	46c4      	mov	ip, r8
 80168bc:	d1f6      	bne.n	80168ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80168be:	6838      	ldr	r0, [r7, #0]
 80168c0:	f8c8 0000 	str.w	r0, [r8]
 80168c4:	88b9      	ldrh	r1, [r7, #4]
 80168c6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80168ca:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80168ce:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80168d2:	d009      	beq.n	80168e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80168d4:	7b51      	ldrb	r1, [r2, #13]
 80168d6:	7992      	ldrb	r2, [r2, #6]
 80168d8:	0149      	lsls	r1, r1, #5
 80168da:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80168de:	4311      	orrs	r1, r2
 80168e0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80168e4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80168e8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80168ec:	d00e      	beq.n	801690c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80168ee:	eba3 030e 	sub.w	r3, r3, lr
 80168f2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80168f6:	b29b      	uxth	r3, r3
 80168f8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80168fc:	10db      	asrs	r3, r3, #3
 80168fe:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016902:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016906:	4313      	orrs	r3, r2
 8016908:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801690c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016910:	00cb      	lsls	r3, r1, #3
 8016912:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016916:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801691a:	0648      	lsls	r0, r1, #25
 801691c:	ea43 0302 	orr.w	r3, r3, r2
 8016920:	bf44      	itt	mi
 8016922:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016926:	b21b      	sxthmi	r3, r3
 8016928:	1b5d      	subs	r5, r3, r5
 801692a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801692e:	e7b5      	b.n	801689c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016930 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016934:	461e      	mov	r6, r3
 8016936:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016938:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801693c:	4604      	mov	r4, r0
 801693e:	4617      	mov	r7, r2
 8016940:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016944:	f7f0 fdf2 	bl	800752c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016948:	4605      	mov	r5, r0
 801694a:	b918      	cbnz	r0, 8016954 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801694c:	6030      	str	r0, [r6, #0]
 801694e:	4628      	mov	r0, r5
 8016950:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016954:	683b      	ldr	r3, [r7, #0]
 8016956:	4601      	mov	r1, r0
 8016958:	68db      	ldr	r3, [r3, #12]
 801695a:	4638      	mov	r0, r7
 801695c:	4798      	blx	r3
 801695e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8016962:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8016966:	4602      	mov	r2, r0
 8016968:	6030      	str	r0, [r6, #0]
 801696a:	d213      	bcs.n	8016994 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801696c:	4643      	mov	r3, r8
 801696e:	4639      	mov	r1, r7
 8016970:	4620      	mov	r0, r4
 8016972:	f7ff fe3b 	bl	80165ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016976:	6030      	str	r0, [r6, #0]
 8016978:	6833      	ldr	r3, [r6, #0]
 801697a:	b143      	cbz	r3, 801698e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801697c:	7b5a      	ldrb	r2, [r3, #13]
 801697e:	7a9b      	ldrb	r3, [r3, #10]
 8016980:	0052      	lsls	r2, r2, #1
 8016982:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016986:	4313      	orrs	r3, r2
 8016988:	bf0c      	ite	eq
 801698a:	2301      	moveq	r3, #1
 801698c:	2300      	movne	r3, #0
 801698e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8016992:	e7dc      	b.n	801694e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016994:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8016998:	b29b      	uxth	r3, r3
 801699a:	2b7f      	cmp	r3, #127	; 0x7f
 801699c:	d804      	bhi.n	80169a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801699e:	4639      	mov	r1, r7
 80169a0:	4620      	mov	r0, r4
 80169a2:	f7ff fd17 	bl	80163d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80169a6:	e7e6      	b.n	8016976 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80169a8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80169ac:	2b00      	cmp	r3, #0
 80169ae:	d0e3      	beq.n	8016978 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80169b0:	f640 1302 	movw	r3, #2306	; 0x902
 80169b4:	429d      	cmp	r5, r3
 80169b6:	d1df      	bne.n	8016978 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80169b8:	4601      	mov	r1, r0
 80169ba:	4620      	mov	r0, r4
 80169bc:	f7ff fcdb 	bl	8016376 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80169c0:	e7d9      	b.n	8016976 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080169c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80169c2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80169c6:	461e      	mov	r6, r3
 80169c8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80169ca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80169ce:	4604      	mov	r4, r0
 80169d0:	4617      	mov	r7, r2
 80169d2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80169d6:	f7f0 fda9 	bl	800752c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80169da:	4605      	mov	r5, r0
 80169dc:	b918      	cbnz	r0, 80169e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80169de:	6030      	str	r0, [r6, #0]
 80169e0:	4628      	mov	r0, r5
 80169e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80169e6:	683b      	ldr	r3, [r7, #0]
 80169e8:	4601      	mov	r1, r0
 80169ea:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80169ee:	4638      	mov	r0, r7
 80169f0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80169f4:	47c8      	blx	r9
 80169f6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80169fa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80169fe:	4602      	mov	r2, r0
 8016a00:	6030      	str	r0, [r6, #0]
 8016a02:	d213      	bcs.n	8016a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8016a04:	4643      	mov	r3, r8
 8016a06:	4639      	mov	r1, r7
 8016a08:	4620      	mov	r0, r4
 8016a0a:	f7ff fdef 	bl	80165ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016a0e:	6030      	str	r0, [r6, #0]
 8016a10:	6833      	ldr	r3, [r6, #0]
 8016a12:	b143      	cbz	r3, 8016a26 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8016a14:	7b5a      	ldrb	r2, [r3, #13]
 8016a16:	7a9b      	ldrb	r3, [r3, #10]
 8016a18:	0052      	lsls	r2, r2, #1
 8016a1a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016a1e:	4313      	orrs	r3, r2
 8016a20:	bf0c      	ite	eq
 8016a22:	2301      	moveq	r3, #1
 8016a24:	2300      	movne	r3, #0
 8016a26:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8016a2a:	e7d9      	b.n	80169e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8016a2c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8016a30:	b29b      	uxth	r3, r3
 8016a32:	2b7f      	cmp	r3, #127	; 0x7f
 8016a34:	d804      	bhi.n	8016a40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8016a36:	4639      	mov	r1, r7
 8016a38:	4620      	mov	r0, r4
 8016a3a:	f7ff fccb 	bl	80163d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016a3e:	e7e6      	b.n	8016a0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8016a40:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8016a44:	2b00      	cmp	r3, #0
 8016a46:	d0e3      	beq.n	8016a10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016a48:	f640 1302 	movw	r3, #2306	; 0x902
 8016a4c:	429d      	cmp	r5, r3
 8016a4e:	d1df      	bne.n	8016a10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016a50:	4601      	mov	r1, r0
 8016a52:	4620      	mov	r0, r4
 8016a54:	f7ff fc8f 	bl	8016376 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016a58:	e7d9      	b.n	8016a0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08016a5a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8016a5a:	b510      	push	{r4, lr}
 8016a5c:	4604      	mov	r4, r0
 8016a5e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016a62:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016a64:	b1f1      	cbz	r1, 8016aa4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016a66:	2b0a      	cmp	r3, #10
 8016a68:	d02f      	beq.n	8016aca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8016a6a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8016a6c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8016a70:	3901      	subs	r1, #1
 8016a72:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8016a74:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8016a78:	1c51      	adds	r1, r2, #1
 8016a7a:	b289      	uxth	r1, r1
 8016a7c:	2901      	cmp	r1, #1
 8016a7e:	bf84      	itt	hi
 8016a80:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8016a84:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8016a86:	f103 0201 	add.w	r2, r3, #1
 8016a8a:	8722      	strh	r2, [r4, #56]	; 0x38
 8016a8c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016a8e:	bf98      	it	ls
 8016a90:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8016a92:	4413      	add	r3, r2
 8016a94:	b29b      	uxth	r3, r3
 8016a96:	2b09      	cmp	r3, #9
 8016a98:	bf88      	it	hi
 8016a9a:	3b0a      	subhi	r3, #10
 8016a9c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016aa0:	8458      	strh	r0, [r3, #34]	; 0x22
 8016aa2:	e7dc      	b.n	8016a5e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8016aa4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016aa6:	2b0a      	cmp	r3, #10
 8016aa8:	d00f      	beq.n	8016aca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8016aaa:	4620      	mov	r0, r4
 8016aac:	f7ff fc11 	bl	80162d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8016ab0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016ab2:	1c5a      	adds	r2, r3, #1
 8016ab4:	8722      	strh	r2, [r4, #56]	; 0x38
 8016ab6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016ab8:	4413      	add	r3, r2
 8016aba:	b29b      	uxth	r3, r3
 8016abc:	2b09      	cmp	r3, #9
 8016abe:	bf88      	it	hi
 8016ac0:	3b0a      	subhi	r3, #10
 8016ac2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016ac6:	8458      	strh	r0, [r3, #34]	; 0x22
 8016ac8:	e7ec      	b.n	8016aa4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016aca:	bd10      	pop	{r4, pc}

08016acc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8016acc:	b538      	push	{r3, r4, r5, lr}
 8016ace:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016ad0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8016ad4:	4604      	mov	r4, r0
 8016ad6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8016ad8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8016ada:	3a01      	subs	r2, #1
 8016adc:	8702      	strh	r2, [r0, #56]	; 0x38
 8016ade:	1c5a      	adds	r2, r3, #1
 8016ae0:	b292      	uxth	r2, r2
 8016ae2:	2a09      	cmp	r2, #9
 8016ae4:	bf86      	itte	hi
 8016ae6:	3b09      	subhi	r3, #9
 8016ae8:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8016aea:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8016aec:	f7ff ffb5 	bl	8016a5a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8016af0:	8c23      	ldrh	r3, [r4, #32]
 8016af2:	2b01      	cmp	r3, #1
 8016af4:	bf9c      	itt	ls
 8016af6:	3301      	addls	r3, #1
 8016af8:	8423      	strhls	r3, [r4, #32]
 8016afa:	8be3      	ldrh	r3, [r4, #30]
 8016afc:	b90b      	cbnz	r3, 8016b02 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8016afe:	2302      	movs	r3, #2
 8016b00:	83e3      	strh	r3, [r4, #30]
 8016b02:	8be3      	ldrh	r3, [r4, #30]
 8016b04:	3b01      	subs	r3, #1
 8016b06:	b29b      	uxth	r3, r3
 8016b08:	83e3      	strh	r3, [r4, #30]
 8016b0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016b0e:	4628      	mov	r0, r5
 8016b10:	8365      	strh	r5, [r4, #26]
 8016b12:	bd38      	pop	{r3, r4, r5, pc}

08016b14 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8016b14:	428a      	cmp	r2, r1
 8016b16:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016b1a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8016b1c:	d931      	bls.n	8016b82 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8016b1e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8016b20:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8016b24:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8016b28:	19ee      	adds	r6, r5, r7
 8016b2a:	1a54      	subs	r4, r2, r1
 8016b2c:	3e01      	subs	r6, #1
 8016b2e:	fa1f fe84 	uxth.w	lr, r4
 8016b32:	b2b4      	uxth	r4, r6
 8016b34:	eba4 090e 	sub.w	r9, r4, lr
 8016b38:	fa1f f989 	uxth.w	r9, r9
 8016b3c:	2c09      	cmp	r4, #9
 8016b3e:	4626      	mov	r6, r4
 8016b40:	bf88      	it	hi
 8016b42:	f1a4 060a 	subhi.w	r6, r4, #10
 8016b46:	f1bc 0f00 	cmp.w	ip, #0
 8016b4a:	bf08      	it	eq
 8016b4c:	f04f 0c02 	moveq.w	ip, #2
 8016b50:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016b54:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016b58:	fa1f fc8c 	uxth.w	ip, ip
 8016b5c:	3c01      	subs	r4, #1
 8016b5e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8016b62:	b2a4      	uxth	r4, r4
 8016b64:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8016b68:	454c      	cmp	r4, r9
 8016b6a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8016b6e:	d1e5      	bne.n	8016b3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8016b70:	eba5 050e 	sub.w	r5, r5, lr
 8016b74:	eb0e 0408 	add.w	r4, lr, r8
 8016b78:	8705      	strh	r5, [r0, #56]	; 0x38
 8016b7a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8016b7e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8016b82:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8016b84:	1a64      	subs	r4, r4, r1
 8016b86:	4439      	add	r1, r7
 8016b88:	b289      	uxth	r1, r1
 8016b8a:	2909      	cmp	r1, #9
 8016b8c:	bf88      	it	hi
 8016b8e:	390a      	subhi	r1, #10
 8016b90:	8704      	strh	r4, [r0, #56]	; 0x38
 8016b92:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016b94:	250a      	movs	r5, #10
 8016b96:	b18a      	cbz	r2, 8016bbc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8016b98:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8016b9a:	3a01      	subs	r2, #1
 8016b9c:	b292      	uxth	r2, r2
 8016b9e:	3101      	adds	r1, #1
 8016ba0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8016ba4:	8701      	strh	r1, [r0, #56]	; 0x38
 8016ba6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8016ba8:	b901      	cbnz	r1, 8016bac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8016baa:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016bac:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8016bae:	3901      	subs	r1, #1
 8016bb0:	b289      	uxth	r1, r1
 8016bb2:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016bb4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8016bb8:	844c      	strh	r4, [r1, #34]	; 0x22
 8016bba:	e7ec      	b.n	8016b96 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8016bbc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016bc0:	f7ff bf4b 	b.w	8016a5a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08016bc4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8016bc4:	b570      	push	{r4, r5, r6, lr}
 8016bc6:	2500      	movs	r5, #0
 8016bc8:	4295      	cmp	r5, r2
 8016bca:	d011      	beq.n	8016bf0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8016bcc:	8bc4      	ldrh	r4, [r0, #30]
 8016bce:	f831 6b02 	ldrh.w	r6, [r1], #2
 8016bd2:	4414      	add	r4, r2
 8016bd4:	3c01      	subs	r4, #1
 8016bd6:	1b64      	subs	r4, r4, r5
 8016bd8:	b2a4      	uxth	r4, r4
 8016bda:	2c01      	cmp	r4, #1
 8016bdc:	bf88      	it	hi
 8016bde:	3c02      	subhi	r4, #2
 8016be0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016be4:	8b64      	ldrh	r4, [r4, #26]
 8016be6:	42b4      	cmp	r4, r6
 8016be8:	d117      	bne.n	8016c1a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8016bea:	3501      	adds	r5, #1
 8016bec:	b2ad      	uxth	r5, r5
 8016bee:	e7eb      	b.n	8016bc8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8016bf0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016bf4:	2400      	movs	r4, #0
 8016bf6:	4413      	add	r3, r2
 8016bf8:	b2a2      	uxth	r2, r4
 8016bfa:	429a      	cmp	r2, r3
 8016bfc:	da0f      	bge.n	8016c1e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8016bfe:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8016c00:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8016c04:	4432      	add	r2, r6
 8016c06:	b292      	uxth	r2, r2
 8016c08:	2a09      	cmp	r2, #9
 8016c0a:	bf88      	it	hi
 8016c0c:	3a0a      	subhi	r2, #10
 8016c0e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016c12:	3401      	adds	r4, #1
 8016c14:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8016c16:	42aa      	cmp	r2, r5
 8016c18:	d0ee      	beq.n	8016bf8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8016c1a:	2000      	movs	r0, #0
 8016c1c:	bd70      	pop	{r4, r5, r6, pc}
 8016c1e:	2001      	movs	r0, #1
 8016c20:	e7fc      	b.n	8016c1c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08016c22 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8016c22:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c26:	4605      	mov	r5, r0
 8016c28:	4616      	mov	r6, r2
 8016c2a:	1c8c      	adds	r4, r1, #2
 8016c2c:	8809      	ldrh	r1, [r1, #0]
 8016c2e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8016c32:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8016c36:	42b3      	cmp	r3, r6
 8016c38:	d124      	bne.n	8016c84 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8016c3a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8016c3e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8016c42:	f001 070f 	and.w	r7, r1, #15
 8016c46:	f8cd 8000 	str.w	r8, [sp]
 8016c4a:	464b      	mov	r3, r9
 8016c4c:	4652      	mov	r2, sl
 8016c4e:	4621      	mov	r1, r4
 8016c50:	4628      	mov	r0, r5
 8016c52:	f7ff ffb7 	bl	8016bc4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8016c56:	4683      	mov	fp, r0
 8016c58:	b168      	cbz	r0, 8016c76 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8016c5a:	eb0a 0109 	add.w	r1, sl, r9
 8016c5e:	4441      	add	r1, r8
 8016c60:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8016c64:	463a      	mov	r2, r7
 8016c66:	4649      	mov	r1, r9
 8016c68:	4628      	mov	r0, r5
 8016c6a:	f7ff ff53 	bl	8016b14 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8016c6e:	4658      	mov	r0, fp
 8016c70:	b003      	add	sp, #12
 8016c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c76:	eb07 010a 	add.w	r1, r7, sl
 8016c7a:	4449      	add	r1, r9
 8016c7c:	4441      	add	r1, r8
 8016c7e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8016c82:	e7d2      	b.n	8016c2a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8016c84:	f04f 0b00 	mov.w	fp, #0
 8016c88:	e7f1      	b.n	8016c6e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08016c8a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8016c8a:	b570      	push	{r4, r5, r6, lr}
 8016c8c:	8810      	ldrh	r0, [r2, #0]
 8016c8e:	4298      	cmp	r0, r3
 8016c90:	d817      	bhi.n	8016cc2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016c92:	1e48      	subs	r0, r1, #1
 8016c94:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8016c98:	4298      	cmp	r0, r3
 8016c9a:	d312      	bcc.n	8016cc2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016c9c:	2400      	movs	r4, #0
 8016c9e:	428c      	cmp	r4, r1
 8016ca0:	d20f      	bcs.n	8016cc2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016ca2:	1860      	adds	r0, r4, r1
 8016ca4:	1040      	asrs	r0, r0, #1
 8016ca6:	0085      	lsls	r5, r0, #2
 8016ca8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8016cac:	42b3      	cmp	r3, r6
 8016cae:	d902      	bls.n	8016cb6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8016cb0:	3001      	adds	r0, #1
 8016cb2:	b284      	uxth	r4, r0
 8016cb4:	e7f3      	b.n	8016c9e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8016cb6:	d201      	bcs.n	8016cbc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8016cb8:	b281      	uxth	r1, r0
 8016cba:	e7f0      	b.n	8016c9e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8016cbc:	442a      	add	r2, r5
 8016cbe:	8850      	ldrh	r0, [r2, #2]
 8016cc0:	bd70      	pop	{r4, r5, r6, pc}
 8016cc2:	2000      	movs	r0, #0
 8016cc4:	e7fc      	b.n	8016cc0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08016cc6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8016cc6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016cca:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8016ccc:	886f      	ldrh	r7, [r5, #2]
 8016cce:	4604      	mov	r4, r0
 8016cd0:	087f      	lsrs	r7, r7, #1
 8016cd2:	260b      	movs	r6, #11
 8016cd4:	3e01      	subs	r6, #1
 8016cd6:	d013      	beq.n	8016d00 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016cd8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016cda:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016cde:	462a      	mov	r2, r5
 8016ce0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016ce4:	4639      	mov	r1, r7
 8016ce6:	4643      	mov	r3, r8
 8016ce8:	4620      	mov	r0, r4
 8016cea:	f7ff ffce 	bl	8016c8a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8016cee:	b138      	cbz	r0, 8016d00 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016cf0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8016cf4:	4642      	mov	r2, r8
 8016cf6:	4620      	mov	r0, r4
 8016cf8:	f7ff ff93 	bl	8016c22 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8016cfc:	2800      	cmp	r0, #0
 8016cfe:	d1e9      	bne.n	8016cd4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8016d00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016d04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8016d04:	b570      	push	{r4, r5, r6, lr}
 8016d06:	694a      	ldr	r2, [r1, #20]
 8016d08:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8016d0a:	684b      	ldr	r3, [r1, #4]
 8016d0c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8016d0e:	1b54      	subs	r4, r2, r5
 8016d10:	f000 8106 	beq.w	8016f20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8016d14:	1b9b      	subs	r3, r3, r6
 8016d16:	d003      	beq.n	8016d20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016d18:	4363      	muls	r3, r4
 8016d1a:	2210      	movs	r2, #16
 8016d1c:	fb93 f3f2 	sdiv	r3, r3, r2
 8016d20:	680c      	ldr	r4, [r1, #0]
 8016d22:	698a      	ldr	r2, [r1, #24]
 8016d24:	1b65      	subs	r5, r4, r5
 8016d26:	f000 80fd 	beq.w	8016f24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8016d2a:	1b92      	subs	r2, r2, r6
 8016d2c:	d003      	beq.n	8016d36 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8016d2e:	436a      	muls	r2, r5
 8016d30:	2410      	movs	r4, #16
 8016d32:	fb92 f2f4 	sdiv	r2, r2, r4
 8016d36:	1a9b      	subs	r3, r3, r2
 8016d38:	ee07 3a90 	vmov	s15, r3
 8016d3c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8016f60 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8016d40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016d44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016d48:	ee67 7a84 	vmul.f32	s15, s15, s8
 8016d4c:	460a      	mov	r2, r1
 8016d4e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8016d52:	4603      	mov	r3, r0
 8016d54:	f100 040c 	add.w	r4, r0, #12
 8016d58:	eeb1 6a43 	vneg.f32	s12, s6
 8016d5c:	edd2 7a02 	vldr	s15, [r2, #8]
 8016d60:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8016d64:	3214      	adds	r2, #20
 8016d66:	ece3 6a01 	vstmia	r3!, {s13}
 8016d6a:	ed52 7a02 	vldr	s15, [r2, #-8]
 8016d6e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016d72:	429c      	cmp	r4, r3
 8016d74:	edc3 7a02 	vstr	s15, [r3, #8]
 8016d78:	ed52 7a01 	vldr	s15, [r2, #-4]
 8016d7c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016d80:	edc3 7a05 	vstr	s15, [r3, #20]
 8016d84:	d1ea      	bne.n	8016d5c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8016d86:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8016d88:	698b      	ldr	r3, [r1, #24]
 8016d8a:	edd0 4a02 	vldr	s9, [r0, #8]
 8016d8e:	edd0 3a00 	vldr	s7, [r0]
 8016d92:	edd0 6a01 	vldr	s13, [r0, #4]
 8016d96:	ed90 5a05 	vldr	s10, [r0, #20]
 8016d9a:	ed90 2a03 	vldr	s4, [r0, #12]
 8016d9e:	edd0 5a04 	vldr	s11, [r0, #16]
 8016da2:	ed90 1a07 	vldr	s2, [r0, #28]
 8016da6:	edd0 2a06 	vldr	s5, [r0, #24]
 8016daa:	1a9b      	subs	r3, r3, r2
 8016dac:	ee07 3a90 	vmov	s15, r3
 8016db0:	684b      	ldr	r3, [r1, #4]
 8016db2:	1a9b      	subs	r3, r3, r2
 8016db4:	ee07 3a10 	vmov	s14, r3
 8016db8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016dbc:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8016dc0:	ee67 7a84 	vmul.f32	s15, s15, s8
 8016dc4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8016dc8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016dcc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8016dd0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016dd4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016dd8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8016ddc:	ee32 5a45 	vsub.f32	s10, s4, s10
 8016de0:	ee67 7a83 	vmul.f32	s15, s15, s6
 8016de4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8016de8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8016dea:	694a      	ldr	r2, [r1, #20]
 8016dec:	1b13      	subs	r3, r2, r4
 8016dee:	ee07 3a10 	vmov	s14, r3
 8016df2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016df6:	680b      	ldr	r3, [r1, #0]
 8016df8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016dfc:	1b1b      	subs	r3, r3, r4
 8016dfe:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8016e02:	ee07 3a10 	vmov	s14, r3
 8016e06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016e0a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016e0e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8016e12:	ee64 4a86 	vmul.f32	s9, s9, s12
 8016e16:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8016e1a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8016e1c:	698b      	ldr	r3, [r1, #24]
 8016e1e:	1a9b      	subs	r3, r3, r2
 8016e20:	ee06 3a90 	vmov	s13, r3
 8016e24:	684b      	ldr	r3, [r1, #4]
 8016e26:	1a9b      	subs	r3, r3, r2
 8016e28:	ee07 3a10 	vmov	s14, r3
 8016e2c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016e30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016e34:	ee66 6a84 	vmul.f32	s13, s13, s8
 8016e38:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016e3c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8016e40:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016e44:	ee66 6a83 	vmul.f32	s13, s13, s6
 8016e48:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8016e4c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8016e4e:	694a      	ldr	r2, [r1, #20]
 8016e50:	1b13      	subs	r3, r2, r4
 8016e52:	ee07 3a10 	vmov	s14, r3
 8016e56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016e5a:	680b      	ldr	r3, [r1, #0]
 8016e5c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016e60:	1b1b      	subs	r3, r3, r4
 8016e62:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8016e66:	ee07 3a10 	vmov	s14, r3
 8016e6a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016e6e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016e72:	eea5 5a87 	vfma.f32	s10, s11, s14
 8016e76:	edd0 5a08 	vldr	s11, [r0, #32]
 8016e7a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8016e7e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8016e82:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8016e86:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8016e88:	698b      	ldr	r3, [r1, #24]
 8016e8a:	1a9b      	subs	r3, r3, r2
 8016e8c:	ee07 3a10 	vmov	s14, r3
 8016e90:	684b      	ldr	r3, [r1, #4]
 8016e92:	1a9b      	subs	r3, r3, r2
 8016e94:	ee01 3a90 	vmov	s3, r3
 8016e98:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016e9c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8016ea0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016ea4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8016ea8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8016eac:	ee61 1a84 	vmul.f32	s3, s3, s8
 8016eb0:	eea1 7a21 	vfma.f32	s14, s2, s3
 8016eb4:	ee27 7a03 	vmul.f32	s14, s14, s6
 8016eb8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8016ebc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8016ebe:	694a      	ldr	r2, [r1, #20]
 8016ec0:	1b13      	subs	r3, r2, r4
 8016ec2:	ee03 3a10 	vmov	s6, r3
 8016ec6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8016eca:	680b      	ldr	r3, [r1, #0]
 8016ecc:	ee23 3a04 	vmul.f32	s6, s6, s8
 8016ed0:	1b1b      	subs	r3, r3, r4
 8016ed2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8016ed6:	ee03 3a10 	vmov	s6, r3
 8016eda:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8016ede:	ee23 4a04 	vmul.f32	s8, s6, s8
 8016ee2:	eee1 5a04 	vfma.f32	s11, s2, s8
 8016ee6:	ee25 6a86 	vmul.f32	s12, s11, s12
 8016eea:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8016eee:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8016ef2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8016ef6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016efa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016efe:	dd13      	ble.n	8016f28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8016f00:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016f04:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8016f08:	63c3      	str	r3, [r0, #60]	; 0x3c
 8016f0a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8016f0e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016f12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f16:	dd15      	ble.n	8016f44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8016f18:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016f1c:	6403      	str	r3, [r0, #64]	; 0x40
 8016f1e:	bd70      	pop	{r4, r5, r6, pc}
 8016f20:	4623      	mov	r3, r4
 8016f22:	e6fd      	b.n	8016d20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016f24:	462a      	mov	r2, r5
 8016f26:	e706      	b.n	8016d36 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8016f28:	d502      	bpl.n	8016f30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8016f2a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8016f2e:	e7e9      	b.n	8016f04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8016f30:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8016f34:	eea3 2a85 	vfma.f32	s4, s7, s10
 8016f38:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8016f3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f40:	dade      	bge.n	8016f00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8016f42:	e7f2      	b.n	8016f2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8016f44:	d502      	bpl.n	8016f4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8016f46:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8016f4a:	e7e7      	b.n	8016f1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8016f4c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8016f50:	eee3 4a86 	vfma.f32	s9, s7, s12
 8016f54:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8016f58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f5c:	dadc      	bge.n	8016f18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8016f5e:	e7f2      	b.n	8016f46 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8016f60:	3d800000 	.word	0x3d800000

08016f64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8016f64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016f68:	2714      	movs	r7, #20
 8016f6a:	435f      	muls	r7, r3
 8016f6c:	eb02 0c07 	add.w	ip, r2, r7
 8016f70:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8016f74:	f115 0e0f 	adds.w	lr, r5, #15
 8016f78:	f100 80a2 	bmi.w	80170c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8016f7c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8016f80:	9c08      	ldr	r4, [sp, #32]
 8016f82:	f8c0 e014 	str.w	lr, [r0, #20]
 8016f86:	2614      	movs	r6, #20
 8016f88:	4366      	muls	r6, r4
 8016f8a:	eb02 0806 	add.w	r8, r2, r6
 8016f8e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8016f92:	f115 040f 	adds.w	r4, r5, #15
 8016f96:	f100 809f 	bmi.w	80170d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8016f9a:	1124      	asrs	r4, r4, #4
 8016f9c:	eba4 040e 	sub.w	r4, r4, lr
 8016fa0:	6184      	str	r4, [r0, #24]
 8016fa2:	2c00      	cmp	r4, #0
 8016fa4:	f000 808a 	beq.w	80170bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8016fa8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8016fac:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8016fb0:	5995      	ldr	r5, [r2, r6]
 8016fb2:	eba4 0809 	sub.w	r8, r4, r9
 8016fb6:	59d4      	ldr	r4, [r2, r7]
 8016fb8:	eba5 0a04 	sub.w	sl, r5, r4
 8016fbc:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8016fc0:	fb0e fe05 	mul.w	lr, lr, r5
 8016fc4:	fb0a ee19 	mls	lr, sl, r9, lr
 8016fc8:	fb08 e404 	mla	r4, r8, r4, lr
 8016fcc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8016fd0:	3c01      	subs	r4, #1
 8016fd2:	19a4      	adds	r4, r4, r6
 8016fd4:	f100 808c 	bmi.w	80170f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8016fd8:	fb94 fef6 	sdiv	lr, r4, r6
 8016fdc:	f8c0 e000 	str.w	lr, [r0]
 8016fe0:	fb06 441e 	mls	r4, r6, lr, r4
 8016fe4:	6104      	str	r4, [r0, #16]
 8016fe6:	2d00      	cmp	r5, #0
 8016fe8:	f2c0 8095 	blt.w	8017116 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8016fec:	fb95 f4f6 	sdiv	r4, r5, r6
 8016ff0:	6044      	str	r4, [r0, #4]
 8016ff2:	fb06 5514 	mls	r5, r6, r4, r5
 8016ff6:	6085      	str	r5, [r0, #8]
 8016ff8:	60c6      	str	r6, [r0, #12]
 8016ffa:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8016ffe:	6945      	ldr	r5, [r0, #20]
 8017000:	59d2      	ldr	r2, [r2, r7]
 8017002:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017138 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017006:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801700a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801700e:	ee07 4a10 	vmov	s14, r4
 8017012:	6804      	ldr	r4, [r0, #0]
 8017014:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017018:	ee07 2a90 	vmov	s15, r2
 801701c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017020:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017024:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017028:	ee27 7a26 	vmul.f32	s14, s14, s13
 801702c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017030:	edd3 6a00 	vldr	s13, [r3]
 8017034:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017038:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801703c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017040:	edc0 6a07 	vstr	s13, [r0, #28]
 8017044:	edd0 6a01 	vldr	s13, [r0, #4]
 8017048:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801704c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017050:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017054:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017058:	ed80 6a08 	vstr	s12, [r0, #32]
 801705c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801705e:	6242      	str	r2, [r0, #36]	; 0x24
 8017060:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017064:	ed93 6a03 	vldr	s12, [r3, #12]
 8017068:	eea5 6a87 	vfma.f32	s12, s11, s14
 801706c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017070:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017074:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017078:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801707c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017080:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017084:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017088:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801708a:	6302      	str	r2, [r0, #48]	; 0x30
 801708c:	ed93 6a06 	vldr	s12, [r3, #24]
 8017090:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017094:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017098:	eeb0 7a46 	vmov.f32	s14, s12
 801709c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80170a0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80170a4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80170a8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80170ac:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80170b0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80170b4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80170b8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80170ba:	63c3      	str	r3, [r0, #60]	; 0x3c
 80170bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80170c0:	f1c5 0501 	rsb	r5, r5, #1
 80170c4:	f015 050f 	ands.w	r5, r5, #15
 80170c8:	bf18      	it	ne
 80170ca:	2501      	movne	r5, #1
 80170cc:	2410      	movs	r4, #16
 80170ce:	fb9e fef4 	sdiv	lr, lr, r4
 80170d2:	ebae 0e05 	sub.w	lr, lr, r5
 80170d6:	e753      	b.n	8016f80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80170d8:	f1c5 0501 	rsb	r5, r5, #1
 80170dc:	f015 050f 	ands.w	r5, r5, #15
 80170e0:	bf18      	it	ne
 80170e2:	2501      	movne	r5, #1
 80170e4:	f04f 0910 	mov.w	r9, #16
 80170e8:	fb94 f4f9 	sdiv	r4, r4, r9
 80170ec:	1b64      	subs	r4, r4, r5
 80170ee:	e755      	b.n	8016f9c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80170f0:	4264      	negs	r4, r4
 80170f2:	fb94 fef6 	sdiv	lr, r4, r6
 80170f6:	f1ce 0800 	rsb	r8, lr, #0
 80170fa:	fb06 441e 	mls	r4, r6, lr, r4
 80170fe:	f8c0 8000 	str.w	r8, [r0]
 8017102:	6104      	str	r4, [r0, #16]
 8017104:	2c00      	cmp	r4, #0
 8017106:	f43f af6e 	beq.w	8016fe6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801710a:	ea6f 0e0e 	mvn.w	lr, lr
 801710e:	f8c0 e000 	str.w	lr, [r0]
 8017112:	1b34      	subs	r4, r6, r4
 8017114:	e766      	b.n	8016fe4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017116:	426d      	negs	r5, r5
 8017118:	fb95 f4f6 	sdiv	r4, r5, r6
 801711c:	f1c4 0e00 	rsb	lr, r4, #0
 8017120:	fb06 5514 	mls	r5, r6, r4, r5
 8017124:	f8c0 e004 	str.w	lr, [r0, #4]
 8017128:	6085      	str	r5, [r0, #8]
 801712a:	2d00      	cmp	r5, #0
 801712c:	f43f af64 	beq.w	8016ff8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017130:	43e4      	mvns	r4, r4
 8017132:	6044      	str	r4, [r0, #4]
 8017134:	1b75      	subs	r5, r6, r5
 8017136:	e75e      	b.n	8016ff6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017138:	3d800000 	.word	0x3d800000

0801713c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801713c:	4602      	mov	r2, r0
 801713e:	b148      	cbz	r0, 8017154 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017140:	2300      	movs	r3, #0
 8017142:	b298      	uxth	r0, r3
 8017144:	3301      	adds	r3, #1
 8017146:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801714a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801714e:	2900      	cmp	r1, #0
 8017150:	d1f7      	bne.n	8017142 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017152:	4770      	bx	lr
 8017154:	4770      	bx	lr

08017156 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017156:	b530      	push	{r4, r5, lr}
 8017158:	4604      	mov	r4, r0
 801715a:	b159      	cbz	r1, 8017174 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801715c:	b148      	cbz	r0, 8017172 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801715e:	2300      	movs	r3, #0
 8017160:	b298      	uxth	r0, r3
 8017162:	4282      	cmp	r2, r0
 8017164:	d905      	bls.n	8017172 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017166:	5ccd      	ldrb	r5, [r1, r3]
 8017168:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801716c:	3301      	adds	r3, #1
 801716e:	2d00      	cmp	r5, #0
 8017170:	d1f6      	bne.n	8017160 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017172:	bd30      	pop	{r4, r5, pc}
 8017174:	4608      	mov	r0, r1
 8017176:	e7fc      	b.n	8017172 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017178 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017178:	b5f0      	push	{r4, r5, r6, r7, lr}
 801717a:	b08b      	sub	sp, #44	; 0x2c
 801717c:	468c      	mov	ip, r1
 801717e:	2100      	movs	r1, #0
 8017180:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017184:	4604      	mov	r4, r0
 8017186:	261f      	movs	r6, #31
 8017188:	af01      	add	r7, sp, #4
 801718a:	fb94 fef3 	sdiv	lr, r4, r3
 801718e:	fb03 441e 	mls	r4, r3, lr, r4
 8017192:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017196:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801719a:	b2ec      	uxtb	r4, r5
 801719c:	2d09      	cmp	r5, #9
 801719e:	bfd4      	ite	le
 80171a0:	3430      	addle	r4, #48	; 0x30
 80171a2:	3457      	addgt	r4, #87	; 0x57
 80171a4:	b2e4      	uxtb	r4, r4
 80171a6:	55bc      	strb	r4, [r7, r6]
 80171a8:	4674      	mov	r4, lr
 80171aa:	1e71      	subs	r1, r6, #1
 80171ac:	b974      	cbnz	r4, 80171cc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80171ae:	2800      	cmp	r0, #0
 80171b0:	da05      	bge.n	80171be <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80171b2:	ab0a      	add	r3, sp, #40	; 0x28
 80171b4:	4419      	add	r1, r3
 80171b6:	232d      	movs	r3, #45	; 0x2d
 80171b8:	f801 3c24 	strb.w	r3, [r1, #-36]
 80171bc:	1eb1      	subs	r1, r6, #2
 80171be:	3101      	adds	r1, #1
 80171c0:	4439      	add	r1, r7
 80171c2:	4660      	mov	r0, ip
 80171c4:	f7ff ffc7 	bl	8017156 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80171c8:	b00b      	add	sp, #44	; 0x2c
 80171ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80171cc:	460e      	mov	r6, r1
 80171ce:	e7dc      	b.n	801718a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080171d0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80171d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80171d2:	b08b      	sub	sp, #44	; 0x2c
 80171d4:	468c      	mov	ip, r1
 80171d6:	2100      	movs	r1, #0
 80171d8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80171dc:	ae01      	add	r6, sp, #4
 80171de:	211f      	movs	r1, #31
 80171e0:	fbb0 f7f3 	udiv	r7, r0, r3
 80171e4:	fb03 0517 	mls	r5, r3, r7, r0
 80171e8:	b2ec      	uxtb	r4, r5
 80171ea:	2d09      	cmp	r5, #9
 80171ec:	bfd4      	ite	le
 80171ee:	3430      	addle	r4, #48	; 0x30
 80171f0:	3457      	addgt	r4, #87	; 0x57
 80171f2:	b2e4      	uxtb	r4, r4
 80171f4:	558c      	strb	r4, [r1, r6]
 80171f6:	4638      	mov	r0, r7
 80171f8:	1e4c      	subs	r4, r1, #1
 80171fa:	b92f      	cbnz	r7, 8017208 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80171fc:	4431      	add	r1, r6
 80171fe:	4660      	mov	r0, ip
 8017200:	f7ff ffa9 	bl	8017156 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017204:	b00b      	add	sp, #44	; 0x2c
 8017206:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017208:	4621      	mov	r1, r4
 801720a:	e7e9      	b.n	80171e0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801720c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801720c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017210:	4691      	mov	r9, r2
 8017212:	b085      	sub	sp, #20
 8017214:	6802      	ldr	r2, [r0, #0]
 8017216:	9201      	str	r2, [sp, #4]
 8017218:	4688      	mov	r8, r1
 801721a:	4683      	mov	fp, r0
 801721c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017220:	9103      	str	r1, [sp, #12]
 8017222:	4610      	mov	r0, r2
 8017224:	461c      	mov	r4, r3
 8017226:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801722a:	9302      	str	r3, [sp, #8]
 801722c:	f7ff ff86 	bl	801713c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017230:	f1b8 0f00 	cmp.w	r8, #0
 8017234:	bf0c      	ite	eq
 8017236:	4684      	moveq	ip, r0
 8017238:	f100 0c01 	addne.w	ip, r0, #1
 801723c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017240:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017244:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017246:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017248:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801724c:	9903      	ldr	r1, [sp, #12]
 801724e:	fa1f fc8c 	uxth.w	ip, ip
 8017252:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017256:	d041      	beq.n	80172dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017258:	d834      	bhi.n	80172c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801725a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801725e:	d059      	beq.n	8017314 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017260:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017264:	d03a      	beq.n	80172dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017266:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801726a:	d034      	beq.n	80172d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801726c:	2400      	movs	r4, #0
 801726e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017272:	3a01      	subs	r2, #1
 8017274:	b169      	cbz	r1, 8017292 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017276:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017278:	458c      	cmp	ip, r1
 801727a:	da09      	bge.n	8017290 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801727c:	eba1 010c 	sub.w	r1, r1, ip
 8017280:	b289      	uxth	r1, r1
 8017282:	b933      	cbnz	r3, 8017292 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017284:	2e00      	cmp	r6, #0
 8017286:	d051      	beq.n	801732c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017288:	2800      	cmp	r0, #0
 801728a:	d04f      	beq.n	801732c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801728c:	440c      	add	r4, r1
 801728e:	b2a4      	uxth	r4, r4
 8017290:	2100      	movs	r1, #0
 8017292:	682b      	ldr	r3, [r5, #0]
 8017294:	4293      	cmp	r3, r2
 8017296:	da07      	bge.n	80172a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017298:	f1b8 0f00 	cmp.w	r8, #0
 801729c:	d004      	beq.n	80172a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801729e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80172a2:	682b      	ldr	r3, [r5, #0]
 80172a4:	3301      	adds	r3, #1
 80172a6:	602b      	str	r3, [r5, #0]
 80172a8:	2730      	movs	r7, #48	; 0x30
 80172aa:	2c00      	cmp	r4, #0
 80172ac:	d04e      	beq.n	801734c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80172ae:	682e      	ldr	r6, [r5, #0]
 80172b0:	3c01      	subs	r4, #1
 80172b2:	42b2      	cmp	r2, r6
 80172b4:	b2a4      	uxth	r4, r4
 80172b6:	dd49      	ble.n	801734c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80172b8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80172bc:	682b      	ldr	r3, [r5, #0]
 80172be:	3301      	adds	r3, #1
 80172c0:	602b      	str	r3, [r5, #0]
 80172c2:	e7f2      	b.n	80172aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80172c4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80172c8:	d01d      	beq.n	8017306 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80172ca:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80172ce:	d002      	beq.n	80172d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80172d0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80172d4:	e7c9      	b.n	801726a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80172d6:	4684      	mov	ip, r0
 80172d8:	f04f 0800 	mov.w	r8, #0
 80172dc:	2c00      	cmp	r4, #0
 80172de:	d0c6      	beq.n	801726e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80172e0:	b947      	cbnz	r7, 80172f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80172e2:	2801      	cmp	r0, #1
 80172e4:	d106      	bne.n	80172f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80172e6:	8814      	ldrh	r4, [r2, #0]
 80172e8:	2c30      	cmp	r4, #48	; 0x30
 80172ea:	bf02      	ittt	eq
 80172ec:	3202      	addeq	r2, #2
 80172ee:	f8cb 2000 	streq.w	r2, [fp]
 80172f2:	4638      	moveq	r0, r7
 80172f4:	45bc      	cmp	ip, r7
 80172f6:	da14      	bge.n	8017322 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80172f8:	b2bf      	uxth	r7, r7
 80172fa:	eba7 040c 	sub.w	r4, r7, ip
 80172fe:	b2a4      	uxth	r4, r4
 8017300:	46bc      	mov	ip, r7
 8017302:	2600      	movs	r6, #0
 8017304:	e7b3      	b.n	801726e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017306:	4684      	mov	ip, r0
 8017308:	b16c      	cbz	r4, 8017326 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801730a:	42b8      	cmp	r0, r7
 801730c:	dd00      	ble.n	8017310 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801730e:	b2b8      	uxth	r0, r7
 8017310:	2400      	movs	r4, #0
 8017312:	e003      	b.n	801731c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017314:	f04f 0c01 	mov.w	ip, #1
 8017318:	2400      	movs	r4, #0
 801731a:	4660      	mov	r0, ip
 801731c:	4626      	mov	r6, r4
 801731e:	46a0      	mov	r8, r4
 8017320:	e7a5      	b.n	801726e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017322:	2400      	movs	r4, #0
 8017324:	e7ed      	b.n	8017302 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017326:	4626      	mov	r6, r4
 8017328:	46a0      	mov	r8, r4
 801732a:	e7a0      	b.n	801726e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801732c:	2900      	cmp	r1, #0
 801732e:	d0b0      	beq.n	8017292 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017330:	2720      	movs	r7, #32
 8017332:	682e      	ldr	r6, [r5, #0]
 8017334:	2900      	cmp	r1, #0
 8017336:	d0ac      	beq.n	8017292 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017338:	3901      	subs	r1, #1
 801733a:	4296      	cmp	r6, r2
 801733c:	b289      	uxth	r1, r1
 801733e:	daa7      	bge.n	8017290 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017340:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017344:	682b      	ldr	r3, [r5, #0]
 8017346:	3301      	adds	r3, #1
 8017348:	602b      	str	r3, [r5, #0]
 801734a:	e7f2      	b.n	8017332 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801734c:	b188      	cbz	r0, 8017372 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801734e:	682b      	ldr	r3, [r5, #0]
 8017350:	3801      	subs	r0, #1
 8017352:	429a      	cmp	r2, r3
 8017354:	b280      	uxth	r0, r0
 8017356:	dd0c      	ble.n	8017372 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017358:	f8db 3000 	ldr.w	r3, [fp]
 801735c:	1c9c      	adds	r4, r3, #2
 801735e:	f8cb 4000 	str.w	r4, [fp]
 8017362:	881c      	ldrh	r4, [r3, #0]
 8017364:	682b      	ldr	r3, [r5, #0]
 8017366:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801736a:	682b      	ldr	r3, [r5, #0]
 801736c:	3301      	adds	r3, #1
 801736e:	602b      	str	r3, [r5, #0]
 8017370:	e7ec      	b.n	801734c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017372:	2620      	movs	r6, #32
 8017374:	b151      	cbz	r1, 801738c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017376:	6828      	ldr	r0, [r5, #0]
 8017378:	3901      	subs	r1, #1
 801737a:	4282      	cmp	r2, r0
 801737c:	b289      	uxth	r1, r1
 801737e:	dd05      	ble.n	801738c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017380:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017384:	682b      	ldr	r3, [r5, #0]
 8017386:	3301      	adds	r3, #1
 8017388:	602b      	str	r3, [r5, #0]
 801738a:	e7f3      	b.n	8017374 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801738c:	b005      	add	sp, #20
 801738e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017392 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017392:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017396:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801739a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801739e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80173a2:	2400      	movs	r4, #0
 80173a4:	8014      	strh	r4, [r2, #0]
 80173a6:	701c      	strb	r4, [r3, #0]
 80173a8:	f888 4000 	strb.w	r4, [r8]
 80173ac:	f88c 4000 	strb.w	r4, [ip]
 80173b0:	f88e 4000 	strb.w	r4, [lr]
 80173b4:	703c      	strb	r4, [r7, #0]
 80173b6:	6804      	ldr	r4, [r0, #0]
 80173b8:	b1a4      	cbz	r4, 80173e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80173ba:	8824      	ldrh	r4, [r4, #0]
 80173bc:	f04f 0901 	mov.w	r9, #1
 80173c0:	b314      	cbz	r4, 8017408 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80173c2:	2c2b      	cmp	r4, #43	; 0x2b
 80173c4:	d001      	beq.n	80173ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80173c6:	2c20      	cmp	r4, #32
 80173c8:	d110      	bne.n	80173ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80173ca:	8014      	strh	r4, [r2, #0]
 80173cc:	6804      	ldr	r4, [r0, #0]
 80173ce:	b10c      	cbz	r4, 80173d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80173d0:	3402      	adds	r4, #2
 80173d2:	6004      	str	r4, [r0, #0]
 80173d4:	680c      	ldr	r4, [r1, #0]
 80173d6:	b10c      	cbz	r4, 80173dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80173d8:	3401      	adds	r4, #1
 80173da:	600c      	str	r4, [r1, #0]
 80173dc:	6804      	ldr	r4, [r0, #0]
 80173de:	b17c      	cbz	r4, 8017400 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80173e0:	8824      	ldrh	r4, [r4, #0]
 80173e2:	e7ed      	b.n	80173c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80173e4:	680c      	ldr	r4, [r1, #0]
 80173e6:	b17c      	cbz	r4, 8017408 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80173e8:	7824      	ldrb	r4, [r4, #0]
 80173ea:	e7e7      	b.n	80173bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80173ec:	2c2d      	cmp	r4, #45	; 0x2d
 80173ee:	d102      	bne.n	80173f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80173f0:	f883 9000 	strb.w	r9, [r3]
 80173f4:	e7ea      	b.n	80173cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80173f6:	2c23      	cmp	r4, #35	; 0x23
 80173f8:	d107      	bne.n	801740a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80173fa:	f888 9000 	strb.w	r9, [r8]
 80173fe:	e7e5      	b.n	80173cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017400:	680c      	ldr	r4, [r1, #0]
 8017402:	b10c      	cbz	r4, 8017408 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017404:	7824      	ldrb	r4, [r4, #0]
 8017406:	e7db      	b.n	80173c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017408:	2400      	movs	r4, #0
 801740a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801740e:	2b09      	cmp	r3, #9
 8017410:	d901      	bls.n	8017416 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017412:	2c2a      	cmp	r4, #42	; 0x2a
 8017414:	d122      	bne.n	801745c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017416:	2301      	movs	r3, #1
 8017418:	2c30      	cmp	r4, #48	; 0x30
 801741a:	f88e 3000 	strb.w	r3, [lr]
 801741e:	d10d      	bne.n	801743c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017420:	f88c 3000 	strb.w	r3, [ip]
 8017424:	6803      	ldr	r3, [r0, #0]
 8017426:	b10b      	cbz	r3, 801742c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017428:	3302      	adds	r3, #2
 801742a:	6003      	str	r3, [r0, #0]
 801742c:	680b      	ldr	r3, [r1, #0]
 801742e:	b10b      	cbz	r3, 8017434 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017430:	3301      	adds	r3, #1
 8017432:	600b      	str	r3, [r1, #0]
 8017434:	6803      	ldr	r3, [r0, #0]
 8017436:	2b00      	cmp	r3, #0
 8017438:	d02f      	beq.n	801749a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801743a:	881c      	ldrh	r4, [r3, #0]
 801743c:	2c2a      	cmp	r4, #42	; 0x2a
 801743e:	d135      	bne.n	80174ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017440:	f04f 33ff 	mov.w	r3, #4294967295
 8017444:	6033      	str	r3, [r6, #0]
 8017446:	6803      	ldr	r3, [r0, #0]
 8017448:	b10b      	cbz	r3, 801744e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801744a:	3302      	adds	r3, #2
 801744c:	6003      	str	r3, [r0, #0]
 801744e:	680b      	ldr	r3, [r1, #0]
 8017450:	b10b      	cbz	r3, 8017456 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017452:	3301      	adds	r3, #1
 8017454:	600b      	str	r3, [r1, #0]
 8017456:	6803      	ldr	r3, [r0, #0]
 8017458:	b31b      	cbz	r3, 80174a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801745a:	881c      	ldrh	r4, [r3, #0]
 801745c:	2c2e      	cmp	r4, #46	; 0x2e
 801745e:	d11a      	bne.n	8017496 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017460:	2301      	movs	r3, #1
 8017462:	703b      	strb	r3, [r7, #0]
 8017464:	6803      	ldr	r3, [r0, #0]
 8017466:	b10b      	cbz	r3, 801746c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017468:	3302      	adds	r3, #2
 801746a:	6003      	str	r3, [r0, #0]
 801746c:	680b      	ldr	r3, [r1, #0]
 801746e:	b10b      	cbz	r3, 8017474 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017470:	3301      	adds	r3, #1
 8017472:	600b      	str	r3, [r1, #0]
 8017474:	6803      	ldr	r3, [r0, #0]
 8017476:	2b00      	cmp	r3, #0
 8017478:	d036      	beq.n	80174e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801747a:	881b      	ldrh	r3, [r3, #0]
 801747c:	2b2a      	cmp	r3, #42	; 0x2a
 801747e:	d137      	bne.n	80174f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017480:	f04f 33ff 	mov.w	r3, #4294967295
 8017484:	602b      	str	r3, [r5, #0]
 8017486:	6803      	ldr	r3, [r0, #0]
 8017488:	b10b      	cbz	r3, 801748e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801748a:	3302      	adds	r3, #2
 801748c:	6003      	str	r3, [r0, #0]
 801748e:	680b      	ldr	r3, [r1, #0]
 8017490:	b10b      	cbz	r3, 8017496 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017492:	3301      	adds	r3, #1
 8017494:	600b      	str	r3, [r1, #0]
 8017496:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801749a:	680c      	ldr	r4, [r1, #0]
 801749c:	b134      	cbz	r4, 80174ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801749e:	7824      	ldrb	r4, [r4, #0]
 80174a0:	e7cc      	b.n	801743c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80174a2:	680b      	ldr	r3, [r1, #0]
 80174a4:	2b00      	cmp	r3, #0
 80174a6:	d0f6      	beq.n	8017496 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80174a8:	781c      	ldrb	r4, [r3, #0]
 80174aa:	e7d7      	b.n	801745c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80174ac:	2300      	movs	r3, #0
 80174ae:	6033      	str	r3, [r6, #0]
 80174b0:	220a      	movs	r2, #10
 80174b2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80174b6:	fa1f f38c 	uxth.w	r3, ip
 80174ba:	2b09      	cmp	r3, #9
 80174bc:	d8ce      	bhi.n	801745c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80174be:	6833      	ldr	r3, [r6, #0]
 80174c0:	fb02 c303 	mla	r3, r2, r3, ip
 80174c4:	6033      	str	r3, [r6, #0]
 80174c6:	6803      	ldr	r3, [r0, #0]
 80174c8:	b10b      	cbz	r3, 80174ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80174ca:	3302      	adds	r3, #2
 80174cc:	6003      	str	r3, [r0, #0]
 80174ce:	680b      	ldr	r3, [r1, #0]
 80174d0:	b10b      	cbz	r3, 80174d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80174d2:	3301      	adds	r3, #1
 80174d4:	600b      	str	r3, [r1, #0]
 80174d6:	6803      	ldr	r3, [r0, #0]
 80174d8:	b10b      	cbz	r3, 80174de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80174da:	881c      	ldrh	r4, [r3, #0]
 80174dc:	e7e9      	b.n	80174b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80174de:	680c      	ldr	r4, [r1, #0]
 80174e0:	2c00      	cmp	r4, #0
 80174e2:	d0e6      	beq.n	80174b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80174e4:	7824      	ldrb	r4, [r4, #0]
 80174e6:	e7e4      	b.n	80174b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80174e8:	680b      	ldr	r3, [r1, #0]
 80174ea:	b10b      	cbz	r3, 80174f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80174ec:	781b      	ldrb	r3, [r3, #0]
 80174ee:	e7c5      	b.n	801747c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80174f0:	2200      	movs	r2, #0
 80174f2:	602a      	str	r2, [r5, #0]
 80174f4:	240a      	movs	r4, #10
 80174f6:	3b30      	subs	r3, #48	; 0x30
 80174f8:	b29e      	uxth	r6, r3
 80174fa:	2e09      	cmp	r6, #9
 80174fc:	682a      	ldr	r2, [r5, #0]
 80174fe:	d813      	bhi.n	8017528 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017500:	fb04 3302 	mla	r3, r4, r2, r3
 8017504:	602b      	str	r3, [r5, #0]
 8017506:	6803      	ldr	r3, [r0, #0]
 8017508:	b10b      	cbz	r3, 801750e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801750a:	3302      	adds	r3, #2
 801750c:	6003      	str	r3, [r0, #0]
 801750e:	680b      	ldr	r3, [r1, #0]
 8017510:	b10b      	cbz	r3, 8017516 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017512:	3301      	adds	r3, #1
 8017514:	600b      	str	r3, [r1, #0]
 8017516:	6803      	ldr	r3, [r0, #0]
 8017518:	b10b      	cbz	r3, 801751e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801751a:	881b      	ldrh	r3, [r3, #0]
 801751c:	e7eb      	b.n	80174f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801751e:	680b      	ldr	r3, [r1, #0]
 8017520:	2b00      	cmp	r3, #0
 8017522:	d0e8      	beq.n	80174f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017524:	781b      	ldrb	r3, [r3, #0]
 8017526:	e7e6      	b.n	80174f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017528:	2a06      	cmp	r2, #6
 801752a:	bfa8      	it	ge
 801752c:	2206      	movge	r2, #6
 801752e:	602a      	str	r2, [r5, #0]
 8017530:	e7b1      	b.n	8017496 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017532 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017532:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017536:	b0a3      	sub	sp, #140	; 0x8c
 8017538:	2600      	movs	r6, #0
 801753a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801753e:	4607      	mov	r7, r0
 8017540:	4688      	mov	r8, r1
 8017542:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017546:	4631      	mov	r1, r6
 8017548:	2242      	movs	r2, #66	; 0x42
 801754a:	4648      	mov	r0, r9
 801754c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801754e:	960d      	str	r6, [sp, #52]	; 0x34
 8017550:	f010 fd53 	bl	8027ffa <memset>
 8017554:	b15f      	cbz	r7, 801756e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017556:	f108 3aff 	add.w	sl, r8, #4294967295
 801755a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801755c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801755e:	b152      	cbz	r2, 8017576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017560:	8812      	ldrh	r2, [r2, #0]
 8017562:	b10a      	cbz	r2, 8017568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017564:	459a      	cmp	sl, r3
 8017566:	dc2e      	bgt.n	80175c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017568:	2200      	movs	r2, #0
 801756a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801756e:	4638      	mov	r0, r7
 8017570:	b023      	add	sp, #140	; 0x8c
 8017572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017576:	9a08      	ldr	r2, [sp, #32]
 8017578:	2a00      	cmp	r2, #0
 801757a:	d0f5      	beq.n	8017568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801757c:	7812      	ldrb	r2, [r2, #0]
 801757e:	e7f0      	b.n	8017562 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017580:	2d00      	cmp	r5, #0
 8017582:	d0ea      	beq.n	801755a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017584:	782a      	ldrb	r2, [r5, #0]
 8017586:	b142      	cbz	r2, 801759a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017588:	2a25      	cmp	r2, #37	; 0x25
 801758a:	d001      	beq.n	8017590 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801758c:	459a      	cmp	sl, r3
 801758e:	dc08      	bgt.n	80175a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017590:	f1bb 0f00 	cmp.w	fp, #0
 8017594:	d121      	bne.n	80175da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017596:	2d00      	cmp	r5, #0
 8017598:	d0df      	beq.n	801755a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801759a:	782a      	ldrb	r2, [r5, #0]
 801759c:	f04f 0b00 	mov.w	fp, #0
 80175a0:	e01d      	b.n	80175de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80175a2:	f1bb 0f00 	cmp.w	fp, #0
 80175a6:	d078      	beq.n	801769a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80175a8:	f8bb 2000 	ldrh.w	r2, [fp]
 80175ac:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80175b0:	f1bb 0f00 	cmp.w	fp, #0
 80175b4:	d002      	beq.n	80175bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80175b6:	f10b 0202 	add.w	r2, fp, #2
 80175ba:	9209      	str	r2, [sp, #36]	; 0x24
 80175bc:	b10d      	cbz	r5, 80175c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80175be:	3501      	adds	r5, #1
 80175c0:	9508      	str	r5, [sp, #32]
 80175c2:	3301      	adds	r3, #1
 80175c4:	930d      	str	r3, [sp, #52]	; 0x34
 80175c6:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80175ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80175cc:	f1bb 0f00 	cmp.w	fp, #0
 80175d0:	d0d6      	beq.n	8017580 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80175d2:	f8bb 2000 	ldrh.w	r2, [fp]
 80175d6:	2a00      	cmp	r2, #0
 80175d8:	d1d6      	bne.n	8017588 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80175da:	f8bb 2000 	ldrh.w	r2, [fp]
 80175de:	2a00      	cmp	r2, #0
 80175e0:	d0bb      	beq.n	801755a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80175e2:	459a      	cmp	sl, r3
 80175e4:	ddb9      	ble.n	801755a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80175e6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80175ea:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80175ee:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80175f2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80175f6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80175fa:	960e      	str	r6, [sp, #56]	; 0x38
 80175fc:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017600:	960f      	str	r6, [sp, #60]	; 0x3c
 8017602:	f1bb 0f00 	cmp.w	fp, #0
 8017606:	d002      	beq.n	801760e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017608:	f10b 0302 	add.w	r3, fp, #2
 801760c:	9309      	str	r3, [sp, #36]	; 0x24
 801760e:	b10d      	cbz	r5, 8017614 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017610:	1c6b      	adds	r3, r5, #1
 8017612:	9308      	str	r3, [sp, #32]
 8017614:	ab0f      	add	r3, sp, #60	; 0x3c
 8017616:	9305      	str	r3, [sp, #20]
 8017618:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801761c:	9304      	str	r3, [sp, #16]
 801761e:	ab0e      	add	r3, sp, #56	; 0x38
 8017620:	9303      	str	r3, [sp, #12]
 8017622:	ab0c      	add	r3, sp, #48	; 0x30
 8017624:	9302      	str	r3, [sp, #8]
 8017626:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801762a:	9301      	str	r3, [sp, #4]
 801762c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017630:	9300      	str	r3, [sp, #0]
 8017632:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017636:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801763a:	a908      	add	r1, sp, #32
 801763c:	a809      	add	r0, sp, #36	; 0x24
 801763e:	f7ff fea8 	bl	8017392 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017642:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017644:	2b00      	cmp	r3, #0
 8017646:	bfbe      	ittt	lt
 8017648:	6823      	ldrlt	r3, [r4, #0]
 801764a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801764e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017650:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017652:	bfb8      	it	lt
 8017654:	3404      	addlt	r4, #4
 8017656:	2b00      	cmp	r3, #0
 8017658:	bfb8      	it	lt
 801765a:	6823      	ldrlt	r3, [r4, #0]
 801765c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017660:	bfbe      	ittt	lt
 8017662:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017666:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017668:	3404      	addlt	r4, #4
 801766a:	b1d9      	cbz	r1, 80176a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801766c:	880b      	ldrh	r3, [r1, #0]
 801766e:	2b69      	cmp	r3, #105	; 0x69
 8017670:	d01f      	beq.n	80176b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017672:	d82f      	bhi.n	80176d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017674:	2b58      	cmp	r3, #88	; 0x58
 8017676:	d01c      	beq.n	80176b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017678:	d818      	bhi.n	80176ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801767a:	2b25      	cmp	r3, #37	; 0x25
 801767c:	d034      	beq.n	80176e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801767e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017682:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017684:	f1bb 0f00 	cmp.w	fp, #0
 8017688:	f000 80b8 	beq.w	80177fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801768c:	f8bb 5000 	ldrh.w	r5, [fp]
 8017690:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017694:	3301      	adds	r3, #1
 8017696:	930d      	str	r3, [sp, #52]	; 0x34
 8017698:	e029      	b.n	80176ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801769a:	b10d      	cbz	r5, 80176a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801769c:	782a      	ldrb	r2, [r5, #0]
 801769e:	e785      	b.n	80175ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80176a0:	462a      	mov	r2, r5
 80176a2:	e783      	b.n	80175ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80176a4:	2a00      	cmp	r2, #0
 80176a6:	d0ea      	beq.n	801767e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80176a8:	7813      	ldrb	r3, [r2, #0]
 80176aa:	e7e0      	b.n	801766e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80176ac:	3b63      	subs	r3, #99	; 0x63
 80176ae:	2b01      	cmp	r3, #1
 80176b0:	d8e5      	bhi.n	801767e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80176b2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80176b6:	b329      	cbz	r1, 8017704 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80176b8:	880b      	ldrh	r3, [r1, #0]
 80176ba:	2b69      	cmp	r3, #105	; 0x69
 80176bc:	d063      	beq.n	8017786 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80176be:	d825      	bhi.n	801770c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80176c0:	2b63      	cmp	r3, #99	; 0x63
 80176c2:	d038      	beq.n	8017736 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80176c4:	2b64      	cmp	r3, #100	; 0x64
 80176c6:	d05e      	beq.n	8017786 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80176c8:	2b58      	cmp	r3, #88	; 0x58
 80176ca:	d07b      	beq.n	80177c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80176cc:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80176d0:	4625      	mov	r5, r4
 80176d2:	e036      	b.n	8017742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80176d4:	2b73      	cmp	r3, #115	; 0x73
 80176d6:	d0ec      	beq.n	80176b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80176d8:	d802      	bhi.n	80176e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80176da:	2b6f      	cmp	r3, #111	; 0x6f
 80176dc:	d1cf      	bne.n	801767e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80176de:	e7e8      	b.n	80176b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80176e0:	2b75      	cmp	r3, #117	; 0x75
 80176e2:	d0e6      	beq.n	80176b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80176e4:	2b78      	cmp	r3, #120	; 0x78
 80176e6:	e7f9      	b.n	80176dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80176e8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80176ea:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80176ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80176f0:	b10b      	cbz	r3, 80176f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80176f2:	3302      	adds	r3, #2
 80176f4:	9309      	str	r3, [sp, #36]	; 0x24
 80176f6:	9b08      	ldr	r3, [sp, #32]
 80176f8:	2b00      	cmp	r3, #0
 80176fa:	f43f af2e 	beq.w	801755a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80176fe:	3301      	adds	r3, #1
 8017700:	9308      	str	r3, [sp, #32]
 8017702:	e72a      	b.n	801755a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017704:	2a00      	cmp	r2, #0
 8017706:	d0e1      	beq.n	80176cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017708:	7813      	ldrb	r3, [r2, #0]
 801770a:	e7d6      	b.n	80176ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801770c:	2b73      	cmp	r3, #115	; 0x73
 801770e:	d036      	beq.n	801777e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8017710:	d807      	bhi.n	8017722 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8017712:	2b6f      	cmp	r3, #111	; 0x6f
 8017714:	d1da      	bne.n	80176cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017716:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017718:	1d25      	adds	r5, r4, #4
 801771a:	eba8 0202 	sub.w	r2, r8, r2
 801771e:	2308      	movs	r3, #8
 8017720:	e04a      	b.n	80177b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017722:	2b75      	cmp	r3, #117	; 0x75
 8017724:	d043      	beq.n	80177ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8017726:	2b78      	cmp	r3, #120	; 0x78
 8017728:	d1d0      	bne.n	80176cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801772a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801772c:	1d25      	adds	r5, r4, #4
 801772e:	eba8 0202 	sub.w	r2, r8, r2
 8017732:	2310      	movs	r3, #16
 8017734:	e040      	b.n	80177b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017736:	6823      	ldr	r3, [r4, #0]
 8017738:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801773c:	1d25      	adds	r5, r4, #4
 801773e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8017742:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017744:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8017748:	2b00      	cmp	r3, #0
 801774a:	d052      	beq.n	80177f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801774c:	881a      	ldrh	r2, [r3, #0]
 801774e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8017752:	a80d      	add	r0, sp, #52	; 0x34
 8017754:	9005      	str	r0, [sp, #20]
 8017756:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801775a:	9004      	str	r0, [sp, #16]
 801775c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801775e:	9003      	str	r0, [sp, #12]
 8017760:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8017764:	9002      	str	r0, [sp, #8]
 8017766:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017768:	9001      	str	r0, [sp, #4]
 801776a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801776e:	9000      	str	r0, [sp, #0]
 8017770:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8017774:	a810      	add	r0, sp, #64	; 0x40
 8017776:	f7ff fd49 	bl	801720c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801777a:	462c      	mov	r4, r5
 801777c:	e7b7      	b.n	80176ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801777e:	6823      	ldr	r3, [r4, #0]
 8017780:	1d25      	adds	r5, r4, #4
 8017782:	9310      	str	r3, [sp, #64]	; 0x40
 8017784:	e7dd      	b.n	8017742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017786:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017788:	6820      	ldr	r0, [r4, #0]
 801778a:	eba8 0202 	sub.w	r2, r8, r2
 801778e:	230a      	movs	r3, #10
 8017790:	b292      	uxth	r2, r2
 8017792:	4649      	mov	r1, r9
 8017794:	f7ff fcf0 	bl	8017178 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017798:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801779c:	2b2d      	cmp	r3, #45	; 0x2d
 801779e:	f104 0504 	add.w	r5, r4, #4
 80177a2:	d1ce      	bne.n	8017742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80177a4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80177a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80177aa:	3302      	adds	r3, #2
 80177ac:	e7e9      	b.n	8017782 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80177ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80177b0:	1d25      	adds	r5, r4, #4
 80177b2:	eba8 0202 	sub.w	r2, r8, r2
 80177b6:	230a      	movs	r3, #10
 80177b8:	b292      	uxth	r2, r2
 80177ba:	4649      	mov	r1, r9
 80177bc:	6820      	ldr	r0, [r4, #0]
 80177be:	f7ff fd07 	bl	80171d0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80177c2:	e7be      	b.n	8017742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80177c4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80177c6:	6820      	ldr	r0, [r4, #0]
 80177c8:	eba8 0202 	sub.w	r2, r8, r2
 80177cc:	b292      	uxth	r2, r2
 80177ce:	2310      	movs	r3, #16
 80177d0:	4649      	mov	r1, r9
 80177d2:	f7ff fcfd 	bl	80171d0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80177d6:	1d25      	adds	r5, r4, #4
 80177d8:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80177dc:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80177e0:	2b00      	cmp	r3, #0
 80177e2:	d0ae      	beq.n	8017742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80177e4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80177e8:	2919      	cmp	r1, #25
 80177ea:	d8f7      	bhi.n	80177dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80177ec:	3b20      	subs	r3, #32
 80177ee:	8013      	strh	r3, [r2, #0]
 80177f0:	e7f4      	b.n	80177dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80177f2:	9a08      	ldr	r2, [sp, #32]
 80177f4:	2a00      	cmp	r2, #0
 80177f6:	d0aa      	beq.n	801774e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80177f8:	7812      	ldrb	r2, [r2, #0]
 80177fa:	e7a8      	b.n	801774e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80177fc:	2d00      	cmp	r5, #0
 80177fe:	f43f af47 	beq.w	8017690 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8017802:	782d      	ldrb	r5, [r5, #0]
 8017804:	e744      	b.n	8017690 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08017806 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8017806:	b507      	push	{r0, r1, r2, lr}
 8017808:	9300      	str	r3, [sp, #0]
 801780a:	4613      	mov	r3, r2
 801780c:	2200      	movs	r2, #0
 801780e:	f7ff fe90 	bl	8017532 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8017812:	b003      	add	sp, #12
 8017814:	f85d fb04 	ldr.w	pc, [sp], #4

08017818 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8017818:	b40c      	push	{r2, r3}
 801781a:	b507      	push	{r0, r1, r2, lr}
 801781c:	ab04      	add	r3, sp, #16
 801781e:	f853 2b04 	ldr.w	r2, [r3], #4
 8017822:	9301      	str	r3, [sp, #4]
 8017824:	f7ff ffef 	bl	8017806 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8017828:	b003      	add	sp, #12
 801782a:	f85d eb04 	ldr.w	lr, [sp], #4
 801782e:	b002      	add	sp, #8
 8017830:	4770      	bx	lr
	...

08017834 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8017834:	4b01      	ldr	r3, [pc, #4]	; (801783c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8017836:	6018      	str	r0, [r3, #0]
 8017838:	4770      	bx	lr
 801783a:	bf00      	nop
 801783c:	20013824 	.word	0x20013824

08017840 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8017840:	4b06      	ldr	r3, [pc, #24]	; (801785c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8017842:	881a      	ldrh	r2, [r3, #0]
 8017844:	4282      	cmp	r2, r0
 8017846:	d807      	bhi.n	8017858 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8017848:	4b05      	ldr	r3, [pc, #20]	; (8017860 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801784a:	881b      	ldrh	r3, [r3, #0]
 801784c:	4413      	add	r3, r2
 801784e:	4298      	cmp	r0, r3
 8017850:	bfac      	ite	ge
 8017852:	2000      	movge	r0, #0
 8017854:	2001      	movlt	r0, #1
 8017856:	4770      	bx	lr
 8017858:	2000      	movs	r0, #0
 801785a:	4770      	bx	lr
 801785c:	20013844 	.word	0x20013844
 8017860:	20013848 	.word	0x20013848

08017864 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017864:	b508      	push	{r3, lr}
 8017866:	4601      	mov	r1, r0
 8017868:	f7ff ffea 	bl	8017840 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801786c:	b118      	cbz	r0, 8017876 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801786e:	4b02      	ldr	r3, [pc, #8]	; (8017878 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8017870:	681b      	ldr	r3, [r3, #0]
 8017872:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8017876:	bd08      	pop	{r3, pc}
 8017878:	20013828 	.word	0x20013828

0801787c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801787c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801787e:	4c24      	ldr	r4, [pc, #144]	; (8017910 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8017880:	6823      	ldr	r3, [r4, #0]
 8017882:	2b00      	cmp	r3, #0
 8017884:	d042      	beq.n	801790c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017886:	4a23      	ldr	r2, [pc, #140]	; (8017914 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8017888:	4d23      	ldr	r5, [pc, #140]	; (8017918 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801788a:	8811      	ldrh	r1, [r2, #0]
 801788c:	f8b5 c000 	ldrh.w	ip, [r5]
 8017890:	4822      	ldr	r0, [pc, #136]	; (801791c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017892:	4461      	add	r1, ip
 8017894:	1c4a      	adds	r2, r1, #1
 8017896:	f022 0201 	bic.w	r2, r2, #1
 801789a:	008f      	lsls	r7, r1, #2
 801789c:	0412      	lsls	r2, r2, #16
 801789e:	19de      	adds	r6, r3, r7
 80178a0:	0c12      	lsrs	r2, r2, #16
 80178a2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80178a6:	6006      	str	r6, [r0, #0]
 80178a8:	4e1d      	ldr	r6, [pc, #116]	; (8017920 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80178aa:	19da      	adds	r2, r3, r7
 80178ac:	6032      	str	r2, [r6, #0]
 80178ae:	220e      	movs	r2, #14
 80178b0:	fb02 f20c 	mul.w	r2, r2, ip
 80178b4:	3203      	adds	r2, #3
 80178b6:	f022 0203 	bic.w	r2, r2, #3
 80178ba:	443a      	add	r2, r7
 80178bc:	4f19      	ldr	r7, [pc, #100]	; (8017924 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80178be:	4413      	add	r3, r2
 80178c0:	603b      	str	r3, [r7, #0]
 80178c2:	4f19      	ldr	r7, [pc, #100]	; (8017928 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80178c4:	2300      	movs	r3, #0
 80178c6:	803b      	strh	r3, [r7, #0]
 80178c8:	4f18      	ldr	r7, [pc, #96]	; (801792c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80178ca:	683f      	ldr	r7, [r7, #0]
 80178cc:	1aba      	subs	r2, r7, r2
 80178ce:	4f18      	ldr	r7, [pc, #96]	; (8017930 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80178d0:	603a      	str	r2, [r7, #0]
 80178d2:	4a18      	ldr	r2, [pc, #96]	; (8017934 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80178d4:	469c      	mov	ip, r3
 80178d6:	8013      	strh	r3, [r2, #0]
 80178d8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80178dc:	428b      	cmp	r3, r1
 80178de:	d10d      	bne.n	80178fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80178e0:	882d      	ldrh	r5, [r5, #0]
 80178e2:	6830      	ldr	r0, [r6, #0]
 80178e4:	2300      	movs	r3, #0
 80178e6:	240e      	movs	r4, #14
 80178e8:	429d      	cmp	r5, r3
 80178ea:	d90f      	bls.n	801790c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80178ec:	fb04 0203 	mla	r2, r4, r3, r0
 80178f0:	3301      	adds	r3, #1
 80178f2:	7b11      	ldrb	r1, [r2, #12]
 80178f4:	f36f 1145 	bfc	r1, #5, #1
 80178f8:	7311      	strb	r1, [r2, #12]
 80178fa:	e7f5      	b.n	80178e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80178fc:	6822      	ldr	r2, [r4, #0]
 80178fe:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017902:	6802      	ldr	r2, [r0, #0]
 8017904:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8017908:	3301      	adds	r3, #1
 801790a:	e7e7      	b.n	80178dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801790c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801790e:	bf00      	nop
 8017910:	20013828 	.word	0x20013828
 8017914:	20013844 	.word	0x20013844
 8017918:	20013848 	.word	0x20013848
 801791c:	2001383c 	.word	0x2001383c
 8017920:	2001382c 	.word	0x2001382c
 8017924:	20013834 	.word	0x20013834
 8017928:	20013846 	.word	0x20013846
 801792c:	20013830 	.word	0x20013830
 8017930:	20013840 	.word	0x20013840
 8017934:	20013838 	.word	0x20013838

08017938 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8017938:	4b06      	ldr	r3, [pc, #24]	; (8017954 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801793a:	681b      	ldr	r3, [r3, #0]
 801793c:	b943      	cbnz	r3, 8017950 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801793e:	b139      	cbz	r1, 8017950 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017940:	4b05      	ldr	r3, [pc, #20]	; (8017958 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8017942:	801a      	strh	r2, [r3, #0]
 8017944:	4b05      	ldr	r3, [pc, #20]	; (801795c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8017946:	6019      	str	r1, [r3, #0]
 8017948:	4b05      	ldr	r3, [pc, #20]	; (8017960 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801794a:	6018      	str	r0, [r3, #0]
 801794c:	f7ff bf96 	b.w	801787c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8017950:	4770      	bx	lr
 8017952:	bf00      	nop
 8017954:	20013834 	.word	0x20013834
 8017958:	20013848 	.word	0x20013848
 801795c:	20013830 	.word	0x20013830
 8017960:	20013828 	.word	0x20013828

08017964 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8017964:	b470      	push	{r4, r5, r6}
 8017966:	4c07      	ldr	r4, [pc, #28]	; (8017984 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8017968:	6826      	ldr	r6, [r4, #0]
 801796a:	4605      	mov	r5, r0
 801796c:	4610      	mov	r0, r2
 801796e:	9a03      	ldr	r2, [sp, #12]
 8017970:	b936      	cbnz	r6, 8017980 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8017972:	6025      	str	r5, [r4, #0]
 8017974:	4c04      	ldr	r4, [pc, #16]	; (8017988 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8017976:	8021      	strh	r1, [r4, #0]
 8017978:	bc70      	pop	{r4, r5, r6}
 801797a:	4619      	mov	r1, r3
 801797c:	f7ff bfdc 	b.w	8017938 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8017980:	bc70      	pop	{r4, r5, r6}
 8017982:	4770      	bx	lr
 8017984:	2001384c 	.word	0x2001384c
 8017988:	20013844 	.word	0x20013844

0801798c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801798c:	4a12      	ldr	r2, [pc, #72]	; (80179d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801798e:	8803      	ldrh	r3, [r0, #0]
 8017990:	8812      	ldrh	r2, [r2, #0]
 8017992:	4293      	cmp	r3, r2
 8017994:	d207      	bcs.n	80179a6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8017996:	4a11      	ldr	r2, [pc, #68]	; (80179dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8017998:	6812      	ldr	r2, [r2, #0]
 801799a:	2114      	movs	r1, #20
 801799c:	fb01 2303 	mla	r3, r1, r3, r2
 80179a0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80179a4:	4770      	bx	lr
 80179a6:	490e      	ldr	r1, [pc, #56]	; (80179e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80179a8:	8809      	ldrh	r1, [r1, #0]
 80179aa:	4411      	add	r1, r2
 80179ac:	428b      	cmp	r3, r1
 80179ae:	da04      	bge.n	80179ba <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80179b0:	1a9b      	subs	r3, r3, r2
 80179b2:	4a0c      	ldr	r2, [pc, #48]	; (80179e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80179b4:	210e      	movs	r1, #14
 80179b6:	6812      	ldr	r2, [r2, #0]
 80179b8:	e7f0      	b.n	801799c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80179ba:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80179be:	4293      	cmp	r3, r2
 80179c0:	d108      	bne.n	80179d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80179c2:	4b09      	ldr	r3, [pc, #36]	; (80179e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80179c4:	781b      	ldrb	r3, [r3, #0]
 80179c6:	b91b      	cbnz	r3, 80179d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80179c8:	4b08      	ldr	r3, [pc, #32]	; (80179ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80179ca:	f9b3 0000 	ldrsh.w	r0, [r3]
 80179ce:	4770      	bx	lr
 80179d0:	4b07      	ldr	r3, [pc, #28]	; (80179f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80179d2:	e7fa      	b.n	80179ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80179d4:	2000      	movs	r0, #0
 80179d6:	4770      	bx	lr
 80179d8:	20013844 	.word	0x20013844
 80179dc:	2001384c 	.word	0x2001384c
 80179e0:	20013848 	.word	0x20013848
 80179e4:	2001382c 	.word	0x2001382c
 80179e8:	200137b4 	.word	0x200137b4
 80179ec:	200137b6 	.word	0x200137b6
 80179f0:	200137b8 	.word	0x200137b8

080179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80179f4:	4a12      	ldr	r2, [pc, #72]	; (8017a40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80179f6:	8803      	ldrh	r3, [r0, #0]
 80179f8:	8812      	ldrh	r2, [r2, #0]
 80179fa:	4293      	cmp	r3, r2
 80179fc:	d207      	bcs.n	8017a0e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80179fe:	4a11      	ldr	r2, [pc, #68]	; (8017a44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8017a00:	6812      	ldr	r2, [r2, #0]
 8017a02:	2114      	movs	r1, #20
 8017a04:	fb01 2303 	mla	r3, r1, r3, r2
 8017a08:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8017a0c:	4770      	bx	lr
 8017a0e:	490e      	ldr	r1, [pc, #56]	; (8017a48 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8017a10:	8809      	ldrh	r1, [r1, #0]
 8017a12:	4411      	add	r1, r2
 8017a14:	428b      	cmp	r3, r1
 8017a16:	da04      	bge.n	8017a22 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8017a18:	1a9b      	subs	r3, r3, r2
 8017a1a:	4a0c      	ldr	r2, [pc, #48]	; (8017a4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8017a1c:	210e      	movs	r1, #14
 8017a1e:	6812      	ldr	r2, [r2, #0]
 8017a20:	e7f0      	b.n	8017a04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8017a22:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017a26:	4293      	cmp	r3, r2
 8017a28:	d108      	bne.n	8017a3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8017a2a:	4b09      	ldr	r3, [pc, #36]	; (8017a50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8017a2c:	781b      	ldrb	r3, [r3, #0]
 8017a2e:	b91b      	cbnz	r3, 8017a38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8017a30:	4b08      	ldr	r3, [pc, #32]	; (8017a54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8017a32:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017a36:	4770      	bx	lr
 8017a38:	4b07      	ldr	r3, [pc, #28]	; (8017a58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8017a3a:	e7fa      	b.n	8017a32 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8017a3c:	2000      	movs	r0, #0
 8017a3e:	4770      	bx	lr
 8017a40:	20013844 	.word	0x20013844
 8017a44:	2001384c 	.word	0x2001384c
 8017a48:	20013848 	.word	0x20013848
 8017a4c:	2001382c 	.word	0x2001382c
 8017a50:	200137b4 	.word	0x200137b4
 8017a54:	200137b8 	.word	0x200137b8
 8017a58:	200137b6 	.word	0x200137b6

08017a5c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8017a5c:	b510      	push	{r4, lr}
 8017a5e:	4a1f      	ldr	r2, [pc, #124]	; (8017adc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8017a60:	880b      	ldrh	r3, [r1, #0]
 8017a62:	8812      	ldrh	r2, [r2, #0]
 8017a64:	4293      	cmp	r3, r2
 8017a66:	d213      	bcs.n	8017a90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8017a68:	4a1d      	ldr	r2, [pc, #116]	; (8017ae0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8017a6a:	6812      	ldr	r2, [r2, #0]
 8017a6c:	2114      	movs	r1, #20
 8017a6e:	fb01 2303 	mla	r3, r1, r3, r2
 8017a72:	8a1a      	ldrh	r2, [r3, #16]
 8017a74:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8017a78:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8017a7c:	8a5b      	ldrh	r3, [r3, #18]
 8017a7e:	8004      	strh	r4, [r0, #0]
 8017a80:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017a84:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8017a88:	8041      	strh	r1, [r0, #2]
 8017a8a:	8082      	strh	r2, [r0, #4]
 8017a8c:	80c3      	strh	r3, [r0, #6]
 8017a8e:	e00e      	b.n	8017aae <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8017a90:	4914      	ldr	r1, [pc, #80]	; (8017ae4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8017a92:	8809      	ldrh	r1, [r1, #0]
 8017a94:	4411      	add	r1, r2
 8017a96:	428b      	cmp	r3, r1
 8017a98:	da0a      	bge.n	8017ab0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8017a9a:	1a9b      	subs	r3, r3, r2
 8017a9c:	4a12      	ldr	r2, [pc, #72]	; (8017ae8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8017a9e:	6812      	ldr	r2, [r2, #0]
 8017aa0:	210e      	movs	r1, #14
 8017aa2:	fb01 2303 	mla	r3, r1, r3, r2
 8017aa6:	681a      	ldr	r2, [r3, #0]
 8017aa8:	6002      	str	r2, [r0, #0]
 8017aaa:	685a      	ldr	r2, [r3, #4]
 8017aac:	6042      	str	r2, [r0, #4]
 8017aae:	bd10      	pop	{r4, pc}
 8017ab0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017ab4:	4293      	cmp	r3, r2
 8017ab6:	d10b      	bne.n	8017ad0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8017ab8:	4b0c      	ldr	r3, [pc, #48]	; (8017aec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8017aba:	f9b3 1000 	ldrsh.w	r1, [r3]
 8017abe:	4b0c      	ldr	r3, [pc, #48]	; (8017af0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8017ac0:	8081      	strh	r1, [r0, #4]
 8017ac2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017ac6:	80c2      	strh	r2, [r0, #6]
 8017ac8:	2300      	movs	r3, #0
 8017aca:	8003      	strh	r3, [r0, #0]
 8017acc:	8043      	strh	r3, [r0, #2]
 8017ace:	e7ee      	b.n	8017aae <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8017ad0:	2300      	movs	r3, #0
 8017ad2:	8003      	strh	r3, [r0, #0]
 8017ad4:	8043      	strh	r3, [r0, #2]
 8017ad6:	8083      	strh	r3, [r0, #4]
 8017ad8:	e7d8      	b.n	8017a8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8017ada:	bf00      	nop
 8017adc:	20013844 	.word	0x20013844
 8017ae0:	2001384c 	.word	0x2001384c
 8017ae4:	20013848 	.word	0x20013848
 8017ae8:	2001382c 	.word	0x2001382c
 8017aec:	200137b0 	.word	0x200137b0
 8017af0:	200137b2 	.word	0x200137b2

08017af4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8017af4:	4a17      	ldr	r2, [pc, #92]	; (8017b54 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8017af6:	8803      	ldrh	r3, [r0, #0]
 8017af8:	8812      	ldrh	r2, [r2, #0]
 8017afa:	4293      	cmp	r3, r2
 8017afc:	d213      	bcs.n	8017b26 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8017afe:	4a16      	ldr	r2, [pc, #88]	; (8017b58 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8017b00:	6812      	ldr	r2, [r2, #0]
 8017b02:	2114      	movs	r1, #20
 8017b04:	fb01 2303 	mla	r3, r1, r3, r2
 8017b08:	8a1a      	ldrh	r2, [r3, #16]
 8017b0a:	8919      	ldrh	r1, [r3, #8]
 8017b0c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017b10:	428a      	cmp	r2, r1
 8017b12:	db1d      	blt.n	8017b50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017b14:	8a58      	ldrh	r0, [r3, #18]
 8017b16:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8017b1a:	895b      	ldrh	r3, [r3, #10]
 8017b1c:	4298      	cmp	r0, r3
 8017b1e:	bfac      	ite	ge
 8017b20:	2000      	movge	r0, #0
 8017b22:	2001      	movlt	r0, #1
 8017b24:	4770      	bx	lr
 8017b26:	490d      	ldr	r1, [pc, #52]	; (8017b5c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8017b28:	8809      	ldrh	r1, [r1, #0]
 8017b2a:	4411      	add	r1, r2
 8017b2c:	428b      	cmp	r3, r1
 8017b2e:	da0d      	bge.n	8017b4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8017b30:	1a9b      	subs	r3, r3, r2
 8017b32:	4a0b      	ldr	r2, [pc, #44]	; (8017b60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8017b34:	6812      	ldr	r2, [r2, #0]
 8017b36:	210e      	movs	r1, #14
 8017b38:	fb01 2303 	mla	r3, r1, r3, r2
 8017b3c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8017b40:	891a      	ldrh	r2, [r3, #8]
 8017b42:	4291      	cmp	r1, r2
 8017b44:	db04      	blt.n	8017b50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017b46:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8017b4a:	e7e6      	b.n	8017b1a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8017b4c:	2000      	movs	r0, #0
 8017b4e:	4770      	bx	lr
 8017b50:	2001      	movs	r0, #1
 8017b52:	4770      	bx	lr
 8017b54:	20013844 	.word	0x20013844
 8017b58:	2001384c 	.word	0x2001384c
 8017b5c:	20013848 	.word	0x20013848
 8017b60:	2001382c 	.word	0x2001382c

08017b64 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8017b64:	4a12      	ldr	r2, [pc, #72]	; (8017bb0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8017b66:	8803      	ldrh	r3, [r0, #0]
 8017b68:	8811      	ldrh	r1, [r2, #0]
 8017b6a:	428b      	cmp	r3, r1
 8017b6c:	d20b      	bcs.n	8017b86 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8017b6e:	4a11      	ldr	r2, [pc, #68]	; (8017bb4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8017b70:	6812      	ldr	r2, [r2, #0]
 8017b72:	b112      	cbz	r2, 8017b7a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8017b74:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017b78:	b9c0      	cbnz	r0, 8017bac <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8017b7a:	4a0f      	ldr	r2, [pc, #60]	; (8017bb8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8017b7c:	6811      	ldr	r1, [r2, #0]
 8017b7e:	2214      	movs	r2, #20
 8017b80:	4353      	muls	r3, r2
 8017b82:	58c8      	ldr	r0, [r1, r3]
 8017b84:	4770      	bx	lr
 8017b86:	4a0d      	ldr	r2, [pc, #52]	; (8017bbc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8017b88:	8812      	ldrh	r2, [r2, #0]
 8017b8a:	440a      	add	r2, r1
 8017b8c:	4293      	cmp	r3, r2
 8017b8e:	da04      	bge.n	8017b9a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8017b90:	4a08      	ldr	r2, [pc, #32]	; (8017bb4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8017b92:	6812      	ldr	r2, [r2, #0]
 8017b94:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017b98:	4770      	bx	lr
 8017b9a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017b9e:	4293      	cmp	r3, r2
 8017ba0:	d103      	bne.n	8017baa <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8017ba2:	4b07      	ldr	r3, [pc, #28]	; (8017bc0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8017ba4:	681b      	ldr	r3, [r3, #0]
 8017ba6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8017ba8:	4770      	bx	lr
 8017baa:	2000      	movs	r0, #0
 8017bac:	4770      	bx	lr
 8017bae:	bf00      	nop
 8017bb0:	20013844 	.word	0x20013844
 8017bb4:	20013828 	.word	0x20013828
 8017bb8:	2001384c 	.word	0x2001384c
 8017bbc:	20013848 	.word	0x20013848
 8017bc0:	200137bc 	.word	0x200137bc

08017bc4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8017bc4:	4b24      	ldr	r3, [pc, #144]	; (8017c58 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8017bc6:	8802      	ldrh	r2, [r0, #0]
 8017bc8:	8818      	ldrh	r0, [r3, #0]
 8017bca:	4282      	cmp	r2, r0
 8017bcc:	d221      	bcs.n	8017c12 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8017bce:	4b23      	ldr	r3, [pc, #140]	; (8017c5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8017bd0:	6819      	ldr	r1, [r3, #0]
 8017bd2:	2314      	movs	r3, #20
 8017bd4:	fb03 1302 	mla	r3, r3, r2, r1
 8017bd8:	6858      	ldr	r0, [r3, #4]
 8017bda:	2800      	cmp	r0, #0
 8017bdc:	d03a      	beq.n	8017c54 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017bde:	4920      	ldr	r1, [pc, #128]	; (8017c60 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017be0:	6809      	ldr	r1, [r1, #0]
 8017be2:	2900      	cmp	r1, #0
 8017be4:	d036      	beq.n	8017c54 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017be6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8017bea:	2900      	cmp	r1, #0
 8017bec:	d032      	beq.n	8017c54 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017bee:	891a      	ldrh	r2, [r3, #8]
 8017bf0:	8958      	ldrh	r0, [r3, #10]
 8017bf2:	4350      	muls	r0, r2
 8017bf4:	7c5a      	ldrb	r2, [r3, #17]
 8017bf6:	7cdb      	ldrb	r3, [r3, #19]
 8017bf8:	0952      	lsrs	r2, r2, #5
 8017bfa:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8017bfe:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8017c02:	2b0b      	cmp	r3, #11
 8017c04:	bf18      	it	ne
 8017c06:	0040      	lslne	r0, r0, #1
 8017c08:	3003      	adds	r0, #3
 8017c0a:	f020 0003 	bic.w	r0, r0, #3
 8017c0e:	4408      	add	r0, r1
 8017c10:	4770      	bx	lr
 8017c12:	4b14      	ldr	r3, [pc, #80]	; (8017c64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8017c14:	881b      	ldrh	r3, [r3, #0]
 8017c16:	4403      	add	r3, r0
 8017c18:	429a      	cmp	r2, r3
 8017c1a:	da1a      	bge.n	8017c52 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8017c1c:	4b12      	ldr	r3, [pc, #72]	; (8017c68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8017c1e:	681b      	ldr	r3, [r3, #0]
 8017c20:	1a10      	subs	r0, r2, r0
 8017c22:	210e      	movs	r1, #14
 8017c24:	fb01 3000 	mla	r0, r1, r0, r3
 8017c28:	7b03      	ldrb	r3, [r0, #12]
 8017c2a:	f003 031f 	and.w	r3, r3, #31
 8017c2e:	2b0b      	cmp	r3, #11
 8017c30:	d10b      	bne.n	8017c4a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8017c32:	8903      	ldrh	r3, [r0, #8]
 8017c34:	8940      	ldrh	r0, [r0, #10]
 8017c36:	4358      	muls	r0, r3
 8017c38:	4b09      	ldr	r3, [pc, #36]	; (8017c60 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017c3a:	6819      	ldr	r1, [r3, #0]
 8017c3c:	3003      	adds	r0, #3
 8017c3e:	f020 0303 	bic.w	r3, r0, #3
 8017c42:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8017c46:	4418      	add	r0, r3
 8017c48:	4770      	bx	lr
 8017c4a:	2b0d      	cmp	r3, #13
 8017c4c:	d101      	bne.n	8017c52 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8017c4e:	300d      	adds	r0, #13
 8017c50:	4770      	bx	lr
 8017c52:	2000      	movs	r0, #0
 8017c54:	4770      	bx	lr
 8017c56:	bf00      	nop
 8017c58:	20013844 	.word	0x20013844
 8017c5c:	2001384c 	.word	0x2001384c
 8017c60:	20013828 	.word	0x20013828
 8017c64:	20013848 	.word	0x20013848
 8017c68:	2001382c 	.word	0x2001382c

08017c6c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8017c6c:	b510      	push	{r4, lr}
 8017c6e:	4a17      	ldr	r2, [pc, #92]	; (8017ccc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8017c70:	8803      	ldrh	r3, [r0, #0]
 8017c72:	8812      	ldrh	r2, [r2, #0]
 8017c74:	4293      	cmp	r3, r2
 8017c76:	d20c      	bcs.n	8017c92 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8017c78:	4a15      	ldr	r2, [pc, #84]	; (8017cd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8017c7a:	6812      	ldr	r2, [r2, #0]
 8017c7c:	2114      	movs	r1, #20
 8017c7e:	fb01 2303 	mla	r3, r1, r3, r2
 8017c82:	7c58      	ldrb	r0, [r3, #17]
 8017c84:	0942      	lsrs	r2, r0, #5
 8017c86:	7cd8      	ldrb	r0, [r3, #19]
 8017c88:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8017c8c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8017c90:	bd10      	pop	{r4, pc}
 8017c92:	4910      	ldr	r1, [pc, #64]	; (8017cd4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8017c94:	8809      	ldrh	r1, [r1, #0]
 8017c96:	4411      	add	r1, r2
 8017c98:	428b      	cmp	r3, r1
 8017c9a:	da09      	bge.n	8017cb0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8017c9c:	1a9b      	subs	r3, r3, r2
 8017c9e:	4a0e      	ldr	r2, [pc, #56]	; (8017cd8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8017ca0:	6812      	ldr	r2, [r2, #0]
 8017ca2:	210e      	movs	r1, #14
 8017ca4:	fb01 2303 	mla	r3, r1, r3, r2
 8017ca8:	7b18      	ldrb	r0, [r3, #12]
 8017caa:	f000 001f 	and.w	r0, r0, #31
 8017cae:	e7ef      	b.n	8017c90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8017cb0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017cb4:	4293      	cmp	r3, r2
 8017cb6:	d106      	bne.n	8017cc6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8017cb8:	f7eb faf0 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 8017cbc:	6803      	ldr	r3, [r0, #0]
 8017cbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017cc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017cc4:	4718      	bx	r3
 8017cc6:	2000      	movs	r0, #0
 8017cc8:	e7e2      	b.n	8017c90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8017cca:	bf00      	nop
 8017ccc:	20013844 	.word	0x20013844
 8017cd0:	2001384c 	.word	0x2001384c
 8017cd4:	20013848 	.word	0x20013848
 8017cd8:	2001382c 	.word	0x2001382c

08017cdc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8017cdc:	2010      	movs	r0, #16
 8017cde:	4770      	bx	lr

08017ce0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8017ce0:	2000      	movs	r0, #0
 8017ce2:	4770      	bx	lr

08017ce4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8017ce4:	4b02      	ldr	r3, [pc, #8]	; (8017cf0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8017ce6:	8818      	ldrh	r0, [r3, #0]
 8017ce8:	0040      	lsls	r0, r0, #1
 8017cea:	b280      	uxth	r0, r0
 8017cec:	4770      	bx	lr
 8017cee:	bf00      	nop
 8017cf0:	200137b6 	.word	0x200137b6

08017cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017cf4:	2bff      	cmp	r3, #255	; 0xff
 8017cf6:	d050      	beq.n	8017d9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8017cf8:	2a0b      	cmp	r2, #11
 8017cfa:	d04a      	beq.n	8017d92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8017cfc:	d80e      	bhi.n	8017d1c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8017cfe:	2a03      	cmp	r2, #3
 8017d00:	d03f      	beq.n	8017d82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8017d02:	d804      	bhi.n	8017d0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8017d04:	2a01      	cmp	r2, #1
 8017d06:	d03e      	beq.n	8017d86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8017d08:	d93f      	bls.n	8017d8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8017d0a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8017d0c:	4770      	bx	lr
 8017d0e:	2a09      	cmp	r2, #9
 8017d10:	d03f      	beq.n	8017d92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8017d12:	d83c      	bhi.n	8017d8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8017d14:	2a08      	cmp	r2, #8
 8017d16:	d03a      	beq.n	8017d8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8017d18:	2000      	movs	r0, #0
 8017d1a:	4770      	bx	lr
 8017d1c:	2a2f      	cmp	r2, #47	; 0x2f
 8017d1e:	d024      	beq.n	8017d6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8017d20:	d80d      	bhi.n	8017d3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8017d22:	2a2d      	cmp	r2, #45	; 0x2d
 8017d24:	d014      	beq.n	8017d50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8017d26:	d826      	bhi.n	8017d76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8017d28:	2a2c      	cmp	r2, #44	; 0x2c
 8017d2a:	d1f5      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017d2c:	684b      	ldr	r3, [r1, #4]
 8017d2e:	781b      	ldrb	r3, [r3, #0]
 8017d30:	2b01      	cmp	r3, #1
 8017d32:	d018      	beq.n	8017d66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8017d34:	d323      	bcc.n	8017d7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8017d36:	2b02      	cmp	r3, #2
 8017d38:	d1ee      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017d3a:	6880      	ldr	r0, [r0, #8]
 8017d3c:	4770      	bx	lr
 8017d3e:	2a31      	cmp	r2, #49	; 0x31
 8017d40:	d004      	beq.n	8017d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8017d42:	d328      	bcc.n	8017d96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8017d44:	2a32      	cmp	r2, #50	; 0x32
 8017d46:	d026      	beq.n	8017d96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8017d48:	2a33      	cmp	r2, #51	; 0x33
 8017d4a:	d1e5      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017d4c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8017d4e:	4770      	bx	lr
 8017d50:	684b      	ldr	r3, [r1, #4]
 8017d52:	781b      	ldrb	r3, [r3, #0]
 8017d54:	2b01      	cmp	r3, #1
 8017d56:	d004      	beq.n	8017d62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8017d58:	d30b      	bcc.n	8017d72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017d5a:	2b02      	cmp	r3, #2
 8017d5c:	d1dc      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017d5e:	6900      	ldr	r0, [r0, #16]
 8017d60:	4770      	bx	lr
 8017d62:	6a00      	ldr	r0, [r0, #32]
 8017d64:	4770      	bx	lr
 8017d66:	6980      	ldr	r0, [r0, #24]
 8017d68:	4770      	bx	lr
 8017d6a:	684b      	ldr	r3, [r1, #4]
 8017d6c:	781b      	ldrb	r3, [r3, #0]
 8017d6e:	2b00      	cmp	r3, #0
 8017d70:	d1d2      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017d72:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8017d74:	4770      	bx	lr
 8017d76:	684b      	ldr	r3, [r1, #4]
 8017d78:	781b      	ldrb	r3, [r3, #0]
 8017d7a:	2b00      	cmp	r3, #0
 8017d7c:	d1cc      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017d7e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8017d80:	4770      	bx	lr
 8017d82:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8017d84:	4770      	bx	lr
 8017d86:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8017d88:	4770      	bx	lr
 8017d8a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8017d8c:	4770      	bx	lr
 8017d8e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8017d90:	4770      	bx	lr
 8017d92:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8017d94:	4770      	bx	lr
 8017d96:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8017d98:	4770      	bx	lr
 8017d9a:	2a0b      	cmp	r2, #11
 8017d9c:	d049      	beq.n	8017e32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8017d9e:	d80e      	bhi.n	8017dbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8017da0:	2a03      	cmp	r2, #3
 8017da2:	d040      	beq.n	8017e26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8017da4:	d804      	bhi.n	8017db0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8017da6:	2a01      	cmp	r2, #1
 8017da8:	d03f      	beq.n	8017e2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8017daa:	d940      	bls.n	8017e2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8017dac:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8017dae:	4770      	bx	lr
 8017db0:	2a09      	cmp	r2, #9
 8017db2:	d03e      	beq.n	8017e32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8017db4:	d801      	bhi.n	8017dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8017db6:	2a08      	cmp	r2, #8
 8017db8:	d1ae      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017dba:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8017dbc:	4770      	bx	lr
 8017dbe:	2a2f      	cmp	r2, #47	; 0x2f
 8017dc0:	d024      	beq.n	8017e0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8017dc2:	d80d      	bhi.n	8017de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8017dc4:	2a2d      	cmp	r2, #45	; 0x2d
 8017dc6:	d014      	beq.n	8017df2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8017dc8:	d826      	bhi.n	8017e18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8017dca:	2a2c      	cmp	r2, #44	; 0x2c
 8017dcc:	d1a4      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017dce:	684b      	ldr	r3, [r1, #4]
 8017dd0:	781b      	ldrb	r3, [r3, #0]
 8017dd2:	2b01      	cmp	r3, #1
 8017dd4:	d018      	beq.n	8017e08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8017dd6:	d324      	bcc.n	8017e22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8017dd8:	2b02      	cmp	r3, #2
 8017dda:	d19d      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017ddc:	68c0      	ldr	r0, [r0, #12]
 8017dde:	4770      	bx	lr
 8017de0:	2a31      	cmp	r2, #49	; 0x31
 8017de2:	d004      	beq.n	8017dee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8017de4:	d327      	bcc.n	8017e36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017de6:	2a32      	cmp	r2, #50	; 0x32
 8017de8:	d025      	beq.n	8017e36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017dea:	2a33      	cmp	r2, #51	; 0x33
 8017dec:	d194      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017dee:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8017df0:	4770      	bx	lr
 8017df2:	684b      	ldr	r3, [r1, #4]
 8017df4:	781b      	ldrb	r3, [r3, #0]
 8017df6:	2b01      	cmp	r3, #1
 8017df8:	d004      	beq.n	8017e04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8017dfa:	d30b      	bcc.n	8017e14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8017dfc:	2b02      	cmp	r3, #2
 8017dfe:	d18b      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017e00:	6940      	ldr	r0, [r0, #20]
 8017e02:	4770      	bx	lr
 8017e04:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8017e06:	4770      	bx	lr
 8017e08:	69c0      	ldr	r0, [r0, #28]
 8017e0a:	4770      	bx	lr
 8017e0c:	684b      	ldr	r3, [r1, #4]
 8017e0e:	781b      	ldrb	r3, [r3, #0]
 8017e10:	2b00      	cmp	r3, #0
 8017e12:	d181      	bne.n	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017e14:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8017e16:	4770      	bx	lr
 8017e18:	684b      	ldr	r3, [r1, #4]
 8017e1a:	781b      	ldrb	r3, [r3, #0]
 8017e1c:	2b00      	cmp	r3, #0
 8017e1e:	f47f af7b 	bne.w	8017d18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017e22:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8017e24:	4770      	bx	lr
 8017e26:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8017e28:	4770      	bx	lr
 8017e2a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8017e2c:	4770      	bx	lr
 8017e2e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8017e30:	4770      	bx	lr
 8017e32:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8017e34:	4770      	bx	lr
 8017e36:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8017e38:	4770      	bx	lr

08017e3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017e3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e3e:	b087      	sub	sp, #28
 8017e40:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017e42:	9205      	str	r2, [sp, #20]
 8017e44:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017e48:	9202      	str	r2, [sp, #8]
 8017e4a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017e4e:	9101      	str	r1, [sp, #4]
 8017e50:	6841      	ldr	r1, [r0, #4]
 8017e52:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8017e56:	fb01 2404 	mla	r4, r1, r4, r2
 8017e5a:	6802      	ldr	r2, [r0, #0]
 8017e5c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017e60:	f8de 2000 	ldr.w	r2, [lr]
 8017e64:	9203      	str	r2, [sp, #12]
 8017e66:	f8de 2004 	ldr.w	r2, [lr, #4]
 8017e6a:	3204      	adds	r2, #4
 8017e6c:	9204      	str	r2, [sp, #16]
 8017e6e:	9a02      	ldr	r2, [sp, #8]
 8017e70:	43d6      	mvns	r6, r2
 8017e72:	b2f6      	uxtb	r6, r6
 8017e74:	9a01      	ldr	r2, [sp, #4]
 8017e76:	2a00      	cmp	r2, #0
 8017e78:	dc03      	bgt.n	8017e82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017e7a:	9a05      	ldr	r2, [sp, #20]
 8017e7c:	2a00      	cmp	r2, #0
 8017e7e:	f340 8129 	ble.w	80180d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017e82:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017e84:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017e88:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8017e8c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017e90:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017e92:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017e96:	2b00      	cmp	r3, #0
 8017e98:	dd0e      	ble.n	8017eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017e9a:	1408      	asrs	r0, r1, #16
 8017e9c:	d405      	bmi.n	8017eaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017e9e:	4560      	cmp	r0, ip
 8017ea0:	da03      	bge.n	8017eaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017ea2:	1410      	asrs	r0, r2, #16
 8017ea4:	d401      	bmi.n	8017eaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017ea6:	42b8      	cmp	r0, r7
 8017ea8:	db07      	blt.n	8017eba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017eaa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017eac:	4401      	add	r1, r0
 8017eae:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017eb0:	3b01      	subs	r3, #1
 8017eb2:	4402      	add	r2, r0
 8017eb4:	3402      	adds	r4, #2
 8017eb6:	e7ee      	b.n	8017e96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017eb8:	d071      	beq.n	8017f9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017eba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017ebc:	1e58      	subs	r0, r3, #1
 8017ebe:	fb05 1500 	mla	r5, r5, r0, r1
 8017ec2:	142d      	asrs	r5, r5, #16
 8017ec4:	d45f      	bmi.n	8017f86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017ec6:	4565      	cmp	r5, ip
 8017ec8:	da5d      	bge.n	8017f86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017eca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017ecc:	fb05 2000 	mla	r0, r5, r0, r2
 8017ed0:	1400      	asrs	r0, r0, #16
 8017ed2:	d458      	bmi.n	8017f86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017ed4:	42b8      	cmp	r0, r7
 8017ed6:	da56      	bge.n	8017f86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017ed8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8017edc:	4699      	mov	r9, r3
 8017ede:	46a2      	mov	sl, r4
 8017ee0:	f1b9 0f00 	cmp.w	r9, #0
 8017ee4:	dd57      	ble.n	8017f96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8017ee6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017eea:	9803      	ldr	r0, [sp, #12]
 8017eec:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8017ef0:	140d      	asrs	r5, r1, #16
 8017ef2:	fb07 000c 	mla	r0, r7, ip, r0
 8017ef6:	f109 39ff 	add.w	r9, r9, #4294967295
 8017efa:	5d40      	ldrb	r0, [r0, r5]
 8017efc:	9d04      	ldr	r5, [sp, #16]
 8017efe:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017f02:	f8ba 5000 	ldrh.w	r5, [sl]
 8017f06:	122f      	asrs	r7, r5, #8
 8017f08:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017f0c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017f10:	fb17 f706 	smulbb	r7, r7, r6
 8017f14:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017f18:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017f1c:	00ed      	lsls	r5, r5, #3
 8017f1e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8017f22:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8017f26:	10c7      	asrs	r7, r0, #3
 8017f28:	b2ed      	uxtb	r5, r5
 8017f2a:	00c0      	lsls	r0, r0, #3
 8017f2c:	fb18 f806 	smulbb	r8, r8, r6
 8017f30:	fb15 f506 	smulbb	r5, r5, r6
 8017f34:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017f38:	b2c0      	uxtb	r0, r0
 8017f3a:	fa1f fc8c 	uxth.w	ip, ip
 8017f3e:	fb07 870b 	mla	r7, r7, fp, r8
 8017f42:	fb00 500b 	mla	r0, r0, fp, r5
 8017f46:	b280      	uxth	r0, r0
 8017f48:	b2bf      	uxth	r7, r7
 8017f4a:	f10c 0501 	add.w	r5, ip, #1
 8017f4e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017f52:	f107 0801 	add.w	r8, r7, #1
 8017f56:	1c45      	adds	r5, r0, #1
 8017f58:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017f5c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017f60:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017f62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017f66:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017f6a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017f6e:	ea45 0c0c 	orr.w	ip, r5, ip
 8017f72:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017f76:	4401      	add	r1, r0
 8017f78:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017f7a:	ea4c 0c08 	orr.w	ip, ip, r8
 8017f7e:	f82a cb02 	strh.w	ip, [sl], #2
 8017f82:	4402      	add	r2, r0
 8017f84:	e7ac      	b.n	8017ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017f86:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8017f8a:	f04f 0800 	mov.w	r8, #0
 8017f8e:	eb03 0008 	add.w	r0, r3, r8
 8017f92:	2800      	cmp	r0, #0
 8017f94:	dc41      	bgt.n	801801a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017f96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017f9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017f9e:	9b01      	ldr	r3, [sp, #4]
 8017fa0:	2b00      	cmp	r3, #0
 8017fa2:	f340 8097 	ble.w	80180d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017fa6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017faa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017fae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017fb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017fb4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017fb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017fbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017fc0:	eef0 6a62 	vmov.f32	s13, s5
 8017fc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017fc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017fcc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017fd0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8017fd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017fd8:	eef0 6a43 	vmov.f32	s13, s6
 8017fdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017fe0:	ee12 2a90 	vmov	r2, s5
 8017fe4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017fe8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017fec:	ee13 2a10 	vmov	r2, s6
 8017ff0:	9313      	str	r3, [sp, #76]	; 0x4c
 8017ff2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017ff4:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ff8:	9314      	str	r3, [sp, #80]	; 0x50
 8017ffa:	9b01      	ldr	r3, [sp, #4]
 8017ffc:	9a05      	ldr	r2, [sp, #20]
 8017ffe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018002:	3b01      	subs	r3, #1
 8018004:	9301      	str	r3, [sp, #4]
 8018006:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801800a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801800c:	eeb0 3a67 	vmov.f32	s6, s15
 8018010:	bf08      	it	eq
 8018012:	4613      	moveq	r3, r2
 8018014:	eef0 2a47 	vmov.f32	s5, s14
 8018018:	e72c      	b.n	8017e74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801801a:	140f      	asrs	r7, r1, #16
 801801c:	d453      	bmi.n	80180c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801801e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018022:	42bd      	cmp	r5, r7
 8018024:	dd4f      	ble.n	80180c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018026:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801802a:	d44c      	bmi.n	80180c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801802c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018030:	4560      	cmp	r0, ip
 8018032:	dd48      	ble.n	80180c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018034:	9803      	ldr	r0, [sp, #12]
 8018036:	b22d      	sxth	r5, r5
 8018038:	fb0c 0505 	mla	r5, ip, r5, r0
 801803c:	5de8      	ldrb	r0, [r5, r7]
 801803e:	9d04      	ldr	r5, [sp, #16]
 8018040:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018044:	f06f 0501 	mvn.w	r5, #1
 8018048:	fb05 fb08 	mul.w	fp, r5, r8
 801804c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018050:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018054:	122f      	asrs	r7, r5, #8
 8018056:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801805a:	fb17 f706 	smulbb	r7, r7, r6
 801805e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018062:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018066:	00ed      	lsls	r5, r5, #3
 8018068:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801806c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018070:	10c7      	asrs	r7, r0, #3
 8018072:	b2ed      	uxtb	r5, r5
 8018074:	00c0      	lsls	r0, r0, #3
 8018076:	fb19 f906 	smulbb	r9, r9, r6
 801807a:	fb15 f506 	smulbb	r5, r5, r6
 801807e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018082:	b2c0      	uxtb	r0, r0
 8018084:	fa1f fc8c 	uxth.w	ip, ip
 8018088:	fb07 970a 	mla	r7, r7, sl, r9
 801808c:	fb00 500a 	mla	r0, r0, sl, r5
 8018090:	b2bf      	uxth	r7, r7
 8018092:	b280      	uxth	r0, r0
 8018094:	f10c 0501 	add.w	r5, ip, #1
 8018098:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801809c:	f107 0901 	add.w	r9, r7, #1
 80180a0:	1c45      	adds	r5, r0, #1
 80180a2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80180a6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80180aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80180ae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80180b2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80180b6:	ea45 0c0c 	orr.w	ip, r5, ip
 80180ba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80180be:	ea4c 0c09 	orr.w	ip, ip, r9
 80180c2:	f824 c00b 	strh.w	ip, [r4, fp]
 80180c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80180c8:	4401      	add	r1, r0
 80180ca:	9814      	ldr	r0, [sp, #80]	; 0x50
 80180cc:	f108 38ff 	add.w	r8, r8, #4294967295
 80180d0:	4402      	add	r2, r0
 80180d2:	e75c      	b.n	8017f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80180d4:	b007      	add	sp, #28
 80180d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080180da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80180da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180de:	b085      	sub	sp, #20
 80180e0:	4693      	mov	fp, r2
 80180e2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80180e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80180e6:	6870      	ldr	r0, [r6, #4]
 80180e8:	9100      	str	r1, [sp, #0]
 80180ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80180ee:	fb00 2404 	mla	r4, r0, r4, r2
 80180f2:	6832      	ldr	r2, [r6, #0]
 80180f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80180f8:	682a      	ldr	r2, [r5, #0]
 80180fa:	9201      	str	r2, [sp, #4]
 80180fc:	686a      	ldr	r2, [r5, #4]
 80180fe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018102:	3204      	adds	r2, #4
 8018104:	9202      	str	r2, [sp, #8]
 8018106:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801810a:	9a00      	ldr	r2, [sp, #0]
 801810c:	2a00      	cmp	r2, #0
 801810e:	dc03      	bgt.n	8018118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018110:	f1bb 0f00 	cmp.w	fp, #0
 8018114:	f340 80a0 	ble.w	8018258 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018118:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801811a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801811e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018122:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018126:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018128:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801812c:	2b00      	cmp	r3, #0
 801812e:	dd0c      	ble.n	801814a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018130:	1406      	asrs	r6, r0, #16
 8018132:	d405      	bmi.n	8018140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018134:	454e      	cmp	r6, r9
 8018136:	da03      	bge.n	8018140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018138:	1416      	asrs	r6, r2, #16
 801813a:	d401      	bmi.n	8018140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801813c:	4546      	cmp	r6, r8
 801813e:	db05      	blt.n	801814c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018140:	4470      	add	r0, lr
 8018142:	4462      	add	r2, ip
 8018144:	3b01      	subs	r3, #1
 8018146:	3402      	adds	r4, #2
 8018148:	e7f0      	b.n	801812c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801814a:	d00f      	beq.n	801816c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801814c:	1e5e      	subs	r6, r3, #1
 801814e:	fb0e 0706 	mla	r7, lr, r6, r0
 8018152:	143f      	asrs	r7, r7, #16
 8018154:	d541      	bpl.n	80181da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018156:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801815a:	4698      	mov	r8, r3
 801815c:	9603      	str	r6, [sp, #12]
 801815e:	f1b8 0f00 	cmp.w	r8, #0
 8018162:	dc59      	bgt.n	8018218 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018164:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018168:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801816c:	9b00      	ldr	r3, [sp, #0]
 801816e:	2b00      	cmp	r3, #0
 8018170:	dd72      	ble.n	8018258 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018172:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018176:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801817a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801817e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018180:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018184:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018188:	eeb0 6a62 	vmov.f32	s12, s5
 801818c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018190:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018194:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018198:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801819c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80181a0:	eeb0 6a43 	vmov.f32	s12, s6
 80181a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80181a8:	ee12 2a90 	vmov	r2, s5
 80181ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80181b0:	fb92 fef3 	sdiv	lr, r2, r3
 80181b4:	ee13 2a10 	vmov	r2, s6
 80181b8:	fb92 fcf3 	sdiv	ip, r2, r3
 80181bc:	9b00      	ldr	r3, [sp, #0]
 80181be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80181c2:	3b01      	subs	r3, #1
 80181c4:	9300      	str	r3, [sp, #0]
 80181c6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80181ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80181cc:	eeb0 3a67 	vmov.f32	s6, s15
 80181d0:	bf08      	it	eq
 80181d2:	465b      	moveq	r3, fp
 80181d4:	eef0 2a47 	vmov.f32	s5, s14
 80181d8:	e797      	b.n	801810a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80181da:	454f      	cmp	r7, r9
 80181dc:	dabb      	bge.n	8018156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80181de:	fb0c 2606 	mla	r6, ip, r6, r2
 80181e2:	1436      	asrs	r6, r6, #16
 80181e4:	d4b7      	bmi.n	8018156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80181e6:	4546      	cmp	r6, r8
 80181e8:	dab5      	bge.n	8018156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80181ea:	461e      	mov	r6, r3
 80181ec:	46a0      	mov	r8, r4
 80181ee:	2e00      	cmp	r6, #0
 80181f0:	ddb8      	ble.n	8018164 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80181f2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80181f6:	9901      	ldr	r1, [sp, #4]
 80181f8:	1417      	asrs	r7, r2, #16
 80181fa:	ea4f 4920 	mov.w	r9, r0, asr #16
 80181fe:	fb0a 1707 	mla	r7, sl, r7, r1
 8018202:	9902      	ldr	r1, [sp, #8]
 8018204:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018208:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801820c:	f828 7b02 	strh.w	r7, [r8], #2
 8018210:	4470      	add	r0, lr
 8018212:	4462      	add	r2, ip
 8018214:	3e01      	subs	r6, #1
 8018216:	e7ea      	b.n	80181ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018218:	ea5f 4920 	movs.w	r9, r0, asr #16
 801821c:	d417      	bmi.n	801824e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801821e:	68ae      	ldr	r6, [r5, #8]
 8018220:	454e      	cmp	r6, r9
 8018222:	dd14      	ble.n	801824e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018224:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018228:	d411      	bmi.n	801824e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801822a:	68ef      	ldr	r7, [r5, #12]
 801822c:	4557      	cmp	r7, sl
 801822e:	dd0e      	ble.n	801824e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018230:	9f01      	ldr	r7, [sp, #4]
 8018232:	b236      	sxth	r6, r6
 8018234:	fb0a 7606 	mla	r6, sl, r6, r7
 8018238:	9f02      	ldr	r7, [sp, #8]
 801823a:	f816 6009 	ldrb.w	r6, [r6, r9]
 801823e:	f06f 0101 	mvn.w	r1, #1
 8018242:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018246:	fb01 f608 	mul.w	r6, r1, r8
 801824a:	9903      	ldr	r1, [sp, #12]
 801824c:	538f      	strh	r7, [r1, r6]
 801824e:	4470      	add	r0, lr
 8018250:	4462      	add	r2, ip
 8018252:	f108 38ff 	add.w	r8, r8, #4294967295
 8018256:	e782      	b.n	801815e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018258:	b005      	add	sp, #20
 801825a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801825e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801825e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018262:	b087      	sub	sp, #28
 8018264:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018266:	9205      	str	r2, [sp, #20]
 8018268:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801826c:	9203      	str	r2, [sp, #12]
 801826e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018272:	9102      	str	r1, [sp, #8]
 8018274:	6861      	ldr	r1, [r4, #4]
 8018276:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801827a:	fb01 2000 	mla	r0, r1, r0, r2
 801827e:	6822      	ldr	r2, [r4, #0]
 8018280:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018284:	9200      	str	r2, [sp, #0]
 8018286:	f8dc 2000 	ldr.w	r2, [ip]
 801828a:	9204      	str	r2, [sp, #16]
 801828c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018290:	3204      	adds	r2, #4
 8018292:	9201      	str	r2, [sp, #4]
 8018294:	9a03      	ldr	r2, [sp, #12]
 8018296:	43d5      	mvns	r5, r2
 8018298:	b2ed      	uxtb	r5, r5
 801829a:	9a02      	ldr	r2, [sp, #8]
 801829c:	2a00      	cmp	r2, #0
 801829e:	dc03      	bgt.n	80182a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80182a0:	9a05      	ldr	r2, [sp, #20]
 80182a2:	2a00      	cmp	r2, #0
 80182a4:	f340 812c 	ble.w	8018500 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80182a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80182aa:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80182ae:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80182b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80182b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80182b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80182bc:	2b00      	cmp	r3, #0
 80182be:	dd10      	ble.n	80182e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80182c0:	140c      	asrs	r4, r1, #16
 80182c2:	d405      	bmi.n	80182d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80182c4:	4574      	cmp	r4, lr
 80182c6:	da03      	bge.n	80182d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80182c8:	1414      	asrs	r4, r2, #16
 80182ca:	d401      	bmi.n	80182d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80182cc:	42bc      	cmp	r4, r7
 80182ce:	db09      	blt.n	80182e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80182d0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80182d2:	9800      	ldr	r0, [sp, #0]
 80182d4:	4421      	add	r1, r4
 80182d6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80182d8:	3002      	adds	r0, #2
 80182da:	4422      	add	r2, r4
 80182dc:	3b01      	subs	r3, #1
 80182de:	9000      	str	r0, [sp, #0]
 80182e0:	e7ec      	b.n	80182bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80182e2:	d071      	beq.n	80183c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80182e4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80182e6:	1e5c      	subs	r4, r3, #1
 80182e8:	fb06 1604 	mla	r6, r6, r4, r1
 80182ec:	1436      	asrs	r6, r6, #16
 80182ee:	d45d      	bmi.n	80183ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80182f0:	4576      	cmp	r6, lr
 80182f2:	da5b      	bge.n	80183ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80182f4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80182f6:	fb06 2404 	mla	r4, r6, r4, r2
 80182fa:	1424      	asrs	r4, r4, #16
 80182fc:	d456      	bmi.n	80183ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80182fe:	42bc      	cmp	r4, r7
 8018300:	da54      	bge.n	80183ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018302:	f8dd 9000 	ldr.w	r9, [sp]
 8018306:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801830a:	4698      	mov	r8, r3
 801830c:	f1b8 0f00 	cmp.w	r8, #0
 8018310:	dd54      	ble.n	80183bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018312:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018316:	9804      	ldr	r0, [sp, #16]
 8018318:	1414      	asrs	r4, r2, #16
 801831a:	fb07 0404 	mla	r4, r7, r4, r0
 801831e:	140e      	asrs	r6, r1, #16
 8018320:	9801      	ldr	r0, [sp, #4]
 8018322:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018326:	f8b9 4000 	ldrh.w	r4, [r9]
 801832a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801832e:	eb00 0b0e 	add.w	fp, r0, lr
 8018332:	1227      	asrs	r7, r4, #8
 8018334:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018338:	f89b b001 	ldrb.w	fp, [fp, #1]
 801833c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018340:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018342:	fb16 f60a 	smulbb	r6, r6, sl
 8018346:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801834a:	fb07 6705 	mla	r7, r7, r5, r6
 801834e:	10e6      	asrs	r6, r4, #3
 8018350:	00e4      	lsls	r4, r4, #3
 8018352:	b2e4      	uxtb	r4, r4
 8018354:	fb1b fb0a 	smulbb	fp, fp, sl
 8018358:	fb14 f405 	smulbb	r4, r4, r5
 801835c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018360:	b2bf      	uxth	r7, r7
 8018362:	fb06 b605 	mla	r6, r6, r5, fp
 8018366:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801836a:	b2b6      	uxth	r6, r6
 801836c:	fa1f fe8e 	uxth.w	lr, lr
 8018370:	1c7c      	adds	r4, r7, #1
 8018372:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018376:	f106 0b01 	add.w	fp, r6, #1
 801837a:	f10e 0401 	add.w	r4, lr, #1
 801837e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8018382:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018386:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801838a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801838e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018392:	4327      	orrs	r7, r4
 8018394:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018398:	4401      	add	r1, r0
 801839a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801839c:	ea47 070b 	orr.w	r7, r7, fp
 80183a0:	f829 7b02 	strh.w	r7, [r9], #2
 80183a4:	4402      	add	r2, r0
 80183a6:	f108 38ff 	add.w	r8, r8, #4294967295
 80183aa:	e7af      	b.n	801830c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80183ac:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80183b0:	f04f 0e00 	mov.w	lr, #0
 80183b4:	eb03 040e 	add.w	r4, r3, lr
 80183b8:	2c00      	cmp	r4, #0
 80183ba:	dc43      	bgt.n	8018444 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80183bc:	9a00      	ldr	r2, [sp, #0]
 80183be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80183c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80183c6:	9300      	str	r3, [sp, #0]
 80183c8:	9b02      	ldr	r3, [sp, #8]
 80183ca:	2b00      	cmp	r3, #0
 80183cc:	f340 8098 	ble.w	8018500 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80183d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80183d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80183d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80183dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80183de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80183e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80183e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80183ea:	eef0 6a62 	vmov.f32	s13, s5
 80183ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80183f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80183f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80183fa:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80183fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018402:	eef0 6a43 	vmov.f32	s13, s6
 8018406:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801840a:	ee12 2a90 	vmov	r2, s5
 801840e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018412:	fb92 f3f3 	sdiv	r3, r2, r3
 8018416:	ee13 2a10 	vmov	r2, s6
 801841a:	9313      	str	r3, [sp, #76]	; 0x4c
 801841c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801841e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018422:	9314      	str	r3, [sp, #80]	; 0x50
 8018424:	9b02      	ldr	r3, [sp, #8]
 8018426:	9a05      	ldr	r2, [sp, #20]
 8018428:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801842c:	3b01      	subs	r3, #1
 801842e:	9302      	str	r3, [sp, #8]
 8018430:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018434:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018436:	eeb0 3a67 	vmov.f32	s6, s15
 801843a:	bf08      	it	eq
 801843c:	4613      	moveq	r3, r2
 801843e:	eef0 2a47 	vmov.f32	s5, s14
 8018442:	e72a      	b.n	801829a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018444:	140f      	asrs	r7, r1, #16
 8018446:	d454      	bmi.n	80184f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018448:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801844c:	42be      	cmp	r6, r7
 801844e:	dd50      	ble.n	80184f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018450:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018454:	d44d      	bmi.n	80184f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018456:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801845a:	4544      	cmp	r4, r8
 801845c:	dd49      	ble.n	80184f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801845e:	9c04      	ldr	r4, [sp, #16]
 8018460:	b236      	sxth	r6, r6
 8018462:	fb08 4606 	mla	r6, r8, r6, r4
 8018466:	f06f 0001 	mvn.w	r0, #1
 801846a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801846e:	9c01      	ldr	r4, [sp, #4]
 8018470:	fb00 fa0e 	mul.w	sl, r0, lr
 8018474:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018478:	9800      	ldr	r0, [sp, #0]
 801847a:	eb04 0b08 	add.w	fp, r4, r8
 801847e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8018482:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018486:	9801      	ldr	r0, [sp, #4]
 8018488:	f89b b001 	ldrb.w	fp, [fp, #1]
 801848c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018490:	9800      	ldr	r0, [sp, #0]
 8018492:	1227      	asrs	r7, r4, #8
 8018494:	fb16 f609 	smulbb	r6, r6, r9
 8018498:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801849c:	fb07 6705 	mla	r7, r7, r5, r6
 80184a0:	10e6      	asrs	r6, r4, #3
 80184a2:	00e4      	lsls	r4, r4, #3
 80184a4:	b2e4      	uxtb	r4, r4
 80184a6:	fb1b fb09 	smulbb	fp, fp, r9
 80184aa:	fb14 f405 	smulbb	r4, r4, r5
 80184ae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80184b2:	b2bf      	uxth	r7, r7
 80184b4:	fb06 b605 	mla	r6, r6, r5, fp
 80184b8:	fb08 4809 	mla	r8, r8, r9, r4
 80184bc:	b2b6      	uxth	r6, r6
 80184be:	fa1f f888 	uxth.w	r8, r8
 80184c2:	1c7c      	adds	r4, r7, #1
 80184c4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80184c8:	f106 0b01 	add.w	fp, r6, #1
 80184cc:	f108 0401 	add.w	r4, r8, #1
 80184d0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80184d4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80184d8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80184dc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80184e0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80184e4:	4327      	orrs	r7, r4
 80184e6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80184ea:	ea47 070b 	orr.w	r7, r7, fp
 80184ee:	f820 700a 	strh.w	r7, [r0, sl]
 80184f2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80184f4:	4401      	add	r1, r0
 80184f6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80184f8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80184fc:	4402      	add	r2, r0
 80184fe:	e759      	b.n	80183b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018500:	b007      	add	sp, #28
 8018502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018508 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801850c:	b085      	sub	sp, #20
 801850e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018512:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018514:	9203      	str	r2, [sp, #12]
 8018516:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801851a:	6870      	ldr	r0, [r6, #4]
 801851c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801851e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018522:	686f      	ldr	r7, [r5, #4]
 8018524:	9101      	str	r1, [sp, #4]
 8018526:	fb00 2404 	mla	r4, r0, r4, r2
 801852a:	6832      	ldr	r2, [r6, #0]
 801852c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018530:	682a      	ldr	r2, [r5, #0]
 8018532:	9202      	str	r2, [sp, #8]
 8018534:	3704      	adds	r7, #4
 8018536:	9a01      	ldr	r2, [sp, #4]
 8018538:	2a00      	cmp	r2, #0
 801853a:	dc03      	bgt.n	8018544 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801853c:	9a03      	ldr	r2, [sp, #12]
 801853e:	2a00      	cmp	r2, #0
 8018540:	f340 80cc 	ble.w	80186dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018544:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018546:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801854a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801854e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018552:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018554:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018558:	2b00      	cmp	r3, #0
 801855a:	dd0d      	ble.n	8018578 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801855c:	1406      	asrs	r6, r0, #16
 801855e:	d405      	bmi.n	801856c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018560:	454e      	cmp	r6, r9
 8018562:	da03      	bge.n	801856c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018564:	1416      	asrs	r6, r2, #16
 8018566:	d401      	bmi.n	801856c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018568:	4546      	cmp	r6, r8
 801856a:	db06      	blt.n	801857a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801856c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801856e:	4460      	add	r0, ip
 8018570:	4432      	add	r2, r6
 8018572:	3b01      	subs	r3, #1
 8018574:	3402      	adds	r4, #2
 8018576:	e7ef      	b.n	8018558 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018578:	d00f      	beq.n	801859a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801857a:	1e5e      	subs	r6, r3, #1
 801857c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8018580:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018584:	d543      	bpl.n	801860e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018586:	4698      	mov	r8, r3
 8018588:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801858c:	f1b8 0f00 	cmp.w	r8, #0
 8018590:	dc71      	bgt.n	8018676 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018592:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018596:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801859a:	9b01      	ldr	r3, [sp, #4]
 801859c:	2b00      	cmp	r3, #0
 801859e:	f340 809d 	ble.w	80186dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80185a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80185a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80185aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80185ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80185b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80185b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80185b8:	eeb0 6a62 	vmov.f32	s12, s5
 80185bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80185c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80185c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80185c8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80185cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80185d0:	eeb0 6a43 	vmov.f32	s12, s6
 80185d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80185d8:	ee12 2a90 	vmov	r2, s5
 80185dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80185e0:	fb92 fcf3 	sdiv	ip, r2, r3
 80185e4:	ee13 2a10 	vmov	r2, s6
 80185e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80185ec:	9312      	str	r3, [sp, #72]	; 0x48
 80185ee:	9b01      	ldr	r3, [sp, #4]
 80185f0:	9a03      	ldr	r2, [sp, #12]
 80185f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80185f6:	3b01      	subs	r3, #1
 80185f8:	9301      	str	r3, [sp, #4]
 80185fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80185fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018600:	eeb0 3a67 	vmov.f32	s6, s15
 8018604:	bf08      	it	eq
 8018606:	4613      	moveq	r3, r2
 8018608:	eef0 2a47 	vmov.f32	s5, s14
 801860c:	e793      	b.n	8018536 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801860e:	45ce      	cmp	lr, r9
 8018610:	dab9      	bge.n	8018586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018612:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018614:	fb01 2606 	mla	r6, r1, r6, r2
 8018618:	1436      	asrs	r6, r6, #16
 801861a:	d4b4      	bmi.n	8018586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801861c:	4546      	cmp	r6, r8
 801861e:	dab2      	bge.n	8018586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018620:	4698      	mov	r8, r3
 8018622:	46a2      	mov	sl, r4
 8018624:	f1b8 0f00 	cmp.w	r8, #0
 8018628:	ddb3      	ble.n	8018592 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801862a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801862e:	9902      	ldr	r1, [sp, #8]
 8018630:	1416      	asrs	r6, r2, #16
 8018632:	fb09 1606 	mla	r6, r9, r6, r1
 8018636:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801863a:	492a      	ldr	r1, [pc, #168]	; (80186e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801863c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8018640:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018644:	eb07 0b0e 	add.w	fp, r7, lr
 8018648:	4460      	add	r0, ip
 801864a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801864e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8018652:	00f6      	lsls	r6, r6, #3
 8018654:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8018658:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801865c:	ea49 0606 	orr.w	r6, r9, r6
 8018660:	f817 900e 	ldrb.w	r9, [r7, lr]
 8018664:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018666:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801866a:	f82a 6b02 	strh.w	r6, [sl], #2
 801866e:	440a      	add	r2, r1
 8018670:	f108 38ff 	add.w	r8, r8, #4294967295
 8018674:	e7d6      	b.n	8018624 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018676:	ea5f 4920 	movs.w	r9, r0, asr #16
 801867a:	d429      	bmi.n	80186d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801867c:	68ae      	ldr	r6, [r5, #8]
 801867e:	454e      	cmp	r6, r9
 8018680:	dd26      	ble.n	80186d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018682:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8018686:	d423      	bmi.n	80186d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018688:	68e9      	ldr	r1, [r5, #12]
 801868a:	4559      	cmp	r1, fp
 801868c:	dd20      	ble.n	80186d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801868e:	9902      	ldr	r1, [sp, #8]
 8018690:	fa0f fe86 	sxth.w	lr, r6
 8018694:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8018698:	f06f 0101 	mvn.w	r1, #1
 801869c:	f81e e009 	ldrb.w	lr, [lr, r9]
 80186a0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80186a4:	eb07 060e 	add.w	r6, r7, lr
 80186a8:	fb01 f908 	mul.w	r9, r1, r8
 80186ac:	f896 b002 	ldrb.w	fp, [r6, #2]
 80186b0:	7876      	ldrb	r6, [r6, #1]
 80186b2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80186b6:	00f6      	lsls	r6, r6, #3
 80186b8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80186bc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80186c0:	ea4b 0606 	orr.w	r6, fp, r6
 80186c4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80186c8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80186cc:	f82a 6009 	strh.w	r6, [sl, r9]
 80186d0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80186d2:	4460      	add	r0, ip
 80186d4:	440a      	add	r2, r1
 80186d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80186da:	e757      	b.n	801858c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80186dc:	b005      	add	sp, #20
 80186de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186e2:	bf00      	nop
 80186e4:	fffff800 	.word	0xfffff800

080186e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80186e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186ec:	b087      	sub	sp, #28
 80186ee:	468b      	mov	fp, r1
 80186f0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80186f2:	9204      	str	r2, [sp, #16]
 80186f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80186f8:	9205      	str	r2, [sp, #20]
 80186fa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80186fe:	6841      	ldr	r1, [r0, #4]
 8018700:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018704:	fb01 2404 	mla	r4, r1, r4, r2
 8018708:	6802      	ldr	r2, [r0, #0]
 801870a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801870e:	f8dc 2000 	ldr.w	r2, [ip]
 8018712:	9201      	str	r2, [sp, #4]
 8018714:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018718:	3204      	adds	r2, #4
 801871a:	9202      	str	r2, [sp, #8]
 801871c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018720:	f1bb 0f00 	cmp.w	fp, #0
 8018724:	dc03      	bgt.n	801872e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018726:	9a04      	ldr	r2, [sp, #16]
 8018728:	2a00      	cmp	r2, #0
 801872a:	f340 8138 	ble.w	801899e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801872e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018730:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018734:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8018738:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801873c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801873e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018742:	2b00      	cmp	r3, #0
 8018744:	dd0e      	ble.n	8018764 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018746:	1402      	asrs	r2, r0, #16
 8018748:	d405      	bmi.n	8018756 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801874a:	42ba      	cmp	r2, r7
 801874c:	da03      	bge.n	8018756 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801874e:	140a      	asrs	r2, r1, #16
 8018750:	d401      	bmi.n	8018756 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018752:	42b2      	cmp	r2, r6
 8018754:	db07      	blt.n	8018766 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018756:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018758:	4410      	add	r0, r2
 801875a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801875c:	3b01      	subs	r3, #1
 801875e:	4411      	add	r1, r2
 8018760:	3402      	adds	r4, #2
 8018762:	e7ee      	b.n	8018742 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018764:	d019      	beq.n	801879a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018766:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018768:	1e5a      	subs	r2, r3, #1
 801876a:	fb05 0502 	mla	r5, r5, r2, r0
 801876e:	142d      	asrs	r5, r5, #16
 8018770:	d409      	bmi.n	8018786 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018772:	42bd      	cmp	r5, r7
 8018774:	da07      	bge.n	8018786 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018776:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018778:	fb05 1202 	mla	r2, r5, r2, r1
 801877c:	1412      	asrs	r2, r2, #16
 801877e:	d402      	bmi.n	8018786 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018780:	42b2      	cmp	r2, r6
 8018782:	f2c0 80ac 	blt.w	80188de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018786:	f04f 0e00 	mov.w	lr, #0
 801878a:	eb03 020e 	add.w	r2, r3, lr
 801878e:	2a00      	cmp	r2, #0
 8018790:	dc3e      	bgt.n	8018810 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018792:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018796:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801879a:	f1bb 0f00 	cmp.w	fp, #0
 801879e:	f340 80fe 	ble.w	801899e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80187a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80187a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80187aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80187ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80187b0:	f1bb 0b01 	subs.w	fp, fp, #1
 80187b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80187b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80187bc:	eeb0 6a62 	vmov.f32	s12, s5
 80187c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80187c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80187c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80187cc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80187d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80187d4:	eeb0 6a43 	vmov.f32	s12, s6
 80187d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80187dc:	ee12 2a90 	vmov	r2, s5
 80187e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80187e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80187e8:	ee13 2a10 	vmov	r2, s6
 80187ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80187f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80187f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80187f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80187f8:	9a04      	ldr	r2, [sp, #16]
 80187fa:	9314      	str	r3, [sp, #80]	; 0x50
 80187fc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018800:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018802:	eeb0 3a67 	vmov.f32	s6, s15
 8018806:	bf08      	it	eq
 8018808:	4613      	moveq	r3, r2
 801880a:	eef0 2a47 	vmov.f32	s5, s14
 801880e:	e787      	b.n	8018720 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018810:	1406      	asrs	r6, r0, #16
 8018812:	d45d      	bmi.n	80188d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018814:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8018818:	42b5      	cmp	r5, r6
 801881a:	dd59      	ble.n	80188d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801881c:	140f      	asrs	r7, r1, #16
 801881e:	d457      	bmi.n	80188d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018820:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018824:	42ba      	cmp	r2, r7
 8018826:	dd53      	ble.n	80188d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018828:	9a01      	ldr	r2, [sp, #4]
 801882a:	b22d      	sxth	r5, r5
 801882c:	fb07 2505 	mla	r5, r7, r5, r2
 8018830:	5daa      	ldrb	r2, [r5, r6]
 8018832:	9d02      	ldr	r5, [sp, #8]
 8018834:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018838:	0e2e      	lsrs	r6, r5, #24
 801883a:	d049      	beq.n	80188d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801883c:	f06f 0201 	mvn.w	r2, #1
 8018840:	fb02 f20e 	mul.w	r2, r2, lr
 8018844:	9203      	str	r2, [sp, #12]
 8018846:	f834 8002 	ldrh.w	r8, [r4, r2]
 801884a:	9a05      	ldr	r2, [sp, #20]
 801884c:	4356      	muls	r6, r2
 801884e:	1c72      	adds	r2, r6, #1
 8018850:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018854:	1212      	asrs	r2, r2, #8
 8018856:	fa1f f982 	uxth.w	r9, r2
 801885a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801885e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018862:	43d2      	mvns	r2, r2
 8018864:	b2d2      	uxtb	r2, r2
 8018866:	fb16 f609 	smulbb	r6, r6, r9
 801886a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801886e:	fb07 6702 	mla	r7, r7, r2, r6
 8018872:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018876:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801887a:	b2ed      	uxtb	r5, r5
 801887c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018880:	fa5f f888 	uxtb.w	r8, r8
 8018884:	fb15 f509 	smulbb	r5, r5, r9
 8018888:	fb08 5502 	mla	r5, r8, r2, r5
 801888c:	b2bf      	uxth	r7, r7
 801888e:	fb1a fa09 	smulbb	sl, sl, r9
 8018892:	b2ad      	uxth	r5, r5
 8018894:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018898:	fb06 a602 	mla	r6, r6, r2, sl
 801889c:	1c7a      	adds	r2, r7, #1
 801889e:	f105 0a01 	add.w	sl, r5, #1
 80188a2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80188a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80188aa:	b2b6      	uxth	r6, r6
 80188ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80188b0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80188b4:	ea4a 0707 	orr.w	r7, sl, r7
 80188b8:	f106 0a01 	add.w	sl, r6, #1
 80188bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80188c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80188c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80188c8:	9a03      	ldr	r2, [sp, #12]
 80188ca:	ea47 070a 	orr.w	r7, r7, sl
 80188ce:	52a7      	strh	r7, [r4, r2]
 80188d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80188d2:	4410      	add	r0, r2
 80188d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80188d6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80188da:	4411      	add	r1, r2
 80188dc:	e755      	b.n	801878a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80188de:	f04f 0800 	mov.w	r8, #0
 80188e2:	eba3 0208 	sub.w	r2, r3, r8
 80188e6:	2a00      	cmp	r2, #0
 80188e8:	f77f af53 	ble.w	8018792 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80188ec:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80188f0:	9f01      	ldr	r7, [sp, #4]
 80188f2:	140a      	asrs	r2, r1, #16
 80188f4:	1405      	asrs	r5, r0, #16
 80188f6:	fb06 7202 	mla	r2, r6, r2, r7
 80188fa:	5d52      	ldrb	r2, [r2, r5]
 80188fc:	9d02      	ldr	r5, [sp, #8]
 80188fe:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018902:	0e2e      	lsrs	r6, r5, #24
 8018904:	d044      	beq.n	8018990 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8018906:	9a05      	ldr	r2, [sp, #20]
 8018908:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801890c:	4356      	muls	r6, r2
 801890e:	1c72      	adds	r2, r6, #1
 8018910:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018914:	1212      	asrs	r2, r2, #8
 8018916:	fa1f f982 	uxth.w	r9, r2
 801891a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801891e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018922:	43d2      	mvns	r2, r2
 8018924:	b2d2      	uxtb	r2, r2
 8018926:	fb16 f609 	smulbb	r6, r6, r9
 801892a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801892e:	fb07 6702 	mla	r7, r7, r2, r6
 8018932:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018936:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801893a:	b2ed      	uxtb	r5, r5
 801893c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018940:	fa5f fe8e 	uxtb.w	lr, lr
 8018944:	fb15 f509 	smulbb	r5, r5, r9
 8018948:	fb0e 5502 	mla	r5, lr, r2, r5
 801894c:	b2bf      	uxth	r7, r7
 801894e:	fb1a fa09 	smulbb	sl, sl, r9
 8018952:	b2ad      	uxth	r5, r5
 8018954:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018958:	fb06 a602 	mla	r6, r6, r2, sl
 801895c:	1c7a      	adds	r2, r7, #1
 801895e:	f105 0a01 	add.w	sl, r5, #1
 8018962:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018966:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801896a:	b2b6      	uxth	r6, r6
 801896c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018970:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018974:	ea4a 0707 	orr.w	r7, sl, r7
 8018978:	f106 0a01 	add.w	sl, r6, #1
 801897c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018980:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018984:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018988:	ea47 070a 	orr.w	r7, r7, sl
 801898c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018990:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018992:	4410      	add	r0, r2
 8018994:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018996:	f108 0801 	add.w	r8, r8, #1
 801899a:	4411      	add	r1, r2
 801899c:	e7a1      	b.n	80188e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801899e:	b007      	add	sp, #28
 80189a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080189a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80189a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189a8:	b085      	sub	sp, #20
 80189aa:	468b      	mov	fp, r1
 80189ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80189ae:	9203      	str	r2, [sp, #12]
 80189b0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80189b4:	6841      	ldr	r1, [r0, #4]
 80189b6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80189ba:	fb01 2404 	mla	r4, r1, r4, r2
 80189be:	6802      	ldr	r2, [r0, #0]
 80189c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80189c4:	f8de 2000 	ldr.w	r2, [lr]
 80189c8:	9200      	str	r2, [sp, #0]
 80189ca:	f8de 2004 	ldr.w	r2, [lr, #4]
 80189ce:	3204      	adds	r2, #4
 80189d0:	9201      	str	r2, [sp, #4]
 80189d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80189d6:	f1bb 0f00 	cmp.w	fp, #0
 80189da:	dc03      	bgt.n	80189e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80189dc:	9a03      	ldr	r2, [sp, #12]
 80189de:	2a00      	cmp	r2, #0
 80189e0:	f340 8153 	ble.w	8018c8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80189e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80189e6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80189ea:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80189ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80189f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80189f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80189f8:	2b00      	cmp	r3, #0
 80189fa:	dd0e      	ble.n	8018a1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80189fc:	1408      	asrs	r0, r1, #16
 80189fe:	d405      	bmi.n	8018a0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018a00:	42b8      	cmp	r0, r7
 8018a02:	da03      	bge.n	8018a0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018a04:	1410      	asrs	r0, r2, #16
 8018a06:	d401      	bmi.n	8018a0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018a08:	42b0      	cmp	r0, r6
 8018a0a:	db07      	blt.n	8018a1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018a0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018a0e:	4401      	add	r1, r0
 8018a10:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018a12:	3b01      	subs	r3, #1
 8018a14:	4402      	add	r2, r0
 8018a16:	3402      	adds	r4, #2
 8018a18:	e7ee      	b.n	80189f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018a1a:	d017      	beq.n	8018a4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018a1c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018a1e:	1e58      	subs	r0, r3, #1
 8018a20:	fb05 1500 	mla	r5, r5, r0, r1
 8018a24:	142d      	asrs	r5, r5, #16
 8018a26:	d409      	bmi.n	8018a3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018a28:	42bd      	cmp	r5, r7
 8018a2a:	da07      	bge.n	8018a3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018a2c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018a2e:	fb05 2000 	mla	r0, r5, r0, r2
 8018a32:	1400      	asrs	r0, r0, #16
 8018a34:	d402      	bmi.n	8018a3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018a36:	42b0      	cmp	r0, r6
 8018a38:	f2c0 80bc 	blt.w	8018bb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8018a3c:	2600      	movs	r6, #0
 8018a3e:	1998      	adds	r0, r3, r6
 8018a40:	2800      	cmp	r0, #0
 8018a42:	dc3e      	bgt.n	8018ac2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8018a44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018a48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018a4c:	f1bb 0f00 	cmp.w	fp, #0
 8018a50:	f340 811b 	ble.w	8018c8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018a54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018a58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018a5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018a60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018a62:	f1bb 0b01 	subs.w	fp, fp, #1
 8018a66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018a6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018a6e:	eeb0 6a62 	vmov.f32	s12, s5
 8018a72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018a76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018a7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018a7e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018a82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a86:	eeb0 6a43 	vmov.f32	s12, s6
 8018a8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a8e:	ee12 2a90 	vmov	r2, s5
 8018a92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a96:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a9a:	ee13 2a10 	vmov	r2, s6
 8018a9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018aa2:	9311      	str	r3, [sp, #68]	; 0x44
 8018aa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018aa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8018aaa:	9a03      	ldr	r2, [sp, #12]
 8018aac:	9312      	str	r3, [sp, #72]	; 0x48
 8018aae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018ab2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ab4:	eeb0 3a67 	vmov.f32	s6, s15
 8018ab8:	bf08      	it	eq
 8018aba:	4613      	moveq	r3, r2
 8018abc:	eef0 2a47 	vmov.f32	s5, s14
 8018ac0:	e789      	b.n	80189d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8018ac2:	140f      	asrs	r7, r1, #16
 8018ac4:	d426      	bmi.n	8018b14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018ac6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018aca:	42bd      	cmp	r5, r7
 8018acc:	dd22      	ble.n	8018b14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018ace:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018ad2:	d41f      	bmi.n	8018b14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018ad4:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018ad8:	4560      	cmp	r0, ip
 8018ada:	dd1b      	ble.n	8018b14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018adc:	9800      	ldr	r0, [sp, #0]
 8018ade:	b22d      	sxth	r5, r5
 8018ae0:	fb0c 0505 	mla	r5, ip, r5, r0
 8018ae4:	5de8      	ldrb	r0, [r5, r7]
 8018ae6:	9d01      	ldr	r5, [sp, #4]
 8018ae8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8018aec:	0e07      	lsrs	r7, r0, #24
 8018aee:	2fff      	cmp	r7, #255	; 0xff
 8018af0:	d116      	bne.n	8018b20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018af2:	f06f 0501 	mvn.w	r5, #1
 8018af6:	fb05 f706 	mul.w	r7, r5, r6
 8018afa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8018afe:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8018b02:	0945      	lsrs	r5, r0, #5
 8018b04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018b08:	ea4c 0505 	orr.w	r5, ip, r5
 8018b0c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018b10:	4305      	orrs	r5, r0
 8018b12:	53e5      	strh	r5, [r4, r7]
 8018b14:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018b16:	4401      	add	r1, r0
 8018b18:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018b1a:	3e01      	subs	r6, #1
 8018b1c:	4402      	add	r2, r0
 8018b1e:	e78e      	b.n	8018a3e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018b20:	b2fd      	uxtb	r5, r7
 8018b22:	2f00      	cmp	r7, #0
 8018b24:	d0f6      	beq.n	8018b14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018b26:	f06f 0701 	mvn.w	r7, #1
 8018b2a:	4377      	muls	r7, r6
 8018b2c:	fa1f f985 	uxth.w	r9, r5
 8018b30:	f834 8007 	ldrh.w	r8, [r4, r7]
 8018b34:	9702      	str	r7, [sp, #8]
 8018b36:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018b3a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8018b3e:	43ed      	mvns	r5, r5
 8018b40:	b2ed      	uxtb	r5, r5
 8018b42:	fb17 f709 	smulbb	r7, r7, r9
 8018b46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018b4a:	fb0c 7c05 	mla	ip, ip, r5, r7
 8018b4e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8018b52:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8018b56:	b2c0      	uxtb	r0, r0
 8018b58:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018b5c:	fa5f f888 	uxtb.w	r8, r8
 8018b60:	fb10 f009 	smulbb	r0, r0, r9
 8018b64:	fb08 0005 	mla	r0, r8, r5, r0
 8018b68:	b280      	uxth	r0, r0
 8018b6a:	fa1f fc8c 	uxth.w	ip, ip
 8018b6e:	fb1a fa09 	smulbb	sl, sl, r9
 8018b72:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018b76:	fb07 a705 	mla	r7, r7, r5, sl
 8018b7a:	f100 0a01 	add.w	sl, r0, #1
 8018b7e:	f10c 0501 	add.w	r5, ip, #1
 8018b82:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018b86:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018b8a:	b2bf      	uxth	r7, r7
 8018b8c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018b90:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018b94:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018b98:	f107 0a01 	add.w	sl, r7, #1
 8018b9c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018ba0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018ba4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018ba8:	9802      	ldr	r0, [sp, #8]
 8018baa:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018bae:	f824 c000 	strh.w	ip, [r4, r0]
 8018bb2:	e7af      	b.n	8018b14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018bb4:	f04f 0800 	mov.w	r8, #0
 8018bb8:	eba3 0008 	sub.w	r0, r3, r8
 8018bbc:	2800      	cmp	r0, #0
 8018bbe:	f77f af41 	ble.w	8018a44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018bc2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018bc6:	9f00      	ldr	r7, [sp, #0]
 8018bc8:	1410      	asrs	r0, r2, #16
 8018bca:	140d      	asrs	r5, r1, #16
 8018bcc:	fb06 7000 	mla	r0, r6, r0, r7
 8018bd0:	5d40      	ldrb	r0, [r0, r5]
 8018bd2:	9d01      	ldr	r5, [sp, #4]
 8018bd4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018bd8:	0e2e      	lsrs	r6, r5, #24
 8018bda:	2eff      	cmp	r6, #255	; 0xff
 8018bdc:	d112      	bne.n	8018c04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8018bde:	482c      	ldr	r0, [pc, #176]	; (8018c90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8018be0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018be4:	0968      	lsrs	r0, r5, #5
 8018be6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018bea:	4330      	orrs	r0, r6
 8018bec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8018bf0:	4328      	orrs	r0, r5
 8018bf2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8018bf6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018bf8:	4401      	add	r1, r0
 8018bfa:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018bfc:	f108 0801 	add.w	r8, r8, #1
 8018c00:	4402      	add	r2, r0
 8018c02:	e7d9      	b.n	8018bb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018c04:	b2f0      	uxtb	r0, r6
 8018c06:	2e00      	cmp	r6, #0
 8018c08:	d0f5      	beq.n	8018bf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018c0a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8018c0e:	fa1f f980 	uxth.w	r9, r0
 8018c12:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018c16:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018c1a:	43c0      	mvns	r0, r0
 8018c1c:	b2c0      	uxtb	r0, r0
 8018c1e:	fb16 f609 	smulbb	r6, r6, r9
 8018c22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018c26:	fb07 6700 	mla	r7, r7, r0, r6
 8018c2a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018c2e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8018c32:	b2ed      	uxtb	r5, r5
 8018c34:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018c38:	fa5f fc8c 	uxtb.w	ip, ip
 8018c3c:	fb15 f509 	smulbb	r5, r5, r9
 8018c40:	fb0c 5500 	mla	r5, ip, r0, r5
 8018c44:	b2bf      	uxth	r7, r7
 8018c46:	fb1a fa09 	smulbb	sl, sl, r9
 8018c4a:	b2ad      	uxth	r5, r5
 8018c4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018c50:	fb06 a600 	mla	r6, r6, r0, sl
 8018c54:	1c78      	adds	r0, r7, #1
 8018c56:	f105 0a01 	add.w	sl, r5, #1
 8018c5a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8018c5e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018c62:	b2b6      	uxth	r6, r6
 8018c64:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018c68:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018c6c:	ea4a 0707 	orr.w	r7, sl, r7
 8018c70:	f106 0a01 	add.w	sl, r6, #1
 8018c74:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018c78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018c7c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018c80:	ea47 070a 	orr.w	r7, r7, sl
 8018c84:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018c88:	e7b5      	b.n	8018bf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018c8a:	b005      	add	sp, #20
 8018c8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c90:	fffff800 	.word	0xfffff800

08018c94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c98:	b087      	sub	sp, #28
 8018c9a:	468b      	mov	fp, r1
 8018c9c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018c9e:	9204      	str	r2, [sp, #16]
 8018ca0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018ca4:	9205      	str	r2, [sp, #20]
 8018ca6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018caa:	6861      	ldr	r1, [r4, #4]
 8018cac:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018cb0:	fb01 2000 	mla	r0, r1, r0, r2
 8018cb4:	6822      	ldr	r2, [r4, #0]
 8018cb6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018cba:	f8de 2000 	ldr.w	r2, [lr]
 8018cbe:	9201      	str	r2, [sp, #4]
 8018cc0:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018cc4:	9202      	str	r2, [sp, #8]
 8018cc6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018cca:	f1bb 0f00 	cmp.w	fp, #0
 8018cce:	dc03      	bgt.n	8018cd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8018cd0:	9a04      	ldr	r2, [sp, #16]
 8018cd2:	2a00      	cmp	r2, #0
 8018cd4:	f340 8142 	ble.w	8018f5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018cd8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018cda:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018cde:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8018ce2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018ce6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018ce8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018cec:	2b00      	cmp	r3, #0
 8018cee:	dd0e      	ble.n	8018d0e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018cf0:	140c      	asrs	r4, r1, #16
 8018cf2:	d405      	bmi.n	8018d00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018cf4:	42bc      	cmp	r4, r7
 8018cf6:	da03      	bge.n	8018d00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018cf8:	1414      	asrs	r4, r2, #16
 8018cfa:	d401      	bmi.n	8018d00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018cfc:	42b4      	cmp	r4, r6
 8018cfe:	db07      	blt.n	8018d10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018d00:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018d02:	4421      	add	r1, r4
 8018d04:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018d06:	3b01      	subs	r3, #1
 8018d08:	4422      	add	r2, r4
 8018d0a:	3002      	adds	r0, #2
 8018d0c:	e7ee      	b.n	8018cec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018d0e:	d019      	beq.n	8018d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018d10:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018d12:	1e5c      	subs	r4, r3, #1
 8018d14:	fb05 1504 	mla	r5, r5, r4, r1
 8018d18:	142d      	asrs	r5, r5, #16
 8018d1a:	d409      	bmi.n	8018d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018d1c:	42bd      	cmp	r5, r7
 8018d1e:	da07      	bge.n	8018d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018d20:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018d22:	fb05 2404 	mla	r4, r5, r4, r2
 8018d26:	1424      	asrs	r4, r4, #16
 8018d28:	d402      	bmi.n	8018d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018d2a:	42b4      	cmp	r4, r6
 8018d2c:	f2c0 80b1 	blt.w	8018e92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8018d30:	f04f 0800 	mov.w	r8, #0
 8018d34:	eb03 0408 	add.w	r4, r3, r8
 8018d38:	2c00      	cmp	r4, #0
 8018d3a:	dc3e      	bgt.n	8018dba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8018d3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018d40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018d44:	f1bb 0f00 	cmp.w	fp, #0
 8018d48:	f340 8108 	ble.w	8018f5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018d4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018d50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018d54:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018d58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d5a:	f1bb 0b01 	subs.w	fp, fp, #1
 8018d5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018d62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018d66:	eeb0 6a62 	vmov.f32	s12, s5
 8018d6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018d6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018d72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018d76:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018d7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018d7e:	eeb0 6a43 	vmov.f32	s12, s6
 8018d82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018d86:	ee12 2a90 	vmov	r2, s5
 8018d8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018d8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d92:	ee13 2a10 	vmov	r2, s6
 8018d96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018d9a:	9313      	str	r3, [sp, #76]	; 0x4c
 8018d9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018da2:	9a04      	ldr	r2, [sp, #16]
 8018da4:	9314      	str	r3, [sp, #80]	; 0x50
 8018da6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018daa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018dac:	eeb0 3a67 	vmov.f32	s6, s15
 8018db0:	bf08      	it	eq
 8018db2:	4613      	moveq	r3, r2
 8018db4:	eef0 2a47 	vmov.f32	s5, s14
 8018db8:	e787      	b.n	8018cca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8018dba:	140e      	asrs	r6, r1, #16
 8018dbc:	d462      	bmi.n	8018e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018dbe:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018dc2:	42b5      	cmp	r5, r6
 8018dc4:	dd5e      	ble.n	8018e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018dc6:	1417      	asrs	r7, r2, #16
 8018dc8:	d45c      	bmi.n	8018e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018dca:	f8de 400c 	ldr.w	r4, [lr, #12]
 8018dce:	42bc      	cmp	r4, r7
 8018dd0:	dd58      	ble.n	8018e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018dd2:	b22d      	sxth	r5, r5
 8018dd4:	fb07 6505 	mla	r5, r7, r5, r6
 8018dd8:	9c02      	ldr	r4, [sp, #8]
 8018dda:	5d66      	ldrb	r6, [r4, r5]
 8018ddc:	2e00      	cmp	r6, #0
 8018dde:	d051      	beq.n	8018e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018de0:	9c01      	ldr	r4, [sp, #4]
 8018de2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8018de6:	f06f 0401 	mvn.w	r4, #1
 8018dea:	fb04 f408 	mul.w	r4, r4, r8
 8018dee:	9403      	str	r4, [sp, #12]
 8018df0:	5b05      	ldrh	r5, [r0, r4]
 8018df2:	9c05      	ldr	r4, [sp, #20]
 8018df4:	4366      	muls	r6, r4
 8018df6:	1c74      	adds	r4, r6, #1
 8018df8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018dfc:	1224      	asrs	r4, r4, #8
 8018dfe:	b2a7      	uxth	r7, r4
 8018e00:	122e      	asrs	r6, r5, #8
 8018e02:	43e4      	mvns	r4, r4
 8018e04:	b2e4      	uxtb	r4, r4
 8018e06:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8018e0a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018e0e:	fb16 f604 	smulbb	r6, r6, r4
 8018e12:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018e16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018e1a:	00ed      	lsls	r5, r5, #3
 8018e1c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018e20:	b2ed      	uxtb	r5, r5
 8018e22:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8018e26:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8018e2a:	fb15 f504 	smulbb	r5, r5, r4
 8018e2e:	fa5f f989 	uxtb.w	r9, r9
 8018e32:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018e36:	fb09 5507 	mla	r5, r9, r7, r5
 8018e3a:	fb1a fa04 	smulbb	sl, sl, r4
 8018e3e:	fa1f fc8c 	uxth.w	ip, ip
 8018e42:	b2ad      	uxth	r5, r5
 8018e44:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018e48:	fb06 a607 	mla	r6, r6, r7, sl
 8018e4c:	f10c 0401 	add.w	r4, ip, #1
 8018e50:	f105 0a01 	add.w	sl, r5, #1
 8018e54:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018e58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018e5c:	b2b6      	uxth	r6, r6
 8018e5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018e62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018e66:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018e6a:	f106 0a01 	add.w	sl, r6, #1
 8018e6e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018e72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018e76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018e7a:	9c03      	ldr	r4, [sp, #12]
 8018e7c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018e80:	f820 c004 	strh.w	ip, [r0, r4]
 8018e84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018e86:	4421      	add	r1, r4
 8018e88:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018e8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8018e8e:	4422      	add	r2, r4
 8018e90:	e750      	b.n	8018d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018e92:	f04f 0900 	mov.w	r9, #0
 8018e96:	eba3 0409 	sub.w	r4, r3, r9
 8018e9a:	2c00      	cmp	r4, #0
 8018e9c:	f77f af4e 	ble.w	8018d3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018ea0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018ea4:	140d      	asrs	r5, r1, #16
 8018ea6:	1414      	asrs	r4, r2, #16
 8018ea8:	fb06 5404 	mla	r4, r6, r4, r5
 8018eac:	9d02      	ldr	r5, [sp, #8]
 8018eae:	5d2e      	ldrb	r6, [r5, r4]
 8018eb0:	2e00      	cmp	r6, #0
 8018eb2:	d04c      	beq.n	8018f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8018eb4:	9d01      	ldr	r5, [sp, #4]
 8018eb6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8018eba:	9c05      	ldr	r4, [sp, #20]
 8018ebc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018ec0:	4366      	muls	r6, r4
 8018ec2:	1c74      	adds	r4, r6, #1
 8018ec4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018ec8:	1224      	asrs	r4, r4, #8
 8018eca:	b2a7      	uxth	r7, r4
 8018ecc:	122e      	asrs	r6, r5, #8
 8018ece:	43e4      	mvns	r4, r4
 8018ed0:	b2e4      	uxtb	r4, r4
 8018ed2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018ed6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018eda:	fb16 f604 	smulbb	r6, r6, r4
 8018ede:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018ee2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018ee6:	00ed      	lsls	r5, r5, #3
 8018ee8:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018eec:	b2ed      	uxtb	r5, r5
 8018eee:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018ef2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018ef6:	fb15 f504 	smulbb	r5, r5, r4
 8018efa:	fa5f f888 	uxtb.w	r8, r8
 8018efe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018f02:	fb08 5507 	mla	r5, r8, r7, r5
 8018f06:	fb1a fa04 	smulbb	sl, sl, r4
 8018f0a:	fa1f fc8c 	uxth.w	ip, ip
 8018f0e:	b2ad      	uxth	r5, r5
 8018f10:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018f14:	fb06 a607 	mla	r6, r6, r7, sl
 8018f18:	f10c 0401 	add.w	r4, ip, #1
 8018f1c:	f105 0a01 	add.w	sl, r5, #1
 8018f20:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018f24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018f28:	b2b6      	uxth	r6, r6
 8018f2a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018f2e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018f32:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018f36:	f106 0a01 	add.w	sl, r6, #1
 8018f3a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018f3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018f42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018f46:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018f4a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8018f4e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018f50:	4421      	add	r1, r4
 8018f52:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018f54:	f109 0901 	add.w	r9, r9, #1
 8018f58:	4422      	add	r2, r4
 8018f5a:	e79c      	b.n	8018e96 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8018f5c:	b007      	add	sp, #28
 8018f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f66:	b085      	sub	sp, #20
 8018f68:	468b      	mov	fp, r1
 8018f6a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018f6c:	9203      	str	r2, [sp, #12]
 8018f6e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8018f72:	6861      	ldr	r1, [r4, #4]
 8018f74:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8018f78:	fb01 2000 	mla	r0, r1, r0, r2
 8018f7c:	6822      	ldr	r2, [r4, #0]
 8018f7e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018f82:	f8d8 2000 	ldr.w	r2, [r8]
 8018f86:	9200      	str	r2, [sp, #0]
 8018f88:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8018f8c:	9201      	str	r2, [sp, #4]
 8018f8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018f92:	f1bb 0f00 	cmp.w	fp, #0
 8018f96:	dc03      	bgt.n	8018fa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018f98:	9a03      	ldr	r2, [sp, #12]
 8018f9a:	2a00      	cmp	r2, #0
 8018f9c:	f340 8146 	ble.w	801922c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018fa0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018fa2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018fa6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8018faa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018fae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018fb0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018fb4:	2b00      	cmp	r3, #0
 8018fb6:	dd0e      	ble.n	8018fd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018fb8:	140c      	asrs	r4, r1, #16
 8018fba:	d405      	bmi.n	8018fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018fbc:	42bc      	cmp	r4, r7
 8018fbe:	da03      	bge.n	8018fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018fc0:	1414      	asrs	r4, r2, #16
 8018fc2:	d401      	bmi.n	8018fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018fc4:	42b4      	cmp	r4, r6
 8018fc6:	db07      	blt.n	8018fd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018fc8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018fca:	4421      	add	r1, r4
 8018fcc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018fce:	3b01      	subs	r3, #1
 8018fd0:	4422      	add	r2, r4
 8018fd2:	3002      	adds	r0, #2
 8018fd4:	e7ee      	b.n	8018fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018fd6:	d017      	beq.n	8019008 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018fd8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018fda:	1e5c      	subs	r4, r3, #1
 8018fdc:	fb05 1504 	mla	r5, r5, r4, r1
 8018fe0:	142d      	asrs	r5, r5, #16
 8018fe2:	d409      	bmi.n	8018ff8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018fe4:	42bd      	cmp	r5, r7
 8018fe6:	da07      	bge.n	8018ff8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018fe8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018fea:	fb05 2404 	mla	r4, r5, r4, r2
 8018fee:	1424      	asrs	r4, r4, #16
 8018ff0:	d402      	bmi.n	8018ff8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018ff2:	42b4      	cmp	r4, r6
 8018ff4:	f2c0 80b3 	blt.w	801915e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8018ff8:	2600      	movs	r6, #0
 8018ffa:	199c      	adds	r4, r3, r6
 8018ffc:	2c00      	cmp	r4, #0
 8018ffe:	dc3e      	bgt.n	801907e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019000:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019004:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019008:	f1bb 0f00 	cmp.w	fp, #0
 801900c:	f340 810e 	ble.w	801922c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019010:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019014:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019018:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801901c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801901e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019022:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019026:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801902a:	eeb0 6a62 	vmov.f32	s12, s5
 801902e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019032:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019036:	ee77 2a62 	vsub.f32	s5, s14, s5
 801903a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801903e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019042:	eeb0 6a43 	vmov.f32	s12, s6
 8019046:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801904a:	ee12 2a90 	vmov	r2, s5
 801904e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019052:	fb92 f3f3 	sdiv	r3, r2, r3
 8019056:	ee13 2a10 	vmov	r2, s6
 801905a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801905e:	9311      	str	r3, [sp, #68]	; 0x44
 8019060:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019062:	fb92 f3f3 	sdiv	r3, r2, r3
 8019066:	9a03      	ldr	r2, [sp, #12]
 8019068:	9312      	str	r3, [sp, #72]	; 0x48
 801906a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801906e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019070:	eeb0 3a67 	vmov.f32	s6, s15
 8019074:	bf08      	it	eq
 8019076:	4613      	moveq	r3, r2
 8019078:	eef0 2a47 	vmov.f32	s5, s14
 801907c:	e789      	b.n	8018f92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801907e:	140f      	asrs	r7, r1, #16
 8019080:	d418      	bmi.n	80190b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019082:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019086:	42bd      	cmp	r5, r7
 8019088:	dd14      	ble.n	80190b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801908a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801908e:	d411      	bmi.n	80190b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019090:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019094:	4564      	cmp	r4, ip
 8019096:	dd0d      	ble.n	80190b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019098:	b22d      	sxth	r5, r5
 801909a:	fb0c 7505 	mla	r5, ip, r5, r7
 801909e:	9c01      	ldr	r4, [sp, #4]
 80190a0:	5d64      	ldrb	r4, [r4, r5]
 80190a2:	2cff      	cmp	r4, #255	; 0xff
 80190a4:	d10c      	bne.n	80190c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80190a6:	9c00      	ldr	r4, [sp, #0]
 80190a8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80190ac:	f06f 0401 	mvn.w	r4, #1
 80190b0:	4374      	muls	r4, r6
 80190b2:	5305      	strh	r5, [r0, r4]
 80190b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80190b6:	4421      	add	r1, r4
 80190b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80190ba:	3e01      	subs	r6, #1
 80190bc:	4422      	add	r2, r4
 80190be:	e79c      	b.n	8018ffa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80190c0:	2c00      	cmp	r4, #0
 80190c2:	d0f7      	beq.n	80190b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80190c4:	9f00      	ldr	r7, [sp, #0]
 80190c6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80190ca:	f06f 0501 	mvn.w	r5, #1
 80190ce:	4375      	muls	r5, r6
 80190d0:	9502      	str	r5, [sp, #8]
 80190d2:	5b45      	ldrh	r5, [r0, r5]
 80190d4:	fa1f fc84 	uxth.w	ip, r4
 80190d8:	122f      	asrs	r7, r5, #8
 80190da:	43e4      	mvns	r4, r4
 80190dc:	b2e4      	uxtb	r4, r4
 80190de:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80190e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80190e6:	fb17 f704 	smulbb	r7, r7, r4
 80190ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80190ee:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80190f2:	00ed      	lsls	r5, r5, #3
 80190f4:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80190f8:	b2ed      	uxtb	r5, r5
 80190fa:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80190fe:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019102:	fb15 f504 	smulbb	r5, r5, r4
 8019106:	fa5f f989 	uxtb.w	r9, r9
 801910a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801910e:	fb09 550c 	mla	r5, r9, ip, r5
 8019112:	fb1a fa04 	smulbb	sl, sl, r4
 8019116:	fa1f fe8e 	uxth.w	lr, lr
 801911a:	b2ad      	uxth	r5, r5
 801911c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019120:	fb07 a70c 	mla	r7, r7, ip, sl
 8019124:	f10e 0401 	add.w	r4, lr, #1
 8019128:	f105 0a01 	add.w	sl, r5, #1
 801912c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019130:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019134:	b2bf      	uxth	r7, r7
 8019136:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801913a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801913e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019142:	f107 0a01 	add.w	sl, r7, #1
 8019146:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801914a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801914e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019152:	9c02      	ldr	r4, [sp, #8]
 8019154:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019158:	f820 e004 	strh.w	lr, [r0, r4]
 801915c:	e7aa      	b.n	80190b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801915e:	f04f 0900 	mov.w	r9, #0
 8019162:	eba3 0409 	sub.w	r4, r3, r9
 8019166:	2c00      	cmp	r4, #0
 8019168:	f77f af4a 	ble.w	8019000 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801916c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019170:	1414      	asrs	r4, r2, #16
 8019172:	140d      	asrs	r5, r1, #16
 8019174:	fb06 5504 	mla	r5, r6, r4, r5
 8019178:	9c01      	ldr	r4, [sp, #4]
 801917a:	5d64      	ldrb	r4, [r4, r5]
 801917c:	2cff      	cmp	r4, #255	; 0xff
 801917e:	d10b      	bne.n	8019198 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019180:	9c00      	ldr	r4, [sp, #0]
 8019182:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019186:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801918a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801918c:	4421      	add	r1, r4
 801918e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019190:	f109 0901 	add.w	r9, r9, #1
 8019194:	4422      	add	r2, r4
 8019196:	e7e4      	b.n	8019162 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019198:	2c00      	cmp	r4, #0
 801919a:	d0f6      	beq.n	801918a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801919c:	9e00      	ldr	r6, [sp, #0]
 801919e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80191a2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80191a6:	b2a7      	uxth	r7, r4
 80191a8:	122e      	asrs	r6, r5, #8
 80191aa:	43e4      	mvns	r4, r4
 80191ac:	b2e4      	uxtb	r4, r4
 80191ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80191b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80191b6:	fb16 f604 	smulbb	r6, r6, r4
 80191ba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80191be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80191c2:	00ed      	lsls	r5, r5, #3
 80191c4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80191c8:	b2ed      	uxtb	r5, r5
 80191ca:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80191ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80191d2:	fb15 f504 	smulbb	r5, r5, r4
 80191d6:	fa5f fe8e 	uxtb.w	lr, lr
 80191da:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80191de:	fb0e 5507 	mla	r5, lr, r7, r5
 80191e2:	fb1a fa04 	smulbb	sl, sl, r4
 80191e6:	fa1f fc8c 	uxth.w	ip, ip
 80191ea:	b2ad      	uxth	r5, r5
 80191ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80191f0:	fb06 a607 	mla	r6, r6, r7, sl
 80191f4:	f10c 0401 	add.w	r4, ip, #1
 80191f8:	f105 0a01 	add.w	sl, r5, #1
 80191fc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019200:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019204:	b2b6      	uxth	r6, r6
 8019206:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801920a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801920e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019212:	f106 0a01 	add.w	sl, r6, #1
 8019216:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801921a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801921e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019222:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019226:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801922a:	e7ae      	b.n	801918a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801922c:	b005      	add	sp, #20
 801922e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019232 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019232:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019236:	b085      	sub	sp, #20
 8019238:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801923a:	9203      	str	r2, [sp, #12]
 801923c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019240:	9201      	str	r2, [sp, #4]
 8019242:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019246:	9100      	str	r1, [sp, #0]
 8019248:	6841      	ldr	r1, [r0, #4]
 801924a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801924e:	fb01 2404 	mla	r4, r1, r4, r2
 8019252:	6802      	ldr	r2, [r0, #0]
 8019254:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019258:	f8de 2000 	ldr.w	r2, [lr]
 801925c:	9202      	str	r2, [sp, #8]
 801925e:	9a01      	ldr	r2, [sp, #4]
 8019260:	43d6      	mvns	r6, r2
 8019262:	b2f6      	uxtb	r6, r6
 8019264:	9a00      	ldr	r2, [sp, #0]
 8019266:	2a00      	cmp	r2, #0
 8019268:	dc03      	bgt.n	8019272 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801926a:	9a03      	ldr	r2, [sp, #12]
 801926c:	2a00      	cmp	r2, #0
 801926e:	f340 8124 	ble.w	80194ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019272:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019274:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019278:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801927c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019280:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019282:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019286:	2b00      	cmp	r3, #0
 8019288:	dd0e      	ble.n	80192a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801928a:	1408      	asrs	r0, r1, #16
 801928c:	d405      	bmi.n	801929a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801928e:	4560      	cmp	r0, ip
 8019290:	da03      	bge.n	801929a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019292:	1410      	asrs	r0, r2, #16
 8019294:	d401      	bmi.n	801929a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019296:	42b8      	cmp	r0, r7
 8019298:	db07      	blt.n	80192aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801929a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801929c:	4401      	add	r1, r0
 801929e:	9812      	ldr	r0, [sp, #72]	; 0x48
 80192a0:	3b01      	subs	r3, #1
 80192a2:	4402      	add	r2, r0
 80192a4:	3402      	adds	r4, #2
 80192a6:	e7ee      	b.n	8019286 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80192a8:	d06e      	beq.n	8019388 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80192aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80192ac:	1e58      	subs	r0, r3, #1
 80192ae:	fb05 1500 	mla	r5, r5, r0, r1
 80192b2:	142d      	asrs	r5, r5, #16
 80192b4:	d45c      	bmi.n	8019370 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80192b6:	4565      	cmp	r5, ip
 80192b8:	da5a      	bge.n	8019370 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80192ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80192bc:	fb05 2000 	mla	r0, r5, r0, r2
 80192c0:	1400      	asrs	r0, r0, #16
 80192c2:	d455      	bmi.n	8019370 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80192c4:	42b8      	cmp	r0, r7
 80192c6:	da53      	bge.n	8019370 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80192c8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80192cc:	4699      	mov	r9, r3
 80192ce:	46a2      	mov	sl, r4
 80192d0:	f1b9 0f00 	cmp.w	r9, #0
 80192d4:	dd54      	ble.n	8019380 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80192d6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80192da:	140d      	asrs	r5, r1, #16
 80192dc:	1410      	asrs	r0, r2, #16
 80192de:	fb07 5000 	mla	r0, r7, r0, r5
 80192e2:	9d02      	ldr	r5, [sp, #8]
 80192e4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80192e8:	f8ba 5000 	ldrh.w	r5, [sl]
 80192ec:	122f      	asrs	r7, r5, #8
 80192ee:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80192f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80192f6:	fb17 f706 	smulbb	r7, r7, r6
 80192fa:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80192fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019302:	00ed      	lsls	r5, r5, #3
 8019304:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019308:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801930c:	10c7      	asrs	r7, r0, #3
 801930e:	b2ed      	uxtb	r5, r5
 8019310:	00c0      	lsls	r0, r0, #3
 8019312:	fb18 f806 	smulbb	r8, r8, r6
 8019316:	fb15 f506 	smulbb	r5, r5, r6
 801931a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801931e:	b2c0      	uxtb	r0, r0
 8019320:	fa1f fc8c 	uxth.w	ip, ip
 8019324:	fb07 870b 	mla	r7, r7, fp, r8
 8019328:	fb00 500b 	mla	r0, r0, fp, r5
 801932c:	b280      	uxth	r0, r0
 801932e:	b2bf      	uxth	r7, r7
 8019330:	f10c 0501 	add.w	r5, ip, #1
 8019334:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019338:	f107 0801 	add.w	r8, r7, #1
 801933c:	1c45      	adds	r5, r0, #1
 801933e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019342:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019346:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019348:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801934c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019350:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019354:	ea45 0c0c 	orr.w	ip, r5, ip
 8019358:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801935c:	4401      	add	r1, r0
 801935e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019360:	ea4c 0c08 	orr.w	ip, ip, r8
 8019364:	f82a cb02 	strh.w	ip, [sl], #2
 8019368:	4402      	add	r2, r0
 801936a:	f109 39ff 	add.w	r9, r9, #4294967295
 801936e:	e7af      	b.n	80192d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019370:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019374:	f04f 0800 	mov.w	r8, #0
 8019378:	eb03 0008 	add.w	r0, r3, r8
 801937c:	2800      	cmp	r0, #0
 801937e:	dc41      	bgt.n	8019404 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019380:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019384:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019388:	9b00      	ldr	r3, [sp, #0]
 801938a:	2b00      	cmp	r3, #0
 801938c:	f340 8095 	ble.w	80194ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019390:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019394:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019398:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801939c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801939e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80193a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80193a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80193aa:	eef0 6a62 	vmov.f32	s13, s5
 80193ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80193b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80193ba:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80193be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80193c2:	eef0 6a43 	vmov.f32	s13, s6
 80193c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80193ca:	ee12 2a90 	vmov	r2, s5
 80193ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80193d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80193d6:	ee13 2a10 	vmov	r2, s6
 80193da:	9311      	str	r3, [sp, #68]	; 0x44
 80193dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80193de:	fb92 f3f3 	sdiv	r3, r2, r3
 80193e2:	9312      	str	r3, [sp, #72]	; 0x48
 80193e4:	9b00      	ldr	r3, [sp, #0]
 80193e6:	9a03      	ldr	r2, [sp, #12]
 80193e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193ec:	3b01      	subs	r3, #1
 80193ee:	9300      	str	r3, [sp, #0]
 80193f0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80193f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80193f6:	eeb0 3a67 	vmov.f32	s6, s15
 80193fa:	bf08      	it	eq
 80193fc:	4613      	moveq	r3, r2
 80193fe:	eef0 2a47 	vmov.f32	s5, s14
 8019402:	e72f      	b.n	8019264 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019404:	140f      	asrs	r7, r1, #16
 8019406:	d451      	bmi.n	80194ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019408:	f8de 5008 	ldr.w	r5, [lr, #8]
 801940c:	42bd      	cmp	r5, r7
 801940e:	dd4d      	ble.n	80194ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019410:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019414:	d44a      	bmi.n	80194ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019416:	f8de 000c 	ldr.w	r0, [lr, #12]
 801941a:	4560      	cmp	r0, ip
 801941c:	dd46      	ble.n	80194ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801941e:	b22d      	sxth	r5, r5
 8019420:	fb0c 7505 	mla	r5, ip, r5, r7
 8019424:	9802      	ldr	r0, [sp, #8]
 8019426:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801942a:	f06f 0501 	mvn.w	r5, #1
 801942e:	fb05 fb08 	mul.w	fp, r5, r8
 8019432:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019436:	f834 500b 	ldrh.w	r5, [r4, fp]
 801943a:	122f      	asrs	r7, r5, #8
 801943c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019440:	fb17 f706 	smulbb	r7, r7, r6
 8019444:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019448:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801944c:	00ed      	lsls	r5, r5, #3
 801944e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019452:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019456:	10c7      	asrs	r7, r0, #3
 8019458:	b2ed      	uxtb	r5, r5
 801945a:	00c0      	lsls	r0, r0, #3
 801945c:	fb19 f906 	smulbb	r9, r9, r6
 8019460:	fb15 f506 	smulbb	r5, r5, r6
 8019464:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019468:	b2c0      	uxtb	r0, r0
 801946a:	fa1f fc8c 	uxth.w	ip, ip
 801946e:	fb07 970a 	mla	r7, r7, sl, r9
 8019472:	fb00 500a 	mla	r0, r0, sl, r5
 8019476:	b2bf      	uxth	r7, r7
 8019478:	b280      	uxth	r0, r0
 801947a:	f10c 0501 	add.w	r5, ip, #1
 801947e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019482:	f107 0901 	add.w	r9, r7, #1
 8019486:	1c45      	adds	r5, r0, #1
 8019488:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801948c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019490:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019494:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019498:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801949c:	ea45 0c0c 	orr.w	ip, r5, ip
 80194a0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80194a4:	ea4c 0c09 	orr.w	ip, ip, r9
 80194a8:	f824 c00b 	strh.w	ip, [r4, fp]
 80194ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 80194ae:	4401      	add	r1, r0
 80194b0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80194b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80194b6:	4402      	add	r2, r0
 80194b8:	e75e      	b.n	8019378 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80194ba:	b005      	add	sp, #20
 80194bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194c4:	b085      	sub	sp, #20
 80194c6:	4693      	mov	fp, r2
 80194c8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80194ca:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80194cc:	6870      	ldr	r0, [r6, #4]
 80194ce:	9101      	str	r1, [sp, #4]
 80194d0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80194d4:	fb00 2404 	mla	r4, r0, r4, r2
 80194d8:	6832      	ldr	r2, [r6, #0]
 80194da:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80194de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80194e2:	682a      	ldr	r2, [r5, #0]
 80194e4:	9202      	str	r2, [sp, #8]
 80194e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80194ea:	9a01      	ldr	r2, [sp, #4]
 80194ec:	2a00      	cmp	r2, #0
 80194ee:	dc03      	bgt.n	80194f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80194f0:	f1bb 0f00 	cmp.w	fp, #0
 80194f4:	f340 809a 	ble.w	801962c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80194f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80194fa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80194fe:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019502:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019506:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019508:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801950c:	2b00      	cmp	r3, #0
 801950e:	dd0c      	ble.n	801952a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019510:	1406      	asrs	r6, r0, #16
 8019512:	d405      	bmi.n	8019520 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019514:	454e      	cmp	r6, r9
 8019516:	da03      	bge.n	8019520 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019518:	1416      	asrs	r6, r2, #16
 801951a:	d401      	bmi.n	8019520 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801951c:	4546      	cmp	r6, r8
 801951e:	db05      	blt.n	801952c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019520:	4470      	add	r0, lr
 8019522:	4462      	add	r2, ip
 8019524:	3b01      	subs	r3, #1
 8019526:	3402      	adds	r4, #2
 8019528:	e7f0      	b.n	801950c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801952a:	d00f      	beq.n	801954c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801952c:	1e5e      	subs	r6, r3, #1
 801952e:	fb0e 0706 	mla	r7, lr, r6, r0
 8019532:	143f      	asrs	r7, r7, #16
 8019534:	d541      	bpl.n	80195ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019536:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801953a:	4698      	mov	r8, r3
 801953c:	9603      	str	r6, [sp, #12]
 801953e:	f1b8 0f00 	cmp.w	r8, #0
 8019542:	dc56      	bgt.n	80195f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019544:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019548:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801954c:	9b01      	ldr	r3, [sp, #4]
 801954e:	2b00      	cmp	r3, #0
 8019550:	dd6c      	ble.n	801962c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019552:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019556:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801955a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801955e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019560:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019564:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019568:	eeb0 6a62 	vmov.f32	s12, s5
 801956c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019570:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019574:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019578:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801957c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019580:	eeb0 6a43 	vmov.f32	s12, s6
 8019584:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019588:	ee12 2a90 	vmov	r2, s5
 801958c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019590:	fb92 fef3 	sdiv	lr, r2, r3
 8019594:	ee13 2a10 	vmov	r2, s6
 8019598:	fb92 fcf3 	sdiv	ip, r2, r3
 801959c:	9b01      	ldr	r3, [sp, #4]
 801959e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195a2:	3b01      	subs	r3, #1
 80195a4:	9301      	str	r3, [sp, #4]
 80195a6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80195aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80195ac:	eeb0 3a67 	vmov.f32	s6, s15
 80195b0:	bf08      	it	eq
 80195b2:	465b      	moveq	r3, fp
 80195b4:	eef0 2a47 	vmov.f32	s5, s14
 80195b8:	e797      	b.n	80194ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80195ba:	454f      	cmp	r7, r9
 80195bc:	dabb      	bge.n	8019536 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80195be:	fb0c 2606 	mla	r6, ip, r6, r2
 80195c2:	1436      	asrs	r6, r6, #16
 80195c4:	d4b7      	bmi.n	8019536 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80195c6:	4546      	cmp	r6, r8
 80195c8:	dab5      	bge.n	8019536 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80195ca:	461e      	mov	r6, r3
 80195cc:	46a0      	mov	r8, r4
 80195ce:	2e00      	cmp	r6, #0
 80195d0:	ddb8      	ble.n	8019544 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80195d2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80195d6:	9902      	ldr	r1, [sp, #8]
 80195d8:	1417      	asrs	r7, r2, #16
 80195da:	ea4f 4920 	mov.w	r9, r0, asr #16
 80195de:	fb0a 9707 	mla	r7, sl, r7, r9
 80195e2:	4470      	add	r0, lr
 80195e4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80195e8:	f828 7b02 	strh.w	r7, [r8], #2
 80195ec:	4462      	add	r2, ip
 80195ee:	3e01      	subs	r6, #1
 80195f0:	e7ed      	b.n	80195ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80195f2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80195f6:	d414      	bmi.n	8019622 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80195f8:	68ae      	ldr	r6, [r5, #8]
 80195fa:	454e      	cmp	r6, r9
 80195fc:	dd11      	ble.n	8019622 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80195fe:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019602:	d40e      	bmi.n	8019622 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019604:	68ef      	ldr	r7, [r5, #12]
 8019606:	4557      	cmp	r7, sl
 8019608:	dd0b      	ble.n	8019622 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801960a:	b236      	sxth	r6, r6
 801960c:	fb0a 9606 	mla	r6, sl, r6, r9
 8019610:	9f02      	ldr	r7, [sp, #8]
 8019612:	f06f 0101 	mvn.w	r1, #1
 8019616:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801961a:	fb01 f608 	mul.w	r6, r1, r8
 801961e:	9903      	ldr	r1, [sp, #12]
 8019620:	538f      	strh	r7, [r1, r6]
 8019622:	4470      	add	r0, lr
 8019624:	4462      	add	r2, ip
 8019626:	f108 38ff 	add.w	r8, r8, #4294967295
 801962a:	e788      	b.n	801953e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801962c:	b005      	add	sp, #20
 801962e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019632 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019632:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019636:	b087      	sub	sp, #28
 8019638:	468b      	mov	fp, r1
 801963a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801963c:	9203      	str	r2, [sp, #12]
 801963e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019642:	9204      	str	r2, [sp, #16]
 8019644:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8019648:	6841      	ldr	r1, [r0, #4]
 801964a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801964e:	fb01 2505 	mla	r5, r1, r5, r2
 8019652:	6802      	ldr	r2, [r0, #0]
 8019654:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019658:	f8d9 2000 	ldr.w	r2, [r9]
 801965c:	9201      	str	r2, [sp, #4]
 801965e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019662:	f1bb 0f00 	cmp.w	fp, #0
 8019666:	dc03      	bgt.n	8019670 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019668:	9a03      	ldr	r2, [sp, #12]
 801966a:	2a00      	cmp	r2, #0
 801966c:	f340 8159 	ble.w	8019922 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019670:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019672:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019676:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801967a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801967e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019680:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019684:	2b00      	cmp	r3, #0
 8019686:	dd0e      	ble.n	80196a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019688:	1402      	asrs	r2, r0, #16
 801968a:	d405      	bmi.n	8019698 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801968c:	42ba      	cmp	r2, r7
 801968e:	da03      	bge.n	8019698 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019690:	140a      	asrs	r2, r1, #16
 8019692:	d401      	bmi.n	8019698 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019694:	42b2      	cmp	r2, r6
 8019696:	db07      	blt.n	80196a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019698:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801969a:	4410      	add	r0, r2
 801969c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801969e:	3b01      	subs	r3, #1
 80196a0:	4411      	add	r1, r2
 80196a2:	3502      	adds	r5, #2
 80196a4:	e7ee      	b.n	8019684 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80196a6:	d017      	beq.n	80196d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80196a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80196aa:	1e5a      	subs	r2, r3, #1
 80196ac:	fb04 0402 	mla	r4, r4, r2, r0
 80196b0:	1424      	asrs	r4, r4, #16
 80196b2:	d409      	bmi.n	80196c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80196b4:	42bc      	cmp	r4, r7
 80196b6:	da07      	bge.n	80196c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80196b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80196ba:	fb04 1202 	mla	r2, r4, r2, r1
 80196be:	1412      	asrs	r2, r2, #16
 80196c0:	d402      	bmi.n	80196c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80196c2:	42b2      	cmp	r2, r6
 80196c4:	f2c0 80bf 	blt.w	8019846 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80196c8:	2700      	movs	r7, #0
 80196ca:	19da      	adds	r2, r3, r7
 80196cc:	2a00      	cmp	r2, #0
 80196ce:	dc3e      	bgt.n	801974e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80196d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80196d4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80196d8:	f1bb 0f00 	cmp.w	fp, #0
 80196dc:	f340 8121 	ble.w	8019922 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80196e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80196e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80196e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80196ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80196ee:	f1bb 0b01 	subs.w	fp, fp, #1
 80196f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80196f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80196fa:	eeb0 6a62 	vmov.f32	s12, s5
 80196fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019702:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019706:	ee77 2a62 	vsub.f32	s5, s14, s5
 801970a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801970e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019712:	eeb0 6a43 	vmov.f32	s12, s6
 8019716:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801971a:	ee12 2a90 	vmov	r2, s5
 801971e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019722:	fb92 f3f3 	sdiv	r3, r2, r3
 8019726:	ee13 2a10 	vmov	r2, s6
 801972a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801972e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019730:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019732:	fb92 f3f3 	sdiv	r3, r2, r3
 8019736:	9a03      	ldr	r2, [sp, #12]
 8019738:	9314      	str	r3, [sp, #80]	; 0x50
 801973a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801973e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019740:	eeb0 3a67 	vmov.f32	s6, s15
 8019744:	bf08      	it	eq
 8019746:	4613      	moveq	r3, r2
 8019748:	eef0 2a47 	vmov.f32	s5, s14
 801974c:	e789      	b.n	8019662 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801974e:	1406      	asrs	r6, r0, #16
 8019750:	d42d      	bmi.n	80197ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019752:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019756:	42b4      	cmp	r4, r6
 8019758:	dd29      	ble.n	80197ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801975a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801975e:	d426      	bmi.n	80197ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019760:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019764:	4562      	cmp	r2, ip
 8019766:	dd22      	ble.n	80197ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019768:	b224      	sxth	r4, r4
 801976a:	9a01      	ldr	r2, [sp, #4]
 801976c:	fb0c 6404 	mla	r4, ip, r4, r6
 8019770:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8019774:	0e22      	lsrs	r2, r4, #24
 8019776:	d01a      	beq.n	80197ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019778:	9e04      	ldr	r6, [sp, #16]
 801977a:	4372      	muls	r2, r6
 801977c:	1c56      	adds	r6, r2, #1
 801977e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019782:	1212      	asrs	r2, r2, #8
 8019784:	0a26      	lsrs	r6, r4, #8
 8019786:	2aff      	cmp	r2, #255	; 0xff
 8019788:	9605      	str	r6, [sp, #20]
 801978a:	d116      	bne.n	80197ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801978c:	f06f 0201 	mvn.w	r2, #1
 8019790:	fb02 fc07 	mul.w	ip, r2, r7
 8019794:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019798:	0962      	lsrs	r2, r4, #5
 801979a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801979e:	f026 0607 	bic.w	r6, r6, #7
 80197a2:	4316      	orrs	r6, r2
 80197a4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80197a8:	4326      	orrs	r6, r4
 80197aa:	f825 600c 	strh.w	r6, [r5, ip]
 80197ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80197b0:	4410      	add	r0, r2
 80197b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80197b4:	3f01      	subs	r7, #1
 80197b6:	4411      	add	r1, r2
 80197b8:	e787      	b.n	80196ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80197ba:	f06f 0601 	mvn.w	r6, #1
 80197be:	437e      	muls	r6, r7
 80197c0:	fa1f fa82 	uxth.w	sl, r2
 80197c4:	f835 8006 	ldrh.w	r8, [r5, r6]
 80197c8:	9602      	str	r6, [sp, #8]
 80197ca:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80197ce:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80197d2:	43d2      	mvns	r2, r2
 80197d4:	b2d2      	uxtb	r2, r2
 80197d6:	fb1c fc0a 	smulbb	ip, ip, sl
 80197da:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80197de:	fb0e ce02 	mla	lr, lr, r2, ip
 80197e2:	b2e4      	uxtb	r4, r4
 80197e4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80197e8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80197ec:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80197f0:	fa5f f888 	uxtb.w	r8, r8
 80197f4:	fb14 f40a 	smulbb	r4, r4, sl
 80197f8:	fb08 4402 	mla	r4, r8, r2, r4
 80197fc:	fa1f fe8e 	uxth.w	lr, lr
 8019800:	fb16 f60a 	smulbb	r6, r6, sl
 8019804:	b2a4      	uxth	r4, r4
 8019806:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801980a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801980e:	f10e 0201 	add.w	r2, lr, #1
 8019812:	1c66      	adds	r6, r4, #1
 8019814:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019818:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801981c:	fa1f fc8c 	uxth.w	ip, ip
 8019820:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019824:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019828:	ea46 0e0e 	orr.w	lr, r6, lr
 801982c:	f10c 0601 	add.w	r6, ip, #1
 8019830:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019834:	0976      	lsrs	r6, r6, #5
 8019836:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801983a:	9a02      	ldr	r2, [sp, #8]
 801983c:	ea4e 0e06 	orr.w	lr, lr, r6
 8019840:	f825 e002 	strh.w	lr, [r5, r2]
 8019844:	e7b3      	b.n	80197ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019846:	f04f 0800 	mov.w	r8, #0
 801984a:	eba3 0208 	sub.w	r2, r3, r8
 801984e:	2a00      	cmp	r2, #0
 8019850:	f77f af3e 	ble.w	80196d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019854:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019858:	1404      	asrs	r4, r0, #16
 801985a:	140a      	asrs	r2, r1, #16
 801985c:	fb06 4202 	mla	r2, r6, r2, r4
 8019860:	9c01      	ldr	r4, [sp, #4]
 8019862:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019866:	0e22      	lsrs	r2, r4, #24
 8019868:	d016      	beq.n	8019898 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801986a:	9e04      	ldr	r6, [sp, #16]
 801986c:	4372      	muls	r2, r6
 801986e:	1c56      	adds	r6, r2, #1
 8019870:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019874:	1212      	asrs	r2, r2, #8
 8019876:	2aff      	cmp	r2, #255	; 0xff
 8019878:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801987c:	d113      	bne.n	80198a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801987e:	0962      	lsrs	r2, r4, #5
 8019880:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019884:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019888:	f026 0607 	bic.w	r6, r6, #7
 801988c:	4316      	orrs	r6, r2
 801988e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019892:	4326      	orrs	r6, r4
 8019894:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019898:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801989a:	4410      	add	r0, r2
 801989c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801989e:	f108 0801 	add.w	r8, r8, #1
 80198a2:	4411      	add	r1, r2
 80198a4:	e7d1      	b.n	801984a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80198a6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80198aa:	fa1f fa82 	uxth.w	sl, r2
 80198ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80198b2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80198b6:	43d2      	mvns	r2, r2
 80198b8:	b2d2      	uxtb	r2, r2
 80198ba:	fb17 f70a 	smulbb	r7, r7, sl
 80198be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80198c2:	fb0c 7c02 	mla	ip, ip, r2, r7
 80198c6:	b2e4      	uxtb	r4, r4
 80198c8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80198cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80198d0:	fa5f fe8e 	uxtb.w	lr, lr
 80198d4:	fb14 f40a 	smulbb	r4, r4, sl
 80198d8:	fb0e 4402 	mla	r4, lr, r2, r4
 80198dc:	b2f6      	uxtb	r6, r6
 80198de:	fa1f fc8c 	uxth.w	ip, ip
 80198e2:	fb16 f60a 	smulbb	r6, r6, sl
 80198e6:	b2a4      	uxth	r4, r4
 80198e8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80198ec:	fb07 6702 	mla	r7, r7, r2, r6
 80198f0:	f10c 0201 	add.w	r2, ip, #1
 80198f4:	1c66      	adds	r6, r4, #1
 80198f6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80198fa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80198fe:	b2bf      	uxth	r7, r7
 8019900:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019904:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019908:	ea46 0c0c 	orr.w	ip, r6, ip
 801990c:	1c7e      	adds	r6, r7, #1
 801990e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019912:	0976      	lsrs	r6, r6, #5
 8019914:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019918:	ea4c 0c06 	orr.w	ip, ip, r6
 801991c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8019920:	e7ba      	b.n	8019898 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019922:	b007      	add	sp, #28
 8019924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019928 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801992c:	b085      	sub	sp, #20
 801992e:	468b      	mov	fp, r1
 8019930:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019932:	9203      	str	r2, [sp, #12]
 8019934:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019938:	6841      	ldr	r1, [r0, #4]
 801993a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801993e:	fb01 2404 	mla	r4, r1, r4, r2
 8019942:	6802      	ldr	r2, [r0, #0]
 8019944:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019948:	f8d8 2000 	ldr.w	r2, [r8]
 801994c:	9201      	str	r2, [sp, #4]
 801994e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019952:	f1bb 0f00 	cmp.w	fp, #0
 8019956:	dc03      	bgt.n	8019960 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019958:	9a03      	ldr	r2, [sp, #12]
 801995a:	2a00      	cmp	r2, #0
 801995c:	f340 814f 	ble.w	8019bfe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019960:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019962:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019966:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801996a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801996e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019970:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019974:	2b00      	cmp	r3, #0
 8019976:	dd0e      	ble.n	8019996 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019978:	1408      	asrs	r0, r1, #16
 801997a:	d405      	bmi.n	8019988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801997c:	42b8      	cmp	r0, r7
 801997e:	da03      	bge.n	8019988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019980:	1410      	asrs	r0, r2, #16
 8019982:	d401      	bmi.n	8019988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019984:	42b0      	cmp	r0, r6
 8019986:	db07      	blt.n	8019998 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019988:	9811      	ldr	r0, [sp, #68]	; 0x44
 801998a:	4401      	add	r1, r0
 801998c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801998e:	3b01      	subs	r3, #1
 8019990:	4402      	add	r2, r0
 8019992:	3402      	adds	r4, #2
 8019994:	e7ee      	b.n	8019974 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019996:	d017      	beq.n	80199c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019998:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801999a:	1e58      	subs	r0, r3, #1
 801999c:	fb05 1500 	mla	r5, r5, r0, r1
 80199a0:	142d      	asrs	r5, r5, #16
 80199a2:	d409      	bmi.n	80199b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80199a4:	42bd      	cmp	r5, r7
 80199a6:	da07      	bge.n	80199b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80199a8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80199aa:	fb05 2000 	mla	r0, r5, r0, r2
 80199ae:	1400      	asrs	r0, r0, #16
 80199b0:	d402      	bmi.n	80199b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80199b2:	42b0      	cmp	r0, r6
 80199b4:	f2c0 80ba 	blt.w	8019b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80199b8:	2600      	movs	r6, #0
 80199ba:	1998      	adds	r0, r3, r6
 80199bc:	2800      	cmp	r0, #0
 80199be:	dc3e      	bgt.n	8019a3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80199c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80199c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80199c8:	f1bb 0f00 	cmp.w	fp, #0
 80199cc:	f340 8117 	ble.w	8019bfe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80199d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80199d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80199d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80199dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80199de:	f1bb 0b01 	subs.w	fp, fp, #1
 80199e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80199e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80199ea:	eeb0 6a62 	vmov.f32	s12, s5
 80199ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80199f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80199f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80199fa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80199fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a02:	eeb0 6a43 	vmov.f32	s12, s6
 8019a06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a0a:	ee12 2a90 	vmov	r2, s5
 8019a0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a12:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a16:	ee13 2a10 	vmov	r2, s6
 8019a1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a1e:	9311      	str	r3, [sp, #68]	; 0x44
 8019a20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a22:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a26:	9a03      	ldr	r2, [sp, #12]
 8019a28:	9312      	str	r3, [sp, #72]	; 0x48
 8019a2a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019a2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a30:	eeb0 3a67 	vmov.f32	s6, s15
 8019a34:	bf08      	it	eq
 8019a36:	4613      	moveq	r3, r2
 8019a38:	eef0 2a47 	vmov.f32	s5, s14
 8019a3c:	e789      	b.n	8019952 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019a3e:	140f      	asrs	r7, r1, #16
 8019a40:	d424      	bmi.n	8019a8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019a42:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019a46:	42bd      	cmp	r5, r7
 8019a48:	dd20      	ble.n	8019a8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019a4a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019a4e:	d41d      	bmi.n	8019a8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019a50:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8019a54:	4560      	cmp	r0, ip
 8019a56:	dd19      	ble.n	8019a8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019a58:	b22d      	sxth	r5, r5
 8019a5a:	fb0c 7505 	mla	r5, ip, r5, r7
 8019a5e:	9801      	ldr	r0, [sp, #4]
 8019a60:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8019a64:	0e07      	lsrs	r7, r0, #24
 8019a66:	2fff      	cmp	r7, #255	; 0xff
 8019a68:	d116      	bne.n	8019a98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019a6a:	f06f 0501 	mvn.w	r5, #1
 8019a6e:	fb05 f706 	mul.w	r7, r5, r6
 8019a72:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019a76:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019a7a:	0945      	lsrs	r5, r0, #5
 8019a7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019a80:	ea4c 0505 	orr.w	r5, ip, r5
 8019a84:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019a88:	4305      	orrs	r5, r0
 8019a8a:	53e5      	strh	r5, [r4, r7]
 8019a8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019a8e:	4401      	add	r1, r0
 8019a90:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019a92:	3e01      	subs	r6, #1
 8019a94:	4402      	add	r2, r0
 8019a96:	e790      	b.n	80199ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019a98:	b2fd      	uxtb	r5, r7
 8019a9a:	2f00      	cmp	r7, #0
 8019a9c:	d0f6      	beq.n	8019a8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019a9e:	f06f 0701 	mvn.w	r7, #1
 8019aa2:	4377      	muls	r7, r6
 8019aa4:	fa1f f985 	uxth.w	r9, r5
 8019aa8:	f834 e007 	ldrh.w	lr, [r4, r7]
 8019aac:	9702      	str	r7, [sp, #8]
 8019aae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019ab2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019ab6:	43ed      	mvns	r5, r5
 8019ab8:	b2ed      	uxtb	r5, r5
 8019aba:	fb17 f709 	smulbb	r7, r7, r9
 8019abe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ac2:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019ac6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019aca:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019ace:	b2c0      	uxtb	r0, r0
 8019ad0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019ad4:	fa5f fe8e 	uxtb.w	lr, lr
 8019ad8:	fb10 f009 	smulbb	r0, r0, r9
 8019adc:	fb0e 0005 	mla	r0, lr, r5, r0
 8019ae0:	b280      	uxth	r0, r0
 8019ae2:	fa1f fc8c 	uxth.w	ip, ip
 8019ae6:	fb1a fa09 	smulbb	sl, sl, r9
 8019aea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019aee:	fb07 a705 	mla	r7, r7, r5, sl
 8019af2:	f100 0a01 	add.w	sl, r0, #1
 8019af6:	f10c 0501 	add.w	r5, ip, #1
 8019afa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8019afe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019b02:	b2bf      	uxth	r7, r7
 8019b04:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b08:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b0c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019b10:	f107 0a01 	add.w	sl, r7, #1
 8019b14:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019b18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b1c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b20:	9802      	ldr	r0, [sp, #8]
 8019b22:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019b26:	f824 c000 	strh.w	ip, [r4, r0]
 8019b2a:	e7af      	b.n	8019a8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019b2c:	f04f 0e00 	mov.w	lr, #0
 8019b30:	eba3 000e 	sub.w	r0, r3, lr
 8019b34:	2800      	cmp	r0, #0
 8019b36:	f77f af43 	ble.w	80199c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019b3a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019b3e:	140d      	asrs	r5, r1, #16
 8019b40:	1410      	asrs	r0, r2, #16
 8019b42:	fb06 5000 	mla	r0, r6, r0, r5
 8019b46:	9d01      	ldr	r5, [sp, #4]
 8019b48:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019b4c:	0e2e      	lsrs	r6, r5, #24
 8019b4e:	2eff      	cmp	r6, #255	; 0xff
 8019b50:	d112      	bne.n	8019b78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8019b52:	482c      	ldr	r0, [pc, #176]	; (8019c04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8019b54:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019b58:	0968      	lsrs	r0, r5, #5
 8019b5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019b5e:	4330      	orrs	r0, r6
 8019b60:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019b64:	4328      	orrs	r0, r5
 8019b66:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8019b6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019b6c:	4401      	add	r1, r0
 8019b6e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019b70:	f10e 0e01 	add.w	lr, lr, #1
 8019b74:	4402      	add	r2, r0
 8019b76:	e7db      	b.n	8019b30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019b78:	b2f0      	uxtb	r0, r6
 8019b7a:	2e00      	cmp	r6, #0
 8019b7c:	d0f5      	beq.n	8019b6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019b7e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019b82:	fa1f f980 	uxth.w	r9, r0
 8019b86:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019b8a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019b8e:	43c0      	mvns	r0, r0
 8019b90:	b2c0      	uxtb	r0, r0
 8019b92:	fb16 f609 	smulbb	r6, r6, r9
 8019b96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019b9a:	fb07 6700 	mla	r7, r7, r0, r6
 8019b9e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019ba2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019ba6:	b2ed      	uxtb	r5, r5
 8019ba8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019bac:	fa5f fc8c 	uxtb.w	ip, ip
 8019bb0:	fb15 f509 	smulbb	r5, r5, r9
 8019bb4:	fb0c 5500 	mla	r5, ip, r0, r5
 8019bb8:	b2bf      	uxth	r7, r7
 8019bba:	fb1a fa09 	smulbb	sl, sl, r9
 8019bbe:	b2ad      	uxth	r5, r5
 8019bc0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019bc4:	fb06 a600 	mla	r6, r6, r0, sl
 8019bc8:	1c78      	adds	r0, r7, #1
 8019bca:	f105 0a01 	add.w	sl, r5, #1
 8019bce:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019bd2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019bd6:	b2b6      	uxth	r6, r6
 8019bd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019bdc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019be0:	ea4a 0707 	orr.w	r7, sl, r7
 8019be4:	f106 0a01 	add.w	sl, r6, #1
 8019be8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019bec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019bf0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019bf4:	ea47 070a 	orr.w	r7, r7, sl
 8019bf8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8019bfc:	e7b5      	b.n	8019b6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019bfe:	b005      	add	sp, #20
 8019c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c04:	fffff800 	.word	0xfffff800

08019c08 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c0c:	b087      	sub	sp, #28
 8019c0e:	468b      	mov	fp, r1
 8019c10:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019c12:	9203      	str	r2, [sp, #12]
 8019c14:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019c18:	9204      	str	r2, [sp, #16]
 8019c1a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019c1e:	6841      	ldr	r1, [r0, #4]
 8019c20:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8019c24:	fb01 2404 	mla	r4, r1, r4, r2
 8019c28:	6802      	ldr	r2, [r0, #0]
 8019c2a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019c2e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019c32:	3201      	adds	r2, #1
 8019c34:	f022 0201 	bic.w	r2, r2, #1
 8019c38:	9200      	str	r2, [sp, #0]
 8019c3a:	f8d9 2000 	ldr.w	r2, [r9]
 8019c3e:	9201      	str	r2, [sp, #4]
 8019c40:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019c44:	f1bb 0f00 	cmp.w	fp, #0
 8019c48:	dc03      	bgt.n	8019c52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019c4a:	9a03      	ldr	r2, [sp, #12]
 8019c4c:	2a00      	cmp	r2, #0
 8019c4e:	f340 8169 	ble.w	8019f24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019c52:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019c54:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019c58:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019c5c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019c60:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019c62:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019c66:	2b00      	cmp	r3, #0
 8019c68:	dd0e      	ble.n	8019c88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019c6a:	1402      	asrs	r2, r0, #16
 8019c6c:	d405      	bmi.n	8019c7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c6e:	42ba      	cmp	r2, r7
 8019c70:	da03      	bge.n	8019c7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c72:	140a      	asrs	r2, r1, #16
 8019c74:	d401      	bmi.n	8019c7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c76:	42b2      	cmp	r2, r6
 8019c78:	db07      	blt.n	8019c8a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8019c7a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019c7c:	4410      	add	r0, r2
 8019c7e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019c80:	3b01      	subs	r3, #1
 8019c82:	4411      	add	r1, r2
 8019c84:	3402      	adds	r4, #2
 8019c86:	e7ee      	b.n	8019c66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019c88:	d017      	beq.n	8019cba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019c8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019c8c:	1e5a      	subs	r2, r3, #1
 8019c8e:	fb05 0502 	mla	r5, r5, r2, r0
 8019c92:	142d      	asrs	r5, r5, #16
 8019c94:	d409      	bmi.n	8019caa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019c96:	42bd      	cmp	r5, r7
 8019c98:	da07      	bge.n	8019caa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019c9a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019c9c:	fb05 1202 	mla	r2, r5, r2, r1
 8019ca0:	1412      	asrs	r2, r2, #16
 8019ca2:	d402      	bmi.n	8019caa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019ca4:	42b2      	cmp	r2, r6
 8019ca6:	f2c0 80c7 	blt.w	8019e38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8019caa:	2700      	movs	r7, #0
 8019cac:	19da      	adds	r2, r3, r7
 8019cae:	2a00      	cmp	r2, #0
 8019cb0:	dc3e      	bgt.n	8019d30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019cb2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019cb6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019cba:	f1bb 0f00 	cmp.w	fp, #0
 8019cbe:	f340 8131 	ble.w	8019f24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019cc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019cc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019cca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019cce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019cd0:	f1bb 0b01 	subs.w	fp, fp, #1
 8019cd4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019cd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019cdc:	eeb0 6a62 	vmov.f32	s12, s5
 8019ce0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ce4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ce8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019cec:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019cf0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019cf4:	eeb0 6a43 	vmov.f32	s12, s6
 8019cf8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019cfc:	ee12 2a90 	vmov	r2, s5
 8019d00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d04:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d08:	ee13 2a10 	vmov	r2, s6
 8019d0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d10:	9313      	str	r3, [sp, #76]	; 0x4c
 8019d12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d14:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d18:	9a03      	ldr	r2, [sp, #12]
 8019d1a:	9314      	str	r3, [sp, #80]	; 0x50
 8019d1c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019d20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d22:	eeb0 3a67 	vmov.f32	s6, s15
 8019d26:	bf08      	it	eq
 8019d28:	4613      	moveq	r3, r2
 8019d2a:	eef0 2a47 	vmov.f32	s5, s14
 8019d2e:	e789      	b.n	8019c44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019d30:	1405      	asrs	r5, r0, #16
 8019d32:	d435      	bmi.n	8019da0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019d34:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019d38:	42aa      	cmp	r2, r5
 8019d3a:	dd31      	ble.n	8019da0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019d3c:	140e      	asrs	r6, r1, #16
 8019d3e:	d42f      	bmi.n	8019da0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019d40:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019d44:	42b2      	cmp	r2, r6
 8019d46:	dd2b      	ble.n	8019da0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019d48:	9a00      	ldr	r2, [sp, #0]
 8019d4a:	fb06 5502 	mla	r5, r6, r2, r5
 8019d4e:	086a      	lsrs	r2, r5, #1
 8019d50:	9e01      	ldr	r6, [sp, #4]
 8019d52:	5cb2      	ldrb	r2, [r6, r2]
 8019d54:	07ee      	lsls	r6, r5, #31
 8019d56:	bf54      	ite	pl
 8019d58:	f002 020f 	andpl.w	r2, r2, #15
 8019d5c:	1112      	asrmi	r2, r2, #4
 8019d5e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019d62:	b2d2      	uxtb	r2, r2
 8019d64:	b1e2      	cbz	r2, 8019da0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019d66:	9d04      	ldr	r5, [sp, #16]
 8019d68:	436a      	muls	r2, r5
 8019d6a:	1c55      	adds	r5, r2, #1
 8019d6c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8019d70:	4d6e      	ldr	r5, [pc, #440]	; (8019f2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019d72:	682d      	ldr	r5, [r5, #0]
 8019d74:	1212      	asrs	r2, r2, #8
 8019d76:	0a2e      	lsrs	r6, r5, #8
 8019d78:	2aff      	cmp	r2, #255	; 0xff
 8019d7a:	9605      	str	r6, [sp, #20]
 8019d7c:	d116      	bne.n	8019dac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8019d7e:	f06f 0201 	mvn.w	r2, #1
 8019d82:	fb02 fc07 	mul.w	ip, r2, r7
 8019d86:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019d8a:	096a      	lsrs	r2, r5, #5
 8019d8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019d90:	f026 0607 	bic.w	r6, r6, #7
 8019d94:	4316      	orrs	r6, r2
 8019d96:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019d9a:	432e      	orrs	r6, r5
 8019d9c:	f824 600c 	strh.w	r6, [r4, ip]
 8019da0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019da2:	4410      	add	r0, r2
 8019da4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019da6:	3f01      	subs	r7, #1
 8019da8:	4411      	add	r1, r2
 8019daa:	e77f      	b.n	8019cac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8019dac:	f06f 0601 	mvn.w	r6, #1
 8019db0:	437e      	muls	r6, r7
 8019db2:	fa1f fa82 	uxth.w	sl, r2
 8019db6:	f834 8006 	ldrh.w	r8, [r4, r6]
 8019dba:	9602      	str	r6, [sp, #8]
 8019dbc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8019dc0:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8019dc4:	43d2      	mvns	r2, r2
 8019dc6:	b2d2      	uxtb	r2, r2
 8019dc8:	fb1c fc0a 	smulbb	ip, ip, sl
 8019dcc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019dd0:	fb0e ce02 	mla	lr, lr, r2, ip
 8019dd4:	b2ed      	uxtb	r5, r5
 8019dd6:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019dda:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019dde:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019de2:	fa5f f888 	uxtb.w	r8, r8
 8019de6:	fb15 f50a 	smulbb	r5, r5, sl
 8019dea:	fb08 5502 	mla	r5, r8, r2, r5
 8019dee:	fa1f fe8e 	uxth.w	lr, lr
 8019df2:	fb16 f60a 	smulbb	r6, r6, sl
 8019df6:	b2ad      	uxth	r5, r5
 8019df8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019dfc:	fb0c 6c02 	mla	ip, ip, r2, r6
 8019e00:	f10e 0201 	add.w	r2, lr, #1
 8019e04:	1c6e      	adds	r6, r5, #1
 8019e06:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019e0a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8019e0e:	fa1f fc8c 	uxth.w	ip, ip
 8019e12:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019e16:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019e1a:	ea46 0e0e 	orr.w	lr, r6, lr
 8019e1e:	f10c 0601 	add.w	r6, ip, #1
 8019e22:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019e26:	0976      	lsrs	r6, r6, #5
 8019e28:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019e2c:	9a02      	ldr	r2, [sp, #8]
 8019e2e:	ea4e 0e06 	orr.w	lr, lr, r6
 8019e32:	f824 e002 	strh.w	lr, [r4, r2]
 8019e36:	e7b3      	b.n	8019da0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e38:	f04f 0800 	mov.w	r8, #0
 8019e3c:	eba3 0208 	sub.w	r2, r3, r8
 8019e40:	2a00      	cmp	r2, #0
 8019e42:	f77f af36 	ble.w	8019cb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019e46:	9e00      	ldr	r6, [sp, #0]
 8019e48:	1402      	asrs	r2, r0, #16
 8019e4a:	140d      	asrs	r5, r1, #16
 8019e4c:	fb06 2505 	mla	r5, r6, r5, r2
 8019e50:	086a      	lsrs	r2, r5, #1
 8019e52:	9e01      	ldr	r6, [sp, #4]
 8019e54:	5cb2      	ldrb	r2, [r6, r2]
 8019e56:	07ed      	lsls	r5, r5, #31
 8019e58:	bf54      	ite	pl
 8019e5a:	f002 020f 	andpl.w	r2, r2, #15
 8019e5e:	1112      	asrmi	r2, r2, #4
 8019e60:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019e64:	b2d2      	uxtb	r2, r2
 8019e66:	b1c2      	cbz	r2, 8019e9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019e68:	9d04      	ldr	r5, [sp, #16]
 8019e6a:	436a      	muls	r2, r5
 8019e6c:	1c55      	adds	r5, r2, #1
 8019e6e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8019e72:	4d2e      	ldr	r5, [pc, #184]	; (8019f2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019e74:	1212      	asrs	r2, r2, #8
 8019e76:	682e      	ldr	r6, [r5, #0]
 8019e78:	2aff      	cmp	r2, #255	; 0xff
 8019e7a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8019e7e:	d113      	bne.n	8019ea8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8019e80:	0972      	lsrs	r2, r6, #5
 8019e82:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8019e86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019e8a:	f025 0507 	bic.w	r5, r5, #7
 8019e8e:	4315      	orrs	r5, r2
 8019e90:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019e94:	4335      	orrs	r5, r6
 8019e96:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8019e9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019e9c:	4410      	add	r0, r2
 8019e9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019ea0:	f108 0801 	add.w	r8, r8, #1
 8019ea4:	4411      	add	r1, r2
 8019ea6:	e7c9      	b.n	8019e3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019ea8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019eac:	fa1f fa82 	uxth.w	sl, r2
 8019eb0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019eb4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8019eb8:	43d2      	mvns	r2, r2
 8019eba:	b2d2      	uxtb	r2, r2
 8019ebc:	fb17 f70a 	smulbb	r7, r7, sl
 8019ec0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ec4:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019ec8:	b2f6      	uxtb	r6, r6
 8019eca:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019ece:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019ed2:	fa5f fe8e 	uxtb.w	lr, lr
 8019ed6:	fb16 f60a 	smulbb	r6, r6, sl
 8019eda:	fb0e 6602 	mla	r6, lr, r2, r6
 8019ede:	b2ed      	uxtb	r5, r5
 8019ee0:	fa1f fc8c 	uxth.w	ip, ip
 8019ee4:	fb15 f50a 	smulbb	r5, r5, sl
 8019ee8:	b2b6      	uxth	r6, r6
 8019eea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019eee:	fb07 5702 	mla	r7, r7, r2, r5
 8019ef2:	f10c 0201 	add.w	r2, ip, #1
 8019ef6:	1c75      	adds	r5, r6, #1
 8019ef8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019efc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8019f00:	b2bf      	uxth	r7, r7
 8019f02:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019f06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f0a:	ea45 0c0c 	orr.w	ip, r5, ip
 8019f0e:	1c7d      	adds	r5, r7, #1
 8019f10:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8019f14:	096d      	lsrs	r5, r5, #5
 8019f16:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019f1a:	ea4c 0c05 	orr.w	ip, ip, r5
 8019f1e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8019f22:	e7ba      	b.n	8019e9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019f24:	b007      	add	sp, #28
 8019f26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019f2a:	bf00      	nop
 8019f2c:	200137cc 	.word	0x200137cc

08019f30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f34:	b087      	sub	sp, #28
 8019f36:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801a244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8019f3a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019f3c:	9205      	str	r2, [sp, #20]
 8019f3e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019f42:	9101      	str	r1, [sp, #4]
 8019f44:	6841      	ldr	r1, [r0, #4]
 8019f46:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8019f4a:	fb01 2404 	mla	r4, r1, r4, r2
 8019f4e:	6802      	ldr	r2, [r0, #0]
 8019f50:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f54:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019f58:	3201      	adds	r2, #1
 8019f5a:	f022 0201 	bic.w	r2, r2, #1
 8019f5e:	9202      	str	r2, [sp, #8]
 8019f60:	f8db 2000 	ldr.w	r2, [fp]
 8019f64:	9203      	str	r2, [sp, #12]
 8019f66:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f6a:	9a01      	ldr	r2, [sp, #4]
 8019f6c:	2a00      	cmp	r2, #0
 8019f6e:	dc03      	bgt.n	8019f78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019f70:	9a05      	ldr	r2, [sp, #20]
 8019f72:	2a00      	cmp	r2, #0
 8019f74:	f340 8162 	ble.w	801a23c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019f78:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019f7a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8019f7e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8019f82:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019f86:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019f88:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019f8c:	2b00      	cmp	r3, #0
 8019f8e:	dd0e      	ble.n	8019fae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019f90:	1402      	asrs	r2, r0, #16
 8019f92:	d405      	bmi.n	8019fa0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019f94:	42ba      	cmp	r2, r7
 8019f96:	da03      	bge.n	8019fa0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019f98:	140a      	asrs	r2, r1, #16
 8019f9a:	d401      	bmi.n	8019fa0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019f9c:	42b2      	cmp	r2, r6
 8019f9e:	db07      	blt.n	8019fb0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019fa0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019fa2:	4410      	add	r0, r2
 8019fa4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019fa6:	3b01      	subs	r3, #1
 8019fa8:	4411      	add	r1, r2
 8019faa:	3402      	adds	r4, #2
 8019fac:	e7ee      	b.n	8019f8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019fae:	d017      	beq.n	8019fe0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019fb0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019fb2:	1e5a      	subs	r2, r3, #1
 8019fb4:	fb05 0502 	mla	r5, r5, r2, r0
 8019fb8:	142d      	asrs	r5, r5, #16
 8019fba:	d409      	bmi.n	8019fd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019fbc:	42bd      	cmp	r5, r7
 8019fbe:	da07      	bge.n	8019fd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019fc0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019fc2:	fb05 1202 	mla	r2, r5, r2, r1
 8019fc6:	1412      	asrs	r2, r2, #16
 8019fc8:	d402      	bmi.n	8019fd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019fca:	42b2      	cmp	r2, r6
 8019fcc:	f2c0 80c3 	blt.w	801a156 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8019fd0:	2500      	movs	r5, #0
 8019fd2:	195a      	adds	r2, r3, r5
 8019fd4:	2a00      	cmp	r2, #0
 8019fd6:	dc3f      	bgt.n	801a058 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019fd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019fdc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019fe0:	9b01      	ldr	r3, [sp, #4]
 8019fe2:	2b00      	cmp	r3, #0
 8019fe4:	f340 812a 	ble.w	801a23c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019fe8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019fec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ff0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019ff4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ff6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ffa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ffe:	eeb0 6a62 	vmov.f32	s12, s5
 801a002:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a006:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a00a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a00e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a012:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a016:	eeb0 6a43 	vmov.f32	s12, s6
 801a01a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a01e:	ee12 2a90 	vmov	r2, s5
 801a022:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a026:	fb92 f3f3 	sdiv	r3, r2, r3
 801a02a:	ee13 2a10 	vmov	r2, s6
 801a02e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a030:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a032:	fb92 f3f3 	sdiv	r3, r2, r3
 801a036:	9314      	str	r3, [sp, #80]	; 0x50
 801a038:	9b01      	ldr	r3, [sp, #4]
 801a03a:	9a05      	ldr	r2, [sp, #20]
 801a03c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a040:	3b01      	subs	r3, #1
 801a042:	9301      	str	r3, [sp, #4]
 801a044:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a048:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a04a:	eeb0 3a67 	vmov.f32	s6, s15
 801a04e:	bf08      	it	eq
 801a050:	4613      	moveq	r3, r2
 801a052:	eef0 2a47 	vmov.f32	s5, s14
 801a056:	e788      	b.n	8019f6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a058:	1406      	asrs	r6, r0, #16
 801a05a:	d42c      	bmi.n	801a0b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a05c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a060:	42b2      	cmp	r2, r6
 801a062:	dd28      	ble.n	801a0b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a064:	140f      	asrs	r7, r1, #16
 801a066:	d426      	bmi.n	801a0b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a068:	f8db 200c 	ldr.w	r2, [fp, #12]
 801a06c:	42ba      	cmp	r2, r7
 801a06e:	dd22      	ble.n	801a0b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a070:	9a02      	ldr	r2, [sp, #8]
 801a072:	fb07 6602 	mla	r6, r7, r2, r6
 801a076:	0872      	lsrs	r2, r6, #1
 801a078:	9f03      	ldr	r7, [sp, #12]
 801a07a:	5cba      	ldrb	r2, [r7, r2]
 801a07c:	07f6      	lsls	r6, r6, #31
 801a07e:	bf54      	ite	pl
 801a080:	f002 020f 	andpl.w	r2, r2, #15
 801a084:	1112      	asrmi	r2, r2, #4
 801a086:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a08a:	b2d2      	uxtb	r2, r2
 801a08c:	2aff      	cmp	r2, #255	; 0xff
 801a08e:	d118      	bne.n	801a0c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801a090:	f8d8 2000 	ldr.w	r2, [r8]
 801a094:	f06f 0601 	mvn.w	r6, #1
 801a098:	fb06 f705 	mul.w	r7, r6, r5
 801a09c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801a0a0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801a0a4:	0956      	lsrs	r6, r2, #5
 801a0a6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a0aa:	ea4c 0606 	orr.w	r6, ip, r6
 801a0ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a0b2:	4316      	orrs	r6, r2
 801a0b4:	53e6      	strh	r6, [r4, r7]
 801a0b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a0b8:	4410      	add	r0, r2
 801a0ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a0bc:	3d01      	subs	r5, #1
 801a0be:	4411      	add	r1, r2
 801a0c0:	e787      	b.n	8019fd2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a0c2:	2a00      	cmp	r2, #0
 801a0c4:	d0f7      	beq.n	801a0b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a0c6:	f06f 0601 	mvn.w	r6, #1
 801a0ca:	436e      	muls	r6, r5
 801a0cc:	f8d8 c000 	ldr.w	ip, [r8]
 801a0d0:	f834 e006 	ldrh.w	lr, [r4, r6]
 801a0d4:	9604      	str	r6, [sp, #16]
 801a0d6:	fa1f f982 	uxth.w	r9, r2
 801a0da:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a0de:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801a0e2:	43d2      	mvns	r2, r2
 801a0e4:	b2d2      	uxtb	r2, r2
 801a0e6:	fb16 f609 	smulbb	r6, r6, r9
 801a0ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a0ee:	fb07 6702 	mla	r7, r7, r2, r6
 801a0f2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801a0f6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a0fa:	fa5f fc8c 	uxtb.w	ip, ip
 801a0fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a102:	fa5f fe8e 	uxtb.w	lr, lr
 801a106:	fb1c fc09 	smulbb	ip, ip, r9
 801a10a:	fb0e cc02 	mla	ip, lr, r2, ip
 801a10e:	b2bf      	uxth	r7, r7
 801a110:	fb1a fa09 	smulbb	sl, sl, r9
 801a114:	fa1f fc8c 	uxth.w	ip, ip
 801a118:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a11c:	fb06 a602 	mla	r6, r6, r2, sl
 801a120:	1c7a      	adds	r2, r7, #1
 801a122:	f10c 0a01 	add.w	sl, ip, #1
 801a126:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a12a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801a12e:	b2b6      	uxth	r6, r6
 801a130:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a134:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a138:	ea4a 0707 	orr.w	r7, sl, r7
 801a13c:	f106 0a01 	add.w	sl, r6, #1
 801a140:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a144:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a148:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a14c:	9a04      	ldr	r2, [sp, #16]
 801a14e:	ea47 070a 	orr.w	r7, r7, sl
 801a152:	52a7      	strh	r7, [r4, r2]
 801a154:	e7af      	b.n	801a0b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a156:	f04f 0e00 	mov.w	lr, #0
 801a15a:	eba3 020e 	sub.w	r2, r3, lr
 801a15e:	2a00      	cmp	r2, #0
 801a160:	f77f af3a 	ble.w	8019fd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a164:	9e02      	ldr	r6, [sp, #8]
 801a166:	1402      	asrs	r2, r0, #16
 801a168:	140d      	asrs	r5, r1, #16
 801a16a:	fb06 2505 	mla	r5, r6, r5, r2
 801a16e:	086a      	lsrs	r2, r5, #1
 801a170:	9e03      	ldr	r6, [sp, #12]
 801a172:	5cb2      	ldrb	r2, [r6, r2]
 801a174:	07ed      	lsls	r5, r5, #31
 801a176:	bf54      	ite	pl
 801a178:	f002 020f 	andpl.w	r2, r2, #15
 801a17c:	1112      	asrmi	r2, r2, #4
 801a17e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a182:	b2d2      	uxtb	r2, r2
 801a184:	2aff      	cmp	r2, #255	; 0xff
 801a186:	d115      	bne.n	801a1b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801a188:	f8d8 5000 	ldr.w	r5, [r8]
 801a18c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801a190:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801a194:	096a      	lsrs	r2, r5, #5
 801a196:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a19a:	4332      	orrs	r2, r6
 801a19c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a1a0:	432a      	orrs	r2, r5
 801a1a2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801a1a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a1a8:	4410      	add	r0, r2
 801a1aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a1ac:	f10e 0e01 	add.w	lr, lr, #1
 801a1b0:	4411      	add	r1, r2
 801a1b2:	e7d2      	b.n	801a15a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a1b4:	2a00      	cmp	r2, #0
 801a1b6:	d0f6      	beq.n	801a1a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a1b8:	f8d8 7000 	ldr.w	r7, [r8]
 801a1bc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a1c0:	fa1f f982 	uxth.w	r9, r2
 801a1c4:	ea4f 262c 	mov.w	r6, ip, asr #8
 801a1c8:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801a1cc:	43d2      	mvns	r2, r2
 801a1ce:	b2d2      	uxtb	r2, r2
 801a1d0:	fb15 f509 	smulbb	r5, r5, r9
 801a1d4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a1d8:	fb06 5602 	mla	r6, r6, r2, r5
 801a1dc:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801a1e0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a1e4:	b2ff      	uxtb	r7, r7
 801a1e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a1ea:	fa5f fc8c 	uxtb.w	ip, ip
 801a1ee:	fb17 f709 	smulbb	r7, r7, r9
 801a1f2:	fb0c 7702 	mla	r7, ip, r2, r7
 801a1f6:	b2b6      	uxth	r6, r6
 801a1f8:	fb1a fa09 	smulbb	sl, sl, r9
 801a1fc:	b2bf      	uxth	r7, r7
 801a1fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a202:	fb05 a502 	mla	r5, r5, r2, sl
 801a206:	1c72      	adds	r2, r6, #1
 801a208:	f107 0a01 	add.w	sl, r7, #1
 801a20c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801a210:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a214:	b2ad      	uxth	r5, r5
 801a216:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a21a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a21e:	ea4a 0606 	orr.w	r6, sl, r6
 801a222:	f105 0a01 	add.w	sl, r5, #1
 801a226:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a22a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a22e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a232:	ea46 060a 	orr.w	r6, r6, sl
 801a236:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801a23a:	e7b4      	b.n	801a1a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a23c:	b007      	add	sp, #28
 801a23e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a242:	bf00      	nop
 801a244:	200137cc 	.word	0x200137cc

0801a248 <_ZN8touchgfx8LCD16bppD1Ev>:
 801a248:	4770      	bx	lr

0801a24a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801a24a:	4770      	bx	lr

0801a24c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801a24c:	4770      	bx	lr

0801a24e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801a24e:	4770      	bx	lr

0801a250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801a250:	4770      	bx	lr

0801a252 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801a252:	4770      	bx	lr

0801a254 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801a254:	4770      	bx	lr

0801a256 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801a256:	4770      	bx	lr

0801a258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a258:	4770      	bx	lr

0801a25a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a25a:	4770      	bx	lr

0801a25c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a25c:	4770      	bx	lr

0801a25e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a25e:	4770      	bx	lr

0801a260 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a260:	4770      	bx	lr

0801a262 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a262:	4770      	bx	lr

0801a264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a264:	4770      	bx	lr

0801a266 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a266:	4770      	bx	lr

0801a268 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a268:	4770      	bx	lr

0801a26a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a26a:	4770      	bx	lr

0801a26c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a26c:	4770      	bx	lr

0801a26e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a26e:	4770      	bx	lr

0801a270 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a270:	4770      	bx	lr

0801a272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a272:	4770      	bx	lr

0801a274 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a274:	4770      	bx	lr

0801a276 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a276:	4770      	bx	lr

0801a278 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a278:	4770      	bx	lr

0801a27a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801a27a:	4770      	bx	lr

0801a27c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a27c:	4770      	bx	lr

0801a27e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801a27e:	4770      	bx	lr

0801a280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a280:	4770      	bx	lr

0801a282 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a282:	4770      	bx	lr

0801a284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a284:	4770      	bx	lr

0801a286 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a286:	4770      	bx	lr

0801a288 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801a288:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a28c:	b088      	sub	sp, #32
 801a28e:	ac08      	add	r4, sp, #32
 801a290:	4606      	mov	r6, r0
 801a292:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801a296:	4620      	mov	r0, r4
 801a298:	4688      	mov	r8, r1
 801a29a:	4691      	mov	r9, r2
 801a29c:	f7fd fc62 	bl	8017b64 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a2a0:	6833      	ldr	r3, [r6, #0]
 801a2a2:	4605      	mov	r5, r0
 801a2a4:	4620      	mov	r0, r4
 801a2a6:	699f      	ldr	r7, [r3, #24]
 801a2a8:	f7fd fb70 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a2ac:	4682      	mov	sl, r0
 801a2ae:	4620      	mov	r0, r4
 801a2b0:	f7fd fba0 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a2b4:	9500      	str	r5, [sp, #0]
 801a2b6:	e9cd a001 	strd	sl, r0, [sp, #4]
 801a2ba:	464b      	mov	r3, r9
 801a2bc:	a806      	add	r0, sp, #24
 801a2be:	4642      	mov	r2, r8
 801a2c0:	4631      	mov	r1, r6
 801a2c2:	47b8      	blx	r7
 801a2c4:	4628      	mov	r0, r5
 801a2c6:	b008      	add	sp, #32
 801a2c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801a2cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801a2cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a2d0:	2300      	movs	r3, #0
 801a2d2:	9300      	str	r3, [sp, #0]
 801a2d4:	4b3d      	ldr	r3, [pc, #244]	; (801a3cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801a2d6:	781b      	ldrb	r3, [r3, #0]
 801a2d8:	2b00      	cmp	r3, #0
 801a2da:	d137      	bne.n	801a34c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801a2dc:	4a3c      	ldr	r2, [pc, #240]	; (801a3d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a2de:	f9b2 2000 	ldrsh.w	r2, [r2]
 801a2e2:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a2e6:	2b00      	cmp	r3, #0
 801a2e8:	d132      	bne.n	801a350 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801a2ea:	4b3a      	ldr	r3, [pc, #232]	; (801a3d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a2ec:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a2f0:	6808      	ldr	r0, [r1, #0]
 801a2f2:	6849      	ldr	r1, [r1, #4]
 801a2f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a2f8:	ac02      	add	r4, sp, #8
 801a2fa:	ab02      	add	r3, sp, #8
 801a2fc:	c303      	stmia	r3!, {r0, r1}
 801a2fe:	4669      	mov	r1, sp
 801a300:	4620      	mov	r0, r4
 801a302:	f7f9 ffb5 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a306:	4668      	mov	r0, sp
 801a308:	f7f9 ff6e 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a30c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a310:	f8bd 2000 	ldrh.w	r2, [sp]
 801a314:	4d30      	ldr	r5, [pc, #192]	; (801a3d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801a316:	4413      	add	r3, r2
 801a318:	f8ad 3008 	strh.w	r3, [sp, #8]
 801a31c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a320:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a324:	6828      	ldr	r0, [r5, #0]
 801a326:	4413      	add	r3, r2
 801a328:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a32c:	6803      	ldr	r3, [r0, #0]
 801a32e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a330:	4798      	blx	r3
 801a332:	f010 0f01 	tst.w	r0, #1
 801a336:	462f      	mov	r7, r5
 801a338:	d00c      	beq.n	801a354 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801a33a:	6828      	ldr	r0, [r5, #0]
 801a33c:	6803      	ldr	r3, [r0, #0]
 801a33e:	e894 0006 	ldmia.w	r4, {r1, r2}
 801a342:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801a344:	4798      	blx	r3
 801a346:	b004      	add	sp, #16
 801a348:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a34c:	4a21      	ldr	r2, [pc, #132]	; (801a3d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a34e:	e7c6      	b.n	801a2de <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801a350:	4b1f      	ldr	r3, [pc, #124]	; (801a3d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a352:	e7cb      	b.n	801a2ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801a354:	6838      	ldr	r0, [r7, #0]
 801a356:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801a35a:	6803      	ldr	r3, [r0, #0]
 801a35c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801a360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801a362:	4798      	blx	r3
 801a364:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801a368:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a36c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801a370:	fb16 3602 	smlabb	r6, r6, r2, r3
 801a374:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a378:	6838      	ldr	r0, [r7, #0]
 801a37a:	6803      	ldr	r3, [r0, #0]
 801a37c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a37e:	4798      	blx	r3
 801a380:	4a13      	ldr	r2, [pc, #76]	; (801a3d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a382:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801a386:	8813      	ldrh	r3, [r2, #0]
 801a388:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a38c:	fb03 1404 	mla	r4, r3, r4, r1
 801a390:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a394:	435d      	muls	r5, r3
 801a396:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a39a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801a39e:	4691      	mov	r9, r2
 801a3a0:	6838      	ldr	r0, [r7, #0]
 801a3a2:	42ac      	cmp	r4, r5
 801a3a4:	6803      	ldr	r3, [r0, #0]
 801a3a6:	d20e      	bcs.n	801a3c6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801a3a8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801a3ac:	4632      	mov	r2, r6
 801a3ae:	4643      	mov	r3, r8
 801a3b0:	4621      	mov	r1, r4
 801a3b2:	47d0      	blx	sl
 801a3b4:	f8b9 3000 	ldrh.w	r3, [r9]
 801a3b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a3bc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801a3c0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a3c4:	e7ec      	b.n	801a3a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801a3c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a3c8:	4798      	blx	r3
 801a3ca:	e7bc      	b.n	801a346 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801a3cc:	200137b4 	.word	0x200137b4
 801a3d0:	200137b6 	.word	0x200137b6
 801a3d4:	200137b8 	.word	0x200137b8
 801a3d8:	200137bc 	.word	0x200137bc

0801a3dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801a3dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3e0:	b08b      	sub	sp, #44	; 0x2c
 801a3e2:	460f      	mov	r7, r1
 801a3e4:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801a3e8:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801a3ec:	4616      	mov	r6, r2
 801a3ee:	f1bb 0f00 	cmp.w	fp, #0
 801a3f2:	d04a      	beq.n	801a48a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801a3f4:	6810      	ldr	r0, [r2, #0]
 801a3f6:	6851      	ldr	r1, [r2, #4]
 801a3f8:	ad06      	add	r5, sp, #24
 801a3fa:	c503      	stmia	r5!, {r0, r1}
 801a3fc:	6818      	ldr	r0, [r3, #0]
 801a3fe:	6859      	ldr	r1, [r3, #4]
 801a400:	ad08      	add	r5, sp, #32
 801a402:	c503      	stmia	r5!, {r0, r1}
 801a404:	a806      	add	r0, sp, #24
 801a406:	f7f9 feef 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a40a:	4631      	mov	r1, r6
 801a40c:	a808      	add	r0, sp, #32
 801a40e:	f7f9 ff2f 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a412:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801a416:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801a41a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801a41e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801a422:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801a426:	fb16 2103 	smlabb	r1, r6, r3, r2
 801a42a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801a42e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801a432:	4f5f      	ldr	r7, [pc, #380]	; (801a5b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a434:	440a      	add	r2, r1
 801a436:	f8ad 2020 	strh.w	r2, [sp, #32]
 801a43a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801a43e:	6838      	ldr	r0, [r7, #0]
 801a440:	4413      	add	r3, r2
 801a442:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801a446:	6803      	ldr	r3, [r0, #0]
 801a448:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a44a:	4798      	blx	r3
 801a44c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a450:	46b9      	mov	r9, r7
 801a452:	d11d      	bne.n	801a490 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801a454:	b9fc      	cbnz	r4, 801a496 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a456:	f010 0f01 	tst.w	r0, #1
 801a45a:	d01c      	beq.n	801a496 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a45c:	f8d9 0000 	ldr.w	r0, [r9]
 801a460:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801a464:	6801      	ldr	r1, [r0, #0]
 801a466:	f8cd b00c 	str.w	fp, [sp, #12]
 801a46a:	2700      	movs	r7, #0
 801a46c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801a470:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801a474:	9402      	str	r4, [sp, #8]
 801a476:	b2ad      	uxth	r5, r5
 801a478:	fa1f f488 	uxth.w	r4, r8
 801a47c:	9501      	str	r5, [sp, #4]
 801a47e:	9400      	str	r4, [sp, #0]
 801a480:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801a482:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801a486:	4631      	mov	r1, r6
 801a488:	47a0      	blx	r4
 801a48a:	b00b      	add	sp, #44	; 0x2c
 801a48c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a490:	f010 0f04 	tst.w	r0, #4
 801a494:	e7e1      	b.n	801a45a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801a496:	f8d9 0000 	ldr.w	r0, [r9]
 801a49a:	6803      	ldr	r3, [r0, #0]
 801a49c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a49e:	4798      	blx	r3
 801a4a0:	4b44      	ldr	r3, [pc, #272]	; (801a5b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801a4a2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801a4a6:	881a      	ldrh	r2, [r3, #0]
 801a4a8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801a4ac:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a4b0:	fb02 1404 	mla	r4, r2, r4, r1
 801a4b4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a4b8:	469a      	mov	sl, r3
 801a4ba:	fb05 f502 	mul.w	r5, r5, r2
 801a4be:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801a4c2:	d059      	beq.n	801a578 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801a4c4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801a4c8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a4cc:	fa1f f28b 	uxth.w	r2, fp
 801a4d0:	fa1f f989 	uxth.w	r9, r9
 801a4d4:	469e      	mov	lr, r3
 801a4d6:	42ac      	cmp	r4, r5
 801a4d8:	d264      	bcs.n	801a5a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a4da:	eb04 0a07 	add.w	sl, r4, r7
 801a4de:	4554      	cmp	r4, sl
 801a4e0:	d23d      	bcs.n	801a55e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801a4e2:	8821      	ldrh	r1, [r4, #0]
 801a4e4:	f836 3b02 	ldrh.w	r3, [r6], #2
 801a4e8:	1208      	asrs	r0, r1, #8
 801a4ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a4ee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a4f2:	fb10 f009 	smulbb	r0, r0, r9
 801a4f6:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801a4fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a4fe:	00c9      	lsls	r1, r1, #3
 801a500:	fb0c 0c02 	mla	ip, ip, r2, r0
 801a504:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a508:	10d8      	asrs	r0, r3, #3
 801a50a:	b2c9      	uxtb	r1, r1
 801a50c:	00db      	lsls	r3, r3, #3
 801a50e:	fa1f fc8c 	uxth.w	ip, ip
 801a512:	fb1b fb09 	smulbb	fp, fp, r9
 801a516:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a51a:	b2db      	uxtb	r3, r3
 801a51c:	fb11 f109 	smulbb	r1, r1, r9
 801a520:	fb00 b002 	mla	r0, r0, r2, fp
 801a524:	fb03 1302 	mla	r3, r3, r2, r1
 801a528:	f10c 0b01 	add.w	fp, ip, #1
 801a52c:	b29b      	uxth	r3, r3
 801a52e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801a532:	b280      	uxth	r0, r0
 801a534:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801a538:	f103 0c01 	add.w	ip, r3, #1
 801a53c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a540:	1c43      	adds	r3, r0, #1
 801a542:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a546:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a54a:	0940      	lsrs	r0, r0, #5
 801a54c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a550:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a554:	ea4c 0c00 	orr.w	ip, ip, r0
 801a558:	f824 cb02 	strh.w	ip, [r4], #2
 801a55c:	e7bf      	b.n	801a4de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801a55e:	f8be 3000 	ldrh.w	r3, [lr]
 801a562:	eba3 0308 	sub.w	r3, r3, r8
 801a566:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a56a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801a56e:	eba3 0308 	sub.w	r3, r3, r8
 801a572:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a576:	e7ae      	b.n	801a4d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801a578:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a57c:	f8d9 0000 	ldr.w	r0, [r9]
 801a580:	42ac      	cmp	r4, r5
 801a582:	6803      	ldr	r3, [r0, #0]
 801a584:	d20e      	bcs.n	801a5a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a586:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801a58a:	4632      	mov	r2, r6
 801a58c:	463b      	mov	r3, r7
 801a58e:	4621      	mov	r1, r4
 801a590:	47c0      	blx	r8
 801a592:	f8ba 3000 	ldrh.w	r3, [sl]
 801a596:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a59a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801a59e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a5a2:	e7eb      	b.n	801a57c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801a5a4:	4b02      	ldr	r3, [pc, #8]	; (801a5b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a5a6:	6818      	ldr	r0, [r3, #0]
 801a5a8:	6803      	ldr	r3, [r0, #0]
 801a5aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a5ac:	4798      	blx	r3
 801a5ae:	e76c      	b.n	801a48a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801a5b0:	200137bc 	.word	0x200137bc
 801a5b4:	200137b6 	.word	0x200137b6

0801a5b8 <_ZN8touchgfx8LCD16bppD0Ev>:
 801a5b8:	b510      	push	{r4, lr}
 801a5ba:	2184      	movs	r1, #132	; 0x84
 801a5bc:	4604      	mov	r4, r0
 801a5be:	f00c fd26 	bl	802700e <_ZdlPvj>
 801a5c2:	4620      	mov	r0, r4
 801a5c4:	bd10      	pop	{r4, pc}

0801a5c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801a5c6:	b510      	push	{r4, lr}
 801a5c8:	2104      	movs	r1, #4
 801a5ca:	4604      	mov	r4, r0
 801a5cc:	f00c fd1f 	bl	802700e <_ZdlPvj>
 801a5d0:	4620      	mov	r0, r4
 801a5d2:	bd10      	pop	{r4, pc}

0801a5d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801a5d4:	b510      	push	{r4, lr}
 801a5d6:	2104      	movs	r1, #4
 801a5d8:	4604      	mov	r4, r0
 801a5da:	f00c fd18 	bl	802700e <_ZdlPvj>
 801a5de:	4620      	mov	r0, r4
 801a5e0:	bd10      	pop	{r4, pc}

0801a5e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801a5e2:	b510      	push	{r4, lr}
 801a5e4:	f640 0144 	movw	r1, #2116	; 0x844
 801a5e8:	4604      	mov	r4, r0
 801a5ea:	f00c fd10 	bl	802700e <_ZdlPvj>
 801a5ee:	4620      	mov	r0, r4
 801a5f0:	bd10      	pop	{r4, pc}

0801a5f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a5f2:	b510      	push	{r4, lr}
 801a5f4:	2104      	movs	r1, #4
 801a5f6:	4604      	mov	r4, r0
 801a5f8:	f00c fd09 	bl	802700e <_ZdlPvj>
 801a5fc:	4620      	mov	r0, r4
 801a5fe:	bd10      	pop	{r4, pc}

0801a600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801a600:	b510      	push	{r4, lr}
 801a602:	2104      	movs	r1, #4
 801a604:	4604      	mov	r4, r0
 801a606:	f00c fd02 	bl	802700e <_ZdlPvj>
 801a60a:	4620      	mov	r0, r4
 801a60c:	bd10      	pop	{r4, pc}

0801a60e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a60e:	b510      	push	{r4, lr}
 801a610:	2104      	movs	r1, #4
 801a612:	4604      	mov	r4, r0
 801a614:	f00c fcfb 	bl	802700e <_ZdlPvj>
 801a618:	4620      	mov	r0, r4
 801a61a:	bd10      	pop	{r4, pc}

0801a61c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801a61c:	b510      	push	{r4, lr}
 801a61e:	2104      	movs	r1, #4
 801a620:	4604      	mov	r4, r0
 801a622:	f00c fcf4 	bl	802700e <_ZdlPvj>
 801a626:	4620      	mov	r0, r4
 801a628:	bd10      	pop	{r4, pc}

0801a62a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a62a:	b510      	push	{r4, lr}
 801a62c:	2104      	movs	r1, #4
 801a62e:	4604      	mov	r4, r0
 801a630:	f00c fced 	bl	802700e <_ZdlPvj>
 801a634:	4620      	mov	r0, r4
 801a636:	bd10      	pop	{r4, pc}

0801a638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801a638:	b510      	push	{r4, lr}
 801a63a:	2104      	movs	r1, #4
 801a63c:	4604      	mov	r4, r0
 801a63e:	f00c fce6 	bl	802700e <_ZdlPvj>
 801a642:	4620      	mov	r0, r4
 801a644:	bd10      	pop	{r4, pc}

0801a646 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a646:	b510      	push	{r4, lr}
 801a648:	2104      	movs	r1, #4
 801a64a:	4604      	mov	r4, r0
 801a64c:	f00c fcdf 	bl	802700e <_ZdlPvj>
 801a650:	4620      	mov	r0, r4
 801a652:	bd10      	pop	{r4, pc}

0801a654 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801a654:	b510      	push	{r4, lr}
 801a656:	2104      	movs	r1, #4
 801a658:	4604      	mov	r4, r0
 801a65a:	f00c fcd8 	bl	802700e <_ZdlPvj>
 801a65e:	4620      	mov	r0, r4
 801a660:	bd10      	pop	{r4, pc}

0801a662 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a662:	b510      	push	{r4, lr}
 801a664:	2104      	movs	r1, #4
 801a666:	4604      	mov	r4, r0
 801a668:	f00c fcd1 	bl	802700e <_ZdlPvj>
 801a66c:	4620      	mov	r0, r4
 801a66e:	bd10      	pop	{r4, pc}

0801a670 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a670:	b510      	push	{r4, lr}
 801a672:	2104      	movs	r1, #4
 801a674:	4604      	mov	r4, r0
 801a676:	f00c fcca 	bl	802700e <_ZdlPvj>
 801a67a:	4620      	mov	r0, r4
 801a67c:	bd10      	pop	{r4, pc}

0801a67e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a67e:	b510      	push	{r4, lr}
 801a680:	2104      	movs	r1, #4
 801a682:	4604      	mov	r4, r0
 801a684:	f00c fcc3 	bl	802700e <_ZdlPvj>
 801a688:	4620      	mov	r0, r4
 801a68a:	bd10      	pop	{r4, pc}

0801a68c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a68c:	b510      	push	{r4, lr}
 801a68e:	2104      	movs	r1, #4
 801a690:	4604      	mov	r4, r0
 801a692:	f00c fcbc 	bl	802700e <_ZdlPvj>
 801a696:	4620      	mov	r0, r4
 801a698:	bd10      	pop	{r4, pc}

0801a69a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a69a:	b510      	push	{r4, lr}
 801a69c:	2104      	movs	r1, #4
 801a69e:	4604      	mov	r4, r0
 801a6a0:	f00c fcb5 	bl	802700e <_ZdlPvj>
 801a6a4:	4620      	mov	r0, r4
 801a6a6:	bd10      	pop	{r4, pc}

0801a6a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801a6a8:	b510      	push	{r4, lr}
 801a6aa:	2104      	movs	r1, #4
 801a6ac:	4604      	mov	r4, r0
 801a6ae:	f00c fcae 	bl	802700e <_ZdlPvj>
 801a6b2:	4620      	mov	r0, r4
 801a6b4:	bd10      	pop	{r4, pc}

0801a6b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a6b6:	b510      	push	{r4, lr}
 801a6b8:	2104      	movs	r1, #4
 801a6ba:	4604      	mov	r4, r0
 801a6bc:	f00c fca7 	bl	802700e <_ZdlPvj>
 801a6c0:	4620      	mov	r0, r4
 801a6c2:	bd10      	pop	{r4, pc}

0801a6c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a6c4:	b510      	push	{r4, lr}
 801a6c6:	2104      	movs	r1, #4
 801a6c8:	4604      	mov	r4, r0
 801a6ca:	f00c fca0 	bl	802700e <_ZdlPvj>
 801a6ce:	4620      	mov	r0, r4
 801a6d0:	bd10      	pop	{r4, pc}

0801a6d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a6d2:	b510      	push	{r4, lr}
 801a6d4:	2104      	movs	r1, #4
 801a6d6:	4604      	mov	r4, r0
 801a6d8:	f00c fc99 	bl	802700e <_ZdlPvj>
 801a6dc:	4620      	mov	r0, r4
 801a6de:	bd10      	pop	{r4, pc}

0801a6e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801a6e0:	b510      	push	{r4, lr}
 801a6e2:	2104      	movs	r1, #4
 801a6e4:	4604      	mov	r4, r0
 801a6e6:	f00c fc92 	bl	802700e <_ZdlPvj>
 801a6ea:	4620      	mov	r0, r4
 801a6ec:	bd10      	pop	{r4, pc}

0801a6ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a6ee:	b510      	push	{r4, lr}
 801a6f0:	2104      	movs	r1, #4
 801a6f2:	4604      	mov	r4, r0
 801a6f4:	f00c fc8b 	bl	802700e <_ZdlPvj>
 801a6f8:	4620      	mov	r0, r4
 801a6fa:	bd10      	pop	{r4, pc}

0801a6fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a6fc:	b510      	push	{r4, lr}
 801a6fe:	2104      	movs	r1, #4
 801a700:	4604      	mov	r4, r0
 801a702:	f00c fc84 	bl	802700e <_ZdlPvj>
 801a706:	4620      	mov	r0, r4
 801a708:	bd10      	pop	{r4, pc}

0801a70a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a70a:	b510      	push	{r4, lr}
 801a70c:	2104      	movs	r1, #4
 801a70e:	4604      	mov	r4, r0
 801a710:	f00c fc7d 	bl	802700e <_ZdlPvj>
 801a714:	4620      	mov	r0, r4
 801a716:	bd10      	pop	{r4, pc}

0801a718 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a718:	b510      	push	{r4, lr}
 801a71a:	2104      	movs	r1, #4
 801a71c:	4604      	mov	r4, r0
 801a71e:	f00c fc76 	bl	802700e <_ZdlPvj>
 801a722:	4620      	mov	r0, r4
 801a724:	bd10      	pop	{r4, pc}

0801a726 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a726:	b510      	push	{r4, lr}
 801a728:	2104      	movs	r1, #4
 801a72a:	4604      	mov	r4, r0
 801a72c:	f00c fc6f 	bl	802700e <_ZdlPvj>
 801a730:	4620      	mov	r0, r4
 801a732:	bd10      	pop	{r4, pc}

0801a734 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a734:	b510      	push	{r4, lr}
 801a736:	2104      	movs	r1, #4
 801a738:	4604      	mov	r4, r0
 801a73a:	f00c fc68 	bl	802700e <_ZdlPvj>
 801a73e:	4620      	mov	r0, r4
 801a740:	bd10      	pop	{r4, pc}

0801a742 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801a742:	b510      	push	{r4, lr}
 801a744:	2104      	movs	r1, #4
 801a746:	4604      	mov	r4, r0
 801a748:	f00c fc61 	bl	802700e <_ZdlPvj>
 801a74c:	4620      	mov	r0, r4
 801a74e:	bd10      	pop	{r4, pc}

0801a750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801a750:	b510      	push	{r4, lr}
 801a752:	2104      	movs	r1, #4
 801a754:	4604      	mov	r4, r0
 801a756:	f00c fc5a 	bl	802700e <_ZdlPvj>
 801a75a:	4620      	mov	r0, r4
 801a75c:	bd10      	pop	{r4, pc}

0801a75e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801a75e:	b510      	push	{r4, lr}
 801a760:	2104      	movs	r1, #4
 801a762:	4604      	mov	r4, r0
 801a764:	f00c fc53 	bl	802700e <_ZdlPvj>
 801a768:	4620      	mov	r0, r4
 801a76a:	bd10      	pop	{r4, pc}

0801a76c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801a76c:	b510      	push	{r4, lr}
 801a76e:	2104      	movs	r1, #4
 801a770:	4604      	mov	r4, r0
 801a772:	f00c fc4c 	bl	802700e <_ZdlPvj>
 801a776:	4620      	mov	r0, r4
 801a778:	bd10      	pop	{r4, pc}
	...

0801a77c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801a77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a780:	b08f      	sub	sp, #60	; 0x3c
 801a782:	461c      	mov	r4, r3
 801a784:	9205      	str	r2, [sp, #20]
 801a786:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a78a:	9100      	str	r1, [sp, #0]
 801a78c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a78e:	9201      	str	r2, [sp, #4]
 801a790:	2a00      	cmp	r2, #0
 801a792:	f000 8115 	beq.w	801a9c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801a796:	6820      	ldr	r0, [r4, #0]
 801a798:	6861      	ldr	r1, [r4, #4]
 801a79a:	aa0a      	add	r2, sp, #40	; 0x28
 801a79c:	c203      	stmia	r2!, {r0, r1}
 801a79e:	6818      	ldr	r0, [r3, #0]
 801a7a0:	6859      	ldr	r1, [r3, #4]
 801a7a2:	aa0c      	add	r2, sp, #48	; 0x30
 801a7a4:	c203      	stmia	r2!, {r0, r1}
 801a7a6:	a80a      	add	r0, sp, #40	; 0x28
 801a7a8:	f7f9 fd1e 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a7ac:	4621      	mov	r1, r4
 801a7ae:	a80c      	add	r0, sp, #48	; 0x30
 801a7b0:	f7f9 fd5e 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a7b4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801a7b8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801a7bc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801a7c0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801a7c4:	bfde      	ittt	le
 801a7c6:	b2b3      	uxthle	r3, r6
 801a7c8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801a7cc:	fb92 f3f3 	sdivle	r3, r2, r3
 801a7d0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a7d4:	bfc8      	it	gt
 801a7d6:	2301      	movgt	r3, #1
 801a7d8:	fb92 f1f3 	sdiv	r1, r2, r3
 801a7dc:	fa1f fc81 	uxth.w	ip, r1
 801a7e0:	fb0c 2413 	mls	r4, ip, r3, r2
 801a7e4:	fb14 f406 	smulbb	r4, r4, r6
 801a7e8:	441d      	add	r5, r3
 801a7ea:	4404      	add	r4, r0
 801a7ec:	4661      	mov	r1, ip
 801a7ee:	3d01      	subs	r5, #1
 801a7f0:	b2a4      	uxth	r4, r4
 801a7f2:	fb95 f5f3 	sdiv	r5, r5, r3
 801a7f6:	b131      	cbz	r1, 801a806 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801a7f8:	9b05      	ldr	r3, [sp, #20]
 801a7fa:	9900      	ldr	r1, [sp, #0]
 801a7fc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a800:	ba1b      	rev	r3, r3
 801a802:	4419      	add	r1, r3
 801a804:	9100      	str	r1, [sp, #0]
 801a806:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a80a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801a80e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801a812:	4418      	add	r0, r3
 801a814:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a818:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801a81c:	441a      	add	r2, r3
 801a81e:	4b6a      	ldr	r3, [pc, #424]	; (801a9c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a820:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801a824:	6818      	ldr	r0, [r3, #0]
 801a826:	6803      	ldr	r3, [r0, #0]
 801a828:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a82a:	4798      	blx	r3
 801a82c:	4967      	ldr	r1, [pc, #412]	; (801a9cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801a82e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a832:	880b      	ldrh	r3, [r1, #0]
 801a834:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801a838:	9109      	str	r1, [sp, #36]	; 0x24
 801a83a:	fb03 c202 	mla	r2, r3, r2, ip
 801a83e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a842:	4373      	muls	r3, r6
 801a844:	b2ad      	uxth	r5, r5
 801a846:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a84a:	00ad      	lsls	r5, r5, #2
 801a84c:	9306      	str	r3, [sp, #24]
 801a84e:	1d2b      	adds	r3, r5, #4
 801a850:	9307      	str	r3, [sp, #28]
 801a852:	9b01      	ldr	r3, [sp, #4]
 801a854:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a858:	9103      	str	r1, [sp, #12]
 801a85a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801a85e:	2c00      	cmp	r4, #0
 801a860:	bf0c      	ite	eq
 801a862:	46c6      	moveq	lr, r8
 801a864:	f04f 0e00 	movne.w	lr, #0
 801a868:	2300      	movs	r3, #0
 801a86a:	b292      	uxth	r2, r2
 801a86c:	fa1f fe8e 	uxth.w	lr, lr
 801a870:	9302      	str	r3, [sp, #8]
 801a872:	9204      	str	r2, [sp, #16]
 801a874:	9a06      	ldr	r2, [sp, #24]
 801a876:	4282      	cmp	r2, r0
 801a878:	f240 809d 	bls.w	801a9b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801a87c:	b963      	cbnz	r3, 801a898 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801a87e:	9b00      	ldr	r3, [sp, #0]
 801a880:	781a      	ldrb	r2, [r3, #0]
 801a882:	0993      	lsrs	r3, r2, #6
 801a884:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801a888:	9202      	str	r2, [sp, #8]
 801a88a:	1e5a      	subs	r2, r3, #1
 801a88c:	2a02      	cmp	r2, #2
 801a88e:	d815      	bhi.n	801a8bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801a890:	9a00      	ldr	r2, [sp, #0]
 801a892:	3201      	adds	r2, #1
 801a894:	9200      	str	r2, [sp, #0]
 801a896:	b29b      	uxth	r3, r3
 801a898:	b1b4      	cbz	r4, 801a8c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801a89a:	429c      	cmp	r4, r3
 801a89c:	bf95      	itete	ls
 801a89e:	1b1c      	subls	r4, r3, r4
 801a8a0:	1ae4      	subhi	r4, r4, r3
 801a8a2:	fa1f fa84 	uxthls.w	sl, r4
 801a8a6:	b2a4      	uxthhi	r4, r4
 801a8a8:	bf87      	ittee	hi
 801a8aa:	4671      	movhi	r1, lr
 801a8ac:	f04f 0a00 	movhi.w	sl, #0
 801a8b0:	fa1f f188 	uxthls.w	r1, r8
 801a8b4:	2400      	movls	r4, #0
 801a8b6:	4653      	mov	r3, sl
 801a8b8:	468e      	mov	lr, r1
 801a8ba:	e7db      	b.n	801a874 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801a8bc:	9a00      	ldr	r2, [sp, #0]
 801a8be:	9b00      	ldr	r3, [sp, #0]
 801a8c0:	3202      	adds	r2, #2
 801a8c2:	785b      	ldrb	r3, [r3, #1]
 801a8c4:	9200      	str	r2, [sp, #0]
 801a8c6:	e7e7      	b.n	801a898 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801a8c8:	2202      	movs	r2, #2
 801a8ca:	4615      	mov	r5, r2
 801a8cc:	9907      	ldr	r1, [sp, #28]
 801a8ce:	9a02      	ldr	r2, [sp, #8]
 801a8d0:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a8d4:	9905      	ldr	r1, [sp, #20]
 801a8d6:	4573      	cmp	r3, lr
 801a8d8:	f831 c002 	ldrh.w	ip, [r1, r2]
 801a8dc:	9a01      	ldr	r2, [sp, #4]
 801a8de:	bf2b      	itete	cs
 801a8e0:	eba3 0a0e 	subcs.w	sl, r3, lr
 801a8e4:	ebae 0103 	subcc.w	r1, lr, r3
 801a8e8:	46f1      	movcs	r9, lr
 801a8ea:	4699      	movcc	r9, r3
 801a8ec:	bf27      	ittee	cs
 801a8ee:	fa1f fa8a 	uxthcs.w	sl, sl
 801a8f2:	4621      	movcs	r1, r4
 801a8f4:	b289      	uxthcc	r1, r1
 801a8f6:	46a2      	movcc	sl, r4
 801a8f8:	2aff      	cmp	r2, #255	; 0xff
 801a8fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a8fe:	d105      	bne.n	801a90c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801a900:	4481      	add	r9, r0
 801a902:	4581      	cmp	r9, r0
 801a904:	d045      	beq.n	801a992 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801a906:	f820 cb02 	strh.w	ip, [r0], #2
 801a90a:	e7fa      	b.n	801a902 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801a90c:	9d03      	ldr	r5, [sp, #12]
 801a90e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801a912:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a916:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a91a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a91e:	436a      	muls	r2, r5
 801a920:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a924:	fa5f fc8c 	uxtb.w	ip, ip
 801a928:	9208      	str	r2, [sp, #32]
 801a92a:	fb0b fb05 	mul.w	fp, fp, r5
 801a92e:	fb0c fc05 	mul.w	ip, ip, r5
 801a932:	4481      	add	r9, r0
 801a934:	4581      	cmp	r9, r0
 801a936:	d02c      	beq.n	801a992 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801a938:	8802      	ldrh	r2, [r0, #0]
 801a93a:	9d04      	ldr	r5, [sp, #16]
 801a93c:	9f04      	ldr	r7, [sp, #16]
 801a93e:	1216      	asrs	r6, r2, #8
 801a940:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a944:	fb16 f605 	smulbb	r6, r6, r5
 801a948:	9d08      	ldr	r5, [sp, #32]
 801a94a:	442e      	add	r6, r5
 801a94c:	10d5      	asrs	r5, r2, #3
 801a94e:	00d2      	lsls	r2, r2, #3
 801a950:	b2d2      	uxtb	r2, r2
 801a952:	fb12 f207 	smulbb	r2, r2, r7
 801a956:	b2b6      	uxth	r6, r6
 801a958:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a95c:	4462      	add	r2, ip
 801a95e:	fb15 f507 	smulbb	r5, r5, r7
 801a962:	b292      	uxth	r2, r2
 801a964:	1c77      	adds	r7, r6, #1
 801a966:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801a96a:	1c57      	adds	r7, r2, #1
 801a96c:	445d      	add	r5, fp
 801a96e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801a972:	b2ad      	uxth	r5, r5
 801a974:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a978:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a97c:	4316      	orrs	r6, r2
 801a97e:	1c6a      	adds	r2, r5, #1
 801a980:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801a984:	096d      	lsrs	r5, r5, #5
 801a986:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a98a:	432e      	orrs	r6, r5
 801a98c:	f820 6b02 	strh.w	r6, [r0], #2
 801a990:	e7d0      	b.n	801a934 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801a992:	4573      	cmp	r3, lr
 801a994:	d38f      	bcc.n	801a8b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801a996:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801a99a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a99c:	fa1f f188 	uxth.w	r1, r8
 801a9a0:	1a64      	subs	r4, r4, r1
 801a9a2:	881b      	ldrh	r3, [r3, #0]
 801a9a4:	b2a4      	uxth	r4, r4
 801a9a6:	2c00      	cmp	r4, #0
 801a9a8:	eba3 0308 	sub.w	r3, r3, r8
 801a9ac:	bf18      	it	ne
 801a9ae:	2100      	movne	r1, #0
 801a9b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a9b4:	e77f      	b.n	801a8b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801a9b6:	4b04      	ldr	r3, [pc, #16]	; (801a9c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a9b8:	6818      	ldr	r0, [r3, #0]
 801a9ba:	6803      	ldr	r3, [r0, #0]
 801a9bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a9be:	4798      	blx	r3
 801a9c0:	b00f      	add	sp, #60	; 0x3c
 801a9c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9c6:	bf00      	nop
 801a9c8:	200137bc 	.word	0x200137bc
 801a9cc:	200137b6 	.word	0x200137b6

0801a9d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801a9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9d4:	b09f      	sub	sp, #124	; 0x7c
 801a9d6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801a9da:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801a9de:	9209      	str	r2, [sp, #36]	; 0x24
 801a9e0:	461d      	mov	r5, r3
 801a9e2:	4604      	mov	r4, r0
 801a9e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a9e6:	2a00      	cmp	r2, #0
 801a9e8:	f000 81eb 	beq.w	801adc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801a9ec:	6828      	ldr	r0, [r5, #0]
 801a9ee:	6869      	ldr	r1, [r5, #4]
 801a9f0:	aa1a      	add	r2, sp, #104	; 0x68
 801a9f2:	c203      	stmia	r2!, {r0, r1}
 801a9f4:	6818      	ldr	r0, [r3, #0]
 801a9f6:	6859      	ldr	r1, [r3, #4]
 801a9f8:	aa1c      	add	r2, sp, #112	; 0x70
 801a9fa:	c203      	stmia	r2!, {r0, r1}
 801a9fc:	a81a      	add	r0, sp, #104	; 0x68
 801a9fe:	f7f9 fbf3 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aa02:	4629      	mov	r1, r5
 801aa04:	a81c      	add	r0, sp, #112	; 0x70
 801aa06:	f7f9 fc33 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aa0a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801aa0e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801aa12:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801aa16:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801aa1a:	bfd7      	itett	le
 801aa1c:	b29a      	uxthle	r2, r3
 801aa1e:	2201      	movgt	r2, #1
 801aa20:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801aa24:	fb91 f2f2 	sdivle	r2, r1, r2
 801aa28:	9202      	str	r2, [sp, #8]
 801aa2a:	9802      	ldr	r0, [sp, #8]
 801aa2c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801aa30:	fb92 f0f0 	sdiv	r0, r2, r0
 801aa34:	b280      	uxth	r0, r0
 801aa36:	9010      	str	r0, [sp, #64]	; 0x40
 801aa38:	9902      	ldr	r1, [sp, #8]
 801aa3a:	9802      	ldr	r0, [sp, #8]
 801aa3c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801aa3e:	4488      	add	r8, r1
 801aa40:	fb05 2510 	mls	r5, r5, r0, r2
 801aa44:	fb15 f503 	smulbb	r5, r5, r3
 801aa48:	f108 38ff 	add.w	r8, r8, #4294967295
 801aa4c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801aa50:	fb98 f8f1 	sdiv	r8, r8, r1
 801aa54:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801aa58:	440d      	add	r5, r1
 801aa5a:	4419      	add	r1, r3
 801aa5c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801aa60:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801aa64:	441a      	add	r2, r3
 801aa66:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801aa6a:	9304      	str	r3, [sp, #16]
 801aa6c:	4b95      	ldr	r3, [pc, #596]	; (801acc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801aa6e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801aa72:	6818      	ldr	r0, [r3, #0]
 801aa74:	6803      	ldr	r3, [r0, #0]
 801aa76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aa78:	4798      	blx	r3
 801aa7a:	4b93      	ldr	r3, [pc, #588]	; (801acc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801aa7c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801aa80:	881a      	ldrh	r2, [r3, #0]
 801aa82:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801aa86:	9318      	str	r3, [sp, #96]	; 0x60
 801aa88:	fb02 7101 	mla	r1, r2, r1, r7
 801aa8c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801aa90:	4356      	muls	r6, r2
 801aa92:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801aa96:	f108 0801 	add.w	r8, r8, #1
 801aa9a:	920a      	str	r2, [sp, #40]	; 0x28
 801aa9c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa9e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801aaa2:	930f      	str	r3, [sp, #60]	; 0x3c
 801aaa4:	fa1f f888 	uxth.w	r8, r8
 801aaa8:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801aaac:	f108 0204 	add.w	r2, r8, #4
 801aab0:	9211      	str	r2, [sp, #68]	; 0x44
 801aab2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801aab4:	4b85      	ldr	r3, [pc, #532]	; (801accc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801aab6:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801aaba:	b2ad      	uxth	r5, r5
 801aabc:	9215      	str	r2, [sp, #84]	; 0x54
 801aabe:	2d00      	cmp	r5, #0
 801aac0:	9a04      	ldr	r2, [sp, #16]
 801aac2:	f04f 0100 	mov.w	r1, #0
 801aac6:	bf18      	it	ne
 801aac8:	2200      	movne	r2, #0
 801aaca:	1b1b      	subs	r3, r3, r4
 801aacc:	b292      	uxth	r2, r2
 801aace:	910d      	str	r1, [sp, #52]	; 0x34
 801aad0:	9319      	str	r3, [sp, #100]	; 0x64
 801aad2:	9910      	ldr	r1, [sp, #64]	; 0x40
 801aad4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aad6:	fa11 f383 	uxtah	r3, r1, r3
 801aada:	9914      	ldr	r1, [sp, #80]	; 0x50
 801aadc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801aae0:	3304      	adds	r3, #4
 801aae2:	9306      	str	r3, [sp, #24]
 801aae4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aae6:	4283      	cmp	r3, r0
 801aae8:	f240 8166 	bls.w	801adb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801aaec:	9902      	ldr	r1, [sp, #8]
 801aaee:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801aaf2:	fbb5 f3f3 	udiv	r3, r5, r3
 801aaf6:	1acb      	subs	r3, r1, r3
 801aaf8:	b29b      	uxth	r3, r3
 801aafa:	9316      	str	r3, [sp, #88]	; 0x58
 801aafc:	9b06      	ldr	r3, [sp, #24]
 801aafe:	9e06      	ldr	r6, [sp, #24]
 801ab00:	7859      	ldrb	r1, [r3, #1]
 801ab02:	789b      	ldrb	r3, [r3, #2]
 801ab04:	7836      	ldrb	r6, [r6, #0]
 801ab06:	9612      	str	r6, [sp, #72]	; 0x48
 801ab08:	021b      	lsls	r3, r3, #8
 801ab0a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801ab0e:	9906      	ldr	r1, [sp, #24]
 801ab10:	78c9      	ldrb	r1, [r1, #3]
 801ab12:	430b      	orrs	r3, r1
 801ab14:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801ab16:	3601      	adds	r6, #1
 801ab18:	4419      	add	r1, r3
 801ab1a:	9605      	str	r6, [sp, #20]
 801ab1c:	1c4e      	adds	r6, r1, #1
 801ab1e:	9603      	str	r6, [sp, #12]
 801ab20:	7849      	ldrb	r1, [r1, #1]
 801ab22:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ab24:	0209      	lsls	r1, r1, #8
 801ab26:	5cf3      	ldrb	r3, [r6, r3]
 801ab28:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801ab2c:	4319      	orrs	r1, r3
 801ab2e:	b28b      	uxth	r3, r1
 801ab30:	930c      	str	r3, [sp, #48]	; 0x30
 801ab32:	2300      	movs	r3, #0
 801ab34:	f04f 0a01 	mov.w	sl, #1
 801ab38:	9307      	str	r3, [sp, #28]
 801ab3a:	469c      	mov	ip, r3
 801ab3c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801ab40:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801ab44:	46d3      	mov	fp, sl
 801ab46:	4657      	mov	r7, sl
 801ab48:	930e      	str	r3, [sp, #56]	; 0x38
 801ab4a:	2d00      	cmp	r5, #0
 801ab4c:	d07e      	beq.n	801ac4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801ab4e:	42af      	cmp	r7, r5
 801ab50:	d26e      	bcs.n	801ac30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801ab52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ab54:	9201      	str	r2, [sp, #4]
 801ab56:	1bed      	subs	r5, r5, r7
 801ab58:	4283      	cmp	r3, r0
 801ab5a:	b2ad      	uxth	r5, r5
 801ab5c:	d802      	bhi.n	801ab64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801ab5e:	e073      	b.n	801ac48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801ab60:	2b00      	cmp	r3, #0
 801ab62:	d15f      	bne.n	801ac24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801ab64:	9b03      	ldr	r3, [sp, #12]
 801ab66:	785b      	ldrb	r3, [r3, #1]
 801ab68:	f1cb 0207 	rsb	r2, fp, #7
 801ab6c:	4093      	lsls	r3, r2
 801ab6e:	005b      	lsls	r3, r3, #1
 801ab70:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801ab74:	9b03      	ldr	r3, [sp, #12]
 801ab76:	781b      	ldrb	r3, [r3, #0]
 801ab78:	fa43 f30b 	asr.w	r3, r3, fp
 801ab7c:	b2db      	uxtb	r3, r3
 801ab7e:	4313      	orrs	r3, r2
 801ab80:	f10b 0201 	add.w	r2, fp, #1
 801ab84:	fa5f fb82 	uxtb.w	fp, r2
 801ab88:	9a03      	ldr	r2, [sp, #12]
 801ab8a:	f1bb 0f08 	cmp.w	fp, #8
 801ab8e:	bf15      	itete	ne
 801ab90:	3201      	addne	r2, #1
 801ab92:	3202      	addeq	r2, #2
 801ab94:	9203      	strne	r2, [sp, #12]
 801ab96:	9203      	streq	r2, [sp, #12]
 801ab98:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ab9a:	b29f      	uxth	r7, r3
 801ab9c:	bf08      	it	eq
 801ab9e:	f04f 0b00 	moveq.w	fp, #0
 801aba2:	42ba      	cmp	r2, r7
 801aba4:	d309      	bcc.n	801abba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801aba6:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801abaa:	2301      	movs	r3, #1
 801abac:	9a05      	ldr	r2, [sp, #20]
 801abae:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801abb2:	d30e      	bcc.n	801abd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801abb4:	469a      	mov	sl, r3
 801abb6:	2600      	movs	r6, #0
 801abb8:	e035      	b.n	801ac26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801abba:	9b05      	ldr	r3, [sp, #20]
 801abbc:	429f      	cmp	r7, r3
 801abbe:	d318      	bcc.n	801abf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801abc0:	eb04 030a 	add.w	r3, r4, sl
 801abc4:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801abc8:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801abcc:	f10a 0301 	add.w	r3, sl, #1
 801abd0:	b29b      	uxth	r3, r3
 801abd2:	9a05      	ldr	r2, [sp, #20]
 801abd4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801abd8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801abda:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801abde:	7116      	strb	r6, [r2, #4]
 801abe0:	f10a 0601 	add.w	r6, sl, #1
 801abe4:	80d1      	strh	r1, [r2, #6]
 801abe6:	7156      	strb	r6, [r2, #5]
 801abe8:	9a05      	ldr	r2, [sp, #20]
 801abea:	3201      	adds	r2, #1
 801abec:	b292      	uxth	r2, r2
 801abee:	9205      	str	r2, [sp, #20]
 801abf0:	e7e0      	b.n	801abb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801abf2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801abf6:	463a      	mov	r2, r7
 801abf8:	795b      	ldrb	r3, [r3, #5]
 801abfa:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801abfe:	4426      	add	r6, r4
 801ac00:	9919      	ldr	r1, [sp, #100]	; 0x64
 801ac02:	eb01 0c06 	add.w	ip, r1, r6
 801ac06:	f1bc 0f00 	cmp.w	ip, #0
 801ac0a:	dd07      	ble.n	801ac1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801ac0c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801ac10:	f892 c004 	ldrb.w	ip, [r2, #4]
 801ac14:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801ac18:	88d2      	ldrh	r2, [r2, #6]
 801ac1a:	e7f1      	b.n	801ac00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801ac1c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801ac20:	b29b      	uxth	r3, r3
 801ac22:	e7c3      	b.n	801abac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801ac24:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ac26:	970c      	str	r7, [sp, #48]	; 0x30
 801ac28:	9a01      	ldr	r2, [sp, #4]
 801ac2a:	46b4      	mov	ip, r6
 801ac2c:	461f      	mov	r7, r3
 801ac2e:	e78c      	b.n	801ab4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801ac30:	1b7b      	subs	r3, r7, r5
 801ac32:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ac36:	9201      	str	r2, [sp, #4]
 801ac38:	eb0c 0605 	add.w	r6, ip, r5
 801ac3c:	b29b      	uxth	r3, r3
 801ac3e:	b2b6      	uxth	r6, r6
 801ac40:	2500      	movs	r5, #0
 801ac42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ac44:	4282      	cmp	r2, r0
 801ac46:	d88b      	bhi.n	801ab60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801ac48:	9a01      	ldr	r2, [sp, #4]
 801ac4a:	e74b      	b.n	801aae4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801ac4c:	4297      	cmp	r7, r2
 801ac4e:	d332      	bcc.n	801acb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801ac50:	1abb      	subs	r3, r7, r2
 801ac52:	b29b      	uxth	r3, r3
 801ac54:	9208      	str	r2, [sp, #32]
 801ac56:	9501      	str	r5, [sp, #4]
 801ac58:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ac5a:	29ff      	cmp	r1, #255	; 0xff
 801ac5c:	9908      	ldr	r1, [sp, #32]
 801ac5e:	eb0c 0601 	add.w	r6, ip, r1
 801ac62:	d135      	bne.n	801acd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801ac64:	f1a0 0e02 	sub.w	lr, r0, #2
 801ac68:	b2b6      	uxth	r6, r6
 801ac6a:	45b4      	cmp	ip, r6
 801ac6c:	f040 808c 	bne.w	801ad88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801ac70:	9908      	ldr	r1, [sp, #32]
 801ac72:	4297      	cmp	r7, r2
 801ac74:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ac78:	d3e2      	bcc.n	801ac40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801ac7a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ac7c:	9904      	ldr	r1, [sp, #16]
 801ac7e:	8812      	ldrh	r2, [r2, #0]
 801ac80:	1a52      	subs	r2, r2, r1
 801ac82:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ac86:	9a07      	ldr	r2, [sp, #28]
 801ac88:	9916      	ldr	r1, [sp, #88]	; 0x58
 801ac8a:	3201      	adds	r2, #1
 801ac8c:	428a      	cmp	r2, r1
 801ac8e:	9207      	str	r2, [sp, #28]
 801ac90:	f040 8087 	bne.w	801ada2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801ac94:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801ac98:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801ac9c:	9b04      	ldr	r3, [sp, #16]
 801ac9e:	1bed      	subs	r5, r5, r7
 801aca0:	b2ad      	uxth	r5, r5
 801aca2:	2d00      	cmp	r5, #0
 801aca4:	bf08      	it	eq
 801aca6:	461a      	moveq	r2, r3
 801aca8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801acaa:	bf18      	it	ne
 801acac:	2200      	movne	r2, #0
 801acae:	3301      	adds	r3, #1
 801acb0:	930d      	str	r3, [sp, #52]	; 0x34
 801acb2:	b292      	uxth	r2, r2
 801acb4:	e70d      	b.n	801aad2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801acb6:	1bd1      	subs	r1, r2, r7
 801acb8:	b28b      	uxth	r3, r1
 801acba:	9301      	str	r3, [sp, #4]
 801acbc:	9708      	str	r7, [sp, #32]
 801acbe:	462b      	mov	r3, r5
 801acc0:	e7ca      	b.n	801ac58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801acc2:	bf00      	nop
 801acc4:	200137bc 	.word	0x200137bc
 801acc8:	200137b6 	.word	0x200137b6
 801accc:	fffff7fb 	.word	0xfffff7fb
 801acd0:	b2b6      	uxth	r6, r6
 801acd2:	900b      	str	r0, [sp, #44]	; 0x2c
 801acd4:	45b4      	cmp	ip, r6
 801acd6:	d0cb      	beq.n	801ac70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801acd8:	f10c 0101 	add.w	r1, ip, #1
 801acdc:	44a4      	add	ip, r4
 801acde:	9117      	str	r1, [sp, #92]	; 0x5c
 801ace0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801ace4:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ace6:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801acea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801acec:	f8b1 c000 	ldrh.w	ip, [r1]
 801acf0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801acf2:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801acf6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801acfa:	fb1e fe01 	smulbb	lr, lr, r1
 801acfe:	ea4f 2825 	mov.w	r8, r5, asr #8
 801ad02:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ad04:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801ad08:	fb08 e801 	mla	r8, r8, r1, lr
 801ad0c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801ad10:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ad12:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ad16:	fb19 f901 	smulbb	r9, r9, r1
 801ad1a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801ad1e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ad20:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ad24:	fb0e 9e01 	mla	lr, lr, r1, r9
 801ad28:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ad2c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ad2e:	fa5f fc8c 	uxtb.w	ip, ip
 801ad32:	fb1c fc01 	smulbb	ip, ip, r1
 801ad36:	00ed      	lsls	r5, r5, #3
 801ad38:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ad3a:	b2ed      	uxtb	r5, r5
 801ad3c:	fb05 c501 	mla	r5, r5, r1, ip
 801ad40:	fa1f f888 	uxth.w	r8, r8
 801ad44:	fa1f fe8e 	uxth.w	lr, lr
 801ad48:	b2ad      	uxth	r5, r5
 801ad4a:	f108 0c01 	add.w	ip, r8, #1
 801ad4e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801ad52:	f10e 0901 	add.w	r9, lr, #1
 801ad56:	f105 0c01 	add.w	ip, r5, #1
 801ad5a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801ad5e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801ad62:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ad66:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ad6a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ad6e:	ea4c 0808 	orr.w	r8, ip, r8
 801ad72:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801ad74:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801ad78:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ad7c:	ea48 0809 	orr.w	r8, r8, r9
 801ad80:	f821 8b02 	strh.w	r8, [r1], #2
 801ad84:	910b      	str	r1, [sp, #44]	; 0x2c
 801ad86:	e7a5      	b.n	801acd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801ad88:	f10c 0801 	add.w	r8, ip, #1
 801ad8c:	44a4      	add	ip, r4
 801ad8e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ad90:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801ad94:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801ad98:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801ad9c:	fa1f fc88 	uxth.w	ip, r8
 801ada0:	e763      	b.n	801ac6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801ada2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ada6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801adaa:	1aad      	subs	r5, r5, r2
 801adac:	b2ad      	uxth	r5, r5
 801adae:	2d00      	cmp	r5, #0
 801adb0:	bf18      	it	ne
 801adb2:	2200      	movne	r2, #0
 801adb4:	9201      	str	r2, [sp, #4]
 801adb6:	e744      	b.n	801ac42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801adb8:	4b03      	ldr	r3, [pc, #12]	; (801adc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801adba:	6818      	ldr	r0, [r3, #0]
 801adbc:	6803      	ldr	r3, [r0, #0]
 801adbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801adc0:	4798      	blx	r3
 801adc2:	b01f      	add	sp, #124	; 0x7c
 801adc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801adc8:	200137bc 	.word	0x200137bc

0801adcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801adcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801add0:	b08f      	sub	sp, #60	; 0x3c
 801add2:	461c      	mov	r4, r3
 801add4:	9203      	str	r2, [sp, #12]
 801add6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801adda:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801addc:	9202      	str	r2, [sp, #8]
 801adde:	460f      	mov	r7, r1
 801ade0:	2a00      	cmp	r2, #0
 801ade2:	f000 8128 	beq.w	801b036 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801ade6:	6820      	ldr	r0, [r4, #0]
 801ade8:	6861      	ldr	r1, [r4, #4]
 801adea:	aa0a      	add	r2, sp, #40	; 0x28
 801adec:	c203      	stmia	r2!, {r0, r1}
 801adee:	6818      	ldr	r0, [r3, #0]
 801adf0:	6859      	ldr	r1, [r3, #4]
 801adf2:	aa0c      	add	r2, sp, #48	; 0x30
 801adf4:	c203      	stmia	r2!, {r0, r1}
 801adf6:	a80a      	add	r0, sp, #40	; 0x28
 801adf8:	f7f9 f9f6 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801adfc:	4621      	mov	r1, r4
 801adfe:	a80c      	add	r0, sp, #48	; 0x30
 801ae00:	f7f9 fa36 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ae04:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ae08:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801ae0c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801ae10:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ae14:	bfde      	ittt	le
 801ae16:	b2b3      	uxthle	r3, r6
 801ae18:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ae1c:	fb92 f3f3 	sdivle	r3, r2, r3
 801ae20:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ae24:	bfc8      	it	gt
 801ae26:	2301      	movgt	r3, #1
 801ae28:	fb92 f1f3 	sdiv	r1, r2, r3
 801ae2c:	fa1f fc81 	uxth.w	ip, r1
 801ae30:	fb0c 2413 	mls	r4, ip, r3, r2
 801ae34:	fb14 f406 	smulbb	r4, r4, r6
 801ae38:	441d      	add	r5, r3
 801ae3a:	4404      	add	r4, r0
 801ae3c:	4661      	mov	r1, ip
 801ae3e:	3d01      	subs	r5, #1
 801ae40:	b2a4      	uxth	r4, r4
 801ae42:	fb95 f5f3 	sdiv	r5, r5, r3
 801ae46:	b121      	cbz	r1, 801ae52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801ae48:	9b03      	ldr	r3, [sp, #12]
 801ae4a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ae4e:	ba1b      	rev	r3, r3
 801ae50:	441f      	add	r7, r3
 801ae52:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ae56:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801ae5a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ae5e:	4418      	add	r0, r3
 801ae60:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ae64:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ae68:	441a      	add	r2, r3
 801ae6a:	4b74      	ldr	r3, [pc, #464]	; (801b03c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ae6c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ae70:	6818      	ldr	r0, [r3, #0]
 801ae72:	6803      	ldr	r3, [r0, #0]
 801ae74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ae76:	4798      	blx	r3
 801ae78:	4a71      	ldr	r2, [pc, #452]	; (801b040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801ae7a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801ae7e:	8813      	ldrh	r3, [r2, #0]
 801ae80:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ae84:	9209      	str	r2, [sp, #36]	; 0x24
 801ae86:	fb03 c101 	mla	r1, r3, r1, ip
 801ae8a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ae8e:	4373      	muls	r3, r6
 801ae90:	b2ad      	uxth	r5, r5
 801ae92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ae96:	00ad      	lsls	r5, r5, #2
 801ae98:	2c00      	cmp	r4, #0
 801ae9a:	9304      	str	r3, [sp, #16]
 801ae9c:	f105 0304 	add.w	r3, r5, #4
 801aea0:	9305      	str	r3, [sp, #20]
 801aea2:	bf0c      	ite	eq
 801aea4:	46c8      	moveq	r8, r9
 801aea6:	f04f 0800 	movne.w	r8, #0
 801aeaa:	2300      	movs	r3, #0
 801aeac:	fa1f f888 	uxth.w	r8, r8
 801aeb0:	9301      	str	r3, [sp, #4]
 801aeb2:	9a04      	ldr	r2, [sp, #16]
 801aeb4:	4282      	cmp	r2, r0
 801aeb6:	f240 80b9 	bls.w	801b02c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801aeba:	b95b      	cbnz	r3, 801aed4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801aebc:	783a      	ldrb	r2, [r7, #0]
 801aebe:	0993      	lsrs	r3, r2, #6
 801aec0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801aec4:	9201      	str	r2, [sp, #4]
 801aec6:	1e5a      	subs	r2, r3, #1
 801aec8:	2a02      	cmp	r2, #2
 801aeca:	bf8d      	iteet	hi
 801aecc:	787b      	ldrbhi	r3, [r7, #1]
 801aece:	3701      	addls	r7, #1
 801aed0:	b29b      	uxthls	r3, r3
 801aed2:	3702      	addhi	r7, #2
 801aed4:	b184      	cbz	r4, 801aef8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801aed6:	429c      	cmp	r4, r3
 801aed8:	bf95      	itete	ls
 801aeda:	1b1c      	subls	r4, r3, r4
 801aedc:	1ae4      	subhi	r4, r4, r3
 801aede:	fa1f fa84 	uxthls.w	sl, r4
 801aee2:	b2a4      	uxthhi	r4, r4
 801aee4:	bf87      	ittee	hi
 801aee6:	46c4      	movhi	ip, r8
 801aee8:	f04f 0a00 	movhi.w	sl, #0
 801aeec:	fa1f fc89 	uxthls.w	ip, r9
 801aef0:	2400      	movls	r4, #0
 801aef2:	4653      	mov	r3, sl
 801aef4:	46e0      	mov	r8, ip
 801aef6:	e7dc      	b.n	801aeb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801aef8:	2204      	movs	r2, #4
 801aefa:	4615      	mov	r5, r2
 801aefc:	9905      	ldr	r1, [sp, #20]
 801aefe:	9a01      	ldr	r2, [sp, #4]
 801af00:	fb15 1202 	smlabb	r2, r5, r2, r1
 801af04:	9903      	ldr	r1, [sp, #12]
 801af06:	588a      	ldr	r2, [r1, r2]
 801af08:	4543      	cmp	r3, r8
 801af0a:	bf27      	ittee	cs
 801af0c:	eba3 0a08 	subcs.w	sl, r3, r8
 801af10:	46c6      	movcs	lr, r8
 801af12:	eba8 0c03 	subcc.w	ip, r8, r3
 801af16:	469e      	movcc	lr, r3
 801af18:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801af1c:	bf27      	ittee	cs
 801af1e:	fa1f fa8a 	uxthcs.w	sl, sl
 801af22:	46a4      	movcs	ip, r4
 801af24:	fa1f fc8c 	uxthcc.w	ip, ip
 801af28:	46a2      	movcc	sl, r4
 801af2a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801af2e:	2900      	cmp	r1, #0
 801af30:	d066      	beq.n	801b000 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801af32:	29ff      	cmp	r1, #255	; 0xff
 801af34:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801af38:	d114      	bne.n	801af64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801af3a:	9d02      	ldr	r5, [sp, #8]
 801af3c:	2dff      	cmp	r5, #255	; 0xff
 801af3e:	d111      	bne.n	801af64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801af40:	0951      	lsrs	r1, r2, #5
 801af42:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801af46:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801af4a:	f026 0607 	bic.w	r6, r6, #7
 801af4e:	430e      	orrs	r6, r1
 801af50:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801af54:	4316      	orrs	r6, r2
 801af56:	b2b6      	uxth	r6, r6
 801af58:	4486      	add	lr, r0
 801af5a:	4586      	cmp	lr, r0
 801af5c:	d051      	beq.n	801b002 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801af5e:	f820 6b02 	strh.w	r6, [r0], #2
 801af62:	e7fa      	b.n	801af5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801af64:	9d02      	ldr	r5, [sp, #8]
 801af66:	4369      	muls	r1, r5
 801af68:	1c4d      	adds	r5, r1, #1
 801af6a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801af6e:	122d      	asrs	r5, r5, #8
 801af70:	ea6f 0b05 	mvn.w	fp, r5
 801af74:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801af78:	b2ad      	uxth	r5, r5
 801af7a:	b2f6      	uxtb	r6, r6
 801af7c:	b2d2      	uxtb	r2, r2
 801af7e:	fb11 f105 	smulbb	r1, r1, r5
 801af82:	fb16 f605 	smulbb	r6, r6, r5
 801af86:	fb12 f205 	smulbb	r2, r2, r5
 801af8a:	b289      	uxth	r1, r1
 801af8c:	b2b6      	uxth	r6, r6
 801af8e:	b292      	uxth	r2, r2
 801af90:	9106      	str	r1, [sp, #24]
 801af92:	9607      	str	r6, [sp, #28]
 801af94:	9208      	str	r2, [sp, #32]
 801af96:	4486      	add	lr, r0
 801af98:	fa5f fb8b 	uxtb.w	fp, fp
 801af9c:	4586      	cmp	lr, r0
 801af9e:	d030      	beq.n	801b002 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801afa0:	8802      	ldrh	r2, [r0, #0]
 801afa2:	9906      	ldr	r1, [sp, #24]
 801afa4:	1216      	asrs	r6, r2, #8
 801afa6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801afaa:	10d5      	asrs	r5, r2, #3
 801afac:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801afb0:	fb06 160b 	mla	r6, r6, fp, r1
 801afb4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801afb8:	9907      	ldr	r1, [sp, #28]
 801afba:	00d2      	lsls	r2, r2, #3
 801afbc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801afc0:	fb05 150b 	mla	r5, r5, fp, r1
 801afc4:	b2d2      	uxtb	r2, r2
 801afc6:	9908      	ldr	r1, [sp, #32]
 801afc8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801afcc:	b2b6      	uxth	r6, r6
 801afce:	fb02 120b 	mla	r2, r2, fp, r1
 801afd2:	b292      	uxth	r2, r2
 801afd4:	1c71      	adds	r1, r6, #1
 801afd6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801afda:	1c51      	adds	r1, r2, #1
 801afdc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801afe0:	b2ad      	uxth	r5, r5
 801afe2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801afe6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801afea:	4316      	orrs	r6, r2
 801afec:	1c6a      	adds	r2, r5, #1
 801afee:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801aff2:	096d      	lsrs	r5, r5, #5
 801aff4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801aff8:	432e      	orrs	r6, r5
 801affa:	f820 6b02 	strh.w	r6, [r0], #2
 801affe:	e7cd      	b.n	801af9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801b000:	4470      	add	r0, lr
 801b002:	4543      	cmp	r3, r8
 801b004:	f4ff af75 	bcc.w	801aef2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b008:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b00c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b00e:	fa1f fc89 	uxth.w	ip, r9
 801b012:	eba4 040c 	sub.w	r4, r4, ip
 801b016:	881b      	ldrh	r3, [r3, #0]
 801b018:	b2a4      	uxth	r4, r4
 801b01a:	2c00      	cmp	r4, #0
 801b01c:	eba3 0309 	sub.w	r3, r3, r9
 801b020:	bf18      	it	ne
 801b022:	f04f 0c00 	movne.w	ip, #0
 801b026:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b02a:	e762      	b.n	801aef2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b02c:	4b03      	ldr	r3, [pc, #12]	; (801b03c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b02e:	6818      	ldr	r0, [r3, #0]
 801b030:	6803      	ldr	r3, [r0, #0]
 801b032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b034:	4798      	blx	r3
 801b036:	b00f      	add	sp, #60	; 0x3c
 801b038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b03c:	200137bc 	.word	0x200137bc
 801b040:	200137b6 	.word	0x200137b6

0801b044 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b048:	b093      	sub	sp, #76	; 0x4c
 801b04a:	461c      	mov	r4, r3
 801b04c:	9205      	str	r2, [sp, #20]
 801b04e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801b052:	9101      	str	r1, [sp, #4]
 801b054:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b056:	9202      	str	r2, [sp, #8]
 801b058:	2a00      	cmp	r2, #0
 801b05a:	f000 812c 	beq.w	801b2b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801b05e:	6820      	ldr	r0, [r4, #0]
 801b060:	6861      	ldr	r1, [r4, #4]
 801b062:	aa0e      	add	r2, sp, #56	; 0x38
 801b064:	c203      	stmia	r2!, {r0, r1}
 801b066:	6818      	ldr	r0, [r3, #0]
 801b068:	6859      	ldr	r1, [r3, #4]
 801b06a:	aa10      	add	r2, sp, #64	; 0x40
 801b06c:	c203      	stmia	r2!, {r0, r1}
 801b06e:	a80e      	add	r0, sp, #56	; 0x38
 801b070:	f7f9 f8ba 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b074:	4621      	mov	r1, r4
 801b076:	a810      	add	r0, sp, #64	; 0x40
 801b078:	f7f9 f8fa 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b07c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801b080:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801b084:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801b088:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b08c:	bfde      	ittt	le
 801b08e:	b2b3      	uxthle	r3, r6
 801b090:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b094:	fb92 f3f3 	sdivle	r3, r2, r3
 801b098:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b09c:	bfc8      	it	gt
 801b09e:	2301      	movgt	r3, #1
 801b0a0:	fb92 f1f3 	sdiv	r1, r2, r3
 801b0a4:	fa1f fc81 	uxth.w	ip, r1
 801b0a8:	fb0c 2413 	mls	r4, ip, r3, r2
 801b0ac:	fb14 f406 	smulbb	r4, r4, r6
 801b0b0:	441d      	add	r5, r3
 801b0b2:	4404      	add	r4, r0
 801b0b4:	4661      	mov	r1, ip
 801b0b6:	3d01      	subs	r5, #1
 801b0b8:	b2a4      	uxth	r4, r4
 801b0ba:	fb95 f5f3 	sdiv	r5, r5, r3
 801b0be:	b131      	cbz	r1, 801b0ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801b0c0:	9b05      	ldr	r3, [sp, #20]
 801b0c2:	9901      	ldr	r1, [sp, #4]
 801b0c4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b0c8:	ba1b      	rev	r3, r3
 801b0ca:	4419      	add	r1, r3
 801b0cc:	9101      	str	r1, [sp, #4]
 801b0ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801b0d2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801b0d6:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801b0da:	4418      	add	r0, r3
 801b0dc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801b0e0:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801b0e4:	441a      	add	r2, r3
 801b0e6:	4b75      	ldr	r3, [pc, #468]	; (801b2bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801b0e8:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801b0ec:	6818      	ldr	r0, [r3, #0]
 801b0ee:	6803      	ldr	r3, [r0, #0]
 801b0f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b0f2:	4798      	blx	r3
 801b0f4:	4972      	ldr	r1, [pc, #456]	; (801b2c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801b0f6:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801b0fa:	880b      	ldrh	r3, [r1, #0]
 801b0fc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b100:	910d      	str	r1, [sp, #52]	; 0x34
 801b102:	fb03 c202 	mla	r2, r3, r2, ip
 801b106:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b10a:	4373      	muls	r3, r6
 801b10c:	b2ad      	uxth	r5, r5
 801b10e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b112:	00ad      	lsls	r5, r5, #2
 801b114:	9308      	str	r3, [sp, #32]
 801b116:	1d2b      	adds	r3, r5, #4
 801b118:	9309      	str	r3, [sp, #36]	; 0x24
 801b11a:	9b02      	ldr	r3, [sp, #8]
 801b11c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b120:	9106      	str	r1, [sp, #24]
 801b122:	43da      	mvns	r2, r3
 801b124:	2c00      	cmp	r4, #0
 801b126:	bf0c      	ite	eq
 801b128:	46dc      	moveq	ip, fp
 801b12a:	f04f 0c00 	movne.w	ip, #0
 801b12e:	2300      	movs	r3, #0
 801b130:	b2d2      	uxtb	r2, r2
 801b132:	fa1f fc8c 	uxth.w	ip, ip
 801b136:	9303      	str	r3, [sp, #12]
 801b138:	9207      	str	r2, [sp, #28]
 801b13a:	9a08      	ldr	r2, [sp, #32]
 801b13c:	4282      	cmp	r2, r0
 801b13e:	f240 80b5 	bls.w	801b2ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801b142:	b963      	cbnz	r3, 801b15e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b144:	9b01      	ldr	r3, [sp, #4]
 801b146:	781a      	ldrb	r2, [r3, #0]
 801b148:	0993      	lsrs	r3, r2, #6
 801b14a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b14e:	9203      	str	r2, [sp, #12]
 801b150:	1e5a      	subs	r2, r3, #1
 801b152:	2a02      	cmp	r2, #2
 801b154:	d815      	bhi.n	801b182 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801b156:	9a01      	ldr	r2, [sp, #4]
 801b158:	3201      	adds	r2, #1
 801b15a:	9201      	str	r2, [sp, #4]
 801b15c:	b29b      	uxth	r3, r3
 801b15e:	b1b4      	cbz	r4, 801b18e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801b160:	429c      	cmp	r4, r3
 801b162:	bf95      	itete	ls
 801b164:	1b1c      	subls	r4, r3, r4
 801b166:	1ae4      	subhi	r4, r4, r3
 801b168:	fa1f f884 	uxthls.w	r8, r4
 801b16c:	b2a4      	uxthhi	r4, r4
 801b16e:	bf87      	ittee	hi
 801b170:	4666      	movhi	r6, ip
 801b172:	f04f 0800 	movhi.w	r8, #0
 801b176:	fa1f f68b 	uxthls.w	r6, fp
 801b17a:	2400      	movls	r4, #0
 801b17c:	4643      	mov	r3, r8
 801b17e:	46b4      	mov	ip, r6
 801b180:	e7db      	b.n	801b13a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801b182:	9a01      	ldr	r2, [sp, #4]
 801b184:	9b01      	ldr	r3, [sp, #4]
 801b186:	3202      	adds	r2, #2
 801b188:	785b      	ldrb	r3, [r3, #1]
 801b18a:	9201      	str	r2, [sp, #4]
 801b18c:	e7e7      	b.n	801b15e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b18e:	2203      	movs	r2, #3
 801b190:	4615      	mov	r5, r2
 801b192:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b194:	9a03      	ldr	r2, [sp, #12]
 801b196:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b19a:	9905      	ldr	r1, [sp, #20]
 801b19c:	4563      	cmp	r3, ip
 801b19e:	eb01 0502 	add.w	r5, r1, r2
 801b1a2:	9902      	ldr	r1, [sp, #8]
 801b1a4:	bf29      	itett	cs
 801b1a6:	eba3 080c 	subcs.w	r8, r3, ip
 801b1aa:	ebac 0603 	subcc.w	r6, ip, r3
 801b1ae:	fa1f f888 	uxthcs.w	r8, r8
 801b1b2:	46e1      	movcs	r9, ip
 801b1b4:	bf2f      	iteee	cs
 801b1b6:	4626      	movcs	r6, r4
 801b1b8:	b2b6      	uxthcc	r6, r6
 801b1ba:	4699      	movcc	r9, r3
 801b1bc:	46a0      	movcc	r8, r4
 801b1be:	29ff      	cmp	r1, #255	; 0xff
 801b1c0:	d04a      	beq.n	801b258 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801b1c2:	9f06      	ldr	r7, [sp, #24]
 801b1c4:	78a9      	ldrb	r1, [r5, #2]
 801b1c6:	9004      	str	r0, [sp, #16]
 801b1c8:	4379      	muls	r1, r7
 801b1ca:	910a      	str	r1, [sp, #40]	; 0x28
 801b1cc:	7869      	ldrb	r1, [r5, #1]
 801b1ce:	4379      	muls	r1, r7
 801b1d0:	910b      	str	r1, [sp, #44]	; 0x2c
 801b1d2:	9905      	ldr	r1, [sp, #20]
 801b1d4:	5c8a      	ldrb	r2, [r1, r2]
 801b1d6:	437a      	muls	r2, r7
 801b1d8:	920c      	str	r2, [sp, #48]	; 0x30
 801b1da:	46ca      	mov	sl, r9
 801b1dc:	f1ba 0f00 	cmp.w	sl, #0
 801b1e0:	d03d      	beq.n	801b25e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801b1e2:	9a04      	ldr	r2, [sp, #16]
 801b1e4:	9f07      	ldr	r7, [sp, #28]
 801b1e6:	8812      	ldrh	r2, [r2, #0]
 801b1e8:	1215      	asrs	r5, r2, #8
 801b1ea:	46be      	mov	lr, r7
 801b1ec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b1f0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b1f2:	10d1      	asrs	r1, r2, #3
 801b1f4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801b1f8:	fb05 750e 	mla	r5, r5, lr, r7
 801b1fc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b200:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801b202:	00d2      	lsls	r2, r2, #3
 801b204:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801b208:	fb01 710e 	mla	r1, r1, lr, r7
 801b20c:	b2d2      	uxtb	r2, r2
 801b20e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b210:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b214:	b2ad      	uxth	r5, r5
 801b216:	fb02 720e 	mla	r2, r2, lr, r7
 801b21a:	b292      	uxth	r2, r2
 801b21c:	f105 0e01 	add.w	lr, r5, #1
 801b220:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b224:	f102 0e01 	add.w	lr, r2, #1
 801b228:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b22c:	b289      	uxth	r1, r1
 801b22e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b232:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b236:	4315      	orrs	r5, r2
 801b238:	1c4a      	adds	r2, r1, #1
 801b23a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b23e:	0949      	lsrs	r1, r1, #5
 801b240:	9a04      	ldr	r2, [sp, #16]
 801b242:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b246:	430d      	orrs	r5, r1
 801b248:	f822 5b02 	strh.w	r5, [r2], #2
 801b24c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b250:	9204      	str	r2, [sp, #16]
 801b252:	fa1f fa8a 	uxth.w	sl, sl
 801b256:	e7c1      	b.n	801b1dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801b258:	4649      	mov	r1, r9
 801b25a:	4686      	mov	lr, r0
 801b25c:	b999      	cbnz	r1, 801b286 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801b25e:	4563      	cmp	r3, ip
 801b260:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801b264:	d38a      	bcc.n	801b17c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801b266:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801b26a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b26c:	fa1f f68b 	uxth.w	r6, fp
 801b270:	1ba4      	subs	r4, r4, r6
 801b272:	881b      	ldrh	r3, [r3, #0]
 801b274:	b2a4      	uxth	r4, r4
 801b276:	2c00      	cmp	r4, #0
 801b278:	eba3 030b 	sub.w	r3, r3, fp
 801b27c:	bf18      	it	ne
 801b27e:	2600      	movne	r6, #0
 801b280:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b284:	e77a      	b.n	801b17c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801b286:	78aa      	ldrb	r2, [r5, #2]
 801b288:	4f0e      	ldr	r7, [pc, #56]	; (801b2c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801b28a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801b28e:	786a      	ldrb	r2, [r5, #1]
 801b290:	00d2      	lsls	r2, r2, #3
 801b292:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b296:	ea4a 0202 	orr.w	r2, sl, r2
 801b29a:	f895 a000 	ldrb.w	sl, [r5]
 801b29e:	3901      	subs	r1, #1
 801b2a0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801b2a4:	f82e 2b02 	strh.w	r2, [lr], #2
 801b2a8:	b289      	uxth	r1, r1
 801b2aa:	e7d7      	b.n	801b25c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801b2ac:	4b03      	ldr	r3, [pc, #12]	; (801b2bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801b2ae:	6818      	ldr	r0, [r3, #0]
 801b2b0:	6803      	ldr	r3, [r0, #0]
 801b2b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b2b4:	4798      	blx	r3
 801b2b6:	b013      	add	sp, #76	; 0x4c
 801b2b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2bc:	200137bc 	.word	0x200137bc
 801b2c0:	200137b6 	.word	0x200137b6
 801b2c4:	fffff800 	.word	0xfffff800

0801b2c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b2c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2cc:	b09d      	sub	sp, #116	; 0x74
 801b2ce:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801b2d2:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801b2d6:	920e      	str	r2, [sp, #56]	; 0x38
 801b2d8:	461c      	mov	r4, r3
 801b2da:	4683      	mov	fp, r0
 801b2dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b2de:	2a00      	cmp	r2, #0
 801b2e0:	f000 81e0 	beq.w	801b6a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801b2e4:	6820      	ldr	r0, [r4, #0]
 801b2e6:	6861      	ldr	r1, [r4, #4]
 801b2e8:	aa18      	add	r2, sp, #96	; 0x60
 801b2ea:	c203      	stmia	r2!, {r0, r1}
 801b2ec:	6818      	ldr	r0, [r3, #0]
 801b2ee:	6859      	ldr	r1, [r3, #4]
 801b2f0:	aa1a      	add	r2, sp, #104	; 0x68
 801b2f2:	c203      	stmia	r2!, {r0, r1}
 801b2f4:	a818      	add	r0, sp, #96	; 0x60
 801b2f6:	f7f8 ff77 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b2fa:	4621      	mov	r1, r4
 801b2fc:	a81a      	add	r0, sp, #104	; 0x68
 801b2fe:	f7f8 ffb7 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b302:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801b306:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801b30a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801b30e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b312:	bfd7      	itett	le
 801b314:	b29a      	uxthle	r2, r3
 801b316:	2201      	movgt	r2, #1
 801b318:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b31c:	fb91 f2f2 	sdivle	r2, r1, r2
 801b320:	9202      	str	r2, [sp, #8]
 801b322:	9802      	ldr	r0, [sp, #8]
 801b324:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801b328:	fb92 f0f0 	sdiv	r0, r2, r0
 801b32c:	b280      	uxth	r0, r0
 801b32e:	900f      	str	r0, [sp, #60]	; 0x3c
 801b330:	9902      	ldr	r1, [sp, #8]
 801b332:	9802      	ldr	r0, [sp, #8]
 801b334:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b336:	440c      	add	r4, r1
 801b338:	fb05 2510 	mls	r5, r5, r0, r2
 801b33c:	fb15 f503 	smulbb	r5, r5, r3
 801b340:	3c01      	subs	r4, #1
 801b342:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801b346:	fb94 f4f1 	sdiv	r4, r4, r1
 801b34a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801b34e:	440d      	add	r5, r1
 801b350:	4419      	add	r1, r3
 801b352:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801b356:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801b35a:	441a      	add	r2, r3
 801b35c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b360:	9306      	str	r3, [sp, #24]
 801b362:	4bb3      	ldr	r3, [pc, #716]	; (801b630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801b364:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801b368:	6818      	ldr	r0, [r3, #0]
 801b36a:	6803      	ldr	r3, [r0, #0]
 801b36c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b36e:	4798      	blx	r3
 801b370:	4bb0      	ldr	r3, [pc, #704]	; (801b634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801b372:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801b376:	881a      	ldrh	r2, [r3, #0]
 801b378:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801b37c:	9316      	str	r3, [sp, #88]	; 0x58
 801b37e:	fb02 7101 	mla	r1, r2, r1, r7
 801b382:	3401      	adds	r4, #1
 801b384:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801b388:	b2a4      	uxth	r4, r4
 801b38a:	4356      	muls	r6, r2
 801b38c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801b390:	00a4      	lsls	r4, r4, #2
 801b392:	920a      	str	r2, [sp, #40]	; 0x28
 801b394:	1d22      	adds	r2, r4, #4
 801b396:	b2ad      	uxth	r5, r5
 801b398:	9213      	str	r2, [sp, #76]	; 0x4c
 801b39a:	4ba7      	ldr	r3, [pc, #668]	; (801b638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801b39c:	9a06      	ldr	r2, [sp, #24]
 801b39e:	2d00      	cmp	r5, #0
 801b3a0:	bf0c      	ite	eq
 801b3a2:	4611      	moveq	r1, r2
 801b3a4:	2100      	movne	r1, #0
 801b3a6:	2200      	movs	r2, #0
 801b3a8:	eba3 030b 	sub.w	r3, r3, fp
 801b3ac:	b289      	uxth	r1, r1
 801b3ae:	920d      	str	r2, [sp, #52]	; 0x34
 801b3b0:	9317      	str	r3, [sp, #92]	; 0x5c
 801b3b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b3b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b3b6:	fa12 f383 	uxtah	r3, r2, r3
 801b3ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b3bc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801b3c0:	3304      	adds	r3, #4
 801b3c2:	9308      	str	r3, [sp, #32]
 801b3c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b3c6:	4543      	cmp	r3, r8
 801b3c8:	f240 8167 	bls.w	801b69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b3cc:	9a02      	ldr	r2, [sp, #8]
 801b3ce:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801b3d2:	fbb5 f3f3 	udiv	r3, r5, r3
 801b3d6:	1ad3      	subs	r3, r2, r3
 801b3d8:	b29b      	uxth	r3, r3
 801b3da:	9314      	str	r3, [sp, #80]	; 0x50
 801b3dc:	9b08      	ldr	r3, [sp, #32]
 801b3de:	9808      	ldr	r0, [sp, #32]
 801b3e0:	785a      	ldrb	r2, [r3, #1]
 801b3e2:	789b      	ldrb	r3, [r3, #2]
 801b3e4:	7800      	ldrb	r0, [r0, #0]
 801b3e6:	9010      	str	r0, [sp, #64]	; 0x40
 801b3e8:	021b      	lsls	r3, r3, #8
 801b3ea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801b3ee:	9a08      	ldr	r2, [sp, #32]
 801b3f0:	78d2      	ldrb	r2, [r2, #3]
 801b3f2:	4313      	orrs	r3, r2
 801b3f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b3f6:	3001      	adds	r0, #1
 801b3f8:	441a      	add	r2, r3
 801b3fa:	9007      	str	r0, [sp, #28]
 801b3fc:	1c50      	adds	r0, r2, #1
 801b3fe:	9005      	str	r0, [sp, #20]
 801b400:	7852      	ldrb	r2, [r2, #1]
 801b402:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b404:	0212      	lsls	r2, r2, #8
 801b406:	5cc3      	ldrb	r3, [r0, r3]
 801b408:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801b40c:	431a      	orrs	r2, r3
 801b40e:	b293      	uxth	r3, r2
 801b410:	930b      	str	r3, [sp, #44]	; 0x2c
 801b412:	2300      	movs	r3, #0
 801b414:	9309      	str	r3, [sp, #36]	; 0x24
 801b416:	2301      	movs	r3, #1
 801b418:	9301      	str	r3, [sp, #4]
 801b41a:	9304      	str	r3, [sp, #16]
 801b41c:	2300      	movs	r3, #0
 801b41e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801b422:	9303      	str	r3, [sp, #12]
 801b424:	f04f 0e01 	mov.w	lr, #1
 801b428:	2d00      	cmp	r5, #0
 801b42a:	d07c      	beq.n	801b526 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801b42c:	45ae      	cmp	lr, r5
 801b42e:	d26b      	bcs.n	801b508 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801b430:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b432:	eba5 050e 	sub.w	r5, r5, lr
 801b436:	4543      	cmp	r3, r8
 801b438:	b2ad      	uxth	r5, r5
 801b43a:	460c      	mov	r4, r1
 801b43c:	d802      	bhi.n	801b444 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801b43e:	e070      	b.n	801b522 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801b440:	2b00      	cmp	r3, #0
 801b442:	d15c      	bne.n	801b4fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b444:	9b05      	ldr	r3, [sp, #20]
 801b446:	9a04      	ldr	r2, [sp, #16]
 801b448:	785b      	ldrb	r3, [r3, #1]
 801b44a:	9904      	ldr	r1, [sp, #16]
 801b44c:	f1c2 0207 	rsb	r2, r2, #7
 801b450:	4093      	lsls	r3, r2
 801b452:	005b      	lsls	r3, r3, #1
 801b454:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b458:	9b05      	ldr	r3, [sp, #20]
 801b45a:	781b      	ldrb	r3, [r3, #0]
 801b45c:	410b      	asrs	r3, r1
 801b45e:	3101      	adds	r1, #1
 801b460:	b2c9      	uxtb	r1, r1
 801b462:	2908      	cmp	r1, #8
 801b464:	9104      	str	r1, [sp, #16]
 801b466:	9905      	ldr	r1, [sp, #20]
 801b468:	bf0a      	itet	eq
 801b46a:	3102      	addeq	r1, #2
 801b46c:	3101      	addne	r1, #1
 801b46e:	9105      	streq	r1, [sp, #20]
 801b470:	b2db      	uxtb	r3, r3
 801b472:	bf0a      	itet	eq
 801b474:	2100      	moveq	r1, #0
 801b476:	9105      	strne	r1, [sp, #20]
 801b478:	9104      	streq	r1, [sp, #16]
 801b47a:	4313      	orrs	r3, r2
 801b47c:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b47e:	b29a      	uxth	r2, r3
 801b480:	4291      	cmp	r1, r2
 801b482:	d30a      	bcc.n	801b49a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801b484:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801b488:	2301      	movs	r3, #1
 801b48a:	9907      	ldr	r1, [sp, #28]
 801b48c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801b490:	d30f      	bcc.n	801b4b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b492:	2100      	movs	r1, #0
 801b494:	9301      	str	r3, [sp, #4]
 801b496:	9103      	str	r1, [sp, #12]
 801b498:	e032      	b.n	801b500 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801b49a:	9b07      	ldr	r3, [sp, #28]
 801b49c:	429a      	cmp	r2, r3
 801b49e:	d318      	bcc.n	801b4d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801b4a0:	9b01      	ldr	r3, [sp, #4]
 801b4a2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801b4a6:	445b      	add	r3, fp
 801b4a8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801b4ac:	9b01      	ldr	r3, [sp, #4]
 801b4ae:	3301      	adds	r3, #1
 801b4b0:	b29b      	uxth	r3, r3
 801b4b2:	9907      	ldr	r1, [sp, #28]
 801b4b4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801b4b8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801b4bc:	7108      	strb	r0, [r1, #4]
 801b4be:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b4c0:	80c8      	strh	r0, [r1, #6]
 801b4c2:	9801      	ldr	r0, [sp, #4]
 801b4c4:	3001      	adds	r0, #1
 801b4c6:	7148      	strb	r0, [r1, #5]
 801b4c8:	9907      	ldr	r1, [sp, #28]
 801b4ca:	3101      	adds	r1, #1
 801b4cc:	b289      	uxth	r1, r1
 801b4ce:	9107      	str	r1, [sp, #28]
 801b4d0:	e7df      	b.n	801b492 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801b4d2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801b4d6:	4611      	mov	r1, r2
 801b4d8:	795b      	ldrb	r3, [r3, #5]
 801b4da:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801b4de:	4458      	add	r0, fp
 801b4e0:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801b4e2:	4406      	add	r6, r0
 801b4e4:	2e00      	cmp	r6, #0
 801b4e6:	dd06      	ble.n	801b4f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801b4e8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801b4ec:	790e      	ldrb	r6, [r1, #4]
 801b4ee:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801b4f2:	88c9      	ldrh	r1, [r1, #6]
 801b4f4:	e7f4      	b.n	801b4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801b4f6:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801b4fa:	b29b      	uxth	r3, r3
 801b4fc:	e7c5      	b.n	801b48a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801b4fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b500:	920b      	str	r2, [sp, #44]	; 0x2c
 801b502:	4621      	mov	r1, r4
 801b504:	469e      	mov	lr, r3
 801b506:	e78f      	b.n	801b428 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801b508:	9a03      	ldr	r2, [sp, #12]
 801b50a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801b50e:	442a      	add	r2, r5
 801b510:	ebae 0305 	sub.w	r3, lr, r5
 801b514:	b292      	uxth	r2, r2
 801b516:	b29b      	uxth	r3, r3
 801b518:	9203      	str	r2, [sp, #12]
 801b51a:	2500      	movs	r5, #0
 801b51c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b51e:	4542      	cmp	r2, r8
 801b520:	d88e      	bhi.n	801b440 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801b522:	4621      	mov	r1, r4
 801b524:	e74e      	b.n	801b3c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801b526:	458e      	cmp	lr, r1
 801b528:	bf29      	itett	cs
 801b52a:	ebae 0301 	subcs.w	r3, lr, r1
 801b52e:	eba1 040e 	subcc.w	r4, r1, lr
 801b532:	b29b      	uxthcs	r3, r3
 801b534:	910c      	strcs	r1, [sp, #48]	; 0x30
 801b536:	bf2f      	iteee	cs
 801b538:	462c      	movcs	r4, r5
 801b53a:	b2a4      	uxthcc	r4, r4
 801b53c:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801b540:	462b      	movcc	r3, r5
 801b542:	f04f 0900 	mov.w	r9, #0
 801b546:	9a03      	ldr	r2, [sp, #12]
 801b548:	980c      	ldr	r0, [sp, #48]	; 0x30
 801b54a:	444a      	add	r2, r9
 801b54c:	4548      	cmp	r0, r9
 801b54e:	b292      	uxth	r2, r2
 801b550:	d074      	beq.n	801b63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801b552:	445a      	add	r2, fp
 801b554:	2004      	movs	r0, #4
 801b556:	4605      	mov	r5, r0
 801b558:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801b55c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b55e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801b562:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b564:	5880      	ldr	r0, [r0, r2]
 801b566:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801b56a:	d014      	beq.n	801b596 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801b56c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b570:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801b574:	d112      	bne.n	801b59c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801b576:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b578:	2aff      	cmp	r2, #255	; 0xff
 801b57a:	d10f      	bne.n	801b59c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801b57c:	0942      	lsrs	r2, r0, #5
 801b57e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801b582:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b586:	f025 0507 	bic.w	r5, r5, #7
 801b58a:	4315      	orrs	r5, r2
 801b58c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b590:	4305      	orrs	r5, r0
 801b592:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801b596:	f109 0901 	add.w	r9, r9, #1
 801b59a:	e7d4      	b.n	801b546 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801b59c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801b5a0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b5a4:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801b5a8:	9215      	str	r2, [sp, #84]	; 0x54
 801b5aa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b5ac:	fb02 fa0a 	mul.w	sl, r2, sl
 801b5b0:	f10a 0201 	add.w	r2, sl, #1
 801b5b4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801b5b8:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b5bc:	1212      	asrs	r2, r2, #8
 801b5be:	fa1f fa82 	uxth.w	sl, r2
 801b5c2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801b5c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b5ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b5ce:	43d2      	mvns	r2, r2
 801b5d0:	b2d2      	uxtb	r2, r2
 801b5d2:	fb16 f60a 	smulbb	r6, r6, sl
 801b5d6:	fa5f fc8c 	uxtb.w	ip, ip
 801b5da:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801b5de:	b2c0      	uxtb	r0, r0
 801b5e0:	fb07 6702 	mla	r7, r7, r2, r6
 801b5e4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801b5e8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801b5ea:	fb10 f00a 	smulbb	r0, r0, sl
 801b5ee:	fb0c 0002 	mla	r0, ip, r2, r0
 801b5f2:	b2ed      	uxtb	r5, r5
 801b5f4:	b2bf      	uxth	r7, r7
 801b5f6:	fb15 f50a 	smulbb	r5, r5, sl
 801b5fa:	b280      	uxth	r0, r0
 801b5fc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801b600:	fb06 5602 	mla	r6, r6, r2, r5
 801b604:	1c7a      	adds	r2, r7, #1
 801b606:	1c45      	adds	r5, r0, #1
 801b608:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b60c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b610:	b2b6      	uxth	r6, r6
 801b612:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b616:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b61a:	432f      	orrs	r7, r5
 801b61c:	1c75      	adds	r5, r6, #1
 801b61e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801b622:	096d      	lsrs	r5, r5, #5
 801b624:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b628:	432f      	orrs	r7, r5
 801b62a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801b62e:	e7b2      	b.n	801b596 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801b630:	200137bc 	.word	0x200137bc
 801b634:	200137b6 	.word	0x200137b6
 801b638:	fffff7fb 	.word	0xfffff7fb
 801b63c:	9203      	str	r2, [sp, #12]
 801b63e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b640:	458e      	cmp	lr, r1
 801b642:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801b646:	f4ff af68 	bcc.w	801b51a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801b64a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801b64c:	9906      	ldr	r1, [sp, #24]
 801b64e:	8812      	ldrh	r2, [r2, #0]
 801b650:	1a52      	subs	r2, r2, r1
 801b652:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801b656:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b658:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b65a:	3201      	adds	r2, #1
 801b65c:	428a      	cmp	r2, r1
 801b65e:	9209      	str	r2, [sp, #36]	; 0x24
 801b660:	d111      	bne.n	801b686 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801b662:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801b666:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801b66a:	9b06      	ldr	r3, [sp, #24]
 801b66c:	eba5 0509 	sub.w	r5, r5, r9
 801b670:	b2ad      	uxth	r5, r5
 801b672:	2d00      	cmp	r5, #0
 801b674:	bf08      	it	eq
 801b676:	4619      	moveq	r1, r3
 801b678:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b67a:	bf18      	it	ne
 801b67c:	2100      	movne	r1, #0
 801b67e:	3301      	adds	r3, #1
 801b680:	930d      	str	r3, [sp, #52]	; 0x34
 801b682:	b289      	uxth	r1, r1
 801b684:	e695      	b.n	801b3b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801b686:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801b68a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801b68e:	1b2d      	subs	r5, r5, r4
 801b690:	b2ad      	uxth	r5, r5
 801b692:	2d00      	cmp	r5, #0
 801b694:	bf18      	it	ne
 801b696:	2400      	movne	r4, #0
 801b698:	e740      	b.n	801b51c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801b69a:	4b04      	ldr	r3, [pc, #16]	; (801b6ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801b69c:	6818      	ldr	r0, [r3, #0]
 801b69e:	6803      	ldr	r3, [r0, #0]
 801b6a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b6a2:	4798      	blx	r3
 801b6a4:	b01d      	add	sp, #116	; 0x74
 801b6a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6aa:	bf00      	nop
 801b6ac:	200137bc 	.word	0x200137bc

0801b6b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b6b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6b4:	b09f      	sub	sp, #124	; 0x7c
 801b6b6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b6ba:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b6be:	920a      	str	r2, [sp, #40]	; 0x28
 801b6c0:	461d      	mov	r5, r3
 801b6c2:	4604      	mov	r4, r0
 801b6c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6c6:	2a00      	cmp	r2, #0
 801b6c8:	f000 81fa 	beq.w	801bac0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801b6cc:	6828      	ldr	r0, [r5, #0]
 801b6ce:	6869      	ldr	r1, [r5, #4]
 801b6d0:	aa1a      	add	r2, sp, #104	; 0x68
 801b6d2:	c203      	stmia	r2!, {r0, r1}
 801b6d4:	6818      	ldr	r0, [r3, #0]
 801b6d6:	6859      	ldr	r1, [r3, #4]
 801b6d8:	aa1c      	add	r2, sp, #112	; 0x70
 801b6da:	c203      	stmia	r2!, {r0, r1}
 801b6dc:	a81a      	add	r0, sp, #104	; 0x68
 801b6de:	f7f8 fd83 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b6e2:	4629      	mov	r1, r5
 801b6e4:	a81c      	add	r0, sp, #112	; 0x70
 801b6e6:	f7f8 fdc3 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b6ea:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b6ee:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801b6f2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801b6f6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b6fa:	bfd7      	itett	le
 801b6fc:	b29a      	uxthle	r2, r3
 801b6fe:	2201      	movgt	r2, #1
 801b700:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b704:	fb91 f2f2 	sdivle	r2, r1, r2
 801b708:	9201      	str	r2, [sp, #4]
 801b70a:	9801      	ldr	r0, [sp, #4]
 801b70c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b710:	fb92 f0f0 	sdiv	r0, r2, r0
 801b714:	b280      	uxth	r0, r0
 801b716:	9010      	str	r0, [sp, #64]	; 0x40
 801b718:	9901      	ldr	r1, [sp, #4]
 801b71a:	9801      	ldr	r0, [sp, #4]
 801b71c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b71e:	440e      	add	r6, r1
 801b720:	fb05 2510 	mls	r5, r5, r0, r2
 801b724:	fb15 f503 	smulbb	r5, r5, r3
 801b728:	3e01      	subs	r6, #1
 801b72a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b72e:	fb96 f6f1 	sdiv	r6, r6, r1
 801b732:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b736:	440d      	add	r5, r1
 801b738:	4419      	add	r1, r3
 801b73a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b73e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b742:	441a      	add	r2, r3
 801b744:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b748:	9304      	str	r3, [sp, #16]
 801b74a:	4b96      	ldr	r3, [pc, #600]	; (801b9a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b74c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b750:	6818      	ldr	r0, [r3, #0]
 801b752:	6803      	ldr	r3, [r0, #0]
 801b754:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b756:	4798      	blx	r3
 801b758:	4b93      	ldr	r3, [pc, #588]	; (801b9a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b75a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b75e:	881a      	ldrh	r2, [r3, #0]
 801b760:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801b764:	9318      	str	r3, [sp, #96]	; 0x60
 801b766:	fb02 c101 	mla	r1, r2, r1, ip
 801b76a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801b76e:	4357      	muls	r7, r2
 801b770:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801b774:	3601      	adds	r6, #1
 801b776:	920b      	str	r2, [sp, #44]	; 0x2c
 801b778:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b77a:	4b8c      	ldr	r3, [pc, #560]	; (801b9ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b77c:	b2b6      	uxth	r6, r6
 801b77e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801b782:	1d32      	adds	r2, r6, #4
 801b784:	9206      	str	r2, [sp, #24]
 801b786:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b788:	43d2      	mvns	r2, r2
 801b78a:	b2d2      	uxtb	r2, r2
 801b78c:	b2ad      	uxth	r5, r5
 801b78e:	9215      	str	r2, [sp, #84]	; 0x54
 801b790:	9a04      	ldr	r2, [sp, #16]
 801b792:	2d00      	cmp	r5, #0
 801b794:	bf0c      	ite	eq
 801b796:	4611      	moveq	r1, r2
 801b798:	2100      	movne	r1, #0
 801b79a:	2200      	movs	r2, #0
 801b79c:	1b1b      	subs	r3, r3, r4
 801b79e:	b289      	uxth	r1, r1
 801b7a0:	920d      	str	r2, [sp, #52]	; 0x34
 801b7a2:	9319      	str	r3, [sp, #100]	; 0x64
 801b7a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b7a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b7a8:	fa12 f383 	uxtah	r3, r2, r3
 801b7ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b7ae:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801b7b2:	3304      	adds	r3, #4
 801b7b4:	9307      	str	r3, [sp, #28]
 801b7b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b7b8:	455b      	cmp	r3, fp
 801b7ba:	f240 817c 	bls.w	801bab6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801b7be:	9a01      	ldr	r2, [sp, #4]
 801b7c0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b7c4:	fbb5 f3f3 	udiv	r3, r5, r3
 801b7c8:	1ad3      	subs	r3, r2, r3
 801b7ca:	b29b      	uxth	r3, r3
 801b7cc:	9316      	str	r3, [sp, #88]	; 0x58
 801b7ce:	9b07      	ldr	r3, [sp, #28]
 801b7d0:	9807      	ldr	r0, [sp, #28]
 801b7d2:	785a      	ldrb	r2, [r3, #1]
 801b7d4:	789b      	ldrb	r3, [r3, #2]
 801b7d6:	7800      	ldrb	r0, [r0, #0]
 801b7d8:	9011      	str	r0, [sp, #68]	; 0x44
 801b7da:	021b      	lsls	r3, r3, #8
 801b7dc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801b7e0:	9a07      	ldr	r2, [sp, #28]
 801b7e2:	78d2      	ldrb	r2, [r2, #3]
 801b7e4:	4313      	orrs	r3, r2
 801b7e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b7e8:	3001      	adds	r0, #1
 801b7ea:	441a      	add	r2, r3
 801b7ec:	9005      	str	r0, [sp, #20]
 801b7ee:	1c50      	adds	r0, r2, #1
 801b7f0:	9003      	str	r0, [sp, #12]
 801b7f2:	7852      	ldrb	r2, [r2, #1]
 801b7f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b7f6:	0212      	lsls	r2, r2, #8
 801b7f8:	5cc3      	ldrb	r3, [r0, r3]
 801b7fa:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801b7fe:	431a      	orrs	r2, r3
 801b800:	b293      	uxth	r3, r2
 801b802:	930c      	str	r3, [sp, #48]	; 0x30
 801b804:	2300      	movs	r3, #0
 801b806:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b80a:	9308      	str	r3, [sp, #32]
 801b80c:	461a      	mov	r2, r3
 801b80e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b812:	930e      	str	r3, [sp, #56]	; 0x38
 801b814:	f04f 0801 	mov.w	r8, #1
 801b818:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b81c:	f8cd 8008 	str.w	r8, [sp, #8]
 801b820:	46c4      	mov	ip, r8
 801b822:	930f      	str	r3, [sp, #60]	; 0x3c
 801b824:	2d00      	cmp	r5, #0
 801b826:	d07c      	beq.n	801b922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801b828:	45ac      	cmp	ip, r5
 801b82a:	d26c      	bcs.n	801b906 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801b82c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b82e:	eba5 050c 	sub.w	r5, r5, ip
 801b832:	455b      	cmp	r3, fp
 801b834:	b2ad      	uxth	r5, r5
 801b836:	4608      	mov	r0, r1
 801b838:	d802      	bhi.n	801b840 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801b83a:	e070      	b.n	801b91e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801b83c:	2b00      	cmp	r3, #0
 801b83e:	d15c      	bne.n	801b8fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801b840:	9b03      	ldr	r3, [sp, #12]
 801b842:	9a02      	ldr	r2, [sp, #8]
 801b844:	785b      	ldrb	r3, [r3, #1]
 801b846:	9902      	ldr	r1, [sp, #8]
 801b848:	f1c2 0207 	rsb	r2, r2, #7
 801b84c:	4093      	lsls	r3, r2
 801b84e:	005b      	lsls	r3, r3, #1
 801b850:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b854:	9b03      	ldr	r3, [sp, #12]
 801b856:	781b      	ldrb	r3, [r3, #0]
 801b858:	410b      	asrs	r3, r1
 801b85a:	3101      	adds	r1, #1
 801b85c:	b2c9      	uxtb	r1, r1
 801b85e:	2908      	cmp	r1, #8
 801b860:	9102      	str	r1, [sp, #8]
 801b862:	9903      	ldr	r1, [sp, #12]
 801b864:	bf0a      	itet	eq
 801b866:	3102      	addeq	r1, #2
 801b868:	3101      	addne	r1, #1
 801b86a:	9103      	streq	r1, [sp, #12]
 801b86c:	b2db      	uxtb	r3, r3
 801b86e:	bf0a      	itet	eq
 801b870:	2100      	moveq	r1, #0
 801b872:	9103      	strne	r1, [sp, #12]
 801b874:	9102      	streq	r1, [sp, #8]
 801b876:	4313      	orrs	r3, r2
 801b878:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b87a:	b29a      	uxth	r2, r3
 801b87c:	4291      	cmp	r1, r2
 801b87e:	d30a      	bcc.n	801b896 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801b880:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b884:	2301      	movs	r3, #1
 801b886:	9905      	ldr	r1, [sp, #20]
 801b888:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801b88c:	d30f      	bcc.n	801b8ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801b88e:	2100      	movs	r1, #0
 801b890:	4698      	mov	r8, r3
 801b892:	9100      	str	r1, [sp, #0]
 801b894:	e032      	b.n	801b8fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801b896:	9b05      	ldr	r3, [sp, #20]
 801b898:	429a      	cmp	r2, r3
 801b89a:	d318      	bcc.n	801b8ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801b89c:	eb04 0308 	add.w	r3, r4, r8
 801b8a0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801b8a4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801b8a8:	f108 0301 	add.w	r3, r8, #1
 801b8ac:	b29b      	uxth	r3, r3
 801b8ae:	9905      	ldr	r1, [sp, #20]
 801b8b0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b8b4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801b8b8:	710e      	strb	r6, [r1, #4]
 801b8ba:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801b8bc:	80ce      	strh	r6, [r1, #6]
 801b8be:	f108 0601 	add.w	r6, r8, #1
 801b8c2:	714e      	strb	r6, [r1, #5]
 801b8c4:	9905      	ldr	r1, [sp, #20]
 801b8c6:	3101      	adds	r1, #1
 801b8c8:	b289      	uxth	r1, r1
 801b8ca:	9105      	str	r1, [sp, #20]
 801b8cc:	e7df      	b.n	801b88e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801b8ce:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801b8d2:	4611      	mov	r1, r2
 801b8d4:	795b      	ldrb	r3, [r3, #5]
 801b8d6:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b8da:	4426      	add	r6, r4
 801b8dc:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801b8de:	4437      	add	r7, r6
 801b8e0:	2f00      	cmp	r7, #0
 801b8e2:	dd06      	ble.n	801b8f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801b8e4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801b8e8:	790f      	ldrb	r7, [r1, #4]
 801b8ea:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801b8ee:	88c9      	ldrh	r1, [r1, #6]
 801b8f0:	e7f4      	b.n	801b8dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801b8f2:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b8f6:	b29b      	uxth	r3, r3
 801b8f8:	e7c5      	b.n	801b886 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801b8fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b8fc:	920c      	str	r2, [sp, #48]	; 0x30
 801b8fe:	4601      	mov	r1, r0
 801b900:	9a00      	ldr	r2, [sp, #0]
 801b902:	469c      	mov	ip, r3
 801b904:	e78e      	b.n	801b824 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801b906:	1957      	adds	r7, r2, r5
 801b908:	ebac 0305 	sub.w	r3, ip, r5
 801b90c:	b2ba      	uxth	r2, r7
 801b90e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801b912:	9200      	str	r2, [sp, #0]
 801b914:	b29b      	uxth	r3, r3
 801b916:	2500      	movs	r5, #0
 801b918:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b91a:	455a      	cmp	r2, fp
 801b91c:	d88e      	bhi.n	801b83c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801b91e:	4601      	mov	r1, r0
 801b920:	e749      	b.n	801b7b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801b922:	458c      	cmp	ip, r1
 801b924:	bf2c      	ite	cs
 801b926:	4628      	movcs	r0, r5
 801b928:	462b      	movcc	r3, r5
 801b92a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801b92c:	bf27      	ittee	cs
 801b92e:	9109      	strcs	r1, [sp, #36]	; 0x24
 801b930:	ebac 0301 	subcs.w	r3, ip, r1
 801b934:	eba1 000c 	subcc.w	r0, r1, ip
 801b938:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801b93c:	bf2c      	ite	cs
 801b93e:	b29b      	uxthcs	r3, r3
 801b940:	b280      	uxthcc	r0, r0
 801b942:	2dff      	cmp	r5, #255	; 0xff
 801b944:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b946:	eb02 0705 	add.w	r7, r2, r5
 801b94a:	b2bd      	uxth	r5, r7
 801b94c:	9500      	str	r5, [sp, #0]
 801b94e:	d12f      	bne.n	801b9b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801b950:	465e      	mov	r6, fp
 801b952:	9d00      	ldr	r5, [sp, #0]
 801b954:	42aa      	cmp	r2, r5
 801b956:	f040 8084 	bne.w	801ba62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801b95a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b95c:	458c      	cmp	ip, r1
 801b95e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801b962:	d3d8      	bcc.n	801b916 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801b964:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b966:	9904      	ldr	r1, [sp, #16]
 801b968:	8812      	ldrh	r2, [r2, #0]
 801b96a:	1a52      	subs	r2, r2, r1
 801b96c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801b970:	9a08      	ldr	r2, [sp, #32]
 801b972:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b974:	3201      	adds	r2, #1
 801b976:	428a      	cmp	r2, r1
 801b978:	9208      	str	r2, [sp, #32]
 801b97a:	f040 8092 	bne.w	801baa2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b97e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b982:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801b986:	9b04      	ldr	r3, [sp, #16]
 801b988:	eba5 050c 	sub.w	r5, r5, ip
 801b98c:	b2ad      	uxth	r5, r5
 801b98e:	2d00      	cmp	r5, #0
 801b990:	bf08      	it	eq
 801b992:	4619      	moveq	r1, r3
 801b994:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b996:	bf18      	it	ne
 801b998:	2100      	movne	r1, #0
 801b99a:	3301      	adds	r3, #1
 801b99c:	930d      	str	r3, [sp, #52]	; 0x34
 801b99e:	b289      	uxth	r1, r1
 801b9a0:	e700      	b.n	801b7a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801b9a2:	bf00      	nop
 801b9a4:	200137bc 	.word	0x200137bc
 801b9a8:	200137b6 	.word	0x200137b6
 801b9ac:	fffff7fb 	.word	0xfffff7fb
 801b9b0:	46d9      	mov	r9, fp
 801b9b2:	9d00      	ldr	r5, [sp, #0]
 801b9b4:	42aa      	cmp	r2, r5
 801b9b6:	d0d0      	beq.n	801b95a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801b9b8:	1c55      	adds	r5, r2, #1
 801b9ba:	4422      	add	r2, r4
 801b9bc:	9517      	str	r5, [sp, #92]	; 0x5c
 801b9be:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801b9c2:	9a06      	ldr	r2, [sp, #24]
 801b9c4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b9c8:	4472      	add	r2, lr
 801b9ca:	9212      	str	r2, [sp, #72]	; 0x48
 801b9cc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801b9ce:	f8b9 2000 	ldrh.w	r2, [r9]
 801b9d2:	f897 a002 	ldrb.w	sl, [r7, #2]
 801b9d6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801b9d8:	1216      	asrs	r6, r2, #8
 801b9da:	fb1a fa07 	smulbb	sl, sl, r7
 801b9de:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b9e2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b9e4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b9e8:	fb06 a607 	mla	r6, r6, r7, sl
 801b9ec:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801b9ee:	f897 a001 	ldrb.w	sl, [r7, #1]
 801b9f2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801b9f4:	10d5      	asrs	r5, r2, #3
 801b9f6:	fb1a fa07 	smulbb	sl, sl, r7
 801b9fa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b9fe:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ba00:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ba04:	fb05 a507 	mla	r5, r5, r7, sl
 801ba08:	9f06      	ldr	r7, [sp, #24]
 801ba0a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ba0e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801ba10:	00d2      	lsls	r2, r2, #3
 801ba12:	fb1e fe07 	smulbb	lr, lr, r7
 801ba16:	b2d2      	uxtb	r2, r2
 801ba18:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ba1a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ba1e:	b2b6      	uxth	r6, r6
 801ba20:	fb02 e207 	mla	r2, r2, r7, lr
 801ba24:	b292      	uxth	r2, r2
 801ba26:	b2ad      	uxth	r5, r5
 801ba28:	f106 0a01 	add.w	sl, r6, #1
 801ba2c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801ba30:	f102 0e01 	add.w	lr, r2, #1
 801ba34:	f105 0a01 	add.w	sl, r5, #1
 801ba38:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801ba3c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ba40:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ba44:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ba48:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ba4c:	ea4e 0606 	orr.w	r6, lr, r6
 801ba50:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ba54:	ea46 060a 	orr.w	r6, r6, sl
 801ba58:	f829 6b02 	strh.w	r6, [r9], #2
 801ba5c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ba60:	e7a7      	b.n	801b9b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801ba62:	f102 0e01 	add.w	lr, r2, #1
 801ba66:	4422      	add	r2, r4
 801ba68:	9f06      	ldr	r7, [sp, #24]
 801ba6a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801ba6e:	9a06      	ldr	r2, [sp, #24]
 801ba70:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ba74:	eb02 0a05 	add.w	sl, r2, r5
 801ba78:	4a13      	ldr	r2, [pc, #76]	; (801bac8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801ba7a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801ba7e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801ba82:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ba86:	00d2      	lsls	r2, r2, #3
 801ba88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ba8c:	ea49 0202 	orr.w	r2, r9, r2
 801ba90:	f817 9005 	ldrb.w	r9, [r7, r5]
 801ba94:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801ba98:	f826 2b02 	strh.w	r2, [r6], #2
 801ba9c:	fa1f f28e 	uxth.w	r2, lr
 801baa0:	e757      	b.n	801b952 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801baa2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801baa6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801baaa:	1a2d      	subs	r5, r5, r0
 801baac:	b2ad      	uxth	r5, r5
 801baae:	2d00      	cmp	r5, #0
 801bab0:	bf18      	it	ne
 801bab2:	2000      	movne	r0, #0
 801bab4:	e730      	b.n	801b918 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801bab6:	4b05      	ldr	r3, [pc, #20]	; (801bacc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801bab8:	6818      	ldr	r0, [r3, #0]
 801baba:	6803      	ldr	r3, [r0, #0]
 801babc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801babe:	4798      	blx	r3
 801bac0:	b01f      	add	sp, #124	; 0x7c
 801bac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bac6:	bf00      	nop
 801bac8:	fffff800 	.word	0xfffff800
 801bacc:	200137bc 	.word	0x200137bc

0801bad0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801bad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bad4:	b091      	sub	sp, #68	; 0x44
 801bad6:	469b      	mov	fp, r3
 801bad8:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801badc:	4616      	mov	r6, r2
 801bade:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801bae2:	f9b3 2000 	ldrsh.w	r2, [r3]
 801bae6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801baea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801baee:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801baf2:	4604      	mov	r4, r0
 801baf4:	460d      	mov	r5, r1
 801baf6:	4640      	mov	r0, r8
 801baf8:	4659      	mov	r1, fp
 801bafa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801bafe:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801bb02:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801bb06:	f7f3 fc11 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 801bb0a:	4631      	mov	r1, r6
 801bb0c:	4640      	mov	r0, r8
 801bb0e:	f7f3 fc0d 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 801bb12:	4b74      	ldr	r3, [pc, #464]	; (801bce4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801bb14:	8818      	ldrh	r0, [r3, #0]
 801bb16:	4b74      	ldr	r3, [pc, #464]	; (801bce8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801bb18:	8819      	ldrh	r1, [r3, #0]
 801bb1a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801bb1e:	2b00      	cmp	r3, #0
 801bb20:	b202      	sxth	r2, r0
 801bb22:	b20e      	sxth	r6, r1
 801bb24:	da07      	bge.n	801bb36 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801bb26:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801bb2a:	4463      	add	r3, ip
 801bb2c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801bb30:	2300      	movs	r3, #0
 801bb32:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801bb36:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801bb3a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801bb3e:	1ad2      	subs	r2, r2, r3
 801bb40:	4594      	cmp	ip, r2
 801bb42:	bfc4      	itt	gt
 801bb44:	1ac2      	subgt	r2, r0, r3
 801bb46:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801bb4a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801bb4e:	2a00      	cmp	r2, #0
 801bb50:	da07      	bge.n	801bb62 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801bb52:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801bb56:	4462      	add	r2, ip
 801bb58:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801bb5c:	2200      	movs	r2, #0
 801bb5e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801bb62:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801bb66:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801bb6a:	eba6 060a 	sub.w	r6, r6, sl
 801bb6e:	42b2      	cmp	r2, r6
 801bb70:	bfc4      	itt	gt
 801bb72:	eba1 020a 	subgt.w	r2, r1, sl
 801bb76:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801bb7a:	4a5c      	ldr	r2, [pc, #368]	; (801bcec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801bb7c:	7812      	ldrb	r2, [r2, #0]
 801bb7e:	b9a2      	cbnz	r2, 801bbaa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801bb80:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801bb84:	4286      	cmp	r6, r0
 801bb86:	4640      	mov	r0, r8
 801bb88:	9303      	str	r3, [sp, #12]
 801bb8a:	bf14      	ite	ne
 801bb8c:	2600      	movne	r6, #0
 801bb8e:	2601      	moveq	r6, #1
 801bb90:	f7f3 fc0f 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801bb94:	9b03      	ldr	r3, [sp, #12]
 801bb96:	b160      	cbz	r0, 801bbb2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801bb98:	2300      	movs	r3, #0
 801bb9a:	8023      	strh	r3, [r4, #0]
 801bb9c:	8063      	strh	r3, [r4, #2]
 801bb9e:	80a3      	strh	r3, [r4, #4]
 801bba0:	4620      	mov	r0, r4
 801bba2:	80e3      	strh	r3, [r4, #6]
 801bba4:	b011      	add	sp, #68	; 0x44
 801bba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbaa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801bbae:	428e      	cmp	r6, r1
 801bbb0:	e7e9      	b.n	801bb86 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801bbb2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801bbb6:	9205      	str	r2, [sp, #20]
 801bbb8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801bbbc:	9206      	str	r2, [sp, #24]
 801bbbe:	f8bb 2000 	ldrh.w	r2, [fp]
 801bbc2:	900e      	str	r0, [sp, #56]	; 0x38
 801bbc4:	1a9b      	subs	r3, r3, r2
 801bbc6:	b21b      	sxth	r3, r3
 801bbc8:	9303      	str	r3, [sp, #12]
 801bbca:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801bbce:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801bbd2:	ebaa 0a03 	sub.w	sl, sl, r3
 801bbd6:	fa0f f38a 	sxth.w	r3, sl
 801bbda:	9304      	str	r3, [sp, #16]
 801bbdc:	9b03      	ldr	r3, [sp, #12]
 801bbde:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801bbe2:	9b04      	ldr	r3, [sp, #16]
 801bbe4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bbe8:	9b05      	ldr	r3, [sp, #20]
 801bbea:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801bbee:	a90e      	add	r1, sp, #56	; 0x38
 801bbf0:	9b06      	ldr	r3, [sp, #24]
 801bbf2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801bbf6:	a80c      	add	r0, sp, #48	; 0x30
 801bbf8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801bbfc:	f7f8 fb38 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bc00:	4640      	mov	r0, r8
 801bc02:	f7f8 faf1 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc06:	a80e      	add	r0, sp, #56	; 0x38
 801bc08:	f7f8 faee 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc0c:	4b38      	ldr	r3, [pc, #224]	; (801bcf0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801bc0e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801bc12:	881b      	ldrh	r3, [r3, #0]
 801bc14:	9307      	str	r3, [sp, #28]
 801bc16:	682b      	ldr	r3, [r5, #0]
 801bc18:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801bcf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801bc1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bc1e:	4628      	mov	r0, r5
 801bc20:	4798      	blx	r3
 801bc22:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801bc26:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801bc2a:	4681      	mov	r9, r0
 801bc2c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801bc30:	f8db 0000 	ldr.w	r0, [fp]
 801bc34:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801bc36:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801bc3a:	6803      	ldr	r3, [r0, #0]
 801bc3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bc3e:	4798      	blx	r3
 801bc40:	4607      	mov	r7, r0
 801bc42:	f8db 0000 	ldr.w	r0, [fp]
 801bc46:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801bc4a:	6803      	ldr	r3, [r0, #0]
 801bc4c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801bc50:	9109      	str	r1, [sp, #36]	; 0x24
 801bc52:	9208      	str	r2, [sp, #32]
 801bc54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bc56:	4798      	blx	r3
 801bc58:	f010 0f01 	tst.w	r0, #1
 801bc5c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801bc60:	d012      	beq.n	801bc88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801bc62:	f8db 0000 	ldr.w	r0, [fp]
 801bc66:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801bc6a:	6803      	ldr	r3, [r0, #0]
 801bc6c:	9200      	str	r2, [sp, #0]
 801bc6e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801bc70:	e898 0006 	ldmia.w	r8, {r1, r2}
 801bc74:	462b      	mov	r3, r5
 801bc76:	47b0      	blx	r6
 801bc78:	9b03      	ldr	r3, [sp, #12]
 801bc7a:	8023      	strh	r3, [r4, #0]
 801bc7c:	9b04      	ldr	r3, [sp, #16]
 801bc7e:	8063      	strh	r3, [r4, #2]
 801bc80:	9b05      	ldr	r3, [sp, #20]
 801bc82:	80a3      	strh	r3, [r4, #4]
 801bc84:	9b06      	ldr	r3, [sp, #24]
 801bc86:	e78b      	b.n	801bba0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801bc88:	fb09 f202 	mul.w	r2, r9, r2
 801bc8c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801bc90:	440f      	add	r7, r1
 801bc92:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801bc96:	b166      	cbz	r6, 801bcb2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801bc98:	9a07      	ldr	r2, [sp, #28]
 801bc9a:	4592      	cmp	sl, r2
 801bc9c:	d109      	bne.n	801bcb2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801bc9e:	f8db 0000 	ldr.w	r0, [fp]
 801bca2:	6802      	ldr	r2, [r0, #0]
 801bca4:	fb09 f303 	mul.w	r3, r9, r3
 801bca8:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801bcaa:	4629      	mov	r1, r5
 801bcac:	463a      	mov	r2, r7
 801bcae:	47b0      	blx	r6
 801bcb0:	e7e2      	b.n	801bc78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801bcb2:	fb0a f303 	mul.w	r3, sl, r3
 801bcb6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801bcf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801bcba:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801bcbe:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801bcc2:	4545      	cmp	r5, r8
 801bcc4:	d2d8      	bcs.n	801bc78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801bcc6:	f8db 0000 	ldr.w	r0, [fp]
 801bcca:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801bcce:	6802      	ldr	r2, [r0, #0]
 801bcd0:	4629      	mov	r1, r5
 801bcd2:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801bcd6:	005b      	lsls	r3, r3, #1
 801bcd8:	463a      	mov	r2, r7
 801bcda:	47d0      	blx	sl
 801bcdc:	444f      	add	r7, r9
 801bcde:	4435      	add	r5, r6
 801bce0:	e7ef      	b.n	801bcc2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801bce2:	bf00      	nop
 801bce4:	200137b0 	.word	0x200137b0
 801bce8:	200137b2 	.word	0x200137b2
 801bcec:	200137b4 	.word	0x200137b4
 801bcf0:	200137b6 	.word	0x200137b6
 801bcf4:	200137bc 	.word	0x200137bc

0801bcf8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801bcf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bcfa:	4606      	mov	r6, r0
 801bcfc:	b087      	sub	sp, #28
 801bcfe:	460c      	mov	r4, r1
 801bd00:	4617      	mov	r7, r2
 801bd02:	461d      	mov	r5, r3
 801bd04:	b333      	cbz	r3, 801bd54 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801bd06:	4608      	mov	r0, r1
 801bd08:	f7f3 fb53 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801bd0c:	bb10      	cbnz	r0, 801bd54 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801bd0e:	6820      	ldr	r0, [r4, #0]
 801bd10:	6861      	ldr	r1, [r4, #4]
 801bd12:	4c1c      	ldr	r4, [pc, #112]	; (801bd84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801bd14:	ab04      	add	r3, sp, #16
 801bd16:	c303      	stmia	r3!, {r0, r1}
 801bd18:	a804      	add	r0, sp, #16
 801bd1a:	f7f8 fa65 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd1e:	6820      	ldr	r0, [r4, #0]
 801bd20:	6803      	ldr	r3, [r0, #0]
 801bd22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bd24:	4798      	blx	r3
 801bd26:	2dff      	cmp	r5, #255	; 0xff
 801bd28:	d016      	beq.n	801bd58 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801bd2a:	f010 0f08 	tst.w	r0, #8
 801bd2e:	6820      	ldr	r0, [r4, #0]
 801bd30:	d015      	beq.n	801bd5e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801bd32:	2400      	movs	r4, #0
 801bd34:	6801      	ldr	r1, [r0, #0]
 801bd36:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801bd3a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bd3e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801bd42:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801bd46:	9401      	str	r4, [sp, #4]
 801bd48:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801bd4c:	9400      	str	r4, [sp, #0]
 801bd4e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801bd50:	4639      	mov	r1, r7
 801bd52:	47a0      	blx	r4
 801bd54:	b007      	add	sp, #28
 801bd56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801bd58:	f010 0f02 	tst.w	r0, #2
 801bd5c:	e7e7      	b.n	801bd2e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801bd5e:	6803      	ldr	r3, [r0, #0]
 801bd60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bd62:	4798      	blx	r3
 801bd64:	4b08      	ldr	r3, [pc, #32]	; (801bd88 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801bd66:	881a      	ldrh	r2, [r3, #0]
 801bd68:	6833      	ldr	r3, [r6, #0]
 801bd6a:	e9cd 7500 	strd	r7, r5, [sp]
 801bd6e:	4601      	mov	r1, r0
 801bd70:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801bd72:	4630      	mov	r0, r6
 801bd74:	ab04      	add	r3, sp, #16
 801bd76:	47a8      	blx	r5
 801bd78:	6820      	ldr	r0, [r4, #0]
 801bd7a:	6803      	ldr	r3, [r0, #0]
 801bd7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd7e:	4798      	blx	r3
 801bd80:	e7e8      	b.n	801bd54 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801bd82:	bf00      	nop
 801bd84:	200137bc 	.word	0x200137bc
 801bd88:	200137b6 	.word	0x200137b6

0801bd8c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801bd8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bd90:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801bd94:	9e08      	ldr	r6, [sp, #32]
 801bd96:	4688      	mov	r8, r1
 801bd98:	4614      	mov	r4, r2
 801bd9a:	461d      	mov	r5, r3
 801bd9c:	2f00      	cmp	r7, #0
 801bd9e:	f000 80a9 	beq.w	801bef4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801bda2:	4618      	mov	r0, r3
 801bda4:	f7f3 fb05 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801bda8:	2800      	cmp	r0, #0
 801bdaa:	f040 80a3 	bne.w	801bef4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801bdae:	f9b5 1000 	ldrsh.w	r1, [r5]
 801bdb2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801bdb6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801bdba:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801bdbe:	fb04 1303 	mla	r3, r4, r3, r1
 801bdc2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801bdc6:	4365      	muls	r5, r4
 801bdc8:	2fff      	cmp	r7, #255	; 0xff
 801bdca:	eba4 0200 	sub.w	r2, r4, r0
 801bdce:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801bdd2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801bdd6:	d04a      	beq.n	801be6e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801bdd8:	b2bc      	uxth	r4, r7
 801bdda:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801bdde:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801bde2:	fa5f f788 	uxtb.w	r7, r8
 801bde6:	b2f3      	uxtb	r3, r6
 801bde8:	0040      	lsls	r0, r0, #1
 801bdea:	fb0e fe04 	mul.w	lr, lr, r4
 801bdee:	4367      	muls	r7, r4
 801bdf0:	4363      	muls	r3, r4
 801bdf2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801bdf6:	fa1f fc8c 	uxth.w	ip, ip
 801bdfa:	42a9      	cmp	r1, r5
 801bdfc:	d27a      	bcs.n	801bef4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801bdfe:	eb01 0900 	add.w	r9, r1, r0
 801be02:	4549      	cmp	r1, r9
 801be04:	d231      	bcs.n	801be6a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801be06:	880a      	ldrh	r2, [r1, #0]
 801be08:	1214      	asrs	r4, r2, #8
 801be0a:	10d6      	asrs	r6, r2, #3
 801be0c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801be10:	00d2      	lsls	r2, r2, #3
 801be12:	b2d2      	uxtb	r2, r2
 801be14:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801be18:	fb14 f40c 	smulbb	r4, r4, ip
 801be1c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801be20:	4474      	add	r4, lr
 801be22:	fb12 f20c 	smulbb	r2, r2, ip
 801be26:	b2a4      	uxth	r4, r4
 801be28:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801be2c:	441a      	add	r2, r3
 801be2e:	b292      	uxth	r2, r2
 801be30:	f104 0a01 	add.w	sl, r4, #1
 801be34:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801be38:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801be3c:	fb16 f60c 	smulbb	r6, r6, ip
 801be40:	f102 0a01 	add.w	sl, r2, #1
 801be44:	443e      	add	r6, r7
 801be46:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801be4a:	b2b6      	uxth	r6, r6
 801be4c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801be50:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801be54:	4322      	orrs	r2, r4
 801be56:	1c74      	adds	r4, r6, #1
 801be58:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801be5c:	0976      	lsrs	r6, r6, #5
 801be5e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801be62:	4332      	orrs	r2, r6
 801be64:	f821 2b02 	strh.w	r2, [r1], #2
 801be68:	e7cb      	b.n	801be02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801be6a:	4441      	add	r1, r8
 801be6c:	e7c5      	b.n	801bdfa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801be6e:	4f22      	ldr	r7, [pc, #136]	; (801bef8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801be70:	0973      	lsrs	r3, r6, #5
 801be72:	ea08 0707 	and.w	r7, r8, r7
 801be76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801be7a:	433b      	orrs	r3, r7
 801be7c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801be80:	4333      	orrs	r3, r6
 801be82:	07e7      	lsls	r7, r4, #31
 801be84:	b29b      	uxth	r3, r3
 801be86:	d50b      	bpl.n	801bea0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801be88:	0040      	lsls	r0, r0, #1
 801be8a:	0052      	lsls	r2, r2, #1
 801be8c:	42a9      	cmp	r1, r5
 801be8e:	d231      	bcs.n	801bef4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801be90:	180c      	adds	r4, r1, r0
 801be92:	42a1      	cmp	r1, r4
 801be94:	d202      	bcs.n	801be9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801be96:	f821 3b02 	strh.w	r3, [r1], #2
 801be9a:	e7fa      	b.n	801be92 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801be9c:	4411      	add	r1, r2
 801be9e:	e7f5      	b.n	801be8c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801bea0:	078e      	lsls	r6, r1, #30
 801bea2:	d008      	beq.n	801beb6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801bea4:	0066      	lsls	r6, r4, #1
 801bea6:	460a      	mov	r2, r1
 801bea8:	42aa      	cmp	r2, r5
 801beaa:	d202      	bcs.n	801beb2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801beac:	8013      	strh	r3, [r2, #0]
 801beae:	4432      	add	r2, r6
 801beb0:	e7fa      	b.n	801bea8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801beb2:	3102      	adds	r1, #2
 801beb4:	3801      	subs	r0, #1
 801beb6:	07c2      	lsls	r2, r0, #31
 801beb8:	d50b      	bpl.n	801bed2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801beba:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801bebe:	3a01      	subs	r2, #1
 801bec0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801bec4:	0066      	lsls	r6, r4, #1
 801bec6:	42aa      	cmp	r2, r5
 801bec8:	d202      	bcs.n	801bed0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801beca:	8013      	strh	r3, [r2, #0]
 801becc:	4432      	add	r2, r6
 801bece:	e7fa      	b.n	801bec6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801bed0:	3801      	subs	r0, #1
 801bed2:	b178      	cbz	r0, 801bef4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801bed4:	1040      	asrs	r0, r0, #1
 801bed6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801beda:	0080      	lsls	r0, r0, #2
 801bedc:	0064      	lsls	r4, r4, #1
 801bede:	42a9      	cmp	r1, r5
 801bee0:	d208      	bcs.n	801bef4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801bee2:	180e      	adds	r6, r1, r0
 801bee4:	460a      	mov	r2, r1
 801bee6:	42b2      	cmp	r2, r6
 801bee8:	d202      	bcs.n	801bef0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801beea:	f842 3b04 	str.w	r3, [r2], #4
 801beee:	e7fa      	b.n	801bee6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801bef0:	4421      	add	r1, r4
 801bef2:	e7f4      	b.n	801bede <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801bef4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bef8:	00fff800 	.word	0x00fff800

0801befc <_ZN8touchgfx8LCD16bppC1Ev>:
 801befc:	2200      	movs	r2, #0
 801befe:	4912      	ldr	r1, [pc, #72]	; (801bf48 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801bf00:	6042      	str	r2, [r0, #4]
 801bf02:	6001      	str	r1, [r0, #0]
 801bf04:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801bf08:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801bf0c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801bf10:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801bf14:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801bf18:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801bf1c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801bf20:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801bf24:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801bf28:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801bf2c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801bf30:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801bf34:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801bf38:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801bf3c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801bf40:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801bf44:	4770      	bx	lr
 801bf46:	bf00      	nop
 801bf48:	0802c628 	.word	0x0802c628

0801bf4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801bf4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf50:	460d      	mov	r5, r1
 801bf52:	b08d      	sub	sp, #52	; 0x34
 801bf54:	4604      	mov	r4, r0
 801bf56:	6808      	ldr	r0, [r1, #0]
 801bf58:	6849      	ldr	r1, [r1, #4]
 801bf5a:	4699      	mov	r9, r3
 801bf5c:	ab08      	add	r3, sp, #32
 801bf5e:	c303      	stmia	r3!, {r0, r1}
 801bf60:	6810      	ldr	r0, [r2, #0]
 801bf62:	6851      	ldr	r1, [r2, #4]
 801bf64:	ab0a      	add	r3, sp, #40	; 0x28
 801bf66:	c303      	stmia	r3!, {r0, r1}
 801bf68:	a808      	add	r0, sp, #32
 801bf6a:	f7f8 f93d 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bf6e:	4629      	mov	r1, r5
 801bf70:	a80a      	add	r0, sp, #40	; 0x28
 801bf72:	f7f8 f97d 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bf76:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801bf7a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801bf7e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801bf82:	4d63      	ldr	r5, [pc, #396]	; (801c110 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801bf84:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801bf88:	6828      	ldr	r0, [r5, #0]
 801bf8a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801bf8e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801bf92:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801bf96:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801bf9a:	440a      	add	r2, r1
 801bf9c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801bfa0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801bfa4:	4413      	add	r3, r2
 801bfa6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801bfaa:	6803      	ldr	r3, [r0, #0]
 801bfac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bfae:	4798      	blx	r3
 801bfb0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801bfb4:	d119      	bne.n	801bfea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801bfb6:	f010 0f20 	tst.w	r0, #32
 801bfba:	6828      	ldr	r0, [r5, #0]
 801bfbc:	d018      	beq.n	801bff0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801bfbe:	2500      	movs	r5, #0
 801bfc0:	6801      	ldr	r1, [r0, #0]
 801bfc2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801bfc6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801bfca:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801bfce:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801bfd2:	9502      	str	r5, [sp, #8]
 801bfd4:	b2b6      	uxth	r6, r6
 801bfd6:	fa1f f588 	uxth.w	r5, r8
 801bfda:	9601      	str	r6, [sp, #4]
 801bfdc:	9500      	str	r5, [sp, #0]
 801bfde:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801bfe0:	4621      	mov	r1, r4
 801bfe2:	47a8      	blx	r5
 801bfe4:	b00d      	add	sp, #52	; 0x34
 801bfe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfea:	f010 0f40 	tst.w	r0, #64	; 0x40
 801bfee:	e7e4      	b.n	801bfba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801bff0:	6803      	ldr	r3, [r0, #0]
 801bff2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bff4:	4798      	blx	r3
 801bff6:	4947      	ldr	r1, [pc, #284]	; (801c114 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801bff8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801bffc:	880b      	ldrh	r3, [r1, #0]
 801bffe:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801c002:	fb03 5202 	mla	r2, r3, r2, r5
 801c006:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c00a:	4373      	muls	r3, r6
 801c00c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c010:	9307      	str	r3, [sp, #28]
 801c012:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c016:	9306      	str	r3, [sp, #24]
 801c018:	468a      	mov	sl, r1
 801c01a:	9b07      	ldr	r3, [sp, #28]
 801c01c:	4298      	cmp	r0, r3
 801c01e:	d270      	bcs.n	801c102 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c020:	9b06      	ldr	r3, [sp, #24]
 801c022:	4621      	mov	r1, r4
 801c024:	eb00 0b03 	add.w	fp, r0, r3
 801c028:	4558      	cmp	r0, fp
 801c02a:	d25d      	bcs.n	801c0e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c02c:	f851 4b04 	ldr.w	r4, [r1], #4
 801c030:	0e23      	lsrs	r3, r4, #24
 801c032:	d014      	beq.n	801c05e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c034:	2bff      	cmp	r3, #255	; 0xff
 801c036:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801c03a:	d112      	bne.n	801c062 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c03c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c040:	d10f      	bne.n	801c062 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c042:	0963      	lsrs	r3, r4, #5
 801c044:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c048:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c04c:	f02c 0c07 	bic.w	ip, ip, #7
 801c050:	ea43 0c0c 	orr.w	ip, r3, ip
 801c054:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c058:	ea4c 0404 	orr.w	r4, ip, r4
 801c05c:	8004      	strh	r4, [r0, #0]
 801c05e:	3002      	adds	r0, #2
 801c060:	e7e2      	b.n	801c028 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801c062:	fb09 f303 	mul.w	r3, r9, r3
 801c066:	8807      	ldrh	r7, [r0, #0]
 801c068:	1c5a      	adds	r2, r3, #1
 801c06a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801c06e:	1212      	asrs	r2, r2, #8
 801c070:	123e      	asrs	r6, r7, #8
 801c072:	b293      	uxth	r3, r2
 801c074:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801c078:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c07c:	43d2      	mvns	r2, r2
 801c07e:	b2d2      	uxtb	r2, r2
 801c080:	10fd      	asrs	r5, r7, #3
 801c082:	fb1e fe03 	smulbb	lr, lr, r3
 801c086:	00ff      	lsls	r7, r7, #3
 801c088:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c08c:	fb06 e602 	mla	r6, r6, r2, lr
 801c090:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c094:	b2ff      	uxtb	r7, r7
 801c096:	fa5f fc8c 	uxtb.w	ip, ip
 801c09a:	b2e4      	uxtb	r4, r4
 801c09c:	b2b6      	uxth	r6, r6
 801c09e:	fb1c fc03 	smulbb	ip, ip, r3
 801c0a2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c0a6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c0aa:	fb14 f403 	smulbb	r4, r4, r3
 801c0ae:	fb05 c502 	mla	r5, r5, r2, ip
 801c0b2:	f106 0e01 	add.w	lr, r6, #1
 801c0b6:	fb07 4702 	mla	r7, r7, r2, r4
 801c0ba:	b2ad      	uxth	r5, r5
 801c0bc:	b2bf      	uxth	r7, r7
 801c0be:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801c0c2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801c0c6:	f105 0c01 	add.w	ip, r5, #1
 801c0ca:	1c7e      	adds	r6, r7, #1
 801c0cc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c0d0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c0d4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c0d8:	096d      	lsrs	r5, r5, #5
 801c0da:	ea46 060e 	orr.w	r6, r6, lr
 801c0de:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c0e2:	432e      	orrs	r6, r5
 801c0e4:	8006      	strh	r6, [r0, #0]
 801c0e6:	e7ba      	b.n	801c05e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c0e8:	f8ba 3000 	ldrh.w	r3, [sl]
 801c0ec:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801c0f0:	eba3 0308 	sub.w	r3, r3, r8
 801c0f4:	eba4 0408 	sub.w	r4, r4, r8
 801c0f8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c0fc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801c100:	e78b      	b.n	801c01a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801c102:	4b03      	ldr	r3, [pc, #12]	; (801c110 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c104:	6818      	ldr	r0, [r3, #0]
 801c106:	6803      	ldr	r3, [r0, #0]
 801c108:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c10a:	4798      	blx	r3
 801c10c:	e76a      	b.n	801bfe4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801c10e:	bf00      	nop
 801c110:	200137bc 	.word	0x200137bc
 801c114:	200137b6 	.word	0x200137b6

0801c118 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801c118:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c11c:	460c      	mov	r4, r1
 801c11e:	b085      	sub	sp, #20
 801c120:	6810      	ldr	r0, [r2, #0]
 801c122:	6851      	ldr	r1, [r2, #4]
 801c124:	466d      	mov	r5, sp
 801c126:	c503      	stmia	r5!, {r0, r1}
 801c128:	6818      	ldr	r0, [r3, #0]
 801c12a:	6859      	ldr	r1, [r3, #4]
 801c12c:	4616      	mov	r6, r2
 801c12e:	c503      	stmia	r5!, {r0, r1}
 801c130:	4668      	mov	r0, sp
 801c132:	f7f8 f859 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c136:	4631      	mov	r1, r6
 801c138:	a802      	add	r0, sp, #8
 801c13a:	f7f8 f899 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c13e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801c142:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801c146:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c14a:	4d28      	ldr	r5, [pc, #160]	; (801c1ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801c14c:	4e28      	ldr	r6, [pc, #160]	; (801c1f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801c14e:	6828      	ldr	r0, [r5, #0]
 801c150:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801c154:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801c158:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c15c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c160:	f8bd 1000 	ldrh.w	r1, [sp]
 801c164:	440a      	add	r2, r1
 801c166:	f8ad 2008 	strh.w	r2, [sp, #8]
 801c16a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c16e:	4413      	add	r3, r2
 801c170:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c174:	6803      	ldr	r3, [r0, #0]
 801c176:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c178:	4798      	blx	r3
 801c17a:	8833      	ldrh	r3, [r6, #0]
 801c17c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801c180:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c184:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801c1f4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801c188:	fb03 1202 	mla	r2, r3, r2, r1
 801c18c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c190:	fb08 f303 	mul.w	r3, r8, r3
 801c194:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c198:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801c19c:	4298      	cmp	r0, r3
 801c19e:	d21d      	bcs.n	801c1dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801c1a0:	eb00 080c 	add.w	r8, r0, ip
 801c1a4:	4540      	cmp	r0, r8
 801c1a6:	d20f      	bcs.n	801c1c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801c1a8:	f854 1b04 	ldr.w	r1, [r4], #4
 801c1ac:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801c1b0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801c1b4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c1b8:	ea42 0209 	orr.w	r2, r2, r9
 801c1bc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801c1c0:	430a      	orrs	r2, r1
 801c1c2:	f820 2b02 	strh.w	r2, [r0], #2
 801c1c6:	e7ed      	b.n	801c1a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801c1c8:	8832      	ldrh	r2, [r6, #0]
 801c1ca:	1bd2      	subs	r2, r2, r7
 801c1cc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c1d0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801c1d4:	1bd2      	subs	r2, r2, r7
 801c1d6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801c1da:	e7df      	b.n	801c19c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801c1dc:	6828      	ldr	r0, [r5, #0]
 801c1de:	6803      	ldr	r3, [r0, #0]
 801c1e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c1e2:	4798      	blx	r3
 801c1e4:	b005      	add	sp, #20
 801c1e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c1ea:	bf00      	nop
 801c1ec:	200137bc 	.word	0x200137bc
 801c1f0:	200137b6 	.word	0x200137b6
 801c1f4:	fffff800 	.word	0xfffff800

0801c1f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801c1f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c1fc:	460e      	mov	r6, r1
 801c1fe:	b08e      	sub	sp, #56	; 0x38
 801c200:	4604      	mov	r4, r0
 801c202:	6808      	ldr	r0, [r1, #0]
 801c204:	6849      	ldr	r1, [r1, #4]
 801c206:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801c3e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801c20a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801c3e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801c20e:	461d      	mov	r5, r3
 801c210:	ab0a      	add	r3, sp, #40	; 0x28
 801c212:	c303      	stmia	r3!, {r0, r1}
 801c214:	6810      	ldr	r0, [r2, #0]
 801c216:	6851      	ldr	r1, [r2, #4]
 801c218:	ab0c      	add	r3, sp, #48	; 0x30
 801c21a:	c303      	stmia	r3!, {r0, r1}
 801c21c:	a80a      	add	r0, sp, #40	; 0x28
 801c21e:	f7f7 ffe3 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c222:	4631      	mov	r1, r6
 801c224:	a80c      	add	r0, sp, #48	; 0x30
 801c226:	f7f8 f823 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c22a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801c22e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801c232:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801c236:	f8d8 0000 	ldr.w	r0, [r8]
 801c23a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801c23e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c242:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c246:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c24a:	440c      	add	r4, r1
 801c24c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801c250:	440a      	add	r2, r1
 801c252:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801c256:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801c25a:	4413      	add	r3, r2
 801c25c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c260:	6803      	ldr	r3, [r0, #0]
 801c262:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c264:	4798      	blx	r3
 801c266:	2dff      	cmp	r5, #255	; 0xff
 801c268:	d124      	bne.n	801c2b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801c26a:	f010 0f01 	tst.w	r0, #1
 801c26e:	f8d8 0000 	ldr.w	r0, [r8]
 801c272:	d022      	beq.n	801c2ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801c274:	2100      	movs	r1, #0
 801c276:	f8d0 c000 	ldr.w	ip, [r0]
 801c27a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801c27e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801c282:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801c286:	f04f 0e01 	mov.w	lr, #1
 801c28a:	f8cd e018 	str.w	lr, [sp, #24]
 801c28e:	f8b9 e000 	ldrh.w	lr, [r9]
 801c292:	9503      	str	r5, [sp, #12]
 801c294:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801c298:	b2b6      	uxth	r6, r6
 801c29a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801c29e:	9102      	str	r1, [sp, #8]
 801c2a0:	b2bf      	uxth	r7, r7
 801c2a2:	9601      	str	r6, [sp, #4]
 801c2a4:	9700      	str	r7, [sp, #0]
 801c2a6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801c2aa:	4621      	mov	r1, r4
 801c2ac:	47a8      	blx	r5
 801c2ae:	b00e      	add	sp, #56	; 0x38
 801c2b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c2b4:	f010 0f04 	tst.w	r0, #4
 801c2b8:	e7d9      	b.n	801c26e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801c2ba:	6803      	ldr	r3, [r0, #0]
 801c2bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c2be:	4798      	blx	r3
 801c2c0:	f8b9 3000 	ldrh.w	r3, [r9]
 801c2c4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c2c8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801c2cc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c2d0:	fb03 1202 	mla	r2, r3, r2, r1
 801c2d4:	ebac 0c07 	sub.w	ip, ip, r7
 801c2d8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c2dc:	435e      	muls	r6, r3
 801c2de:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801c2e2:	2dff      	cmp	r5, #255	; 0xff
 801c2e4:	eba3 0707 	sub.w	r7, r3, r7
 801c2e8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c2ec:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c2f0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801c2f4:	d049      	beq.n	801c38a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801c2f6:	43eb      	mvns	r3, r5
 801c2f8:	fa1f f985 	uxth.w	r9, r5
 801c2fc:	b2db      	uxtb	r3, r3
 801c2fe:	42b0      	cmp	r0, r6
 801c300:	d266      	bcs.n	801c3d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801c302:	eb00 0a0e 	add.w	sl, r0, lr
 801c306:	4550      	cmp	r0, sl
 801c308:	4621      	mov	r1, r4
 801c30a:	f104 0403 	add.w	r4, r4, #3
 801c30e:	d25b      	bcs.n	801c3c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801c310:	8802      	ldrh	r2, [r0, #0]
 801c312:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801c316:	ea4f 2822 	mov.w	r8, r2, asr #8
 801c31a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c31e:	fb11 f109 	smulbb	r1, r1, r9
 801c322:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801c326:	10d5      	asrs	r5, r2, #3
 801c328:	fb08 1803 	mla	r8, r8, r3, r1
 801c32c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801c330:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c334:	fb11 f109 	smulbb	r1, r1, r9
 801c338:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c33c:	fb05 1503 	mla	r5, r5, r3, r1
 801c340:	00d2      	lsls	r2, r2, #3
 801c342:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801c346:	b2d2      	uxtb	r2, r2
 801c348:	fb11 f109 	smulbb	r1, r1, r9
 801c34c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c350:	fa1f f888 	uxth.w	r8, r8
 801c354:	fb02 1203 	mla	r2, r2, r3, r1
 801c358:	b292      	uxth	r2, r2
 801c35a:	f108 0101 	add.w	r1, r8, #1
 801c35e:	b2ad      	uxth	r5, r5
 801c360:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801c364:	1c51      	adds	r1, r2, #1
 801c366:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c36a:	1c69      	adds	r1, r5, #1
 801c36c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801c370:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c374:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c378:	096d      	lsrs	r5, r5, #5
 801c37a:	ea42 0208 	orr.w	r2, r2, r8
 801c37e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c382:	432a      	orrs	r2, r5
 801c384:	f820 2b02 	strh.w	r2, [r0], #2
 801c388:	e7bd      	b.n	801c306 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801c38a:	4a14      	ldr	r2, [pc, #80]	; (801c3dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801c38c:	42b0      	cmp	r0, r6
 801c38e:	d21f      	bcs.n	801c3d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801c390:	eb00 050e 	add.w	r5, r0, lr
 801c394:	42a8      	cmp	r0, r5
 801c396:	4621      	mov	r1, r4
 801c398:	f104 0403 	add.w	r4, r4, #3
 801c39c:	d210      	bcs.n	801c3c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801c39e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801c3a2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801c3a6:	00db      	lsls	r3, r3, #3
 801c3a8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801c3ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c3b0:	430b      	orrs	r3, r1
 801c3b2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801c3b6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801c3ba:	f820 3b02 	strh.w	r3, [r0], #2
 801c3be:	e7e9      	b.n	801c394 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801c3c0:	4438      	add	r0, r7
 801c3c2:	eb01 040c 	add.w	r4, r1, ip
 801c3c6:	e7e1      	b.n	801c38c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801c3c8:	4438      	add	r0, r7
 801c3ca:	eb01 040c 	add.w	r4, r1, ip
 801c3ce:	e796      	b.n	801c2fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801c3d0:	4b03      	ldr	r3, [pc, #12]	; (801c3e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801c3d2:	6818      	ldr	r0, [r3, #0]
 801c3d4:	6803      	ldr	r3, [r0, #0]
 801c3d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3d8:	4798      	blx	r3
 801c3da:	e768      	b.n	801c2ae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801c3dc:	fffff800 	.word	0xfffff800
 801c3e0:	200137bc 	.word	0x200137bc
 801c3e4:	200137b6 	.word	0x200137b6

0801c3e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801c3e8:	b4f0      	push	{r4, r5, r6, r7}
 801c3ea:	4616      	mov	r6, r2
 801c3ec:	2e01      	cmp	r6, #1
 801c3ee:	461c      	mov	r4, r3
 801c3f0:	460d      	mov	r5, r1
 801c3f2:	9a04      	ldr	r2, [sp, #16]
 801c3f4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801c3f8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801c3fc:	d012      	beq.n	801c424 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801c3fe:	d303      	bcc.n	801c408 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801c400:	2e02      	cmp	r6, #2
 801c402:	d00a      	beq.n	801c41a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801c404:	bcf0      	pop	{r4, r5, r6, r7}
 801c406:	4770      	bx	lr
 801c408:	6805      	ldr	r5, [r0, #0]
 801c40a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801c40e:	68ed      	ldr	r5, [r5, #12]
 801c410:	4613      	mov	r3, r2
 801c412:	46ac      	mov	ip, r5
 801c414:	4622      	mov	r2, r4
 801c416:	bcf0      	pop	{r4, r5, r6, r7}
 801c418:	4760      	bx	ip
 801c41a:	4621      	mov	r1, r4
 801c41c:	4628      	mov	r0, r5
 801c41e:	bcf0      	pop	{r4, r5, r6, r7}
 801c420:	f7ff bd94 	b.w	801bf4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c424:	4621      	mov	r1, r4
 801c426:	4628      	mov	r0, r5
 801c428:	bcf0      	pop	{r4, r5, r6, r7}
 801c42a:	f7ff bee5 	b.w	801c1f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801c430 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801c430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c434:	4681      	mov	r9, r0
 801c436:	b093      	sub	sp, #76	; 0x4c
 801c438:	6810      	ldr	r0, [r2, #0]
 801c43a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801c43e:	4f6d      	ldr	r7, [pc, #436]	; (801c5f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801c440:	4688      	mov	r8, r1
 801c442:	6851      	ldr	r1, [r2, #4]
 801c444:	ac0e      	add	r4, sp, #56	; 0x38
 801c446:	c403      	stmia	r4!, {r0, r1}
 801c448:	6818      	ldr	r0, [r3, #0]
 801c44a:	6859      	ldr	r1, [r3, #4]
 801c44c:	ac10      	add	r4, sp, #64	; 0x40
 801c44e:	4616      	mov	r6, r2
 801c450:	c403      	stmia	r4!, {r0, r1}
 801c452:	a80e      	add	r0, sp, #56	; 0x38
 801c454:	f7f7 fec8 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c458:	4631      	mov	r1, r6
 801c45a:	a810      	add	r0, sp, #64	; 0x40
 801c45c:	f7f7 ff08 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c460:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801c464:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801c468:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801c46c:	4e62      	ldr	r6, [pc, #392]	; (801c5f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801c46e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801c472:	6830      	ldr	r0, [r6, #0]
 801c474:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801c478:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c47c:	4489      	add	r9, r1
 801c47e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801c482:	440a      	add	r2, r1
 801c484:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801c488:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801c48c:	4413      	add	r3, r2
 801c48e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801c492:	6803      	ldr	r3, [r0, #0]
 801c494:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c496:	4798      	blx	r3
 801c498:	f010 0f80 	tst.w	r0, #128	; 0x80
 801c49c:	6830      	ldr	r0, [r6, #0]
 801c49e:	d01d      	beq.n	801c4dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801c4a0:	2200      	movs	r2, #0
 801c4a2:	6801      	ldr	r1, [r0, #0]
 801c4a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801c4a8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801c4ac:	220b      	movs	r2, #11
 801c4ae:	9207      	str	r2, [sp, #28]
 801c4b0:	883a      	ldrh	r2, [r7, #0]
 801c4b2:	9206      	str	r2, [sp, #24]
 801c4b4:	2201      	movs	r2, #1
 801c4b6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801c4ba:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801c4be:	9203      	str	r2, [sp, #12]
 801c4c0:	b2a4      	uxth	r4, r4
 801c4c2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801c4c6:	9200      	str	r2, [sp, #0]
 801c4c8:	b2ad      	uxth	r5, r5
 801c4ca:	9502      	str	r5, [sp, #8]
 801c4cc:	9401      	str	r4, [sp, #4]
 801c4ce:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801c4d0:	4642      	mov	r2, r8
 801c4d2:	4649      	mov	r1, r9
 801c4d4:	47a0      	blx	r4
 801c4d6:	b013      	add	sp, #76	; 0x4c
 801c4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4dc:	6803      	ldr	r3, [r0, #0]
 801c4de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c4e0:	4798      	blx	r3
 801c4e2:	883b      	ldrh	r3, [r7, #0]
 801c4e4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801c4e8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801c4ec:	fb03 1202 	mla	r2, r3, r2, r1
 801c4f0:	435d      	muls	r5, r3
 801c4f2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c4f6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801c4fa:	920c      	str	r2, [sp, #48]	; 0x30
 801c4fc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801c500:	1b12      	subs	r2, r2, r4
 801c502:	920d      	str	r2, [sp, #52]	; 0x34
 801c504:	0062      	lsls	r2, r4, #1
 801c506:	1b1c      	subs	r4, r3, r4
 801c508:	0063      	lsls	r3, r4, #1
 801c50a:	920a      	str	r2, [sp, #40]	; 0x28
 801c50c:	930b      	str	r3, [sp, #44]	; 0x2c
 801c50e:	f04f 0e04 	mov.w	lr, #4
 801c512:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c514:	4298      	cmp	r0, r3
 801c516:	d266      	bcs.n	801c5e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801c518:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c51a:	eb00 0b03 	add.w	fp, r0, r3
 801c51e:	4558      	cmp	r0, fp
 801c520:	d25c      	bcs.n	801c5dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801c522:	f819 3b01 	ldrb.w	r3, [r9], #1
 801c526:	fb1e e303 	smlabb	r3, lr, r3, lr
 801c52a:	f858 2003 	ldr.w	r2, [r8, r3]
 801c52e:	0e11      	lsrs	r1, r2, #24
 801c530:	d012      	beq.n	801c558 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801c532:	29ff      	cmp	r1, #255	; 0xff
 801c534:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801c538:	d110      	bne.n	801c55c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801c53a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c53e:	d10d      	bne.n	801c55c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801c540:	0953      	lsrs	r3, r2, #5
 801c542:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801c546:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c54a:	f027 0707 	bic.w	r7, r7, #7
 801c54e:	431f      	orrs	r7, r3
 801c550:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c554:	433a      	orrs	r2, r7
 801c556:	8002      	strh	r2, [r0, #0]
 801c558:	3002      	adds	r0, #2
 801c55a:	e7e0      	b.n	801c51e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801c55c:	fb0a f101 	mul.w	r1, sl, r1
 801c560:	8806      	ldrh	r6, [r0, #0]
 801c562:	1c4b      	adds	r3, r1, #1
 801c564:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801c568:	1235      	asrs	r5, r6, #8
 801c56a:	10f4      	asrs	r4, r6, #3
 801c56c:	121b      	asrs	r3, r3, #8
 801c56e:	00f6      	lsls	r6, r6, #3
 801c570:	b299      	uxth	r1, r3
 801c572:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801c576:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c57a:	b2f6      	uxtb	r6, r6
 801c57c:	43db      	mvns	r3, r3
 801c57e:	b2d2      	uxtb	r2, r2
 801c580:	b2db      	uxtb	r3, r3
 801c582:	fb1c fc01 	smulbb	ip, ip, r1
 801c586:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801c58a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c58e:	fb12 f201 	smulbb	r2, r2, r1
 801c592:	fb05 c503 	mla	r5, r5, r3, ip
 801c596:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c59a:	b2ff      	uxtb	r7, r7
 801c59c:	fb06 2203 	mla	r2, r6, r3, r2
 801c5a0:	b2ad      	uxth	r5, r5
 801c5a2:	fb17 f701 	smulbb	r7, r7, r1
 801c5a6:	b292      	uxth	r2, r2
 801c5a8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801c5ac:	fb04 7403 	mla	r4, r4, r3, r7
 801c5b0:	f105 0c01 	add.w	ip, r5, #1
 801c5b4:	1c57      	adds	r7, r2, #1
 801c5b6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c5ba:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c5be:	b2a4      	uxth	r4, r4
 801c5c0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c5c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c5c8:	433d      	orrs	r5, r7
 801c5ca:	1c67      	adds	r7, r4, #1
 801c5cc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801c5d0:	0964      	lsrs	r4, r4, #5
 801c5d2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c5d6:	4325      	orrs	r5, r4
 801c5d8:	8005      	strh	r5, [r0, #0]
 801c5da:	e7bd      	b.n	801c558 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801c5dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c5de:	4418      	add	r0, r3
 801c5e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c5e2:	4499      	add	r9, r3
 801c5e4:	e795      	b.n	801c512 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801c5e6:	4b04      	ldr	r3, [pc, #16]	; (801c5f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801c5e8:	6818      	ldr	r0, [r3, #0]
 801c5ea:	6803      	ldr	r3, [r0, #0]
 801c5ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c5ee:	4798      	blx	r3
 801c5f0:	e771      	b.n	801c4d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801c5f2:	bf00      	nop
 801c5f4:	200137b6 	.word	0x200137b6
 801c5f8:	200137bc 	.word	0x200137bc

0801c5fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801c5fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c600:	b087      	sub	sp, #28
 801c602:	4680      	mov	r8, r0
 801c604:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801c608:	460d      	mov	r5, r1
 801c60a:	4614      	mov	r4, r2
 801c60c:	2e00      	cmp	r6, #0
 801c60e:	f000 80b9 	beq.w	801c784 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801c612:	6810      	ldr	r0, [r2, #0]
 801c614:	6851      	ldr	r1, [r2, #4]
 801c616:	af02      	add	r7, sp, #8
 801c618:	c703      	stmia	r7!, {r0, r1}
 801c61a:	6818      	ldr	r0, [r3, #0]
 801c61c:	6859      	ldr	r1, [r3, #4]
 801c61e:	af04      	add	r7, sp, #16
 801c620:	c703      	stmia	r7!, {r0, r1}
 801c622:	a802      	add	r0, sp, #8
 801c624:	f7f7 fde0 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c628:	4621      	mov	r1, r4
 801c62a:	a804      	add	r0, sp, #16
 801c62c:	f7f7 fe20 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c630:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c634:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c638:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801c63c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801c640:	fb14 2103 	smlabb	r1, r4, r3, r2
 801c644:	eb08 0401 	add.w	r4, r8, r1
 801c648:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c64c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801c650:	440a      	add	r2, r1
 801c652:	f8ad 2010 	strh.w	r2, [sp, #16]
 801c656:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c65a:	4413      	add	r3, r2
 801c65c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801c660:	4b4a      	ldr	r3, [pc, #296]	; (801c78c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801c662:	6818      	ldr	r0, [r3, #0]
 801c664:	6803      	ldr	r3, [r0, #0]
 801c666:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c668:	4798      	blx	r3
 801c66a:	4b49      	ldr	r3, [pc, #292]	; (801c790 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801c66c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801c670:	881a      	ldrh	r2, [r3, #0]
 801c672:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801c676:	2eff      	cmp	r6, #255	; 0xff
 801c678:	fb02 c101 	mla	r1, r2, r1, ip
 801c67c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c680:	fb02 f207 	mul.w	r2, r2, r7
 801c684:	f105 0104 	add.w	r1, r5, #4
 801c688:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801c68c:	461d      	mov	r5, r3
 801c68e:	d05a      	beq.n	801c746 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801c690:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801c694:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801c698:	b2b6      	uxth	r6, r6
 801c69a:	fa1f fe8e 	uxth.w	lr, lr
 801c69e:	9301      	str	r3, [sp, #4]
 801c6a0:	4282      	cmp	r2, r0
 801c6a2:	d96a      	bls.n	801c77a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801c6a4:	eb00 0b0a 	add.w	fp, r0, sl
 801c6a8:	4583      	cmp	fp, r0
 801c6aa:	d940      	bls.n	801c72e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801c6ac:	f814 3b01 	ldrb.w	r3, [r4], #1
 801c6b0:	8805      	ldrh	r5, [r0, #0]
 801c6b2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801c6b6:	122f      	asrs	r7, r5, #8
 801c6b8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c6bc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c6c0:	fb17 f70e 	smulbb	r7, r7, lr
 801c6c4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c6c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c6cc:	00ed      	lsls	r5, r5, #3
 801c6ce:	fb0c 7c06 	mla	ip, ip, r6, r7
 801c6d2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c6d6:	10df      	asrs	r7, r3, #3
 801c6d8:	b2ed      	uxtb	r5, r5
 801c6da:	00db      	lsls	r3, r3, #3
 801c6dc:	fa1f fc8c 	uxth.w	ip, ip
 801c6e0:	fb19 f90e 	smulbb	r9, r9, lr
 801c6e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c6e8:	b2db      	uxtb	r3, r3
 801c6ea:	fb15 f50e 	smulbb	r5, r5, lr
 801c6ee:	fb07 9706 	mla	r7, r7, r6, r9
 801c6f2:	fb03 5306 	mla	r3, r3, r6, r5
 801c6f6:	f10c 0901 	add.w	r9, ip, #1
 801c6fa:	b29b      	uxth	r3, r3
 801c6fc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801c700:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801c704:	f103 0c01 	add.w	ip, r3, #1
 801c708:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c70c:	b2bf      	uxth	r7, r7
 801c70e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c712:	ea4c 0c09 	orr.w	ip, ip, r9
 801c716:	f107 0901 	add.w	r9, r7, #1
 801c71a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801c71e:	097f      	lsrs	r7, r7, #5
 801c720:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c724:	ea4c 0c07 	orr.w	ip, ip, r7
 801c728:	f820 cb02 	strh.w	ip, [r0], #2
 801c72c:	e7bc      	b.n	801c6a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801c72e:	9b01      	ldr	r3, [sp, #4]
 801c730:	881b      	ldrh	r3, [r3, #0]
 801c732:	eba3 0308 	sub.w	r3, r3, r8
 801c736:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c73a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801c73e:	eba3 0308 	sub.w	r3, r3, r8
 801c742:	441c      	add	r4, r3
 801c744:	e7ac      	b.n	801c6a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801c746:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801c74a:	4282      	cmp	r2, r0
 801c74c:	d915      	bls.n	801c77a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801c74e:	eb00 060a 	add.w	r6, r0, sl
 801c752:	4286      	cmp	r6, r0
 801c754:	d906      	bls.n	801c764 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801c756:	f814 3b01 	ldrb.w	r3, [r4], #1
 801c75a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801c75e:	f820 3b02 	strh.w	r3, [r0], #2
 801c762:	e7f6      	b.n	801c752 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801c764:	882b      	ldrh	r3, [r5, #0]
 801c766:	eba3 0308 	sub.w	r3, r3, r8
 801c76a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c76e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801c772:	eba3 0308 	sub.w	r3, r3, r8
 801c776:	441c      	add	r4, r3
 801c778:	e7e7      	b.n	801c74a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801c77a:	4b04      	ldr	r3, [pc, #16]	; (801c78c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801c77c:	6818      	ldr	r0, [r3, #0]
 801c77e:	6803      	ldr	r3, [r0, #0]
 801c780:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c782:	4798      	blx	r3
 801c784:	b007      	add	sp, #28
 801c786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c78a:	bf00      	nop
 801c78c:	200137bc 	.word	0x200137bc
 801c790:	200137b6 	.word	0x200137b6

0801c794 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801c794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c798:	b091      	sub	sp, #68	; 0x44
 801c79a:	4680      	mov	r8, r0
 801c79c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801c7a0:	460f      	mov	r7, r1
 801c7a2:	4614      	mov	r4, r2
 801c7a4:	2d00      	cmp	r5, #0
 801c7a6:	d051      	beq.n	801c84c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801c7a8:	6810      	ldr	r0, [r2, #0]
 801c7aa:	6851      	ldr	r1, [r2, #4]
 801c7ac:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801c9b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801c7b0:	ae0c      	add	r6, sp, #48	; 0x30
 801c7b2:	c603      	stmia	r6!, {r0, r1}
 801c7b4:	6818      	ldr	r0, [r3, #0]
 801c7b6:	6859      	ldr	r1, [r3, #4]
 801c7b8:	ae0e      	add	r6, sp, #56	; 0x38
 801c7ba:	c603      	stmia	r6!, {r0, r1}
 801c7bc:	a80c      	add	r0, sp, #48	; 0x30
 801c7be:	f7f7 fd13 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c7c2:	4621      	mov	r1, r4
 801c7c4:	a80e      	add	r0, sp, #56	; 0x38
 801c7c6:	f7f7 fd53 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c7ca:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801c7ce:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801c7d2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801c7d6:	f8d9 0000 	ldr.w	r0, [r9]
 801c7da:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801c7de:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801c7e2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c7e6:	eb08 0401 	add.w	r4, r8, r1
 801c7ea:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801c7ee:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801c9b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801c7f2:	440a      	add	r2, r1
 801c7f4:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801c7f8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801c7fc:	4413      	add	r3, r2
 801c7fe:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801c802:	6803      	ldr	r3, [r0, #0]
 801c804:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c806:	4798      	blx	r3
 801c808:	f010 0f80 	tst.w	r0, #128	; 0x80
 801c80c:	f8d9 0000 	ldr.w	r0, [r9]
 801c810:	d01f      	beq.n	801c852 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801c812:	2200      	movs	r2, #0
 801c814:	6801      	ldr	r1, [r0, #0]
 801c816:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801c81a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801c81e:	220b      	movs	r2, #11
 801c820:	9207      	str	r2, [sp, #28]
 801c822:	f8b8 2000 	ldrh.w	r2, [r8]
 801c826:	9206      	str	r2, [sp, #24]
 801c828:	2201      	movs	r2, #1
 801c82a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801c82e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801c832:	9203      	str	r2, [sp, #12]
 801c834:	fa1f f28a 	uxth.w	r2, sl
 801c838:	9202      	str	r2, [sp, #8]
 801c83a:	b2b6      	uxth	r6, r6
 801c83c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801c840:	9200      	str	r2, [sp, #0]
 801c842:	9601      	str	r6, [sp, #4]
 801c844:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801c846:	463a      	mov	r2, r7
 801c848:	4621      	mov	r1, r4
 801c84a:	47a8      	blx	r5
 801c84c:	b011      	add	sp, #68	; 0x44
 801c84e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c852:	6803      	ldr	r3, [r0, #0]
 801c854:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c856:	4798      	blx	r3
 801c858:	f8b8 2000 	ldrh.w	r2, [r8]
 801c85c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801c860:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801c864:	2dff      	cmp	r5, #255	; 0xff
 801c866:	fb02 1303 	mla	r3, r2, r3, r1
 801c86a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c86e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801c872:	fb0a fa02 	mul.w	sl, sl, r2
 801c876:	d062      	beq.n	801c93e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801c878:	ea6f 0c05 	mvn.w	ip, r5
 801c87c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801c880:	930a      	str	r3, [sp, #40]	; 0x28
 801c882:	b2ad      	uxth	r5, r5
 801c884:	fa5f fc8c 	uxtb.w	ip, ip
 801c888:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801c88c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c88e:	4298      	cmp	r0, r3
 801c890:	f080 8085 	bcs.w	801c99e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801c894:	eb00 0b09 	add.w	fp, r0, r9
 801c898:	4558      	cmp	r0, fp
 801c89a:	d246      	bcs.n	801c92a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801c89c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801c8a0:	2303      	movs	r3, #3
 801c8a2:	2204      	movs	r2, #4
 801c8a4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801c8a8:	eb07 0a0e 	add.w	sl, r7, lr
 801c8ac:	8803      	ldrh	r3, [r0, #0]
 801c8ae:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801c8b2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c8b6:	1219      	asrs	r1, r3, #8
 801c8b8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c8bc:	fb18 f805 	smulbb	r8, r8, r5
 801c8c0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801c8c4:	10da      	asrs	r2, r3, #3
 801c8c6:	fb01 810c 	mla	r1, r1, ip, r8
 801c8ca:	00db      	lsls	r3, r3, #3
 801c8cc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c8d0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c8d4:	b2db      	uxtb	r3, r3
 801c8d6:	fb18 f805 	smulbb	r8, r8, r5
 801c8da:	fb1e fe05 	smulbb	lr, lr, r5
 801c8de:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801c8e2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801c8e6:	b289      	uxth	r1, r1
 801c8e8:	fb02 820c 	mla	r2, r2, ip, r8
 801c8ec:	fb03 e30c 	mla	r3, r3, ip, lr
 801c8f0:	b292      	uxth	r2, r2
 801c8f2:	b29b      	uxth	r3, r3
 801c8f4:	f101 0801 	add.w	r8, r1, #1
 801c8f8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801c8fc:	f103 0e01 	add.w	lr, r3, #1
 801c900:	f102 0801 	add.w	r8, r2, #1
 801c904:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801c908:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801c90c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c910:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c914:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c918:	ea4e 0101 	orr.w	r1, lr, r1
 801c91c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c920:	ea41 0108 	orr.w	r1, r1, r8
 801c924:	f820 1b02 	strh.w	r1, [r0], #2
 801c928:	e7b6      	b.n	801c898 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801c92a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c92c:	881b      	ldrh	r3, [r3, #0]
 801c92e:	1b9b      	subs	r3, r3, r6
 801c930:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c934:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c938:	1b9b      	subs	r3, r3, r6
 801c93a:	441c      	add	r4, r3
 801c93c:	e7a6      	b.n	801c88c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801c93e:	491b      	ldr	r1, [pc, #108]	; (801c9ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801c940:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801c944:	2203      	movs	r2, #3
 801c946:	2504      	movs	r5, #4
 801c948:	4550      	cmp	r0, sl
 801c94a:	d228      	bcs.n	801c99e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801c94c:	eb00 0c09 	add.w	ip, r0, r9
 801c950:	4560      	cmp	r0, ip
 801c952:	4623      	mov	r3, r4
 801c954:	d219      	bcs.n	801c98a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801c956:	f893 e000 	ldrb.w	lr, [r3]
 801c95a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801c95e:	eb07 0b0e 	add.w	fp, r7, lr
 801c962:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c966:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801c96a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801c96e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801c972:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801c976:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801c97a:	ea43 030b 	orr.w	r3, r3, fp
 801c97e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801c982:	3401      	adds	r4, #1
 801c984:	f820 3b02 	strh.w	r3, [r0], #2
 801c988:	e7e2      	b.n	801c950 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801c98a:	f8b8 3000 	ldrh.w	r3, [r8]
 801c98e:	1b9b      	subs	r3, r3, r6
 801c990:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c994:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c998:	1b9b      	subs	r3, r3, r6
 801c99a:	441c      	add	r4, r3
 801c99c:	e7d4      	b.n	801c948 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801c99e:	4b04      	ldr	r3, [pc, #16]	; (801c9b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801c9a0:	6818      	ldr	r0, [r3, #0]
 801c9a2:	6803      	ldr	r3, [r0, #0]
 801c9a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c9a6:	4798      	blx	r3
 801c9a8:	e750      	b.n	801c84c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801c9aa:	bf00      	nop
 801c9ac:	fffff800 	.word	0xfffff800
 801c9b0:	200137bc 	.word	0x200137bc
 801c9b4:	200137b6 	.word	0x200137b6

0801c9b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801c9b8:	b4f0      	push	{r4, r5, r6, r7}
 801c9ba:	460c      	mov	r4, r1
 801c9bc:	4611      	mov	r1, r2
 801c9be:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801c9c2:	780f      	ldrb	r7, [r1, #0]
 801c9c4:	784e      	ldrb	r6, [r1, #1]
 801c9c6:	2f01      	cmp	r7, #1
 801c9c8:	461a      	mov	r2, r3
 801c9ca:	9b04      	ldr	r3, [sp, #16]
 801c9cc:	d036      	beq.n	801ca3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801c9ce:	d31e      	bcc.n	801ca0e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801c9d0:	2f02      	cmp	r7, #2
 801c9d2:	d14a      	bne.n	801ca6a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c9d4:	2e03      	cmp	r6, #3
 801c9d6:	d848      	bhi.n	801ca6a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c9d8:	e8df f006 	tbb	[pc, r6]
 801c9dc:	16140702 	.word	0x16140702
 801c9e0:	9504      	str	r5, [sp, #16]
 801c9e2:	4620      	mov	r0, r4
 801c9e4:	bcf0      	pop	{r4, r5, r6, r7}
 801c9e6:	f7ff be09 	b.w	801c5fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801c9ea:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801c9ec:	2800      	cmp	r0, #0
 801c9ee:	d03c      	beq.n	801ca6a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c9f0:	6806      	ldr	r6, [r0, #0]
 801c9f2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801c9f6:	68b5      	ldr	r5, [r6, #8]
 801c9f8:	4613      	mov	r3, r2
 801c9fa:	46ac      	mov	ip, r5
 801c9fc:	460a      	mov	r2, r1
 801c9fe:	4621      	mov	r1, r4
 801ca00:	bcf0      	pop	{r4, r5, r6, r7}
 801ca02:	4760      	bx	ip
 801ca04:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801ca06:	e7f1      	b.n	801c9ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801ca08:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801ca0c:	e7ee      	b.n	801c9ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801ca0e:	2e03      	cmp	r6, #3
 801ca10:	d82b      	bhi.n	801ca6a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ca12:	e8df f006 	tbb	[pc, r6]
 801ca16:	0702      	.short	0x0702
 801ca18:	100e      	.short	0x100e
 801ca1a:	9504      	str	r5, [sp, #16]
 801ca1c:	4620      	mov	r0, r4
 801ca1e:	bcf0      	pop	{r4, r5, r6, r7}
 801ca20:	f7ff bd06 	b.w	801c430 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801ca24:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801ca26:	b300      	cbz	r0, 801ca6a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ca28:	6806      	ldr	r6, [r0, #0]
 801ca2a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801ca2e:	68f5      	ldr	r5, [r6, #12]
 801ca30:	e7e2      	b.n	801c9f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801ca32:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801ca34:	e7f7      	b.n	801ca26 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801ca36:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801ca3a:	e7f4      	b.n	801ca26 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801ca3c:	2e03      	cmp	r6, #3
 801ca3e:	d814      	bhi.n	801ca6a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ca40:	e8df f006 	tbb	[pc, r6]
 801ca44:	100e0702 	.word	0x100e0702
 801ca48:	9504      	str	r5, [sp, #16]
 801ca4a:	4620      	mov	r0, r4
 801ca4c:	bcf0      	pop	{r4, r5, r6, r7}
 801ca4e:	f7ff bea1 	b.w	801c794 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801ca52:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801ca54:	b148      	cbz	r0, 801ca6a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ca56:	6806      	ldr	r6, [r0, #0]
 801ca58:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801ca5c:	6935      	ldr	r5, [r6, #16]
 801ca5e:	e7cb      	b.n	801c9f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801ca60:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801ca62:	e7f7      	b.n	801ca54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801ca64:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801ca68:	e7f4      	b.n	801ca54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801ca6a:	bcf0      	pop	{r4, r5, r6, r7}
 801ca6c:	4770      	bx	lr
	...

0801ca70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801ca70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca74:	4604      	mov	r4, r0
 801ca76:	b087      	sub	sp, #28
 801ca78:	6810      	ldr	r0, [r2, #0]
 801ca7a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801ca7e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801ccb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801ca82:	460e      	mov	r6, r1
 801ca84:	6851      	ldr	r1, [r2, #4]
 801ca86:	ad02      	add	r5, sp, #8
 801ca88:	c503      	stmia	r5!, {r0, r1}
 801ca8a:	6818      	ldr	r0, [r3, #0]
 801ca8c:	6859      	ldr	r1, [r3, #4]
 801ca8e:	ad04      	add	r5, sp, #16
 801ca90:	4617      	mov	r7, r2
 801ca92:	c503      	stmia	r5!, {r0, r1}
 801ca94:	a802      	add	r0, sp, #8
 801ca96:	f7f7 fba7 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca9a:	4639      	mov	r1, r7
 801ca9c:	a804      	add	r0, sp, #16
 801ca9e:	f7f7 fbe7 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801caa2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801caa6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801caaa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801caae:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801cab2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801cab6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801caba:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801cabe:	440e      	add	r6, r1
 801cac0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cac4:	440a      	add	r2, r1
 801cac6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801caca:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cace:	4413      	add	r3, r2
 801cad0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cad4:	4b77      	ldr	r3, [pc, #476]	; (801ccb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801cad6:	6818      	ldr	r0, [r3, #0]
 801cad8:	6803      	ldr	r3, [r0, #0]
 801cada:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cadc:	4798      	blx	r3
 801cade:	f8b9 b000 	ldrh.w	fp, [r9]
 801cae2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cae6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801caea:	fb0b 2303 	mla	r3, fp, r3, r2
 801caee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801caf2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801caf6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801cafa:	fb05 f50b 	mul.w	r5, r5, fp
 801cafe:	9300      	str	r3, [sp, #0]
 801cb00:	d069      	beq.n	801cbd6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801cb02:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801cb06:	4558      	cmp	r0, fp
 801cb08:	f080 80cc 	bcs.w	801cca4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801cb0c:	9b00      	ldr	r3, [sp, #0]
 801cb0e:	18c3      	adds	r3, r0, r3
 801cb10:	9301      	str	r3, [sp, #4]
 801cb12:	4631      	mov	r1, r6
 801cb14:	9b01      	ldr	r3, [sp, #4]
 801cb16:	4298      	cmp	r0, r3
 801cb18:	d24f      	bcs.n	801cbba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801cb1a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801cb1e:	2a00      	cmp	r2, #0
 801cb20:	d048      	beq.n	801cbb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801cb22:	fb0a f202 	mul.w	r2, sl, r2
 801cb26:	1c53      	adds	r3, r2, #1
 801cb28:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cb2c:	121b      	asrs	r3, r3, #8
 801cb2e:	d041      	beq.n	801cbb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801cb30:	8802      	ldrh	r2, [r0, #0]
 801cb32:	f8b4 c000 	ldrh.w	ip, [r4]
 801cb36:	b29e      	uxth	r6, r3
 801cb38:	1215      	asrs	r5, r2, #8
 801cb3a:	43db      	mvns	r3, r3
 801cb3c:	b2db      	uxtb	r3, r3
 801cb3e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801cb42:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cb46:	fb15 f503 	smulbb	r5, r5, r3
 801cb4a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801cb4e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cb52:	00d2      	lsls	r2, r2, #3
 801cb54:	fb07 5706 	mla	r7, r7, r6, r5
 801cb58:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801cb5c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cb60:	b2d2      	uxtb	r2, r2
 801cb62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cb66:	b2bf      	uxth	r7, r7
 801cb68:	fb1e fe03 	smulbb	lr, lr, r3
 801cb6c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cb70:	fa5f fc8c 	uxtb.w	ip, ip
 801cb74:	fb12 f203 	smulbb	r2, r2, r3
 801cb78:	fb05 e506 	mla	r5, r5, r6, lr
 801cb7c:	fb0c 2c06 	mla	ip, ip, r6, r2
 801cb80:	f107 0e01 	add.w	lr, r7, #1
 801cb84:	fa1f fc8c 	uxth.w	ip, ip
 801cb88:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801cb8c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801cb90:	f10c 0701 	add.w	r7, ip, #1
 801cb94:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801cb98:	b2ad      	uxth	r5, r5
 801cb9a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cb9e:	ea47 070e 	orr.w	r7, r7, lr
 801cba2:	f105 0e01 	add.w	lr, r5, #1
 801cba6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801cbaa:	096d      	lsrs	r5, r5, #5
 801cbac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cbb0:	432f      	orrs	r7, r5
 801cbb2:	8007      	strh	r7, [r0, #0]
 801cbb4:	3002      	adds	r0, #2
 801cbb6:	3402      	adds	r4, #2
 801cbb8:	e7ac      	b.n	801cb14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801cbba:	f8b9 3000 	ldrh.w	r3, [r9]
 801cbbe:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801cbc2:	eba3 0308 	sub.w	r3, r3, r8
 801cbc6:	eba6 0608 	sub.w	r6, r6, r8
 801cbca:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801cbce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cbd2:	440e      	add	r6, r1
 801cbd4:	e797      	b.n	801cb06 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801cbd6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801cbda:	42a8      	cmp	r0, r5
 801cbdc:	d262      	bcs.n	801cca4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801cbde:	9b00      	ldr	r3, [sp, #0]
 801cbe0:	4631      	mov	r1, r6
 801cbe2:	eb00 0b03 	add.w	fp, r0, r3
 801cbe6:	4558      	cmp	r0, fp
 801cbe8:	d24e      	bcs.n	801cc88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801cbea:	f811 3b01 	ldrb.w	r3, [r1], #1
 801cbee:	b12b      	cbz	r3, 801cbfc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801cbf0:	2bff      	cmp	r3, #255	; 0xff
 801cbf2:	f8b4 e000 	ldrh.w	lr, [r4]
 801cbf6:	d104      	bne.n	801cc02 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801cbf8:	f8a0 e000 	strh.w	lr, [r0]
 801cbfc:	3002      	adds	r0, #2
 801cbfe:	3402      	adds	r4, #2
 801cc00:	e7f1      	b.n	801cbe6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801cc02:	8802      	ldrh	r2, [r0, #0]
 801cc04:	b29f      	uxth	r7, r3
 801cc06:	1216      	asrs	r6, r2, #8
 801cc08:	43db      	mvns	r3, r3
 801cc0a:	b2db      	uxtb	r3, r3
 801cc0c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801cc10:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cc14:	fb16 f603 	smulbb	r6, r6, r3
 801cc18:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801cc1c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cc20:	00d2      	lsls	r2, r2, #3
 801cc22:	fb0c 6c07 	mla	ip, ip, r7, r6
 801cc26:	b2d2      	uxtb	r2, r2
 801cc28:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801cc2c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801cc30:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cc34:	fb1a fa03 	smulbb	sl, sl, r3
 801cc38:	fa1f fc8c 	uxth.w	ip, ip
 801cc3c:	fb12 f303 	smulbb	r3, r2, r3
 801cc40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cc44:	fa5f fe8e 	uxtb.w	lr, lr
 801cc48:	fb06 a607 	mla	r6, r6, r7, sl
 801cc4c:	f10c 0201 	add.w	r2, ip, #1
 801cc50:	fb0e 3307 	mla	r3, lr, r7, r3
 801cc54:	b2b6      	uxth	r6, r6
 801cc56:	b29b      	uxth	r3, r3
 801cc58:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801cc5c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801cc60:	f106 0a01 	add.w	sl, r6, #1
 801cc64:	f103 0c01 	add.w	ip, r3, #1
 801cc68:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cc6c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801cc70:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cc74:	0976      	lsrs	r6, r6, #5
 801cc76:	ea4c 0c02 	orr.w	ip, ip, r2
 801cc7a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cc7e:	ea4c 0c06 	orr.w	ip, ip, r6
 801cc82:	f8a0 c000 	strh.w	ip, [r0]
 801cc86:	e7b9      	b.n	801cbfc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801cc88:	f8b9 3000 	ldrh.w	r3, [r9]
 801cc8c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801cc90:	eba3 0308 	sub.w	r3, r3, r8
 801cc94:	eba6 0608 	sub.w	r6, r6, r8
 801cc98:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801cc9c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cca0:	440e      	add	r6, r1
 801cca2:	e79a      	b.n	801cbda <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801cca4:	4b03      	ldr	r3, [pc, #12]	; (801ccb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801cca6:	6818      	ldr	r0, [r3, #0]
 801cca8:	6803      	ldr	r3, [r0, #0]
 801ccaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ccac:	4798      	blx	r3
 801ccae:	b007      	add	sp, #28
 801ccb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ccb4:	200137bc 	.word	0x200137bc
 801ccb8:	200137b6 	.word	0x200137b6

0801ccbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801ccbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ccc0:	b089      	sub	sp, #36	; 0x24
 801ccc2:	4682      	mov	sl, r0
 801ccc4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801ccc8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ccca:	460f      	mov	r7, r1
 801cccc:	4691      	mov	r9, r2
 801ccce:	4698      	mov	r8, r3
 801ccd0:	2e00      	cmp	r6, #0
 801ccd2:	d03d      	beq.n	801cd50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ccd4:	4608      	mov	r0, r1
 801ccd6:	f7fa fe59 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ccda:	4605      	mov	r5, r0
 801ccdc:	4638      	mov	r0, r7
 801ccde:	f7fa fe89 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801cce2:	f8ad 000e 	strh.w	r0, [sp, #14]
 801cce6:	4638      	mov	r0, r7
 801cce8:	f8ad 9008 	strh.w	r9, [sp, #8]
 801ccec:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ccf0:	f8ad 800a 	strh.w	r8, [sp, #10]
 801ccf4:	f7fa ff36 	bl	8017b64 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ccf8:	4605      	mov	r5, r0
 801ccfa:	4638      	mov	r0, r7
 801ccfc:	f7fa ff62 	bl	8017bc4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801cd00:	4681      	mov	r9, r0
 801cd02:	4638      	mov	r0, r7
 801cd04:	f7fa ffb2 	bl	8017c6c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801cd08:	280b      	cmp	r0, #11
 801cd0a:	d821      	bhi.n	801cd50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801cd0c:	e8df f000 	tbb	[pc, r0]
 801cd10:	2006aebe 	.word	0x2006aebe
 801cd14:	20202020 	.word	0x20202020
 801cd18:	b5202020 	.word	0xb5202020
 801cd1c:	4bb0      	ldr	r3, [pc, #704]	; (801cfe0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801cd1e:	6818      	ldr	r0, [r3, #0]
 801cd20:	6803      	ldr	r3, [r0, #0]
 801cd22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cd24:	4798      	blx	r3
 801cd26:	2eff      	cmp	r6, #255	; 0xff
 801cd28:	d101      	bne.n	801cd2e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801cd2a:	0683      	lsls	r3, r0, #26
 801cd2c:	d506      	bpl.n	801cd3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801cd2e:	4633      	mov	r3, r6
 801cd30:	4622      	mov	r2, r4
 801cd32:	a902      	add	r1, sp, #8
 801cd34:	4628      	mov	r0, r5
 801cd36:	f7ff f909 	bl	801bf4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801cd3a:	e009      	b.n	801cd50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801cd3c:	4638      	mov	r0, r7
 801cd3e:	f7fa fed9 	bl	8017af4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801cd42:	b940      	cbnz	r0, 801cd56 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801cd44:	4623      	mov	r3, r4
 801cd46:	aa02      	add	r2, sp, #8
 801cd48:	4629      	mov	r1, r5
 801cd4a:	4650      	mov	r0, sl
 801cd4c:	f7ff f9e4 	bl	801c118 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801cd50:	b009      	add	sp, #36	; 0x24
 801cd52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd56:	f10d 0818 	add.w	r8, sp, #24
 801cd5a:	4639      	mov	r1, r7
 801cd5c:	4640      	mov	r0, r8
 801cd5e:	f7fa fe7d 	bl	8017a5c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801cd62:	e898 0003 	ldmia.w	r8, {r0, r1}
 801cd66:	af04      	add	r7, sp, #16
 801cd68:	e887 0003 	stmia.w	r7, {r0, r1}
 801cd6c:	4638      	mov	r0, r7
 801cd6e:	4621      	mov	r1, r4
 801cd70:	f7f2 fadc 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 801cd74:	4638      	mov	r0, r7
 801cd76:	f7f2 fb1c 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cd7a:	2800      	cmp	r0, #0
 801cd7c:	d1d7      	bne.n	801cd2e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801cd7e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cd82:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801cd86:	4293      	cmp	r3, r2
 801cd88:	dd12      	ble.n	801cdb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801cd8a:	1a9b      	subs	r3, r3, r2
 801cd8c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801cd90:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801cd94:	f8ad 0018 	strh.w	r0, [sp, #24]
 801cd98:	f8ad 201a 	strh.w	r2, [sp, #26]
 801cd9c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801cda0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801cda4:	4642      	mov	r2, r8
 801cda6:	4633      	mov	r3, r6
 801cda8:	a902      	add	r1, sp, #8
 801cdaa:	4628      	mov	r0, r5
 801cdac:	f7ff f8ce 	bl	801bf4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801cdb0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801cdb4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801cdb8:	4293      	cmp	r3, r2
 801cdba:	dd12      	ble.n	801cde2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801cdbc:	1a9b      	subs	r3, r3, r2
 801cdbe:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801cdc2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801cdc6:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cdca:	f8ad 001a 	strh.w	r0, [sp, #26]
 801cdce:	f8ad 301c 	strh.w	r3, [sp, #28]
 801cdd2:	f8ad 101e 	strh.w	r1, [sp, #30]
 801cdd6:	23ff      	movs	r3, #255	; 0xff
 801cdd8:	4642      	mov	r2, r8
 801cdda:	a902      	add	r1, sp, #8
 801cddc:	4628      	mov	r0, r5
 801cdde:	f7ff f8b5 	bl	801bf4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801cde2:	463b      	mov	r3, r7
 801cde4:	aa02      	add	r2, sp, #8
 801cde6:	4629      	mov	r1, r5
 801cde8:	4650      	mov	r0, sl
 801cdea:	f7ff f995 	bl	801c118 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801cdee:	88a2      	ldrh	r2, [r4, #4]
 801cdf0:	8823      	ldrh	r3, [r4, #0]
 801cdf2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801cdf6:	4413      	add	r3, r2
 801cdf8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cdfc:	440a      	add	r2, r1
 801cdfe:	b29b      	uxth	r3, r3
 801ce00:	b292      	uxth	r2, r2
 801ce02:	b211      	sxth	r1, r2
 801ce04:	b218      	sxth	r0, r3
 801ce06:	4288      	cmp	r0, r1
 801ce08:	dd12      	ble.n	801ce30 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801ce0a:	1a9b      	subs	r3, r3, r2
 801ce0c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ce10:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801ce14:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ce18:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ce1c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ce20:	23ff      	movs	r3, #255	; 0xff
 801ce22:	4642      	mov	r2, r8
 801ce24:	a902      	add	r1, sp, #8
 801ce26:	4628      	mov	r0, r5
 801ce28:	f8ad 601a 	strh.w	r6, [sp, #26]
 801ce2c:	f7ff f88e 	bl	801bf4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ce30:	88e2      	ldrh	r2, [r4, #6]
 801ce32:	8863      	ldrh	r3, [r4, #2]
 801ce34:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ce38:	4413      	add	r3, r2
 801ce3a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ce3e:	440a      	add	r2, r1
 801ce40:	b29b      	uxth	r3, r3
 801ce42:	b292      	uxth	r2, r2
 801ce44:	b211      	sxth	r1, r2
 801ce46:	b218      	sxth	r0, r3
 801ce48:	4288      	cmp	r0, r1
 801ce4a:	dd81      	ble.n	801cd50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ce4c:	1a9b      	subs	r3, r3, r2
 801ce4e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801ce52:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ce56:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ce5a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801ce5e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ce62:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ce66:	23ff      	movs	r3, #255	; 0xff
 801ce68:	4642      	mov	r2, r8
 801ce6a:	e762      	b.n	801cd32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801ce6c:	4633      	mov	r3, r6
 801ce6e:	4622      	mov	r2, r4
 801ce70:	a902      	add	r1, sp, #8
 801ce72:	4628      	mov	r0, r5
 801ce74:	f7ff f9c0 	bl	801c1f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ce78:	e76a      	b.n	801cd50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ce7a:	e9cd 4600 	strd	r4, r6, [sp]
 801ce7e:	ab02      	add	r3, sp, #8
 801ce80:	464a      	mov	r2, r9
 801ce82:	4629      	mov	r1, r5
 801ce84:	4650      	mov	r0, sl
 801ce86:	f7ff fd97 	bl	801c9b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801ce8a:	e761      	b.n	801cd50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ce8c:	4638      	mov	r0, r7
 801ce8e:	f7fa fe31 	bl	8017af4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ce92:	b950      	cbnz	r0, 801ceaa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801ce94:	e9cd 6000 	strd	r6, r0, [sp]
 801ce98:	f8da 3000 	ldr.w	r3, [sl]
 801ce9c:	aa02      	add	r2, sp, #8
 801ce9e:	68de      	ldr	r6, [r3, #12]
 801cea0:	4629      	mov	r1, r5
 801cea2:	4623      	mov	r3, r4
 801cea4:	4650      	mov	r0, sl
 801cea6:	47b0      	blx	r6
 801cea8:	e752      	b.n	801cd50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ceaa:	f10d 0818 	add.w	r8, sp, #24
 801ceae:	4639      	mov	r1, r7
 801ceb0:	4640      	mov	r0, r8
 801ceb2:	f7fa fdd3 	bl	8017a5c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801ceb6:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ceba:	af04      	add	r7, sp, #16
 801cebc:	e887 0003 	stmia.w	r7, {r0, r1}
 801cec0:	4638      	mov	r0, r7
 801cec2:	4621      	mov	r1, r4
 801cec4:	f7f2 fa32 	bl	800f32c <_ZN8touchgfx4RectaNERKS0_>
 801cec8:	4638      	mov	r0, r7
 801ceca:	f7f2 fa72 	bl	800f3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cece:	b138      	cbz	r0, 801cee0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801ced0:	9600      	str	r6, [sp, #0]
 801ced2:	4623      	mov	r3, r4
 801ced4:	aa02      	add	r2, sp, #8
 801ced6:	4649      	mov	r1, r9
 801ced8:	4628      	mov	r0, r5
 801ceda:	f7ff fdc9 	bl	801ca70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801cede:	e737      	b.n	801cd50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801cee0:	e9cd 6000 	strd	r6, r0, [sp]
 801cee4:	f8da 3000 	ldr.w	r3, [sl]
 801cee8:	aa02      	add	r2, sp, #8
 801ceea:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801ceee:	4629      	mov	r1, r5
 801cef0:	463b      	mov	r3, r7
 801cef2:	4650      	mov	r0, sl
 801cef4:	47d8      	blx	fp
 801cef6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cefa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801cefe:	4293      	cmp	r3, r2
 801cf00:	dd13      	ble.n	801cf2a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801cf02:	f9b4 0000 	ldrsh.w	r0, [r4]
 801cf06:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801cf0a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801cf0e:	1a9b      	subs	r3, r3, r2
 801cf10:	f8ad 201a 	strh.w	r2, [sp, #26]
 801cf14:	f8ad 101c 	strh.w	r1, [sp, #28]
 801cf18:	f8ad 301e 	strh.w	r3, [sp, #30]
 801cf1c:	9600      	str	r6, [sp, #0]
 801cf1e:	4643      	mov	r3, r8
 801cf20:	aa02      	add	r2, sp, #8
 801cf22:	4649      	mov	r1, r9
 801cf24:	4628      	mov	r0, r5
 801cf26:	f7ff fda3 	bl	801ca70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801cf2a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801cf2e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801cf32:	4293      	cmp	r3, r2
 801cf34:	dd13      	ble.n	801cf5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801cf36:	1a9b      	subs	r3, r3, r2
 801cf38:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801cf3c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801cf40:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cf44:	f8ad 001a 	strh.w	r0, [sp, #26]
 801cf48:	f8ad 301c 	strh.w	r3, [sp, #28]
 801cf4c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801cf50:	9600      	str	r6, [sp, #0]
 801cf52:	4643      	mov	r3, r8
 801cf54:	aa02      	add	r2, sp, #8
 801cf56:	4649      	mov	r1, r9
 801cf58:	4628      	mov	r0, r5
 801cf5a:	f7ff fd89 	bl	801ca70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801cf5e:	88a2      	ldrh	r2, [r4, #4]
 801cf60:	8823      	ldrh	r3, [r4, #0]
 801cf62:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801cf66:	4413      	add	r3, r2
 801cf68:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cf6c:	440a      	add	r2, r1
 801cf6e:	b29b      	uxth	r3, r3
 801cf70:	b292      	uxth	r2, r2
 801cf72:	b211      	sxth	r1, r2
 801cf74:	b218      	sxth	r0, r3
 801cf76:	4288      	cmp	r0, r1
 801cf78:	dd13      	ble.n	801cfa2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801cf7a:	1a9b      	subs	r3, r3, r2
 801cf7c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801cf80:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801cf84:	f8ad 1018 	strh.w	r1, [sp, #24]
 801cf88:	f8ad 301c 	strh.w	r3, [sp, #28]
 801cf8c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801cf90:	9600      	str	r6, [sp, #0]
 801cf92:	4643      	mov	r3, r8
 801cf94:	aa02      	add	r2, sp, #8
 801cf96:	4649      	mov	r1, r9
 801cf98:	4628      	mov	r0, r5
 801cf9a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801cf9e:	f7ff fd67 	bl	801ca70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801cfa2:	88e2      	ldrh	r2, [r4, #6]
 801cfa4:	8863      	ldrh	r3, [r4, #2]
 801cfa6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801cfaa:	4413      	add	r3, r2
 801cfac:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801cfb0:	440a      	add	r2, r1
 801cfb2:	b29b      	uxth	r3, r3
 801cfb4:	b292      	uxth	r2, r2
 801cfb6:	b211      	sxth	r1, r2
 801cfb8:	b218      	sxth	r0, r3
 801cfba:	4288      	cmp	r0, r1
 801cfbc:	f77f aec8 	ble.w	801cd50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801cfc0:	f9b4 7000 	ldrsh.w	r7, [r4]
 801cfc4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801cfc8:	f8ad 7018 	strh.w	r7, [sp, #24]
 801cfcc:	1a9b      	subs	r3, r3, r2
 801cfce:	f8ad 301e 	strh.w	r3, [sp, #30]
 801cfd2:	f8ad 101a 	strh.w	r1, [sp, #26]
 801cfd6:	f8ad 001c 	strh.w	r0, [sp, #28]
 801cfda:	9600      	str	r6, [sp, #0]
 801cfdc:	4643      	mov	r3, r8
 801cfde:	e779      	b.n	801ced4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801cfe0:	200137bc 	.word	0x200137bc

0801cfe4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801cfe4:	b180      	cbz	r0, 801d008 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801cfe6:	2903      	cmp	r1, #3
 801cfe8:	d81c      	bhi.n	801d024 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801cfea:	e8df f001 	tbb	[pc, r1]
 801cfee:	1d02      	.short	0x1d02
 801cff0:	1f08      	.short	0x1f08
 801cff2:	4b10      	ldr	r3, [pc, #64]	; (801d034 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801cff4:	8818      	ldrh	r0, [r3, #0]
 801cff6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801cffa:	4240      	negs	r0, r0
 801cffc:	4770      	bx	lr
 801cffe:	4b0d      	ldr	r3, [pc, #52]	; (801d034 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d000:	8818      	ldrh	r0, [r3, #0]
 801d002:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d006:	4770      	bx	lr
 801d008:	2903      	cmp	r1, #3
 801d00a:	d80b      	bhi.n	801d024 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d00c:	a301      	add	r3, pc, #4	; (adr r3, 801d014 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d00e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d012:	bf00      	nop
 801d014:	0801d029 	.word	0x0801d029
 801d018:	0801cfff 	.word	0x0801cfff
 801d01c:	0801d02d 	.word	0x0801d02d
 801d020:	0801cff3 	.word	0x0801cff3
 801d024:	2000      	movs	r0, #0
 801d026:	4770      	bx	lr
 801d028:	2001      	movs	r0, #1
 801d02a:	4770      	bx	lr
 801d02c:	f04f 30ff 	mov.w	r0, #4294967295
 801d030:	4770      	bx	lr
 801d032:	bf00      	nop
 801d034:	200137b6 	.word	0x200137b6

0801d038 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d038:	b180      	cbz	r0, 801d05c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801d03a:	2903      	cmp	r1, #3
 801d03c:	d81c      	bhi.n	801d078 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d03e:	e8df f001 	tbb	[pc, r1]
 801d042:	021d      	.short	0x021d
 801d044:	071f      	.short	0x071f
 801d046:	4b10      	ldr	r3, [pc, #64]	; (801d088 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d048:	8818      	ldrh	r0, [r3, #0]
 801d04a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d04e:	4770      	bx	lr
 801d050:	4b0d      	ldr	r3, [pc, #52]	; (801d088 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d052:	8818      	ldrh	r0, [r3, #0]
 801d054:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d058:	4240      	negs	r0, r0
 801d05a:	4770      	bx	lr
 801d05c:	2903      	cmp	r1, #3
 801d05e:	d80b      	bhi.n	801d078 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d060:	a301      	add	r3, pc, #4	; (adr r3, 801d068 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801d062:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d066:	bf00      	nop
 801d068:	0801d047 	.word	0x0801d047
 801d06c:	0801d081 	.word	0x0801d081
 801d070:	0801d051 	.word	0x0801d051
 801d074:	0801d07d 	.word	0x0801d07d
 801d078:	2000      	movs	r0, #0
 801d07a:	4770      	bx	lr
 801d07c:	2001      	movs	r0, #1
 801d07e:	4770      	bx	lr
 801d080:	f04f 30ff 	mov.w	r0, #4294967295
 801d084:	4770      	bx	lr
 801d086:	bf00      	nop
 801d088:	200137b6 	.word	0x200137b6

0801d08c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801d08c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d090:	b099      	sub	sp, #100	; 0x64
 801d092:	910b      	str	r1, [sp, #44]	; 0x2c
 801d094:	a914      	add	r1, sp, #80	; 0x50
 801d096:	e881 000c 	stmia.w	r1, {r2, r3}
 801d09a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801d09e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801d0a2:	f891 900d 	ldrb.w	r9, [r1, #13]
 801d0a6:	9309      	str	r3, [sp, #36]	; 0x24
 801d0a8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801d0ac:	9310      	str	r3, [sp, #64]	; 0x40
 801d0ae:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801d0b2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801d0b6:	930c      	str	r3, [sp, #48]	; 0x30
 801d0b8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801d0bc:	798f      	ldrb	r7, [r1, #6]
 801d0be:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801d0c2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801d0c6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801d0ca:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801d0ce:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801d0d2:	431f      	orrs	r7, r3
 801d0d4:	f000 8195 	beq.w	801d402 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d0d8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801d0dc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801d0e0:	f891 9007 	ldrb.w	r9, [r1, #7]
 801d0e4:	ea59 0903 	orrs.w	r9, r9, r3
 801d0e8:	f000 818b 	beq.w	801d402 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d0ec:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801d0f0:	b29b      	uxth	r3, r3
 801d0f2:	2d00      	cmp	r5, #0
 801d0f4:	f000 812e 	beq.w	801d354 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801d0f8:	1aed      	subs	r5, r5, r3
 801d0fa:	b2ad      	uxth	r5, r5
 801d0fc:	042b      	lsls	r3, r5, #16
 801d0fe:	d502      	bpl.n	801d106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d100:	1b64      	subs	r4, r4, r5
 801d102:	b224      	sxth	r4, r4
 801d104:	2500      	movs	r5, #0
 801d106:	f9b2 1000 	ldrsh.w	r1, [r2]
 801d10a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801d10e:	428c      	cmp	r4, r1
 801d110:	b28b      	uxth	r3, r1
 801d112:	bfbf      	itttt	lt
 801d114:	18ed      	addlt	r5, r5, r3
 801d116:	1b2c      	sublt	r4, r5, r4
 801d118:	b2a5      	uxthlt	r5, r4
 801d11a:	460c      	movlt	r4, r1
 801d11c:	8891      	ldrh	r1, [r2, #4]
 801d11e:	440b      	add	r3, r1
 801d120:	b21b      	sxth	r3, r3
 801d122:	930f      	str	r3, [sp, #60]	; 0x3c
 801d124:	88d3      	ldrh	r3, [r2, #6]
 801d126:	8852      	ldrh	r2, [r2, #2]
 801d128:	4413      	add	r3, r2
 801d12a:	b21b      	sxth	r3, r3
 801d12c:	930d      	str	r3, [sp, #52]	; 0x34
 801d12e:	4bbe      	ldr	r3, [pc, #760]	; (801d428 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801d130:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d132:	f893 b000 	ldrb.w	fp, [r3]
 801d136:	f10b 3cff 	add.w	ip, fp, #4294967295
 801d13a:	f1dc 0300 	rsbs	r3, ip, #0
 801d13e:	eb43 030c 	adc.w	r3, r3, ip
 801d142:	930e      	str	r3, [sp, #56]	; 0x38
 801d144:	4621      	mov	r1, r4
 801d146:	4653      	mov	r3, sl
 801d148:	a814      	add	r0, sp, #80	; 0x50
 801d14a:	f7f6 fec2 	bl	8013ed2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801d14e:	4621      	mov	r1, r4
 801d150:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801d154:	4653      	mov	r3, sl
 801d156:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d158:	a814      	add	r0, sp, #80	; 0x50
 801d15a:	f7f6 fed7 	bl	8013f0c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801d15e:	a918      	add	r1, sp, #96	; 0x60
 801d160:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801d164:	a817      	add	r0, sp, #92	; 0x5c
 801d166:	f7f6 fffd 	bl	8014164 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801d16a:	f1ba 0f00 	cmp.w	sl, #0
 801d16e:	f040 80f4 	bne.w	801d35a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801d172:	f1bb 0f01 	cmp.w	fp, #1
 801d176:	f040 80f8 	bne.w	801d36a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801d17a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d17c:	2b00      	cmp	r3, #0
 801d17e:	f040 8145 	bne.w	801d40c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801d182:	b2ba      	uxth	r2, r7
 801d184:	b905      	cbnz	r5, 801d188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801d186:	b16e      	cbz	r6, 801d1a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801d188:	fb06 5302 	mla	r3, r6, r2, r5
 801d18c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801d18e:	fb08 f303 	mul.w	r3, r8, r3
 801d192:	4631      	mov	r1, r6
 801d194:	f003 0607 	and.w	r6, r3, #7
 801d198:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801d19c:	9328      	str	r3, [sp, #160]	; 0xa0
 801d19e:	eba9 0301 	sub.w	r3, r9, r1
 801d1a2:	930a      	str	r3, [sp, #40]	; 0x28
 801d1a4:	4651      	mov	r1, sl
 801d1a6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d1a8:	f7ff ff1c 	bl	801cfe4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801d1ac:	4681      	mov	r9, r0
 801d1ae:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d1b0:	f7ff ff42 	bl	801d038 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801d1b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d1b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d1b8:	eba3 0a01 	sub.w	sl, r3, r1
 801d1bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d1be:	459a      	cmp	sl, r3
 801d1c0:	bfa8      	it	ge
 801d1c2:	469a      	movge	sl, r3
 801d1c4:	f1ba 0f00 	cmp.w	sl, #0
 801d1c8:	4683      	mov	fp, r0
 801d1ca:	f340 811a 	ble.w	801d402 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d1ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d1d0:	1b64      	subs	r4, r4, r5
 801d1d2:	1b1c      	subs	r4, r3, r4
 801d1d4:	42bc      	cmp	r4, r7
 801d1d6:	bfd4      	ite	le
 801d1d8:	ebc5 0504 	rsble	r5, r5, r4
 801d1dc:	ebc5 0507 	rsbgt	r5, r5, r7
 801d1e0:	2d00      	cmp	r5, #0
 801d1e2:	f340 810e 	ble.w	801d402 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d1e6:	1b52      	subs	r2, r2, r5
 801d1e8:	fb08 f302 	mul.w	r3, r8, r2
 801d1ec:	930f      	str	r3, [sp, #60]	; 0x3c
 801d1ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d1f0:	2b00      	cmp	r3, #0
 801d1f2:	f040 8116 	bne.w	801d422 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801d1f6:	4b8d      	ldr	r3, [pc, #564]	; (801d42c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801d1f8:	6818      	ldr	r0, [r3, #0]
 801d1fa:	6803      	ldr	r3, [r0, #0]
 801d1fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d1fe:	4798      	blx	r3
 801d200:	2301      	movs	r3, #1
 801d202:	fa03 f308 	lsl.w	r3, r3, r8
 801d206:	4a8a      	ldr	r2, [pc, #552]	; (801d430 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801d208:	3b01      	subs	r3, #1
 801d20a:	b2db      	uxtb	r3, r3
 801d20c:	8811      	ldrh	r1, [r2, #0]
 801d20e:	930e      	str	r3, [sp, #56]	; 0x38
 801d210:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801d214:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801d218:	fb01 2303 	mla	r3, r1, r3, r2
 801d21c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d220:	930a      	str	r3, [sp, #40]	; 0x28
 801d222:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d224:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801d228:	9313      	str	r3, [sp, #76]	; 0x4c
 801d22a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d22c:	0a19      	lsrs	r1, r3, #8
 801d22e:	b2cb      	uxtb	r3, r1
 801d230:	9312      	str	r3, [sp, #72]	; 0x48
 801d232:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d234:	b2db      	uxtb	r3, r3
 801d236:	9311      	str	r3, [sp, #68]	; 0x44
 801d238:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d23a:	095a      	lsrs	r2, r3, #5
 801d23c:	4b7d      	ldr	r3, [pc, #500]	; (801d434 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801d23e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d242:	400b      	ands	r3, r1
 801d244:	4313      	orrs	r3, r2
 801d246:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801d248:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d24c:	4313      	orrs	r3, r2
 801d24e:	b29b      	uxth	r3, r3
 801d250:	9310      	str	r3, [sp, #64]	; 0x40
 801d252:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d254:	781a      	ldrb	r2, [r3, #0]
 801d256:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801d25a:	4132      	asrs	r2, r6
 801d25c:	fb05 b919 	mls	r9, r5, r9, fp
 801d260:	fb03 fb05 	mul.w	fp, r3, r5
 801d264:	b2d2      	uxtb	r2, r2
 801d266:	930d      	str	r3, [sp, #52]	; 0x34
 801d268:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801d26c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801d270:	f0c0 80f5 	bcc.w	801d45e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801d274:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801d278:	46ae      	mov	lr, r5
 801d27a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801d27e:	f0c0 80dd 	bcc.w	801d43c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801d282:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d284:	4013      	ands	r3, r2
 801d286:	d055      	beq.n	801d334 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801d288:	20ff      	movs	r0, #255	; 0xff
 801d28a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d28c:	fb90 f1f1 	sdiv	r1, r0, r1
 801d290:	434b      	muls	r3, r1
 801d292:	2bfe      	cmp	r3, #254	; 0xfe
 801d294:	dd03      	ble.n	801d29e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801d296:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d298:	4281      	cmp	r1, r0
 801d29a:	f000 80cd 	beq.w	801d438 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801d29e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d2a0:	f8bc 4000 	ldrh.w	r4, [ip]
 801d2a4:	fb11 f303 	smulbb	r3, r1, r3
 801d2a8:	b29b      	uxth	r3, r3
 801d2aa:	1c59      	adds	r1, r3, #1
 801d2ac:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d2b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d2b4:	b29f      	uxth	r7, r3
 801d2b6:	43db      	mvns	r3, r3
 801d2b8:	b2db      	uxtb	r3, r3
 801d2ba:	9309      	str	r3, [sp, #36]	; 0x24
 801d2bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d2be:	1220      	asrs	r0, r4, #8
 801d2c0:	fb13 f907 	smulbb	r9, r3, r7
 801d2c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d2c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d2ca:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801d2ce:	fb00 9003 	mla	r0, r0, r3, r9
 801d2d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d2d4:	10e1      	asrs	r1, r4, #3
 801d2d6:	fb13 f907 	smulbb	r9, r3, r7
 801d2da:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d2de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d2e0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d2e4:	fb01 9103 	mla	r1, r1, r3, r9
 801d2e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d2ea:	00e4      	lsls	r4, r4, #3
 801d2ec:	fb13 f707 	smulbb	r7, r3, r7
 801d2f0:	b2e4      	uxtb	r4, r4
 801d2f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d2f4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d2f8:	fb04 7403 	mla	r4, r4, r3, r7
 801d2fc:	b280      	uxth	r0, r0
 801d2fe:	b2a4      	uxth	r4, r4
 801d300:	1c43      	adds	r3, r0, #1
 801d302:	f104 0901 	add.w	r9, r4, #1
 801d306:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d30a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801d30e:	b289      	uxth	r1, r1
 801d310:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801d314:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d318:	ea49 0000 	orr.w	r0, r9, r0
 801d31c:	f101 0901 	add.w	r9, r1, #1
 801d320:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801d324:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d328:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d32c:	ea40 0009 	orr.w	r0, r0, r9
 801d330:	f8ac 0000 	strh.w	r0, [ip]
 801d334:	4446      	add	r6, r8
 801d336:	b2b6      	uxth	r6, r6
 801d338:	2e07      	cmp	r6, #7
 801d33a:	bf81      	itttt	hi
 801d33c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801d33e:	785a      	ldrbhi	r2, [r3, #1]
 801d340:	3301      	addhi	r3, #1
 801d342:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801d344:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d346:	bf9a      	itte	ls
 801d348:	fa42 f208 	asrls.w	r2, r2, r8
 801d34c:	b2d2      	uxtbls	r2, r2
 801d34e:	2600      	movhi	r6, #0
 801d350:	449c      	add	ip, r3
 801d352:	e792      	b.n	801d27a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801d354:	441c      	add	r4, r3
 801d356:	b224      	sxth	r4, r4
 801d358:	e6d5      	b.n	801d106 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d35a:	f1ba 0f01 	cmp.w	sl, #1
 801d35e:	f47f af0c 	bne.w	801d17a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d362:	f1bb 0f01 	cmp.w	fp, #1
 801d366:	f47f af08 	bne.w	801d17a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d36a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801d42c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801d36e:	f8db 0000 	ldr.w	r0, [fp]
 801d372:	6803      	ldr	r3, [r0, #0]
 801d374:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d376:	4798      	blx	r3
 801d378:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801d37c:	465a      	mov	r2, fp
 801d37e:	d006      	beq.n	801d38e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801d380:	f1b8 0f04 	cmp.w	r8, #4
 801d384:	d140      	bne.n	801d408 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801d386:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d388:	3300      	adds	r3, #0
 801d38a:	bf18      	it	ne
 801d38c:	2301      	movne	r3, #1
 801d38e:	0580      	lsls	r0, r0, #22
 801d390:	d56e      	bpl.n	801d470 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801d392:	f1b8 0f08 	cmp.w	r8, #8
 801d396:	d16b      	bne.n	801d470 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801d398:	2b00      	cmp	r3, #0
 801d39a:	bf0c      	ite	eq
 801d39c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801d3a0:	f44f 7180 	movne.w	r1, #256	; 0x100
 801d3a4:	2d00      	cmp	r5, #0
 801d3a6:	f47f aee8 	bne.w	801d17a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d3aa:	2e00      	cmp	r6, #0
 801d3ac:	f47f aee5 	bne.w	801d17a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d3b0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d3b2:	19e3      	adds	r3, r4, r7
 801d3b4:	4283      	cmp	r3, r0
 801d3b6:	f73f aee0 	bgt.w	801d17a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d3ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d3bc:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d3be:	444b      	add	r3, r9
 801d3c0:	4283      	cmp	r3, r0
 801d3c2:	f73f aeda 	bgt.w	801d17a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d3c6:	6810      	ldr	r0, [r2, #0]
 801d3c8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801d3cc:	6804      	ldr	r4, [r0, #0]
 801d3ce:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d3d2:	b2bf      	uxth	r7, r7
 801d3d4:	f1b8 0f08 	cmp.w	r8, #8
 801d3d8:	f04f 0500 	mov.w	r5, #0
 801d3dc:	bf18      	it	ne
 801d3de:	3701      	addne	r7, #1
 801d3e0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801d3e4:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d3e6:	9104      	str	r1, [sp, #16]
 801d3e8:	bf18      	it	ne
 801d3ea:	f027 0701 	bicne.w	r7, r7, #1
 801d3ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801d3f0:	bf18      	it	ne
 801d3f2:	b2bf      	uxthne	r7, r7
 801d3f4:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801d3f8:	e9cd 7900 	strd	r7, r9, [sp]
 801d3fc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801d3fe:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801d400:	47a0      	blx	r4
 801d402:	b019      	add	sp, #100	; 0x64
 801d404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d408:	2300      	movs	r3, #0
 801d40a:	e7c0      	b.n	801d38e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801d40c:	2208      	movs	r2, #8
 801d40e:	fb92 f3f8 	sdiv	r3, r2, r8
 801d412:	1e5a      	subs	r2, r3, #1
 801d414:	443a      	add	r2, r7
 801d416:	fb92 f2f3 	sdiv	r2, r2, r3
 801d41a:	fb12 f203 	smulbb	r2, r2, r3
 801d41e:	b292      	uxth	r2, r2
 801d420:	e6b0      	b.n	801d184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801d422:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d424:	e6ec      	b.n	801d200 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801d426:	bf00      	nop
 801d428:	200137b4 	.word	0x200137b4
 801d42c:	200137bc 	.word	0x200137bc
 801d430:	200137b6 	.word	0x200137b6
 801d434:	00fff800 	.word	0x00fff800
 801d438:	9810      	ldr	r0, [sp, #64]	; 0x40
 801d43a:	e779      	b.n	801d330 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801d43c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d43e:	b153      	cbz	r3, 801d456 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801d440:	441e      	add	r6, r3
 801d442:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d444:	b2b6      	uxth	r6, r6
 801d446:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801d44a:	f006 0607 	and.w	r6, r6, #7
 801d44e:	781a      	ldrb	r2, [r3, #0]
 801d450:	9328      	str	r3, [sp, #160]	; 0xa0
 801d452:	4132      	asrs	r2, r6
 801d454:	b2d2      	uxtb	r2, r2
 801d456:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d458:	445b      	add	r3, fp
 801d45a:	930a      	str	r3, [sp, #40]	; 0x28
 801d45c:	e706      	b.n	801d26c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801d45e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d460:	2b00      	cmp	r3, #0
 801d462:	d1ce      	bne.n	801d402 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d464:	4b05      	ldr	r3, [pc, #20]	; (801d47c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801d466:	6818      	ldr	r0, [r3, #0]
 801d468:	6803      	ldr	r3, [r0, #0]
 801d46a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d46c:	4798      	blx	r3
 801d46e:	e7c8      	b.n	801d402 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d470:	2b00      	cmp	r3, #0
 801d472:	f43f ae82 	beq.w	801d17a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d476:	f44f 7180 	mov.w	r1, #256	; 0x100
 801d47a:	e793      	b.n	801d3a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801d47c:	200137bc 	.word	0x200137bc

0801d480 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801d480:	b538      	push	{r3, r4, r5, lr}
 801d482:	4c15      	ldr	r4, [pc, #84]	; (801d4d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801d484:	7823      	ldrb	r3, [r4, #0]
 801d486:	f3bf 8f5b 	dmb	ish
 801d48a:	07da      	lsls	r2, r3, #31
 801d48c:	4605      	mov	r5, r0
 801d48e:	d40b      	bmi.n	801d4a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801d490:	4620      	mov	r0, r4
 801d492:	f009 fdbe 	bl	8027012 <__cxa_guard_acquire>
 801d496:	b138      	cbz	r0, 801d4a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801d498:	4620      	mov	r0, r4
 801d49a:	f009 fdc6 	bl	802702a <__cxa_guard_release>
 801d49e:	4a0f      	ldr	r2, [pc, #60]	; (801d4dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801d4a0:	490f      	ldr	r1, [pc, #60]	; (801d4e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801d4a2:	4810      	ldr	r0, [pc, #64]	; (801d4e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801d4a4:	f009 fdae 	bl	8027004 <__aeabi_atexit>
 801d4a8:	4c0f      	ldr	r4, [pc, #60]	; (801d4e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801d4aa:	7823      	ldrb	r3, [r4, #0]
 801d4ac:	f3bf 8f5b 	dmb	ish
 801d4b0:	07db      	lsls	r3, r3, #31
 801d4b2:	d40b      	bmi.n	801d4cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801d4b4:	4620      	mov	r0, r4
 801d4b6:	f009 fdac 	bl	8027012 <__cxa_guard_acquire>
 801d4ba:	b138      	cbz	r0, 801d4cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801d4bc:	4620      	mov	r0, r4
 801d4be:	f009 fdb4 	bl	802702a <__cxa_guard_release>
 801d4c2:	4a06      	ldr	r2, [pc, #24]	; (801d4dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801d4c4:	4909      	ldr	r1, [pc, #36]	; (801d4ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801d4c6:	480a      	ldr	r0, [pc, #40]	; (801d4f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801d4c8:	f009 fd9c 	bl	8027004 <__aeabi_atexit>
 801d4cc:	4b05      	ldr	r3, [pc, #20]	; (801d4e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801d4ce:	612b      	str	r3, [r5, #16]
 801d4d0:	4b07      	ldr	r3, [pc, #28]	; (801d4f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801d4d2:	616b      	str	r3, [r5, #20]
 801d4d4:	bd38      	pop	{r3, r4, r5, pc}
 801d4d6:	bf00      	nop
 801d4d8:	2001389c 	.word	0x2001389c
 801d4dc:	20000000 	.word	0x20000000
 801d4e0:	0801a283 	.word	0x0801a283
 801d4e4:	200000d4 	.word	0x200000d4
 801d4e8:	200138a0 	.word	0x200138a0
 801d4ec:	0801a281 	.word	0x0801a281
 801d4f0:	200000d8 	.word	0x200000d8

0801d4f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801d4f4:	b538      	push	{r3, r4, r5, lr}
 801d4f6:	4c15      	ldr	r4, [pc, #84]	; (801d54c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801d4f8:	7823      	ldrb	r3, [r4, #0]
 801d4fa:	f3bf 8f5b 	dmb	ish
 801d4fe:	07da      	lsls	r2, r3, #31
 801d500:	4605      	mov	r5, r0
 801d502:	d40b      	bmi.n	801d51c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801d504:	4620      	mov	r0, r4
 801d506:	f009 fd84 	bl	8027012 <__cxa_guard_acquire>
 801d50a:	b138      	cbz	r0, 801d51c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801d50c:	4620      	mov	r0, r4
 801d50e:	f009 fd8c 	bl	802702a <__cxa_guard_release>
 801d512:	4a0f      	ldr	r2, [pc, #60]	; (801d550 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801d514:	490f      	ldr	r1, [pc, #60]	; (801d554 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801d516:	4810      	ldr	r0, [pc, #64]	; (801d558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801d518:	f009 fd74 	bl	8027004 <__aeabi_atexit>
 801d51c:	4c0f      	ldr	r4, [pc, #60]	; (801d55c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801d51e:	7823      	ldrb	r3, [r4, #0]
 801d520:	f3bf 8f5b 	dmb	ish
 801d524:	07db      	lsls	r3, r3, #31
 801d526:	d40b      	bmi.n	801d540 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801d528:	4620      	mov	r0, r4
 801d52a:	f009 fd72 	bl	8027012 <__cxa_guard_acquire>
 801d52e:	b138      	cbz	r0, 801d540 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801d530:	4620      	mov	r0, r4
 801d532:	f009 fd7a 	bl	802702a <__cxa_guard_release>
 801d536:	4a06      	ldr	r2, [pc, #24]	; (801d550 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801d538:	4909      	ldr	r1, [pc, #36]	; (801d560 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801d53a:	480a      	ldr	r0, [pc, #40]	; (801d564 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801d53c:	f009 fd62 	bl	8027004 <__aeabi_atexit>
 801d540:	4b05      	ldr	r3, [pc, #20]	; (801d558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801d542:	60ab      	str	r3, [r5, #8]
 801d544:	4b07      	ldr	r3, [pc, #28]	; (801d564 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801d546:	60eb      	str	r3, [r5, #12]
 801d548:	bd38      	pop	{r3, r4, r5, pc}
 801d54a:	bf00      	nop
 801d54c:	20013874 	.word	0x20013874
 801d550:	20000000 	.word	0x20000000
 801d554:	0801a287 	.word	0x0801a287
 801d558:	200000ac 	.word	0x200000ac
 801d55c:	20013878 	.word	0x20013878
 801d560:	0801a285 	.word	0x0801a285
 801d564:	200000b0 	.word	0x200000b0

0801d568 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801d568:	b510      	push	{r4, lr}
 801d56a:	4604      	mov	r4, r0
 801d56c:	f7ff ff88 	bl	801d480 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801d570:	4620      	mov	r0, r4
 801d572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d576:	f7ff bfbd 	b.w	801d4f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801d57c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801d57c:	b538      	push	{r3, r4, r5, lr}
 801d57e:	4c15      	ldr	r4, [pc, #84]	; (801d5d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801d580:	7823      	ldrb	r3, [r4, #0]
 801d582:	f3bf 8f5b 	dmb	ish
 801d586:	07da      	lsls	r2, r3, #31
 801d588:	4605      	mov	r5, r0
 801d58a:	d40b      	bmi.n	801d5a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801d58c:	4620      	mov	r0, r4
 801d58e:	f009 fd40 	bl	8027012 <__cxa_guard_acquire>
 801d592:	b138      	cbz	r0, 801d5a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801d594:	4620      	mov	r0, r4
 801d596:	f009 fd48 	bl	802702a <__cxa_guard_release>
 801d59a:	4a0f      	ldr	r2, [pc, #60]	; (801d5d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801d59c:	490f      	ldr	r1, [pc, #60]	; (801d5dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801d59e:	4810      	ldr	r0, [pc, #64]	; (801d5e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801d5a0:	f009 fd30 	bl	8027004 <__aeabi_atexit>
 801d5a4:	4c0f      	ldr	r4, [pc, #60]	; (801d5e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801d5a6:	7823      	ldrb	r3, [r4, #0]
 801d5a8:	f3bf 8f5b 	dmb	ish
 801d5ac:	07db      	lsls	r3, r3, #31
 801d5ae:	d40b      	bmi.n	801d5c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801d5b0:	4620      	mov	r0, r4
 801d5b2:	f009 fd2e 	bl	8027012 <__cxa_guard_acquire>
 801d5b6:	b138      	cbz	r0, 801d5c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801d5b8:	4620      	mov	r0, r4
 801d5ba:	f009 fd36 	bl	802702a <__cxa_guard_release>
 801d5be:	4a06      	ldr	r2, [pc, #24]	; (801d5d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801d5c0:	4909      	ldr	r1, [pc, #36]	; (801d5e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801d5c2:	480a      	ldr	r0, [pc, #40]	; (801d5ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801d5c4:	f009 fd1e 	bl	8027004 <__aeabi_atexit>
 801d5c8:	4b05      	ldr	r3, [pc, #20]	; (801d5e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801d5ca:	622b      	str	r3, [r5, #32]
 801d5cc:	4b07      	ldr	r3, [pc, #28]	; (801d5ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801d5ce:	626b      	str	r3, [r5, #36]	; 0x24
 801d5d0:	bd38      	pop	{r3, r4, r5, pc}
 801d5d2:	bf00      	nop
 801d5d4:	200138a4 	.word	0x200138a4
 801d5d8:	20000000 	.word	0x20000000
 801d5dc:	0801a27b 	.word	0x0801a27b
 801d5e0:	200000dc 	.word	0x200000dc
 801d5e4:	200138a8 	.word	0x200138a8
 801d5e8:	0801a279 	.word	0x0801a279
 801d5ec:	200000e0 	.word	0x200000e0

0801d5f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801d5f0:	b538      	push	{r3, r4, r5, lr}
 801d5f2:	4c15      	ldr	r4, [pc, #84]	; (801d648 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801d5f4:	7823      	ldrb	r3, [r4, #0]
 801d5f6:	f3bf 8f5b 	dmb	ish
 801d5fa:	07da      	lsls	r2, r3, #31
 801d5fc:	4605      	mov	r5, r0
 801d5fe:	d40b      	bmi.n	801d618 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801d600:	4620      	mov	r0, r4
 801d602:	f009 fd06 	bl	8027012 <__cxa_guard_acquire>
 801d606:	b138      	cbz	r0, 801d618 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801d608:	4620      	mov	r0, r4
 801d60a:	f009 fd0e 	bl	802702a <__cxa_guard_release>
 801d60e:	4a0f      	ldr	r2, [pc, #60]	; (801d64c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801d610:	490f      	ldr	r1, [pc, #60]	; (801d650 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801d612:	4810      	ldr	r0, [pc, #64]	; (801d654 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801d614:	f009 fcf6 	bl	8027004 <__aeabi_atexit>
 801d618:	4c0f      	ldr	r4, [pc, #60]	; (801d658 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801d61a:	7823      	ldrb	r3, [r4, #0]
 801d61c:	f3bf 8f5b 	dmb	ish
 801d620:	07db      	lsls	r3, r3, #31
 801d622:	d40b      	bmi.n	801d63c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801d624:	4620      	mov	r0, r4
 801d626:	f009 fcf4 	bl	8027012 <__cxa_guard_acquire>
 801d62a:	b138      	cbz	r0, 801d63c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801d62c:	4620      	mov	r0, r4
 801d62e:	f009 fcfc 	bl	802702a <__cxa_guard_release>
 801d632:	4a06      	ldr	r2, [pc, #24]	; (801d64c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801d634:	4909      	ldr	r1, [pc, #36]	; (801d65c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801d636:	480a      	ldr	r0, [pc, #40]	; (801d660 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801d638:	f009 fce4 	bl	8027004 <__aeabi_atexit>
 801d63c:	4b05      	ldr	r3, [pc, #20]	; (801d654 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801d63e:	61ab      	str	r3, [r5, #24]
 801d640:	4b07      	ldr	r3, [pc, #28]	; (801d660 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801d642:	61eb      	str	r3, [r5, #28]
 801d644:	bd38      	pop	{r3, r4, r5, pc}
 801d646:	bf00      	nop
 801d648:	2001387c 	.word	0x2001387c
 801d64c:	20000000 	.word	0x20000000
 801d650:	0801a27f 	.word	0x0801a27f
 801d654:	200000b4 	.word	0x200000b4
 801d658:	20013880 	.word	0x20013880
 801d65c:	0801a27d 	.word	0x0801a27d
 801d660:	200000b8 	.word	0x200000b8

0801d664 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801d664:	b510      	push	{r4, lr}
 801d666:	4604      	mov	r4, r0
 801d668:	f7ff ff88 	bl	801d57c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801d66c:	4620      	mov	r0, r4
 801d66e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d672:	f7ff bfbd 	b.w	801d5f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801d678 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801d678:	b538      	push	{r3, r4, r5, lr}
 801d67a:	4c15      	ldr	r4, [pc, #84]	; (801d6d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801d67c:	7823      	ldrb	r3, [r4, #0]
 801d67e:	f3bf 8f5b 	dmb	ish
 801d682:	07da      	lsls	r2, r3, #31
 801d684:	4605      	mov	r5, r0
 801d686:	d40b      	bmi.n	801d6a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801d688:	4620      	mov	r0, r4
 801d68a:	f009 fcc2 	bl	8027012 <__cxa_guard_acquire>
 801d68e:	b138      	cbz	r0, 801d6a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801d690:	4620      	mov	r0, r4
 801d692:	f009 fcca 	bl	802702a <__cxa_guard_release>
 801d696:	4a0f      	ldr	r2, [pc, #60]	; (801d6d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801d698:	490f      	ldr	r1, [pc, #60]	; (801d6d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801d69a:	4810      	ldr	r0, [pc, #64]	; (801d6dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801d69c:	f009 fcb2 	bl	8027004 <__aeabi_atexit>
 801d6a0:	4c0f      	ldr	r4, [pc, #60]	; (801d6e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801d6a2:	7823      	ldrb	r3, [r4, #0]
 801d6a4:	f3bf 8f5b 	dmb	ish
 801d6a8:	07db      	lsls	r3, r3, #31
 801d6aa:	d40b      	bmi.n	801d6c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801d6ac:	4620      	mov	r0, r4
 801d6ae:	f009 fcb0 	bl	8027012 <__cxa_guard_acquire>
 801d6b2:	b138      	cbz	r0, 801d6c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801d6b4:	4620      	mov	r0, r4
 801d6b6:	f009 fcb8 	bl	802702a <__cxa_guard_release>
 801d6ba:	4a06      	ldr	r2, [pc, #24]	; (801d6d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801d6bc:	4909      	ldr	r1, [pc, #36]	; (801d6e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801d6be:	480a      	ldr	r0, [pc, #40]	; (801d6e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801d6c0:	f009 fca0 	bl	8027004 <__aeabi_atexit>
 801d6c4:	4b05      	ldr	r3, [pc, #20]	; (801d6dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801d6c6:	632b      	str	r3, [r5, #48]	; 0x30
 801d6c8:	4b07      	ldr	r3, [pc, #28]	; (801d6e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801d6ca:	636b      	str	r3, [r5, #52]	; 0x34
 801d6cc:	bd38      	pop	{r3, r4, r5, pc}
 801d6ce:	bf00      	nop
 801d6d0:	200138b4 	.word	0x200138b4
 801d6d4:	20000000 	.word	0x20000000
 801d6d8:	0801a273 	.word	0x0801a273
 801d6dc:	200000ec 	.word	0x200000ec
 801d6e0:	200138b8 	.word	0x200138b8
 801d6e4:	0801a271 	.word	0x0801a271
 801d6e8:	200000f0 	.word	0x200000f0

0801d6ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801d6ec:	b538      	push	{r3, r4, r5, lr}
 801d6ee:	4c15      	ldr	r4, [pc, #84]	; (801d744 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801d6f0:	7823      	ldrb	r3, [r4, #0]
 801d6f2:	f3bf 8f5b 	dmb	ish
 801d6f6:	07da      	lsls	r2, r3, #31
 801d6f8:	4605      	mov	r5, r0
 801d6fa:	d40b      	bmi.n	801d714 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801d6fc:	4620      	mov	r0, r4
 801d6fe:	f009 fc88 	bl	8027012 <__cxa_guard_acquire>
 801d702:	b138      	cbz	r0, 801d714 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801d704:	4620      	mov	r0, r4
 801d706:	f009 fc90 	bl	802702a <__cxa_guard_release>
 801d70a:	4a0f      	ldr	r2, [pc, #60]	; (801d748 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801d70c:	490f      	ldr	r1, [pc, #60]	; (801d74c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801d70e:	4810      	ldr	r0, [pc, #64]	; (801d750 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801d710:	f009 fc78 	bl	8027004 <__aeabi_atexit>
 801d714:	4c0f      	ldr	r4, [pc, #60]	; (801d754 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801d716:	7823      	ldrb	r3, [r4, #0]
 801d718:	f3bf 8f5b 	dmb	ish
 801d71c:	07db      	lsls	r3, r3, #31
 801d71e:	d40b      	bmi.n	801d738 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801d720:	4620      	mov	r0, r4
 801d722:	f009 fc76 	bl	8027012 <__cxa_guard_acquire>
 801d726:	b138      	cbz	r0, 801d738 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801d728:	4620      	mov	r0, r4
 801d72a:	f009 fc7e 	bl	802702a <__cxa_guard_release>
 801d72e:	4a06      	ldr	r2, [pc, #24]	; (801d748 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801d730:	4909      	ldr	r1, [pc, #36]	; (801d758 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801d732:	480a      	ldr	r0, [pc, #40]	; (801d75c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801d734:	f009 fc66 	bl	8027004 <__aeabi_atexit>
 801d738:	4b05      	ldr	r3, [pc, #20]	; (801d750 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801d73a:	62ab      	str	r3, [r5, #40]	; 0x28
 801d73c:	4b07      	ldr	r3, [pc, #28]	; (801d75c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801d73e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801d740:	bd38      	pop	{r3, r4, r5, pc}
 801d742:	bf00      	nop
 801d744:	20013884 	.word	0x20013884
 801d748:	20000000 	.word	0x20000000
 801d74c:	0801a277 	.word	0x0801a277
 801d750:	200000bc 	.word	0x200000bc
 801d754:	20013888 	.word	0x20013888
 801d758:	0801a275 	.word	0x0801a275
 801d75c:	200000c0 	.word	0x200000c0

0801d760 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801d760:	b510      	push	{r4, lr}
 801d762:	4604      	mov	r4, r0
 801d764:	f7ff ff88 	bl	801d678 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801d768:	4620      	mov	r0, r4
 801d76a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d76e:	f7ff bfbd 	b.w	801d6ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801d774 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801d774:	b538      	push	{r3, r4, r5, lr}
 801d776:	4c15      	ldr	r4, [pc, #84]	; (801d7cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801d778:	7823      	ldrb	r3, [r4, #0]
 801d77a:	f3bf 8f5b 	dmb	ish
 801d77e:	07da      	lsls	r2, r3, #31
 801d780:	4605      	mov	r5, r0
 801d782:	d40b      	bmi.n	801d79c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801d784:	4620      	mov	r0, r4
 801d786:	f009 fc44 	bl	8027012 <__cxa_guard_acquire>
 801d78a:	b138      	cbz	r0, 801d79c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801d78c:	4620      	mov	r0, r4
 801d78e:	f009 fc4c 	bl	802702a <__cxa_guard_release>
 801d792:	4a0f      	ldr	r2, [pc, #60]	; (801d7d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801d794:	490f      	ldr	r1, [pc, #60]	; (801d7d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801d796:	4810      	ldr	r0, [pc, #64]	; (801d7d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801d798:	f009 fc34 	bl	8027004 <__aeabi_atexit>
 801d79c:	4c0f      	ldr	r4, [pc, #60]	; (801d7dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801d79e:	7823      	ldrb	r3, [r4, #0]
 801d7a0:	f3bf 8f5b 	dmb	ish
 801d7a4:	07db      	lsls	r3, r3, #31
 801d7a6:	d40b      	bmi.n	801d7c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801d7a8:	4620      	mov	r0, r4
 801d7aa:	f009 fc32 	bl	8027012 <__cxa_guard_acquire>
 801d7ae:	b138      	cbz	r0, 801d7c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801d7b0:	4620      	mov	r0, r4
 801d7b2:	f009 fc3a 	bl	802702a <__cxa_guard_release>
 801d7b6:	4a06      	ldr	r2, [pc, #24]	; (801d7d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801d7b8:	4909      	ldr	r1, [pc, #36]	; (801d7e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801d7ba:	480a      	ldr	r0, [pc, #40]	; (801d7e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801d7bc:	f009 fc22 	bl	8027004 <__aeabi_atexit>
 801d7c0:	4b05      	ldr	r3, [pc, #20]	; (801d7d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801d7c2:	652b      	str	r3, [r5, #80]	; 0x50
 801d7c4:	4b07      	ldr	r3, [pc, #28]	; (801d7e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801d7c6:	656b      	str	r3, [r5, #84]	; 0x54
 801d7c8:	bd38      	pop	{r3, r4, r5, pc}
 801d7ca:	bf00      	nop
 801d7cc:	200138bc 	.word	0x200138bc
 801d7d0:	20000000 	.word	0x20000000
 801d7d4:	0801a263 	.word	0x0801a263
 801d7d8:	200000f4 	.word	0x200000f4
 801d7dc:	200138c0 	.word	0x200138c0
 801d7e0:	0801a261 	.word	0x0801a261
 801d7e4:	200000f8 	.word	0x200000f8

0801d7e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801d7e8:	b538      	push	{r3, r4, r5, lr}
 801d7ea:	4c15      	ldr	r4, [pc, #84]	; (801d840 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801d7ec:	7823      	ldrb	r3, [r4, #0]
 801d7ee:	f3bf 8f5b 	dmb	ish
 801d7f2:	07da      	lsls	r2, r3, #31
 801d7f4:	4605      	mov	r5, r0
 801d7f6:	d40b      	bmi.n	801d810 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801d7f8:	4620      	mov	r0, r4
 801d7fa:	f009 fc0a 	bl	8027012 <__cxa_guard_acquire>
 801d7fe:	b138      	cbz	r0, 801d810 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801d800:	4620      	mov	r0, r4
 801d802:	f009 fc12 	bl	802702a <__cxa_guard_release>
 801d806:	4a0f      	ldr	r2, [pc, #60]	; (801d844 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801d808:	490f      	ldr	r1, [pc, #60]	; (801d848 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801d80a:	4810      	ldr	r0, [pc, #64]	; (801d84c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801d80c:	f009 fbfa 	bl	8027004 <__aeabi_atexit>
 801d810:	4c0f      	ldr	r4, [pc, #60]	; (801d850 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801d812:	7823      	ldrb	r3, [r4, #0]
 801d814:	f3bf 8f5b 	dmb	ish
 801d818:	07db      	lsls	r3, r3, #31
 801d81a:	d40b      	bmi.n	801d834 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801d81c:	4620      	mov	r0, r4
 801d81e:	f009 fbf8 	bl	8027012 <__cxa_guard_acquire>
 801d822:	b138      	cbz	r0, 801d834 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801d824:	4620      	mov	r0, r4
 801d826:	f009 fc00 	bl	802702a <__cxa_guard_release>
 801d82a:	4a06      	ldr	r2, [pc, #24]	; (801d844 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801d82c:	4909      	ldr	r1, [pc, #36]	; (801d854 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801d82e:	480a      	ldr	r0, [pc, #40]	; (801d858 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801d830:	f009 fbe8 	bl	8027004 <__aeabi_atexit>
 801d834:	4b05      	ldr	r3, [pc, #20]	; (801d84c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801d836:	64ab      	str	r3, [r5, #72]	; 0x48
 801d838:	4b07      	ldr	r3, [pc, #28]	; (801d858 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801d83a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801d83c:	bd38      	pop	{r3, r4, r5, pc}
 801d83e:	bf00      	nop
 801d840:	200138c4 	.word	0x200138c4
 801d844:	20000000 	.word	0x20000000
 801d848:	0801a267 	.word	0x0801a267
 801d84c:	200000fc 	.word	0x200000fc
 801d850:	200138c8 	.word	0x200138c8
 801d854:	0801a265 	.word	0x0801a265
 801d858:	20000100 	.word	0x20000100

0801d85c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801d85c:	b538      	push	{r3, r4, r5, lr}
 801d85e:	4c15      	ldr	r4, [pc, #84]	; (801d8b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801d860:	7823      	ldrb	r3, [r4, #0]
 801d862:	f3bf 8f5b 	dmb	ish
 801d866:	07da      	lsls	r2, r3, #31
 801d868:	4605      	mov	r5, r0
 801d86a:	d40b      	bmi.n	801d884 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801d86c:	4620      	mov	r0, r4
 801d86e:	f009 fbd0 	bl	8027012 <__cxa_guard_acquire>
 801d872:	b138      	cbz	r0, 801d884 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801d874:	4620      	mov	r0, r4
 801d876:	f009 fbd8 	bl	802702a <__cxa_guard_release>
 801d87a:	4a0f      	ldr	r2, [pc, #60]	; (801d8b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801d87c:	490f      	ldr	r1, [pc, #60]	; (801d8bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801d87e:	4810      	ldr	r0, [pc, #64]	; (801d8c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801d880:	f009 fbc0 	bl	8027004 <__aeabi_atexit>
 801d884:	4c0f      	ldr	r4, [pc, #60]	; (801d8c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801d886:	7823      	ldrb	r3, [r4, #0]
 801d888:	f3bf 8f5b 	dmb	ish
 801d88c:	07db      	lsls	r3, r3, #31
 801d88e:	d40b      	bmi.n	801d8a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801d890:	4620      	mov	r0, r4
 801d892:	f009 fbbe 	bl	8027012 <__cxa_guard_acquire>
 801d896:	b138      	cbz	r0, 801d8a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801d898:	4620      	mov	r0, r4
 801d89a:	f009 fbc6 	bl	802702a <__cxa_guard_release>
 801d89e:	4a06      	ldr	r2, [pc, #24]	; (801d8b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801d8a0:	4909      	ldr	r1, [pc, #36]	; (801d8c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801d8a2:	480a      	ldr	r0, [pc, #40]	; (801d8cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801d8a4:	f009 fbae 	bl	8027004 <__aeabi_atexit>
 801d8a8:	4b05      	ldr	r3, [pc, #20]	; (801d8c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801d8aa:	642b      	str	r3, [r5, #64]	; 0x40
 801d8ac:	4b07      	ldr	r3, [pc, #28]	; (801d8cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801d8ae:	646b      	str	r3, [r5, #68]	; 0x44
 801d8b0:	bd38      	pop	{r3, r4, r5, pc}
 801d8b2:	bf00      	nop
 801d8b4:	2001388c 	.word	0x2001388c
 801d8b8:	20000000 	.word	0x20000000
 801d8bc:	0801a26b 	.word	0x0801a26b
 801d8c0:	200000c4 	.word	0x200000c4
 801d8c4:	20013890 	.word	0x20013890
 801d8c8:	0801a269 	.word	0x0801a269
 801d8cc:	200000c8 	.word	0x200000c8

0801d8d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801d8d0:	b538      	push	{r3, r4, r5, lr}
 801d8d2:	4c15      	ldr	r4, [pc, #84]	; (801d928 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801d8d4:	7823      	ldrb	r3, [r4, #0]
 801d8d6:	f3bf 8f5b 	dmb	ish
 801d8da:	07da      	lsls	r2, r3, #31
 801d8dc:	4605      	mov	r5, r0
 801d8de:	d40b      	bmi.n	801d8f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801d8e0:	4620      	mov	r0, r4
 801d8e2:	f009 fb96 	bl	8027012 <__cxa_guard_acquire>
 801d8e6:	b138      	cbz	r0, 801d8f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801d8e8:	4620      	mov	r0, r4
 801d8ea:	f009 fb9e 	bl	802702a <__cxa_guard_release>
 801d8ee:	4a0f      	ldr	r2, [pc, #60]	; (801d92c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801d8f0:	490f      	ldr	r1, [pc, #60]	; (801d930 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801d8f2:	4810      	ldr	r0, [pc, #64]	; (801d934 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801d8f4:	f009 fb86 	bl	8027004 <__aeabi_atexit>
 801d8f8:	4c0f      	ldr	r4, [pc, #60]	; (801d938 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801d8fa:	7823      	ldrb	r3, [r4, #0]
 801d8fc:	f3bf 8f5b 	dmb	ish
 801d900:	07db      	lsls	r3, r3, #31
 801d902:	d40b      	bmi.n	801d91c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801d904:	4620      	mov	r0, r4
 801d906:	f009 fb84 	bl	8027012 <__cxa_guard_acquire>
 801d90a:	b138      	cbz	r0, 801d91c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801d90c:	4620      	mov	r0, r4
 801d90e:	f009 fb8c 	bl	802702a <__cxa_guard_release>
 801d912:	4a06      	ldr	r2, [pc, #24]	; (801d92c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801d914:	4909      	ldr	r1, [pc, #36]	; (801d93c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801d916:	480a      	ldr	r0, [pc, #40]	; (801d940 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801d918:	f009 fb74 	bl	8027004 <__aeabi_atexit>
 801d91c:	4b05      	ldr	r3, [pc, #20]	; (801d934 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801d91e:	63ab      	str	r3, [r5, #56]	; 0x38
 801d920:	4b07      	ldr	r3, [pc, #28]	; (801d940 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801d922:	63eb      	str	r3, [r5, #60]	; 0x3c
 801d924:	bd38      	pop	{r3, r4, r5, pc}
 801d926:	bf00      	nop
 801d928:	200138ac 	.word	0x200138ac
 801d92c:	20000000 	.word	0x20000000
 801d930:	0801a26f 	.word	0x0801a26f
 801d934:	200000e4 	.word	0x200000e4
 801d938:	200138b0 	.word	0x200138b0
 801d93c:	0801a26d 	.word	0x0801a26d
 801d940:	200000e8 	.word	0x200000e8

0801d944 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801d944:	b510      	push	{r4, lr}
 801d946:	4604      	mov	r4, r0
 801d948:	f7ff ff14 	bl	801d774 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801d94c:	4620      	mov	r0, r4
 801d94e:	f7ff ff85 	bl	801d85c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801d952:	4620      	mov	r0, r4
 801d954:	f7ff ff48 	bl	801d7e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801d958:	4620      	mov	r0, r4
 801d95a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d95e:	f7ff bfb7 	b.w	801d8d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801d964 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801d964:	b538      	push	{r3, r4, r5, lr}
 801d966:	4c15      	ldr	r4, [pc, #84]	; (801d9bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801d968:	7823      	ldrb	r3, [r4, #0]
 801d96a:	f3bf 8f5b 	dmb	ish
 801d96e:	07da      	lsls	r2, r3, #31
 801d970:	4605      	mov	r5, r0
 801d972:	d40b      	bmi.n	801d98c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801d974:	4620      	mov	r0, r4
 801d976:	f009 fb4c 	bl	8027012 <__cxa_guard_acquire>
 801d97a:	b138      	cbz	r0, 801d98c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801d97c:	4620      	mov	r0, r4
 801d97e:	f009 fb54 	bl	802702a <__cxa_guard_release>
 801d982:	4a0f      	ldr	r2, [pc, #60]	; (801d9c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801d984:	490f      	ldr	r1, [pc, #60]	; (801d9c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801d986:	4810      	ldr	r0, [pc, #64]	; (801d9c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801d988:	f009 fb3c 	bl	8027004 <__aeabi_atexit>
 801d98c:	4c0f      	ldr	r4, [pc, #60]	; (801d9cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801d98e:	7823      	ldrb	r3, [r4, #0]
 801d990:	f3bf 8f5b 	dmb	ish
 801d994:	07db      	lsls	r3, r3, #31
 801d996:	d40b      	bmi.n	801d9b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801d998:	4620      	mov	r0, r4
 801d99a:	f009 fb3a 	bl	8027012 <__cxa_guard_acquire>
 801d99e:	b138      	cbz	r0, 801d9b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801d9a0:	4620      	mov	r0, r4
 801d9a2:	f009 fb42 	bl	802702a <__cxa_guard_release>
 801d9a6:	4a06      	ldr	r2, [pc, #24]	; (801d9c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801d9a8:	4909      	ldr	r1, [pc, #36]	; (801d9d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801d9aa:	480a      	ldr	r0, [pc, #40]	; (801d9d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801d9ac:	f009 fb2a 	bl	8027004 <__aeabi_atexit>
 801d9b0:	4b05      	ldr	r3, [pc, #20]	; (801d9c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801d9b2:	662b      	str	r3, [r5, #96]	; 0x60
 801d9b4:	4b07      	ldr	r3, [pc, #28]	; (801d9d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801d9b6:	666b      	str	r3, [r5, #100]	; 0x64
 801d9b8:	bd38      	pop	{r3, r4, r5, pc}
 801d9ba:	bf00      	nop
 801d9bc:	20013894 	.word	0x20013894
 801d9c0:	20000000 	.word	0x20000000
 801d9c4:	0801a25b 	.word	0x0801a25b
 801d9c8:	200000cc 	.word	0x200000cc
 801d9cc:	20013898 	.word	0x20013898
 801d9d0:	0801a259 	.word	0x0801a259
 801d9d4:	200000d0 	.word	0x200000d0

0801d9d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801d9d8:	b538      	push	{r3, r4, r5, lr}
 801d9da:	4c15      	ldr	r4, [pc, #84]	; (801da30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801d9dc:	7823      	ldrb	r3, [r4, #0]
 801d9de:	f3bf 8f5b 	dmb	ish
 801d9e2:	07da      	lsls	r2, r3, #31
 801d9e4:	4605      	mov	r5, r0
 801d9e6:	d40b      	bmi.n	801da00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801d9e8:	4620      	mov	r0, r4
 801d9ea:	f009 fb12 	bl	8027012 <__cxa_guard_acquire>
 801d9ee:	b138      	cbz	r0, 801da00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801d9f0:	4620      	mov	r0, r4
 801d9f2:	f009 fb1a 	bl	802702a <__cxa_guard_release>
 801d9f6:	4a0f      	ldr	r2, [pc, #60]	; (801da34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801d9f8:	490f      	ldr	r1, [pc, #60]	; (801da38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801d9fa:	4810      	ldr	r0, [pc, #64]	; (801da3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801d9fc:	f009 fb02 	bl	8027004 <__aeabi_atexit>
 801da00:	4c0f      	ldr	r4, [pc, #60]	; (801da40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801da02:	7823      	ldrb	r3, [r4, #0]
 801da04:	f3bf 8f5b 	dmb	ish
 801da08:	07db      	lsls	r3, r3, #31
 801da0a:	d40b      	bmi.n	801da24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801da0c:	4620      	mov	r0, r4
 801da0e:	f009 fb00 	bl	8027012 <__cxa_guard_acquire>
 801da12:	b138      	cbz	r0, 801da24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801da14:	4620      	mov	r0, r4
 801da16:	f009 fb08 	bl	802702a <__cxa_guard_release>
 801da1a:	4a06      	ldr	r2, [pc, #24]	; (801da34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801da1c:	4909      	ldr	r1, [pc, #36]	; (801da44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801da1e:	480a      	ldr	r0, [pc, #40]	; (801da48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801da20:	f009 faf0 	bl	8027004 <__aeabi_atexit>
 801da24:	4b05      	ldr	r3, [pc, #20]	; (801da3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801da26:	65ab      	str	r3, [r5, #88]	; 0x58
 801da28:	4b07      	ldr	r3, [pc, #28]	; (801da48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801da2a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801da2c:	bd38      	pop	{r3, r4, r5, pc}
 801da2e:	bf00      	nop
 801da30:	2001386c 	.word	0x2001386c
 801da34:	20000000 	.word	0x20000000
 801da38:	0801a25f 	.word	0x0801a25f
 801da3c:	200000a4 	.word	0x200000a4
 801da40:	20013870 	.word	0x20013870
 801da44:	0801a25d 	.word	0x0801a25d
 801da48:	200000a8 	.word	0x200000a8

0801da4c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801da4c:	b510      	push	{r4, lr}
 801da4e:	4604      	mov	r4, r0
 801da50:	f7ff ff88 	bl	801d964 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801da54:	4620      	mov	r0, r4
 801da56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801da5a:	f7ff bfbd 	b.w	801d9d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801da60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801da60:	b538      	push	{r3, r4, r5, lr}
 801da62:	4c15      	ldr	r4, [pc, #84]	; (801dab8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801da64:	7823      	ldrb	r3, [r4, #0]
 801da66:	f3bf 8f5b 	dmb	ish
 801da6a:	07da      	lsls	r2, r3, #31
 801da6c:	4605      	mov	r5, r0
 801da6e:	d40b      	bmi.n	801da88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801da70:	4620      	mov	r0, r4
 801da72:	f009 face 	bl	8027012 <__cxa_guard_acquire>
 801da76:	b138      	cbz	r0, 801da88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801da78:	4620      	mov	r0, r4
 801da7a:	f009 fad6 	bl	802702a <__cxa_guard_release>
 801da7e:	4a0f      	ldr	r2, [pc, #60]	; (801dabc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801da80:	490f      	ldr	r1, [pc, #60]	; (801dac0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801da82:	4810      	ldr	r0, [pc, #64]	; (801dac4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801da84:	f009 fabe 	bl	8027004 <__aeabi_atexit>
 801da88:	4c0f      	ldr	r4, [pc, #60]	; (801dac8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801da8a:	7823      	ldrb	r3, [r4, #0]
 801da8c:	f3bf 8f5b 	dmb	ish
 801da90:	07db      	lsls	r3, r3, #31
 801da92:	d40b      	bmi.n	801daac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801da94:	4620      	mov	r0, r4
 801da96:	f009 fabc 	bl	8027012 <__cxa_guard_acquire>
 801da9a:	b138      	cbz	r0, 801daac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801da9c:	4620      	mov	r0, r4
 801da9e:	f009 fac4 	bl	802702a <__cxa_guard_release>
 801daa2:	4a06      	ldr	r2, [pc, #24]	; (801dabc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801daa4:	4909      	ldr	r1, [pc, #36]	; (801dacc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801daa6:	480a      	ldr	r0, [pc, #40]	; (801dad0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801daa8:	f009 faac 	bl	8027004 <__aeabi_atexit>
 801daac:	4b05      	ldr	r3, [pc, #20]	; (801dac4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801daae:	672b      	str	r3, [r5, #112]	; 0x70
 801dab0:	4b07      	ldr	r3, [pc, #28]	; (801dad0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801dab2:	676b      	str	r3, [r5, #116]	; 0x74
 801dab4:	bd38      	pop	{r3, r4, r5, pc}
 801dab6:	bf00      	nop
 801dab8:	20013864 	.word	0x20013864
 801dabc:	20000000 	.word	0x20000000
 801dac0:	0801a253 	.word	0x0801a253
 801dac4:	2000009c 	.word	0x2000009c
 801dac8:	20013868 	.word	0x20013868
 801dacc:	0801a251 	.word	0x0801a251
 801dad0:	200000a0 	.word	0x200000a0

0801dad4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801dad4:	b538      	push	{r3, r4, r5, lr}
 801dad6:	4c15      	ldr	r4, [pc, #84]	; (801db2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801dad8:	7823      	ldrb	r3, [r4, #0]
 801dada:	f3bf 8f5b 	dmb	ish
 801dade:	07da      	lsls	r2, r3, #31
 801dae0:	4605      	mov	r5, r0
 801dae2:	d40b      	bmi.n	801dafc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801dae4:	4620      	mov	r0, r4
 801dae6:	f009 fa94 	bl	8027012 <__cxa_guard_acquire>
 801daea:	b138      	cbz	r0, 801dafc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801daec:	4620      	mov	r0, r4
 801daee:	f009 fa9c 	bl	802702a <__cxa_guard_release>
 801daf2:	4a0f      	ldr	r2, [pc, #60]	; (801db30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801daf4:	490f      	ldr	r1, [pc, #60]	; (801db34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801daf6:	4810      	ldr	r0, [pc, #64]	; (801db38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801daf8:	f009 fa84 	bl	8027004 <__aeabi_atexit>
 801dafc:	4c0f      	ldr	r4, [pc, #60]	; (801db3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801dafe:	7823      	ldrb	r3, [r4, #0]
 801db00:	f3bf 8f5b 	dmb	ish
 801db04:	07db      	lsls	r3, r3, #31
 801db06:	d40b      	bmi.n	801db20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801db08:	4620      	mov	r0, r4
 801db0a:	f009 fa82 	bl	8027012 <__cxa_guard_acquire>
 801db0e:	b138      	cbz	r0, 801db20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801db10:	4620      	mov	r0, r4
 801db12:	f009 fa8a 	bl	802702a <__cxa_guard_release>
 801db16:	4a06      	ldr	r2, [pc, #24]	; (801db30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801db18:	4909      	ldr	r1, [pc, #36]	; (801db40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801db1a:	480a      	ldr	r0, [pc, #40]	; (801db44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801db1c:	f009 fa72 	bl	8027004 <__aeabi_atexit>
 801db20:	4b05      	ldr	r3, [pc, #20]	; (801db38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801db22:	66ab      	str	r3, [r5, #104]	; 0x68
 801db24:	4b07      	ldr	r3, [pc, #28]	; (801db44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801db26:	66eb      	str	r3, [r5, #108]	; 0x6c
 801db28:	bd38      	pop	{r3, r4, r5, pc}
 801db2a:	bf00      	nop
 801db2c:	2001385c 	.word	0x2001385c
 801db30:	20000000 	.word	0x20000000
 801db34:	0801a257 	.word	0x0801a257
 801db38:	20000094 	.word	0x20000094
 801db3c:	20013860 	.word	0x20013860
 801db40:	0801a255 	.word	0x0801a255
 801db44:	20000098 	.word	0x20000098

0801db48 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801db48:	b510      	push	{r4, lr}
 801db4a:	4604      	mov	r4, r0
 801db4c:	f7ff ff88 	bl	801da60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801db50:	4620      	mov	r0, r4
 801db52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801db56:	f7ff bfbd 	b.w	801dad4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801db5a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801db5a:	b510      	push	{r4, lr}
 801db5c:	4604      	mov	r4, r0
 801db5e:	f7ff fff3 	bl	801db48 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801db62:	4620      	mov	r0, r4
 801db64:	f7ff ff72 	bl	801da4c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801db68:	4620      	mov	r0, r4
 801db6a:	f7ff fdf9 	bl	801d760 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801db6e:	4620      	mov	r0, r4
 801db70:	f7ff fcfa 	bl	801d568 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801db74:	4620      	mov	r0, r4
 801db76:	f7ff fd75 	bl	801d664 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801db7a:	4620      	mov	r0, r4
 801db7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801db80:	f7ff bee0 	b.w	801d944 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801db84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801db84:	b538      	push	{r3, r4, r5, lr}
 801db86:	4c0b      	ldr	r4, [pc, #44]	; (801dbb4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801db88:	7823      	ldrb	r3, [r4, #0]
 801db8a:	f3bf 8f5b 	dmb	ish
 801db8e:	07db      	lsls	r3, r3, #31
 801db90:	4605      	mov	r5, r0
 801db92:	d40b      	bmi.n	801dbac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801db94:	4620      	mov	r0, r4
 801db96:	f009 fa3c 	bl	8027012 <__cxa_guard_acquire>
 801db9a:	b138      	cbz	r0, 801dbac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801db9c:	4620      	mov	r0, r4
 801db9e:	f009 fa44 	bl	802702a <__cxa_guard_release>
 801dba2:	4a05      	ldr	r2, [pc, #20]	; (801dbb8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801dba4:	4905      	ldr	r1, [pc, #20]	; (801dbbc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801dba6:	4806      	ldr	r0, [pc, #24]	; (801dbc0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801dba8:	f009 fa2c 	bl	8027004 <__aeabi_atexit>
 801dbac:	4b04      	ldr	r3, [pc, #16]	; (801dbc0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801dbae:	67ab      	str	r3, [r5, #120]	; 0x78
 801dbb0:	bd38      	pop	{r3, r4, r5, pc}
 801dbb2:	bf00      	nop
 801dbb4:	20013850 	.word	0x20013850
 801dbb8:	20000000 	.word	0x20000000
 801dbbc:	0801a24f 	.word	0x0801a24f
 801dbc0:	2000008c 	.word	0x2000008c

0801dbc4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801dbc4:	b538      	push	{r3, r4, r5, lr}
 801dbc6:	4c0b      	ldr	r4, [pc, #44]	; (801dbf4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801dbc8:	7823      	ldrb	r3, [r4, #0]
 801dbca:	f3bf 8f5b 	dmb	ish
 801dbce:	07db      	lsls	r3, r3, #31
 801dbd0:	4605      	mov	r5, r0
 801dbd2:	d40b      	bmi.n	801dbec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801dbd4:	4620      	mov	r0, r4
 801dbd6:	f009 fa1c 	bl	8027012 <__cxa_guard_acquire>
 801dbda:	b138      	cbz	r0, 801dbec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801dbdc:	4620      	mov	r0, r4
 801dbde:	f009 fa24 	bl	802702a <__cxa_guard_release>
 801dbe2:	4a05      	ldr	r2, [pc, #20]	; (801dbf8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801dbe4:	4905      	ldr	r1, [pc, #20]	; (801dbfc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801dbe6:	4806      	ldr	r0, [pc, #24]	; (801dc00 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801dbe8:	f009 fa0c 	bl	8027004 <__aeabi_atexit>
 801dbec:	4b04      	ldr	r3, [pc, #16]	; (801dc00 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801dbee:	67eb      	str	r3, [r5, #124]	; 0x7c
 801dbf0:	bd38      	pop	{r3, r4, r5, pc}
 801dbf2:	bf00      	nop
 801dbf4:	20013854 	.word	0x20013854
 801dbf8:	20000000 	.word	0x20000000
 801dbfc:	0801a24d 	.word	0x0801a24d
 801dc00:	20000090 	.word	0x20000090

0801dc04 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801dc04:	b570      	push	{r4, r5, r6, lr}
 801dc06:	4d0d      	ldr	r5, [pc, #52]	; (801dc3c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801dc08:	4c0d      	ldr	r4, [pc, #52]	; (801dc40 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801dc0a:	782b      	ldrb	r3, [r5, #0]
 801dc0c:	f3bf 8f5b 	dmb	ish
 801dc10:	f013 0f01 	tst.w	r3, #1
 801dc14:	4606      	mov	r6, r0
 801dc16:	d10d      	bne.n	801dc34 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801dc18:	4628      	mov	r0, r5
 801dc1a:	f009 f9fa 	bl	8027012 <__cxa_guard_acquire>
 801dc1e:	b148      	cbz	r0, 801dc34 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801dc20:	4b08      	ldr	r3, [pc, #32]	; (801dc44 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801dc22:	6023      	str	r3, [r4, #0]
 801dc24:	4628      	mov	r0, r5
 801dc26:	f009 fa00 	bl	802702a <__cxa_guard_release>
 801dc2a:	4a07      	ldr	r2, [pc, #28]	; (801dc48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801dc2c:	4907      	ldr	r1, [pc, #28]	; (801dc4c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801dc2e:	4620      	mov	r0, r4
 801dc30:	f009 f9e8 	bl	8027004 <__aeabi_atexit>
 801dc34:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801dc38:	bd70      	pop	{r4, r5, r6, pc}
 801dc3a:	bf00      	nop
 801dc3c:	20013858 	.word	0x20013858
 801dc40:	200138cc 	.word	0x200138cc
 801dc44:	0802c3dc 	.word	0x0802c3dc
 801dc48:	20000000 	.word	0x20000000
 801dc4c:	0801a24b 	.word	0x0801a24b

0801dc50 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801dc50:	b510      	push	{r4, lr}
 801dc52:	4604      	mov	r4, r0
 801dc54:	f7ff ff96 	bl	801db84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801dc58:	4620      	mov	r0, r4
 801dc5a:	f7ff ffb3 	bl	801dbc4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801dc5e:	4620      	mov	r0, r4
 801dc60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dc64:	f7ff bfce 	b.w	801dc04 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801dc68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801dc68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc6c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801dc70:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801dc74:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801dc78:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801dc7c:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801dc80:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801dc84:	8808      	ldrh	r0, [r1, #0]
 801dc86:	fb05 4c0e 	mla	ip, r5, lr, r4
 801dc8a:	2d00      	cmp	r5, #0
 801dc8c:	eb02 0a0c 	add.w	sl, r2, ip
 801dc90:	f2c0 80b0 	blt.w	801ddf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801dc94:	45ab      	cmp	fp, r5
 801dc96:	f340 80ad 	ble.w	801ddf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801dc9a:	2c00      	cmp	r4, #0
 801dc9c:	f2c0 80a8 	blt.w	801ddf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801dca0:	45a6      	cmp	lr, r4
 801dca2:	f340 80a5 	ble.w	801ddf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801dca6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801dcaa:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801dcae:	1c62      	adds	r2, r4, #1
 801dcb0:	f100 80a3 	bmi.w	801ddfa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801dcb4:	4596      	cmp	lr, r2
 801dcb6:	f340 80a0 	ble.w	801ddfa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801dcba:	f1b9 0f00 	cmp.w	r9, #0
 801dcbe:	f000 809c 	beq.w	801ddfa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801dcc2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801dcc6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801dcca:	3501      	adds	r5, #1
 801dccc:	f100 8099 	bmi.w	801de02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801dcd0:	45ab      	cmp	fp, r5
 801dcd2:	f340 8096 	ble.w	801de02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801dcd6:	2f00      	cmp	r7, #0
 801dcd8:	f000 8093 	beq.w	801de02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801dcdc:	2c00      	cmp	r4, #0
 801dcde:	f2c0 808e 	blt.w	801ddfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801dce2:	45a6      	cmp	lr, r4
 801dce4:	f340 808b 	ble.w	801ddfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801dce8:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801dcec:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801dcf0:	3401      	adds	r4, #1
 801dcf2:	f100 8089 	bmi.w	801de08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801dcf6:	45a6      	cmp	lr, r4
 801dcf8:	f340 8086 	ble.w	801de08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801dcfc:	f1b9 0f00 	cmp.w	r9, #0
 801dd00:	f000 8082 	beq.w	801de08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801dd04:	44d6      	add	lr, sl
 801dd06:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801dd0a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801dd0e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801dd12:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801dd16:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801dd1a:	fb19 fe07 	smulbb	lr, r9, r7
 801dd1e:	ea44 0808 	orr.w	r8, r4, r8
 801dd22:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801dd26:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801dd2a:	f1c7 0210 	rsb	r2, r7, #16
 801dd2e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801dd32:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dd36:	ea44 0c0c 	orr.w	ip, r4, ip
 801dd3a:	eba2 0209 	sub.w	r2, r2, r9
 801dd3e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801dd42:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801dd46:	fb04 f40c 	mul.w	r4, r4, ip
 801dd4a:	fb02 4808 	mla	r8, r2, r8, r4
 801dd4e:	041a      	lsls	r2, r3, #16
 801dd50:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dd54:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dd58:	4313      	orrs	r3, r2
 801dd5a:	042a      	lsls	r2, r5, #16
 801dd5c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dd60:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801dd64:	fb0e 8303 	mla	r3, lr, r3, r8
 801dd68:	432a      	orrs	r2, r5
 801dd6a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801dd6e:	fb07 3202 	mla	r2, r7, r2, r3
 801dd72:	0d53      	lsrs	r3, r2, #21
 801dd74:	0952      	lsrs	r2, r2, #5
 801dd76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dd7a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dd7e:	431a      	orrs	r2, r3
 801dd80:	b293      	uxth	r3, r2
 801dd82:	b2b4      	uxth	r4, r6
 801dd84:	1202      	asrs	r2, r0, #8
 801dd86:	43f6      	mvns	r6, r6
 801dd88:	b2f6      	uxtb	r6, r6
 801dd8a:	121d      	asrs	r5, r3, #8
 801dd8c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801dd90:	fb12 f206 	smulbb	r2, r2, r6
 801dd94:	10c7      	asrs	r7, r0, #3
 801dd96:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801dd9a:	00c0      	lsls	r0, r0, #3
 801dd9c:	fb05 2504 	mla	r5, r5, r4, r2
 801dda0:	b2c0      	uxtb	r0, r0
 801dda2:	10da      	asrs	r2, r3, #3
 801dda4:	00db      	lsls	r3, r3, #3
 801dda6:	b2db      	uxtb	r3, r3
 801dda8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ddac:	fb10 f006 	smulbb	r0, r0, r6
 801ddb0:	b2ad      	uxth	r5, r5
 801ddb2:	fb03 0004 	mla	r0, r3, r4, r0
 801ddb6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ddba:	fb17 f706 	smulbb	r7, r7, r6
 801ddbe:	b280      	uxth	r0, r0
 801ddc0:	1c6b      	adds	r3, r5, #1
 801ddc2:	fb02 7204 	mla	r2, r2, r4, r7
 801ddc6:	b292      	uxth	r2, r2
 801ddc8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ddcc:	1c43      	adds	r3, r0, #1
 801ddce:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ddd2:	1c50      	adds	r0, r2, #1
 801ddd4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ddd8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801dddc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dde0:	0952      	lsrs	r2, r2, #5
 801dde2:	432b      	orrs	r3, r5
 801dde4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dde8:	4313      	orrs	r3, r2
 801ddea:	800b      	strh	r3, [r1, #0]
 801ddec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ddf0:	4680      	mov	r8, r0
 801ddf2:	e75c      	b.n	801dcae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801ddf4:	4684      	mov	ip, r0
 801ddf6:	4680      	mov	r8, r0
 801ddf8:	e767      	b.n	801dcca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ddfa:	4684      	mov	ip, r0
 801ddfc:	e765      	b.n	801dcca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ddfe:	4605      	mov	r5, r0
 801de00:	e776      	b.n	801dcf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801de02:	4603      	mov	r3, r0
 801de04:	4605      	mov	r5, r0
 801de06:	e782      	b.n	801dd0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801de08:	4603      	mov	r3, r0
 801de0a:	e780      	b.n	801dd0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801de0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801de0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de10:	b099      	sub	sp, #100	; 0x64
 801de12:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801de16:	9215      	str	r2, [sp, #84]	; 0x54
 801de18:	9309      	str	r3, [sp, #36]	; 0x24
 801de1a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801de1c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801de20:	930d      	str	r3, [sp, #52]	; 0x34
 801de22:	910c      	str	r1, [sp, #48]	; 0x30
 801de24:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801de28:	9016      	str	r0, [sp, #88]	; 0x58
 801de2a:	6850      	ldr	r0, [r2, #4]
 801de2c:	6812      	ldr	r2, [r2, #0]
 801de2e:	fb00 1303 	mla	r3, r0, r3, r1
 801de32:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801de36:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801de38:	681b      	ldr	r3, [r3, #0]
 801de3a:	930b      	str	r3, [sp, #44]	; 0x2c
 801de3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801de3e:	685e      	ldr	r6, [r3, #4]
 801de40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de42:	43db      	mvns	r3, r3
 801de44:	b2db      	uxtb	r3, r3
 801de46:	3604      	adds	r6, #4
 801de48:	930a      	str	r3, [sp, #40]	; 0x28
 801de4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801de4c:	2b00      	cmp	r3, #0
 801de4e:	dc03      	bgt.n	801de58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801de50:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801de52:	2b00      	cmp	r3, #0
 801de54:	f340 8225 	ble.w	801e2a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801de58:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801de5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801de5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801de62:	1e48      	subs	r0, r1, #1
 801de64:	1e57      	subs	r7, r2, #1
 801de66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801de68:	2b00      	cmp	r3, #0
 801de6a:	f340 80e3 	ble.w	801e034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801de6e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801de72:	ea4f 4325 	mov.w	r3, r5, asr #16
 801de76:	d406      	bmi.n	801de86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801de78:	4584      	cmp	ip, r0
 801de7a:	da04      	bge.n	801de86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801de7c:	2b00      	cmp	r3, #0
 801de7e:	db02      	blt.n	801de86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801de80:	42bb      	cmp	r3, r7
 801de82:	f2c0 80d8 	blt.w	801e036 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801de86:	f11c 0c01 	adds.w	ip, ip, #1
 801de8a:	f100 80c9 	bmi.w	801e020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801de8e:	4561      	cmp	r1, ip
 801de90:	f2c0 80c6 	blt.w	801e020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801de94:	3301      	adds	r3, #1
 801de96:	f100 80c3 	bmi.w	801e020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801de9a:	429a      	cmp	r2, r3
 801de9c:	f2c0 80c0 	blt.w	801e020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801dea0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801dea4:	4647      	mov	r7, r8
 801dea6:	f1bb 0f00 	cmp.w	fp, #0
 801deaa:	f340 80e3 	ble.w	801e074 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801deae:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801deb0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801deb2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801deb6:	689b      	ldr	r3, [r3, #8]
 801deb8:	ea5f 422a 	movs.w	r2, sl, asr #16
 801debc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801dec0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801dec4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801dec8:	f100 8121 	bmi.w	801e10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801decc:	f103 39ff 	add.w	r9, r3, #4294967295
 801ded0:	454a      	cmp	r2, r9
 801ded2:	f280 811c 	bge.w	801e10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ded6:	f1bc 0f00 	cmp.w	ip, #0
 801deda:	f2c0 8118 	blt.w	801e10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801dede:	f10e 39ff 	add.w	r9, lr, #4294967295
 801dee2:	45cc      	cmp	ip, r9
 801dee4:	f280 8113 	bge.w	801e10e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801dee8:	b21b      	sxth	r3, r3
 801deea:	fb0c 2203 	mla	r2, ip, r3, r2
 801deee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801def0:	eb04 0902 	add.w	r9, r4, r2
 801def4:	5ca2      	ldrb	r2, [r4, r2]
 801def6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801defa:	2800      	cmp	r0, #0
 801defc:	f000 80fe 	beq.w	801e0fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801df00:	f899 2001 	ldrb.w	r2, [r9, #1]
 801df04:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801df08:	9211      	str	r2, [sp, #68]	; 0x44
 801df0a:	b151      	cbz	r1, 801df22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801df0c:	eb09 0203 	add.w	r2, r9, r3
 801df10:	f819 3003 	ldrb.w	r3, [r9, r3]
 801df14:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801df18:	930f      	str	r3, [sp, #60]	; 0x3c
 801df1a:	7853      	ldrb	r3, [r2, #1]
 801df1c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801df20:	9312      	str	r3, [sp, #72]	; 0x48
 801df22:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801df24:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801df26:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801df2a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801df2e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801df32:	ea4c 0c03 	orr.w	ip, ip, r3
 801df36:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801df38:	041b      	lsls	r3, r3, #16
 801df3a:	fb10 f201 	smulbb	r2, r0, r1
 801df3e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801df42:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801df46:	10d2      	asrs	r2, r2, #3
 801df48:	4323      	orrs	r3, r4
 801df4a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801df4e:	4353      	muls	r3, r2
 801df50:	fb09 330c 	mla	r3, r9, ip, r3
 801df54:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801df58:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801df5c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801df60:	ea4c 0e0e 	orr.w	lr, ip, lr
 801df64:	f1c1 0c10 	rsb	ip, r1, #16
 801df68:	ebac 0c00 	sub.w	ip, ip, r0
 801df6c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801df70:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801df74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801df76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801df78:	0418      	lsls	r0, r3, #16
 801df7a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801df7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801df82:	4318      	orrs	r0, r3
 801df84:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801df88:	fb02 c200 	mla	r2, r2, r0, ip
 801df8c:	0d53      	lsrs	r3, r2, #21
 801df8e:	0952      	lsrs	r2, r2, #5
 801df90:	8838      	ldrh	r0, [r7, #0]
 801df92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801df96:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801df9a:	431a      	orrs	r2, r3
 801df9c:	b292      	uxth	r2, r2
 801df9e:	1201      	asrs	r1, r0, #8
 801dfa0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801dfa4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801dfa8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801dfac:	fb11 f104 	smulbb	r1, r1, r4
 801dfb0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801dfb4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dfb8:	00c0      	lsls	r0, r0, #3
 801dfba:	fb0c 1c03 	mla	ip, ip, r3, r1
 801dfbe:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801dfc2:	10d1      	asrs	r1, r2, #3
 801dfc4:	b2c0      	uxtb	r0, r0
 801dfc6:	00d2      	lsls	r2, r2, #3
 801dfc8:	b2d2      	uxtb	r2, r2
 801dfca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dfce:	fb1e fe04 	smulbb	lr, lr, r4
 801dfd2:	fb10 f004 	smulbb	r0, r0, r4
 801dfd6:	fa1f fc8c 	uxth.w	ip, ip
 801dfda:	fb01 e103 	mla	r1, r1, r3, lr
 801dfde:	fb02 0303 	mla	r3, r2, r3, r0
 801dfe2:	b29a      	uxth	r2, r3
 801dfe4:	f10c 0301 	add.w	r3, ip, #1
 801dfe8:	b289      	uxth	r1, r1
 801dfea:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801dfee:	1c53      	adds	r3, r2, #1
 801dff0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dff4:	1c4a      	adds	r2, r1, #1
 801dff6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801dffa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dffe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e002:	0949      	lsrs	r1, r1, #5
 801e004:	ea43 030c 	orr.w	r3, r3, ip
 801e008:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e00c:	430b      	orrs	r3, r1
 801e00e:	803b      	strh	r3, [r7, #0]
 801e010:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e012:	449a      	add	sl, r3
 801e014:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e016:	3702      	adds	r7, #2
 801e018:	441d      	add	r5, r3
 801e01a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e01e:	e742      	b.n	801dea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e020:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e022:	449a      	add	sl, r3
 801e024:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e026:	441d      	add	r5, r3
 801e028:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e02a:	3b01      	subs	r3, #1
 801e02c:	9309      	str	r3, [sp, #36]	; 0x24
 801e02e:	f108 0802 	add.w	r8, r8, #2
 801e032:	e718      	b.n	801de66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801e034:	d023      	beq.n	801e07e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e036:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e038:	9825      	ldr	r0, [sp, #148]	; 0x94
 801e03a:	3b01      	subs	r3, #1
 801e03c:	fb00 a003 	mla	r0, r0, r3, sl
 801e040:	1400      	asrs	r0, r0, #16
 801e042:	f53f af2d 	bmi.w	801dea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e046:	3901      	subs	r1, #1
 801e048:	4288      	cmp	r0, r1
 801e04a:	f6bf af29 	bge.w	801dea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e04e:	9926      	ldr	r1, [sp, #152]	; 0x98
 801e050:	fb01 5303 	mla	r3, r1, r3, r5
 801e054:	141b      	asrs	r3, r3, #16
 801e056:	f53f af23 	bmi.w	801dea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e05a:	3a01      	subs	r2, #1
 801e05c:	4293      	cmp	r3, r2
 801e05e:	f6bf af1f 	bge.w	801dea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e062:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801e066:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801e06a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801e06e:	f1be 0f00 	cmp.w	lr, #0
 801e072:	dc6c      	bgt.n	801e14e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e074:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e076:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e07a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e07e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e080:	2b00      	cmp	r3, #0
 801e082:	f340 810e 	ble.w	801e2a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e086:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e08a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e08e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e092:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e094:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e098:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e09c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e0a0:	eef0 6a62 	vmov.f32	s13, s5
 801e0a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e0a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e0b0:	ee16 aa90 	vmov	sl, s13
 801e0b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e0b8:	eef0 6a43 	vmov.f32	s13, s6
 801e0bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e0c0:	ee12 2a90 	vmov	r2, s5
 801e0c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e0c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0cc:	ee13 2a10 	vmov	r2, s6
 801e0d0:	9325      	str	r3, [sp, #148]	; 0x94
 801e0d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e0d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0d8:	9326      	str	r3, [sp, #152]	; 0x98
 801e0da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e0dc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801e0de:	3b01      	subs	r3, #1
 801e0e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0e4:	930c      	str	r3, [sp, #48]	; 0x30
 801e0e6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e0e8:	bf08      	it	eq
 801e0ea:	4613      	moveq	r3, r2
 801e0ec:	ee16 5a90 	vmov	r5, s13
 801e0f0:	9309      	str	r3, [sp, #36]	; 0x24
 801e0f2:	eeb0 3a67 	vmov.f32	s6, s15
 801e0f6:	eef0 2a47 	vmov.f32	s5, s14
 801e0fa:	e6a6      	b.n	801de4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e0fc:	2900      	cmp	r1, #0
 801e0fe:	f43f af10 	beq.w	801df22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e102:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e106:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e10a:	930f      	str	r3, [sp, #60]	; 0x3c
 801e10c:	e709      	b.n	801df22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e10e:	f112 0901 	adds.w	r9, r2, #1
 801e112:	f53f af7d 	bmi.w	801e010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e116:	454b      	cmp	r3, r9
 801e118:	f6ff af7a 	blt.w	801e010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e11c:	f11c 0901 	adds.w	r9, ip, #1
 801e120:	f53f af76 	bmi.w	801e010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e124:	45ce      	cmp	lr, r9
 801e126:	f6ff af73 	blt.w	801e010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e12a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e12c:	9202      	str	r2, [sp, #8]
 801e12e:	b21b      	sxth	r3, r3
 801e130:	fa0f f28e 	sxth.w	r2, lr
 801e134:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e138:	e9cd c003 	strd	ip, r0, [sp, #12]
 801e13c:	9201      	str	r2, [sp, #4]
 801e13e:	9300      	str	r3, [sp, #0]
 801e140:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e142:	9816      	ldr	r0, [sp, #88]	; 0x58
 801e144:	4633      	mov	r3, r6
 801e146:	4639      	mov	r1, r7
 801e148:	f7ff fd8e 	bl	801dc68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801e14c:	e760      	b.n	801e010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e14e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e150:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e152:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e156:	ea4f 422a 	mov.w	r2, sl, asr #16
 801e15a:	1429      	asrs	r1, r5, #16
 801e15c:	fb03 2101 	mla	r1, r3, r1, r2
 801e160:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e162:	440a      	add	r2, r1
 801e164:	5c61      	ldrb	r1, [r4, r1]
 801e166:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801e16a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e16e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801e172:	f1bc 0f00 	cmp.w	ip, #0
 801e176:	f000 808c 	beq.w	801e292 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801e17a:	7857      	ldrb	r7, [r2, #1]
 801e17c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801e180:	9413      	str	r4, [sp, #76]	; 0x4c
 801e182:	b140      	cbz	r0, 801e196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e184:	18d7      	adds	r7, r2, r3
 801e186:	5cd3      	ldrb	r3, [r2, r3]
 801e188:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e18c:	9310      	str	r3, [sp, #64]	; 0x40
 801e18e:	787b      	ldrb	r3, [r7, #1]
 801e190:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e194:	9314      	str	r3, [sp, #80]	; 0x50
 801e196:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e198:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e19a:	fb1c f200 	smulbb	r2, ip, r0
 801e19e:	041f      	lsls	r7, r3, #16
 801e1a0:	10d2      	asrs	r2, r2, #3
 801e1a2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e1a6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801e1aa:	431f      	orrs	r7, r3
 801e1ac:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801e1b0:	9317      	str	r3, [sp, #92]	; 0x5c
 801e1b2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e1b4:	041b      	lsls	r3, r3, #16
 801e1b6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801e1ba:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e1be:	ea43 030b 	orr.w	r3, r3, fp
 801e1c2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801e1c4:	4353      	muls	r3, r2
 801e1c6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e1ca:	fb04 3707 	mla	r7, r4, r7, r3
 801e1ce:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e1d2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801e1d6:	ea43 0b01 	orr.w	fp, r3, r1
 801e1da:	f1c0 0110 	rsb	r1, r0, #16
 801e1de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e1e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e1e2:	eba1 0c0c 	sub.w	ip, r1, ip
 801e1e6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e1ea:	fb0c 770b 	mla	r7, ip, fp, r7
 801e1ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e1f2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801e1f6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e1fa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801e1fe:	ea4c 0c0b 	orr.w	ip, ip, fp
 801e202:	fb02 770c 	mla	r7, r2, ip, r7
 801e206:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e208:	0d79      	lsrs	r1, r7, #21
 801e20a:	097f      	lsrs	r7, r7, #5
 801e20c:	8812      	ldrh	r2, [r2, #0]
 801e20e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e212:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e216:	430f      	orrs	r7, r1
 801e218:	b2bb      	uxth	r3, r7
 801e21a:	1211      	asrs	r1, r2, #8
 801e21c:	1218      	asrs	r0, r3, #8
 801e21e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e222:	fb11 f104 	smulbb	r1, r1, r4
 801e226:	10d7      	asrs	r7, r2, #3
 801e228:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e22c:	00d2      	lsls	r2, r2, #3
 801e22e:	fb00 1009 	mla	r0, r0, r9, r1
 801e232:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e236:	10d9      	asrs	r1, r3, #3
 801e238:	b2d2      	uxtb	r2, r2
 801e23a:	00db      	lsls	r3, r3, #3
 801e23c:	fb17 f704 	smulbb	r7, r7, r4
 801e240:	fb12 f204 	smulbb	r2, r2, r4
 801e244:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e248:	b2db      	uxtb	r3, r3
 801e24a:	b280      	uxth	r0, r0
 801e24c:	fb01 7109 	mla	r1, r1, r9, r7
 801e250:	fb03 2309 	mla	r3, r3, r9, r2
 801e254:	b29b      	uxth	r3, r3
 801e256:	b289      	uxth	r1, r1
 801e258:	1c42      	adds	r2, r0, #1
 801e25a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e25e:	1c4f      	adds	r7, r1, #1
 801e260:	1c5a      	adds	r2, r3, #1
 801e262:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e266:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801e26a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e26e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e272:	0949      	lsrs	r1, r1, #5
 801e274:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e276:	4310      	orrs	r0, r2
 801e278:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e27c:	4308      	orrs	r0, r1
 801e27e:	f823 0b02 	strh.w	r0, [r3], #2
 801e282:	930e      	str	r3, [sp, #56]	; 0x38
 801e284:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e286:	449a      	add	sl, r3
 801e288:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e28a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801e28e:	441d      	add	r5, r3
 801e290:	e6ed      	b.n	801e06e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801e292:	2800      	cmp	r0, #0
 801e294:	f43f af7f 	beq.w	801e196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e298:	5cd3      	ldrb	r3, [r2, r3]
 801e29a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e29e:	9310      	str	r3, [sp, #64]	; 0x40
 801e2a0:	e779      	b.n	801e196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e2a2:	b019      	add	sp, #100	; 0x64
 801e2a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e2a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801e2a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e2ac:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801e2b0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801e2b4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801e2b8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801e2bc:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801e2c0:	8808      	ldrh	r0, [r1, #0]
 801e2c2:	fb08 470e 	mla	r7, r8, lr, r4
 801e2c6:	f1b8 0f00 	cmp.w	r8, #0
 801e2ca:	eb02 0907 	add.w	r9, r2, r7
 801e2ce:	db67      	blt.n	801e3a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e2d0:	45c2      	cmp	sl, r8
 801e2d2:	dd65      	ble.n	801e3a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e2d4:	2c00      	cmp	r4, #0
 801e2d6:	db61      	blt.n	801e39c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e2d8:	45a6      	cmp	lr, r4
 801e2da:	dd5f      	ble.n	801e39c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e2dc:	5dd2      	ldrb	r2, [r2, r7]
 801e2de:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e2e2:	1c62      	adds	r2, r4, #1
 801e2e4:	d45f      	bmi.n	801e3a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e2e6:	4596      	cmp	lr, r2
 801e2e8:	dd5d      	ble.n	801e3a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e2ea:	2d00      	cmp	r5, #0
 801e2ec:	d05b      	beq.n	801e3a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e2ee:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e2f2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801e2f6:	f118 0801 	adds.w	r8, r8, #1
 801e2fa:	d458      	bmi.n	801e3ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e2fc:	45c2      	cmp	sl, r8
 801e2fe:	dd56      	ble.n	801e3ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e300:	2e00      	cmp	r6, #0
 801e302:	d054      	beq.n	801e3ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e304:	2c00      	cmp	r4, #0
 801e306:	db50      	blt.n	801e3aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e308:	45a6      	cmp	lr, r4
 801e30a:	dd4e      	ble.n	801e3aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e30c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801e310:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801e314:	3401      	adds	r4, #1
 801e316:	d407      	bmi.n	801e328 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e318:	45a6      	cmp	lr, r4
 801e31a:	dd05      	ble.n	801e328 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e31c:	b125      	cbz	r5, 801e328 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e31e:	44ce      	add	lr, r9
 801e320:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801e324:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801e328:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e32c:	fb15 f406 	smulbb	r4, r5, r6
 801e330:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e334:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e338:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e33c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e340:	ea43 0c0c 	orr.w	ip, r3, ip
 801e344:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801e348:	f1c6 0310 	rsb	r3, r6, #16
 801e34c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e350:	1b5b      	subs	r3, r3, r5
 801e352:	ea4e 0707 	orr.w	r7, lr, r7
 801e356:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e35a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e35e:	437d      	muls	r5, r7
 801e360:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e364:	0403      	lsls	r3, r0, #16
 801e366:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e36a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e36e:	4318      	orrs	r0, r3
 801e370:	0413      	lsls	r3, r2, #16
 801e372:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e376:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e37a:	4313      	orrs	r3, r2
 801e37c:	fb04 c000 	mla	r0, r4, r0, ip
 801e380:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e384:	fb06 0003 	mla	r0, r6, r3, r0
 801e388:	0d43      	lsrs	r3, r0, #21
 801e38a:	0940      	lsrs	r0, r0, #5
 801e38c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e390:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e394:	4318      	orrs	r0, r3
 801e396:	8008      	strh	r0, [r1, #0]
 801e398:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e39c:	4684      	mov	ip, r0
 801e39e:	e7a0      	b.n	801e2e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801e3a0:	4607      	mov	r7, r0
 801e3a2:	4684      	mov	ip, r0
 801e3a4:	e7a7      	b.n	801e2f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801e3a6:	4607      	mov	r7, r0
 801e3a8:	e7a5      	b.n	801e2f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801e3aa:	4602      	mov	r2, r0
 801e3ac:	e7b2      	b.n	801e314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801e3ae:	4602      	mov	r2, r0
 801e3b0:	e7ba      	b.n	801e328 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801e3b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e3b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3b6:	b093      	sub	sp, #76	; 0x4c
 801e3b8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801e3bc:	920f      	str	r2, [sp, #60]	; 0x3c
 801e3be:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e3c0:	9108      	str	r1, [sp, #32]
 801e3c2:	9306      	str	r3, [sp, #24]
 801e3c4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801e3c8:	9010      	str	r0, [sp, #64]	; 0x40
 801e3ca:	6850      	ldr	r0, [r2, #4]
 801e3cc:	6812      	ldr	r2, [r2, #0]
 801e3ce:	fb00 1303 	mla	r3, r0, r3, r1
 801e3d2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e3d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e3d8:	681b      	ldr	r3, [r3, #0]
 801e3da:	9307      	str	r3, [sp, #28]
 801e3dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e3de:	685f      	ldr	r7, [r3, #4]
 801e3e0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e3e4:	3704      	adds	r7, #4
 801e3e6:	9b08      	ldr	r3, [sp, #32]
 801e3e8:	2b00      	cmp	r3, #0
 801e3ea:	dc03      	bgt.n	801e3f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801e3ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e3ee:	2b00      	cmp	r3, #0
 801e3f0:	f340 81b2 	ble.w	801e758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801e3f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e3f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e3fa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e3fe:	1e48      	subs	r0, r1, #1
 801e400:	f102 3cff 	add.w	ip, r2, #4294967295
 801e404:	9b06      	ldr	r3, [sp, #24]
 801e406:	2b00      	cmp	r3, #0
 801e408:	f340 80a9 	ble.w	801e55e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801e40c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e410:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e414:	d406      	bmi.n	801e424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e416:	4586      	cmp	lr, r0
 801e418:	da04      	bge.n	801e424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e41a:	2b00      	cmp	r3, #0
 801e41c:	db02      	blt.n	801e424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e41e:	4563      	cmp	r3, ip
 801e420:	f2c0 809e 	blt.w	801e560 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e424:	f11e 0e01 	adds.w	lr, lr, #1
 801e428:	f100 808f 	bmi.w	801e54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e42c:	4571      	cmp	r1, lr
 801e42e:	f2c0 808c 	blt.w	801e54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e432:	3301      	adds	r3, #1
 801e434:	f100 8089 	bmi.w	801e54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e438:	429a      	cmp	r2, r3
 801e43a:	f2c0 8086 	blt.w	801e54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e43e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801e442:	46c8      	mov	r8, r9
 801e444:	f1bb 0f00 	cmp.w	fp, #0
 801e448:	f340 80a6 	ble.w	801e598 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801e44c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801e44e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e450:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e454:	689b      	ldr	r3, [r3, #8]
 801e456:	1422      	asrs	r2, r4, #16
 801e458:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e45c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e460:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e464:	f100 80e3 	bmi.w	801e62e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e468:	f103 3aff 	add.w	sl, r3, #4294967295
 801e46c:	4552      	cmp	r2, sl
 801e46e:	f280 80de 	bge.w	801e62e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e472:	f1bc 0f00 	cmp.w	ip, #0
 801e476:	f2c0 80da 	blt.w	801e62e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e47a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e47e:	45d4      	cmp	ip, sl
 801e480:	f280 80d5 	bge.w	801e62e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e484:	b21b      	sxth	r3, r3
 801e486:	fb0c 2203 	mla	r2, ip, r3, r2
 801e48a:	9d07      	ldr	r5, [sp, #28]
 801e48c:	eb05 0a02 	add.w	sl, r5, r2
 801e490:	5caa      	ldrb	r2, [r5, r2]
 801e492:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801e496:	2800      	cmp	r0, #0
 801e498:	f000 80c0 	beq.w	801e61c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801e49c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e4a0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801e4a4:	920b      	str	r2, [sp, #44]	; 0x2c
 801e4a6:	b151      	cbz	r1, 801e4be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801e4a8:	eb0a 0203 	add.w	r2, sl, r3
 801e4ac:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801e4b0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801e4b4:	9309      	str	r3, [sp, #36]	; 0x24
 801e4b6:	7853      	ldrb	r3, [r2, #1]
 801e4b8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801e4bc:	930c      	str	r3, [sp, #48]	; 0x30
 801e4be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e4c0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e4c2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e4c6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e4ca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e4ce:	ea4c 0c03 	orr.w	ip, ip, r3
 801e4d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e4d4:	041b      	lsls	r3, r3, #16
 801e4d6:	fb10 f201 	smulbb	r2, r0, r1
 801e4da:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e4de:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e4e2:	10d2      	asrs	r2, r2, #3
 801e4e4:	432b      	orrs	r3, r5
 801e4e6:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801e4ea:	4353      	muls	r3, r2
 801e4ec:	fb0a 330c 	mla	r3, sl, ip, r3
 801e4f0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e4f4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e4f8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e4fc:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e500:	f1c1 0c10 	rsb	ip, r1, #16
 801e504:	ebac 0c00 	sub.w	ip, ip, r0
 801e508:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e50c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e510:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e512:	0418      	lsls	r0, r3, #16
 801e514:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e518:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e51c:	4318      	orrs	r0, r3
 801e51e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e522:	fb02 c200 	mla	r2, r2, r0, ip
 801e526:	0d53      	lsrs	r3, r2, #21
 801e528:	0952      	lsrs	r2, r2, #5
 801e52a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e52e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e532:	431a      	orrs	r2, r3
 801e534:	f8a8 2000 	strh.w	r2, [r8]
 801e538:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e53a:	441c      	add	r4, r3
 801e53c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e53e:	f108 0802 	add.w	r8, r8, #2
 801e542:	441e      	add	r6, r3
 801e544:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e548:	e77c      	b.n	801e444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e54a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e54c:	441c      	add	r4, r3
 801e54e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e550:	441e      	add	r6, r3
 801e552:	9b06      	ldr	r3, [sp, #24]
 801e554:	3b01      	subs	r3, #1
 801e556:	9306      	str	r3, [sp, #24]
 801e558:	f109 0902 	add.w	r9, r9, #2
 801e55c:	e752      	b.n	801e404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e55e:	d020      	beq.n	801e5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801e560:	9b06      	ldr	r3, [sp, #24]
 801e562:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e564:	3b01      	subs	r3, #1
 801e566:	fb00 4003 	mla	r0, r0, r3, r4
 801e56a:	1400      	asrs	r0, r0, #16
 801e56c:	f53f af67 	bmi.w	801e43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e570:	3901      	subs	r1, #1
 801e572:	4288      	cmp	r0, r1
 801e574:	f6bf af63 	bge.w	801e43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e578:	9920      	ldr	r1, [sp, #128]	; 0x80
 801e57a:	fb01 6303 	mla	r3, r1, r3, r6
 801e57e:	141b      	asrs	r3, r3, #16
 801e580:	f53f af5d 	bmi.w	801e43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e584:	3a01      	subs	r2, #1
 801e586:	4293      	cmp	r3, r2
 801e588:	f6bf af59 	bge.w	801e43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e58c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801e590:	46ca      	mov	sl, r9
 801e592:	f1b8 0f00 	cmp.w	r8, #0
 801e596:	dc67      	bgt.n	801e668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801e598:	9b06      	ldr	r3, [sp, #24]
 801e59a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e59e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801e5a2:	9b08      	ldr	r3, [sp, #32]
 801e5a4:	2b00      	cmp	r3, #0
 801e5a6:	f340 80d7 	ble.w	801e758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801e5aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e5ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e5b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e5b6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e5b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e5bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e5c0:	eeb0 6a62 	vmov.f32	s12, s5
 801e5c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e5c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e5cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e5d0:	ee16 4a10 	vmov	r4, s12
 801e5d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e5d8:	eeb0 6a43 	vmov.f32	s12, s6
 801e5dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e5e0:	ee12 2a90 	vmov	r2, s5
 801e5e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e5e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5ec:	ee13 2a10 	vmov	r2, s6
 801e5f0:	931f      	str	r3, [sp, #124]	; 0x7c
 801e5f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e5f4:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5f8:	9320      	str	r3, [sp, #128]	; 0x80
 801e5fa:	9b08      	ldr	r3, [sp, #32]
 801e5fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e5fe:	3b01      	subs	r3, #1
 801e600:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e604:	9308      	str	r3, [sp, #32]
 801e606:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e608:	bf08      	it	eq
 801e60a:	4613      	moveq	r3, r2
 801e60c:	ee16 6a10 	vmov	r6, s12
 801e610:	9306      	str	r3, [sp, #24]
 801e612:	eeb0 3a67 	vmov.f32	s6, s15
 801e616:	eef0 2a47 	vmov.f32	s5, s14
 801e61a:	e6e4      	b.n	801e3e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801e61c:	2900      	cmp	r1, #0
 801e61e:	f43f af4e 	beq.w	801e4be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801e622:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801e626:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801e62a:	9309      	str	r3, [sp, #36]	; 0x24
 801e62c:	e747      	b.n	801e4be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801e62e:	f112 0a01 	adds.w	sl, r2, #1
 801e632:	d481      	bmi.n	801e538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e634:	4553      	cmp	r3, sl
 801e636:	f6ff af7f 	blt.w	801e538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e63a:	f11c 0a01 	adds.w	sl, ip, #1
 801e63e:	f53f af7b 	bmi.w	801e538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e642:	45d6      	cmp	lr, sl
 801e644:	f6ff af78 	blt.w	801e538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e648:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801e64c:	b21b      	sxth	r3, r3
 801e64e:	fa0f f28e 	sxth.w	r2, lr
 801e652:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801e656:	9201      	str	r2, [sp, #4]
 801e658:	9300      	str	r3, [sp, #0]
 801e65a:	9a07      	ldr	r2, [sp, #28]
 801e65c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e65e:	463b      	mov	r3, r7
 801e660:	4641      	mov	r1, r8
 801e662:	f7ff fe21 	bl	801e2a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801e666:	e767      	b.n	801e538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e668:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e66a:	9d07      	ldr	r5, [sp, #28]
 801e66c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e670:	1422      	asrs	r2, r4, #16
 801e672:	1431      	asrs	r1, r6, #16
 801e674:	fb03 2101 	mla	r1, r3, r1, r2
 801e678:	9a07      	ldr	r2, [sp, #28]
 801e67a:	440a      	add	r2, r1
 801e67c:	5c69      	ldrb	r1, [r5, r1]
 801e67e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801e682:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e686:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801e68a:	f1be 0f00 	cmp.w	lr, #0
 801e68e:	d05c      	beq.n	801e74a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801e690:	f892 c001 	ldrb.w	ip, [r2, #1]
 801e694:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801e698:	950d      	str	r5, [sp, #52]	; 0x34
 801e69a:	b150      	cbz	r0, 801e6b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801e69c:	eb02 0c03 	add.w	ip, r2, r3
 801e6a0:	5cd3      	ldrb	r3, [r2, r3]
 801e6a2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801e6a6:	930a      	str	r3, [sp, #40]	; 0x28
 801e6a8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801e6ac:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801e6b0:	930e      	str	r3, [sp, #56]	; 0x38
 801e6b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e6b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e6b6:	fb1e f200 	smulbb	r2, lr, r0
 801e6ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e6be:	10d2      	asrs	r2, r2, #3
 801e6c0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e6c4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e6c8:	ea4c 0c03 	orr.w	ip, ip, r3
 801e6cc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801e6d0:	9311      	str	r3, [sp, #68]	; 0x44
 801e6d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e6d4:	041b      	lsls	r3, r3, #16
 801e6d6:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801e6da:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e6de:	ea43 030b 	orr.w	r3, r3, fp
 801e6e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e6e4:	4353      	muls	r3, r2
 801e6e6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e6ea:	fb05 3c0c 	mla	ip, r5, ip, r3
 801e6ee:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e6f2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801e6f6:	ea43 0b01 	orr.w	fp, r3, r1
 801e6fa:	f1c0 0110 	rsb	r1, r0, #16
 801e6fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e700:	eba1 0e0e 	sub.w	lr, r1, lr
 801e704:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801e708:	fb0e cc0b 	mla	ip, lr, fp, ip
 801e70c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801e710:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801e714:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e718:	ea4b 0e0e 	orr.w	lr, fp, lr
 801e71c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801e720:	fb02 cc0e 	mla	ip, r2, lr, ip
 801e724:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801e728:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e72c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e730:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e734:	ea43 0c0c 	orr.w	ip, r3, ip
 801e738:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e73a:	f82a cb02 	strh.w	ip, [sl], #2
 801e73e:	441c      	add	r4, r3
 801e740:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e742:	f108 38ff 	add.w	r8, r8, #4294967295
 801e746:	441e      	add	r6, r3
 801e748:	e723      	b.n	801e592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801e74a:	2800      	cmp	r0, #0
 801e74c:	d0b1      	beq.n	801e6b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801e74e:	5cd3      	ldrb	r3, [r2, r3]
 801e750:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801e754:	930a      	str	r3, [sp, #40]	; 0x28
 801e756:	e7ac      	b.n	801e6b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801e758:	b013      	add	sp, #76	; 0x4c
 801e75a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e75e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801e75e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e762:	880d      	ldrh	r5, [r1, #0]
 801e764:	b087      	sub	sp, #28
 801e766:	10ef      	asrs	r7, r5, #3
 801e768:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801e76c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e770:	00ed      	lsls	r5, r5, #3
 801e772:	9701      	str	r7, [sp, #4]
 801e774:	b2ed      	uxtb	r5, r5
 801e776:	9502      	str	r5, [sp, #8]
 801e778:	9d01      	ldr	r5, [sp, #4]
 801e77a:	9103      	str	r1, [sp, #12]
 801e77c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801e780:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801e784:	9902      	ldr	r1, [sp, #8]
 801e786:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801e78a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801e78e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801e792:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801e796:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801e79a:	022d      	lsls	r5, r5, #8
 801e79c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801e7a0:	fb06 0709 	mla	r7, r6, r9, r0
 801e7a4:	430d      	orrs	r5, r1
 801e7a6:	2e00      	cmp	r6, #0
 801e7a8:	eb02 0c07 	add.w	ip, r2, r7
 801e7ac:	9505      	str	r5, [sp, #20]
 801e7ae:	f2c0 80b6 	blt.w	801e91e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801e7b2:	45b3      	cmp	fp, r6
 801e7b4:	f340 80b3 	ble.w	801e91e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801e7b8:	2800      	cmp	r0, #0
 801e7ba:	f2c0 80ae 	blt.w	801e91a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801e7be:	4581      	cmp	r9, r0
 801e7c0:	f340 80ab 	ble.w	801e91a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801e7c4:	5dd7      	ldrb	r7, [r2, r7]
 801e7c6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e7ca:	441f      	add	r7, r3
 801e7cc:	1c42      	adds	r2, r0, #1
 801e7ce:	f100 80a9 	bmi.w	801e924 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801e7d2:	4591      	cmp	r9, r2
 801e7d4:	f340 80a6 	ble.w	801e924 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801e7d8:	2c00      	cmp	r4, #0
 801e7da:	f000 80a3 	beq.w	801e924 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801e7de:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801e7e2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e7e6:	441d      	add	r5, r3
 801e7e8:	3601      	adds	r6, #1
 801e7ea:	f100 809f 	bmi.w	801e92c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801e7ee:	45b3      	cmp	fp, r6
 801e7f0:	f340 809c 	ble.w	801e92c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801e7f4:	f1be 0f00 	cmp.w	lr, #0
 801e7f8:	f000 8098 	beq.w	801e92c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801e7fc:	2800      	cmp	r0, #0
 801e7fe:	f2c0 8093 	blt.w	801e928 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801e802:	4581      	cmp	r9, r0
 801e804:	f340 8090 	ble.w	801e928 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801e808:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801e80c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e810:	441e      	add	r6, r3
 801e812:	3001      	adds	r0, #1
 801e814:	f100 808d 	bmi.w	801e932 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801e818:	4581      	cmp	r9, r0
 801e81a:	f340 808a 	ble.w	801e932 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801e81e:	2c00      	cmp	r4, #0
 801e820:	f000 8087 	beq.w	801e932 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801e824:	44e1      	add	r9, ip
 801e826:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e82a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e82e:	4413      	add	r3, r2
 801e830:	b2a4      	uxth	r4, r4
 801e832:	fa1f fe8e 	uxth.w	lr, lr
 801e836:	fb04 fb0e 	mul.w	fp, r4, lr
 801e83a:	0124      	lsls	r4, r4, #4
 801e83c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801e840:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801e844:	eba4 040b 	sub.w	r4, r4, fp
 801e848:	fa1f f08e 	uxth.w	r0, lr
 801e84c:	b2a2      	uxth	r2, r4
 801e84e:	78ac      	ldrb	r4, [r5, #2]
 801e850:	f897 c002 	ldrb.w	ip, [r7, #2]
 801e854:	9901      	ldr	r1, [sp, #4]
 801e856:	eba9 0900 	sub.w	r9, r9, r0
 801e85a:	fa1f f989 	uxth.w	r9, r9
 801e85e:	4354      	muls	r4, r2
 801e860:	fb09 440c 	mla	r4, r9, ip, r4
 801e864:	f896 c002 	ldrb.w	ip, [r6, #2]
 801e868:	fb00 440c 	mla	r4, r0, ip, r4
 801e86c:	f893 c002 	ldrb.w	ip, [r3, #2]
 801e870:	fa1f fe88 	uxth.w	lr, r8
 801e874:	ea6f 0808 	mvn.w	r8, r8
 801e878:	fa5f f888 	uxtb.w	r8, r8
 801e87c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801e880:	fb1a fa08 	smulbb	sl, sl, r8
 801e884:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801e888:	fb0c ac0e 	mla	ip, ip, lr, sl
 801e88c:	f895 a001 	ldrb.w	sl, [r5, #1]
 801e890:	787c      	ldrb	r4, [r7, #1]
 801e892:	782d      	ldrb	r5, [r5, #0]
 801e894:	783f      	ldrb	r7, [r7, #0]
 801e896:	fb02 fa0a 	mul.w	sl, r2, sl
 801e89a:	fb09 aa04 	mla	sl, r9, r4, sl
 801e89e:	7874      	ldrb	r4, [r6, #1]
 801e8a0:	436a      	muls	r2, r5
 801e8a2:	7835      	ldrb	r5, [r6, #0]
 801e8a4:	fb00 aa04 	mla	sl, r0, r4, sl
 801e8a8:	fb09 2207 	mla	r2, r9, r7, r2
 801e8ac:	785c      	ldrb	r4, [r3, #1]
 801e8ae:	781b      	ldrb	r3, [r3, #0]
 801e8b0:	fb00 2005 	mla	r0, r0, r5, r2
 801e8b4:	fb0b a404 	mla	r4, fp, r4, sl
 801e8b8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801e8bc:	9b02      	ldr	r3, [sp, #8]
 801e8be:	fb11 fa08 	smulbb	sl, r1, r8
 801e8c2:	fa1f fc8c 	uxth.w	ip, ip
 801e8c6:	fb13 f808 	smulbb	r8, r3, r8
 801e8ca:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801e8ce:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801e8d2:	fb04 a40e 	mla	r4, r4, lr, sl
 801e8d6:	f10c 0301 	add.w	r3, ip, #1
 801e8da:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801e8de:	fa1f fe8e 	uxth.w	lr, lr
 801e8e2:	b2a4      	uxth	r4, r4
 801e8e4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e8e8:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801e8ec:	f104 0a01 	add.w	sl, r4, #1
 801e8f0:	f10e 0c01 	add.w	ip, lr, #1
 801e8f4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e8f8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e8fc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e900:	0964      	lsrs	r4, r4, #5
 801e902:	ea4c 0c03 	orr.w	ip, ip, r3
 801e906:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e90a:	9b03      	ldr	r3, [sp, #12]
 801e90c:	ea4c 0c04 	orr.w	ip, ip, r4
 801e910:	f8a3 c000 	strh.w	ip, [r3]
 801e914:	b007      	add	sp, #28
 801e916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e91a:	af05      	add	r7, sp, #20
 801e91c:	e756      	b.n	801e7cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801e91e:	ad05      	add	r5, sp, #20
 801e920:	462f      	mov	r7, r5
 801e922:	e761      	b.n	801e7e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801e924:	ad05      	add	r5, sp, #20
 801e926:	e75f      	b.n	801e7e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801e928:	ae05      	add	r6, sp, #20
 801e92a:	e772      	b.n	801e812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801e92c:	ab05      	add	r3, sp, #20
 801e92e:	461e      	mov	r6, r3
 801e930:	e77e      	b.n	801e830 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801e932:	ab05      	add	r3, sp, #20
 801e934:	e77c      	b.n	801e830 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801e936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e936:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e93a:	b095      	sub	sp, #84	; 0x54
 801e93c:	9212      	str	r2, [sp, #72]	; 0x48
 801e93e:	9309      	str	r3, [sp, #36]	; 0x24
 801e940:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801e942:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801e946:	930f      	str	r3, [sp, #60]	; 0x3c
 801e948:	910e      	str	r1, [sp, #56]	; 0x38
 801e94a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801e94e:	9013      	str	r0, [sp, #76]	; 0x4c
 801e950:	6850      	ldr	r0, [r2, #4]
 801e952:	6812      	ldr	r2, [r2, #0]
 801e954:	fb00 1303 	mla	r3, r0, r3, r1
 801e958:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e95c:	930a      	str	r3, [sp, #40]	; 0x28
 801e95e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e960:	681b      	ldr	r3, [r3, #0]
 801e962:	930d      	str	r3, [sp, #52]	; 0x34
 801e964:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e966:	685c      	ldr	r4, [r3, #4]
 801e968:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e96a:	43db      	mvns	r3, r3
 801e96c:	b2db      	uxtb	r3, r3
 801e96e:	3404      	adds	r4, #4
 801e970:	930b      	str	r3, [sp, #44]	; 0x2c
 801e972:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e974:	2b00      	cmp	r3, #0
 801e976:	dc03      	bgt.n	801e980 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e978:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e97a:	2b00      	cmp	r3, #0
 801e97c:	f340 8255 	ble.w	801ee2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801e980:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e982:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e986:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e98a:	1e48      	subs	r0, r1, #1
 801e98c:	1e55      	subs	r5, r2, #1
 801e98e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e990:	2b00      	cmp	r3, #0
 801e992:	f340 80f9 	ble.w	801eb88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801e996:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801e998:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e99a:	1436      	asrs	r6, r6, #16
 801e99c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e9a0:	d406      	bmi.n	801e9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e9a2:	4286      	cmp	r6, r0
 801e9a4:	da04      	bge.n	801e9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e9a6:	2b00      	cmp	r3, #0
 801e9a8:	db02      	blt.n	801e9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e9aa:	42ab      	cmp	r3, r5
 801e9ac:	f2c0 80ed 	blt.w	801eb8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801e9b0:	3601      	adds	r6, #1
 801e9b2:	f100 80da 	bmi.w	801eb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e9b6:	42b1      	cmp	r1, r6
 801e9b8:	f2c0 80d7 	blt.w	801eb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e9bc:	3301      	adds	r3, #1
 801e9be:	f100 80d4 	bmi.w	801eb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e9c2:	429a      	cmp	r2, r3
 801e9c4:	f2c0 80d1 	blt.w	801eb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e9c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9ca:	9311      	str	r3, [sp, #68]	; 0x44
 801e9cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e9ce:	930c      	str	r3, [sp, #48]	; 0x30
 801e9d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e9d2:	2b00      	cmp	r3, #0
 801e9d4:	f340 80fa 	ble.w	801ebcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801e9d8:	9826      	ldr	r0, [sp, #152]	; 0x98
 801e9da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e9dc:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e9de:	68c6      	ldr	r6, [r0, #12]
 801e9e0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e9e2:	141d      	asrs	r5, r3, #16
 801e9e4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801e9e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e9ea:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801e9ec:	1400      	asrs	r0, r0, #16
 801e9ee:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801e9f2:	6892      	ldr	r2, [r2, #8]
 801e9f4:	f100 813e 	bmi.w	801ec74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e9f8:	1e57      	subs	r7, r2, #1
 801e9fa:	42b8      	cmp	r0, r7
 801e9fc:	f280 813a 	bge.w	801ec74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ea00:	2d00      	cmp	r5, #0
 801ea02:	f2c0 8137 	blt.w	801ec74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ea06:	1e77      	subs	r7, r6, #1
 801ea08:	42bd      	cmp	r5, r7
 801ea0a:	f280 8133 	bge.w	801ec74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ea0e:	b212      	sxth	r2, r2
 801ea10:	fb05 0002 	mla	r0, r5, r2, r0
 801ea14:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ea16:	f815 a000 	ldrb.w	sl, [r5, r0]
 801ea1a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801ea1e:	182e      	adds	r6, r5, r0
 801ea20:	eb04 050a 	add.w	r5, r4, sl
 801ea24:	2b00      	cmp	r3, #0
 801ea26:	f000 8117 	beq.w	801ec58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801ea2a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801ea2e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801ea32:	44a4      	add	ip, r4
 801ea34:	2900      	cmp	r1, #0
 801ea36:	f000 8117 	beq.w	801ec68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801ea3a:	18b0      	adds	r0, r6, r2
 801ea3c:	5cb2      	ldrb	r2, [r6, r2]
 801ea3e:	7840      	ldrb	r0, [r0, #1]
 801ea40:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ea44:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ea48:	4422      	add	r2, r4
 801ea4a:	4420      	add	r0, r4
 801ea4c:	b29b      	uxth	r3, r3
 801ea4e:	b289      	uxth	r1, r1
 801ea50:	fb03 f901 	mul.w	r9, r3, r1
 801ea54:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ea58:	011b      	lsls	r3, r3, #4
 801ea5a:	b289      	uxth	r1, r1
 801ea5c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801ea60:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ea64:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801ea66:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801ea6a:	f8b6 e000 	ldrh.w	lr, [r6]
 801ea6e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801ea72:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801ea76:	eba3 0309 	sub.w	r3, r3, r9
 801ea7a:	b29b      	uxth	r3, r3
 801ea7c:	eba8 0801 	sub.w	r8, r8, r1
 801ea80:	fa1f f888 	uxth.w	r8, r8
 801ea84:	435f      	muls	r7, r3
 801ea86:	fb08 770b 	mla	r7, r8, fp, r7
 801ea8a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ea8e:	9310      	str	r3, [sp, #64]	; 0x40
 801ea90:	fb01 770b 	mla	r7, r1, fp, r7
 801ea94:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ea98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ea9a:	fb09 770b 	mla	r7, r9, fp, r7
 801ea9e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801eaa2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801eaa6:	fb1b fb03 	smulbb	fp, fp, r3
 801eaaa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801eaae:	fb07 b706 	mla	r7, r7, r6, fp
 801eab2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eab4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801eab8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801eabc:	f89c c000 	ldrb.w	ip, [ip]
 801eac0:	435d      	muls	r5, r3
 801eac2:	fb08 550b 	mla	r5, r8, fp, r5
 801eac6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801eaca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eacc:	fb01 550b 	mla	r5, r1, fp, r5
 801ead0:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ead4:	fb09 550b 	mla	r5, r9, fp, r5
 801ead8:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801eadc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801eae0:	fb1b fb03 	smulbb	fp, fp, r3
 801eae4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eae6:	fb03 f30c 	mul.w	r3, r3, ip
 801eaea:	f892 c000 	ldrb.w	ip, [r2]
 801eaee:	fb08 330a 	mla	r3, r8, sl, r3
 801eaf2:	fb01 330c 	mla	r3, r1, ip, r3
 801eaf6:	f890 c000 	ldrb.w	ip, [r0]
 801eafa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801eafe:	fb09 3c0c 	mla	ip, r9, ip, r3
 801eb02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eb04:	fa5f fe8e 	uxtb.w	lr, lr
 801eb08:	b2bf      	uxth	r7, r7
 801eb0a:	fb1e fe03 	smulbb	lr, lr, r3
 801eb0e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801eb12:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801eb16:	fb05 b506 	mla	r5, r5, r6, fp
 801eb1a:	1c7b      	adds	r3, r7, #1
 801eb1c:	fb0c e606 	mla	r6, ip, r6, lr
 801eb20:	b2ad      	uxth	r5, r5
 801eb22:	b2b6      	uxth	r6, r6
 801eb24:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801eb28:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801eb2c:	f105 0b01 	add.w	fp, r5, #1
 801eb30:	1c77      	adds	r7, r6, #1
 801eb32:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801eb36:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801eb3a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801eb3e:	096d      	lsrs	r5, r5, #5
 801eb40:	431f      	orrs	r7, r3
 801eb42:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801eb46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb48:	433d      	orrs	r5, r7
 801eb4a:	801d      	strh	r5, [r3, #0]
 801eb4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb4e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801eb50:	3302      	adds	r3, #2
 801eb52:	930c      	str	r3, [sp, #48]	; 0x30
 801eb54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801eb56:	4413      	add	r3, r2
 801eb58:	931f      	str	r3, [sp, #124]	; 0x7c
 801eb5a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801eb5c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eb5e:	4413      	add	r3, r2
 801eb60:	9320      	str	r3, [sp, #128]	; 0x80
 801eb62:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801eb64:	3b01      	subs	r3, #1
 801eb66:	9311      	str	r3, [sp, #68]	; 0x44
 801eb68:	e732      	b.n	801e9d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801eb6a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801eb6c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801eb6e:	4433      	add	r3, r6
 801eb70:	931f      	str	r3, [sp, #124]	; 0x7c
 801eb72:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801eb74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eb76:	4433      	add	r3, r6
 801eb78:	9320      	str	r3, [sp, #128]	; 0x80
 801eb7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb7c:	3b01      	subs	r3, #1
 801eb7e:	9309      	str	r3, [sp, #36]	; 0x24
 801eb80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eb82:	3302      	adds	r3, #2
 801eb84:	930a      	str	r3, [sp, #40]	; 0x28
 801eb86:	e702      	b.n	801e98e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801eb88:	d027      	beq.n	801ebda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801eb8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb8c:	9821      	ldr	r0, [sp, #132]	; 0x84
 801eb8e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801eb90:	3b01      	subs	r3, #1
 801eb92:	fb00 5003 	mla	r0, r0, r3, r5
 801eb96:	1400      	asrs	r0, r0, #16
 801eb98:	f53f af16 	bmi.w	801e9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801eb9c:	3901      	subs	r1, #1
 801eb9e:	4288      	cmp	r0, r1
 801eba0:	f6bf af12 	bge.w	801e9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801eba4:	9922      	ldr	r1, [sp, #136]	; 0x88
 801eba6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801eba8:	fb01 0303 	mla	r3, r1, r3, r0
 801ebac:	141b      	asrs	r3, r3, #16
 801ebae:	f53f af0b 	bmi.w	801e9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ebb2:	3a01      	subs	r2, #1
 801ebb4:	4293      	cmp	r3, r2
 801ebb6:	f6bf af07 	bge.w	801e9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ebba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ebbc:	9311      	str	r3, [sp, #68]	; 0x44
 801ebbe:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801ebc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ebc4:	930c      	str	r3, [sp, #48]	; 0x30
 801ebc6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ebc8:	2b00      	cmp	r3, #0
 801ebca:	dc70      	bgt.n	801ecae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ebcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ebce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ebd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ebd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ebd8:	930a      	str	r3, [sp, #40]	; 0x28
 801ebda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ebdc:	2b00      	cmp	r3, #0
 801ebde:	f340 8124 	ble.w	801ee2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801ebe2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ebe6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ebea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ebee:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ebf0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ebf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ebf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ebfc:	eef0 6a62 	vmov.f32	s13, s5
 801ec00:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ec04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ec08:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ec0c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801ec10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ec14:	eef0 6a43 	vmov.f32	s13, s6
 801ec18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ec1c:	ee12 2a90 	vmov	r2, s5
 801ec20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ec24:	fb92 f3f3 	sdiv	r3, r2, r3
 801ec28:	ee13 2a10 	vmov	r2, s6
 801ec2c:	9321      	str	r3, [sp, #132]	; 0x84
 801ec2e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ec30:	fb92 f3f3 	sdiv	r3, r2, r3
 801ec34:	9322      	str	r3, [sp, #136]	; 0x88
 801ec36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ec38:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ec3a:	3b01      	subs	r3, #1
 801ec3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ec40:	930e      	str	r3, [sp, #56]	; 0x38
 801ec42:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ec44:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801ec48:	bf08      	it	eq
 801ec4a:	4613      	moveq	r3, r2
 801ec4c:	9309      	str	r3, [sp, #36]	; 0x24
 801ec4e:	eeb0 3a67 	vmov.f32	s6, s15
 801ec52:	eef0 2a47 	vmov.f32	s5, s14
 801ec56:	e68c      	b.n	801e972 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ec58:	b149      	cbz	r1, 801ec6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801ec5a:	5cb2      	ldrb	r2, [r6, r2]
 801ec5c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ec60:	4422      	add	r2, r4
 801ec62:	4628      	mov	r0, r5
 801ec64:	46ac      	mov	ip, r5
 801ec66:	e6f1      	b.n	801ea4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ec68:	4628      	mov	r0, r5
 801ec6a:	462a      	mov	r2, r5
 801ec6c:	e6ee      	b.n	801ea4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ec6e:	4628      	mov	r0, r5
 801ec70:	462a      	mov	r2, r5
 801ec72:	e7f7      	b.n	801ec64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801ec74:	1c47      	adds	r7, r0, #1
 801ec76:	f53f af69 	bmi.w	801eb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ec7a:	42ba      	cmp	r2, r7
 801ec7c:	f6ff af66 	blt.w	801eb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ec80:	1c6f      	adds	r7, r5, #1
 801ec82:	f53f af63 	bmi.w	801eb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ec86:	42be      	cmp	r6, r7
 801ec88:	f6ff af60 	blt.w	801eb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ec8c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ec8e:	9002      	str	r0, [sp, #8]
 801ec90:	b236      	sxth	r6, r6
 801ec92:	b212      	sxth	r2, r2
 801ec94:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801ec98:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801ec9c:	9200      	str	r2, [sp, #0]
 801ec9e:	9601      	str	r6, [sp, #4]
 801eca0:	4623      	mov	r3, r4
 801eca2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801eca6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801eca8:	f7ff fd59 	bl	801e75e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801ecac:	e74e      	b.n	801eb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ecae:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ecb0:	9820      	ldr	r0, [sp, #128]	; 0x80
 801ecb2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801ecb4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ecb6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ecba:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801ecbc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ecc0:	142d      	asrs	r5, r5, #16
 801ecc2:	1400      	asrs	r0, r0, #16
 801ecc4:	fb02 5000 	mla	r0, r2, r0, r5
 801ecc8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ecca:	f815 9000 	ldrb.w	r9, [r5, r0]
 801ecce:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ecd2:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801ecd6:	182e      	adds	r6, r5, r0
 801ecd8:	eb04 0509 	add.w	r5, r4, r9
 801ecdc:	2b00      	cmp	r3, #0
 801ecde:	f000 8096 	beq.w	801ee0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801ece2:	7877      	ldrb	r7, [r6, #1]
 801ece4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ece8:	4427      	add	r7, r4
 801ecea:	2900      	cmp	r1, #0
 801ecec:	f000 8097 	beq.w	801ee1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801ecf0:	18b0      	adds	r0, r6, r2
 801ecf2:	5cb2      	ldrb	r2, [r6, r2]
 801ecf4:	7840      	ldrb	r0, [r0, #1]
 801ecf6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ecfa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ecfe:	4422      	add	r2, r4
 801ed00:	4420      	add	r0, r4
 801ed02:	b29b      	uxth	r3, r3
 801ed04:	b289      	uxth	r1, r1
 801ed06:	fb03 f801 	mul.w	r8, r3, r1
 801ed0a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801ed0c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ed10:	f8b6 c000 	ldrh.w	ip, [r6]
 801ed14:	78be      	ldrb	r6, [r7, #2]
 801ed16:	f814 9009 	ldrb.w	r9, [r4, r9]
 801ed1a:	011b      	lsls	r3, r3, #4
 801ed1c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801ed20:	b289      	uxth	r1, r1
 801ed22:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ed26:	eba3 0308 	sub.w	r3, r3, r8
 801ed2a:	b29b      	uxth	r3, r3
 801ed2c:	ebae 0e01 	sub.w	lr, lr, r1
 801ed30:	fa1f fe8e 	uxth.w	lr, lr
 801ed34:	435e      	muls	r6, r3
 801ed36:	fb0e 660b 	mla	r6, lr, fp, r6
 801ed3a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ed3e:	9310      	str	r3, [sp, #64]	; 0x40
 801ed40:	fb01 660b 	mla	r6, r1, fp, r6
 801ed44:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ed48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ed4a:	fb08 660b 	mla	r6, r8, fp, r6
 801ed4e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801ed52:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801ed56:	fb1b fb03 	smulbb	fp, fp, r3
 801ed5a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ed5e:	fb06 b60a 	mla	r6, r6, sl, fp
 801ed62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed64:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ed68:	787d      	ldrb	r5, [r7, #1]
 801ed6a:	783f      	ldrb	r7, [r7, #0]
 801ed6c:	435d      	muls	r5, r3
 801ed6e:	fb0e 550b 	mla	r5, lr, fp, r5
 801ed72:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ed76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ed78:	fb01 550b 	mla	r5, r1, fp, r5
 801ed7c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ed80:	fb08 550b 	mla	r5, r8, fp, r5
 801ed84:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801ed88:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ed8c:	fb1b fb03 	smulbb	fp, fp, r3
 801ed90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed92:	437b      	muls	r3, r7
 801ed94:	7817      	ldrb	r7, [r2, #0]
 801ed96:	fb0e 3309 	mla	r3, lr, r9, r3
 801ed9a:	fb01 3307 	mla	r3, r1, r7, r3
 801ed9e:	7807      	ldrb	r7, [r0, #0]
 801eda0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801eda4:	fb08 3707 	mla	r7, r8, r7, r3
 801eda8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801edaa:	fa5f fc8c 	uxtb.w	ip, ip
 801edae:	fb1c fc03 	smulbb	ip, ip, r3
 801edb2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801edb6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801edba:	fb05 b50a 	mla	r5, r5, sl, fp
 801edbe:	fb07 c70a 	mla	r7, r7, sl, ip
 801edc2:	b2b6      	uxth	r6, r6
 801edc4:	b2ad      	uxth	r5, r5
 801edc6:	b2bf      	uxth	r7, r7
 801edc8:	1c73      	adds	r3, r6, #1
 801edca:	1c7a      	adds	r2, r7, #1
 801edcc:	f105 0b01 	add.w	fp, r5, #1
 801edd0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801edd4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801edd8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801eddc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ede0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ede4:	096d      	lsrs	r5, r5, #5
 801ede6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ede8:	4316      	orrs	r6, r2
 801edea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801edee:	432e      	orrs	r6, r5
 801edf0:	f823 6b02 	strh.w	r6, [r3], #2
 801edf4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801edf6:	930c      	str	r3, [sp, #48]	; 0x30
 801edf8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801edfa:	4413      	add	r3, r2
 801edfc:	931f      	str	r3, [sp, #124]	; 0x7c
 801edfe:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801ee00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ee02:	4413      	add	r3, r2
 801ee04:	9320      	str	r3, [sp, #128]	; 0x80
 801ee06:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ee08:	3b01      	subs	r3, #1
 801ee0a:	9311      	str	r3, [sp, #68]	; 0x44
 801ee0c:	e6db      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ee0e:	b149      	cbz	r1, 801ee24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ee10:	5cb2      	ldrb	r2, [r6, r2]
 801ee12:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ee16:	4422      	add	r2, r4
 801ee18:	4628      	mov	r0, r5
 801ee1a:	462f      	mov	r7, r5
 801ee1c:	e771      	b.n	801ed02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ee1e:	4628      	mov	r0, r5
 801ee20:	462a      	mov	r2, r5
 801ee22:	e76e      	b.n	801ed02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ee24:	4628      	mov	r0, r5
 801ee26:	462a      	mov	r2, r5
 801ee28:	e7f7      	b.n	801ee1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ee2a:	b015      	add	sp, #84	; 0x54
 801ee2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ee30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801ee30:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee34:	880f      	ldrh	r7, [r1, #0]
 801ee36:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801ee3a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801ee3e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801ee42:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801ee46:	023c      	lsls	r4, r7, #8
 801ee48:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801ee4c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801ee50:	017c      	lsls	r4, r7, #5
 801ee52:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801ee56:	00ff      	lsls	r7, r7, #3
 801ee58:	ea4b 0404 	orr.w	r4, fp, r4
 801ee5c:	b2ff      	uxtb	r7, r7
 801ee5e:	fb05 ca0e 	mla	sl, r5, lr, ip
 801ee62:	4327      	orrs	r7, r4
 801ee64:	2d00      	cmp	r5, #0
 801ee66:	eb02 080a 	add.w	r8, r2, sl
 801ee6a:	9701      	str	r7, [sp, #4]
 801ee6c:	db7e      	blt.n	801ef6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ee6e:	45a9      	cmp	r9, r5
 801ee70:	dd7c      	ble.n	801ef6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ee72:	f1bc 0f00 	cmp.w	ip, #0
 801ee76:	db77      	blt.n	801ef68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ee78:	45e6      	cmp	lr, ip
 801ee7a:	dd75      	ble.n	801ef68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ee7c:	f812 700a 	ldrb.w	r7, [r2, sl]
 801ee80:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ee84:	441f      	add	r7, r3
 801ee86:	f11c 0201 	adds.w	r2, ip, #1
 801ee8a:	d472      	bmi.n	801ef72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ee8c:	4596      	cmp	lr, r2
 801ee8e:	dd70      	ble.n	801ef72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ee90:	2800      	cmp	r0, #0
 801ee92:	d06e      	beq.n	801ef72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ee94:	f898 4001 	ldrb.w	r4, [r8, #1]
 801ee98:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801ee9c:	441c      	add	r4, r3
 801ee9e:	3501      	adds	r5, #1
 801eea0:	d46b      	bmi.n	801ef7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801eea2:	45a9      	cmp	r9, r5
 801eea4:	dd69      	ble.n	801ef7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801eea6:	2e00      	cmp	r6, #0
 801eea8:	d067      	beq.n	801ef7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801eeaa:	f1bc 0f00 	cmp.w	ip, #0
 801eeae:	db62      	blt.n	801ef76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801eeb0:	45e6      	cmp	lr, ip
 801eeb2:	dd60      	ble.n	801ef76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801eeb4:	f818 500e 	ldrb.w	r5, [r8, lr]
 801eeb8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801eebc:	441d      	add	r5, r3
 801eebe:	f11c 0201 	adds.w	r2, ip, #1
 801eec2:	d45d      	bmi.n	801ef80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801eec4:	4596      	cmp	lr, r2
 801eec6:	dd5b      	ble.n	801ef80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801eec8:	2800      	cmp	r0, #0
 801eeca:	d059      	beq.n	801ef80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801eecc:	44c6      	add	lr, r8
 801eece:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801eed2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801eed6:	4413      	add	r3, r2
 801eed8:	b280      	uxth	r0, r0
 801eeda:	b2b2      	uxth	r2, r6
 801eedc:	fb00 f602 	mul.w	r6, r0, r2
 801eee0:	0100      	lsls	r0, r0, #4
 801eee2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801eee6:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801eeea:	1b80      	subs	r0, r0, r6
 801eeec:	fa1f fc82 	uxth.w	ip, r2
 801eef0:	b282      	uxth	r2, r0
 801eef2:	78a0      	ldrb	r0, [r4, #2]
 801eef4:	f897 e002 	ldrb.w	lr, [r7, #2]
 801eef8:	f897 9000 	ldrb.w	r9, [r7]
 801eefc:	787f      	ldrb	r7, [r7, #1]
 801eefe:	eba8 080c 	sub.w	r8, r8, ip
 801ef02:	fa1f f888 	uxth.w	r8, r8
 801ef06:	4350      	muls	r0, r2
 801ef08:	fb08 0e0e 	mla	lr, r8, lr, r0
 801ef0c:	78a8      	ldrb	r0, [r5, #2]
 801ef0e:	fb0c e000 	mla	r0, ip, r0, lr
 801ef12:	f893 e002 	ldrb.w	lr, [r3, #2]
 801ef16:	fb06 0e0e 	mla	lr, r6, lr, r0
 801ef1a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801ef1e:	f894 e000 	ldrb.w	lr, [r4]
 801ef22:	fb02 fe0e 	mul.w	lr, r2, lr
 801ef26:	fb08 e909 	mla	r9, r8, r9, lr
 801ef2a:	f895 e000 	ldrb.w	lr, [r5]
 801ef2e:	fb0c 990e 	mla	r9, ip, lr, r9
 801ef32:	f893 e000 	ldrb.w	lr, [r3]
 801ef36:	785b      	ldrb	r3, [r3, #1]
 801ef38:	fb06 9e0e 	mla	lr, r6, lr, r9
 801ef3c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ef40:	ea4e 0e00 	orr.w	lr, lr, r0
 801ef44:	7860      	ldrb	r0, [r4, #1]
 801ef46:	4350      	muls	r0, r2
 801ef48:	786a      	ldrb	r2, [r5, #1]
 801ef4a:	fb08 0007 	mla	r0, r8, r7, r0
 801ef4e:	fb0c 0202 	mla	r2, ip, r2, r0
 801ef52:	fb06 2303 	mla	r3, r6, r3, r2
 801ef56:	095b      	lsrs	r3, r3, #5
 801ef58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef5c:	ea4e 0303 	orr.w	r3, lr, r3
 801ef60:	800b      	strh	r3, [r1, #0]
 801ef62:	b003      	add	sp, #12
 801ef64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef68:	af01      	add	r7, sp, #4
 801ef6a:	e78c      	b.n	801ee86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801ef6c:	ac01      	add	r4, sp, #4
 801ef6e:	4627      	mov	r7, r4
 801ef70:	e795      	b.n	801ee9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801ef72:	ac01      	add	r4, sp, #4
 801ef74:	e793      	b.n	801ee9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801ef76:	ad01      	add	r5, sp, #4
 801ef78:	e7a1      	b.n	801eebe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801ef7a:	ab01      	add	r3, sp, #4
 801ef7c:	461d      	mov	r5, r3
 801ef7e:	e7ab      	b.n	801eed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801ef80:	ab01      	add	r3, sp, #4
 801ef82:	e7a9      	b.n	801eed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801ef84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef88:	b08f      	sub	sp, #60	; 0x3c
 801ef8a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801ef8e:	920c      	str	r2, [sp, #48]	; 0x30
 801ef90:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801ef92:	910a      	str	r1, [sp, #40]	; 0x28
 801ef94:	9306      	str	r3, [sp, #24]
 801ef96:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801ef9a:	900d      	str	r0, [sp, #52]	; 0x34
 801ef9c:	6850      	ldr	r0, [r2, #4]
 801ef9e:	6812      	ldr	r2, [r2, #0]
 801efa0:	fb00 1303 	mla	r3, r0, r3, r1
 801efa4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801efa8:	9307      	str	r3, [sp, #28]
 801efaa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801efac:	681b      	ldr	r3, [r3, #0]
 801efae:	9308      	str	r3, [sp, #32]
 801efb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801efb2:	685c      	ldr	r4, [r3, #4]
 801efb4:	3404      	adds	r4, #4
 801efb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801efb8:	2b00      	cmp	r3, #0
 801efba:	dc03      	bgt.n	801efc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801efbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801efbe:	2b00      	cmp	r3, #0
 801efc0:	f340 81d6 	ble.w	801f370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801efc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801efc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801efca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801efce:	1e48      	subs	r0, r1, #1
 801efd0:	1e56      	subs	r6, r2, #1
 801efd2:	9b06      	ldr	r3, [sp, #24]
 801efd4:	2b00      	cmp	r3, #0
 801efd6:	f340 80b7 	ble.w	801f148 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801efda:	ea5f 472b 	movs.w	r7, fp, asr #16
 801efde:	ea4f 4325 	mov.w	r3, r5, asr #16
 801efe2:	d406      	bmi.n	801eff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801efe4:	4287      	cmp	r7, r0
 801efe6:	da04      	bge.n	801eff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801efe8:	2b00      	cmp	r3, #0
 801efea:	db02      	blt.n	801eff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801efec:	42b3      	cmp	r3, r6
 801efee:	f2c0 80ac 	blt.w	801f14a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801eff2:	3701      	adds	r7, #1
 801eff4:	f100 809d 	bmi.w	801f132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801eff8:	42b9      	cmp	r1, r7
 801effa:	f2c0 809a 	blt.w	801f132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801effe:	3301      	adds	r3, #1
 801f000:	f100 8097 	bmi.w	801f132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f004:	429a      	cmp	r2, r3
 801f006:	f2c0 8094 	blt.w	801f132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f00a:	9b06      	ldr	r3, [sp, #24]
 801f00c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f00e:	9b07      	ldr	r3, [sp, #28]
 801f010:	9309      	str	r3, [sp, #36]	; 0x24
 801f012:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f014:	2b00      	cmp	r3, #0
 801f016:	f340 80b5 	ble.w	801f184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f01a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f01c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f01e:	68c7      	ldr	r7, [r0, #12]
 801f020:	6892      	ldr	r2, [r2, #8]
 801f022:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f026:	ea4f 4625 	mov.w	r6, r5, asr #16
 801f02a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f02e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f032:	f100 80fb 	bmi.w	801f22c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f036:	f102 3cff 	add.w	ip, r2, #4294967295
 801f03a:	4560      	cmp	r0, ip
 801f03c:	f280 80f6 	bge.w	801f22c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f040:	2e00      	cmp	r6, #0
 801f042:	f2c0 80f3 	blt.w	801f22c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f046:	f107 3cff 	add.w	ip, r7, #4294967295
 801f04a:	4566      	cmp	r6, ip
 801f04c:	f280 80ee 	bge.w	801f22c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f050:	b212      	sxth	r2, r2
 801f052:	fb06 0002 	mla	r0, r6, r2, r0
 801f056:	9e08      	ldr	r6, [sp, #32]
 801f058:	1837      	adds	r7, r6, r0
 801f05a:	5c30      	ldrb	r0, [r6, r0]
 801f05c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f060:	eb04 0c08 	add.w	ip, r4, r8
 801f064:	2b00      	cmp	r3, #0
 801f066:	f000 80d3 	beq.w	801f210 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f06a:	787e      	ldrb	r6, [r7, #1]
 801f06c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f070:	4426      	add	r6, r4
 801f072:	2900      	cmp	r1, #0
 801f074:	f000 80d4 	beq.w	801f220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801f078:	18b8      	adds	r0, r7, r2
 801f07a:	5cba      	ldrb	r2, [r7, r2]
 801f07c:	7840      	ldrb	r0, [r0, #1]
 801f07e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f082:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f086:	4422      	add	r2, r4
 801f088:	4420      	add	r0, r4
 801f08a:	b29b      	uxth	r3, r3
 801f08c:	b289      	uxth	r1, r1
 801f08e:	fb03 f901 	mul.w	r9, r3, r1
 801f092:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f096:	011b      	lsls	r3, r3, #4
 801f098:	b289      	uxth	r1, r1
 801f09a:	78b7      	ldrb	r7, [r6, #2]
 801f09c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f0a0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f0a4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f0a8:	eba3 0309 	sub.w	r3, r3, r9
 801f0ac:	b29b      	uxth	r3, r3
 801f0ae:	ebae 0e01 	sub.w	lr, lr, r1
 801f0b2:	fa1f fe8e 	uxth.w	lr, lr
 801f0b6:	435f      	muls	r7, r3
 801f0b8:	fb0e 770a 	mla	r7, lr, sl, r7
 801f0bc:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f0c0:	fb01 770a 	mla	r7, r1, sl, r7
 801f0c4:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f0c8:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f0cc:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f0d0:	f896 8000 	ldrb.w	r8, [r6]
 801f0d4:	7876      	ldrb	r6, [r6, #1]
 801f0d6:	fb03 f808 	mul.w	r8, r3, r8
 801f0da:	fb0e 8807 	mla	r8, lr, r7, r8
 801f0de:	7817      	ldrb	r7, [r2, #0]
 801f0e0:	fb01 8807 	mla	r8, r1, r7, r8
 801f0e4:	7807      	ldrb	r7, [r0, #0]
 801f0e6:	fb09 8707 	mla	r7, r9, r7, r8
 801f0ea:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801f0ee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f0f2:	ea47 070a 	orr.w	r7, r7, sl
 801f0f6:	4373      	muls	r3, r6
 801f0f8:	f892 a001 	ldrb.w	sl, [r2, #1]
 801f0fc:	fb0e 330c 	mla	r3, lr, ip, r3
 801f100:	fb01 310a 	mla	r1, r1, sl, r3
 801f104:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f108:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f10a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801f10e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f112:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f116:	ea47 070a 	orr.w	r7, r7, sl
 801f11a:	801f      	strh	r7, [r3, #0]
 801f11c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f11e:	3302      	adds	r3, #2
 801f120:	9309      	str	r3, [sp, #36]	; 0x24
 801f122:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f124:	449b      	add	fp, r3
 801f126:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f128:	441d      	add	r5, r3
 801f12a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f12c:	3b01      	subs	r3, #1
 801f12e:	930b      	str	r3, [sp, #44]	; 0x2c
 801f130:	e76f      	b.n	801f012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f132:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f134:	449b      	add	fp, r3
 801f136:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f138:	441d      	add	r5, r3
 801f13a:	9b06      	ldr	r3, [sp, #24]
 801f13c:	3b01      	subs	r3, #1
 801f13e:	9306      	str	r3, [sp, #24]
 801f140:	9b07      	ldr	r3, [sp, #28]
 801f142:	3302      	adds	r3, #2
 801f144:	9307      	str	r3, [sp, #28]
 801f146:	e744      	b.n	801efd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801f148:	d023      	beq.n	801f192 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f14a:	9b06      	ldr	r3, [sp, #24]
 801f14c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801f14e:	3b01      	subs	r3, #1
 801f150:	fb00 b003 	mla	r0, r0, r3, fp
 801f154:	1400      	asrs	r0, r0, #16
 801f156:	f53f af58 	bmi.w	801f00a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f15a:	3901      	subs	r1, #1
 801f15c:	4288      	cmp	r0, r1
 801f15e:	f6bf af54 	bge.w	801f00a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f162:	991c      	ldr	r1, [sp, #112]	; 0x70
 801f164:	fb01 5303 	mla	r3, r1, r3, r5
 801f168:	141b      	asrs	r3, r3, #16
 801f16a:	f53f af4e 	bmi.w	801f00a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f16e:	3a01      	subs	r2, #1
 801f170:	4293      	cmp	r3, r2
 801f172:	f6bf af4a 	bge.w	801f00a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f176:	9b06      	ldr	r3, [sp, #24]
 801f178:	9309      	str	r3, [sp, #36]	; 0x24
 801f17a:	9b07      	ldr	r3, [sp, #28]
 801f17c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f17e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f180:	2b00      	cmp	r3, #0
 801f182:	dc70      	bgt.n	801f266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801f184:	9b06      	ldr	r3, [sp, #24]
 801f186:	9a07      	ldr	r2, [sp, #28]
 801f188:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f18c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f190:	9307      	str	r3, [sp, #28]
 801f192:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f194:	2b00      	cmp	r3, #0
 801f196:	f340 80eb 	ble.w	801f370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f19a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f19e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f1a2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f1a6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f1a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f1ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f1b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f1b4:	eef0 6a62 	vmov.f32	s13, s5
 801f1b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f1bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f1c4:	ee16 ba90 	vmov	fp, s13
 801f1c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f1cc:	eef0 6a43 	vmov.f32	s13, s6
 801f1d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f1d4:	ee12 2a90 	vmov	r2, s5
 801f1d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f1dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1e0:	ee13 2a10 	vmov	r2, s6
 801f1e4:	931b      	str	r3, [sp, #108]	; 0x6c
 801f1e6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f1e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1ec:	931c      	str	r3, [sp, #112]	; 0x70
 801f1ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f1f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f1f2:	3b01      	subs	r3, #1
 801f1f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1f8:	930a      	str	r3, [sp, #40]	; 0x28
 801f1fa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f1fc:	bf08      	it	eq
 801f1fe:	4613      	moveq	r3, r2
 801f200:	ee16 5a90 	vmov	r5, s13
 801f204:	9306      	str	r3, [sp, #24]
 801f206:	eeb0 3a67 	vmov.f32	s6, s15
 801f20a:	eef0 2a47 	vmov.f32	s5, s14
 801f20e:	e6d2      	b.n	801efb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801f210:	b149      	cbz	r1, 801f226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801f212:	5cba      	ldrb	r2, [r7, r2]
 801f214:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f218:	4422      	add	r2, r4
 801f21a:	4660      	mov	r0, ip
 801f21c:	4666      	mov	r6, ip
 801f21e:	e734      	b.n	801f08a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801f220:	4660      	mov	r0, ip
 801f222:	4662      	mov	r2, ip
 801f224:	e731      	b.n	801f08a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801f226:	4660      	mov	r0, ip
 801f228:	4662      	mov	r2, ip
 801f22a:	e7f7      	b.n	801f21c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801f22c:	f110 0c01 	adds.w	ip, r0, #1
 801f230:	f53f af74 	bmi.w	801f11c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f234:	4562      	cmp	r2, ip
 801f236:	f6ff af71 	blt.w	801f11c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f23a:	f116 0c01 	adds.w	ip, r6, #1
 801f23e:	f53f af6d 	bmi.w	801f11c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f242:	4567      	cmp	r7, ip
 801f244:	f6ff af6a 	blt.w	801f11c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f248:	b23f      	sxth	r7, r7
 801f24a:	b212      	sxth	r2, r2
 801f24c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801f250:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801f254:	9200      	str	r2, [sp, #0]
 801f256:	9701      	str	r7, [sp, #4]
 801f258:	4623      	mov	r3, r4
 801f25a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801f25e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f260:	f7ff fde6 	bl	801ee30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801f264:	e75a      	b.n	801f11c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f266:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f268:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f26c:	ea4f 462b 	mov.w	r6, fp, asr #16
 801f270:	1428      	asrs	r0, r5, #16
 801f272:	fb02 6000 	mla	r0, r2, r0, r6
 801f276:	9e08      	ldr	r6, [sp, #32]
 801f278:	f816 8000 	ldrb.w	r8, [r6, r0]
 801f27c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f280:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f284:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f288:	1837      	adds	r7, r6, r0
 801f28a:	eb04 0c08 	add.w	ip, r4, r8
 801f28e:	2b00      	cmp	r3, #0
 801f290:	d060      	beq.n	801f354 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801f292:	787e      	ldrb	r6, [r7, #1]
 801f294:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f298:	4426      	add	r6, r4
 801f29a:	2900      	cmp	r1, #0
 801f29c:	d062      	beq.n	801f364 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801f29e:	18b8      	adds	r0, r7, r2
 801f2a0:	5cba      	ldrb	r2, [r7, r2]
 801f2a2:	7840      	ldrb	r0, [r0, #1]
 801f2a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f2a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f2ac:	4422      	add	r2, r4
 801f2ae:	4420      	add	r0, r4
 801f2b0:	b29b      	uxth	r3, r3
 801f2b2:	b289      	uxth	r1, r1
 801f2b4:	fb03 f901 	mul.w	r9, r3, r1
 801f2b8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f2bc:	011b      	lsls	r3, r3, #4
 801f2be:	b289      	uxth	r1, r1
 801f2c0:	78b7      	ldrb	r7, [r6, #2]
 801f2c2:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f2c6:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f2ca:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f2ce:	eba3 0309 	sub.w	r3, r3, r9
 801f2d2:	b29b      	uxth	r3, r3
 801f2d4:	ebae 0e01 	sub.w	lr, lr, r1
 801f2d8:	fa1f fe8e 	uxth.w	lr, lr
 801f2dc:	435f      	muls	r7, r3
 801f2de:	fb0e 770a 	mla	r7, lr, sl, r7
 801f2e2:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f2e6:	fb01 770a 	mla	r7, r1, sl, r7
 801f2ea:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f2ee:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f2f2:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f2f6:	f896 8000 	ldrb.w	r8, [r6]
 801f2fa:	7876      	ldrb	r6, [r6, #1]
 801f2fc:	fb03 f808 	mul.w	r8, r3, r8
 801f300:	fb0e 8807 	mla	r8, lr, r7, r8
 801f304:	7817      	ldrb	r7, [r2, #0]
 801f306:	fb01 8807 	mla	r8, r1, r7, r8
 801f30a:	7807      	ldrb	r7, [r0, #0]
 801f30c:	fb09 8707 	mla	r7, r9, r7, r8
 801f310:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801f314:	4373      	muls	r3, r6
 801f316:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f31a:	7856      	ldrb	r6, [r2, #1]
 801f31c:	ea47 070a 	orr.w	r7, r7, sl
 801f320:	fb0e 330c 	mla	r3, lr, ip, r3
 801f324:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f328:	fb01 3306 	mla	r3, r1, r6, r3
 801f32c:	fb09 3a0a 	mla	sl, r9, sl, r3
 801f330:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f334:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f336:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f33a:	ea47 070a 	orr.w	r7, r7, sl
 801f33e:	f823 7b02 	strh.w	r7, [r3], #2
 801f342:	930b      	str	r3, [sp, #44]	; 0x2c
 801f344:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f346:	449b      	add	fp, r3
 801f348:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f34a:	441d      	add	r5, r3
 801f34c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f34e:	3b01      	subs	r3, #1
 801f350:	9309      	str	r3, [sp, #36]	; 0x24
 801f352:	e714      	b.n	801f17e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801f354:	b149      	cbz	r1, 801f36a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f356:	5cba      	ldrb	r2, [r7, r2]
 801f358:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f35c:	4422      	add	r2, r4
 801f35e:	4660      	mov	r0, ip
 801f360:	4666      	mov	r6, ip
 801f362:	e7a5      	b.n	801f2b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801f364:	4660      	mov	r0, ip
 801f366:	4662      	mov	r2, ip
 801f368:	e7a2      	b.n	801f2b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801f36a:	4660      	mov	r0, ip
 801f36c:	4662      	mov	r2, ip
 801f36e:	e7f7      	b.n	801f360 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801f370:	b00f      	add	sp, #60	; 0x3c
 801f372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f376 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801f376:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f37a:	b085      	sub	sp, #20
 801f37c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801f380:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801f384:	9102      	str	r1, [sp, #8]
 801f386:	2c00      	cmp	r4, #0
 801f388:	fb04 710c 	mla	r1, r4, ip, r7
 801f38c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801f390:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801f394:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801f398:	eb02 0e01 	add.w	lr, r2, r1
 801f39c:	f2c0 8122 	blt.w	801f5e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801f3a0:	45a0      	cmp	r8, r4
 801f3a2:	f340 811f 	ble.w	801f5e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801f3a6:	2f00      	cmp	r7, #0
 801f3a8:	f2c0 811a 	blt.w	801f5e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801f3ac:	45bc      	cmp	ip, r7
 801f3ae:	f340 8117 	ble.w	801f5e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801f3b2:	5c52      	ldrb	r2, [r2, r1]
 801f3b4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801f3b8:	1c7a      	adds	r2, r7, #1
 801f3ba:	f100 8116 	bmi.w	801f5ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801f3be:	4594      	cmp	ip, r2
 801f3c0:	f340 8113 	ble.w	801f5ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801f3c4:	2e00      	cmp	r6, #0
 801f3c6:	f000 8112 	beq.w	801f5ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801f3ca:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f3ce:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f3d2:	3401      	adds	r4, #1
 801f3d4:	f100 810f 	bmi.w	801f5f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801f3d8:	45a0      	cmp	r8, r4
 801f3da:	f340 810c 	ble.w	801f5f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801f3de:	2800      	cmp	r0, #0
 801f3e0:	f000 810c 	beq.w	801f5fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801f3e4:	2f00      	cmp	r7, #0
 801f3e6:	f2c0 8104 	blt.w	801f5f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801f3ea:	45bc      	cmp	ip, r7
 801f3ec:	f340 8101 	ble.w	801f5f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801f3f0:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801f3f4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801f3f8:	3701      	adds	r7, #1
 801f3fa:	f100 8102 	bmi.w	801f602 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801f3fe:	45bc      	cmp	ip, r7
 801f400:	f340 80ff 	ble.w	801f602 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801f404:	2e00      	cmp	r6, #0
 801f406:	f000 80fe 	beq.w	801f606 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801f40a:	44f4      	add	ip, lr
 801f40c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801f410:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801f414:	b2b6      	uxth	r6, r6
 801f416:	b280      	uxth	r0, r0
 801f418:	fb00 fe06 	mul.w	lr, r0, r6
 801f41c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f420:	0136      	lsls	r6, r6, #4
 801f422:	eba6 070e 	sub.w	r7, r6, lr
 801f426:	b280      	uxth	r0, r0
 801f428:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801f42c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f430:	b2bf      	uxth	r7, r7
 801f432:	1a1b      	subs	r3, r3, r0
 801f434:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f438:	b29b      	uxth	r3, r3
 801f43a:	fb0a f607 	mul.w	r6, sl, r7
 801f43e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f442:	fb0b 6603 	mla	r6, fp, r3, r6
 801f446:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f44a:	fb00 6609 	mla	r6, r0, r9, r6
 801f44e:	fb0e 6608 	mla	r6, lr, r8, r6
 801f452:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f456:	9600      	str	r6, [sp, #0]
 801f458:	2e00      	cmp	r6, #0
 801f45a:	f000 80be 	beq.w	801f5da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801f45e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f462:	fb0b fc0c 	mul.w	ip, fp, ip
 801f466:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801f46a:	fb0b f505 	mul.w	r5, fp, r5
 801f46e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f472:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801f476:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f47a:	44dc      	add	ip, fp
 801f47c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f480:	9501      	str	r5, [sp, #4]
 801f482:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801f486:	9503      	str	r5, [sp, #12]
 801f488:	9d01      	ldr	r5, [sp, #4]
 801f48a:	9e02      	ldr	r6, [sp, #8]
 801f48c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801f490:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f494:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801f498:	fb0a fc0c 	mul.w	ip, sl, ip
 801f49c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f4a0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f4a4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f4a8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f4ac:	4465      	add	r5, ip
 801f4ae:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f4b2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801f4b6:	fb09 fc0c 	mul.w	ip, r9, ip
 801f4ba:	fb09 f904 	mul.w	r9, r9, r4
 801f4be:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801f4c2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f4c6:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801f4ca:	fb08 f404 	mul.w	r4, r8, r4
 801f4ce:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f4d2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f4d6:	fb08 f802 	mul.w	r8, r8, r2
 801f4da:	fb0a fa01 	mul.w	sl, sl, r1
 801f4de:	0a22      	lsrs	r2, r4, #8
 801f4e0:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801f4e4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f4e8:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801f4ec:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f4f0:	4414      	add	r4, r2
 801f4f2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f4f6:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801f4fa:	0a2d      	lsrs	r5, r5, #8
 801f4fc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f500:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f504:	9a03      	ldr	r2, [sp, #12]
 801f506:	8836      	ldrh	r6, [r6, #0]
 801f508:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f50c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f510:	437d      	muls	r5, r7
 801f512:	4461      	add	r1, ip
 801f514:	0a24      	lsrs	r4, r4, #8
 801f516:	fb02 5503 	mla	r5, r2, r3, r5
 801f51a:	0a09      	lsrs	r1, r1, #8
 801f51c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801f520:	fb04 540e 	mla	r4, r4, lr, r5
 801f524:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f528:	fb01 4100 	mla	r1, r1, r0, r4
 801f52c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f530:	0a09      	lsrs	r1, r1, #8
 801f532:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f536:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801f53a:	fb07 f70a 	mul.w	r7, r7, sl
 801f53e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f542:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801f546:	fb03 7101 	mla	r1, r3, r1, r7
 801f54a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f54e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801f552:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f556:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801f55a:	fb00 e101 	mla	r1, r0, r1, lr
 801f55e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801f562:	9a00      	ldr	r2, [sp, #0]
 801f564:	b287      	uxth	r7, r0
 801f566:	437a      	muls	r2, r7
 801f568:	0a09      	lsrs	r1, r1, #8
 801f56a:	1c53      	adds	r3, r2, #1
 801f56c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f570:	4321      	orrs	r1, r4
 801f572:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f576:	1235      	asrs	r5, r6, #8
 801f578:	0c0a      	lsrs	r2, r1, #16
 801f57a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801f57e:	b2db      	uxtb	r3, r3
 801f580:	fb12 f207 	smulbb	r2, r2, r7
 801f584:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f588:	fb05 2503 	mla	r5, r5, r3, r2
 801f58c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801f590:	10f2      	asrs	r2, r6, #3
 801f592:	b2c8      	uxtb	r0, r1
 801f594:	00f6      	lsls	r6, r6, #3
 801f596:	fb14 f407 	smulbb	r4, r4, r7
 801f59a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f59e:	b2f6      	uxtb	r6, r6
 801f5a0:	fb10 f007 	smulbb	r0, r0, r7
 801f5a4:	fb02 4203 	mla	r2, r2, r3, r4
 801f5a8:	b2ad      	uxth	r5, r5
 801f5aa:	fb06 0303 	mla	r3, r6, r3, r0
 801f5ae:	b299      	uxth	r1, r3
 801f5b0:	b294      	uxth	r4, r2
 801f5b2:	1c6b      	adds	r3, r5, #1
 801f5b4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f5b8:	1c62      	adds	r2, r4, #1
 801f5ba:	1c4b      	adds	r3, r1, #1
 801f5bc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f5c0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801f5c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f5c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f5cc:	0952      	lsrs	r2, r2, #5
 801f5ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f5d2:	432b      	orrs	r3, r5
 801f5d4:	4313      	orrs	r3, r2
 801f5d6:	9a02      	ldr	r2, [sp, #8]
 801f5d8:	8013      	strh	r3, [r2, #0]
 801f5da:	b005      	add	sp, #20
 801f5dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f5e0:	2500      	movs	r5, #0
 801f5e2:	e6e9      	b.n	801f3b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801f5e4:	2100      	movs	r1, #0
 801f5e6:	460d      	mov	r5, r1
 801f5e8:	e6f3      	b.n	801f3d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801f5ea:	2100      	movs	r1, #0
 801f5ec:	e6f1      	b.n	801f3d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801f5ee:	4631      	mov	r1, r6
 801f5f0:	e6ef      	b.n	801f3d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801f5f2:	2400      	movs	r4, #0
 801f5f4:	e700      	b.n	801f3f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801f5f6:	2200      	movs	r2, #0
 801f5f8:	4614      	mov	r4, r2
 801f5fa:	e70b      	b.n	801f414 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801f5fc:	4602      	mov	r2, r0
 801f5fe:	4604      	mov	r4, r0
 801f600:	e708      	b.n	801f414 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801f602:	2200      	movs	r2, #0
 801f604:	e706      	b.n	801f414 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801f606:	4632      	mov	r2, r6
 801f608:	e704      	b.n	801f414 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801f60a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f60a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f60e:	b09f      	sub	sp, #124	; 0x7c
 801f610:	921b      	str	r2, [sp, #108]	; 0x6c
 801f612:	9309      	str	r3, [sp, #36]	; 0x24
 801f614:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801f616:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801f61a:	931c      	str	r3, [sp, #112]	; 0x70
 801f61c:	9119      	str	r1, [sp, #100]	; 0x64
 801f61e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801f622:	901d      	str	r0, [sp, #116]	; 0x74
 801f624:	6850      	ldr	r0, [r2, #4]
 801f626:	6812      	ldr	r2, [r2, #0]
 801f628:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801f62a:	fb00 1303 	mla	r3, r0, r3, r1
 801f62e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f632:	930c      	str	r3, [sp, #48]	; 0x30
 801f634:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f636:	681b      	ldr	r3, [r3, #0]
 801f638:	9312      	str	r3, [sp, #72]	; 0x48
 801f63a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f63c:	685e      	ldr	r6, [r3, #4]
 801f63e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801f642:	930d      	str	r3, [sp, #52]	; 0x34
 801f644:	3604      	adds	r6, #4
 801f646:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f648:	2b00      	cmp	r3, #0
 801f64a:	dc03      	bgt.n	801f654 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f64c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f64e:	2b00      	cmp	r3, #0
 801f650:	f340 8388 	ble.w	801fd64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801f654:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f656:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f65a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f65e:	1e48      	subs	r0, r1, #1
 801f660:	1e57      	subs	r7, r2, #1
 801f662:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f664:	2b00      	cmp	r3, #0
 801f666:	f340 8195 	ble.w	801f994 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f66a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f66c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f670:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f674:	d406      	bmi.n	801f684 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f676:	4584      	cmp	ip, r0
 801f678:	da04      	bge.n	801f684 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f67a:	2b00      	cmp	r3, #0
 801f67c:	db02      	blt.n	801f684 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f67e:	42bb      	cmp	r3, r7
 801f680:	f2c0 8189 	blt.w	801f996 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801f684:	f11c 0c01 	adds.w	ip, ip, #1
 801f688:	f100 8177 	bmi.w	801f97a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f68c:	4561      	cmp	r1, ip
 801f68e:	f2c0 8174 	blt.w	801f97a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f692:	3301      	adds	r3, #1
 801f694:	f100 8171 	bmi.w	801f97a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f698:	429a      	cmp	r2, r3
 801f69a:	f2c0 816e 	blt.w	801f97a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f69e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6a0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f6a2:	931a      	str	r3, [sp, #104]	; 0x68
 801f6a4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f6a6:	2b00      	cmp	r3, #0
 801f6a8:	f340 8193 	ble.w	801f9d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801f6ac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f6ae:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f6b2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f6b4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801f6b8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f6ba:	141b      	asrs	r3, r3, #16
 801f6bc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f6c0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f6c4:	f100 81d6 	bmi.w	801fa74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801f6c8:	f100 38ff 	add.w	r8, r0, #4294967295
 801f6cc:	4543      	cmp	r3, r8
 801f6ce:	f280 81d1 	bge.w	801fa74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801f6d2:	f1bc 0f00 	cmp.w	ip, #0
 801f6d6:	f2c0 81cd 	blt.w	801fa74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801f6da:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f6de:	45c4      	cmp	ip, r8
 801f6e0:	f280 81c8 	bge.w	801fa74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801f6e4:	b200      	sxth	r0, r0
 801f6e6:	fb0c 3300 	mla	r3, ip, r0, r3
 801f6ea:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f6ec:	eb04 0803 	add.w	r8, r4, r3
 801f6f0:	5ce3      	ldrb	r3, [r4, r3]
 801f6f2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f6f6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801f6fa:	2a00      	cmp	r2, #0
 801f6fc:	f000 81af 	beq.w	801fa5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f700:	f898 c001 	ldrb.w	ip, [r8, #1]
 801f704:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801f708:	940e      	str	r4, [sp, #56]	; 0x38
 801f70a:	0e24      	lsrs	r4, r4, #24
 801f70c:	9415      	str	r4, [sp, #84]	; 0x54
 801f70e:	b179      	cbz	r1, 801f730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801f710:	eb08 0c00 	add.w	ip, r8, r0
 801f714:	f818 0000 	ldrb.w	r0, [r8, r0]
 801f718:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801f71c:	900a      	str	r0, [sp, #40]	; 0x28
 801f71e:	0e00      	lsrs	r0, r0, #24
 801f720:	9013      	str	r0, [sp, #76]	; 0x4c
 801f722:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801f726:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801f72a:	900f      	str	r0, [sp, #60]	; 0x3c
 801f72c:	0e00      	lsrs	r0, r0, #24
 801f72e:	9016      	str	r0, [sp, #88]	; 0x58
 801f730:	b292      	uxth	r2, r2
 801f732:	b289      	uxth	r1, r1
 801f734:	fb02 f901 	mul.w	r9, r2, r1
 801f738:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f73c:	0112      	lsls	r2, r2, #4
 801f73e:	eba2 0809 	sub.w	r8, r2, r9
 801f742:	b289      	uxth	r1, r1
 801f744:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f748:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f74a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f74c:	fa1f f888 	uxth.w	r8, r8
 801f750:	1a52      	subs	r2, r2, r1
 801f752:	b292      	uxth	r2, r2
 801f754:	fb08 f000 	mul.w	r0, r8, r0
 801f758:	fb02 000e 	mla	r0, r2, lr, r0
 801f75c:	fb01 0004 	mla	r0, r1, r4, r0
 801f760:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f762:	fb09 0004 	mla	r0, r9, r4, r0
 801f766:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801f76a:	2800      	cmp	r0, #0
 801f76c:	f000 80fa 	beq.w	801f964 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f770:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f774:	d01b      	beq.n	801f7ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f776:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f77a:	fb0e fa0a 	mul.w	sl, lr, sl
 801f77e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f782:	fb0e fe03 	mul.w	lr, lr, r3
 801f786:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f78a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f78e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f792:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f796:	4453      	add	r3, sl
 801f798:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f79c:	0a1b      	lsrs	r3, r3, #8
 801f79e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f7a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f7a6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f7aa:	ea43 030c 	orr.w	r3, r3, ip
 801f7ae:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801f7b0:	2cff      	cmp	r4, #255	; 0xff
 801f7b2:	d021      	beq.n	801f7f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f7b4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f7b6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f7ba:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801f7bc:	fb04 fb0b 	mul.w	fp, r4, fp
 801f7c0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f7c2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f7c6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801f7c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f7cc:	fb04 fa0a 	mul.w	sl, r4, sl
 801f7d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f7d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f7d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f7dc:	44de      	add	lr, fp
 801f7de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f7e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f7e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f7ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f7ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f7f2:	ea4e 040a 	orr.w	r4, lr, sl
 801f7f6:	940e      	str	r4, [sp, #56]	; 0x38
 801f7f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f7fa:	2cff      	cmp	r4, #255	; 0xff
 801f7fc:	d021      	beq.n	801f842 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801f7fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f800:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f804:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f806:	fb04 fb0b 	mul.w	fp, r4, fp
 801f80a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f80c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f810:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f812:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f816:	fb04 fa0a 	mul.w	sl, r4, sl
 801f81a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f81e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f822:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f826:	44de      	add	lr, fp
 801f828:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f82c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f830:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f834:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f838:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f83c:	ea4e 040a 	orr.w	r4, lr, sl
 801f840:	940a      	str	r4, [sp, #40]	; 0x28
 801f842:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f844:	2cff      	cmp	r4, #255	; 0xff
 801f846:	d021      	beq.n	801f88c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801f848:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f84a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f84e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f850:	fb04 fb0b 	mul.w	fp, r4, fp
 801f854:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f856:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f85a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f85c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f860:	fb04 fa0a 	mul.w	sl, r4, sl
 801f864:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f868:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f86c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f870:	44de      	add	lr, fp
 801f872:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f876:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f87a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f87e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f882:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f886:	ea4e 040a 	orr.w	r4, lr, sl
 801f88a:	940f      	str	r4, [sp, #60]	; 0x3c
 801f88c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f88e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f892:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f894:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801f898:	fb08 fc0c 	mul.w	ip, r8, ip
 801f89c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f8a0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f8a4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f8a6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f8aa:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f8ae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f8b0:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f8b4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801f8b8:	fb08 f80e 	mul.w	r8, r8, lr
 801f8bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f8c0:	fb02 8303 	mla	r3, r2, r3, r8
 801f8c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f8c6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f8c8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f8cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f8ce:	fb01 330a 	mla	r3, r1, sl, r3
 801f8d2:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801f8d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801f8d8:	fb09 3901 	mla	r9, r9, r1, r3
 801f8dc:	4342      	muls	r2, r0
 801f8de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f8e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f8e6:	883b      	ldrh	r3, [r7, #0]
 801f8e8:	1c50      	adds	r0, r2, #1
 801f8ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f8ee:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f8f2:	ea4c 0c09 	orr.w	ip, ip, r9
 801f8f6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f8fa:	1219      	asrs	r1, r3, #8
 801f8fc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f900:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f904:	b2c0      	uxtb	r0, r0
 801f906:	fb12 f204 	smulbb	r2, r2, r4
 801f90a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f90e:	fb01 2100 	mla	r1, r1, r0, r2
 801f912:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f916:	10da      	asrs	r2, r3, #3
 801f918:	fa5f fc8c 	uxtb.w	ip, ip
 801f91c:	00db      	lsls	r3, r3, #3
 801f91e:	fb1c fc04 	smulbb	ip, ip, r4
 801f922:	b2db      	uxtb	r3, r3
 801f924:	b289      	uxth	r1, r1
 801f926:	fb03 c300 	mla	r3, r3, r0, ip
 801f92a:	fa1f fc83 	uxth.w	ip, r3
 801f92e:	1c4b      	adds	r3, r1, #1
 801f930:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f934:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f938:	fb1e fe04 	smulbb	lr, lr, r4
 801f93c:	f10c 0301 	add.w	r3, ip, #1
 801f940:	fb02 e200 	mla	r2, r2, r0, lr
 801f944:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f948:	b292      	uxth	r2, r2
 801f94a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f94e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f952:	430b      	orrs	r3, r1
 801f954:	1c51      	adds	r1, r2, #1
 801f956:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f95a:	0952      	lsrs	r2, r2, #5
 801f95c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f960:	4313      	orrs	r3, r2
 801f962:	803b      	strh	r3, [r7, #0]
 801f964:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f966:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f968:	441a      	add	r2, r3
 801f96a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f96c:	9229      	str	r2, [sp, #164]	; 0xa4
 801f96e:	441d      	add	r5, r3
 801f970:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f972:	3b01      	subs	r3, #1
 801f974:	3702      	adds	r7, #2
 801f976:	931a      	str	r3, [sp, #104]	; 0x68
 801f978:	e694      	b.n	801f6a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f97a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f97c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f97e:	441c      	add	r4, r3
 801f980:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f982:	9429      	str	r4, [sp, #164]	; 0xa4
 801f984:	441d      	add	r5, r3
 801f986:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f988:	3b01      	subs	r3, #1
 801f98a:	9309      	str	r3, [sp, #36]	; 0x24
 801f98c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f98e:	3302      	adds	r3, #2
 801f990:	930c      	str	r3, [sp, #48]	; 0x30
 801f992:	e666      	b.n	801f662 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f994:	d024      	beq.n	801f9e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801f996:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f998:	982b      	ldr	r0, [sp, #172]	; 0xac
 801f99a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f99c:	3b01      	subs	r3, #1
 801f99e:	fb00 4003 	mla	r0, r0, r3, r4
 801f9a2:	1400      	asrs	r0, r0, #16
 801f9a4:	f53f ae7b 	bmi.w	801f69e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f9a8:	3901      	subs	r1, #1
 801f9aa:	4288      	cmp	r0, r1
 801f9ac:	f6bf ae77 	bge.w	801f69e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f9b0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801f9b2:	fb01 5303 	mla	r3, r1, r3, r5
 801f9b6:	141b      	asrs	r3, r3, #16
 801f9b8:	f53f ae71 	bmi.w	801f69e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f9bc:	3a01      	subs	r2, #1
 801f9be:	4293      	cmp	r3, r2
 801f9c0:	f6bf ae6d 	bge.w	801f69e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f9c4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f9c8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801f9cc:	f1bb 0f00 	cmp.w	fp, #0
 801f9d0:	dc70      	bgt.n	801fab4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801f9d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9d4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f9d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f9da:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f9de:	930c      	str	r3, [sp, #48]	; 0x30
 801f9e0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f9e2:	2b00      	cmp	r3, #0
 801f9e4:	f340 81be 	ble.w	801fd64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801f9e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f9ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f9f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f9f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f9f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f9fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f9fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa02:	eef0 6a62 	vmov.f32	s13, s5
 801fa06:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fa12:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801fa16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fa1a:	eef0 6a43 	vmov.f32	s13, s6
 801fa1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fa22:	ee12 2a90 	vmov	r2, s5
 801fa26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fa2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa2e:	ee13 2a10 	vmov	r2, s6
 801fa32:	932b      	str	r3, [sp, #172]	; 0xac
 801fa34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fa36:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa3a:	932c      	str	r3, [sp, #176]	; 0xb0
 801fa3c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801fa3e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801fa40:	3b01      	subs	r3, #1
 801fa42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa46:	9319      	str	r3, [sp, #100]	; 0x64
 801fa48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fa4a:	bf08      	it	eq
 801fa4c:	4613      	moveq	r3, r2
 801fa4e:	ee16 5a90 	vmov	r5, s13
 801fa52:	9309      	str	r3, [sp, #36]	; 0x24
 801fa54:	eeb0 3a67 	vmov.f32	s6, s15
 801fa58:	eef0 2a47 	vmov.f32	s5, s14
 801fa5c:	e5f3      	b.n	801f646 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801fa5e:	2900      	cmp	r1, #0
 801fa60:	f43f ae66 	beq.w	801f730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801fa64:	f818 0000 	ldrb.w	r0, [r8, r0]
 801fa68:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801fa6c:	900a      	str	r0, [sp, #40]	; 0x28
 801fa6e:	0e00      	lsrs	r0, r0, #24
 801fa70:	9013      	str	r0, [sp, #76]	; 0x4c
 801fa72:	e65d      	b.n	801f730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801fa74:	f113 0801 	adds.w	r8, r3, #1
 801fa78:	f53f af74 	bmi.w	801f964 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fa7c:	4540      	cmp	r0, r8
 801fa7e:	f6ff af71 	blt.w	801f964 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fa82:	f11c 0801 	adds.w	r8, ip, #1
 801fa86:	f53f af6d 	bmi.w	801f964 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fa8a:	45c6      	cmp	lr, r8
 801fa8c:	f6ff af6a 	blt.w	801f964 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fa90:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801fa92:	9302      	str	r3, [sp, #8]
 801fa94:	b200      	sxth	r0, r0
 801fa96:	fa0f f38e 	sxth.w	r3, lr
 801fa9a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801fa9e:	e9cd c203 	strd	ip, r2, [sp, #12]
 801faa2:	9301      	str	r3, [sp, #4]
 801faa4:	9000      	str	r0, [sp, #0]
 801faa6:	4633      	mov	r3, r6
 801faa8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801faaa:	981d      	ldr	r0, [sp, #116]	; 0x74
 801faac:	4639      	mov	r1, r7
 801faae:	f7ff fc62 	bl	801f376 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801fab2:	e757      	b.n	801f964 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fab4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801fab6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801fab8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fabc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fabe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fac2:	1427      	asrs	r7, r4, #16
 801fac4:	142b      	asrs	r3, r5, #16
 801fac6:	fb01 7303 	mla	r3, r1, r3, r7
 801faca:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801facc:	18e7      	adds	r7, r4, r3
 801face:	5ce3      	ldrb	r3, [r4, r3]
 801fad0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801fad4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fad8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801fadc:	2a00      	cmp	r2, #0
 801fade:	f000 8137 	beq.w	801fd50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801fae2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801fae6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801faea:	9410      	str	r4, [sp, #64]	; 0x40
 801faec:	0e24      	lsrs	r4, r4, #24
 801faee:	9417      	str	r4, [sp, #92]	; 0x5c
 801faf0:	b170      	cbz	r0, 801fb10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801faf2:	eb07 0e01 	add.w	lr, r7, r1
 801faf6:	5c79      	ldrb	r1, [r7, r1]
 801faf8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fafc:	910b      	str	r1, [sp, #44]	; 0x2c
 801fafe:	0e09      	lsrs	r1, r1, #24
 801fb00:	9114      	str	r1, [sp, #80]	; 0x50
 801fb02:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801fb06:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fb0a:	9111      	str	r1, [sp, #68]	; 0x44
 801fb0c:	0e09      	lsrs	r1, r1, #24
 801fb0e:	9118      	str	r1, [sp, #96]	; 0x60
 801fb10:	b292      	uxth	r2, r2
 801fb12:	b280      	uxth	r0, r0
 801fb14:	fb02 f800 	mul.w	r8, r2, r0
 801fb18:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801fb1c:	0112      	lsls	r2, r2, #4
 801fb1e:	eba2 0e08 	sub.w	lr, r2, r8
 801fb22:	b280      	uxth	r0, r0
 801fb24:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801fb28:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801fb2a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fb2c:	fa1f fe8e 	uxth.w	lr, lr
 801fb30:	1a12      	subs	r2, r2, r0
 801fb32:	b292      	uxth	r2, r2
 801fb34:	fb0e f101 	mul.w	r1, lr, r1
 801fb38:	fb02 110c 	mla	r1, r2, ip, r1
 801fb3c:	fb00 1104 	mla	r1, r0, r4, r1
 801fb40:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801fb42:	fb08 1104 	mla	r1, r8, r4, r1
 801fb46:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801fb4a:	2900      	cmp	r1, #0
 801fb4c:	f000 80f5 	beq.w	801fd3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801fb50:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801fb54:	d019      	beq.n	801fb8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801fb56:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fb5a:	fb0c fa0a 	mul.w	sl, ip, sl
 801fb5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fb62:	fb0c fc03 	mul.w	ip, ip, r3
 801fb66:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fb6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fb6e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fb72:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801fb76:	4453      	add	r3, sl
 801fb78:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fb7c:	0a1b      	lsrs	r3, r3, #8
 801fb7e:	0a3f      	lsrs	r7, r7, #8
 801fb80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fb84:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801fb88:	433b      	orrs	r3, r7
 801fb8a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fb8c:	2cff      	cmp	r4, #255	; 0xff
 801fb8e:	d020      	beq.n	801fbd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801fb90:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801fb92:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fb96:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fb98:	4367      	muls	r7, r4
 801fb9a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801fb9c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fba0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fba2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fba6:	fb04 fa0a 	mul.w	sl, r4, sl
 801fbaa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fbae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fbb2:	44bc      	add	ip, r7
 801fbb4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fbb8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fbbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fbc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fbc4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fbc8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fbcc:	ea4c 040a 	orr.w	r4, ip, sl
 801fbd0:	9410      	str	r4, [sp, #64]	; 0x40
 801fbd2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fbd4:	2cff      	cmp	r4, #255	; 0xff
 801fbd6:	d020      	beq.n	801fc1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801fbd8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fbda:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fbde:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fbe0:	4367      	muls	r7, r4
 801fbe2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fbe4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fbe8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fbea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fbee:	fb04 fa0a 	mul.w	sl, r4, sl
 801fbf2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fbf6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fbfa:	44bc      	add	ip, r7
 801fbfc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fc00:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fc04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fc08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc0c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fc10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fc14:	ea4c 040a 	orr.w	r4, ip, sl
 801fc18:	940b      	str	r4, [sp, #44]	; 0x2c
 801fc1a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801fc1c:	2cff      	cmp	r4, #255	; 0xff
 801fc1e:	d020      	beq.n	801fc62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801fc20:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fc22:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fc26:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801fc28:	4367      	muls	r7, r4
 801fc2a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fc2c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fc30:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801fc32:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fc36:	fb04 fa0a 	mul.w	sl, r4, sl
 801fc3a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fc3e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fc42:	44bc      	add	ip, r7
 801fc44:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fc48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fc4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fc50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fc58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fc5c:	ea4c 040a 	orr.w	r4, ip, sl
 801fc60:	9411      	str	r4, [sp, #68]	; 0x44
 801fc62:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801fc64:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fc68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fc6a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801fc6e:	fb0e f707 	mul.w	r7, lr, r7
 801fc72:	fb02 770c 	mla	r7, r2, ip, r7
 801fc76:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fc7a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fc7c:	fb00 770c 	mla	r7, r0, ip, r7
 801fc80:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fc84:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801fc86:	fb08 770c 	mla	r7, r8, ip, r7
 801fc8a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801fc8e:	fb0e fe0c 	mul.w	lr, lr, ip
 801fc92:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fc96:	fb02 e303 	mla	r3, r2, r3, lr
 801fc9a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fc9c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fc9e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801fca2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fca4:	fb00 330a 	mla	r3, r0, sl, r3
 801fca8:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801fcac:	fb08 3c0c 	mla	ip, r8, ip, r3
 801fcb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fcb2:	f8b9 0000 	ldrh.w	r0, [r9]
 801fcb6:	434b      	muls	r3, r1
 801fcb8:	0a3f      	lsrs	r7, r7, #8
 801fcba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fcbe:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fcc2:	1c59      	adds	r1, r3, #1
 801fcc4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801fcc8:	ea47 070c 	orr.w	r7, r7, ip
 801fccc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fcd0:	1202      	asrs	r2, r0, #8
 801fcd2:	0c3b      	lsrs	r3, r7, #16
 801fcd4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801fcd8:	b2c9      	uxtb	r1, r1
 801fcda:	fb13 f304 	smulbb	r3, r3, r4
 801fcde:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801fce2:	fb02 3201 	mla	r2, r2, r1, r3
 801fce6:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801fcea:	10c3      	asrs	r3, r0, #3
 801fcec:	b2ff      	uxtb	r7, r7
 801fcee:	00c0      	lsls	r0, r0, #3
 801fcf0:	b292      	uxth	r2, r2
 801fcf2:	fb1c fc04 	smulbb	ip, ip, r4
 801fcf6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801fcfa:	b2c0      	uxtb	r0, r0
 801fcfc:	fb17 f704 	smulbb	r7, r7, r4
 801fd00:	fb03 c301 	mla	r3, r3, r1, ip
 801fd04:	fb00 7001 	mla	r0, r0, r1, r7
 801fd08:	f102 0c01 	add.w	ip, r2, #1
 801fd0c:	b280      	uxth	r0, r0
 801fd0e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801fd12:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801fd16:	1c42      	adds	r2, r0, #1
 801fd18:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801fd1c:	b29b      	uxth	r3, r3
 801fd1e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fd22:	ea42 020c 	orr.w	r2, r2, ip
 801fd26:	f103 0c01 	add.w	ip, r3, #1
 801fd2a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801fd2e:	095b      	lsrs	r3, r3, #5
 801fd30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fd34:	431a      	orrs	r2, r3
 801fd36:	f8a9 2000 	strh.w	r2, [r9]
 801fd3a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801fd3c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801fd3e:	441a      	add	r2, r3
 801fd40:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fd42:	9229      	str	r2, [sp, #164]	; 0xa4
 801fd44:	f109 0902 	add.w	r9, r9, #2
 801fd48:	441d      	add	r5, r3
 801fd4a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fd4e:	e63d      	b.n	801f9cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801fd50:	2800      	cmp	r0, #0
 801fd52:	f43f aedd 	beq.w	801fb10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801fd56:	5c79      	ldrb	r1, [r7, r1]
 801fd58:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fd5c:	910b      	str	r1, [sp, #44]	; 0x2c
 801fd5e:	0e09      	lsrs	r1, r1, #24
 801fd60:	9114      	str	r1, [sp, #80]	; 0x50
 801fd62:	e6d5      	b.n	801fb10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801fd64:	b01f      	add	sp, #124	; 0x7c
 801fd66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fd6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801fd6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd6e:	b089      	sub	sp, #36	; 0x24
 801fd70:	9101      	str	r1, [sp, #4]
 801fd72:	9801      	ldr	r0, [sp, #4]
 801fd74:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801fd78:	8800      	ldrh	r0, [r0, #0]
 801fd7a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801fd7e:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801fd82:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801fd86:	1206      	asrs	r6, r0, #8
 801fd88:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801fd8c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801fd90:	9602      	str	r6, [sp, #8]
 801fd92:	10c6      	asrs	r6, r0, #3
 801fd94:	00c0      	lsls	r0, r0, #3
 801fd96:	b2c0      	uxtb	r0, r0
 801fd98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801fd9c:	9004      	str	r0, [sp, #16]
 801fd9e:	2f00      	cmp	r7, #0
 801fda0:	fb07 100c 	mla	r0, r7, ip, r1
 801fda4:	9603      	str	r6, [sp, #12]
 801fda6:	eb02 0e00 	add.w	lr, r2, r0
 801fdaa:	f2c0 810a 	blt.w	801ffc2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801fdae:	45b8      	cmp	r8, r7
 801fdb0:	f340 8107 	ble.w	801ffc2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801fdb4:	2900      	cmp	r1, #0
 801fdb6:	f2c0 8102 	blt.w	801ffbe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801fdba:	458c      	cmp	ip, r1
 801fdbc:	f340 80ff 	ble.w	801ffbe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801fdc0:	5c12      	ldrb	r2, [r2, r0]
 801fdc2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801fdc6:	1c4a      	adds	r2, r1, #1
 801fdc8:	f100 80fe 	bmi.w	801ffc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801fdcc:	4594      	cmp	ip, r2
 801fdce:	f340 80fb 	ble.w	801ffc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801fdd2:	2d00      	cmp	r5, #0
 801fdd4:	f000 80fa 	beq.w	801ffcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801fdd8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fddc:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801fde0:	3701      	adds	r7, #1
 801fde2:	f100 80f7 	bmi.w	801ffd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801fde6:	45b8      	cmp	r8, r7
 801fde8:	f340 80f4 	ble.w	801ffd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801fdec:	2c00      	cmp	r4, #0
 801fdee:	f000 80f4 	beq.w	801ffda <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801fdf2:	2900      	cmp	r1, #0
 801fdf4:	eb0e 020c 	add.w	r2, lr, ip
 801fdf8:	f2c0 80ea 	blt.w	801ffd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801fdfc:	458c      	cmp	ip, r1
 801fdfe:	f340 80e7 	ble.w	801ffd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801fe02:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801fe06:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801fe0a:	3101      	adds	r1, #1
 801fe0c:	f100 80e8 	bmi.w	801ffe0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801fe10:	458c      	cmp	ip, r1
 801fe12:	f340 80e5 	ble.w	801ffe0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801fe16:	2d00      	cmp	r5, #0
 801fe18:	f000 80e4 	beq.w	801ffe4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801fe1c:	7852      	ldrb	r2, [r2, #1]
 801fe1e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fe22:	0e0b      	lsrs	r3, r1, #24
 801fe24:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801fe28:	9300      	str	r3, [sp, #0]
 801fe2a:	b2a4      	uxth	r4, r4
 801fe2c:	b2ab      	uxth	r3, r5
 801fe2e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801fe32:	fb03 f904 	mul.w	r9, r3, r4
 801fe36:	fb0a f505 	mul.w	r5, sl, r5
 801fe3a:	011b      	lsls	r3, r3, #4
 801fe3c:	eba3 0e09 	sub.w	lr, r3, r9
 801fe40:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801fe44:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801fe48:	0a28      	lsrs	r0, r5, #8
 801fe4a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801fe4e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801fe52:	4405      	add	r5, r0
 801fe54:	0a2d      	lsrs	r5, r5, #8
 801fe56:	fb0a f303 	mul.w	r3, sl, r3
 801fe5a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801fe5e:	9005      	str	r0, [sp, #20]
 801fe60:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801fe64:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801fe68:	0a1b      	lsrs	r3, r3, #8
 801fe6a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801fe6e:	9306      	str	r3, [sp, #24]
 801fe70:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801fe74:	fb0b f303 	mul.w	r3, fp, r3
 801fe78:	0a1d      	lsrs	r5, r3, #8
 801fe7a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801fe7e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801fe82:	fb0b f606 	mul.w	r6, fp, r6
 801fe86:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801fe8a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801fe8e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fe92:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801fe96:	fb08 f707 	mul.w	r7, r8, r7
 801fe9a:	441d      	add	r5, r3
 801fe9c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801fea0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801fea4:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801fea8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801feac:	fb08 fc0c 	mul.w	ip, r8, ip
 801feb0:	0a1b      	lsrs	r3, r3, #8
 801feb2:	9307      	str	r3, [sp, #28]
 801feb4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801feb8:	0e0b      	lsrs	r3, r1, #24
 801feba:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801febe:	435f      	muls	r7, r3
 801fec0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fec4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801fec8:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801fecc:	4460      	add	r0, ip
 801fece:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fed2:	b2a4      	uxth	r4, r4
 801fed4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fed8:	0a2d      	lsrs	r5, r5, #8
 801feda:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fede:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fee2:	fa1f fe8e 	uxth.w	lr, lr
 801fee6:	4359      	muls	r1, r3
 801fee8:	1b12      	subs	r2, r2, r4
 801feea:	9b05      	ldr	r3, [sp, #20]
 801feec:	44bc      	add	ip, r7
 801feee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fef2:	b292      	uxth	r2, r2
 801fef4:	fb05 f50e 	mul.w	r5, r5, lr
 801fef8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fefc:	fb03 5502 	mla	r5, r3, r2, r5
 801ff00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ff04:	9b06      	ldr	r3, [sp, #24]
 801ff06:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801ff0a:	0a36      	lsrs	r6, r6, #8
 801ff0c:	0a00      	lsrs	r0, r0, #8
 801ff0e:	fb0c 5509 	mla	r5, ip, r9, r5
 801ff12:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801ff16:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ff1a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801ff1e:	fb00 5504 	mla	r5, r0, r4, r5
 801ff22:	fb0e f606 	mul.w	r6, lr, r6
 801ff26:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801ff2a:	0a09      	lsrs	r1, r1, #8
 801ff2c:	9b07      	ldr	r3, [sp, #28]
 801ff2e:	fb02 6000 	mla	r0, r2, r0, r6
 801ff32:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ff36:	fb09 0001 	mla	r0, r9, r1, r0
 801ff3a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ff3e:	fb0e fe0b 	mul.w	lr, lr, fp
 801ff42:	fb04 0003 	mla	r0, r4, r3, r0
 801ff46:	fb02 e20a 	mla	r2, r2, sl, lr
 801ff4a:	9b00      	ldr	r3, [sp, #0]
 801ff4c:	fb04 2408 	mla	r4, r4, r8, r2
 801ff50:	fb09 4903 	mla	r9, r9, r3, r4
 801ff54:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801ff58:	9b02      	ldr	r3, [sp, #8]
 801ff5a:	9a04      	ldr	r2, [sp, #16]
 801ff5c:	fa5f f989 	uxtb.w	r9, r9
 801ff60:	fb03 f109 	mul.w	r1, r3, r9
 801ff64:	9b03      	ldr	r3, [sp, #12]
 801ff66:	0a2d      	lsrs	r5, r5, #8
 801ff68:	0a00      	lsrs	r0, r0, #8
 801ff6a:	fb03 f309 	mul.w	r3, r3, r9
 801ff6e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801ff72:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ff76:	4305      	orrs	r5, r0
 801ff78:	fb02 f909 	mul.w	r9, r2, r9
 801ff7c:	1c58      	adds	r0, r3, #1
 801ff7e:	1c4a      	adds	r2, r1, #1
 801ff80:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ff84:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ff88:	0a2b      	lsrs	r3, r5, #8
 801ff8a:	0c2a      	lsrs	r2, r5, #16
 801ff8c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ff90:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801ff94:	00db      	lsls	r3, r3, #3
 801ff96:	0212      	lsls	r2, r2, #8
 801ff98:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801ff9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ffa0:	4313      	orrs	r3, r2
 801ffa2:	f109 0201 	add.w	r2, r9, #1
 801ffa6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801ffaa:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801ffae:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ffb2:	431d      	orrs	r5, r3
 801ffb4:	9b01      	ldr	r3, [sp, #4]
 801ffb6:	801d      	strh	r5, [r3, #0]
 801ffb8:	b009      	add	sp, #36	; 0x24
 801ffba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ffbe:	2000      	movs	r0, #0
 801ffc0:	e701      	b.n	801fdc6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801ffc2:	2600      	movs	r6, #0
 801ffc4:	4630      	mov	r0, r6
 801ffc6:	e70b      	b.n	801fde0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ffc8:	2600      	movs	r6, #0
 801ffca:	e709      	b.n	801fde0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ffcc:	462e      	mov	r6, r5
 801ffce:	e707      	b.n	801fde0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ffd0:	2700      	movs	r7, #0
 801ffd2:	e71a      	b.n	801fe0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801ffd4:	2100      	movs	r1, #0
 801ffd6:	460f      	mov	r7, r1
 801ffd8:	e723      	b.n	801fe22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ffda:	4621      	mov	r1, r4
 801ffdc:	4627      	mov	r7, r4
 801ffde:	e720      	b.n	801fe22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ffe0:	2100      	movs	r1, #0
 801ffe2:	e71e      	b.n	801fe22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ffe4:	4629      	mov	r1, r5
 801ffe6:	e71c      	b.n	801fe22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801ffe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ffe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ffec:	b09b      	sub	sp, #108	; 0x6c
 801ffee:	9218      	str	r2, [sp, #96]	; 0x60
 801fff0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801fff2:	9116      	str	r1, [sp, #88]	; 0x58
 801fff4:	9307      	str	r3, [sp, #28]
 801fff6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801fffa:	9019      	str	r0, [sp, #100]	; 0x64
 801fffc:	6850      	ldr	r0, [r2, #4]
 801fffe:	6812      	ldr	r2, [r2, #0]
 8020000:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020002:	fb00 1303 	mla	r3, r0, r3, r1
 8020006:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802000a:	930a      	str	r3, [sp, #40]	; 0x28
 802000c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802000e:	681b      	ldr	r3, [r3, #0]
 8020010:	930f      	str	r3, [sp, #60]	; 0x3c
 8020012:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020014:	685e      	ldr	r6, [r3, #4]
 8020016:	3604      	adds	r6, #4
 8020018:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802001a:	2b00      	cmp	r3, #0
 802001c:	dc03      	bgt.n	8020026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802001e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020020:	2b00      	cmp	r3, #0
 8020022:	f340 8373 	ble.w	802070c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020026:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020028:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802002c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020030:	1e48      	subs	r0, r1, #1
 8020032:	1e57      	subs	r7, r2, #1
 8020034:	9b07      	ldr	r3, [sp, #28]
 8020036:	2b00      	cmp	r3, #0
 8020038:	f340 8190 	ble.w	802035c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802003c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802003e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020042:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020046:	d406      	bmi.n	8020056 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020048:	4584      	cmp	ip, r0
 802004a:	da04      	bge.n	8020056 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802004c:	2b00      	cmp	r3, #0
 802004e:	db02      	blt.n	8020056 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020050:	42bb      	cmp	r3, r7
 8020052:	f2c0 8184 	blt.w	802035e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020056:	f11c 0c01 	adds.w	ip, ip, #1
 802005a:	f100 8172 	bmi.w	8020342 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802005e:	4561      	cmp	r1, ip
 8020060:	f2c0 816f 	blt.w	8020342 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020064:	3301      	adds	r3, #1
 8020066:	f100 816c 	bmi.w	8020342 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802006a:	429a      	cmp	r2, r3
 802006c:	f2c0 8169 	blt.w	8020342 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020070:	9b07      	ldr	r3, [sp, #28]
 8020072:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020074:	9317      	str	r3, [sp, #92]	; 0x5c
 8020076:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020078:	2b00      	cmp	r3, #0
 802007a:	f340 818e 	ble.w	802039a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 802007e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020080:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020084:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020086:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802008a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802008c:	141b      	asrs	r3, r3, #16
 802008e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020092:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020096:	f100 81d1 	bmi.w	802043c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802009a:	f101 38ff 	add.w	r8, r1, #4294967295
 802009e:	4543      	cmp	r3, r8
 80200a0:	f280 81cc 	bge.w	802043c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80200a4:	f1bc 0f00 	cmp.w	ip, #0
 80200a8:	f2c0 81c8 	blt.w	802043c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80200ac:	f10e 38ff 	add.w	r8, lr, #4294967295
 80200b0:	45c4      	cmp	ip, r8
 80200b2:	f280 81c3 	bge.w	802043c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80200b6:	b209      	sxth	r1, r1
 80200b8:	fb0c 3301 	mla	r3, ip, r1, r3
 80200bc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80200be:	eb04 0803 	add.w	r8, r4, r3
 80200c2:	5ce3      	ldrb	r3, [r4, r3]
 80200c4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80200c8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80200cc:	2a00      	cmp	r2, #0
 80200ce:	f000 81aa 	beq.w	8020426 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80200d2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80200d6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80200da:	940b      	str	r4, [sp, #44]	; 0x2c
 80200dc:	0e24      	lsrs	r4, r4, #24
 80200de:	9412      	str	r4, [sp, #72]	; 0x48
 80200e0:	b178      	cbz	r0, 8020102 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80200e2:	eb08 0c01 	add.w	ip, r8, r1
 80200e6:	f818 1001 	ldrb.w	r1, [r8, r1]
 80200ea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80200ee:	9108      	str	r1, [sp, #32]
 80200f0:	0e09      	lsrs	r1, r1, #24
 80200f2:	9110      	str	r1, [sp, #64]	; 0x40
 80200f4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80200f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80200fc:	910c      	str	r1, [sp, #48]	; 0x30
 80200fe:	0e09      	lsrs	r1, r1, #24
 8020100:	9113      	str	r1, [sp, #76]	; 0x4c
 8020102:	b292      	uxth	r2, r2
 8020104:	b280      	uxth	r0, r0
 8020106:	fb02 f900 	mul.w	r9, r2, r0
 802010a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802010e:	0112      	lsls	r2, r2, #4
 8020110:	eba2 0809 	sub.w	r8, r2, r9
 8020114:	b280      	uxth	r0, r0
 8020116:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802011a:	9912      	ldr	r1, [sp, #72]	; 0x48
 802011c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802011e:	fa1f f888 	uxth.w	r8, r8
 8020122:	1a12      	subs	r2, r2, r0
 8020124:	b292      	uxth	r2, r2
 8020126:	fb08 f101 	mul.w	r1, r8, r1
 802012a:	fb02 110e 	mla	r1, r2, lr, r1
 802012e:	fb00 1104 	mla	r1, r0, r4, r1
 8020132:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020134:	fb09 1104 	mla	r1, r9, r4, r1
 8020138:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802013c:	2900      	cmp	r1, #0
 802013e:	f000 80f5 	beq.w	802032c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020142:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020146:	d01b      	beq.n	8020180 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020148:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802014c:	fb0e fa0a 	mul.w	sl, lr, sl
 8020150:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020154:	fb0e fe03 	mul.w	lr, lr, r3
 8020158:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802015c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020160:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020164:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020168:	4453      	add	r3, sl
 802016a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802016e:	0a1b      	lsrs	r3, r3, #8
 8020170:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020174:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020178:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802017c:	ea43 030c 	orr.w	r3, r3, ip
 8020180:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020182:	2cff      	cmp	r4, #255	; 0xff
 8020184:	d021      	beq.n	80201ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020186:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020188:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802018c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802018e:	fb04 fb0b 	mul.w	fp, r4, fp
 8020192:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020194:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020198:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802019a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802019e:	fb04 fa0a 	mul.w	sl, r4, sl
 80201a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201a6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80201aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80201ae:	44de      	add	lr, fp
 80201b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80201b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80201b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80201c4:	ea4e 040a 	orr.w	r4, lr, sl
 80201c8:	940b      	str	r4, [sp, #44]	; 0x2c
 80201ca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80201cc:	2cff      	cmp	r4, #255	; 0xff
 80201ce:	d021      	beq.n	8020214 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80201d0:	9c08      	ldr	r4, [sp, #32]
 80201d2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80201d6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80201d8:	fb04 fb0b 	mul.w	fp, r4, fp
 80201dc:	9c08      	ldr	r4, [sp, #32]
 80201de:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80201e2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80201e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80201e8:	fb04 fa0a 	mul.w	sl, r4, sl
 80201ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201f0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80201f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80201f8:	44de      	add	lr, fp
 80201fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80201fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020202:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020206:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802020a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802020e:	ea4e 040a 	orr.w	r4, lr, sl
 8020212:	9408      	str	r4, [sp, #32]
 8020214:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020216:	2cff      	cmp	r4, #255	; 0xff
 8020218:	d021      	beq.n	802025e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802021a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802021c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020220:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020222:	fb04 fb0b 	mul.w	fp, r4, fp
 8020226:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020228:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802022c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802022e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020232:	fb04 fa0a 	mul.w	sl, r4, sl
 8020236:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802023a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802023e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020242:	44de      	add	lr, fp
 8020244:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020248:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802024c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020250:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020254:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020258:	ea4e 040a 	orr.w	r4, lr, sl
 802025c:	940c      	str	r4, [sp, #48]	; 0x30
 802025e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020260:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020264:	9c08      	ldr	r4, [sp, #32]
 8020266:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802026a:	fb08 fc0c 	mul.w	ip, r8, ip
 802026e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020272:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020276:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020278:	fb00 cc0e 	mla	ip, r0, lr, ip
 802027c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020280:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020282:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020286:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802028a:	fb08 f80e 	mul.w	r8, r8, lr
 802028e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020292:	fb02 8303 	mla	r3, r2, r3, r8
 8020296:	9a08      	ldr	r2, [sp, #32]
 8020298:	f8b7 8000 	ldrh.w	r8, [r7]
 802029c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80202a0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80202a2:	fb00 330a 	mla	r3, r0, sl, r3
 80202a6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80202aa:	fb09 3900 	mla	r9, r9, r0, r3
 80202ae:	43c9      	mvns	r1, r1
 80202b0:	ea4f 2228 	mov.w	r2, r8, asr #8
 80202b4:	fa5f fe81 	uxtb.w	lr, r1
 80202b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80202bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80202c0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80202c4:	fb02 f20e 	mul.w	r2, r2, lr
 80202c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80202cc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80202d0:	ea4c 0c09 	orr.w	ip, ip, r9
 80202d4:	1c53      	adds	r3, r2, #1
 80202d6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80202da:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80202de:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80202e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80202e6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80202ea:	4a63      	ldr	r2, [pc, #396]	; (8020478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80202ec:	fb00 f00e 	mul.w	r0, r0, lr
 80202f0:	b2db      	uxtb	r3, r3
 80202f2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80202f6:	1c43      	adds	r3, r0, #1
 80202f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80202fc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020300:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020304:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020308:	b2c9      	uxtb	r1, r1
 802030a:	00db      	lsls	r3, r3, #3
 802030c:	fb01 f10e 	mul.w	r1, r1, lr
 8020310:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020314:	4313      	orrs	r3, r2
 8020316:	1c4a      	adds	r2, r1, #1
 8020318:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802031c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020320:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020324:	ea4c 0c03 	orr.w	ip, ip, r3
 8020328:	f8a7 c000 	strh.w	ip, [r7]
 802032c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802032e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020330:	441a      	add	r2, r3
 8020332:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020334:	9225      	str	r2, [sp, #148]	; 0x94
 8020336:	441d      	add	r5, r3
 8020338:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802033a:	3b01      	subs	r3, #1
 802033c:	3702      	adds	r7, #2
 802033e:	9317      	str	r3, [sp, #92]	; 0x5c
 8020340:	e699      	b.n	8020076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020342:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020344:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020346:	441c      	add	r4, r3
 8020348:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802034a:	9425      	str	r4, [sp, #148]	; 0x94
 802034c:	441d      	add	r5, r3
 802034e:	9b07      	ldr	r3, [sp, #28]
 8020350:	3b01      	subs	r3, #1
 8020352:	9307      	str	r3, [sp, #28]
 8020354:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020356:	3302      	adds	r3, #2
 8020358:	930a      	str	r3, [sp, #40]	; 0x28
 802035a:	e66b      	b.n	8020034 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802035c:	d024      	beq.n	80203a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802035e:	9b07      	ldr	r3, [sp, #28]
 8020360:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020362:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020364:	3b01      	subs	r3, #1
 8020366:	fb00 4003 	mla	r0, r0, r3, r4
 802036a:	1400      	asrs	r0, r0, #16
 802036c:	f53f ae80 	bmi.w	8020070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020370:	3901      	subs	r1, #1
 8020372:	4288      	cmp	r0, r1
 8020374:	f6bf ae7c 	bge.w	8020070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020378:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802037a:	fb01 5303 	mla	r3, r1, r3, r5
 802037e:	141b      	asrs	r3, r3, #16
 8020380:	f53f ae76 	bmi.w	8020070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020384:	3a01      	subs	r2, #1
 8020386:	4293      	cmp	r3, r2
 8020388:	f6bf ae72 	bge.w	8020070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802038c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020390:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020394:	f1bb 0f00 	cmp.w	fp, #0
 8020398:	dc70      	bgt.n	802047c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802039a:	9b07      	ldr	r3, [sp, #28]
 802039c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80203a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80203a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80203a6:	930a      	str	r3, [sp, #40]	; 0x28
 80203a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80203aa:	2b00      	cmp	r3, #0
 80203ac:	f340 81ae 	ble.w	802070c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80203b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80203b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80203b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80203bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80203be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80203c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80203c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80203ca:	eef0 6a62 	vmov.f32	s13, s5
 80203ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80203d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80203d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80203da:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80203de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80203e2:	eef0 6a43 	vmov.f32	s13, s6
 80203e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80203ea:	ee12 2a90 	vmov	r2, s5
 80203ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80203f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80203f6:	ee13 2a10 	vmov	r2, s6
 80203fa:	9327      	str	r3, [sp, #156]	; 0x9c
 80203fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80203fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8020402:	9328      	str	r3, [sp, #160]	; 0xa0
 8020404:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020406:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020408:	3b01      	subs	r3, #1
 802040a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802040e:	9316      	str	r3, [sp, #88]	; 0x58
 8020410:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020412:	bf08      	it	eq
 8020414:	4613      	moveq	r3, r2
 8020416:	ee16 5a90 	vmov	r5, s13
 802041a:	9307      	str	r3, [sp, #28]
 802041c:	eeb0 3a67 	vmov.f32	s6, s15
 8020420:	eef0 2a47 	vmov.f32	s5, s14
 8020424:	e5f8      	b.n	8020018 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020426:	2800      	cmp	r0, #0
 8020428:	f43f ae6b 	beq.w	8020102 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802042c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020430:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020434:	9108      	str	r1, [sp, #32]
 8020436:	0e09      	lsrs	r1, r1, #24
 8020438:	9110      	str	r1, [sp, #64]	; 0x40
 802043a:	e662      	b.n	8020102 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802043c:	f113 0801 	adds.w	r8, r3, #1
 8020440:	f53f af74 	bmi.w	802032c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020444:	4541      	cmp	r1, r8
 8020446:	f6ff af71 	blt.w	802032c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802044a:	f11c 0801 	adds.w	r8, ip, #1
 802044e:	f53f af6d 	bmi.w	802032c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020452:	45c6      	cmp	lr, r8
 8020454:	f6ff af6a 	blt.w	802032c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020458:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802045c:	b209      	sxth	r1, r1
 802045e:	fa0f f38e 	sxth.w	r3, lr
 8020462:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020466:	9301      	str	r3, [sp, #4]
 8020468:	9100      	str	r1, [sp, #0]
 802046a:	4633      	mov	r3, r6
 802046c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802046e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020470:	4639      	mov	r1, r7
 8020472:	f7ff fc7a 	bl	801fd6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020476:	e759      	b.n	802032c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020478:	fffff800 	.word	0xfffff800
 802047c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802047e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020480:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020484:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020486:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802048a:	1427      	asrs	r7, r4, #16
 802048c:	142b      	asrs	r3, r5, #16
 802048e:	fb01 7303 	mla	r3, r1, r3, r7
 8020492:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020494:	18e7      	adds	r7, r4, r3
 8020496:	5ce3      	ldrb	r3, [r4, r3]
 8020498:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802049c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80204a0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80204a4:	2a00      	cmp	r2, #0
 80204a6:	f000 8127 	beq.w	80206f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80204aa:	f897 e001 	ldrb.w	lr, [r7, #1]
 80204ae:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80204b2:	940d      	str	r4, [sp, #52]	; 0x34
 80204b4:	0e24      	lsrs	r4, r4, #24
 80204b6:	9414      	str	r4, [sp, #80]	; 0x50
 80204b8:	b170      	cbz	r0, 80204d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80204ba:	eb07 0e01 	add.w	lr, r7, r1
 80204be:	5c79      	ldrb	r1, [r7, r1]
 80204c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80204c4:	9109      	str	r1, [sp, #36]	; 0x24
 80204c6:	0e09      	lsrs	r1, r1, #24
 80204c8:	9111      	str	r1, [sp, #68]	; 0x44
 80204ca:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80204ce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80204d2:	910e      	str	r1, [sp, #56]	; 0x38
 80204d4:	0e09      	lsrs	r1, r1, #24
 80204d6:	9115      	str	r1, [sp, #84]	; 0x54
 80204d8:	b292      	uxth	r2, r2
 80204da:	b280      	uxth	r0, r0
 80204dc:	fb02 f800 	mul.w	r8, r2, r0
 80204e0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80204e4:	0112      	lsls	r2, r2, #4
 80204e6:	eba2 0e08 	sub.w	lr, r2, r8
 80204ea:	b280      	uxth	r0, r0
 80204ec:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80204f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80204f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80204f4:	fa1f fe8e 	uxth.w	lr, lr
 80204f8:	1a09      	subs	r1, r1, r0
 80204fa:	b289      	uxth	r1, r1
 80204fc:	fb0e f202 	mul.w	r2, lr, r2
 8020500:	fb01 220c 	mla	r2, r1, ip, r2
 8020504:	fb00 2204 	mla	r2, r0, r4, r2
 8020508:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802050a:	fb08 2204 	mla	r2, r8, r4, r2
 802050e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020512:	2a00      	cmp	r2, #0
 8020514:	f000 80e5 	beq.w	80206e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020518:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802051c:	d019      	beq.n	8020552 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802051e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020522:	fb0c fa0a 	mul.w	sl, ip, sl
 8020526:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802052a:	fb0c fc03 	mul.w	ip, ip, r3
 802052e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020532:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020536:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802053a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802053e:	4453      	add	r3, sl
 8020540:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020544:	0a1b      	lsrs	r3, r3, #8
 8020546:	0a3f      	lsrs	r7, r7, #8
 8020548:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802054c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020550:	433b      	orrs	r3, r7
 8020552:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020554:	2cff      	cmp	r4, #255	; 0xff
 8020556:	d020      	beq.n	802059a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020558:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802055a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802055e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020560:	4367      	muls	r7, r4
 8020562:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020564:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020568:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802056a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802056e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020572:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020576:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802057a:	44bc      	add	ip, r7
 802057c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020580:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020584:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020588:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802058c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020590:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020594:	ea4c 040a 	orr.w	r4, ip, sl
 8020598:	940d      	str	r4, [sp, #52]	; 0x34
 802059a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802059c:	2cff      	cmp	r4, #255	; 0xff
 802059e:	d020      	beq.n	80205e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80205a0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80205a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80205a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80205a8:	4367      	muls	r7, r4
 80205aa:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80205ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80205b0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80205b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80205b6:	fb04 fa0a 	mul.w	sl, r4, sl
 80205ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80205be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205c2:	44bc      	add	ip, r7
 80205c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80205c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80205cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80205d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80205dc:	ea4c 040a 	orr.w	r4, ip, sl
 80205e0:	9409      	str	r4, [sp, #36]	; 0x24
 80205e2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80205e4:	2cff      	cmp	r4, #255	; 0xff
 80205e6:	d020      	beq.n	802062a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80205e8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80205ea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80205ee:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80205f0:	4367      	muls	r7, r4
 80205f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80205f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80205f8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80205fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80205fe:	fb04 fa0a 	mul.w	sl, r4, sl
 8020602:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020606:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802060a:	44bc      	add	ip, r7
 802060c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020610:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020614:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020618:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802061c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020620:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020624:	ea4c 040a 	orr.w	r4, ip, sl
 8020628:	940e      	str	r4, [sp, #56]	; 0x38
 802062a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802062c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020630:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020632:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020636:	fb0e f707 	mul.w	r7, lr, r7
 802063a:	fb01 770c 	mla	r7, r1, ip, r7
 802063e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020642:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020644:	fb00 770c 	mla	r7, r0, ip, r7
 8020648:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802064c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802064e:	fb08 770c 	mla	r7, r8, ip, r7
 8020652:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020656:	fb0e fe0c 	mul.w	lr, lr, ip
 802065a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802065e:	fb01 e303 	mla	r3, r1, r3, lr
 8020662:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020664:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020668:	990e      	ldr	r1, [sp, #56]	; 0x38
 802066a:	fb00 330a 	mla	r3, r0, sl, r3
 802066e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8020672:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020676:	f8b9 3000 	ldrh.w	r3, [r9]
 802067a:	43d2      	mvns	r2, r2
 802067c:	1218      	asrs	r0, r3, #8
 802067e:	b2d2      	uxtb	r2, r2
 8020680:	10d9      	asrs	r1, r3, #3
 8020682:	0a3f      	lsrs	r7, r7, #8
 8020684:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020688:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802068c:	00db      	lsls	r3, r3, #3
 802068e:	4350      	muls	r0, r2
 8020690:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020694:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020698:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802069c:	b2db      	uxtb	r3, r3
 802069e:	ea47 070c 	orr.w	r7, r7, ip
 80206a2:	4351      	muls	r1, r2
 80206a4:	4353      	muls	r3, r2
 80206a6:	1c42      	adds	r2, r0, #1
 80206a8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80206ac:	0c3a      	lsrs	r2, r7, #16
 80206ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80206b2:	4a18      	ldr	r2, [pc, #96]	; (8020714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80206b4:	b2c0      	uxtb	r0, r0
 80206b6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80206ba:	1c4a      	adds	r2, r1, #1
 80206bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80206c0:	0a3a      	lsrs	r2, r7, #8
 80206c2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80206c6:	00c9      	lsls	r1, r1, #3
 80206c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80206cc:	4301      	orrs	r1, r0
 80206ce:	1c58      	adds	r0, r3, #1
 80206d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80206d4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80206d8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80206dc:	4308      	orrs	r0, r1
 80206de:	f8a9 0000 	strh.w	r0, [r9]
 80206e2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80206e4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80206e6:	441a      	add	r2, r3
 80206e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80206ea:	9225      	str	r2, [sp, #148]	; 0x94
 80206ec:	f109 0902 	add.w	r9, r9, #2
 80206f0:	441d      	add	r5, r3
 80206f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80206f6:	e64d      	b.n	8020394 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80206f8:	2800      	cmp	r0, #0
 80206fa:	f43f aeed 	beq.w	80204d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80206fe:	5c79      	ldrb	r1, [r7, r1]
 8020700:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020704:	9109      	str	r1, [sp, #36]	; 0x24
 8020706:	0e09      	lsrs	r1, r1, #24
 8020708:	9111      	str	r1, [sp, #68]	; 0x44
 802070a:	e6e5      	b.n	80204d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802070c:	b01b      	add	sp, #108	; 0x6c
 802070e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020712:	bf00      	nop
 8020714:	fffff800 	.word	0xfffff800

08020718 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8020718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802071c:	b085      	sub	sp, #20
 802071e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8020722:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8020726:	9103      	str	r1, [sp, #12]
 8020728:	fb00 7406 	mla	r4, r0, r6, r7
 802072c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8020730:	2800      	cmp	r0, #0
 8020732:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8020736:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802073a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802073e:	9501      	str	r5, [sp, #4]
 8020740:	eb03 0904 	add.w	r9, r3, r4
 8020744:	f2c0 8150 	blt.w	80209e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020748:	4583      	cmp	fp, r0
 802074a:	f340 814d 	ble.w	80209e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802074e:	2f00      	cmp	r7, #0
 8020750:	f2c0 8146 	blt.w	80209e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020754:	42be      	cmp	r6, r7
 8020756:	f340 8143 	ble.w	80209e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802075a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802075e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8020762:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020766:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802076a:	4355      	muls	r5, r2
 802076c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020770:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8020774:	fb0c f203 	mul.w	r2, ip, r3
 8020778:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802077c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8020780:	441d      	add	r5, r3
 8020782:	f102 0320 	add.w	r3, r2, #32
 8020786:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802078a:	0a1b      	lsrs	r3, r3, #8
 802078c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020790:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020794:	431c      	orrs	r4, r3
 8020796:	1c7b      	adds	r3, r7, #1
 8020798:	f100 812b 	bmi.w	80209f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802079c:	429e      	cmp	r6, r3
 802079e:	f340 8128 	ble.w	80209f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80207a2:	2900      	cmp	r1, #0
 80207a4:	f000 8128 	beq.w	80209f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80207a8:	9a01      	ldr	r2, [sp, #4]
 80207aa:	f899 3001 	ldrb.w	r3, [r9, #1]
 80207ae:	8855      	ldrh	r5, [r2, #2]
 80207b0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80207b4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80207b8:	fb08 f802 	mul.w	r8, r8, r2
 80207bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80207c0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80207c4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80207c8:	435d      	muls	r5, r3
 80207ca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80207ce:	44d0      	add	r8, sl
 80207d0:	f105 0a20 	add.w	sl, r5, #32
 80207d4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80207d8:	0a2d      	lsrs	r5, r5, #8
 80207da:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80207de:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80207e2:	432a      	orrs	r2, r5
 80207e4:	3001      	adds	r0, #1
 80207e6:	f100 810d 	bmi.w	8020a04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80207ea:	4583      	cmp	fp, r0
 80207ec:	f340 810a 	ble.w	8020a04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80207f0:	f1be 0f00 	cmp.w	lr, #0
 80207f4:	f000 810b 	beq.w	8020a0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80207f8:	2f00      	cmp	r7, #0
 80207fa:	f2c0 8100 	blt.w	80209fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80207fe:	42be      	cmp	r6, r7
 8020800:	f340 80fd 	ble.w	80209fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020804:	9801      	ldr	r0, [sp, #4]
 8020806:	f819 5006 	ldrb.w	r5, [r9, r6]
 802080a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802080e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020812:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8020816:	fb0a fa00 	mul.w	sl, sl, r0
 802081a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802081e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020822:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020826:	fb05 f808 	mul.w	r8, r5, r8
 802082a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802082e:	4482      	add	sl, r0
 8020830:	f108 0020 	add.w	r0, r8, #32
 8020834:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020838:	0a00      	lsrs	r0, r0, #8
 802083a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802083e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020842:	ea4b 0b00 	orr.w	fp, fp, r0
 8020846:	3701      	adds	r7, #1
 8020848:	f100 80e6 	bmi.w	8020a18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802084c:	42be      	cmp	r6, r7
 802084e:	f340 80e3 	ble.w	8020a18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020852:	2900      	cmp	r1, #0
 8020854:	f000 80e3 	beq.w	8020a1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8020858:	3601      	adds	r6, #1
 802085a:	9801      	ldr	r0, [sp, #4]
 802085c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020860:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020864:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020868:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802086c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020870:	fb09 f906 	mul.w	r9, r9, r6
 8020874:	fb07 f800 	mul.w	r8, r7, r0
 8020878:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802087c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020880:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8020884:	44d1      	add	r9, sl
 8020886:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802088a:	f108 0020 	add.w	r0, r8, #32
 802088e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020892:	0a00      	lsrs	r0, r0, #8
 8020894:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020898:	4330      	orrs	r0, r6
 802089a:	b28e      	uxth	r6, r1
 802089c:	fa1f f98e 	uxth.w	r9, lr
 80208a0:	fb06 f809 	mul.w	r8, r6, r9
 80208a4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80208a8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80208ac:	0136      	lsls	r6, r6, #4
 80208ae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80208b2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80208b6:	9601      	str	r6, [sp, #4]
 80208b8:	ea4a 0404 	orr.w	r4, sl, r4
 80208bc:	fa1f f689 	uxth.w	r6, r9
 80208c0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80208c4:	fb11 f90e 	smulbb	r9, r1, lr
 80208c8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80208cc:	9602      	str	r6, [sp, #8]
 80208ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80208d2:	4626      	mov	r6, r4
 80208d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80208d8:	f1ce 0410 	rsb	r4, lr, #16
 80208dc:	1a64      	subs	r4, r4, r1
 80208de:	ea4a 0202 	orr.w	r2, sl, r2
 80208e2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80208e6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80208ea:	434a      	muls	r2, r1
 80208ec:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80208f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80208f4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80208f8:	fb04 2406 	mla	r4, r4, r6, r2
 80208fc:	ea4a 0000 	orr.w	r0, sl, r0
 8020900:	fb09 4200 	mla	r2, r9, r0, r4
 8020904:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020908:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802090c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020910:	ea44 0b0b 	orr.w	fp, r4, fp
 8020914:	9c01      	ldr	r4, [sp, #4]
 8020916:	9e02      	ldr	r6, [sp, #8]
 8020918:	9903      	ldr	r1, [sp, #12]
 802091a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802091e:	1ba4      	subs	r4, r4, r6
 8020920:	9e01      	ldr	r6, [sp, #4]
 8020922:	8808      	ldrh	r0, [r1, #0]
 8020924:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8020928:	eba6 0608 	sub.w	r6, r6, r8
 802092c:	b2b6      	uxth	r6, r6
 802092e:	b2a4      	uxth	r4, r4
 8020930:	4373      	muls	r3, r6
 8020932:	fb0c 3304 	mla	r3, ip, r4, r3
 8020936:	9c02      	ldr	r4, [sp, #8]
 8020938:	fb04 3505 	mla	r5, r4, r5, r3
 802093c:	fb08 5707 	mla	r7, r8, r7, r5
 8020940:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020944:	b289      	uxth	r1, r1
 8020946:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802094a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802094e:	434f      	muls	r7, r1
 8020950:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020954:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020958:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802095c:	1c7b      	adds	r3, r7, #1
 802095e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020962:	ea42 0e0e 	orr.w	lr, r2, lr
 8020966:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802096a:	fa1f f28e 	uxth.w	r2, lr
 802096e:	1203      	asrs	r3, r0, #8
 8020970:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8020974:	b2ff      	uxtb	r7, r7
 8020976:	1215      	asrs	r5, r2, #8
 8020978:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802097c:	fb13 f307 	smulbb	r3, r3, r7
 8020980:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020984:	fb05 3501 	mla	r5, r5, r1, r3
 8020988:	10c3      	asrs	r3, r0, #3
 802098a:	10d4      	asrs	r4, r2, #3
 802098c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020990:	fb13 f307 	smulbb	r3, r3, r7
 8020994:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020998:	fb04 3401 	mla	r4, r4, r1, r3
 802099c:	00c3      	lsls	r3, r0, #3
 802099e:	00d2      	lsls	r2, r2, #3
 80209a0:	b2db      	uxtb	r3, r3
 80209a2:	fb13 f307 	smulbb	r3, r3, r7
 80209a6:	b2d2      	uxtb	r2, r2
 80209a8:	fb02 3101 	mla	r1, r2, r1, r3
 80209ac:	b2ad      	uxth	r5, r5
 80209ae:	b289      	uxth	r1, r1
 80209b0:	b2a4      	uxth	r4, r4
 80209b2:	1c6b      	adds	r3, r5, #1
 80209b4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80209b8:	1c62      	adds	r2, r4, #1
 80209ba:	1c4b      	adds	r3, r1, #1
 80209bc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80209c0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80209c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80209c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80209cc:	0964      	lsrs	r4, r4, #5
 80209ce:	432b      	orrs	r3, r5
 80209d0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80209d4:	9a03      	ldr	r2, [sp, #12]
 80209d6:	4323      	orrs	r3, r4
 80209d8:	8013      	strh	r3, [r2, #0]
 80209da:	b005      	add	sp, #20
 80209dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209e0:	f04f 0c00 	mov.w	ip, #0
 80209e4:	4664      	mov	r4, ip
 80209e6:	e6d6      	b.n	8020796 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80209e8:	2300      	movs	r3, #0
 80209ea:	469c      	mov	ip, r3
 80209ec:	461a      	mov	r2, r3
 80209ee:	461c      	mov	r4, r3
 80209f0:	e6f8      	b.n	80207e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80209f2:	2300      	movs	r3, #0
 80209f4:	461a      	mov	r2, r3
 80209f6:	e6f5      	b.n	80207e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80209f8:	460b      	mov	r3, r1
 80209fa:	460a      	mov	r2, r1
 80209fc:	e6f2      	b.n	80207e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80209fe:	2500      	movs	r5, #0
 8020a00:	46ab      	mov	fp, r5
 8020a02:	e720      	b.n	8020846 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8020a04:	2700      	movs	r7, #0
 8020a06:	463d      	mov	r5, r7
 8020a08:	4638      	mov	r0, r7
 8020a0a:	46bb      	mov	fp, r7
 8020a0c:	e745      	b.n	802089a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020a0e:	4677      	mov	r7, lr
 8020a10:	4675      	mov	r5, lr
 8020a12:	4670      	mov	r0, lr
 8020a14:	46f3      	mov	fp, lr
 8020a16:	e740      	b.n	802089a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020a18:	2700      	movs	r7, #0
 8020a1a:	4638      	mov	r0, r7
 8020a1c:	e73d      	b.n	802089a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020a1e:	460f      	mov	r7, r1
 8020a20:	4608      	mov	r0, r1
 8020a22:	e73a      	b.n	802089a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08020a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a28:	b097      	sub	sp, #92	; 0x5c
 8020a2a:	9214      	str	r2, [sp, #80]	; 0x50
 8020a2c:	9308      	str	r3, [sp, #32]
 8020a2e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020a30:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8020a34:	9312      	str	r3, [sp, #72]	; 0x48
 8020a36:	9111      	str	r1, [sp, #68]	; 0x44
 8020a38:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8020a3c:	9015      	str	r0, [sp, #84]	; 0x54
 8020a3e:	6850      	ldr	r0, [r2, #4]
 8020a40:	6812      	ldr	r2, [r2, #0]
 8020a42:	fb00 1303 	mla	r3, r0, r3, r1
 8020a46:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020a4a:	9309      	str	r3, [sp, #36]	; 0x24
 8020a4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020a4e:	681b      	ldr	r3, [r3, #0]
 8020a50:	930b      	str	r3, [sp, #44]	; 0x2c
 8020a52:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020a54:	685b      	ldr	r3, [r3, #4]
 8020a56:	930c      	str	r3, [sp, #48]	; 0x30
 8020a58:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8020a5c:	930a      	str	r3, [sp, #40]	; 0x28
 8020a5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020a60:	2b00      	cmp	r3, #0
 8020a62:	dc03      	bgt.n	8020a6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020a64:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020a66:	2b00      	cmp	r3, #0
 8020a68:	f340 83cb 	ble.w	8021202 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8020a6c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020a6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a76:	1e48      	subs	r0, r1, #1
 8020a78:	1e55      	subs	r5, r2, #1
 8020a7a:	9b08      	ldr	r3, [sp, #32]
 8020a7c:	2b00      	cmp	r3, #0
 8020a7e:	f340 81a3 	ble.w	8020dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8020a82:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020a84:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020a86:	1436      	asrs	r6, r6, #16
 8020a88:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020a8c:	d406      	bmi.n	8020a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020a8e:	4286      	cmp	r6, r0
 8020a90:	da04      	bge.n	8020a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020a92:	2b00      	cmp	r3, #0
 8020a94:	db02      	blt.n	8020a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020a96:	42ab      	cmp	r3, r5
 8020a98:	f2c0 8197 	blt.w	8020dca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020a9c:	3601      	adds	r6, #1
 8020a9e:	f100 8184 	bmi.w	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020aa2:	42b1      	cmp	r1, r6
 8020aa4:	f2c0 8181 	blt.w	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020aa8:	3301      	adds	r3, #1
 8020aaa:	f100 817e 	bmi.w	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020aae:	429a      	cmp	r2, r3
 8020ab0:	f2c0 817b 	blt.w	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020ab4:	9b08      	ldr	r3, [sp, #32]
 8020ab6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8020ab8:	9313      	str	r3, [sp, #76]	; 0x4c
 8020aba:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020abe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020ac0:	2b00      	cmp	r3, #0
 8020ac2:	f340 81a4 	ble.w	8020e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8020ac6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020ac8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8020aca:	1418      	asrs	r0, r3, #16
 8020acc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020ace:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8020ad2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020ad4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8020ad8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020ada:	142d      	asrs	r5, r5, #16
 8020adc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8020ae0:	f100 81f8 	bmi.w	8020ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020ae4:	f102 3eff 	add.w	lr, r2, #4294967295
 8020ae8:	4575      	cmp	r5, lr
 8020aea:	f280 81f3 	bge.w	8020ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020aee:	2800      	cmp	r0, #0
 8020af0:	f2c0 81f0 	blt.w	8020ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020af4:	f103 3eff 	add.w	lr, r3, #4294967295
 8020af8:	4570      	cmp	r0, lr
 8020afa:	f280 81eb 	bge.w	8020ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020afe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020b00:	b212      	sxth	r2, r2
 8020b02:	fb00 5002 	mla	r0, r0, r2, r5
 8020b06:	fa1f fe81 	uxth.w	lr, r1
 8020b0a:	eb03 0a00 	add.w	sl, r3, r0
 8020b0e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8020b12:	f813 9000 	ldrb.w	r9, [r3, r0]
 8020b16:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020b1a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8020b1e:	b29b      	uxth	r3, r3
 8020b20:	f1bc 0f00 	cmp.w	ip, #0
 8020b24:	f000 81b9 	beq.w	8020e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8020b28:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8020b2c:	940d      	str	r4, [sp, #52]	; 0x34
 8020b2e:	eb0a 0b02 	add.w	fp, sl, r2
 8020b32:	fa1f fa8c 	uxth.w	sl, ip
 8020b36:	fb0a fe0e 	mul.w	lr, sl, lr
 8020b3a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8020b3e:	fa1f fa8a 	uxth.w	sl, sl
 8020b42:	eba5 050e 	sub.w	r5, r5, lr
 8020b46:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020b4a:	940e      	str	r4, [sp, #56]	; 0x38
 8020b4c:	eba3 030a 	sub.w	r3, r3, sl
 8020b50:	b2ad      	uxth	r5, r5
 8020b52:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020b54:	b29b      	uxth	r3, r3
 8020b56:	fb08 f505 	mul.w	r5, r8, r5
 8020b5a:	fb09 5303 	mla	r3, r9, r3, r5
 8020b5e:	fb0a 3304 	mla	r3, sl, r4, r3
 8020b62:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020b64:	fb0e 3304 	mla	r3, lr, r4, r3
 8020b68:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020b6c:	2b00      	cmp	r3, #0
 8020b6e:	f000 810f 	beq.w	8020d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020b72:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020b74:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020b78:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8020b7c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020b80:	f000 8190 	beq.w	8020ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8020b84:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020b88:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020b8c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020b90:	fb09 f000 	mul.w	r0, r9, r0
 8020b94:	fb0a fe0e 	mul.w	lr, sl, lr
 8020b98:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8020b9c:	f100 0b20 	add.w	fp, r0, #32
 8020ba0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020ba4:	44ce      	add	lr, r9
 8020ba6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8020baa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020bae:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020bb2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020bb6:	ea4e 0909 	orr.w	r9, lr, r9
 8020bba:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020bbe:	8868      	ldrh	r0, [r5, #2]
 8020bc0:	d019      	beq.n	8020bf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020bc2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020bc6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020bca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020bce:	fb08 f800 	mul.w	r8, r8, r0
 8020bd2:	fb0a fe0e 	mul.w	lr, sl, lr
 8020bd6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8020bda:	f108 0b20 	add.w	fp, r8, #32
 8020bde:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020be2:	4486      	add	lr, r0
 8020be4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020be8:	0a00      	lsrs	r0, r0, #8
 8020bea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020bee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020bf2:	ea4e 0000 	orr.w	r0, lr, r0
 8020bf6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8020bfa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020bfe:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020c02:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020c06:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020c0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020c0e:	ea4e 0909 	orr.w	r9, lr, r9
 8020c12:	ea4a 0000 	orr.w	r0, sl, r0
 8020c16:	f1bc 0f00 	cmp.w	ip, #0
 8020c1a:	f000 8145 	beq.w	8020ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8020c1e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8020c22:	3a01      	subs	r2, #1
 8020c24:	0052      	lsls	r2, r2, #1
 8020c26:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020c28:	3202      	adds	r2, #2
 8020c2a:	2cff      	cmp	r4, #255	; 0xff
 8020c2c:	eb05 0e02 	add.w	lr, r5, r2
 8020c30:	5aaa      	ldrh	r2, [r5, r2]
 8020c32:	d018      	beq.n	8020c66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020c34:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8020c38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020c3c:	fb04 fa02 	mul.w	sl, r4, r2
 8020c40:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020c44:	fb08 f805 	mul.w	r8, r8, r5
 8020c48:	f10a 0520 	add.w	r5, sl, #32
 8020c4c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020c50:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020c54:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020c58:	4442      	add	r2, r8
 8020c5a:	0a2d      	lsrs	r5, r5, #8
 8020c5c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020c60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020c64:	432a      	orrs	r2, r5
 8020c66:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020c68:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8020c6c:	2cff      	cmp	r4, #255	; 0xff
 8020c6e:	d01a      	beq.n	8020ca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020c70:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8020c74:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020c78:	fb04 fa05 	mul.w	sl, r4, r5
 8020c7c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020c80:	fb08 f80e 	mul.w	r8, r8, lr
 8020c84:	f10a 0e20 	add.w	lr, sl, #32
 8020c88:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8020c8c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8020c90:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020c94:	4445      	add	r5, r8
 8020c96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c9a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8020c9e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8020ca2:	ea45 050e 	orr.w	r5, r5, lr
 8020ca6:	fb1c fe01 	smulbb	lr, ip, r1
 8020caa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8020cae:	f1cc 0810 	rsb	r8, ip, #16
 8020cb2:	eba8 0801 	sub.w	r8, r8, r1
 8020cb6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020cba:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8020cbe:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8020cc2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8020cc6:	4341      	muls	r1, r0
 8020cc8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020ccc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020cd0:	ea4a 0202 	orr.w	r2, sl, r2
 8020cd4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8020cd8:	fb09 1108 	mla	r1, r9, r8, r1
 8020cdc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020ce0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020ce4:	fb0c 1102 	mla	r1, ip, r2, r1
 8020ce8:	ea4b 0505 	orr.w	r5, fp, r5
 8020cec:	fb0e 1e05 	mla	lr, lr, r5, r1
 8020cf0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020cf4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020cf8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020cfc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020d00:	ea42 0e0e 	orr.w	lr, r2, lr
 8020d04:	fa1f f28e 	uxth.w	r2, lr
 8020d08:	2bff      	cmp	r3, #255	; 0xff
 8020d0a:	d103      	bne.n	8020d14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020d0c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020d0e:	29ff      	cmp	r1, #255	; 0xff
 8020d10:	f000 80de 	beq.w	8020ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8020d14:	990a      	ldr	r1, [sp, #40]	; 0x28
 8020d16:	8838      	ldrh	r0, [r7, #0]
 8020d18:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020d1a:	434b      	muls	r3, r1
 8020d1c:	f103 0c01 	add.w	ip, r3, #1
 8020d20:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8020d24:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8020d28:	fa5f fc83 	uxtb.w	ip, r3
 8020d2c:	1203      	asrs	r3, r0, #8
 8020d2e:	1215      	asrs	r5, r2, #8
 8020d30:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020d34:	fb13 f30c 	smulbb	r3, r3, ip
 8020d38:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020d3c:	fb05 3501 	mla	r5, r5, r1, r3
 8020d40:	10c3      	asrs	r3, r0, #3
 8020d42:	10d1      	asrs	r1, r2, #3
 8020d44:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020d48:	fb13 f30c 	smulbb	r3, r3, ip
 8020d4c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020d50:	fb01 3104 	mla	r1, r1, r4, r3
 8020d54:	00c3      	lsls	r3, r0, #3
 8020d56:	00d2      	lsls	r2, r2, #3
 8020d58:	b2db      	uxtb	r3, r3
 8020d5a:	b2d2      	uxtb	r2, r2
 8020d5c:	fb13 f30c 	smulbb	r3, r3, ip
 8020d60:	b2ad      	uxth	r5, r5
 8020d62:	fb02 3304 	mla	r3, r2, r4, r3
 8020d66:	b29a      	uxth	r2, r3
 8020d68:	1c6b      	adds	r3, r5, #1
 8020d6a:	b289      	uxth	r1, r1
 8020d6c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020d70:	1c53      	adds	r3, r2, #1
 8020d72:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020d76:	1c4a      	adds	r2, r1, #1
 8020d78:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020d7c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020d80:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020d84:	0949      	lsrs	r1, r1, #5
 8020d86:	432b      	orrs	r3, r5
 8020d88:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020d8c:	430b      	orrs	r3, r1
 8020d8e:	803b      	strh	r3, [r7, #0]
 8020d90:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020d92:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020d94:	4413      	add	r3, r2
 8020d96:	9321      	str	r3, [sp, #132]	; 0x84
 8020d98:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020d9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020d9c:	441a      	add	r2, r3
 8020d9e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020da0:	9222      	str	r2, [sp, #136]	; 0x88
 8020da2:	3b01      	subs	r3, #1
 8020da4:	3702      	adds	r7, #2
 8020da6:	9313      	str	r3, [sp, #76]	; 0x4c
 8020da8:	e689      	b.n	8020abe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020daa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020dac:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8020dae:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8020db0:	4433      	add	r3, r6
 8020db2:	9321      	str	r3, [sp, #132]	; 0x84
 8020db4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020db6:	441c      	add	r4, r3
 8020db8:	9b08      	ldr	r3, [sp, #32]
 8020dba:	9422      	str	r4, [sp, #136]	; 0x88
 8020dbc:	3b01      	subs	r3, #1
 8020dbe:	9308      	str	r3, [sp, #32]
 8020dc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020dc2:	3302      	adds	r3, #2
 8020dc4:	9309      	str	r3, [sp, #36]	; 0x24
 8020dc6:	e658      	b.n	8020a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8020dc8:	d028      	beq.n	8020e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020dca:	9b08      	ldr	r3, [sp, #32]
 8020dcc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8020dce:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8020dd0:	3b01      	subs	r3, #1
 8020dd2:	fb00 5003 	mla	r0, r0, r3, r5
 8020dd6:	1400      	asrs	r0, r0, #16
 8020dd8:	f53f ae6c 	bmi.w	8020ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020ddc:	3901      	subs	r1, #1
 8020dde:	4288      	cmp	r0, r1
 8020de0:	f6bf ae68 	bge.w	8020ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020de4:	9924      	ldr	r1, [sp, #144]	; 0x90
 8020de6:	9822      	ldr	r0, [sp, #136]	; 0x88
 8020de8:	fb01 0303 	mla	r3, r1, r3, r0
 8020dec:	141b      	asrs	r3, r3, #16
 8020dee:	f53f ae61 	bmi.w	8020ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020df2:	3a01      	subs	r2, #1
 8020df4:	4293      	cmp	r3, r2
 8020df6:	f6bf ae5d 	bge.w	8020ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020dfa:	9b08      	ldr	r3, [sp, #32]
 8020dfc:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020e00:	9313      	str	r3, [sp, #76]	; 0x4c
 8020e02:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020e06:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020e08:	2b00      	cmp	r3, #0
 8020e0a:	f300 8082 	bgt.w	8020f12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020e0e:	9b08      	ldr	r3, [sp, #32]
 8020e10:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020e14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e16:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020e1a:	9309      	str	r3, [sp, #36]	; 0x24
 8020e1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020e1e:	2b00      	cmp	r3, #0
 8020e20:	f340 81ef 	ble.w	8021202 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8020e24:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020e28:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020e2c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020e30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020e32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020e36:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020e3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020e3e:	eef0 6a62 	vmov.f32	s13, s5
 8020e42:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020e46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020e4e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8020e52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020e56:	eef0 6a43 	vmov.f32	s13, s6
 8020e5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020e5e:	ee12 2a90 	vmov	r2, s5
 8020e62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020e66:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e6a:	ee13 2a10 	vmov	r2, s6
 8020e6e:	9323      	str	r3, [sp, #140]	; 0x8c
 8020e70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020e72:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e76:	9324      	str	r3, [sp, #144]	; 0x90
 8020e78:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020e7a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020e7c:	3b01      	subs	r3, #1
 8020e7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e82:	9311      	str	r3, [sp, #68]	; 0x44
 8020e84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020e86:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8020e8a:	bf08      	it	eq
 8020e8c:	4613      	moveq	r3, r2
 8020e8e:	9308      	str	r3, [sp, #32]
 8020e90:	eeb0 3a67 	vmov.f32	s6, s15
 8020e94:	eef0 2a47 	vmov.f32	s5, s14
 8020e98:	e5e1      	b.n	8020a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020e9a:	fb08 f505 	mul.w	r5, r8, r5
 8020e9e:	fb09 5303 	mla	r3, r9, r3, r5
 8020ea2:	e661      	b.n	8020b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8020ea4:	4681      	mov	r9, r0
 8020ea6:	e688      	b.n	8020bba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8020ea8:	f1c1 0210 	rsb	r2, r1, #16
 8020eac:	4341      	muls	r1, r0
 8020eae:	fb09 1902 	mla	r9, r9, r2, r1
 8020eb2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020eb6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8020eba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8020ebe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020ec2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020ec6:	ea42 0909 	orr.w	r9, r2, r9
 8020eca:	fa1f f289 	uxth.w	r2, r9
 8020ece:	e71b      	b.n	8020d08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8020ed0:	803a      	strh	r2, [r7, #0]
 8020ed2:	e75d      	b.n	8020d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020ed4:	f115 0e01 	adds.w	lr, r5, #1
 8020ed8:	f53f af5a 	bmi.w	8020d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020edc:	4572      	cmp	r2, lr
 8020ede:	f6ff af57 	blt.w	8020d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020ee2:	f110 0e01 	adds.w	lr, r0, #1
 8020ee6:	f53f af53 	bmi.w	8020d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020eea:	4573      	cmp	r3, lr
 8020eec:	f6ff af50 	blt.w	8020d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020ef0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ef2:	9502      	str	r5, [sp, #8]
 8020ef4:	b21b      	sxth	r3, r3
 8020ef6:	b212      	sxth	r2, r2
 8020ef8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8020efc:	9301      	str	r3, [sp, #4]
 8020efe:	9200      	str	r2, [sp, #0]
 8020f00:	e9cd c405 	strd	ip, r4, [sp, #20]
 8020f04:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8020f08:	4639      	mov	r1, r7
 8020f0a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020f0c:	f7ff fc04 	bl	8020718 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8020f10:	e73e      	b.n	8020d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020f12:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020f14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020f18:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020f1a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8020f1e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020f20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020f24:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020f26:	141f      	asrs	r7, r3, #16
 8020f28:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020f2a:	141b      	asrs	r3, r3, #16
 8020f2c:	fb01 3707 	mla	r7, r1, r7, r3
 8020f30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020f32:	fa1f fc82 	uxth.w	ip, r2
 8020f36:	eb03 0a07 	add.w	sl, r3, r7
 8020f3a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8020f3e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8020f42:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020f46:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8020f4a:	b29b      	uxth	r3, r3
 8020f4c:	2d00      	cmp	r5, #0
 8020f4e:	f000 813d 	beq.w	80211cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8020f52:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8020f56:	940f      	str	r4, [sp, #60]	; 0x3c
 8020f58:	eb0a 0b01 	add.w	fp, sl, r1
 8020f5c:	fa1f fa85 	uxth.w	sl, r5
 8020f60:	fb0a fc0c 	mul.w	ip, sl, ip
 8020f64:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8020f68:	fa1f fa8a 	uxth.w	sl, sl
 8020f6c:	eba0 000c 	sub.w	r0, r0, ip
 8020f70:	eba3 030a 	sub.w	r3, r3, sl
 8020f74:	b280      	uxth	r0, r0
 8020f76:	fb08 f000 	mul.w	r0, r8, r0
 8020f7a:	b29b      	uxth	r3, r3
 8020f7c:	fb09 0303 	mla	r3, r9, r3, r0
 8020f80:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020f82:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020f86:	9410      	str	r4, [sp, #64]	; 0x40
 8020f88:	fb0a 3300 	mla	r3, sl, r0, r3
 8020f8c:	fb0c 3304 	mla	r3, ip, r4, r3
 8020f90:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020f94:	2b00      	cmp	r3, #0
 8020f96:	f000 810b 	beq.w	80211b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8020f9a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8020f9c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020f9e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020fa2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8020fa6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8020faa:	f000 8114 	beq.w	80211d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8020fae:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020fb2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020fb6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020fba:	fb09 f707 	mul.w	r7, r9, r7
 8020fbe:	fb0a fc0c 	mul.w	ip, sl, ip
 8020fc2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8020fc6:	f107 0b20 	add.w	fp, r7, #32
 8020fca:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8020fce:	44cc      	add	ip, r9
 8020fd0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8020fd4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020fd8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8020fdc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020fe0:	ea4c 0909 	orr.w	r9, ip, r9
 8020fe4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020fe8:	8847      	ldrh	r7, [r0, #2]
 8020fea:	d019      	beq.n	8021020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8020fec:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020ff0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020ff4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020ff8:	fb08 f807 	mul.w	r8, r8, r7
 8020ffc:	fb0a fc0c 	mul.w	ip, sl, ip
 8021000:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021004:	f108 0b20 	add.w	fp, r8, #32
 8021008:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802100c:	44bc      	add	ip, r7
 802100e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021012:	0a3f      	lsrs	r7, r7, #8
 8021014:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021018:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802101c:	ea4c 0707 	orr.w	r7, ip, r7
 8021020:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021024:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021028:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802102c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021030:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021034:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021038:	ea4c 0909 	orr.w	r9, ip, r9
 802103c:	ea4a 0707 	orr.w	r7, sl, r7
 8021040:	2d00      	cmp	r5, #0
 8021042:	f000 80ca 	beq.w	80211da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021046:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802104a:	3901      	subs	r1, #1
 802104c:	0049      	lsls	r1, r1, #1
 802104e:	3102      	adds	r1, #2
 8021050:	eb00 0c01 	add.w	ip, r0, r1
 8021054:	5a41      	ldrh	r1, [r0, r1]
 8021056:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021058:	28ff      	cmp	r0, #255	; 0xff
 802105a:	d019      	beq.n	8021090 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 802105c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802105e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021062:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021066:	fb04 fa01 	mul.w	sl, r4, r1
 802106a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802106e:	fb08 f800 	mul.w	r8, r8, r0
 8021072:	f10a 0020 	add.w	r0, sl, #32
 8021076:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802107a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802107e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021082:	4441      	add	r1, r8
 8021084:	0a00      	lsrs	r0, r0, #8
 8021086:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802108a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802108e:	4301      	orrs	r1, r0
 8021090:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021092:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021096:	2cff      	cmp	r4, #255	; 0xff
 8021098:	d01a      	beq.n	80210d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802109a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802109e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80210a2:	fb04 fa00 	mul.w	sl, r4, r0
 80210a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80210aa:	fb08 f80c 	mul.w	r8, r8, ip
 80210ae:	f10a 0c20 	add.w	ip, sl, #32
 80210b2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80210b6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80210ba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80210be:	4440      	add	r0, r8
 80210c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210c4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80210c8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80210cc:	ea40 000c 	orr.w	r0, r0, ip
 80210d0:	fb15 fc02 	smulbb	ip, r5, r2
 80210d4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80210d8:	f1c5 0810 	rsb	r8, r5, #16
 80210dc:	eba8 0802 	sub.w	r8, r8, r2
 80210e0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80210e4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80210e8:	437a      	muls	r2, r7
 80210ea:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80210ee:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80210f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80210f6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80210fa:	fb09 2208 	mla	r2, r9, r8, r2
 80210fe:	ea4a 0101 	orr.w	r1, sl, r1
 8021102:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021106:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802110a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802110e:	fb05 2201 	mla	r2, r5, r1, r2
 8021112:	ea4b 0000 	orr.w	r0, fp, r0
 8021116:	fb0c 2200 	mla	r2, ip, r0, r2
 802111a:	0d57      	lsrs	r7, r2, #21
 802111c:	0952      	lsrs	r2, r2, #5
 802111e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021122:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021126:	433a      	orrs	r2, r7
 8021128:	2bff      	cmp	r3, #255	; 0xff
 802112a:	b292      	uxth	r2, r2
 802112c:	d102      	bne.n	8021134 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802112e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021130:	29ff      	cmp	r1, #255	; 0xff
 8021132:	d063      	beq.n	80211fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021134:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021136:	f8be 1000 	ldrh.w	r1, [lr]
 802113a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802113c:	4343      	muls	r3, r0
 802113e:	1c58      	adds	r0, r3, #1
 8021140:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021144:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021148:	1208      	asrs	r0, r1, #8
 802114a:	b2db      	uxtb	r3, r3
 802114c:	1215      	asrs	r5, r2, #8
 802114e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021152:	fb10 f003 	smulbb	r0, r0, r3
 8021156:	10cf      	asrs	r7, r1, #3
 8021158:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802115c:	00c9      	lsls	r1, r1, #3
 802115e:	fb05 0504 	mla	r5, r5, r4, r0
 8021162:	b2c9      	uxtb	r1, r1
 8021164:	10d0      	asrs	r0, r2, #3
 8021166:	00d2      	lsls	r2, r2, #3
 8021168:	fb11 f103 	smulbb	r1, r1, r3
 802116c:	b2d2      	uxtb	r2, r2
 802116e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021172:	fb02 1204 	mla	r2, r2, r4, r1
 8021176:	fb17 f703 	smulbb	r7, r7, r3
 802117a:	b2ad      	uxth	r5, r5
 802117c:	b292      	uxth	r2, r2
 802117e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021182:	fb00 7004 	mla	r0, r0, r4, r7
 8021186:	1c6b      	adds	r3, r5, #1
 8021188:	1c57      	adds	r7, r2, #1
 802118a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802118e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021192:	b280      	uxth	r0, r0
 8021194:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021198:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802119c:	433d      	orrs	r5, r7
 802119e:	1c47      	adds	r7, r0, #1
 80211a0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80211a4:	097f      	lsrs	r7, r7, #5
 80211a6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80211aa:	433d      	orrs	r5, r7
 80211ac:	f8ae 5000 	strh.w	r5, [lr]
 80211b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80211b2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80211b4:	4413      	add	r3, r2
 80211b6:	9321      	str	r3, [sp, #132]	; 0x84
 80211b8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80211ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80211bc:	441a      	add	r2, r3
 80211be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80211c0:	9222      	str	r2, [sp, #136]	; 0x88
 80211c2:	3b01      	subs	r3, #1
 80211c4:	f10e 0e02 	add.w	lr, lr, #2
 80211c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80211ca:	e61c      	b.n	8020e06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80211cc:	fb08 f000 	mul.w	r0, r8, r0
 80211d0:	fb09 0303 	mla	r3, r9, r3, r0
 80211d4:	e6dc      	b.n	8020f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80211d6:	46b9      	mov	r9, r7
 80211d8:	e704      	b.n	8020fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80211da:	f1c2 0110 	rsb	r1, r2, #16
 80211de:	437a      	muls	r2, r7
 80211e0:	fb09 2901 	mla	r9, r9, r1, r2
 80211e4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80211e8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80211ec:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80211f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80211f4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80211f8:	4302      	orrs	r2, r0
 80211fa:	e795      	b.n	8021128 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80211fc:	f8ae 2000 	strh.w	r2, [lr]
 8021200:	e7d6      	b.n	80211b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021202:	b017      	add	sp, #92	; 0x5c
 8021204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021208 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802120c:	b085      	sub	sp, #20
 802120e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021212:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021216:	9103      	str	r1, [sp, #12]
 8021218:	fb00 7406 	mla	r4, r0, r6, r7
 802121c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021220:	2800      	cmp	r0, #0
 8021222:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021226:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802122a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802122e:	9501      	str	r5, [sp, #4]
 8021230:	eb02 0904 	add.w	r9, r2, r4
 8021234:	f2c0 8141 	blt.w	80214ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021238:	4583      	cmp	fp, r0
 802123a:	f340 813e 	ble.w	80214ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802123e:	2f00      	cmp	r7, #0
 8021240:	f2c0 8137 	blt.w	80214b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021244:	42be      	cmp	r6, r7
 8021246:	f340 8134 	ble.w	80214b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802124a:	f812 c004 	ldrb.w	ip, [r2, r4]
 802124e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021252:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021256:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802125a:	4355      	muls	r5, r2
 802125c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021260:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021264:	fb0c f203 	mul.w	r2, ip, r3
 8021268:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802126c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021270:	441d      	add	r5, r3
 8021272:	f102 0320 	add.w	r3, r2, #32
 8021276:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802127a:	0a1b      	lsrs	r3, r3, #8
 802127c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021280:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021284:	431c      	orrs	r4, r3
 8021286:	1c7b      	adds	r3, r7, #1
 8021288:	f100 811c 	bmi.w	80214c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802128c:	429e      	cmp	r6, r3
 802128e:	f340 8119 	ble.w	80214c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021292:	2900      	cmp	r1, #0
 8021294:	f000 8119 	beq.w	80214ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021298:	9a01      	ldr	r2, [sp, #4]
 802129a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802129e:	8855      	ldrh	r5, [r2, #2]
 80212a0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80212a4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80212a8:	fb08 f802 	mul.w	r8, r8, r2
 80212ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80212b0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80212b4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80212b8:	435d      	muls	r5, r3
 80212ba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80212be:	44d0      	add	r8, sl
 80212c0:	f105 0a20 	add.w	sl, r5, #32
 80212c4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80212c8:	0a2d      	lsrs	r5, r5, #8
 80212ca:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80212ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80212d2:	432a      	orrs	r2, r5
 80212d4:	3001      	adds	r0, #1
 80212d6:	f100 80fe 	bmi.w	80214d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80212da:	4583      	cmp	fp, r0
 80212dc:	f340 80fb 	ble.w	80214d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80212e0:	f1be 0f00 	cmp.w	lr, #0
 80212e4:	f000 80fc 	beq.w	80214e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80212e8:	2f00      	cmp	r7, #0
 80212ea:	f2c0 80f1 	blt.w	80214d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80212ee:	42be      	cmp	r6, r7
 80212f0:	f340 80ee 	ble.w	80214d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80212f4:	9801      	ldr	r0, [sp, #4]
 80212f6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80212fa:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80212fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021302:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021306:	fb0a fa00 	mul.w	sl, sl, r0
 802130a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802130e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021312:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021316:	fb05 f808 	mul.w	r8, r5, r8
 802131a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802131e:	4482      	add	sl, r0
 8021320:	f108 0020 	add.w	r0, r8, #32
 8021324:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021328:	0a00      	lsrs	r0, r0, #8
 802132a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802132e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021332:	ea4b 0b00 	orr.w	fp, fp, r0
 8021336:	3701      	adds	r7, #1
 8021338:	f100 80d7 	bmi.w	80214ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802133c:	42be      	cmp	r6, r7
 802133e:	f340 80d4 	ble.w	80214ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021342:	2900      	cmp	r1, #0
 8021344:	f000 80d4 	beq.w	80214f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021348:	3601      	adds	r6, #1
 802134a:	9801      	ldr	r0, [sp, #4]
 802134c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021350:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021354:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021358:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802135c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021360:	fb09 f906 	mul.w	r9, r9, r6
 8021364:	fb07 f800 	mul.w	r8, r7, r0
 8021368:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802136c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021370:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021374:	44d1      	add	r9, sl
 8021376:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802137a:	f108 0020 	add.w	r0, r8, #32
 802137e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021382:	0a00      	lsrs	r0, r0, #8
 8021384:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021388:	4330      	orrs	r0, r6
 802138a:	b28e      	uxth	r6, r1
 802138c:	fa1f f98e 	uxth.w	r9, lr
 8021390:	fb06 f809 	mul.w	r8, r6, r9
 8021394:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021398:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802139c:	0136      	lsls	r6, r6, #4
 802139e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80213a2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80213a6:	9601      	str	r6, [sp, #4]
 80213a8:	ea4a 0404 	orr.w	r4, sl, r4
 80213ac:	fa1f f689 	uxth.w	r6, r9
 80213b0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80213b4:	fb11 f90e 	smulbb	r9, r1, lr
 80213b8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80213bc:	9602      	str	r6, [sp, #8]
 80213be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80213c2:	4626      	mov	r6, r4
 80213c4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80213c8:	f1ce 0410 	rsb	r4, lr, #16
 80213cc:	1a64      	subs	r4, r4, r1
 80213ce:	ea4a 0202 	orr.w	r2, sl, r2
 80213d2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80213d6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80213da:	434a      	muls	r2, r1
 80213dc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80213e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80213e4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80213e8:	fb04 2406 	mla	r4, r4, r6, r2
 80213ec:	ea4a 0000 	orr.w	r0, sl, r0
 80213f0:	fb09 4200 	mla	r2, r9, r0, r4
 80213f4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80213f8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80213fc:	9801      	ldr	r0, [sp, #4]
 80213fe:	9903      	ldr	r1, [sp, #12]
 8021400:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021404:	ea44 0b0b 	orr.w	fp, r4, fp
 8021408:	9c02      	ldr	r4, [sp, #8]
 802140a:	8809      	ldrh	r1, [r1, #0]
 802140c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021410:	1b00      	subs	r0, r0, r4
 8021412:	9c01      	ldr	r4, [sp, #4]
 8021414:	eba4 0608 	sub.w	r6, r4, r8
 8021418:	b2b6      	uxth	r6, r6
 802141a:	b280      	uxth	r0, r0
 802141c:	4373      	muls	r3, r6
 802141e:	fb0c 3300 	mla	r3, ip, r0, r3
 8021422:	9802      	ldr	r0, [sp, #8]
 8021424:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021428:	fb00 3505 	mla	r5, r0, r5, r3
 802142c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021430:	fb08 5707 	mla	r7, r8, r7, r5
 8021434:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021438:	120b      	asrs	r3, r1, #8
 802143a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802143e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021442:	b2ff      	uxtb	r7, r7
 8021444:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021448:	10c8      	asrs	r0, r1, #3
 802144a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802144e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021452:	00c9      	lsls	r1, r1, #3
 8021454:	437b      	muls	r3, r7
 8021456:	ea42 0e0e 	orr.w	lr, r2, lr
 802145a:	b2c9      	uxtb	r1, r1
 802145c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021460:	fa1f f28e 	uxth.w	r2, lr
 8021464:	4378      	muls	r0, r7
 8021466:	434f      	muls	r7, r1
 8021468:	1c59      	adds	r1, r3, #1
 802146a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802146e:	1213      	asrs	r3, r2, #8
 8021470:	f023 0307 	bic.w	r3, r3, #7
 8021474:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021478:	1c41      	adds	r1, r0, #1
 802147a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802147e:	10d1      	asrs	r1, r2, #3
 8021480:	f021 0103 	bic.w	r1, r1, #3
 8021484:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021488:	021b      	lsls	r3, r3, #8
 802148a:	00c9      	lsls	r1, r1, #3
 802148c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021490:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021494:	430b      	orrs	r3, r1
 8021496:	1c79      	adds	r1, r7, #1
 8021498:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802149c:	00d2      	lsls	r2, r2, #3
 802149e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80214a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80214a6:	431a      	orrs	r2, r3
 80214a8:	9b03      	ldr	r3, [sp, #12]
 80214aa:	801a      	strh	r2, [r3, #0]
 80214ac:	b005      	add	sp, #20
 80214ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214b2:	f04f 0c00 	mov.w	ip, #0
 80214b6:	4664      	mov	r4, ip
 80214b8:	e6e5      	b.n	8021286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80214ba:	2300      	movs	r3, #0
 80214bc:	469c      	mov	ip, r3
 80214be:	461a      	mov	r2, r3
 80214c0:	461c      	mov	r4, r3
 80214c2:	e707      	b.n	80212d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80214c4:	2300      	movs	r3, #0
 80214c6:	461a      	mov	r2, r3
 80214c8:	e704      	b.n	80212d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80214ca:	460b      	mov	r3, r1
 80214cc:	460a      	mov	r2, r1
 80214ce:	e701      	b.n	80212d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80214d0:	2500      	movs	r5, #0
 80214d2:	46ab      	mov	fp, r5
 80214d4:	e72f      	b.n	8021336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80214d6:	2700      	movs	r7, #0
 80214d8:	463d      	mov	r5, r7
 80214da:	4638      	mov	r0, r7
 80214dc:	46bb      	mov	fp, r7
 80214de:	e754      	b.n	802138a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80214e0:	4677      	mov	r7, lr
 80214e2:	4675      	mov	r5, lr
 80214e4:	4670      	mov	r0, lr
 80214e6:	46f3      	mov	fp, lr
 80214e8:	e74f      	b.n	802138a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80214ea:	2700      	movs	r7, #0
 80214ec:	4638      	mov	r0, r7
 80214ee:	e74c      	b.n	802138a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80214f0:	460f      	mov	r7, r1
 80214f2:	4608      	mov	r0, r1
 80214f4:	e749      	b.n	802138a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080214f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80214f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214fc:	b093      	sub	sp, #76	; 0x4c
 80214fe:	9210      	str	r2, [sp, #64]	; 0x40
 8021500:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021502:	910e      	str	r1, [sp, #56]	; 0x38
 8021504:	9306      	str	r3, [sp, #24]
 8021506:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802150a:	9011      	str	r0, [sp, #68]	; 0x44
 802150c:	6850      	ldr	r0, [r2, #4]
 802150e:	6812      	ldr	r2, [r2, #0]
 8021510:	fb00 1303 	mla	r3, r0, r3, r1
 8021514:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021518:	9307      	str	r3, [sp, #28]
 802151a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802151c:	681b      	ldr	r3, [r3, #0]
 802151e:	9308      	str	r3, [sp, #32]
 8021520:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021522:	685b      	ldr	r3, [r3, #4]
 8021524:	9309      	str	r3, [sp, #36]	; 0x24
 8021526:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021528:	2b00      	cmp	r3, #0
 802152a:	dc03      	bgt.n	8021534 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802152c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802152e:	2b00      	cmp	r3, #0
 8021530:	f340 83b4 	ble.w	8021c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021534:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021536:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802153a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802153e:	1e48      	subs	r0, r1, #1
 8021540:	1e55      	subs	r5, r2, #1
 8021542:	9b06      	ldr	r3, [sp, #24]
 8021544:	2b00      	cmp	r3, #0
 8021546:	f340 8163 	ble.w	8021810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802154a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 802154c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802154e:	1436      	asrs	r6, r6, #16
 8021550:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021554:	d406      	bmi.n	8021564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021556:	4286      	cmp	r6, r0
 8021558:	da04      	bge.n	8021564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802155a:	2b00      	cmp	r3, #0
 802155c:	db02      	blt.n	8021564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802155e:	42ab      	cmp	r3, r5
 8021560:	f2c0 8157 	blt.w	8021812 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021564:	3601      	adds	r6, #1
 8021566:	f100 8144 	bmi.w	80217f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802156a:	42b1      	cmp	r1, r6
 802156c:	f2c0 8141 	blt.w	80217f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021570:	3301      	adds	r3, #1
 8021572:	f100 813e 	bmi.w	80217f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021576:	429a      	cmp	r2, r3
 8021578:	f2c0 813b 	blt.w	80217f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802157c:	9b06      	ldr	r3, [sp, #24]
 802157e:	9f07      	ldr	r7, [sp, #28]
 8021580:	930f      	str	r3, [sp, #60]	; 0x3c
 8021582:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021586:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021588:	2b00      	cmp	r3, #0
 802158a:	f340 8164 	ble.w	8021856 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802158e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021590:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021592:	1418      	asrs	r0, r3, #16
 8021594:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021596:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802159a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802159c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80215a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80215a2:	142d      	asrs	r5, r5, #16
 80215a4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80215a8:	f100 81ee 	bmi.w	8021988 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80215ac:	f102 3eff 	add.w	lr, r2, #4294967295
 80215b0:	4575      	cmp	r5, lr
 80215b2:	f280 81e9 	bge.w	8021988 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80215b6:	2800      	cmp	r0, #0
 80215b8:	f2c0 81e6 	blt.w	8021988 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80215bc:	f103 3eff 	add.w	lr, r3, #4294967295
 80215c0:	4570      	cmp	r0, lr
 80215c2:	f280 81e1 	bge.w	8021988 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80215c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80215c8:	b212      	sxth	r2, r2
 80215ca:	fb00 5002 	mla	r0, r0, r2, r5
 80215ce:	fa1f fe81 	uxth.w	lr, r1
 80215d2:	eb03 0a00 	add.w	sl, r3, r0
 80215d6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80215da:	f813 9000 	ldrb.w	r9, [r3, r0]
 80215de:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80215e2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80215e6:	b29b      	uxth	r3, r3
 80215e8:	f1bc 0f00 	cmp.w	ip, #0
 80215ec:	f000 8179 	beq.w	80218e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80215f0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80215f4:	940a      	str	r4, [sp, #40]	; 0x28
 80215f6:	eb0a 0b02 	add.w	fp, sl, r2
 80215fa:	fa1f fa8c 	uxth.w	sl, ip
 80215fe:	fb0a fe0e 	mul.w	lr, sl, lr
 8021602:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021606:	fa1f fa8a 	uxth.w	sl, sl
 802160a:	eba5 050e 	sub.w	r5, r5, lr
 802160e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021612:	940b      	str	r4, [sp, #44]	; 0x2c
 8021614:	eba3 030a 	sub.w	r3, r3, sl
 8021618:	b2ad      	uxth	r5, r5
 802161a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802161c:	b29b      	uxth	r3, r3
 802161e:	fb08 f505 	mul.w	r5, r8, r5
 8021622:	fb09 5303 	mla	r3, r9, r3, r5
 8021626:	fb0a 3304 	mla	r3, sl, r4, r3
 802162a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802162c:	fb0e 3304 	mla	r3, lr, r4, r3
 8021630:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021634:	2b00      	cmp	r3, #0
 8021636:	f000 80cf 	beq.w	80217d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802163a:	9c08      	ldr	r4, [sp, #32]
 802163c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021640:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021644:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021648:	f000 8150 	beq.w	80218ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802164c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021650:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021654:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021658:	fb09 f000 	mul.w	r0, r9, r0
 802165c:	fb0a fe0e 	mul.w	lr, sl, lr
 8021660:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021664:	f100 0b20 	add.w	fp, r0, #32
 8021668:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802166c:	44ce      	add	lr, r9
 802166e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021672:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021676:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802167a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802167e:	ea4e 0909 	orr.w	r9, lr, r9
 8021682:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021686:	8868      	ldrh	r0, [r5, #2]
 8021688:	d019      	beq.n	80216be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802168a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802168e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021692:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021696:	fb08 f800 	mul.w	r8, r8, r0
 802169a:	fb0a fe0e 	mul.w	lr, sl, lr
 802169e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80216a2:	f108 0b20 	add.w	fp, r8, #32
 80216a6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80216aa:	4486      	add	lr, r0
 80216ac:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80216b0:	0a00      	lsrs	r0, r0, #8
 80216b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80216b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80216ba:	ea4e 0000 	orr.w	r0, lr, r0
 80216be:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80216c2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80216c6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80216ca:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80216ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80216d2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80216d6:	ea4e 0909 	orr.w	r9, lr, r9
 80216da:	ea4a 0000 	orr.w	r0, sl, r0
 80216de:	f1bc 0f00 	cmp.w	ip, #0
 80216e2:	f000 8105 	beq.w	80218f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80216e6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80216ea:	3a01      	subs	r2, #1
 80216ec:	0052      	lsls	r2, r2, #1
 80216ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80216f0:	3202      	adds	r2, #2
 80216f2:	2cff      	cmp	r4, #255	; 0xff
 80216f4:	eb05 0e02 	add.w	lr, r5, r2
 80216f8:	5aaa      	ldrh	r2, [r5, r2]
 80216fa:	d018      	beq.n	802172e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80216fc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021700:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021704:	fb04 fa02 	mul.w	sl, r4, r2
 8021708:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802170c:	fb08 f805 	mul.w	r8, r8, r5
 8021710:	f10a 0520 	add.w	r5, sl, #32
 8021714:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021718:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802171c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021720:	4442      	add	r2, r8
 8021722:	0a2d      	lsrs	r5, r5, #8
 8021724:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021728:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802172c:	432a      	orrs	r2, r5
 802172e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021730:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021734:	2cff      	cmp	r4, #255	; 0xff
 8021736:	d01a      	beq.n	802176e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021738:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802173c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021740:	fb04 fa05 	mul.w	sl, r4, r5
 8021744:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021748:	fb08 f80e 	mul.w	r8, r8, lr
 802174c:	f10a 0e20 	add.w	lr, sl, #32
 8021750:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021754:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021758:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802175c:	4445      	add	r5, r8
 802175e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021762:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021766:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802176a:	ea45 050e 	orr.w	r5, r5, lr
 802176e:	fb1c fe01 	smulbb	lr, ip, r1
 8021772:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021776:	f1cc 0810 	rsb	r8, ip, #16
 802177a:	eba8 0801 	sub.w	r8, r8, r1
 802177e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021782:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021786:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802178a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802178e:	4341      	muls	r1, r0
 8021790:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021794:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021798:	ea4a 0202 	orr.w	r2, sl, r2
 802179c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80217a0:	fb09 1108 	mla	r1, r9, r8, r1
 80217a4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80217a8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80217ac:	fb0c 1102 	mla	r1, ip, r2, r1
 80217b0:	ea4b 0505 	orr.w	r5, fp, r5
 80217b4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80217b8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80217bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80217c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80217c4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80217c8:	ea42 0e0e 	orr.w	lr, r2, lr
 80217cc:	fa1f f28e 	uxth.w	r2, lr
 80217d0:	2bff      	cmp	r3, #255	; 0xff
 80217d2:	f040 80a1 	bne.w	8021918 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80217d6:	803a      	strh	r2, [r7, #0]
 80217d8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80217da:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80217dc:	4413      	add	r3, r2
 80217de:	931d      	str	r3, [sp, #116]	; 0x74
 80217e0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80217e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80217e4:	441a      	add	r2, r3
 80217e6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80217e8:	921e      	str	r2, [sp, #120]	; 0x78
 80217ea:	3b01      	subs	r3, #1
 80217ec:	3702      	adds	r7, #2
 80217ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80217f0:	e6c9      	b.n	8021586 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80217f2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80217f4:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80217f6:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80217f8:	4433      	add	r3, r6
 80217fa:	931d      	str	r3, [sp, #116]	; 0x74
 80217fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80217fe:	441c      	add	r4, r3
 8021800:	9b06      	ldr	r3, [sp, #24]
 8021802:	941e      	str	r4, [sp, #120]	; 0x78
 8021804:	3b01      	subs	r3, #1
 8021806:	9306      	str	r3, [sp, #24]
 8021808:	9b07      	ldr	r3, [sp, #28]
 802180a:	3302      	adds	r3, #2
 802180c:	9307      	str	r3, [sp, #28]
 802180e:	e698      	b.n	8021542 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021810:	d028      	beq.n	8021864 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021812:	9b06      	ldr	r3, [sp, #24]
 8021814:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021816:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021818:	3b01      	subs	r3, #1
 802181a:	fb00 5003 	mla	r0, r0, r3, r5
 802181e:	1400      	asrs	r0, r0, #16
 8021820:	f53f aeac 	bmi.w	802157c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021824:	3901      	subs	r1, #1
 8021826:	4288      	cmp	r0, r1
 8021828:	f6bf aea8 	bge.w	802157c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802182c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802182e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8021830:	fb01 0303 	mla	r3, r1, r3, r0
 8021834:	141b      	asrs	r3, r3, #16
 8021836:	f53f aea1 	bmi.w	802157c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802183a:	3a01      	subs	r2, #1
 802183c:	4293      	cmp	r3, r2
 802183e:	f6bf ae9d 	bge.w	802157c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021842:	9b06      	ldr	r3, [sp, #24]
 8021844:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8021848:	930f      	str	r3, [sp, #60]	; 0x3c
 802184a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802184e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021850:	2b00      	cmp	r3, #0
 8021852:	f300 80b6 	bgt.w	80219c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8021856:	9b06      	ldr	r3, [sp, #24]
 8021858:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802185c:	9b07      	ldr	r3, [sp, #28]
 802185e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021862:	9307      	str	r3, [sp, #28]
 8021864:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021866:	2b00      	cmp	r3, #0
 8021868:	f340 8218 	ble.w	8021c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802186c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021870:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021874:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021878:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802187a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802187e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021882:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021886:	eef0 6a62 	vmov.f32	s13, s5
 802188a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802188e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021892:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021896:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802189a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802189e:	eef0 6a43 	vmov.f32	s13, s6
 80218a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80218a6:	ee12 2a90 	vmov	r2, s5
 80218aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80218ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80218b2:	ee13 2a10 	vmov	r2, s6
 80218b6:	931f      	str	r3, [sp, #124]	; 0x7c
 80218b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80218ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80218be:	9320      	str	r3, [sp, #128]	; 0x80
 80218c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80218c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80218c4:	3b01      	subs	r3, #1
 80218c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218ca:	930e      	str	r3, [sp, #56]	; 0x38
 80218cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80218ce:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80218d2:	bf08      	it	eq
 80218d4:	4613      	moveq	r3, r2
 80218d6:	9306      	str	r3, [sp, #24]
 80218d8:	eeb0 3a67 	vmov.f32	s6, s15
 80218dc:	eef0 2a47 	vmov.f32	s5, s14
 80218e0:	e621      	b.n	8021526 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80218e2:	fb08 f505 	mul.w	r5, r8, r5
 80218e6:	fb09 5303 	mla	r3, r9, r3, r5
 80218ea:	e6a1      	b.n	8021630 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80218ec:	4681      	mov	r9, r0
 80218ee:	e6c8      	b.n	8021682 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80218f0:	f1c1 0210 	rsb	r2, r1, #16
 80218f4:	4341      	muls	r1, r0
 80218f6:	fb09 1902 	mla	r9, r9, r2, r1
 80218fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80218fe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021902:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021906:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802190a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802190e:	ea42 0909 	orr.w	r9, r2, r9
 8021912:	fa1f f289 	uxth.w	r2, r9
 8021916:	e75b      	b.n	80217d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021918:	f8b7 c000 	ldrh.w	ip, [r7]
 802191c:	43db      	mvns	r3, r3
 802191e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8021922:	fa5f fe83 	uxtb.w	lr, r3
 8021926:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802192a:	fb00 f00e 	mul.w	r0, r0, lr
 802192e:	1c41      	adds	r1, r0, #1
 8021930:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021934:	1211      	asrs	r1, r2, #8
 8021936:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802193a:	f021 0107 	bic.w	r1, r1, #7
 802193e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021942:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021946:	48d7      	ldr	r0, [pc, #860]	; (8021ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8021948:	fb05 f50e 	mul.w	r5, r5, lr
 802194c:	b2c9      	uxtb	r1, r1
 802194e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8021952:	1c69      	adds	r1, r5, #1
 8021954:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8021958:	10d1      	asrs	r1, r2, #3
 802195a:	f021 0103 	bic.w	r1, r1, #3
 802195e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8021962:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021966:	b2db      	uxtb	r3, r3
 8021968:	00c9      	lsls	r1, r1, #3
 802196a:	fb03 f30e 	mul.w	r3, r3, lr
 802196e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021972:	4301      	orrs	r1, r0
 8021974:	1c58      	adds	r0, r3, #1
 8021976:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802197a:	00d2      	lsls	r2, r2, #3
 802197c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021980:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021984:	430a      	orrs	r2, r1
 8021986:	e726      	b.n	80217d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8021988:	f115 0e01 	adds.w	lr, r5, #1
 802198c:	f53f af24 	bmi.w	80217d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021990:	4572      	cmp	r2, lr
 8021992:	f6ff af21 	blt.w	80217d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021996:	f110 0e01 	adds.w	lr, r0, #1
 802199a:	f53f af1d 	bmi.w	80217d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802199e:	4573      	cmp	r3, lr
 80219a0:	f6ff af1a 	blt.w	80217d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80219a4:	b21b      	sxth	r3, r3
 80219a6:	b212      	sxth	r2, r2
 80219a8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80219ac:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80219b0:	9301      	str	r3, [sp, #4]
 80219b2:	9200      	str	r2, [sp, #0]
 80219b4:	4639      	mov	r1, r7
 80219b6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80219ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 80219bc:	f7ff fc24 	bl	8021208 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80219c0:	e70a      	b.n	80217d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80219c2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80219c4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80219c8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80219ca:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80219ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80219d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80219d4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80219d6:	141f      	asrs	r7, r3, #16
 80219d8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80219da:	141b      	asrs	r3, r3, #16
 80219dc:	fb01 3707 	mla	r7, r1, r7, r3
 80219e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80219e2:	fa1f fc82 	uxth.w	ip, r2
 80219e6:	eb03 0a07 	add.w	sl, r3, r7
 80219ea:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80219ee:	f813 9007 	ldrb.w	r9, [r3, r7]
 80219f2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80219f6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80219fa:	b29b      	uxth	r3, r3
 80219fc:	2d00      	cmp	r5, #0
 80219fe:	f000 80fe 	beq.w	8021bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8021a02:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021a06:	940c      	str	r4, [sp, #48]	; 0x30
 8021a08:	eb0a 0b01 	add.w	fp, sl, r1
 8021a0c:	fa1f fa85 	uxth.w	sl, r5
 8021a10:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a14:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021a18:	fa1f fa8a 	uxth.w	sl, sl
 8021a1c:	eba0 000c 	sub.w	r0, r0, ip
 8021a20:	eba3 030a 	sub.w	r3, r3, sl
 8021a24:	b280      	uxth	r0, r0
 8021a26:	fb08 f000 	mul.w	r0, r8, r0
 8021a2a:	b29b      	uxth	r3, r3
 8021a2c:	fb09 0303 	mla	r3, r9, r3, r0
 8021a30:	980c      	ldr	r0, [sp, #48]	; 0x30
 8021a32:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021a36:	940d      	str	r4, [sp, #52]	; 0x34
 8021a38:	fb0a 3300 	mla	r3, sl, r0, r3
 8021a3c:	fb0c 3304 	mla	r3, ip, r4, r3
 8021a40:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021a44:	2b00      	cmp	r3, #0
 8021a46:	f000 80cc 	beq.w	8021be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8021a4a:	9808      	ldr	r0, [sp, #32]
 8021a4c:	9c08      	ldr	r4, [sp, #32]
 8021a4e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021a52:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021a56:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021a5a:	f000 80d5 	beq.w	8021c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021a5e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021a62:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021a66:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a6a:	fb09 f707 	mul.w	r7, r9, r7
 8021a6e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a72:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021a76:	f107 0b20 	add.w	fp, r7, #32
 8021a7a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021a7e:	44cc      	add	ip, r9
 8021a80:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021a84:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021a88:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021a8c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021a90:	ea4c 0909 	orr.w	r9, ip, r9
 8021a94:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021a98:	8847      	ldrh	r7, [r0, #2]
 8021a9a:	d019      	beq.n	8021ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8021a9c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021aa0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021aa4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021aa8:	fb08 f807 	mul.w	r8, r8, r7
 8021aac:	fb0a fc0c 	mul.w	ip, sl, ip
 8021ab0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021ab4:	f108 0b20 	add.w	fp, r8, #32
 8021ab8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021abc:	44bc      	add	ip, r7
 8021abe:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021ac2:	0a3f      	lsrs	r7, r7, #8
 8021ac4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021ac8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021acc:	ea4c 0707 	orr.w	r7, ip, r7
 8021ad0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021ad4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021ad8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021adc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021ae0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ae4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021ae8:	ea4c 0909 	orr.w	r9, ip, r9
 8021aec:	ea4a 0707 	orr.w	r7, sl, r7
 8021af0:	2d00      	cmp	r5, #0
 8021af2:	f000 808b 	beq.w	8021c0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8021af6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021afa:	3901      	subs	r1, #1
 8021afc:	0049      	lsls	r1, r1, #1
 8021afe:	3102      	adds	r1, #2
 8021b00:	eb00 0c01 	add.w	ip, r0, r1
 8021b04:	5a41      	ldrh	r1, [r0, r1]
 8021b06:	980c      	ldr	r0, [sp, #48]	; 0x30
 8021b08:	28ff      	cmp	r0, #255	; 0xff
 8021b0a:	d019      	beq.n	8021b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8021b0c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021b0e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021b12:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021b16:	fb04 fa01 	mul.w	sl, r4, r1
 8021b1a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021b1e:	fb08 f800 	mul.w	r8, r8, r0
 8021b22:	f10a 0020 	add.w	r0, sl, #32
 8021b26:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021b2a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021b2e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021b32:	4441      	add	r1, r8
 8021b34:	0a00      	lsrs	r0, r0, #8
 8021b36:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021b3a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b3e:	4301      	orrs	r1, r0
 8021b40:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021b42:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021b46:	2cff      	cmp	r4, #255	; 0xff
 8021b48:	d01a      	beq.n	8021b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8021b4a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021b4e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b52:	fb04 fa00 	mul.w	sl, r4, r0
 8021b56:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021b5a:	fb08 f80c 	mul.w	r8, r8, ip
 8021b5e:	f10a 0c20 	add.w	ip, sl, #32
 8021b62:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021b66:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021b6a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021b6e:	4440      	add	r0, r8
 8021b70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b74:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021b78:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021b7c:	ea40 000c 	orr.w	r0, r0, ip
 8021b80:	fb15 fc02 	smulbb	ip, r5, r2
 8021b84:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021b88:	f1c5 0810 	rsb	r8, r5, #16
 8021b8c:	eba8 0802 	sub.w	r8, r8, r2
 8021b90:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021b94:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021b98:	437a      	muls	r2, r7
 8021b9a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021b9e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021ba2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ba6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021baa:	fb09 2208 	mla	r2, r9, r8, r2
 8021bae:	ea4a 0101 	orr.w	r1, sl, r1
 8021bb2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021bb6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021bba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021bbe:	fb05 2201 	mla	r2, r5, r1, r2
 8021bc2:	ea4b 0000 	orr.w	r0, fp, r0
 8021bc6:	fb0c 2200 	mla	r2, ip, r0, r2
 8021bca:	0d57      	lsrs	r7, r2, #21
 8021bcc:	0952      	lsrs	r2, r2, #5
 8021bce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021bd2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021bd6:	433a      	orrs	r2, r7
 8021bd8:	2bff      	cmp	r3, #255	; 0xff
 8021bda:	b292      	uxth	r2, r2
 8021bdc:	d127      	bne.n	8021c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8021bde:	f8ae 2000 	strh.w	r2, [lr]
 8021be2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021be4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8021be6:	4413      	add	r3, r2
 8021be8:	931d      	str	r3, [sp, #116]	; 0x74
 8021bea:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8021bec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021bee:	441a      	add	r2, r3
 8021bf0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021bf2:	921e      	str	r2, [sp, #120]	; 0x78
 8021bf4:	3b01      	subs	r3, #1
 8021bf6:	f10e 0e02 	add.w	lr, lr, #2
 8021bfa:	930f      	str	r3, [sp, #60]	; 0x3c
 8021bfc:	e627      	b.n	802184e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8021bfe:	fb08 f000 	mul.w	r0, r8, r0
 8021c02:	fb09 0303 	mla	r3, r9, r3, r0
 8021c06:	e71b      	b.n	8021a40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8021c08:	46b9      	mov	r9, r7
 8021c0a:	e743      	b.n	8021a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8021c0c:	f1c2 0110 	rsb	r1, r2, #16
 8021c10:	437a      	muls	r2, r7
 8021c12:	fb09 2901 	mla	r9, r9, r1, r2
 8021c16:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021c1a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021c1e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021c22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c26:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021c2a:	4302      	orrs	r2, r0
 8021c2c:	e7d4      	b.n	8021bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8021c2e:	f8be 7000 	ldrh.w	r7, [lr]
 8021c32:	4c1c      	ldr	r4, [pc, #112]	; (8021ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8021c34:	43db      	mvns	r3, r3
 8021c36:	1238      	asrs	r0, r7, #8
 8021c38:	fa5f fc83 	uxtb.w	ip, r3
 8021c3c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021c40:	10fd      	asrs	r5, r7, #3
 8021c42:	fb00 f00c 	mul.w	r0, r0, ip
 8021c46:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021c4a:	fb05 f10c 	mul.w	r1, r5, ip
 8021c4e:	1c45      	adds	r5, r0, #1
 8021c50:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8021c54:	1215      	asrs	r5, r2, #8
 8021c56:	f025 0507 	bic.w	r5, r5, #7
 8021c5a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8021c5e:	1c4d      	adds	r5, r1, #1
 8021c60:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8021c64:	10d1      	asrs	r1, r2, #3
 8021c66:	f021 0103 	bic.w	r1, r1, #3
 8021c6a:	00fb      	lsls	r3, r7, #3
 8021c6c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021c70:	b2db      	uxtb	r3, r3
 8021c72:	b2c0      	uxtb	r0, r0
 8021c74:	00c9      	lsls	r1, r1, #3
 8021c76:	fb03 f30c 	mul.w	r3, r3, ip
 8021c7a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021c7e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8021c82:	4308      	orrs	r0, r1
 8021c84:	1c59      	adds	r1, r3, #1
 8021c86:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021c8a:	00d2      	lsls	r2, r2, #3
 8021c8c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021c90:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021c94:	4318      	orrs	r0, r3
 8021c96:	f8ae 0000 	strh.w	r0, [lr]
 8021c9a:	e7a2      	b.n	8021be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8021c9c:	b013      	add	sp, #76	; 0x4c
 8021c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ca2:	bf00      	nop
 8021ca4:	fffff800 	.word	0xfffff800

08021ca8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8021ca8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021cac:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8021cb0:	fb05 4c03 	mla	ip, r5, r3, r4
 8021cb4:	2d00      	cmp	r5, #0
 8021cb6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8021cba:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8021cbe:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8021cc2:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8021cc6:	8808      	ldrh	r0, [r1, #0]
 8021cc8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8021ccc:	f2c0 80a7 	blt.w	8021e1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8021cd0:	45aa      	cmp	sl, r5
 8021cd2:	f340 80a4 	ble.w	8021e1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8021cd6:	2c00      	cmp	r4, #0
 8021cd8:	f2c0 809f 	blt.w	8021e1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8021cdc:	42a3      	cmp	r3, r4
 8021cde:	f340 809c 	ble.w	8021e1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8021ce2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8021ce6:	1c62      	adds	r2, r4, #1
 8021ce8:	f100 809c 	bmi.w	8021e24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8021cec:	4293      	cmp	r3, r2
 8021cee:	f340 8099 	ble.w	8021e24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8021cf2:	f1b9 0f00 	cmp.w	r9, #0
 8021cf6:	f000 8095 	beq.w	8021e24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8021cfa:	f8be c002 	ldrh.w	ip, [lr, #2]
 8021cfe:	3501      	adds	r5, #1
 8021d00:	f100 8094 	bmi.w	8021e2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8021d04:	45aa      	cmp	sl, r5
 8021d06:	f340 8091 	ble.w	8021e2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8021d0a:	2f00      	cmp	r7, #0
 8021d0c:	f000 808e 	beq.w	8021e2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8021d10:	2c00      	cmp	r4, #0
 8021d12:	f2c0 8089 	blt.w	8021e28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8021d16:	42a3      	cmp	r3, r4
 8021d18:	f340 8086 	ble.w	8021e28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8021d1c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8021d20:	3401      	adds	r4, #1
 8021d22:	f100 8086 	bmi.w	8021e32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8021d26:	42a3      	cmp	r3, r4
 8021d28:	f340 8083 	ble.w	8021e32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8021d2c:	f1b9 0f00 	cmp.w	r9, #0
 8021d30:	d07f      	beq.n	8021e32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8021d32:	3301      	adds	r3, #1
 8021d34:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8021d38:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8021d3c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021d40:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8021d44:	fb19 fe07 	smulbb	lr, r9, r7
 8021d48:	ea44 0808 	orr.w	r8, r4, r8
 8021d4c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8021d50:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8021d54:	f1c7 0210 	rsb	r2, r7, #16
 8021d58:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021d5c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021d60:	ea44 0c0c 	orr.w	ip, r4, ip
 8021d64:	eba2 0209 	sub.w	r2, r2, r9
 8021d68:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8021d6c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8021d70:	fb04 f40c 	mul.w	r4, r4, ip
 8021d74:	fb02 4808 	mla	r8, r2, r8, r4
 8021d78:	041a      	lsls	r2, r3, #16
 8021d7a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021d7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021d82:	4313      	orrs	r3, r2
 8021d84:	042a      	lsls	r2, r5, #16
 8021d86:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021d8a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021d8e:	fb0e 8303 	mla	r3, lr, r3, r8
 8021d92:	432a      	orrs	r2, r5
 8021d94:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8021d98:	fb07 3202 	mla	r2, r7, r2, r3
 8021d9c:	0d53      	lsrs	r3, r2, #21
 8021d9e:	0952      	lsrs	r2, r2, #5
 8021da0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021da4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021da8:	431a      	orrs	r2, r3
 8021daa:	b293      	uxth	r3, r2
 8021dac:	b2b4      	uxth	r4, r6
 8021dae:	1202      	asrs	r2, r0, #8
 8021db0:	43f6      	mvns	r6, r6
 8021db2:	b2f6      	uxtb	r6, r6
 8021db4:	121d      	asrs	r5, r3, #8
 8021db6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021dba:	fb12 f206 	smulbb	r2, r2, r6
 8021dbe:	10c7      	asrs	r7, r0, #3
 8021dc0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021dc4:	00c0      	lsls	r0, r0, #3
 8021dc6:	fb05 2504 	mla	r5, r5, r4, r2
 8021dca:	b2c0      	uxtb	r0, r0
 8021dcc:	10da      	asrs	r2, r3, #3
 8021dce:	00db      	lsls	r3, r3, #3
 8021dd0:	b2db      	uxtb	r3, r3
 8021dd2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021dd6:	fb10 f006 	smulbb	r0, r0, r6
 8021dda:	b2ad      	uxth	r5, r5
 8021ddc:	fb03 0004 	mla	r0, r3, r4, r0
 8021de0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021de4:	fb17 f706 	smulbb	r7, r7, r6
 8021de8:	b280      	uxth	r0, r0
 8021dea:	1c6b      	adds	r3, r5, #1
 8021dec:	fb02 7204 	mla	r2, r2, r4, r7
 8021df0:	b292      	uxth	r2, r2
 8021df2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021df6:	1c43      	adds	r3, r0, #1
 8021df8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021dfc:	1c50      	adds	r0, r2, #1
 8021dfe:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8021e02:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021e06:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021e0a:	0952      	lsrs	r2, r2, #5
 8021e0c:	432b      	orrs	r3, r5
 8021e0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e12:	4313      	orrs	r3, r2
 8021e14:	800b      	strh	r3, [r1, #0]
 8021e16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021e1a:	4680      	mov	r8, r0
 8021e1c:	e763      	b.n	8021ce6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8021e1e:	4684      	mov	ip, r0
 8021e20:	4680      	mov	r8, r0
 8021e22:	e76c      	b.n	8021cfe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8021e24:	4684      	mov	ip, r0
 8021e26:	e76a      	b.n	8021cfe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8021e28:	4605      	mov	r5, r0
 8021e2a:	e779      	b.n	8021d20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8021e2c:	4603      	mov	r3, r0
 8021e2e:	4605      	mov	r5, r0
 8021e30:	e782      	b.n	8021d38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8021e32:	4603      	mov	r3, r0
 8021e34:	e780      	b.n	8021d38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08021e36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021e36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e3a:	b093      	sub	sp, #76	; 0x4c
 8021e3c:	461d      	mov	r5, r3
 8021e3e:	9210      	str	r2, [sp, #64]	; 0x40
 8021e40:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021e42:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8021e46:	920b      	str	r2, [sp, #44]	; 0x2c
 8021e48:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8021e4c:	910a      	str	r1, [sp, #40]	; 0x28
 8021e4e:	6859      	ldr	r1, [r3, #4]
 8021e50:	681b      	ldr	r3, [r3, #0]
 8021e52:	9011      	str	r0, [sp, #68]	; 0x44
 8021e54:	fb01 2707 	mla	r7, r1, r7, r2
 8021e58:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8021e5c:	9307      	str	r3, [sp, #28]
 8021e5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e60:	681b      	ldr	r3, [r3, #0]
 8021e62:	9309      	str	r3, [sp, #36]	; 0x24
 8021e64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021e66:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8021e6a:	43db      	mvns	r3, r3
 8021e6c:	b2db      	uxtb	r3, r3
 8021e6e:	9308      	str	r3, [sp, #32]
 8021e70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021e72:	2b00      	cmp	r3, #0
 8021e74:	dc03      	bgt.n	8021e7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021e76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021e78:	2b00      	cmp	r3, #0
 8021e7a:	f340 8203 	ble.w	8022284 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021e7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e84:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021e88:	1e48      	subs	r0, r1, #1
 8021e8a:	f102 3cff 	add.w	ip, r2, #4294967295
 8021e8e:	2d00      	cmp	r5, #0
 8021e90:	f340 80da 	ble.w	8022048 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8021e94:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021e98:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021e9c:	d406      	bmi.n	8021eac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021e9e:	4586      	cmp	lr, r0
 8021ea0:	da04      	bge.n	8021eac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021ea2:	2b00      	cmp	r3, #0
 8021ea4:	db02      	blt.n	8021eac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021ea6:	4563      	cmp	r3, ip
 8021ea8:	f2c0 80cf 	blt.w	802204a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8021eac:	f11e 0e01 	adds.w	lr, lr, #1
 8021eb0:	f100 80c1 	bmi.w	8022036 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021eb4:	4571      	cmp	r1, lr
 8021eb6:	f2c0 80be 	blt.w	8022036 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021eba:	3301      	adds	r3, #1
 8021ebc:	f100 80bb 	bmi.w	8022036 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021ec0:	429a      	cmp	r2, r3
 8021ec2:	f2c0 80b8 	blt.w	8022036 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021ec6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8021eca:	46a9      	mov	r9, r5
 8021ecc:	f1b9 0f00 	cmp.w	r9, #0
 8021ed0:	f340 80d8 	ble.w	8022084 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8021ed4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ed6:	1421      	asrs	r1, r4, #16
 8021ed8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021edc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021ee0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021ee4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021ee8:	f100 8111 	bmi.w	802210e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021eec:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021ef0:	4551      	cmp	r1, sl
 8021ef2:	f280 810c 	bge.w	802210e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021ef6:	2800      	cmp	r0, #0
 8021ef8:	f2c0 8109 	blt.w	802210e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021efc:	f103 3aff 	add.w	sl, r3, #4294967295
 8021f00:	4550      	cmp	r0, sl
 8021f02:	f280 8104 	bge.w	802210e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021f06:	fa0f f38e 	sxth.w	r3, lr
 8021f0a:	fb00 1103 	mla	r1, r0, r3, r1
 8021f0e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8021f10:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8021f14:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8021f18:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8021f1c:	f1bc 0f00 	cmp.w	ip, #0
 8021f20:	d007      	beq.n	8021f32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8021f22:	005b      	lsls	r3, r3, #1
 8021f24:	eb0a 0003 	add.w	r0, sl, r3
 8021f28:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8021f2c:	930c      	str	r3, [sp, #48]	; 0x30
 8021f2e:	8843      	ldrh	r3, [r0, #2]
 8021f30:	930d      	str	r3, [sp, #52]	; 0x34
 8021f32:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8021f36:	fb12 f30c 	smulbb	r3, r2, ip
 8021f3a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021f3e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021f42:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021f46:	10db      	asrs	r3, r3, #3
 8021f48:	ea40 000e 	orr.w	r0, r0, lr
 8021f4c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021f50:	f1cc 0e10 	rsb	lr, ip, #16
 8021f54:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021f58:	ebae 0e02 	sub.w	lr, lr, r2
 8021f5c:	ea4a 0101 	orr.w	r1, sl, r1
 8021f60:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021f64:	4351      	muls	r1, r2
 8021f66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021f68:	9f08      	ldr	r7, [sp, #32]
 8021f6a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8021f6e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8021f72:	0410      	lsls	r0, r2, #16
 8021f74:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021f78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021f7c:	4310      	orrs	r0, r2
 8021f7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021f80:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021f82:	0412      	lsls	r2, r2, #16
 8021f84:	fb03 e000 	mla	r0, r3, r0, lr
 8021f88:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021f8c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8021f90:	ea42 020e 	orr.w	r2, r2, lr
 8021f94:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021f98:	fb03 0302 	mla	r3, r3, r2, r0
 8021f9c:	0d5a      	lsrs	r2, r3, #21
 8021f9e:	095b      	lsrs	r3, r3, #5
 8021fa0:	f8b8 0000 	ldrh.w	r0, [r8]
 8021fa4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021fa8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021fac:	4313      	orrs	r3, r2
 8021fae:	b29b      	uxth	r3, r3
 8021fb0:	1201      	asrs	r1, r0, #8
 8021fb2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8021fb6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8021fba:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021fbe:	fb11 f107 	smulbb	r1, r1, r7
 8021fc2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8021fc6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021fca:	00c0      	lsls	r0, r0, #3
 8021fcc:	fb0c 1c02 	mla	ip, ip, r2, r1
 8021fd0:	b2c0      	uxtb	r0, r0
 8021fd2:	10d9      	asrs	r1, r3, #3
 8021fd4:	00db      	lsls	r3, r3, #3
 8021fd6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021fda:	b2db      	uxtb	r3, r3
 8021fdc:	fb10 f007 	smulbb	r0, r0, r7
 8021fe0:	fa1f fc8c 	uxth.w	ip, ip
 8021fe4:	fb03 0302 	mla	r3, r3, r2, r0
 8021fe8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021fec:	fb1e fe07 	smulbb	lr, lr, r7
 8021ff0:	fb01 e102 	mla	r1, r1, r2, lr
 8021ff4:	b29a      	uxth	r2, r3
 8021ff6:	f10c 0301 	add.w	r3, ip, #1
 8021ffa:	b289      	uxth	r1, r1
 8021ffc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022000:	1c53      	adds	r3, r2, #1
 8022002:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022006:	1c4a      	adds	r2, r1, #1
 8022008:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802200c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022010:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022014:	0949      	lsrs	r1, r1, #5
 8022016:	ea43 030c 	orr.w	r3, r3, ip
 802201a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802201e:	430b      	orrs	r3, r1
 8022020:	f8a8 3000 	strh.w	r3, [r8]
 8022024:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022026:	441c      	add	r4, r3
 8022028:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802202a:	f108 0802 	add.w	r8, r8, #2
 802202e:	441e      	add	r6, r3
 8022030:	f109 39ff 	add.w	r9, r9, #4294967295
 8022034:	e74a      	b.n	8021ecc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022036:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022038:	441c      	add	r4, r3
 802203a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802203c:	441e      	add	r6, r3
 802203e:	9b07      	ldr	r3, [sp, #28]
 8022040:	3302      	adds	r3, #2
 8022042:	3d01      	subs	r5, #1
 8022044:	9307      	str	r3, [sp, #28]
 8022046:	e722      	b.n	8021e8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022048:	d022      	beq.n	8022090 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802204a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802204c:	1e6b      	subs	r3, r5, #1
 802204e:	fb00 4003 	mla	r0, r0, r3, r4
 8022052:	1400      	asrs	r0, r0, #16
 8022054:	f53f af37 	bmi.w	8021ec6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022058:	3901      	subs	r1, #1
 802205a:	4288      	cmp	r0, r1
 802205c:	f6bf af33 	bge.w	8021ec6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022060:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022062:	fb01 6303 	mla	r3, r1, r3, r6
 8022066:	141b      	asrs	r3, r3, #16
 8022068:	f53f af2d 	bmi.w	8021ec6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802206c:	3a01      	subs	r2, #1
 802206e:	4293      	cmp	r3, r2
 8022070:	f6bf af29 	bge.w	8021ec6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022074:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022078:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 802207c:	46a8      	mov	r8, r5
 802207e:	f1b8 0f00 	cmp.w	r8, #0
 8022082:	dc5e      	bgt.n	8022142 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022084:	9b07      	ldr	r3, [sp, #28]
 8022086:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802208a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802208e:	9307      	str	r3, [sp, #28]
 8022090:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022092:	2b00      	cmp	r3, #0
 8022094:	f340 80f6 	ble.w	8022284 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022098:	ee30 0a04 	vadd.f32	s0, s0, s8
 802209c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80220a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80220a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80220a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80220aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80220ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80220b2:	eef0 6a62 	vmov.f32	s13, s5
 80220b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80220ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80220c2:	ee16 4a90 	vmov	r4, s13
 80220c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80220ca:	eef0 6a43 	vmov.f32	s13, s6
 80220ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80220d2:	ee12 2a90 	vmov	r2, s5
 80220d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80220da:	fb92 f3f3 	sdiv	r3, r2, r3
 80220de:	ee13 2a10 	vmov	r2, s6
 80220e2:	931f      	str	r3, [sp, #124]	; 0x7c
 80220e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80220e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80220ea:	9320      	str	r3, [sp, #128]	; 0x80
 80220ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80220ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80220f0:	3b01      	subs	r3, #1
 80220f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220f6:	930a      	str	r3, [sp, #40]	; 0x28
 80220f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80220fa:	ee16 6a90 	vmov	r6, s13
 80220fe:	bf14      	ite	ne
 8022100:	461d      	movne	r5, r3
 8022102:	4615      	moveq	r5, r2
 8022104:	eeb0 3a67 	vmov.f32	s6, s15
 8022108:	eef0 2a47 	vmov.f32	s5, s14
 802210c:	e6b0      	b.n	8021e70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802210e:	f111 0a01 	adds.w	sl, r1, #1
 8022112:	d487      	bmi.n	8022024 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022114:	45d6      	cmp	lr, sl
 8022116:	db85      	blt.n	8022024 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022118:	f110 0a01 	adds.w	sl, r0, #1
 802211c:	d482      	bmi.n	8022024 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802211e:	4553      	cmp	r3, sl
 8022120:	db80      	blt.n	8022024 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022122:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022124:	9101      	str	r1, [sp, #4]
 8022126:	b21b      	sxth	r3, r3
 8022128:	e9cd 0202 	strd	r0, r2, [sp, #8]
 802212c:	9300      	str	r3, [sp, #0]
 802212e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022132:	fa0f f38e 	sxth.w	r3, lr
 8022136:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022138:	9811      	ldr	r0, [sp, #68]	; 0x44
 802213a:	4641      	mov	r1, r8
 802213c:	f7ff fdb4 	bl	8021ca8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022140:	e770      	b.n	8022024 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022142:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022144:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022146:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802214a:	1430      	asrs	r0, r6, #16
 802214c:	1423      	asrs	r3, r4, #16
 802214e:	fb01 3000 	mla	r0, r1, r0, r3
 8022152:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022154:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022158:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 802215c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022160:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022164:	8858      	ldrh	r0, [r3, #2]
 8022166:	f1be 0f00 	cmp.w	lr, #0
 802216a:	d00b      	beq.n	8022184 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802216c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022170:	3901      	subs	r1, #1
 8022172:	0049      	lsls	r1, r1, #1
 8022174:	3102      	adds	r1, #2
 8022176:	eb03 0b01 	add.w	fp, r3, r1
 802217a:	5a5b      	ldrh	r3, [r3, r1]
 802217c:	930e      	str	r3, [sp, #56]	; 0x38
 802217e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022182:	930f      	str	r3, [sp, #60]	; 0x3c
 8022184:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022188:	fb12 f30e 	smulbb	r3, r2, lr
 802218c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022190:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022194:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022198:	10db      	asrs	r3, r3, #3
 802219a:	ea41 010c 	orr.w	r1, r1, ip
 802219e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80221a2:	f1ce 0c10 	rsb	ip, lr, #16
 80221a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80221aa:	ebac 0c02 	sub.w	ip, ip, r2
 80221ae:	ea4b 0000 	orr.w	r0, fp, r0
 80221b2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80221b6:	4350      	muls	r0, r2
 80221b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80221ba:	9f08      	ldr	r7, [sp, #32]
 80221bc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80221c0:	fb0c 0c01 	mla	ip, ip, r1, r0
 80221c4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80221c8:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80221cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80221ce:	980e      	ldr	r0, [sp, #56]	; 0x38
 80221d0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80221d4:	0412      	lsls	r2, r2, #16
 80221d6:	ea4b 0101 	orr.w	r1, fp, r1
 80221da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80221de:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80221e2:	fb03 c101 	mla	r1, r3, r1, ip
 80221e6:	4302      	orrs	r2, r0
 80221e8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80221ec:	fb03 1202 	mla	r2, r3, r2, r1
 80221f0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80221f4:	0952      	lsrs	r2, r2, #5
 80221f6:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80221fa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80221fe:	f8b9 2000 	ldrh.w	r2, [r9]
 8022202:	ea4b 0303 	orr.w	r3, fp, r3
 8022206:	b29b      	uxth	r3, r3
 8022208:	1211      	asrs	r1, r2, #8
 802220a:	1218      	asrs	r0, r3, #8
 802220c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022210:	fb11 f107 	smulbb	r1, r1, r7
 8022214:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022218:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802221c:	00d2      	lsls	r2, r2, #3
 802221e:	fb00 100a 	mla	r0, r0, sl, r1
 8022222:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022226:	10d9      	asrs	r1, r3, #3
 8022228:	b2d2      	uxtb	r2, r2
 802222a:	00db      	lsls	r3, r3, #3
 802222c:	fb1c fc07 	smulbb	ip, ip, r7
 8022230:	fb12 f207 	smulbb	r2, r2, r7
 8022234:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022238:	b2db      	uxtb	r3, r3
 802223a:	b280      	uxth	r0, r0
 802223c:	fb01 c10a 	mla	r1, r1, sl, ip
 8022240:	fb03 230a 	mla	r3, r3, sl, r2
 8022244:	b29b      	uxth	r3, r3
 8022246:	b289      	uxth	r1, r1
 8022248:	1c42      	adds	r2, r0, #1
 802224a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802224e:	f101 0c01 	add.w	ip, r1, #1
 8022252:	1c5a      	adds	r2, r3, #1
 8022254:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022258:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802225c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802225e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022262:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022266:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802226a:	4310      	orrs	r0, r2
 802226c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022270:	441c      	add	r4, r3
 8022272:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022274:	ea40 000c 	orr.w	r0, r0, ip
 8022278:	f829 0b02 	strh.w	r0, [r9], #2
 802227c:	441e      	add	r6, r3
 802227e:	f108 38ff 	add.w	r8, r8, #4294967295
 8022282:	e6fc      	b.n	802207e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022284:	b013      	add	sp, #76	; 0x4c
 8022286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802228a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802228a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802228e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022292:	fb0e 4703 	mla	r7, lr, r3, r4
 8022296:	f1be 0f00 	cmp.w	lr, #0
 802229a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802229e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80222a2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80222a6:	8808      	ldrh	r0, [r1, #0]
 80222a8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80222ac:	db60      	blt.n	8022370 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80222ae:	45f1      	cmp	r9, lr
 80222b0:	dd5e      	ble.n	8022370 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80222b2:	2c00      	cmp	r4, #0
 80222b4:	db5a      	blt.n	802236c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80222b6:	42a3      	cmp	r3, r4
 80222b8:	dd58      	ble.n	802236c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80222ba:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80222be:	1c62      	adds	r2, r4, #1
 80222c0:	d459      	bmi.n	8022376 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80222c2:	4293      	cmp	r3, r2
 80222c4:	dd57      	ble.n	8022376 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80222c6:	2d00      	cmp	r5, #0
 80222c8:	d055      	beq.n	8022376 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80222ca:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80222ce:	f11e 0e01 	adds.w	lr, lr, #1
 80222d2:	d454      	bmi.n	802237e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80222d4:	45f1      	cmp	r9, lr
 80222d6:	dd52      	ble.n	802237e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80222d8:	2e00      	cmp	r6, #0
 80222da:	d050      	beq.n	802237e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80222dc:	2c00      	cmp	r4, #0
 80222de:	db4c      	blt.n	802237a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80222e0:	42a3      	cmp	r3, r4
 80222e2:	dd4a      	ble.n	802237a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80222e4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80222e8:	3401      	adds	r4, #1
 80222ea:	d405      	bmi.n	80222f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80222ec:	42a3      	cmp	r3, r4
 80222ee:	dd03      	ble.n	80222f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80222f0:	b115      	cbz	r5, 80222f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80222f2:	3301      	adds	r3, #1
 80222f4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80222f8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80222fc:	fb15 f406 	smulbb	r4, r5, r6
 8022300:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022304:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022308:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802230c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022310:	ea43 0c0c 	orr.w	ip, r3, ip
 8022314:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022318:	f1c6 0310 	rsb	r3, r6, #16
 802231c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022320:	1b5b      	subs	r3, r3, r5
 8022322:	ea4e 0707 	orr.w	r7, lr, r7
 8022326:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802232a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802232e:	437d      	muls	r5, r7
 8022330:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022334:	0403      	lsls	r3, r0, #16
 8022336:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802233a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802233e:	4318      	orrs	r0, r3
 8022340:	0413      	lsls	r3, r2, #16
 8022342:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022346:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802234a:	4313      	orrs	r3, r2
 802234c:	fb04 c000 	mla	r0, r4, r0, ip
 8022350:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022354:	fb06 0003 	mla	r0, r6, r3, r0
 8022358:	0d43      	lsrs	r3, r0, #21
 802235a:	0940      	lsrs	r0, r0, #5
 802235c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022360:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022364:	4318      	orrs	r0, r3
 8022366:	8008      	strh	r0, [r1, #0]
 8022368:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802236c:	4684      	mov	ip, r0
 802236e:	e7a6      	b.n	80222be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022370:	4607      	mov	r7, r0
 8022372:	4684      	mov	ip, r0
 8022374:	e7ab      	b.n	80222ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022376:	4607      	mov	r7, r0
 8022378:	e7a9      	b.n	80222ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802237a:	4602      	mov	r2, r0
 802237c:	e7b4      	b.n	80222e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802237e:	4602      	mov	r2, r0
 8022380:	e7ba      	b.n	80222f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022382 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022382:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022386:	b08f      	sub	sp, #60	; 0x3c
 8022388:	461d      	mov	r5, r3
 802238a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802238c:	920c      	str	r2, [sp, #48]	; 0x30
 802238e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022392:	9107      	str	r1, [sp, #28]
 8022394:	6859      	ldr	r1, [r3, #4]
 8022396:	681b      	ldr	r3, [r3, #0]
 8022398:	900d      	str	r0, [sp, #52]	; 0x34
 802239a:	fb01 2707 	mla	r7, r1, r7, r2
 802239e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80223a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80223a4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80223a8:	f8d3 8000 	ldr.w	r8, [r3]
 80223ac:	9b07      	ldr	r3, [sp, #28]
 80223ae:	2b00      	cmp	r3, #0
 80223b0:	dc03      	bgt.n	80223ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80223b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80223b4:	2b00      	cmp	r3, #0
 80223b6:	f340 8181 	ble.w	80226bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80223ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80223bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80223c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80223c4:	1e48      	subs	r0, r1, #1
 80223c6:	f102 3cff 	add.w	ip, r2, #4294967295
 80223ca:	2d00      	cmp	r5, #0
 80223cc:	f340 809b 	ble.w	8022506 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80223d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80223d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80223d8:	d406      	bmi.n	80223e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80223da:	4586      	cmp	lr, r0
 80223dc:	da04      	bge.n	80223e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80223de:	2b00      	cmp	r3, #0
 80223e0:	db02      	blt.n	80223e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80223e2:	4563      	cmp	r3, ip
 80223e4:	f2c0 8090 	blt.w	8022508 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80223e8:	f11e 0e01 	adds.w	lr, lr, #1
 80223ec:	f100 8084 	bmi.w	80224f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80223f0:	4571      	cmp	r1, lr
 80223f2:	f2c0 8081 	blt.w	80224f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80223f6:	3301      	adds	r3, #1
 80223f8:	d47e      	bmi.n	80224f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80223fa:	429a      	cmp	r2, r3
 80223fc:	db7c      	blt.n	80224f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80223fe:	46aa      	mov	sl, r5
 8022400:	46b9      	mov	r9, r7
 8022402:	f1ba 0f00 	cmp.w	sl, #0
 8022406:	f340 8099 	ble.w	802253c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802240a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802240c:	1421      	asrs	r1, r4, #16
 802240e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022412:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022416:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802241a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802241e:	f100 80d0 	bmi.w	80225c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022422:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022426:	4559      	cmp	r1, fp
 8022428:	f280 80cb 	bge.w	80225c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802242c:	2800      	cmp	r0, #0
 802242e:	f2c0 80c8 	blt.w	80225c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022432:	f103 3bff 	add.w	fp, r3, #4294967295
 8022436:	4558      	cmp	r0, fp
 8022438:	f280 80c3 	bge.w	80225c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802243c:	fa0f fe8e 	sxth.w	lr, lr
 8022440:	fb00 110e 	mla	r1, r0, lr, r1
 8022444:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022448:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802244c:	8841      	ldrh	r1, [r0, #2]
 802244e:	f1bc 0f00 	cmp.w	ip, #0
 8022452:	d00b      	beq.n	802246c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022454:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8022458:	3b01      	subs	r3, #1
 802245a:	005b      	lsls	r3, r3, #1
 802245c:	3302      	adds	r3, #2
 802245e:	eb00 0e03 	add.w	lr, r0, r3
 8022462:	5ac3      	ldrh	r3, [r0, r3]
 8022464:	9308      	str	r3, [sp, #32]
 8022466:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802246a:	9309      	str	r3, [sp, #36]	; 0x24
 802246c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022470:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022474:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022478:	ea40 000b 	orr.w	r0, r0, fp
 802247c:	fb12 f30c 	smulbb	r3, r2, ip
 8022480:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022484:	10db      	asrs	r3, r3, #3
 8022486:	f1cc 0e10 	rsb	lr, ip, #16
 802248a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802248e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022492:	ebae 0e02 	sub.w	lr, lr, r2
 8022496:	ea4b 0101 	orr.w	r1, fp, r1
 802249a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802249e:	4351      	muls	r1, r2
 80224a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80224a2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80224a6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80224aa:	0410      	lsls	r0, r2, #16
 80224ac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80224b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80224b4:	4310      	orrs	r0, r2
 80224b6:	9a08      	ldr	r2, [sp, #32]
 80224b8:	9908      	ldr	r1, [sp, #32]
 80224ba:	0412      	lsls	r2, r2, #16
 80224bc:	fb03 e000 	mla	r0, r3, r0, lr
 80224c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80224c4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80224c8:	ea42 020e 	orr.w	r2, r2, lr
 80224cc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80224d0:	fb03 0302 	mla	r3, r3, r2, r0
 80224d4:	0d5a      	lsrs	r2, r3, #21
 80224d6:	095b      	lsrs	r3, r3, #5
 80224d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80224dc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80224e0:	4313      	orrs	r3, r2
 80224e2:	f8a9 3000 	strh.w	r3, [r9]
 80224e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80224e8:	441c      	add	r4, r3
 80224ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80224ec:	f109 0902 	add.w	r9, r9, #2
 80224f0:	441e      	add	r6, r3
 80224f2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80224f6:	e784      	b.n	8022402 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80224f8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80224fa:	441c      	add	r4, r3
 80224fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80224fe:	3d01      	subs	r5, #1
 8022500:	441e      	add	r6, r3
 8022502:	3702      	adds	r7, #2
 8022504:	e761      	b.n	80223ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022506:	d01d      	beq.n	8022544 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022508:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802250a:	1e6b      	subs	r3, r5, #1
 802250c:	fb00 4003 	mla	r0, r0, r3, r4
 8022510:	1400      	asrs	r0, r0, #16
 8022512:	f53f af74 	bmi.w	80223fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022516:	3901      	subs	r1, #1
 8022518:	4288      	cmp	r0, r1
 802251a:	f6bf af70 	bge.w	80223fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802251e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022520:	fb01 6303 	mla	r3, r1, r3, r6
 8022524:	141b      	asrs	r3, r3, #16
 8022526:	f53f af6a 	bmi.w	80223fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802252a:	3a01      	subs	r2, #1
 802252c:	4293      	cmp	r3, r2
 802252e:	f6bf af66 	bge.w	80223fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022532:	46a9      	mov	r9, r5
 8022534:	46ba      	mov	sl, r7
 8022536:	f1b9 0f00 	cmp.w	r9, #0
 802253a:	dc5a      	bgt.n	80225f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 802253c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022540:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022544:	9b07      	ldr	r3, [sp, #28]
 8022546:	2b00      	cmp	r3, #0
 8022548:	f340 80b8 	ble.w	80226bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802254c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022550:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022554:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022558:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802255a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802255e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022562:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022566:	eef0 6a62 	vmov.f32	s13, s5
 802256a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802256e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022572:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022576:	ee16 4a90 	vmov	r4, s13
 802257a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802257e:	eef0 6a43 	vmov.f32	s13, s6
 8022582:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022586:	ee12 2a90 	vmov	r2, s5
 802258a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802258e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022592:	ee13 2a10 	vmov	r2, s6
 8022596:	931b      	str	r3, [sp, #108]	; 0x6c
 8022598:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802259a:	fb92 f3f3 	sdiv	r3, r2, r3
 802259e:	931c      	str	r3, [sp, #112]	; 0x70
 80225a0:	9b07      	ldr	r3, [sp, #28]
 80225a2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80225a4:	3b01      	subs	r3, #1
 80225a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225aa:	9307      	str	r3, [sp, #28]
 80225ac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80225ae:	ee16 6a90 	vmov	r6, s13
 80225b2:	bf14      	ite	ne
 80225b4:	461d      	movne	r5, r3
 80225b6:	4615      	moveq	r5, r2
 80225b8:	eeb0 3a67 	vmov.f32	s6, s15
 80225bc:	eef0 2a47 	vmov.f32	s5, s14
 80225c0:	e6f4      	b.n	80223ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80225c2:	f111 0b01 	adds.w	fp, r1, #1
 80225c6:	d48e      	bmi.n	80224e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80225c8:	45de      	cmp	lr, fp
 80225ca:	db8c      	blt.n	80224e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80225cc:	f110 0b01 	adds.w	fp, r0, #1
 80225d0:	d489      	bmi.n	80224e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80225d2:	455b      	cmp	r3, fp
 80225d4:	db87      	blt.n	80224e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80225d6:	b21b      	sxth	r3, r3
 80225d8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80225dc:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80225e0:	9300      	str	r3, [sp, #0]
 80225e2:	4642      	mov	r2, r8
 80225e4:	fa0f f38e 	sxth.w	r3, lr
 80225e8:	4649      	mov	r1, r9
 80225ea:	980d      	ldr	r0, [sp, #52]	; 0x34
 80225ec:	f7ff fe4d 	bl	802228a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80225f0:	e779      	b.n	80224e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80225f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80225f4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80225f8:	1420      	asrs	r0, r4, #16
 80225fa:	1431      	asrs	r1, r6, #16
 80225fc:	fb03 0101 	mla	r1, r3, r1, r0
 8022600:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022604:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022608:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802260c:	8841      	ldrh	r1, [r0, #2]
 802260e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022612:	f1be 0f00 	cmp.w	lr, #0
 8022616:	d00b      	beq.n	8022630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022618:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802261c:	3b01      	subs	r3, #1
 802261e:	005b      	lsls	r3, r3, #1
 8022620:	3302      	adds	r3, #2
 8022622:	eb00 0b03 	add.w	fp, r0, r3
 8022626:	5ac3      	ldrh	r3, [r0, r3]
 8022628:	930a      	str	r3, [sp, #40]	; 0x28
 802262a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802262e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022630:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8022634:	fb12 f30e 	smulbb	r3, r2, lr
 8022638:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802263c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022640:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022644:	10db      	asrs	r3, r3, #3
 8022646:	ea40 000c 	orr.w	r0, r0, ip
 802264a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802264e:	f1ce 0c10 	rsb	ip, lr, #16
 8022652:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022656:	ebac 0c02 	sub.w	ip, ip, r2
 802265a:	ea4b 0101 	orr.w	r1, fp, r1
 802265e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022662:	4351      	muls	r1, r2
 8022664:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022666:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802266a:	fb0c 1c00 	mla	ip, ip, r0, r1
 802266e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022672:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8022676:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022678:	990a      	ldr	r1, [sp, #40]	; 0x28
 802267a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802267e:	0412      	lsls	r2, r2, #16
 8022680:	ea4b 0000 	orr.w	r0, fp, r0
 8022684:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022688:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802268c:	fb03 c000 	mla	r0, r3, r0, ip
 8022690:	ea42 0b0b 	orr.w	fp, r2, fp
 8022694:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022698:	fb03 000b 	mla	r0, r3, fp, r0
 802269c:	0d43      	lsrs	r3, r0, #21
 802269e:	0940      	lsrs	r0, r0, #5
 80226a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80226a4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80226a8:	4318      	orrs	r0, r3
 80226aa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80226ac:	f82a 0b02 	strh.w	r0, [sl], #2
 80226b0:	441c      	add	r4, r3
 80226b2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80226b4:	f109 39ff 	add.w	r9, r9, #4294967295
 80226b8:	441e      	add	r6, r3
 80226ba:	e73c      	b.n	8022536 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80226bc:	b00f      	add	sp, #60	; 0x3c
 80226be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080226c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80226c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226c6:	b085      	sub	sp, #20
 80226c8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80226cc:	9102      	str	r1, [sp, #8]
 80226ce:	2c00      	cmp	r4, #0
 80226d0:	fb04 7103 	mla	r1, r4, r3, r7
 80226d4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80226d8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80226dc:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80226e0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80226e4:	f2c0 811b 	blt.w	802291e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80226e8:	45a6      	cmp	lr, r4
 80226ea:	f340 8118 	ble.w	802291e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80226ee:	2f00      	cmp	r7, #0
 80226f0:	f2c0 8113 	blt.w	802291a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80226f4:	42bb      	cmp	r3, r7
 80226f6:	f340 8110 	ble.w	802291a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80226fa:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80226fe:	1c7a      	adds	r2, r7, #1
 8022700:	f100 8110 	bmi.w	8022924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022704:	4293      	cmp	r3, r2
 8022706:	f340 810d 	ble.w	8022924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802270a:	2e00      	cmp	r6, #0
 802270c:	f000 810c 	beq.w	8022928 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8022710:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8022714:	3401      	adds	r4, #1
 8022716:	f100 810b 	bmi.w	8022930 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802271a:	45a6      	cmp	lr, r4
 802271c:	f340 8108 	ble.w	8022930 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022720:	2800      	cmp	r0, #0
 8022722:	f000 8108 	beq.w	8022936 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8022726:	2f00      	cmp	r7, #0
 8022728:	f2c0 8100 	blt.w	802292c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802272c:	42bb      	cmp	r3, r7
 802272e:	f340 80fd 	ble.w	802292c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022732:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022736:	3701      	adds	r7, #1
 8022738:	f100 8100 	bmi.w	802293c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802273c:	42bb      	cmp	r3, r7
 802273e:	f340 80fd 	ble.w	802293c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022742:	2e00      	cmp	r6, #0
 8022744:	f000 80fc 	beq.w	8022940 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8022748:	3301      	adds	r3, #1
 802274a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802274e:	b2b6      	uxth	r6, r6
 8022750:	b280      	uxth	r0, r0
 8022752:	fb00 fe06 	mul.w	lr, r0, r6
 8022756:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802275a:	0136      	lsls	r6, r6, #4
 802275c:	eba6 070e 	sub.w	r7, r6, lr
 8022760:	b280      	uxth	r0, r0
 8022762:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8022766:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802276a:	b2bf      	uxth	r7, r7
 802276c:	1a1b      	subs	r3, r3, r0
 802276e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022772:	b29b      	uxth	r3, r3
 8022774:	fb0a f607 	mul.w	r6, sl, r7
 8022778:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802277c:	fb0b 6603 	mla	r6, fp, r3, r6
 8022780:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022784:	fb00 6609 	mla	r6, r0, r9, r6
 8022788:	fb0e 6608 	mla	r6, lr, r8, r6
 802278c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022790:	9600      	str	r6, [sp, #0]
 8022792:	2e00      	cmp	r6, #0
 8022794:	f000 80be 	beq.w	8022914 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8022798:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802279c:	fb0b fc0c 	mul.w	ip, fp, ip
 80227a0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80227a4:	fb0b f505 	mul.w	r5, fp, r5
 80227a8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80227ac:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80227b0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80227b4:	44dc      	add	ip, fp
 80227b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80227ba:	9501      	str	r5, [sp, #4]
 80227bc:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80227c0:	9503      	str	r5, [sp, #12]
 80227c2:	9d01      	ldr	r5, [sp, #4]
 80227c4:	9e02      	ldr	r6, [sp, #8]
 80227c6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80227ca:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80227ce:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80227d2:	fb0a fc0c 	mul.w	ip, sl, ip
 80227d6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80227da:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80227de:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80227e2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80227e6:	4465      	add	r5, ip
 80227e8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80227ec:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80227f0:	fb09 fc0c 	mul.w	ip, r9, ip
 80227f4:	fb09 f904 	mul.w	r9, r9, r4
 80227f8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80227fc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022800:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8022804:	fb08 f404 	mul.w	r4, r8, r4
 8022808:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802280c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022810:	fb08 f802 	mul.w	r8, r8, r2
 8022814:	fb0a fa01 	mul.w	sl, sl, r1
 8022818:	0a22      	lsrs	r2, r4, #8
 802281a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802281e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022822:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8022826:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802282a:	4414      	add	r4, r2
 802282c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022830:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8022834:	0a2d      	lsrs	r5, r5, #8
 8022836:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802283a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802283e:	9a03      	ldr	r2, [sp, #12]
 8022840:	8836      	ldrh	r6, [r6, #0]
 8022842:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022846:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802284a:	437d      	muls	r5, r7
 802284c:	4461      	add	r1, ip
 802284e:	0a24      	lsrs	r4, r4, #8
 8022850:	fb02 5503 	mla	r5, r2, r3, r5
 8022854:	0a09      	lsrs	r1, r1, #8
 8022856:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802285a:	fb04 540e 	mla	r4, r4, lr, r5
 802285e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022862:	fb01 4100 	mla	r1, r1, r0, r4
 8022866:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802286a:	0a09      	lsrs	r1, r1, #8
 802286c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022870:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8022874:	fb07 f70a 	mul.w	r7, r7, sl
 8022878:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802287c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8022880:	fb03 7101 	mla	r1, r3, r1, r7
 8022884:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022888:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802288c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022890:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8022894:	fb00 e101 	mla	r1, r0, r1, lr
 8022898:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802289c:	9a00      	ldr	r2, [sp, #0]
 802289e:	b287      	uxth	r7, r0
 80228a0:	437a      	muls	r2, r7
 80228a2:	0a09      	lsrs	r1, r1, #8
 80228a4:	1c53      	adds	r3, r2, #1
 80228a6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80228aa:	4321      	orrs	r1, r4
 80228ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80228b0:	1235      	asrs	r5, r6, #8
 80228b2:	0c0a      	lsrs	r2, r1, #16
 80228b4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80228b8:	b2db      	uxtb	r3, r3
 80228ba:	fb12 f207 	smulbb	r2, r2, r7
 80228be:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80228c2:	fb05 2503 	mla	r5, r5, r3, r2
 80228c6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80228ca:	10f2      	asrs	r2, r6, #3
 80228cc:	b2c8      	uxtb	r0, r1
 80228ce:	00f6      	lsls	r6, r6, #3
 80228d0:	fb14 f407 	smulbb	r4, r4, r7
 80228d4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80228d8:	b2f6      	uxtb	r6, r6
 80228da:	fb10 f007 	smulbb	r0, r0, r7
 80228de:	fb02 4203 	mla	r2, r2, r3, r4
 80228e2:	b2ad      	uxth	r5, r5
 80228e4:	fb06 0303 	mla	r3, r6, r3, r0
 80228e8:	b299      	uxth	r1, r3
 80228ea:	b294      	uxth	r4, r2
 80228ec:	1c6b      	adds	r3, r5, #1
 80228ee:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80228f2:	1c62      	adds	r2, r4, #1
 80228f4:	1c4b      	adds	r3, r1, #1
 80228f6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80228fa:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80228fe:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022902:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022906:	0952      	lsrs	r2, r2, #5
 8022908:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802290c:	432b      	orrs	r3, r5
 802290e:	4313      	orrs	r3, r2
 8022910:	9a02      	ldr	r2, [sp, #8]
 8022912:	8013      	strh	r3, [r2, #0]
 8022914:	b005      	add	sp, #20
 8022916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802291a:	2500      	movs	r5, #0
 802291c:	e6ef      	b.n	80226fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802291e:	2100      	movs	r1, #0
 8022920:	460d      	mov	r5, r1
 8022922:	e6f7      	b.n	8022714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022924:	2100      	movs	r1, #0
 8022926:	e6f5      	b.n	8022714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022928:	4631      	mov	r1, r6
 802292a:	e6f3      	b.n	8022714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802292c:	2400      	movs	r4, #0
 802292e:	e702      	b.n	8022736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8022930:	2200      	movs	r2, #0
 8022932:	4614      	mov	r4, r2
 8022934:	e70b      	b.n	802274e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022936:	4602      	mov	r2, r0
 8022938:	4604      	mov	r4, r0
 802293a:	e708      	b.n	802274e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802293c:	2200      	movs	r2, #0
 802293e:	e706      	b.n	802274e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022940:	4632      	mov	r2, r6
 8022942:	e704      	b.n	802274e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08022944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022948:	b09d      	sub	sp, #116	; 0x74
 802294a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802294e:	9219      	str	r2, [sp, #100]	; 0x64
 8022950:	9307      	str	r3, [sp, #28]
 8022952:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8022954:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8022958:	931a      	str	r3, [sp, #104]	; 0x68
 802295a:	9117      	str	r1, [sp, #92]	; 0x5c
 802295c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8022960:	901b      	str	r0, [sp, #108]	; 0x6c
 8022962:	6850      	ldr	r0, [r2, #4]
 8022964:	6812      	ldr	r2, [r2, #0]
 8022966:	fb00 1303 	mla	r3, r0, r3, r1
 802296a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802296e:	930a      	str	r3, [sp, #40]	; 0x28
 8022970:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022972:	681b      	ldr	r3, [r3, #0]
 8022974:	9310      	str	r3, [sp, #64]	; 0x40
 8022976:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802297a:	930b      	str	r3, [sp, #44]	; 0x2c
 802297c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802297e:	2b00      	cmp	r3, #0
 8022980:	dc03      	bgt.n	802298a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8022982:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022984:	2b00      	cmp	r3, #0
 8022986:	f340 8375 	ble.w	8023074 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802298a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802298c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022990:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022994:	1e48      	subs	r0, r1, #1
 8022996:	1e57      	subs	r7, r2, #1
 8022998:	9b07      	ldr	r3, [sp, #28]
 802299a:	2b00      	cmp	r3, #0
 802299c:	f340 818e 	ble.w	8022cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80229a0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80229a4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80229a8:	d406      	bmi.n	80229b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80229aa:	4584      	cmp	ip, r0
 80229ac:	da04      	bge.n	80229b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80229ae:	2b00      	cmp	r3, #0
 80229b0:	db02      	blt.n	80229b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80229b2:	42bb      	cmp	r3, r7
 80229b4:	f2c0 8183 	blt.w	8022cbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80229b8:	f11c 0c01 	adds.w	ip, ip, #1
 80229bc:	f100 8173 	bmi.w	8022ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80229c0:	4561      	cmp	r1, ip
 80229c2:	f2c0 8170 	blt.w	8022ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80229c6:	3301      	adds	r3, #1
 80229c8:	f100 816d 	bmi.w	8022ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80229cc:	429a      	cmp	r2, r3
 80229ce:	f2c0 816a 	blt.w	8022ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80229d2:	9b07      	ldr	r3, [sp, #28]
 80229d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80229d6:	9318      	str	r3, [sp, #96]	; 0x60
 80229d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80229da:	2b00      	cmp	r3, #0
 80229dc:	f340 818c 	ble.w	8022cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80229e0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80229e2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80229e4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80229e8:	689b      	ldr	r3, [r3, #8]
 80229ea:	1422      	asrs	r2, r4, #16
 80229ec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80229f0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80229f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80229f8:	f100 81cd 	bmi.w	8022d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80229fc:	f103 38ff 	add.w	r8, r3, #4294967295
 8022a00:	4542      	cmp	r2, r8
 8022a02:	f280 81c8 	bge.w	8022d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022a06:	f1bc 0f00 	cmp.w	ip, #0
 8022a0a:	f2c0 81c4 	blt.w	8022d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022a0e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022a12:	45c4      	cmp	ip, r8
 8022a14:	f280 81bf 	bge.w	8022d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022a18:	b21b      	sxth	r3, r3
 8022a1a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022a1e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022a20:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022a24:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022a28:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8022a2c:	2800      	cmp	r0, #0
 8022a2e:	f000 81a9 	beq.w	8022d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8022a32:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022a36:	950c      	str	r5, [sp, #48]	; 0x30
 8022a38:	0e2d      	lsrs	r5, r5, #24
 8022a3a:	9513      	str	r5, [sp, #76]	; 0x4c
 8022a3c:	b181      	cbz	r1, 8022a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022a3e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8022a42:	3b01      	subs	r3, #1
 8022a44:	009b      	lsls	r3, r3, #2
 8022a46:	3304      	adds	r3, #4
 8022a48:	eb08 0c03 	add.w	ip, r8, r3
 8022a4c:	f858 3003 	ldr.w	r3, [r8, r3]
 8022a50:	9308      	str	r3, [sp, #32]
 8022a52:	0e1b      	lsrs	r3, r3, #24
 8022a54:	9311      	str	r3, [sp, #68]	; 0x44
 8022a56:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022a5a:	930d      	str	r3, [sp, #52]	; 0x34
 8022a5c:	0e1b      	lsrs	r3, r3, #24
 8022a5e:	9314      	str	r3, [sp, #80]	; 0x50
 8022a60:	b280      	uxth	r0, r0
 8022a62:	b289      	uxth	r1, r1
 8022a64:	fb00 f901 	mul.w	r9, r0, r1
 8022a68:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022a6c:	0100      	lsls	r0, r0, #4
 8022a6e:	eba0 0809 	sub.w	r8, r0, r9
 8022a72:	b289      	uxth	r1, r1
 8022a74:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022a78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8022a7a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022a7c:	fa1f f888 	uxth.w	r8, r8
 8022a80:	1a5b      	subs	r3, r3, r1
 8022a82:	b29b      	uxth	r3, r3
 8022a84:	fb08 f000 	mul.w	r0, r8, r0
 8022a88:	fb03 000e 	mla	r0, r3, lr, r0
 8022a8c:	fb01 0005 	mla	r0, r1, r5, r0
 8022a90:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022a92:	fb09 0005 	mla	r0, r9, r5, r0
 8022a96:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022a9a:	2800      	cmp	r0, #0
 8022a9c:	f000 80fa 	beq.w	8022c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022aa0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022aa4:	d01b      	beq.n	8022ade <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8022aa6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8022aaa:	fb0e fa0a 	mul.w	sl, lr, sl
 8022aae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022ab2:	fb0e fe02 	mul.w	lr, lr, r2
 8022ab6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8022aba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022abe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022ac2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022ac6:	4452      	add	r2, sl
 8022ac8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022acc:	0a12      	lsrs	r2, r2, #8
 8022ace:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ad2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022ad6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022ada:	ea42 020c 	orr.w	r2, r2, ip
 8022ade:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022ae0:	2dff      	cmp	r5, #255	; 0xff
 8022ae2:	d021      	beq.n	8022b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022ae4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022ae6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022aea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022aec:	fb05 fb0b 	mul.w	fp, r5, fp
 8022af0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022af2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022af6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022af8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022afc:	fb05 fa0a 	mul.w	sl, r5, sl
 8022b00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022b04:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022b08:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022b0c:	44de      	add	lr, fp
 8022b0e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022b12:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022b16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022b1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022b1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022b22:	ea4e 050a 	orr.w	r5, lr, sl
 8022b26:	950c      	str	r5, [sp, #48]	; 0x30
 8022b28:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022b2a:	2dff      	cmp	r5, #255	; 0xff
 8022b2c:	d021      	beq.n	8022b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8022b2e:	9d08      	ldr	r5, [sp, #32]
 8022b30:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022b34:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022b36:	fb05 fb0b 	mul.w	fp, r5, fp
 8022b3a:	9d08      	ldr	r5, [sp, #32]
 8022b3c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022b40:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022b42:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022b46:	fb05 fa0a 	mul.w	sl, r5, sl
 8022b4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022b4e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022b52:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022b56:	44de      	add	lr, fp
 8022b58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022b5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022b60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022b64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022b68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022b6c:	ea4e 050a 	orr.w	r5, lr, sl
 8022b70:	9508      	str	r5, [sp, #32]
 8022b72:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022b74:	2dff      	cmp	r5, #255	; 0xff
 8022b76:	d021      	beq.n	8022bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8022b78:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022b7a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022b7e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022b80:	fb05 fb0b 	mul.w	fp, r5, fp
 8022b84:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022b86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022b8a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022b8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022b90:	fb05 fa0a 	mul.w	sl, r5, sl
 8022b94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022b98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022b9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022ba0:	44de      	add	lr, fp
 8022ba2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022ba6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022baa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022bae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022bb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022bb6:	ea4e 050a 	orr.w	r5, lr, sl
 8022bba:	950d      	str	r5, [sp, #52]	; 0x34
 8022bbc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022bbe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022bc2:	9d08      	ldr	r5, [sp, #32]
 8022bc4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8022bc8:	fb08 fc0c 	mul.w	ip, r8, ip
 8022bcc:	fb03 cc0e 	mla	ip, r3, lr, ip
 8022bd0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022bd4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022bd6:	fb01 cc0e 	mla	ip, r1, lr, ip
 8022bda:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022bde:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022be0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022be4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022be8:	fb08 f80e 	mul.w	r8, r8, lr
 8022bec:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022bf0:	fb03 8202 	mla	r2, r3, r2, r8
 8022bf4:	9b08      	ldr	r3, [sp, #32]
 8022bf6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022bf8:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8022bfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022bfe:	fb01 220a 	mla	r2, r1, sl, r2
 8022c02:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8022c06:	fb09 2901 	mla	r9, r9, r1, r2
 8022c0a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022c0c:	883b      	ldrh	r3, [r7, #0]
 8022c0e:	4342      	muls	r2, r0
 8022c10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022c14:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022c18:	1c50      	adds	r0, r2, #1
 8022c1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022c1e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022c22:	ea4c 0c09 	orr.w	ip, ip, r9
 8022c26:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8022c2a:	1219      	asrs	r1, r3, #8
 8022c2c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8022c30:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8022c34:	b2c0      	uxtb	r0, r0
 8022c36:	fb12 f205 	smulbb	r2, r2, r5
 8022c3a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022c3e:	fb01 2100 	mla	r1, r1, r0, r2
 8022c42:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8022c46:	10da      	asrs	r2, r3, #3
 8022c48:	fa5f fc8c 	uxtb.w	ip, ip
 8022c4c:	00db      	lsls	r3, r3, #3
 8022c4e:	fb1c fc05 	smulbb	ip, ip, r5
 8022c52:	b2db      	uxtb	r3, r3
 8022c54:	b289      	uxth	r1, r1
 8022c56:	fb03 c300 	mla	r3, r3, r0, ip
 8022c5a:	fa1f fc83 	uxth.w	ip, r3
 8022c5e:	1c4b      	adds	r3, r1, #1
 8022c60:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022c64:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022c68:	fb1e fe05 	smulbb	lr, lr, r5
 8022c6c:	f10c 0301 	add.w	r3, ip, #1
 8022c70:	fb02 e200 	mla	r2, r2, r0, lr
 8022c74:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8022c78:	b292      	uxth	r2, r2
 8022c7a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022c7e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022c82:	430b      	orrs	r3, r1
 8022c84:	1c51      	adds	r1, r2, #1
 8022c86:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022c8a:	0952      	lsrs	r2, r2, #5
 8022c8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022c90:	4313      	orrs	r3, r2
 8022c92:	803b      	strh	r3, [r7, #0]
 8022c94:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022c96:	441c      	add	r4, r3
 8022c98:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022c9a:	441e      	add	r6, r3
 8022c9c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022c9e:	3b01      	subs	r3, #1
 8022ca0:	3702      	adds	r7, #2
 8022ca2:	9318      	str	r3, [sp, #96]	; 0x60
 8022ca4:	e698      	b.n	80229d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022ca6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022ca8:	441c      	add	r4, r3
 8022caa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022cac:	441e      	add	r6, r3
 8022cae:	9b07      	ldr	r3, [sp, #28]
 8022cb0:	3b01      	subs	r3, #1
 8022cb2:	9307      	str	r3, [sp, #28]
 8022cb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022cb6:	3302      	adds	r3, #2
 8022cb8:	930a      	str	r3, [sp, #40]	; 0x28
 8022cba:	e66d      	b.n	8022998 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8022cbc:	d023      	beq.n	8022d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022cbe:	9b07      	ldr	r3, [sp, #28]
 8022cc0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8022cc2:	3b01      	subs	r3, #1
 8022cc4:	fb00 4003 	mla	r0, r0, r3, r4
 8022cc8:	1400      	asrs	r0, r0, #16
 8022cca:	f53f ae82 	bmi.w	80229d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022cce:	3901      	subs	r1, #1
 8022cd0:	4288      	cmp	r0, r1
 8022cd2:	f6bf ae7e 	bge.w	80229d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022cd6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8022cd8:	fb01 6303 	mla	r3, r1, r3, r6
 8022cdc:	141b      	asrs	r3, r3, #16
 8022cde:	f53f ae78 	bmi.w	80229d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022ce2:	3a01      	subs	r2, #1
 8022ce4:	4293      	cmp	r3, r2
 8022ce6:	f6bf ae74 	bge.w	80229d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022cea:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022cee:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022cf2:	f1bb 0f00 	cmp.w	fp, #0
 8022cf6:	dc6c      	bgt.n	8022dd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022cf8:	9b07      	ldr	r3, [sp, #28]
 8022cfa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022cfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022d00:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022d04:	930a      	str	r3, [sp, #40]	; 0x28
 8022d06:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022d08:	2b00      	cmp	r3, #0
 8022d0a:	f340 81b3 	ble.w	8023074 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022d0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022d12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022d16:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022d1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022d1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022d20:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022d24:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022d28:	eef0 6a62 	vmov.f32	s13, s5
 8022d2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022d30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022d34:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022d38:	ee16 4a90 	vmov	r4, s13
 8022d3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022d40:	eef0 6a43 	vmov.f32	s13, s6
 8022d44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022d48:	ee12 2a90 	vmov	r2, s5
 8022d4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022d50:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d54:	ee13 2a10 	vmov	r2, s6
 8022d58:	9329      	str	r3, [sp, #164]	; 0xa4
 8022d5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022d5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d60:	932a      	str	r3, [sp, #168]	; 0xa8
 8022d62:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022d64:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8022d66:	3b01      	subs	r3, #1
 8022d68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022d6c:	9317      	str	r3, [sp, #92]	; 0x5c
 8022d6e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022d70:	bf08      	it	eq
 8022d72:	4613      	moveq	r3, r2
 8022d74:	ee16 6a90 	vmov	r6, s13
 8022d78:	9307      	str	r3, [sp, #28]
 8022d7a:	eeb0 3a67 	vmov.f32	s6, s15
 8022d7e:	eef0 2a47 	vmov.f32	s5, s14
 8022d82:	e5fb      	b.n	802297c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022d84:	2900      	cmp	r1, #0
 8022d86:	f43f ae6b 	beq.w	8022a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022d8a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8022d8e:	9308      	str	r3, [sp, #32]
 8022d90:	0e1b      	lsrs	r3, r3, #24
 8022d92:	9311      	str	r3, [sp, #68]	; 0x44
 8022d94:	e664      	b.n	8022a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022d96:	f112 0801 	adds.w	r8, r2, #1
 8022d9a:	f53f af7b 	bmi.w	8022c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022d9e:	4543      	cmp	r3, r8
 8022da0:	f6ff af78 	blt.w	8022c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022da4:	f11c 0801 	adds.w	r8, ip, #1
 8022da8:	f53f af74 	bmi.w	8022c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022dac:	45c6      	cmp	lr, r8
 8022dae:	f6ff af71 	blt.w	8022c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022db2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8022db4:	9201      	str	r2, [sp, #4]
 8022db6:	fa0f f28e 	sxth.w	r2, lr
 8022dba:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8022dbe:	e9cd c002 	strd	ip, r0, [sp, #8]
 8022dc2:	9200      	str	r2, [sp, #0]
 8022dc4:	b21b      	sxth	r3, r3
 8022dc6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022dc8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022dca:	4639      	mov	r1, r7
 8022dcc:	f7ff fc79 	bl	80226c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8022dd0:	e760      	b.n	8022c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022dd2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022dd4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022dd6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022dda:	1427      	asrs	r7, r4, #16
 8022ddc:	1433      	asrs	r3, r6, #16
 8022dde:	fb01 7303 	mla	r3, r1, r3, r7
 8022de2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8022de6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8022dea:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022dee:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022df2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022df6:	2a00      	cmp	r2, #0
 8022df8:	f000 8133 	beq.w	8023062 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8022dfc:	687d      	ldr	r5, [r7, #4]
 8022dfe:	950e      	str	r5, [sp, #56]	; 0x38
 8022e00:	0e2d      	lsrs	r5, r5, #24
 8022e02:	9515      	str	r5, [sp, #84]	; 0x54
 8022e04:	b178      	cbz	r0, 8022e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8022e06:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8022e0a:	3901      	subs	r1, #1
 8022e0c:	0089      	lsls	r1, r1, #2
 8022e0e:	3104      	adds	r1, #4
 8022e10:	eb07 0e01 	add.w	lr, r7, r1
 8022e14:	5879      	ldr	r1, [r7, r1]
 8022e16:	9109      	str	r1, [sp, #36]	; 0x24
 8022e18:	0e09      	lsrs	r1, r1, #24
 8022e1a:	9112      	str	r1, [sp, #72]	; 0x48
 8022e1c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8022e20:	910f      	str	r1, [sp, #60]	; 0x3c
 8022e22:	0e09      	lsrs	r1, r1, #24
 8022e24:	9116      	str	r1, [sp, #88]	; 0x58
 8022e26:	b292      	uxth	r2, r2
 8022e28:	b280      	uxth	r0, r0
 8022e2a:	fb02 f800 	mul.w	r8, r2, r0
 8022e2e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022e32:	0112      	lsls	r2, r2, #4
 8022e34:	eba2 0e08 	sub.w	lr, r2, r8
 8022e38:	b280      	uxth	r0, r0
 8022e3a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022e3e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8022e40:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022e42:	fa1f fe8e 	uxth.w	lr, lr
 8022e46:	1a12      	subs	r2, r2, r0
 8022e48:	b292      	uxth	r2, r2
 8022e4a:	fb0e f101 	mul.w	r1, lr, r1
 8022e4e:	fb02 110c 	mla	r1, r2, ip, r1
 8022e52:	fb00 1105 	mla	r1, r0, r5, r1
 8022e56:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022e58:	fb08 1105 	mla	r1, r8, r5, r1
 8022e5c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022e60:	2900      	cmp	r1, #0
 8022e62:	f000 80f5 	beq.w	8023050 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8022e66:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022e6a:	d019      	beq.n	8022ea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8022e6c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022e70:	fb0c fa0a 	mul.w	sl, ip, sl
 8022e74:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022e78:	fb0c fc03 	mul.w	ip, ip, r3
 8022e7c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022e80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022e84:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022e88:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022e8c:	4453      	add	r3, sl
 8022e8e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022e92:	0a1b      	lsrs	r3, r3, #8
 8022e94:	0a3f      	lsrs	r7, r7, #8
 8022e96:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022e9a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022e9e:	433b      	orrs	r3, r7
 8022ea0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022ea2:	2dff      	cmp	r5, #255	; 0xff
 8022ea4:	d020      	beq.n	8022ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8022ea6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022ea8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022eac:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022eae:	436f      	muls	r7, r5
 8022eb0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022eb2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022eb6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022eb8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022ebc:	fb05 fa0a 	mul.w	sl, r5, sl
 8022ec0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022ec4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ec8:	44bc      	add	ip, r7
 8022eca:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022ece:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022ed2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ed6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022eda:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ede:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022ee2:	ea4c 050a 	orr.w	r5, ip, sl
 8022ee6:	950e      	str	r5, [sp, #56]	; 0x38
 8022ee8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022eea:	2dff      	cmp	r5, #255	; 0xff
 8022eec:	d020      	beq.n	8022f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8022eee:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022ef0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022ef4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022ef6:	436f      	muls	r7, r5
 8022ef8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022efa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022efe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022f00:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022f04:	fb05 fa0a 	mul.w	sl, r5, sl
 8022f08:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022f0c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022f10:	44bc      	add	ip, r7
 8022f12:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022f16:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022f1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022f1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022f22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022f26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022f2a:	ea4c 050a 	orr.w	r5, ip, sl
 8022f2e:	9509      	str	r5, [sp, #36]	; 0x24
 8022f30:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022f32:	2dff      	cmp	r5, #255	; 0xff
 8022f34:	d020      	beq.n	8022f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8022f36:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022f38:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022f3c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022f3e:	436f      	muls	r7, r5
 8022f40:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022f42:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022f46:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022f48:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022f4c:	fb05 fa0a 	mul.w	sl, r5, sl
 8022f50:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022f54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022f58:	44bc      	add	ip, r7
 8022f5a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022f5e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022f62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022f66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022f6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022f6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022f72:	ea4c 050a 	orr.w	r5, ip, sl
 8022f76:	950f      	str	r5, [sp, #60]	; 0x3c
 8022f78:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022f7a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022f7e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022f80:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022f84:	fb0e f707 	mul.w	r7, lr, r7
 8022f88:	fb02 770c 	mla	r7, r2, ip, r7
 8022f8c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022f90:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022f92:	fb00 770c 	mla	r7, r0, ip, r7
 8022f96:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022f9a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022f9c:	fb08 770c 	mla	r7, r8, ip, r7
 8022fa0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8022fa4:	fb0e fe0c 	mul.w	lr, lr, ip
 8022fa8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022fac:	fb02 e303 	mla	r3, r2, r3, lr
 8022fb0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022fb2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022fb4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022fb8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022fba:	fb00 330a 	mla	r3, r0, sl, r3
 8022fbe:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022fc2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022fc6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022fc8:	f8b9 0000 	ldrh.w	r0, [r9]
 8022fcc:	4359      	muls	r1, r3
 8022fce:	0a3f      	lsrs	r7, r7, #8
 8022fd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022fd4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022fd8:	1c4b      	adds	r3, r1, #1
 8022fda:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022fde:	ea47 070c 	orr.w	r7, r7, ip
 8022fe2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022fe6:	1202      	asrs	r2, r0, #8
 8022fe8:	0c3b      	lsrs	r3, r7, #16
 8022fea:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8022fee:	b2c9      	uxtb	r1, r1
 8022ff0:	fb13 f305 	smulbb	r3, r3, r5
 8022ff4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022ff8:	fb02 3201 	mla	r2, r2, r1, r3
 8022ffc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023000:	10c3      	asrs	r3, r0, #3
 8023002:	b2ff      	uxtb	r7, r7
 8023004:	00c0      	lsls	r0, r0, #3
 8023006:	b2c0      	uxtb	r0, r0
 8023008:	fb17 f705 	smulbb	r7, r7, r5
 802300c:	fb00 7001 	mla	r0, r0, r1, r7
 8023010:	b292      	uxth	r2, r2
 8023012:	fb1c fc05 	smulbb	ip, ip, r5
 8023016:	b280      	uxth	r0, r0
 8023018:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802301c:	fb03 c301 	mla	r3, r3, r1, ip
 8023020:	1c51      	adds	r1, r2, #1
 8023022:	f100 0c01 	add.w	ip, r0, #1
 8023026:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802302a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802302e:	b29b      	uxth	r3, r3
 8023030:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023034:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023038:	ea4c 0202 	orr.w	r2, ip, r2
 802303c:	f103 0c01 	add.w	ip, r3, #1
 8023040:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023044:	095b      	lsrs	r3, r3, #5
 8023046:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802304a:	431a      	orrs	r2, r3
 802304c:	f8a9 2000 	strh.w	r2, [r9]
 8023050:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023052:	441c      	add	r4, r3
 8023054:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023056:	f109 0902 	add.w	r9, r9, #2
 802305a:	441e      	add	r6, r3
 802305c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023060:	e647      	b.n	8022cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023062:	2800      	cmp	r0, #0
 8023064:	f43f aedf 	beq.w	8022e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023068:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802306c:	9109      	str	r1, [sp, #36]	; 0x24
 802306e:	0e09      	lsrs	r1, r1, #24
 8023070:	9112      	str	r1, [sp, #72]	; 0x48
 8023072:	e6d8      	b.n	8022e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023074:	b01d      	add	sp, #116	; 0x74
 8023076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802307a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802307a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802307e:	b085      	sub	sp, #20
 8023080:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023084:	9102      	str	r1, [sp, #8]
 8023086:	2c00      	cmp	r4, #0
 8023088:	fb04 7103 	mla	r1, r4, r3, r7
 802308c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023090:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023094:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023098:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802309c:	f2c0 810c 	blt.w	80232b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80230a0:	45a6      	cmp	lr, r4
 80230a2:	f340 8109 	ble.w	80232b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80230a6:	2f00      	cmp	r7, #0
 80230a8:	f2c0 8104 	blt.w	80232b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80230ac:	42bb      	cmp	r3, r7
 80230ae:	f340 8101 	ble.w	80232b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80230b2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80230b6:	1c7a      	adds	r2, r7, #1
 80230b8:	f100 8101 	bmi.w	80232be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80230bc:	4293      	cmp	r3, r2
 80230be:	f340 80fe 	ble.w	80232be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80230c2:	2e00      	cmp	r6, #0
 80230c4:	f000 80fd 	beq.w	80232c2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80230c8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80230cc:	3401      	adds	r4, #1
 80230ce:	f100 80fc 	bmi.w	80232ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80230d2:	45a6      	cmp	lr, r4
 80230d4:	f340 80f9 	ble.w	80232ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80230d8:	2800      	cmp	r0, #0
 80230da:	f000 80f9 	beq.w	80232d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80230de:	2f00      	cmp	r7, #0
 80230e0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80230e4:	f2c0 80ef 	blt.w	80232c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80230e8:	42bb      	cmp	r3, r7
 80230ea:	f340 80ec 	ble.w	80232c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80230ee:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80230f2:	3701      	adds	r7, #1
 80230f4:	f100 80ef 	bmi.w	80232d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80230f8:	42bb      	cmp	r3, r7
 80230fa:	f340 80ec 	ble.w	80232d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80230fe:	2e00      	cmp	r6, #0
 8023100:	f000 80eb 	beq.w	80232da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023104:	6852      	ldr	r2, [r2, #4]
 8023106:	b2b6      	uxth	r6, r6
 8023108:	b280      	uxth	r0, r0
 802310a:	fb00 fe06 	mul.w	lr, r0, r6
 802310e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023112:	0136      	lsls	r6, r6, #4
 8023114:	eba6 070e 	sub.w	r7, r6, lr
 8023118:	b280      	uxth	r0, r0
 802311a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802311e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023122:	b2bf      	uxth	r7, r7
 8023124:	1a1b      	subs	r3, r3, r0
 8023126:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802312a:	b29b      	uxth	r3, r3
 802312c:	fb07 f60a 	mul.w	r6, r7, sl
 8023130:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023134:	fb0b 6603 	mla	r6, fp, r3, r6
 8023138:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802313c:	fb00 6609 	mla	r6, r0, r9, r6
 8023140:	fb0e 6608 	mla	r6, lr, r8, r6
 8023144:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023148:	9600      	str	r6, [sp, #0]
 802314a:	2e00      	cmp	r6, #0
 802314c:	f000 80af 	beq.w	80232ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023150:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023154:	fb0b fc0c 	mul.w	ip, fp, ip
 8023158:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802315c:	fb0b f505 	mul.w	r5, fp, r5
 8023160:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023164:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023168:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802316c:	44dc      	add	ip, fp
 802316e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023172:	9501      	str	r5, [sp, #4]
 8023174:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023178:	9503      	str	r5, [sp, #12]
 802317a:	9d01      	ldr	r5, [sp, #4]
 802317c:	9e02      	ldr	r6, [sp, #8]
 802317e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023182:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023186:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802318a:	fb0a fc0c 	mul.w	ip, sl, ip
 802318e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023192:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023196:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802319a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802319e:	4465      	add	r5, ip
 80231a0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80231a4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80231a8:	fb09 fc0c 	mul.w	ip, r9, ip
 80231ac:	fb09 f904 	mul.w	r9, r9, r4
 80231b0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80231b4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80231b8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80231bc:	fb08 f404 	mul.w	r4, r8, r4
 80231c0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80231c4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80231c8:	fb08 f802 	mul.w	r8, r8, r2
 80231cc:	fb0a fa01 	mul.w	sl, sl, r1
 80231d0:	0a22      	lsrs	r2, r4, #8
 80231d2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80231d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80231da:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80231de:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80231e2:	4414      	add	r4, r2
 80231e4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80231e8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80231ec:	0a2d      	lsrs	r5, r5, #8
 80231ee:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80231f2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80231f6:	9a03      	ldr	r2, [sp, #12]
 80231f8:	8836      	ldrh	r6, [r6, #0]
 80231fa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80231fe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023202:	437d      	muls	r5, r7
 8023204:	4461      	add	r1, ip
 8023206:	0a24      	lsrs	r4, r4, #8
 8023208:	fb02 5503 	mla	r5, r2, r3, r5
 802320c:	0a09      	lsrs	r1, r1, #8
 802320e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023212:	fb04 540e 	mla	r4, r4, lr, r5
 8023216:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802321a:	fb01 4100 	mla	r1, r1, r0, r4
 802321e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023222:	0a09      	lsrs	r1, r1, #8
 8023224:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023228:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802322c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023230:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023234:	fb07 f70a 	mul.w	r7, r7, sl
 8023238:	fb03 7101 	mla	r1, r3, r1, r7
 802323c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023240:	9b00      	ldr	r3, [sp, #0]
 8023242:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023246:	fb0e 1e08 	mla	lr, lr, r8, r1
 802324a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802324e:	fb00 e101 	mla	r1, r0, r1, lr
 8023252:	43da      	mvns	r2, r3
 8023254:	1233      	asrs	r3, r6, #8
 8023256:	b2d2      	uxtb	r2, r2
 8023258:	10f0      	asrs	r0, r6, #3
 802325a:	0a09      	lsrs	r1, r1, #8
 802325c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023260:	00f6      	lsls	r6, r6, #3
 8023262:	4353      	muls	r3, r2
 8023264:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023268:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802326c:	b2f6      	uxtb	r6, r6
 802326e:	4321      	orrs	r1, r4
 8023270:	4350      	muls	r0, r2
 8023272:	4356      	muls	r6, r2
 8023274:	1c5a      	adds	r2, r3, #1
 8023276:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802327a:	0c0b      	lsrs	r3, r1, #16
 802327c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023280:	1c42      	adds	r2, r0, #1
 8023282:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023286:	0a0a      	lsrs	r2, r1, #8
 8023288:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802328c:	021b      	lsls	r3, r3, #8
 802328e:	00d2      	lsls	r2, r2, #3
 8023290:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023294:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023298:	4313      	orrs	r3, r2
 802329a:	1c72      	adds	r2, r6, #1
 802329c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80232a0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80232a4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80232a8:	4319      	orrs	r1, r3
 80232aa:	9b02      	ldr	r3, [sp, #8]
 80232ac:	8019      	strh	r1, [r3, #0]
 80232ae:	b005      	add	sp, #20
 80232b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232b4:	2500      	movs	r5, #0
 80232b6:	e6fe      	b.n	80230b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80232b8:	2100      	movs	r1, #0
 80232ba:	460d      	mov	r5, r1
 80232bc:	e706      	b.n	80230cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80232be:	2100      	movs	r1, #0
 80232c0:	e704      	b.n	80230cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80232c2:	4631      	mov	r1, r6
 80232c4:	e702      	b.n	80230cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80232c6:	2400      	movs	r4, #0
 80232c8:	e713      	b.n	80230f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80232ca:	2200      	movs	r2, #0
 80232cc:	4614      	mov	r4, r2
 80232ce:	e71a      	b.n	8023106 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80232d0:	4602      	mov	r2, r0
 80232d2:	4604      	mov	r4, r0
 80232d4:	e717      	b.n	8023106 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80232d6:	2200      	movs	r2, #0
 80232d8:	e715      	b.n	8023106 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80232da:	4632      	mov	r2, r6
 80232dc:	e713      	b.n	8023106 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080232e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80232e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232e4:	b09b      	sub	sp, #108	; 0x6c
 80232e6:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80232ea:	9218      	str	r2, [sp, #96]	; 0x60
 80232ec:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80232ee:	9116      	str	r1, [sp, #88]	; 0x58
 80232f0:	9307      	str	r3, [sp, #28]
 80232f2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80232f6:	9019      	str	r0, [sp, #100]	; 0x64
 80232f8:	6850      	ldr	r0, [r2, #4]
 80232fa:	6812      	ldr	r2, [r2, #0]
 80232fc:	fb00 1303 	mla	r3, r0, r3, r1
 8023300:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023304:	930a      	str	r3, [sp, #40]	; 0x28
 8023306:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023308:	681b      	ldr	r3, [r3, #0]
 802330a:	930f      	str	r3, [sp, #60]	; 0x3c
 802330c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802330e:	2b00      	cmp	r3, #0
 8023310:	dc03      	bgt.n	802331a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023312:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023314:	2b00      	cmp	r3, #0
 8023316:	f340 8386 	ble.w	8023a26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802331a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802331c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023320:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023324:	1e48      	subs	r0, r1, #1
 8023326:	1e57      	subs	r7, r2, #1
 8023328:	9b07      	ldr	r3, [sp, #28]
 802332a:	2b00      	cmp	r3, #0
 802332c:	f340 8166 	ble.w	80235fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023330:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023334:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023338:	d406      	bmi.n	8023348 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802333a:	4584      	cmp	ip, r0
 802333c:	da04      	bge.n	8023348 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802333e:	2b00      	cmp	r3, #0
 8023340:	db02      	blt.n	8023348 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023342:	42bb      	cmp	r3, r7
 8023344:	f2c0 815b 	blt.w	80235fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023348:	f11c 0c01 	adds.w	ip, ip, #1
 802334c:	f100 814b 	bmi.w	80235e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023350:	4561      	cmp	r1, ip
 8023352:	f2c0 8148 	blt.w	80235e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023356:	3301      	adds	r3, #1
 8023358:	f100 8145 	bmi.w	80235e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802335c:	429a      	cmp	r2, r3
 802335e:	f2c0 8142 	blt.w	80235e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023362:	9b07      	ldr	r3, [sp, #28]
 8023364:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023366:	9317      	str	r3, [sp, #92]	; 0x5c
 8023368:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802336a:	2b00      	cmp	r3, #0
 802336c:	f340 8165 	ble.w	802363a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023370:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8023372:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023374:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023378:	689b      	ldr	r3, [r3, #8]
 802337a:	1422      	asrs	r2, r4, #16
 802337c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023380:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023384:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023388:	f100 81d5 	bmi.w	8023736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802338c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023390:	4542      	cmp	r2, r8
 8023392:	f280 81d0 	bge.w	8023736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023396:	f1bc 0f00 	cmp.w	ip, #0
 802339a:	f2c0 81cc 	blt.w	8023736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802339e:	f10e 38ff 	add.w	r8, lr, #4294967295
 80233a2:	45c4      	cmp	ip, r8
 80233a4:	f280 81c7 	bge.w	8023736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80233a8:	b21b      	sxth	r3, r3
 80233aa:	fb0c 2203 	mla	r2, ip, r3, r2
 80233ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80233b0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80233b4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80233b8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80233bc:	2900      	cmp	r1, #0
 80233be:	f000 8182 	beq.w	80236c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80233c2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80233c6:	950b      	str	r5, [sp, #44]	; 0x2c
 80233c8:	0e2d      	lsrs	r5, r5, #24
 80233ca:	9512      	str	r5, [sp, #72]	; 0x48
 80233cc:	b180      	cbz	r0, 80233f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80233ce:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80233d2:	3b01      	subs	r3, #1
 80233d4:	009b      	lsls	r3, r3, #2
 80233d6:	3304      	adds	r3, #4
 80233d8:	eb08 0c03 	add.w	ip, r8, r3
 80233dc:	f858 3003 	ldr.w	r3, [r8, r3]
 80233e0:	9308      	str	r3, [sp, #32]
 80233e2:	0e1b      	lsrs	r3, r3, #24
 80233e4:	9310      	str	r3, [sp, #64]	; 0x40
 80233e6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80233ea:	930c      	str	r3, [sp, #48]	; 0x30
 80233ec:	0e1b      	lsrs	r3, r3, #24
 80233ee:	9313      	str	r3, [sp, #76]	; 0x4c
 80233f0:	b289      	uxth	r1, r1
 80233f2:	b280      	uxth	r0, r0
 80233f4:	fb01 f900 	mul.w	r9, r1, r0
 80233f8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80233fc:	0109      	lsls	r1, r1, #4
 80233fe:	eba1 0809 	sub.w	r8, r1, r9
 8023402:	b280      	uxth	r0, r0
 8023404:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023408:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802340a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802340c:	fa1f f888 	uxth.w	r8, r8
 8023410:	1a09      	subs	r1, r1, r0
 8023412:	b289      	uxth	r1, r1
 8023414:	fb08 f303 	mul.w	r3, r8, r3
 8023418:	fb01 330e 	mla	r3, r1, lr, r3
 802341c:	fb00 3305 	mla	r3, r0, r5, r3
 8023420:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023422:	fb09 3305 	mla	r3, r9, r5, r3
 8023426:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802342a:	2b00      	cmp	r3, #0
 802342c:	f000 80d2 	beq.w	80235d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023430:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023434:	d01b      	beq.n	802346e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023436:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802343a:	fb0e fa0a 	mul.w	sl, lr, sl
 802343e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023442:	fb0e fe02 	mul.w	lr, lr, r2
 8023446:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802344a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802344e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023452:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023456:	4452      	add	r2, sl
 8023458:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802345c:	0a12      	lsrs	r2, r2, #8
 802345e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023462:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023466:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802346a:	ea42 020c 	orr.w	r2, r2, ip
 802346e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023470:	2dff      	cmp	r5, #255	; 0xff
 8023472:	d021      	beq.n	80234b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023474:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023476:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802347a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802347c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023480:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023482:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023486:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023488:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802348c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023490:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023494:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023498:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802349c:	44de      	add	lr, fp
 802349e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80234a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80234a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80234ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80234b2:	ea4e 050a 	orr.w	r5, lr, sl
 80234b6:	950b      	str	r5, [sp, #44]	; 0x2c
 80234b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80234ba:	2dff      	cmp	r5, #255	; 0xff
 80234bc:	d021      	beq.n	8023502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80234be:	9d08      	ldr	r5, [sp, #32]
 80234c0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80234c4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80234c6:	fb05 fb0b 	mul.w	fp, r5, fp
 80234ca:	9d08      	ldr	r5, [sp, #32]
 80234cc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80234d0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80234d2:	fb05 fa0e 	mul.w	sl, r5, lr
 80234d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80234da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80234de:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80234e2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80234e6:	44de      	add	lr, fp
 80234e8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80234ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80234f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80234f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80234fc:	ea4e 050a 	orr.w	r5, lr, sl
 8023500:	9508      	str	r5, [sp, #32]
 8023502:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023504:	2dff      	cmp	r5, #255	; 0xff
 8023506:	d021      	beq.n	802354c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023508:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802350a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802350e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023510:	fb05 fb0b 	mul.w	fp, r5, fp
 8023514:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023516:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802351a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802351c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023520:	fb05 fa0a 	mul.w	sl, r5, sl
 8023524:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023528:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802352c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023530:	44de      	add	lr, fp
 8023532:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023536:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802353a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802353e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023542:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023546:	ea4e 050a 	orr.w	r5, lr, sl
 802354a:	950c      	str	r5, [sp, #48]	; 0x30
 802354c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802354e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023552:	9d08      	ldr	r5, [sp, #32]
 8023554:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023558:	fb08 fc0c 	mul.w	ip, r8, ip
 802355c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023560:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023564:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023566:	fb00 cc0e 	mla	ip, r0, lr, ip
 802356a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802356e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023570:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023574:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023578:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802357c:	fb08 f80e 	mul.w	r8, r8, lr
 8023580:	fb01 8202 	mla	r2, r1, r2, r8
 8023584:	9908      	ldr	r1, [sp, #32]
 8023586:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802358a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802358c:	fb00 220a 	mla	r2, r0, sl, r2
 8023590:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8023594:	fb09 2900 	mla	r9, r9, r0, r2
 8023598:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802359c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80235a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80235a4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80235a8:	ea4c 0c09 	orr.w	ip, ip, r9
 80235ac:	2bff      	cmp	r3, #255	; 0xff
 80235ae:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80235b2:	f040 8091 	bne.w	80236d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80235b6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80235ba:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80235be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80235c2:	f022 0207 	bic.w	r2, r2, #7
 80235c6:	431a      	orrs	r2, r3
 80235c8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80235cc:	ea4c 0c02 	orr.w	ip, ip, r2
 80235d0:	f8a7 c000 	strh.w	ip, [r7]
 80235d4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80235d6:	441c      	add	r4, r3
 80235d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80235da:	441e      	add	r6, r3
 80235dc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80235de:	3b01      	subs	r3, #1
 80235e0:	3702      	adds	r7, #2
 80235e2:	9317      	str	r3, [sp, #92]	; 0x5c
 80235e4:	e6c0      	b.n	8023368 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80235e6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80235e8:	441c      	add	r4, r3
 80235ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80235ec:	441e      	add	r6, r3
 80235ee:	9b07      	ldr	r3, [sp, #28]
 80235f0:	3b01      	subs	r3, #1
 80235f2:	9307      	str	r3, [sp, #28]
 80235f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80235f6:	3302      	adds	r3, #2
 80235f8:	930a      	str	r3, [sp, #40]	; 0x28
 80235fa:	e695      	b.n	8023328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80235fc:	d024      	beq.n	8023648 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80235fe:	9b07      	ldr	r3, [sp, #28]
 8023600:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023602:	3b01      	subs	r3, #1
 8023604:	fb00 4003 	mla	r0, r0, r3, r4
 8023608:	1400      	asrs	r0, r0, #16
 802360a:	f53f aeaa 	bmi.w	8023362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802360e:	3901      	subs	r1, #1
 8023610:	4288      	cmp	r0, r1
 8023612:	f6bf aea6 	bge.w	8023362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023616:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023618:	fb01 6303 	mla	r3, r1, r3, r6
 802361c:	141b      	asrs	r3, r3, #16
 802361e:	f53f aea0 	bmi.w	8023362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023622:	3a01      	subs	r2, #1
 8023624:	4293      	cmp	r3, r2
 8023626:	f6bf ae9c 	bge.w	8023362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802362a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802362e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8023632:	f1bb 0f00 	cmp.w	fp, #0
 8023636:	f300 809a 	bgt.w	802376e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802363a:	9b07      	ldr	r3, [sp, #28]
 802363c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023640:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023642:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023646:	930a      	str	r3, [sp, #40]	; 0x28
 8023648:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802364a:	2b00      	cmp	r3, #0
 802364c:	f340 81eb 	ble.w	8023a26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023650:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023654:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023658:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802365c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802365e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023662:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023666:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802366a:	eef0 6a62 	vmov.f32	s13, s5
 802366e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023672:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023676:	ee77 2a62 	vsub.f32	s5, s14, s5
 802367a:	ee16 4a90 	vmov	r4, s13
 802367e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023682:	eef0 6a43 	vmov.f32	s13, s6
 8023686:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802368a:	ee12 2a90 	vmov	r2, s5
 802368e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023692:	fb92 f3f3 	sdiv	r3, r2, r3
 8023696:	ee13 2a10 	vmov	r2, s6
 802369a:	9327      	str	r3, [sp, #156]	; 0x9c
 802369c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802369e:	fb92 f3f3 	sdiv	r3, r2, r3
 80236a2:	9328      	str	r3, [sp, #160]	; 0xa0
 80236a4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80236a6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80236a8:	3b01      	subs	r3, #1
 80236aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80236ae:	9316      	str	r3, [sp, #88]	; 0x58
 80236b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80236b2:	bf08      	it	eq
 80236b4:	4613      	moveq	r3, r2
 80236b6:	ee16 6a90 	vmov	r6, s13
 80236ba:	9307      	str	r3, [sp, #28]
 80236bc:	eeb0 3a67 	vmov.f32	s6, s15
 80236c0:	eef0 2a47 	vmov.f32	s5, s14
 80236c4:	e622      	b.n	802330c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80236c6:	2800      	cmp	r0, #0
 80236c8:	f43f ae92 	beq.w	80233f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80236cc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80236d0:	9308      	str	r3, [sp, #32]
 80236d2:	0e1b      	lsrs	r3, r3, #24
 80236d4:	9310      	str	r3, [sp, #64]	; 0x40
 80236d6:	e68b      	b.n	80233f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80236d8:	8839      	ldrh	r1, [r7, #0]
 80236da:	4dd4      	ldr	r5, [pc, #848]	; (8023a2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80236dc:	43db      	mvns	r3, r3
 80236de:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80236e2:	fa5f f883 	uxtb.w	r8, r3
 80236e6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80236ea:	fb0e fe08 	mul.w	lr, lr, r8
 80236ee:	10c8      	asrs	r0, r1, #3
 80236f0:	00cb      	lsls	r3, r1, #3
 80236f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80236f6:	f10e 0101 	add.w	r1, lr, #1
 80236fa:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80236fe:	fb00 f008 	mul.w	r0, r0, r8
 8023702:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8023706:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802370a:	f100 0e01 	add.w	lr, r0, #1
 802370e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8023712:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023716:	b2db      	uxtb	r3, r3
 8023718:	b2c9      	uxtb	r1, r1
 802371a:	00d2      	lsls	r2, r2, #3
 802371c:	fb03 f308 	mul.w	r3, r3, r8
 8023720:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8023724:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023728:	430a      	orrs	r2, r1
 802372a:	1c59      	adds	r1, r3, #1
 802372c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023730:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023734:	e748      	b.n	80235c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8023736:	f112 0801 	adds.w	r8, r2, #1
 802373a:	f53f af4b 	bmi.w	80235d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802373e:	4543      	cmp	r3, r8
 8023740:	f6ff af48 	blt.w	80235d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023744:	f11c 0801 	adds.w	r8, ip, #1
 8023748:	f53f af44 	bmi.w	80235d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802374c:	45c6      	cmp	lr, r8
 802374e:	f6ff af41 	blt.w	80235d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023752:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8023756:	fa0f f28e 	sxth.w	r2, lr
 802375a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802375e:	9200      	str	r2, [sp, #0]
 8023760:	b21b      	sxth	r3, r3
 8023762:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023764:	9819      	ldr	r0, [sp, #100]	; 0x64
 8023766:	4639      	mov	r1, r7
 8023768:	f7ff fc87 	bl	802307a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802376c:	e732      	b.n	80235d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802376e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023770:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023772:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8023776:	1421      	asrs	r1, r4, #16
 8023778:	1433      	asrs	r3, r6, #16
 802377a:	fb07 1303 	mla	r3, r7, r3, r1
 802377e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023780:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8023784:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023788:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802378c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023790:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023794:	2a00      	cmp	r2, #0
 8023796:	f000 8107 	beq.w	80239a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802379a:	684d      	ldr	r5, [r1, #4]
 802379c:	950d      	str	r5, [sp, #52]	; 0x34
 802379e:	0e2d      	lsrs	r5, r5, #24
 80237a0:	9514      	str	r5, [sp, #80]	; 0x50
 80237a2:	b178      	cbz	r0, 80237c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80237a4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80237a8:	3f01      	subs	r7, #1
 80237aa:	00bf      	lsls	r7, r7, #2
 80237ac:	3704      	adds	r7, #4
 80237ae:	eb01 0e07 	add.w	lr, r1, r7
 80237b2:	59c9      	ldr	r1, [r1, r7]
 80237b4:	9109      	str	r1, [sp, #36]	; 0x24
 80237b6:	0e09      	lsrs	r1, r1, #24
 80237b8:	9111      	str	r1, [sp, #68]	; 0x44
 80237ba:	f8de 1004 	ldr.w	r1, [lr, #4]
 80237be:	910e      	str	r1, [sp, #56]	; 0x38
 80237c0:	0e09      	lsrs	r1, r1, #24
 80237c2:	9115      	str	r1, [sp, #84]	; 0x54
 80237c4:	b292      	uxth	r2, r2
 80237c6:	b280      	uxth	r0, r0
 80237c8:	fb02 f900 	mul.w	r9, r2, r0
 80237cc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80237d0:	0112      	lsls	r2, r2, #4
 80237d2:	eba2 0e09 	sub.w	lr, r2, r9
 80237d6:	b280      	uxth	r0, r0
 80237d8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80237dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80237de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80237e0:	fa1f fe8e 	uxth.w	lr, lr
 80237e4:	1a09      	subs	r1, r1, r0
 80237e6:	b289      	uxth	r1, r1
 80237e8:	fb0e f202 	mul.w	r2, lr, r2
 80237ec:	fb01 220c 	mla	r2, r1, ip, r2
 80237f0:	fb00 2205 	mla	r2, r0, r5, r2
 80237f4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80237f6:	fb09 2205 	mla	r2, r9, r5, r2
 80237fa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80237fe:	2a00      	cmp	r2, #0
 8023800:	f000 80c9 	beq.w	8023996 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8023804:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023808:	d019      	beq.n	802383e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802380a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802380e:	fb0c fa0a 	mul.w	sl, ip, sl
 8023812:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023816:	fb0c fc03 	mul.w	ip, ip, r3
 802381a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802381e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023822:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023826:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802382a:	4453      	add	r3, sl
 802382c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023830:	0a1b      	lsrs	r3, r3, #8
 8023832:	0a3f      	lsrs	r7, r7, #8
 8023834:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023838:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802383c:	433b      	orrs	r3, r7
 802383e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023840:	2dff      	cmp	r5, #255	; 0xff
 8023842:	d020      	beq.n	8023886 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8023844:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023846:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802384a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802384c:	436f      	muls	r7, r5
 802384e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023850:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023854:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023856:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802385a:	fb05 fa0a 	mul.w	sl, r5, sl
 802385e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023862:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023866:	44bc      	add	ip, r7
 8023868:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802386c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023870:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023874:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023878:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802387c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023880:	ea4c 050a 	orr.w	r5, ip, sl
 8023884:	950d      	str	r5, [sp, #52]	; 0x34
 8023886:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023888:	2dff      	cmp	r5, #255	; 0xff
 802388a:	d020      	beq.n	80238ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802388c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802388e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023892:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023894:	436f      	muls	r7, r5
 8023896:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023898:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802389c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802389e:	fb05 fa0c 	mul.w	sl, r5, ip
 80238a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80238a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80238aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80238ae:	44bc      	add	ip, r7
 80238b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80238b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80238b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80238bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80238c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80238c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80238c8:	ea4c 050a 	orr.w	r5, ip, sl
 80238cc:	9509      	str	r5, [sp, #36]	; 0x24
 80238ce:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80238d0:	2dff      	cmp	r5, #255	; 0xff
 80238d2:	d020      	beq.n	8023916 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80238d4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80238d6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80238da:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80238dc:	436f      	muls	r7, r5
 80238de:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80238e0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80238e4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80238e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80238ea:	fb05 fa0a 	mul.w	sl, r5, sl
 80238ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80238f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80238f6:	44bc      	add	ip, r7
 80238f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80238fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023900:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023904:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023908:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802390c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023910:	ea4c 050a 	orr.w	r5, ip, sl
 8023914:	950e      	str	r5, [sp, #56]	; 0x38
 8023916:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023918:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802391c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802391e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023922:	fb0e f707 	mul.w	r7, lr, r7
 8023926:	fb01 770c 	mla	r7, r1, ip, r7
 802392a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802392e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023930:	fb00 770c 	mla	r7, r0, ip, r7
 8023934:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023938:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802393a:	fb09 770c 	mla	r7, r9, ip, r7
 802393e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023942:	fb0e fe0c 	mul.w	lr, lr, ip
 8023946:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802394a:	fb01 e303 	mla	r3, r1, r3, lr
 802394e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023950:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023954:	990e      	ldr	r1, [sp, #56]	; 0x38
 8023956:	fb00 330a 	mla	r3, r0, sl, r3
 802395a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802395e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023962:	0a3f      	lsrs	r7, r7, #8
 8023964:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023968:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802396c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023970:	ea47 070c 	orr.w	r7, r7, ip
 8023974:	2aff      	cmp	r2, #255	; 0xff
 8023976:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802397a:	d11e      	bne.n	80239ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802397c:	097a      	lsrs	r2, r7, #5
 802397e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8023982:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023986:	f023 0307 	bic.w	r3, r3, #7
 802398a:	4313      	orrs	r3, r2
 802398c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023990:	431f      	orrs	r7, r3
 8023992:	f8a8 7000 	strh.w	r7, [r8]
 8023996:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023998:	441c      	add	r4, r3
 802399a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802399c:	f108 0802 	add.w	r8, r8, #2
 80239a0:	441e      	add	r6, r3
 80239a2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80239a6:	e644      	b.n	8023632 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80239a8:	2800      	cmp	r0, #0
 80239aa:	f43f af0b 	beq.w	80237c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80239ae:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80239b2:	9109      	str	r1, [sp, #36]	; 0x24
 80239b4:	0e09      	lsrs	r1, r1, #24
 80239b6:	9111      	str	r1, [sp, #68]	; 0x44
 80239b8:	e704      	b.n	80237c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80239ba:	f8b8 1000 	ldrh.w	r1, [r8]
 80239be:	43d2      	mvns	r2, r2
 80239c0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80239c4:	fa5f fe82 	uxtb.w	lr, r2
 80239c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80239cc:	fb0c fc0e 	mul.w	ip, ip, lr
 80239d0:	10c8      	asrs	r0, r1, #3
 80239d2:	00ca      	lsls	r2, r1, #3
 80239d4:	f10c 0101 	add.w	r1, ip, #1
 80239d8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80239dc:	0c39      	lsrs	r1, r7, #16
 80239de:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80239e2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80239e6:	4911      	ldr	r1, [pc, #68]	; (8023a2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80239e8:	fb00 f00e 	mul.w	r0, r0, lr
 80239ec:	fa5f fc8c 	uxtb.w	ip, ip
 80239f0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80239f4:	b2d2      	uxtb	r2, r2
 80239f6:	1c41      	adds	r1, r0, #1
 80239f8:	fb02 f20e 	mul.w	r2, r2, lr
 80239fc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023a00:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023a04:	1c51      	adds	r1, r2, #1
 8023a06:	00c0      	lsls	r0, r0, #3
 8023a08:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023a0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a10:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023a14:	ea4c 0c00 	orr.w	ip, ip, r0
 8023a18:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023a1c:	ea47 0c0c 	orr.w	ip, r7, ip
 8023a20:	f8a8 c000 	strh.w	ip, [r8]
 8023a24:	e7b7      	b.n	8023996 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8023a26:	b01b      	add	sp, #108	; 0x6c
 8023a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023a2c:	fffff800 	.word	0xfffff800

08023a30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8023a30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023a34:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8023a38:	2d00      	cmp	r5, #0
 8023a3a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8023a3e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8023a42:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8023a46:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8023a4a:	fb05 0e03 	mla	lr, r5, r3, r0
 8023a4e:	f2c0 808c 	blt.w	8023b6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023a52:	45a9      	cmp	r9, r5
 8023a54:	f340 8089 	ble.w	8023b6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023a58:	2800      	cmp	r0, #0
 8023a5a:	f2c0 8084 	blt.w	8023b66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023a5e:	4580      	cmp	r8, r0
 8023a60:	f340 8081 	ble.w	8023b66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023a64:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8023a68:	f01e 0f01 	tst.w	lr, #1
 8023a6c:	5d16      	ldrb	r6, [r2, r4]
 8023a6e:	bf0c      	ite	eq
 8023a70:	f006 060f 	andeq.w	r6, r6, #15
 8023a74:	1136      	asrne	r6, r6, #4
 8023a76:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8023a7a:	b2f6      	uxtb	r6, r6
 8023a7c:	1c44      	adds	r4, r0, #1
 8023a7e:	d477      	bmi.n	8023b70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8023a80:	45a0      	cmp	r8, r4
 8023a82:	dd75      	ble.n	8023b70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8023a84:	2f00      	cmp	r7, #0
 8023a86:	d075      	beq.n	8023b74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8023a88:	f10e 0a01 	add.w	sl, lr, #1
 8023a8c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8023a90:	f01a 0f01 	tst.w	sl, #1
 8023a94:	5d14      	ldrb	r4, [r2, r4]
 8023a96:	bf0c      	ite	eq
 8023a98:	f004 040f 	andeq.w	r4, r4, #15
 8023a9c:	1124      	asrne	r4, r4, #4
 8023a9e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8023aa2:	b2e4      	uxtb	r4, r4
 8023aa4:	3501      	adds	r5, #1
 8023aa6:	d469      	bmi.n	8023b7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8023aa8:	45a9      	cmp	r9, r5
 8023aaa:	dd67      	ble.n	8023b7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8023aac:	f1bc 0f00 	cmp.w	ip, #0
 8023ab0:	d067      	beq.n	8023b82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8023ab2:	2800      	cmp	r0, #0
 8023ab4:	db60      	blt.n	8023b78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8023ab6:	4580      	cmp	r8, r0
 8023ab8:	dd5e      	ble.n	8023b78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8023aba:	eb03 090e 	add.w	r9, r3, lr
 8023abe:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8023ac2:	f019 0f01 	tst.w	r9, #1
 8023ac6:	5d55      	ldrb	r5, [r2, r5]
 8023ac8:	bf0c      	ite	eq
 8023aca:	f005 050f 	andeq.w	r5, r5, #15
 8023ace:	112d      	asrne	r5, r5, #4
 8023ad0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8023ad4:	b2ed      	uxtb	r5, r5
 8023ad6:	3001      	adds	r0, #1
 8023ad8:	d456      	bmi.n	8023b88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8023ada:	4580      	cmp	r8, r0
 8023adc:	dd54      	ble.n	8023b88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8023ade:	2f00      	cmp	r7, #0
 8023ae0:	d054      	beq.n	8023b8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8023ae2:	3301      	adds	r3, #1
 8023ae4:	449e      	add	lr, r3
 8023ae6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8023aea:	f01e 0f01 	tst.w	lr, #1
 8023aee:	5cd0      	ldrb	r0, [r2, r3]
 8023af0:	bf0c      	ite	eq
 8023af2:	f000 000f 	andeq.w	r0, r0, #15
 8023af6:	1100      	asrne	r0, r0, #4
 8023af8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023afc:	b2c3      	uxtb	r3, r0
 8023afe:	b2ba      	uxth	r2, r7
 8023b00:	fa1f fc8c 	uxth.w	ip, ip
 8023b04:	fb02 f00c 	mul.w	r0, r2, ip
 8023b08:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8023b0c:	0112      	lsls	r2, r2, #4
 8023b0e:	fa1f fc8c 	uxth.w	ip, ip
 8023b12:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8023b16:	1a12      	subs	r2, r2, r0
 8023b18:	eba7 070c 	sub.w	r7, r7, ip
 8023b1c:	b292      	uxth	r2, r2
 8023b1e:	b2bf      	uxth	r7, r7
 8023b20:	4362      	muls	r2, r4
 8023b22:	fb06 2207 	mla	r2, r6, r7, r2
 8023b26:	fb0c 2505 	mla	r5, ip, r5, r2
 8023b2a:	fb00 5303 	mla	r3, r0, r3, r5
 8023b2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023b32:	b1b3      	cbz	r3, 8023b62 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8023b34:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8023b38:	435a      	muls	r2, r3
 8023b3a:	1c53      	adds	r3, r2, #1
 8023b3c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023b40:	4a2d      	ldr	r2, [pc, #180]	; (8023bf8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8023b42:	121b      	asrs	r3, r3, #8
 8023b44:	6812      	ldr	r2, [r2, #0]
 8023b46:	2bff      	cmp	r3, #255	; 0xff
 8023b48:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8023b4c:	d120      	bne.n	8023b90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8023b4e:	4b2b      	ldr	r3, [pc, #172]	; (8023bfc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8023b50:	0950      	lsrs	r0, r2, #5
 8023b52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023b56:	4033      	ands	r3, r6
 8023b58:	4318      	orrs	r0, r3
 8023b5a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023b5e:	4302      	orrs	r2, r0
 8023b60:	800a      	strh	r2, [r1, #0]
 8023b62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023b66:	2600      	movs	r6, #0
 8023b68:	e788      	b.n	8023a7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8023b6a:	2400      	movs	r4, #0
 8023b6c:	4626      	mov	r6, r4
 8023b6e:	e799      	b.n	8023aa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8023b70:	2400      	movs	r4, #0
 8023b72:	e797      	b.n	8023aa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8023b74:	463c      	mov	r4, r7
 8023b76:	e795      	b.n	8023aa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8023b78:	2500      	movs	r5, #0
 8023b7a:	e7ac      	b.n	8023ad6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8023b7c:	2300      	movs	r3, #0
 8023b7e:	461d      	mov	r5, r3
 8023b80:	e7bd      	b.n	8023afe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023b82:	4663      	mov	r3, ip
 8023b84:	4665      	mov	r5, ip
 8023b86:	e7ba      	b.n	8023afe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023b88:	2300      	movs	r3, #0
 8023b8a:	e7b8      	b.n	8023afe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023b8c:	463b      	mov	r3, r7
 8023b8e:	e7b6      	b.n	8023afe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023b90:	880d      	ldrh	r5, [r1, #0]
 8023b92:	b29f      	uxth	r7, r3
 8023b94:	122c      	asrs	r4, r5, #8
 8023b96:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8023b9a:	43db      	mvns	r3, r3
 8023b9c:	b2db      	uxtb	r3, r3
 8023b9e:	fb10 f007 	smulbb	r0, r0, r7
 8023ba2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023ba6:	fb04 0403 	mla	r4, r4, r3, r0
 8023baa:	b2f6      	uxtb	r6, r6
 8023bac:	10e8      	asrs	r0, r5, #3
 8023bae:	b2d2      	uxtb	r2, r2
 8023bb0:	00ed      	lsls	r5, r5, #3
 8023bb2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023bb6:	fb12 f207 	smulbb	r2, r2, r7
 8023bba:	fb16 f607 	smulbb	r6, r6, r7
 8023bbe:	b2ed      	uxtb	r5, r5
 8023bc0:	b2a4      	uxth	r4, r4
 8023bc2:	fb00 6603 	mla	r6, r0, r3, r6
 8023bc6:	fb05 2303 	mla	r3, r5, r3, r2
 8023bca:	b29a      	uxth	r2, r3
 8023bcc:	1c63      	adds	r3, r4, #1
 8023bce:	b2b0      	uxth	r0, r6
 8023bd0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8023bd4:	1c53      	adds	r3, r2, #1
 8023bd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023bda:	1c42      	adds	r2, r0, #1
 8023bdc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023be0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023be4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023be8:	0940      	lsrs	r0, r0, #5
 8023bea:	4323      	orrs	r3, r4
 8023bec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023bf0:	4303      	orrs	r3, r0
 8023bf2:	800b      	strh	r3, [r1, #0]
 8023bf4:	e7b5      	b.n	8023b62 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8023bf6:	bf00      	nop
 8023bf8:	200137cc 	.word	0x200137cc
 8023bfc:	00fff800 	.word	0x00fff800

08023c00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c04:	b097      	sub	sp, #92	; 0x5c
 8023c06:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8023c0a:	9214      	str	r2, [sp, #80]	; 0x50
 8023c0c:	9309      	str	r3, [sp, #36]	; 0x24
 8023c0e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023c10:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8023c14:	910d      	str	r1, [sp, #52]	; 0x34
 8023c16:	930f      	str	r3, [sp, #60]	; 0x3c
 8023c18:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8023c1c:	9015      	str	r0, [sp, #84]	; 0x54
 8023c1e:	6850      	ldr	r0, [r2, #4]
 8023c20:	6812      	ldr	r2, [r2, #0]
 8023c22:	fb00 1303 	mla	r3, r0, r3, r1
 8023c26:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8023c2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023c2c:	689b      	ldr	r3, [r3, #8]
 8023c2e:	3301      	adds	r3, #1
 8023c30:	f023 0301 	bic.w	r3, r3, #1
 8023c34:	930a      	str	r3, [sp, #40]	; 0x28
 8023c36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023c38:	681f      	ldr	r7, [r3, #0]
 8023c3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023c3c:	2b00      	cmp	r3, #0
 8023c3e:	dc03      	bgt.n	8023c48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023c40:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8023c42:	2b00      	cmp	r3, #0
 8023c44:	f340 8287 	ble.w	8024156 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8023c48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023c4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023c52:	1e48      	subs	r0, r1, #1
 8023c54:	f102 3cff 	add.w	ip, r2, #4294967295
 8023c58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c5a:	2b00      	cmp	r3, #0
 8023c5c:	f340 80c4 	ble.w	8023de8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8023c60:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023c64:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023c68:	d406      	bmi.n	8023c78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023c6a:	4586      	cmp	lr, r0
 8023c6c:	da04      	bge.n	8023c78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023c6e:	2b00      	cmp	r3, #0
 8023c70:	db02      	blt.n	8023c78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023c72:	4563      	cmp	r3, ip
 8023c74:	f2c0 80b9 	blt.w	8023dea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8023c78:	f11e 0e01 	adds.w	lr, lr, #1
 8023c7c:	f100 80aa 	bmi.w	8023dd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023c80:	4571      	cmp	r1, lr
 8023c82:	f2c0 80a7 	blt.w	8023dd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023c86:	3301      	adds	r3, #1
 8023c88:	f100 80a4 	bmi.w	8023dd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023c8c:	429a      	cmp	r2, r3
 8023c8e:	f2c0 80a1 	blt.w	8023dd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023c92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c94:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8023c98:	930e      	str	r3, [sp, #56]	; 0x38
 8023c9a:	46c8      	mov	r8, r9
 8023c9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023c9e:	2b00      	cmp	r3, #0
 8023ca0:	f340 80c3 	ble.w	8023e2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8023ca4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023ca6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8023caa:	1423      	asrs	r3, r4, #16
 8023cac:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023cb0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023cb4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023cb8:	f100 814d 	bmi.w	8023f56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023cbc:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023cc0:	455b      	cmp	r3, fp
 8023cc2:	f280 8148 	bge.w	8023f56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023cc6:	2800      	cmp	r0, #0
 8023cc8:	f2c0 8145 	blt.w	8023f56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023ccc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023cd0:	4558      	cmp	r0, fp
 8023cd2:	f280 8140 	bge.w	8023f56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023cd6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023cd8:	fb00 3305 	mla	r3, r0, r5, r3
 8023cdc:	0858      	lsrs	r0, r3, #1
 8023cde:	07dd      	lsls	r5, r3, #31
 8023ce0:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023ce4:	bf54      	ite	pl
 8023ce6:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023cea:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023cee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023cf2:	fa5f fc8c 	uxtb.w	ip, ip
 8023cf6:	2a00      	cmp	r2, #0
 8023cf8:	f000 80db 	beq.w	8023eb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8023cfc:	1c58      	adds	r0, r3, #1
 8023cfe:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8023d02:	07c0      	lsls	r0, r0, #31
 8023d04:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023d08:	bf54      	ite	pl
 8023d0a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8023d0e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8023d12:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023d16:	fa5f f08e 	uxtb.w	r0, lr
 8023d1a:	9010      	str	r0, [sp, #64]	; 0x40
 8023d1c:	b1c9      	cbz	r1, 8023d52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023d1e:	4453      	add	r3, sl
 8023d20:	0858      	lsrs	r0, r3, #1
 8023d22:	07dd      	lsls	r5, r3, #31
 8023d24:	5c38      	ldrb	r0, [r7, r0]
 8023d26:	bf54      	ite	pl
 8023d28:	f000 000f 	andpl.w	r0, r0, #15
 8023d2c:	1100      	asrmi	r0, r0, #4
 8023d2e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023d32:	3301      	adds	r3, #1
 8023d34:	b2c0      	uxtb	r0, r0
 8023d36:	900b      	str	r0, [sp, #44]	; 0x2c
 8023d38:	0858      	lsrs	r0, r3, #1
 8023d3a:	07dd      	lsls	r5, r3, #31
 8023d3c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8023d40:	bf54      	ite	pl
 8023d42:	f00e 030f 	andpl.w	r3, lr, #15
 8023d46:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8023d4a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023d4e:	b2db      	uxtb	r3, r3
 8023d50:	9311      	str	r3, [sp, #68]	; 0x44
 8023d52:	b292      	uxth	r2, r2
 8023d54:	b289      	uxth	r1, r1
 8023d56:	fb02 f301 	mul.w	r3, r2, r1
 8023d5a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8023d5e:	0112      	lsls	r2, r2, #4
 8023d60:	b289      	uxth	r1, r1
 8023d62:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8023d66:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023d68:	1ad2      	subs	r2, r2, r3
 8023d6a:	1a40      	subs	r0, r0, r1
 8023d6c:	b292      	uxth	r2, r2
 8023d6e:	436a      	muls	r2, r5
 8023d70:	b280      	uxth	r0, r0
 8023d72:	fb0c 2c00 	mla	ip, ip, r0, r2
 8023d76:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023d78:	fb01 c102 	mla	r1, r1, r2, ip
 8023d7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8023d7e:	fb03 1302 	mla	r3, r3, r2, r1
 8023d82:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023d86:	b1db      	cbz	r3, 8023dc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023d88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023d8a:	4353      	muls	r3, r2
 8023d8c:	1c5a      	adds	r2, r3, #1
 8023d8e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023d92:	4ac6      	ldr	r2, [pc, #792]	; (80240ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8023d94:	121b      	asrs	r3, r3, #8
 8023d96:	6812      	ldr	r2, [r2, #0]
 8023d98:	2bff      	cmp	r3, #255	; 0xff
 8023d9a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8023d9e:	f040 8099 	bne.w	8023ed4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8023da2:	0953      	lsrs	r3, r2, #5
 8023da4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8023da8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023dac:	f02c 0c07 	bic.w	ip, ip, #7
 8023db0:	ea43 0c0c 	orr.w	ip, r3, ip
 8023db4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023db8:	ea4c 0202 	orr.w	r2, ip, r2
 8023dbc:	f8a8 2000 	strh.w	r2, [r8]
 8023dc0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023dc2:	441c      	add	r4, r3
 8023dc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023dc6:	441e      	add	r6, r3
 8023dc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023dca:	3b01      	subs	r3, #1
 8023dcc:	f108 0802 	add.w	r8, r8, #2
 8023dd0:	930e      	str	r3, [sp, #56]	; 0x38
 8023dd2:	e763      	b.n	8023c9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8023dd4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023dd6:	441c      	add	r4, r3
 8023dd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023dda:	441e      	add	r6, r3
 8023ddc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023dde:	3b01      	subs	r3, #1
 8023de0:	9309      	str	r3, [sp, #36]	; 0x24
 8023de2:	f109 0902 	add.w	r9, r9, #2
 8023de6:	e737      	b.n	8023c58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023de8:	d024      	beq.n	8023e34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023dea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023dec:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8023dee:	3b01      	subs	r3, #1
 8023df0:	fb00 4003 	mla	r0, r0, r3, r4
 8023df4:	1400      	asrs	r0, r0, #16
 8023df6:	f53f af4c 	bmi.w	8023c92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023dfa:	3901      	subs	r1, #1
 8023dfc:	4288      	cmp	r0, r1
 8023dfe:	f6bf af48 	bge.w	8023c92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023e02:	9924      	ldr	r1, [sp, #144]	; 0x90
 8023e04:	fb01 6303 	mla	r3, r1, r3, r6
 8023e08:	141b      	asrs	r3, r3, #16
 8023e0a:	f53f af42 	bmi.w	8023c92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023e0e:	3a01      	subs	r2, #1
 8023e10:	4293      	cmp	r3, r2
 8023e12:	f6bf af3e 	bge.w	8023c92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023e16:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8023e1a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8023e1e:	930e      	str	r3, [sp, #56]	; 0x38
 8023e20:	46c8      	mov	r8, r9
 8023e22:	f1bb 0f00 	cmp.w	fp, #0
 8023e26:	f300 80b7 	bgt.w	8023f98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8023e2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023e2c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023e30:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023e34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023e36:	2b00      	cmp	r3, #0
 8023e38:	f340 818d 	ble.w	8024156 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8023e3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023e40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023e44:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023e48:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023e4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023e52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023e56:	eef0 6a62 	vmov.f32	s13, s5
 8023e5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023e5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e62:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023e66:	ee16 4a90 	vmov	r4, s13
 8023e6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023e6e:	eef0 6a43 	vmov.f32	s13, s6
 8023e72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023e76:	ee12 2a90 	vmov	r2, s5
 8023e7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023e7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e82:	ee13 2a10 	vmov	r2, s6
 8023e86:	9323      	str	r3, [sp, #140]	; 0x8c
 8023e88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e8e:	9324      	str	r3, [sp, #144]	; 0x90
 8023e90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023e92:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023e94:	3b01      	subs	r3, #1
 8023e96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e9a:	930d      	str	r3, [sp, #52]	; 0x34
 8023e9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e9e:	bf08      	it	eq
 8023ea0:	4613      	moveq	r3, r2
 8023ea2:	ee16 6a90 	vmov	r6, s13
 8023ea6:	9309      	str	r3, [sp, #36]	; 0x24
 8023ea8:	eeb0 3a67 	vmov.f32	s6, s15
 8023eac:	eef0 2a47 	vmov.f32	s5, s14
 8023eb0:	e6c3      	b.n	8023c3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023eb2:	2900      	cmp	r1, #0
 8023eb4:	f43f af4d 	beq.w	8023d52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023eb8:	eb0a 0003 	add.w	r0, sl, r3
 8023ebc:	0843      	lsrs	r3, r0, #1
 8023ebe:	07c0      	lsls	r0, r0, #31
 8023ec0:	5cfb      	ldrb	r3, [r7, r3]
 8023ec2:	bf54      	ite	pl
 8023ec4:	f003 030f 	andpl.w	r3, r3, #15
 8023ec8:	111b      	asrmi	r3, r3, #4
 8023eca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023ece:	b2db      	uxtb	r3, r3
 8023ed0:	930b      	str	r3, [sp, #44]	; 0x2c
 8023ed2:	e73e      	b.n	8023d52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023ed4:	f8b8 e000 	ldrh.w	lr, [r8]
 8023ed8:	fa1f fb83 	uxth.w	fp, r3
 8023edc:	ea4f 202e 	mov.w	r0, lr, asr #8
 8023ee0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8023ee4:	43db      	mvns	r3, r3
 8023ee6:	b2db      	uxtb	r3, r3
 8023ee8:	fb11 f10b 	smulbb	r1, r1, fp
 8023eec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023ef0:	fb00 1003 	mla	r0, r0, r3, r1
 8023ef4:	fa5f fc8c 	uxtb.w	ip, ip
 8023ef8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8023efc:	b2d2      	uxtb	r2, r2
 8023efe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023f02:	b280      	uxth	r0, r0
 8023f04:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023f08:	fb1c fc0b 	smulbb	ip, ip, fp
 8023f0c:	fa5f fe8e 	uxtb.w	lr, lr
 8023f10:	fb12 fb0b 	smulbb	fp, r2, fp
 8023f14:	fb01 cc03 	mla	ip, r1, r3, ip
 8023f18:	fb0e bb03 	mla	fp, lr, r3, fp
 8023f1c:	1c43      	adds	r3, r0, #1
 8023f1e:	fa1f fc8c 	uxth.w	ip, ip
 8023f22:	fa1f fb8b 	uxth.w	fp, fp
 8023f26:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023f2a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8023f2e:	f10c 0101 	add.w	r1, ip, #1
 8023f32:	f10b 0001 	add.w	r0, fp, #1
 8023f36:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8023f3a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023f3e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023f42:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023f46:	4318      	orrs	r0, r3
 8023f48:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023f4c:	ea40 000c 	orr.w	r0, r0, ip
 8023f50:	f8a8 0000 	strh.w	r0, [r8]
 8023f54:	e734      	b.n	8023dc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023f56:	f113 0b01 	adds.w	fp, r3, #1
 8023f5a:	f53f af31 	bmi.w	8023dc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023f5e:	45dc      	cmp	ip, fp
 8023f60:	f6ff af2e 	blt.w	8023dc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023f64:	f110 0b01 	adds.w	fp, r0, #1
 8023f68:	f53f af2a 	bmi.w	8023dc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023f6c:	45de      	cmp	lr, fp
 8023f6e:	f6ff af27 	blt.w	8023dc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023f72:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023f74:	9302      	str	r3, [sp, #8]
 8023f76:	fa0f f38e 	sxth.w	r3, lr
 8023f7a:	9301      	str	r3, [sp, #4]
 8023f7c:	fa0f f38c 	sxth.w	r3, ip
 8023f80:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8023f84:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8023f88:	9300      	str	r3, [sp, #0]
 8023f8a:	463a      	mov	r2, r7
 8023f8c:	4653      	mov	r3, sl
 8023f8e:	4641      	mov	r1, r8
 8023f90:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023f92:	f7ff fd4d 	bl	8023a30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8023f96:	e713      	b.n	8023dc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023f98:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023f9a:	1422      	asrs	r2, r4, #16
 8023f9c:	1433      	asrs	r3, r6, #16
 8023f9e:	fb05 2303 	mla	r3, r5, r3, r2
 8023fa2:	085a      	lsrs	r2, r3, #1
 8023fa4:	07dd      	lsls	r5, r3, #31
 8023fa6:	5cba      	ldrb	r2, [r7, r2]
 8023fa8:	bf54      	ite	pl
 8023faa:	f002 020f 	andpl.w	r2, r2, #15
 8023fae:	1112      	asrmi	r2, r2, #4
 8023fb0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023fb4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023fb8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023fbc:	b2d2      	uxtb	r2, r2
 8023fbe:	2900      	cmp	r1, #0
 8023fc0:	d076      	beq.n	80240b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023fc2:	f103 0e01 	add.w	lr, r3, #1
 8023fc6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8023fca:	f01e 0f01 	tst.w	lr, #1
 8023fce:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023fd2:	bf0c      	ite	eq
 8023fd4:	f00c 0c0f 	andeq.w	ip, ip, #15
 8023fd8:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8023fdc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023fe0:	fa5f f58c 	uxtb.w	r5, ip
 8023fe4:	9512      	str	r5, [sp, #72]	; 0x48
 8023fe6:	b300      	cbz	r0, 802402a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8023fe8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023fea:	442b      	add	r3, r5
 8023fec:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8023ff0:	07dd      	lsls	r5, r3, #31
 8023ff2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023ff6:	bf54      	ite	pl
 8023ff8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023ffc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024000:	3301      	adds	r3, #1
 8024002:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024006:	fa5f f58c 	uxtb.w	r5, ip
 802400a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802400e:	950c      	str	r5, [sp, #48]	; 0x30
 8024010:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024014:	07dd      	lsls	r5, r3, #31
 8024016:	bf54      	ite	pl
 8024018:	f00c 0c0f 	andpl.w	ip, ip, #15
 802401c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024020:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024024:	fa5f f38c 	uxtb.w	r3, ip
 8024028:	9313      	str	r3, [sp, #76]	; 0x4c
 802402a:	b289      	uxth	r1, r1
 802402c:	b280      	uxth	r0, r0
 802402e:	fb01 f300 	mul.w	r3, r1, r0
 8024032:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024036:	0109      	lsls	r1, r1, #4
 8024038:	b280      	uxth	r0, r0
 802403a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802403e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024040:	1ac9      	subs	r1, r1, r3
 8024042:	ebac 0c00 	sub.w	ip, ip, r0
 8024046:	b289      	uxth	r1, r1
 8024048:	4369      	muls	r1, r5
 802404a:	fa1f fc8c 	uxth.w	ip, ip
 802404e:	fb02 120c 	mla	r2, r2, ip, r1
 8024052:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024054:	fb00 2001 	mla	r0, r0, r1, r2
 8024058:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802405a:	fb03 0302 	mla	r3, r3, r2, r0
 802405e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024062:	b1d3      	cbz	r3, 802409a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024064:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024066:	4353      	muls	r3, r2
 8024068:	1c5a      	adds	r2, r3, #1
 802406a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802406e:	4a0f      	ldr	r2, [pc, #60]	; (80240ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024070:	121b      	asrs	r3, r3, #8
 8024072:	6812      	ldr	r2, [r2, #0]
 8024074:	2bff      	cmp	r3, #255	; 0xff
 8024076:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802407a:	d12d      	bne.n	80240d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802407c:	0953      	lsrs	r3, r2, #5
 802407e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024082:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024086:	f02c 0c07 	bic.w	ip, ip, #7
 802408a:	ea43 0c0c 	orr.w	ip, r3, ip
 802408e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024092:	ea4c 0202 	orr.w	r2, ip, r2
 8024096:	f8a8 2000 	strh.w	r2, [r8]
 802409a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802409c:	441c      	add	r4, r3
 802409e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240a0:	f108 0802 	add.w	r8, r8, #2
 80240a4:	441e      	add	r6, r3
 80240a6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80240aa:	e6ba      	b.n	8023e22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80240ac:	200137cc 	.word	0x200137cc
 80240b0:	2800      	cmp	r0, #0
 80240b2:	d0ba      	beq.n	802402a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80240b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80240b6:	442b      	add	r3, r5
 80240b8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80240bc:	07db      	lsls	r3, r3, #31
 80240be:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80240c2:	bf54      	ite	pl
 80240c4:	f00c 0c0f 	andpl.w	ip, ip, #15
 80240c8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80240cc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80240d0:	fa5f f38c 	uxtb.w	r3, ip
 80240d4:	930c      	str	r3, [sp, #48]	; 0x30
 80240d6:	e7a8      	b.n	802402a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80240d8:	f8b8 e000 	ldrh.w	lr, [r8]
 80240dc:	fa1f fa83 	uxth.w	sl, r3
 80240e0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80240e4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80240e8:	43db      	mvns	r3, r3
 80240ea:	b2db      	uxtb	r3, r3
 80240ec:	fb11 f10a 	smulbb	r1, r1, sl
 80240f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80240f4:	fb00 1003 	mla	r0, r0, r3, r1
 80240f8:	b2d2      	uxtb	r2, r2
 80240fa:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80240fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024102:	fa5f fe8e 	uxtb.w	lr, lr
 8024106:	fb12 f20a 	smulbb	r2, r2, sl
 802410a:	fb0e 2203 	mla	r2, lr, r3, r2
 802410e:	fa5f fc8c 	uxtb.w	ip, ip
 8024112:	b280      	uxth	r0, r0
 8024114:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024118:	b292      	uxth	r2, r2
 802411a:	fb1c fc0a 	smulbb	ip, ip, sl
 802411e:	fb01 cc03 	mla	ip, r1, r3, ip
 8024122:	1c43      	adds	r3, r0, #1
 8024124:	1c51      	adds	r1, r2, #1
 8024126:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802412a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802412e:	fa1f fc8c 	uxth.w	ip, ip
 8024132:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024136:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802413a:	4308      	orrs	r0, r1
 802413c:	f10c 0101 	add.w	r1, ip, #1
 8024140:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024144:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024148:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802414c:	ea40 000c 	orr.w	r0, r0, ip
 8024150:	f8a8 0000 	strh.w	r0, [r8]
 8024154:	e7a1      	b.n	802409a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024156:	b017      	add	sp, #92	; 0x5c
 8024158:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802415c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802415c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024160:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024164:	2d00      	cmp	r5, #0
 8024166:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802416a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802416e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024172:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024176:	fb05 0e03 	mla	lr, r5, r3, r0
 802417a:	f2c0 80b0 	blt.w	80242de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802417e:	45a9      	cmp	r9, r5
 8024180:	f340 80ad 	ble.w	80242de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024184:	2800      	cmp	r0, #0
 8024186:	f2c0 80a8 	blt.w	80242da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802418a:	4580      	cmp	r8, r0
 802418c:	f340 80a5 	ble.w	80242da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024190:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024194:	f01e 0f01 	tst.w	lr, #1
 8024198:	5d16      	ldrb	r6, [r2, r4]
 802419a:	bf0c      	ite	eq
 802419c:	f006 060f 	andeq.w	r6, r6, #15
 80241a0:	1136      	asrne	r6, r6, #4
 80241a2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80241a6:	b2f6      	uxtb	r6, r6
 80241a8:	1c44      	adds	r4, r0, #1
 80241aa:	f100 809b 	bmi.w	80242e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80241ae:	45a0      	cmp	r8, r4
 80241b0:	f340 8098 	ble.w	80242e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80241b4:	2f00      	cmp	r7, #0
 80241b6:	f000 8097 	beq.w	80242e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80241ba:	f10e 0a01 	add.w	sl, lr, #1
 80241be:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80241c2:	f01a 0f01 	tst.w	sl, #1
 80241c6:	5d14      	ldrb	r4, [r2, r4]
 80241c8:	bf0c      	ite	eq
 80241ca:	f004 040f 	andeq.w	r4, r4, #15
 80241ce:	1124      	asrne	r4, r4, #4
 80241d0:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80241d4:	b2e4      	uxtb	r4, r4
 80241d6:	3501      	adds	r5, #1
 80241d8:	f100 808a 	bmi.w	80242f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80241dc:	45a9      	cmp	r9, r5
 80241de:	f340 8087 	ble.w	80242f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80241e2:	f1bc 0f00 	cmp.w	ip, #0
 80241e6:	f000 8086 	beq.w	80242f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80241ea:	2800      	cmp	r0, #0
 80241ec:	db7e      	blt.n	80242ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80241ee:	4580      	cmp	r8, r0
 80241f0:	dd7c      	ble.n	80242ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80241f2:	eb03 090e 	add.w	r9, r3, lr
 80241f6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80241fa:	f019 0f01 	tst.w	r9, #1
 80241fe:	5d55      	ldrb	r5, [r2, r5]
 8024200:	bf0c      	ite	eq
 8024202:	f005 050f 	andeq.w	r5, r5, #15
 8024206:	112d      	asrne	r5, r5, #4
 8024208:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802420c:	b2ed      	uxtb	r5, r5
 802420e:	3001      	adds	r0, #1
 8024210:	d474      	bmi.n	80242fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024212:	4580      	cmp	r8, r0
 8024214:	dd72      	ble.n	80242fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024216:	2f00      	cmp	r7, #0
 8024218:	d072      	beq.n	8024300 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802421a:	3301      	adds	r3, #1
 802421c:	449e      	add	lr, r3
 802421e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024222:	f01e 0f01 	tst.w	lr, #1
 8024226:	5cd0      	ldrb	r0, [r2, r3]
 8024228:	bf0c      	ite	eq
 802422a:	f000 000f 	andeq.w	r0, r0, #15
 802422e:	1100      	asrne	r0, r0, #4
 8024230:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024234:	b2c3      	uxtb	r3, r0
 8024236:	b2ba      	uxth	r2, r7
 8024238:	fa1f fc8c 	uxth.w	ip, ip
 802423c:	fb02 f00c 	mul.w	r0, r2, ip
 8024240:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024244:	0112      	lsls	r2, r2, #4
 8024246:	fa1f fc8c 	uxth.w	ip, ip
 802424a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802424e:	1a12      	subs	r2, r2, r0
 8024250:	eba7 070c 	sub.w	r7, r7, ip
 8024254:	b292      	uxth	r2, r2
 8024256:	b2bf      	uxth	r7, r7
 8024258:	4362      	muls	r2, r4
 802425a:	fb06 2207 	mla	r2, r6, r7, r2
 802425e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024262:	fb00 5303 	mla	r3, r0, r3, r5
 8024266:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802426a:	b3a3      	cbz	r3, 80242d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 802426c:	4a25      	ldr	r2, [pc, #148]	; (8024304 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802426e:	880e      	ldrh	r6, [r1, #0]
 8024270:	6815      	ldr	r5, [r2, #0]
 8024272:	1234      	asrs	r4, r6, #8
 8024274:	b29a      	uxth	r2, r3
 8024276:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802427a:	43db      	mvns	r3, r3
 802427c:	b2db      	uxtb	r3, r3
 802427e:	fb10 f002 	smulbb	r0, r0, r2
 8024282:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024286:	fb04 0403 	mla	r4, r4, r3, r0
 802428a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802428e:	10f0      	asrs	r0, r6, #3
 8024290:	b2ed      	uxtb	r5, r5
 8024292:	00f6      	lsls	r6, r6, #3
 8024294:	fb17 f702 	smulbb	r7, r7, r2
 8024298:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802429c:	fb15 f202 	smulbb	r2, r5, r2
 80242a0:	b2f6      	uxtb	r6, r6
 80242a2:	b2a4      	uxth	r4, r4
 80242a4:	fb00 7003 	mla	r0, r0, r3, r7
 80242a8:	fb06 2303 	mla	r3, r6, r3, r2
 80242ac:	b29a      	uxth	r2, r3
 80242ae:	1c63      	adds	r3, r4, #1
 80242b0:	b280      	uxth	r0, r0
 80242b2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80242b6:	1c53      	adds	r3, r2, #1
 80242b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80242bc:	1c42      	adds	r2, r0, #1
 80242be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80242c2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80242c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80242ca:	0940      	lsrs	r0, r0, #5
 80242cc:	4323      	orrs	r3, r4
 80242ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80242d2:	4303      	orrs	r3, r0
 80242d4:	800b      	strh	r3, [r1, #0]
 80242d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80242da:	2600      	movs	r6, #0
 80242dc:	e764      	b.n	80241a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80242de:	2400      	movs	r4, #0
 80242e0:	4626      	mov	r6, r4
 80242e2:	e778      	b.n	80241d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80242e4:	2400      	movs	r4, #0
 80242e6:	e776      	b.n	80241d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80242e8:	463c      	mov	r4, r7
 80242ea:	e774      	b.n	80241d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80242ec:	2500      	movs	r5, #0
 80242ee:	e78e      	b.n	802420e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80242f0:	2300      	movs	r3, #0
 80242f2:	461d      	mov	r5, r3
 80242f4:	e79f      	b.n	8024236 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80242f6:	4663      	mov	r3, ip
 80242f8:	4665      	mov	r5, ip
 80242fa:	e79c      	b.n	8024236 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80242fc:	2300      	movs	r3, #0
 80242fe:	e79a      	b.n	8024236 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024300:	463b      	mov	r3, r7
 8024302:	e798      	b.n	8024236 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024304:	200137cc 	.word	0x200137cc

08024308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802430c:	b093      	sub	sp, #76	; 0x4c
 802430e:	461d      	mov	r5, r3
 8024310:	920c      	str	r2, [sp, #48]	; 0x30
 8024312:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024314:	9107      	str	r1, [sp, #28]
 8024316:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802431a:	9011      	str	r0, [sp, #68]	; 0x44
 802431c:	6850      	ldr	r0, [r2, #4]
 802431e:	6812      	ldr	r2, [r2, #0]
 8024320:	fb00 1303 	mla	r3, r0, r3, r1
 8024324:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024328:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802432a:	689b      	ldr	r3, [r3, #8]
 802432c:	3301      	adds	r3, #1
 802432e:	f023 0301 	bic.w	r3, r3, #1
 8024332:	9306      	str	r3, [sp, #24]
 8024334:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024336:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802433a:	681f      	ldr	r7, [r3, #0]
 802433c:	9b07      	ldr	r3, [sp, #28]
 802433e:	2b00      	cmp	r3, #0
 8024340:	dc03      	bgt.n	802434a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024342:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024344:	2b00      	cmp	r3, #0
 8024346:	f340 8267 	ble.w	8024818 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802434a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802434c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024350:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024354:	1e48      	subs	r0, r1, #1
 8024356:	f102 3cff 	add.w	ip, r2, #4294967295
 802435a:	2d00      	cmp	r5, #0
 802435c:	f340 80b8 	ble.w	80244d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024360:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024364:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024368:	d406      	bmi.n	8024378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802436a:	4586      	cmp	lr, r0
 802436c:	da04      	bge.n	8024378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802436e:	2b00      	cmp	r3, #0
 8024370:	db02      	blt.n	8024378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024372:	4563      	cmp	r3, ip
 8024374:	f2c0 80ad 	blt.w	80244d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024378:	f11e 0e01 	adds.w	lr, lr, #1
 802437c:	f100 80a0 	bmi.w	80244c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024380:	4571      	cmp	r1, lr
 8024382:	f2c0 809d 	blt.w	80244c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024386:	3301      	adds	r3, #1
 8024388:	f100 809a 	bmi.w	80244c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802438c:	429a      	cmp	r2, r3
 802438e:	f2c0 8097 	blt.w	80244c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024392:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024396:	9509      	str	r5, [sp, #36]	; 0x24
 8024398:	46c8      	mov	r8, r9
 802439a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802439c:	2b00      	cmp	r3, #0
 802439e:	f340 80b6 	ble.w	802450e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80243a2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80243a6:	9308      	str	r3, [sp, #32]
 80243a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243aa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80243ae:	1423      	asrs	r3, r4, #16
 80243b0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80243b4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80243b8:	f100 813e 	bmi.w	8024638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80243bc:	f10c 3bff 	add.w	fp, ip, #4294967295
 80243c0:	455b      	cmp	r3, fp
 80243c2:	f280 8139 	bge.w	8024638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80243c6:	2800      	cmp	r0, #0
 80243c8:	f2c0 8136 	blt.w	8024638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80243cc:	f10e 3bff 	add.w	fp, lr, #4294967295
 80243d0:	4558      	cmp	r0, fp
 80243d2:	f280 8131 	bge.w	8024638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80243d6:	9a06      	ldr	r2, [sp, #24]
 80243d8:	fb00 3302 	mla	r3, r0, r2, r3
 80243dc:	0858      	lsrs	r0, r3, #1
 80243de:	07da      	lsls	r2, r3, #31
 80243e0:	f817 c000 	ldrb.w	ip, [r7, r0]
 80243e4:	9a08      	ldr	r2, [sp, #32]
 80243e6:	bf54      	ite	pl
 80243e8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80243ec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80243f0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80243f4:	fa5f fc8c 	uxtb.w	ip, ip
 80243f8:	2a00      	cmp	r2, #0
 80243fa:	f000 80cb 	beq.w	8024594 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80243fe:	1c58      	adds	r0, r3, #1
 8024400:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024404:	07c0      	lsls	r0, r0, #31
 8024406:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802440a:	bf54      	ite	pl
 802440c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024410:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024414:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024418:	fa5f fe8e 	uxtb.w	lr, lr
 802441c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024420:	b1b9      	cbz	r1, 8024452 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024422:	4453      	add	r3, sl
 8024424:	0858      	lsrs	r0, r3, #1
 8024426:	07da      	lsls	r2, r3, #31
 8024428:	5c38      	ldrb	r0, [r7, r0]
 802442a:	bf54      	ite	pl
 802442c:	f000 000f 	andpl.w	r0, r0, #15
 8024430:	1100      	asrmi	r0, r0, #4
 8024432:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024436:	b2c0      	uxtb	r0, r0
 8024438:	900a      	str	r0, [sp, #40]	; 0x28
 802443a:	1c58      	adds	r0, r3, #1
 802443c:	0843      	lsrs	r3, r0, #1
 802443e:	07c2      	lsls	r2, r0, #31
 8024440:	5cfb      	ldrb	r3, [r7, r3]
 8024442:	bf54      	ite	pl
 8024444:	f003 030f 	andpl.w	r3, r3, #15
 8024448:	111b      	asrmi	r3, r3, #4
 802444a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802444e:	b2db      	uxtb	r3, r3
 8024450:	930e      	str	r3, [sp, #56]	; 0x38
 8024452:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024456:	b289      	uxth	r1, r1
 8024458:	fb02 f301 	mul.w	r3, r2, r1
 802445c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024460:	0112      	lsls	r2, r2, #4
 8024462:	b289      	uxth	r1, r1
 8024464:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024468:	1a40      	subs	r0, r0, r1
 802446a:	fa1f fe80 	uxth.w	lr, r0
 802446e:	1ad2      	subs	r2, r2, r3
 8024470:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024472:	b292      	uxth	r2, r2
 8024474:	4342      	muls	r2, r0
 8024476:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802447a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802447c:	fb01 c102 	mla	r1, r1, r2, ip
 8024480:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024482:	fb03 1302 	mla	r3, r3, r2, r1
 8024486:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802448a:	2bff      	cmp	r3, #255	; 0xff
 802448c:	f040 8093 	bne.w	80245b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024490:	4bbe      	ldr	r3, [pc, #760]	; (802478c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024492:	681a      	ldr	r2, [r3, #0]
 8024494:	4bbe      	ldr	r3, [pc, #760]	; (8024790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024496:	0951      	lsrs	r1, r2, #5
 8024498:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802449c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80244a0:	430b      	orrs	r3, r1
 80244a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80244a6:	4313      	orrs	r3, r2
 80244a8:	f8a8 3000 	strh.w	r3, [r8]
 80244ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80244ae:	441c      	add	r4, r3
 80244b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80244b2:	441e      	add	r6, r3
 80244b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80244b6:	3b01      	subs	r3, #1
 80244b8:	f108 0802 	add.w	r8, r8, #2
 80244bc:	9309      	str	r3, [sp, #36]	; 0x24
 80244be:	e76c      	b.n	802439a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80244c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80244c2:	441c      	add	r4, r3
 80244c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80244c6:	3d01      	subs	r5, #1
 80244c8:	441e      	add	r6, r3
 80244ca:	f109 0902 	add.w	r9, r9, #2
 80244ce:	e744      	b.n	802435a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80244d0:	d021      	beq.n	8024516 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80244d2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80244d4:	1e6b      	subs	r3, r5, #1
 80244d6:	fb00 4003 	mla	r0, r0, r3, r4
 80244da:	1400      	asrs	r0, r0, #16
 80244dc:	f53f af59 	bmi.w	8024392 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80244e0:	3901      	subs	r1, #1
 80244e2:	4288      	cmp	r0, r1
 80244e4:	f6bf af55 	bge.w	8024392 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80244e8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80244ea:	fb01 6303 	mla	r3, r1, r3, r6
 80244ee:	141b      	asrs	r3, r3, #16
 80244f0:	f53f af4f 	bmi.w	8024392 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80244f4:	3a01      	subs	r2, #1
 80244f6:	4293      	cmp	r3, r2
 80244f8:	f6bf af4b 	bge.w	8024392 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80244fc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024500:	9308      	str	r3, [sp, #32]
 8024502:	46a8      	mov	r8, r5
 8024504:	46ce      	mov	lr, r9
 8024506:	f1b8 0f00 	cmp.w	r8, #0
 802450a:	f300 80b5 	bgt.w	8024678 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802450e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024512:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024516:	9b07      	ldr	r3, [sp, #28]
 8024518:	2b00      	cmp	r3, #0
 802451a:	f340 817d 	ble.w	8024818 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802451e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024522:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024526:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802452a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802452c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024530:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024534:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024538:	eef0 6a62 	vmov.f32	s13, s5
 802453c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024540:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024544:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024548:	ee16 4a90 	vmov	r4, s13
 802454c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024550:	eef0 6a43 	vmov.f32	s13, s6
 8024554:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024558:	ee12 2a90 	vmov	r2, s5
 802455c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024560:	fb92 f3f3 	sdiv	r3, r2, r3
 8024564:	ee13 2a10 	vmov	r2, s6
 8024568:	931f      	str	r3, [sp, #124]	; 0x7c
 802456a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802456c:	fb92 f3f3 	sdiv	r3, r2, r3
 8024570:	9320      	str	r3, [sp, #128]	; 0x80
 8024572:	9b07      	ldr	r3, [sp, #28]
 8024574:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024576:	3b01      	subs	r3, #1
 8024578:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802457c:	9307      	str	r3, [sp, #28]
 802457e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024580:	ee16 6a90 	vmov	r6, s13
 8024584:	bf14      	ite	ne
 8024586:	461d      	movne	r5, r3
 8024588:	4615      	moveq	r5, r2
 802458a:	eeb0 3a67 	vmov.f32	s6, s15
 802458e:	eef0 2a47 	vmov.f32	s5, s14
 8024592:	e6d3      	b.n	802433c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024594:	2900      	cmp	r1, #0
 8024596:	f43f af5c 	beq.w	8024452 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802459a:	eb0a 0003 	add.w	r0, sl, r3
 802459e:	0843      	lsrs	r3, r0, #1
 80245a0:	07c0      	lsls	r0, r0, #31
 80245a2:	5cfb      	ldrb	r3, [r7, r3]
 80245a4:	bf54      	ite	pl
 80245a6:	f003 030f 	andpl.w	r3, r3, #15
 80245aa:	111b      	asrmi	r3, r3, #4
 80245ac:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80245b0:	b2db      	uxtb	r3, r3
 80245b2:	930a      	str	r3, [sp, #40]	; 0x28
 80245b4:	e74d      	b.n	8024452 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80245b6:	2b00      	cmp	r3, #0
 80245b8:	f43f af78 	beq.w	80244ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80245bc:	4a73      	ldr	r2, [pc, #460]	; (802478c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80245be:	f8b8 c000 	ldrh.w	ip, [r8]
 80245c2:	6810      	ldr	r0, [r2, #0]
 80245c4:	fa1f fe83 	uxth.w	lr, r3
 80245c8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80245cc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80245d0:	43db      	mvns	r3, r3
 80245d2:	b2db      	uxtb	r3, r3
 80245d4:	fb12 f20e 	smulbb	r2, r2, lr
 80245d8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80245dc:	fb01 2103 	mla	r1, r1, r3, r2
 80245e0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80245e4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80245e8:	b2c0      	uxtb	r0, r0
 80245ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80245ee:	fb1b fb0e 	smulbb	fp, fp, lr
 80245f2:	b289      	uxth	r1, r1
 80245f4:	fb10 fe0e 	smulbb	lr, r0, lr
 80245f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80245fc:	fa5f fc8c 	uxtb.w	ip, ip
 8024600:	fb02 b203 	mla	r2, r2, r3, fp
 8024604:	1c48      	adds	r0, r1, #1
 8024606:	fb0c e303 	mla	r3, ip, r3, lr
 802460a:	b292      	uxth	r2, r2
 802460c:	b29b      	uxth	r3, r3
 802460e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024612:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8024616:	f102 0b01 	add.w	fp, r2, #1
 802461a:	1c59      	adds	r1, r3, #1
 802461c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024620:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024624:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024628:	0952      	lsrs	r2, r2, #5
 802462a:	4301      	orrs	r1, r0
 802462c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024630:	4311      	orrs	r1, r2
 8024632:	f8a8 1000 	strh.w	r1, [r8]
 8024636:	e739      	b.n	80244ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024638:	f113 0b01 	adds.w	fp, r3, #1
 802463c:	f53f af36 	bmi.w	80244ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024640:	45dc      	cmp	ip, fp
 8024642:	f6ff af33 	blt.w	80244ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024646:	f110 0b01 	adds.w	fp, r0, #1
 802464a:	f53f af2f 	bmi.w	80244ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802464e:	45de      	cmp	lr, fp
 8024650:	f6ff af2c 	blt.w	80244ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024654:	9a08      	ldr	r2, [sp, #32]
 8024656:	9302      	str	r3, [sp, #8]
 8024658:	fa0f f38e 	sxth.w	r3, lr
 802465c:	9301      	str	r3, [sp, #4]
 802465e:	fa0f f38c 	sxth.w	r3, ip
 8024662:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024666:	9105      	str	r1, [sp, #20]
 8024668:	9300      	str	r3, [sp, #0]
 802466a:	463a      	mov	r2, r7
 802466c:	4653      	mov	r3, sl
 802466e:	4641      	mov	r1, r8
 8024670:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024672:	f7ff fd73 	bl	802415c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8024676:	e719      	b.n	80244ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024678:	9906      	ldr	r1, [sp, #24]
 802467a:	1422      	asrs	r2, r4, #16
 802467c:	1433      	asrs	r3, r6, #16
 802467e:	fb01 2303 	mla	r3, r1, r3, r2
 8024682:	085a      	lsrs	r2, r3, #1
 8024684:	07d9      	lsls	r1, r3, #31
 8024686:	5cba      	ldrb	r2, [r7, r2]
 8024688:	bf54      	ite	pl
 802468a:	f002 020f 	andpl.w	r2, r2, #15
 802468e:	1112      	asrmi	r2, r2, #4
 8024690:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024694:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024698:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802469c:	b2d2      	uxtb	r2, r2
 802469e:	2800      	cmp	r0, #0
 80246a0:	d062      	beq.n	8024768 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80246a2:	f103 0a01 	add.w	sl, r3, #1
 80246a6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80246aa:	f01a 0f01 	tst.w	sl, #1
 80246ae:	5c79      	ldrb	r1, [r7, r1]
 80246b0:	bf0c      	ite	eq
 80246b2:	f001 010f 	andeq.w	r1, r1, #15
 80246b6:	1109      	asrne	r1, r1, #4
 80246b8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80246bc:	b2c9      	uxtb	r1, r1
 80246be:	910f      	str	r1, [sp, #60]	; 0x3c
 80246c0:	f1bc 0f00 	cmp.w	ip, #0
 80246c4:	d019      	beq.n	80246fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80246c6:	9908      	ldr	r1, [sp, #32]
 80246c8:	440b      	add	r3, r1
 80246ca:	0859      	lsrs	r1, r3, #1
 80246cc:	f013 0f01 	tst.w	r3, #1
 80246d0:	5c79      	ldrb	r1, [r7, r1]
 80246d2:	bf0c      	ite	eq
 80246d4:	f001 010f 	andeq.w	r1, r1, #15
 80246d8:	1109      	asrne	r1, r1, #4
 80246da:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80246de:	b2c9      	uxtb	r1, r1
 80246e0:	3301      	adds	r3, #1
 80246e2:	910b      	str	r1, [sp, #44]	; 0x2c
 80246e4:	0859      	lsrs	r1, r3, #1
 80246e6:	07db      	lsls	r3, r3, #31
 80246e8:	5c79      	ldrb	r1, [r7, r1]
 80246ea:	bf54      	ite	pl
 80246ec:	f001 010f 	andpl.w	r1, r1, #15
 80246f0:	1109      	asrmi	r1, r1, #4
 80246f2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80246f6:	b2c9      	uxtb	r1, r1
 80246f8:	9110      	str	r1, [sp, #64]	; 0x40
 80246fa:	b280      	uxth	r0, r0
 80246fc:	fa1f fc8c 	uxth.w	ip, ip
 8024700:	fb00 f30c 	mul.w	r3, r0, ip
 8024704:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8024708:	0100      	lsls	r0, r0, #4
 802470a:	fa1f fc8c 	uxth.w	ip, ip
 802470e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8024712:	eba1 010c 	sub.w	r1, r1, ip
 8024716:	fa1f fa81 	uxth.w	sl, r1
 802471a:	1ac0      	subs	r0, r0, r3
 802471c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802471e:	b280      	uxth	r0, r0
 8024720:	4348      	muls	r0, r1
 8024722:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8024724:	fb02 020a 	mla	r2, r2, sl, r0
 8024728:	fb0c 2c01 	mla	ip, ip, r1, r2
 802472c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802472e:	fb03 c302 	mla	r3, r3, r2, ip
 8024732:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024736:	2bff      	cmp	r3, #255	; 0xff
 8024738:	d12c      	bne.n	8024794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802473a:	4b14      	ldr	r3, [pc, #80]	; (802478c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802473c:	681a      	ldr	r2, [r3, #0]
 802473e:	4b14      	ldr	r3, [pc, #80]	; (8024790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024740:	0951      	lsrs	r1, r2, #5
 8024742:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024746:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802474a:	430b      	orrs	r3, r1
 802474c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024750:	4313      	orrs	r3, r2
 8024752:	f8ae 3000 	strh.w	r3, [lr]
 8024756:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024758:	441c      	add	r4, r3
 802475a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802475c:	f10e 0e02 	add.w	lr, lr, #2
 8024760:	441e      	add	r6, r3
 8024762:	f108 38ff 	add.w	r8, r8, #4294967295
 8024766:	e6ce      	b.n	8024506 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8024768:	f1bc 0f00 	cmp.w	ip, #0
 802476c:	d0c5      	beq.n	80246fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802476e:	9908      	ldr	r1, [sp, #32]
 8024770:	440b      	add	r3, r1
 8024772:	0859      	lsrs	r1, r3, #1
 8024774:	07db      	lsls	r3, r3, #31
 8024776:	5c79      	ldrb	r1, [r7, r1]
 8024778:	bf54      	ite	pl
 802477a:	f001 010f 	andpl.w	r1, r1, #15
 802477e:	1109      	asrmi	r1, r1, #4
 8024780:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024784:	b2c9      	uxtb	r1, r1
 8024786:	910b      	str	r1, [sp, #44]	; 0x2c
 8024788:	e7b7      	b.n	80246fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802478a:	bf00      	nop
 802478c:	200137cc 	.word	0x200137cc
 8024790:	fffff800 	.word	0xfffff800
 8024794:	2b00      	cmp	r3, #0
 8024796:	d0de      	beq.n	8024756 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024798:	4a21      	ldr	r2, [pc, #132]	; (8024820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802479a:	f8be c000 	ldrh.w	ip, [lr]
 802479e:	6810      	ldr	r0, [r2, #0]
 80247a0:	fa1f fa83 	uxth.w	sl, r3
 80247a4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80247a8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80247ac:	43db      	mvns	r3, r3
 80247ae:	b2db      	uxtb	r3, r3
 80247b0:	fb12 f20a 	smulbb	r2, r2, sl
 80247b4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80247b8:	fb01 2103 	mla	r1, r1, r3, r2
 80247bc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80247c0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80247c4:	b2c0      	uxtb	r0, r0
 80247c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80247ca:	fa5f fc8c 	uxtb.w	ip, ip
 80247ce:	fb10 f00a 	smulbb	r0, r0, sl
 80247d2:	fb0c 0003 	mla	r0, ip, r3, r0
 80247d6:	b289      	uxth	r1, r1
 80247d8:	fb1b fb0a 	smulbb	fp, fp, sl
 80247dc:	b280      	uxth	r0, r0
 80247de:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80247e2:	fb02 b203 	mla	r2, r2, r3, fp
 80247e6:	1c4b      	adds	r3, r1, #1
 80247e8:	f100 0b01 	add.w	fp, r0, #1
 80247ec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80247f0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80247f4:	b292      	uxth	r2, r2
 80247f6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80247fa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80247fe:	ea4b 0101 	orr.w	r1, fp, r1
 8024802:	f102 0b01 	add.w	fp, r2, #1
 8024806:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802480a:	0952      	lsrs	r2, r2, #5
 802480c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024810:	4311      	orrs	r1, r2
 8024812:	f8ae 1000 	strh.w	r1, [lr]
 8024816:	e79e      	b.n	8024756 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024818:	b013      	add	sp, #76	; 0x4c
 802481a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802481e:	bf00      	nop
 8024820:	200137cc 	.word	0x200137cc

08024824 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8024824:	b570      	push	{r4, r5, r6, lr}
 8024826:	1208      	asrs	r0, r1, #8
 8024828:	b29e      	uxth	r6, r3
 802482a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802482e:	1213      	asrs	r3, r2, #8
 8024830:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024834:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024838:	fb13 f305 	smulbb	r3, r3, r5
 802483c:	fb10 f006 	smulbb	r0, r0, r6
 8024840:	4418      	add	r0, r3
 8024842:	10cc      	asrs	r4, r1, #3
 8024844:	10d3      	asrs	r3, r2, #3
 8024846:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802484a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802484e:	fb13 f305 	smulbb	r3, r3, r5
 8024852:	fb14 f406 	smulbb	r4, r4, r6
 8024856:	00c9      	lsls	r1, r1, #3
 8024858:	00d2      	lsls	r2, r2, #3
 802485a:	441c      	add	r4, r3
 802485c:	b2d2      	uxtb	r2, r2
 802485e:	b2cb      	uxtb	r3, r1
 8024860:	fb12 f205 	smulbb	r2, r2, r5
 8024864:	b280      	uxth	r0, r0
 8024866:	fb13 f306 	smulbb	r3, r3, r6
 802486a:	4413      	add	r3, r2
 802486c:	1c42      	adds	r2, r0, #1
 802486e:	b29b      	uxth	r3, r3
 8024870:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024874:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8024878:	1c58      	adds	r0, r3, #1
 802487a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802487e:	b2a4      	uxth	r4, r4
 8024880:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024884:	4310      	orrs	r0, r2
 8024886:	1c62      	adds	r2, r4, #1
 8024888:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802488c:	0964      	lsrs	r4, r4, #5
 802488e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8024892:	4320      	orrs	r0, r4
 8024894:	bd70      	pop	{r4, r5, r6, pc}
	...

08024898 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8024898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802489c:	b08f      	sub	sp, #60	; 0x3c
 802489e:	461c      	mov	r4, r3
 80248a0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80248a4:	9004      	str	r0, [sp, #16]
 80248a6:	460d      	mov	r5, r1
 80248a8:	4616      	mov	r6, r2
 80248aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80248ac:	2f00      	cmp	r7, #0
 80248ae:	f000 80f6 	beq.w	8024a9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80248b2:	6820      	ldr	r0, [r4, #0]
 80248b4:	6861      	ldr	r1, [r4, #4]
 80248b6:	aa0a      	add	r2, sp, #40	; 0x28
 80248b8:	c203      	stmia	r2!, {r0, r1}
 80248ba:	6818      	ldr	r0, [r3, #0]
 80248bc:	6859      	ldr	r1, [r3, #4]
 80248be:	aa0c      	add	r2, sp, #48	; 0x30
 80248c0:	c203      	stmia	r2!, {r0, r1}
 80248c2:	a80a      	add	r0, sp, #40	; 0x28
 80248c4:	f7ef fc90 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80248c8:	4621      	mov	r1, r4
 80248ca:	a80c      	add	r0, sp, #48	; 0x30
 80248cc:	f7ef fcd0 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80248d0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80248d4:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80248d8:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80248dc:	f002 0301 	and.w	r3, r2, #1
 80248e0:	9306      	str	r3, [sp, #24]
 80248e2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80248e6:	f003 0101 	and.w	r1, r3, #1
 80248ea:	9105      	str	r1, [sp, #20]
 80248ec:	9805      	ldr	r0, [sp, #20]
 80248ee:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80248f2:	4403      	add	r3, r0
 80248f4:	fb01 2303 	mla	r3, r1, r3, r2
 80248f8:	f04f 0802 	mov.w	r8, #2
 80248fc:	fb93 f3f8 	sdiv	r3, r3, r8
 8024900:	441d      	add	r5, r3
 8024902:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8024906:	441a      	add	r2, r3
 8024908:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802490c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8024910:	4419      	add	r1, r3
 8024912:	4b64      	ldr	r3, [pc, #400]	; (8024aa4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8024914:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8024918:	6818      	ldr	r0, [r3, #0]
 802491a:	6803      	ldr	r3, [r0, #0]
 802491c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802491e:	4798      	blx	r3
 8024920:	4a61      	ldr	r2, [pc, #388]	; (8024aa8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8024922:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8024926:	8813      	ldrh	r3, [r2, #0]
 8024928:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802492c:	2fff      	cmp	r7, #255	; 0xff
 802492e:	fb03 a404 	mla	r4, r3, r4, sl
 8024932:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024936:	f106 0604 	add.w	r6, r6, #4
 802493a:	4611      	mov	r1, r2
 802493c:	fb03 fb0b 	mul.w	fp, r3, fp
 8024940:	d06b      	beq.n	8024a1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8024942:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8024946:	9303      	str	r3, [sp, #12]
 8024948:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802494c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8024950:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8024954:	9b07      	ldr	r3, [sp, #28]
 8024956:	42a3      	cmp	r3, r4
 8024958:	f240 809c 	bls.w	8024a94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802495c:	9b06      	ldr	r3, [sp, #24]
 802495e:	2b00      	cmp	r3, #0
 8024960:	d039      	beq.n	80249d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8024962:	782b      	ldrb	r3, [r5, #0]
 8024964:	8822      	ldrh	r2, [r4, #0]
 8024966:	9804      	ldr	r0, [sp, #16]
 8024968:	f003 030f 	and.w	r3, r3, #15
 802496c:	f105 0801 	add.w	r8, r5, #1
 8024970:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024974:	9b03      	ldr	r3, [sp, #12]
 8024976:	9300      	str	r3, [sp, #0]
 8024978:	463b      	mov	r3, r7
 802497a:	f7ff ff53 	bl	8024824 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802497e:	f824 0b02 	strh.w	r0, [r4], #2
 8024982:	f109 3bff 	add.w	fp, r9, #4294967295
 8024986:	f1bb 0f01 	cmp.w	fp, #1
 802498a:	46a2      	mov	sl, r4
 802498c:	f104 0404 	add.w	r4, r4, #4
 8024990:	dd24      	ble.n	80249dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8024992:	f898 3000 	ldrb.w	r3, [r8]
 8024996:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802499a:	9804      	ldr	r0, [sp, #16]
 802499c:	091b      	lsrs	r3, r3, #4
 802499e:	f1ab 0b02 	sub.w	fp, fp, #2
 80249a2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80249a6:	9b03      	ldr	r3, [sp, #12]
 80249a8:	9300      	str	r3, [sp, #0]
 80249aa:	463b      	mov	r3, r7
 80249ac:	f7ff ff3a 	bl	8024824 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80249b0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80249b4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80249b8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80249bc:	9804      	ldr	r0, [sp, #16]
 80249be:	f003 030f 	and.w	r3, r3, #15
 80249c2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80249c6:	9b03      	ldr	r3, [sp, #12]
 80249c8:	9300      	str	r3, [sp, #0]
 80249ca:	463b      	mov	r3, r7
 80249cc:	f7ff ff2a 	bl	8024824 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80249d0:	f824 0c02 	strh.w	r0, [r4, #-2]
 80249d4:	e7d7      	b.n	8024986 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80249d6:	46a8      	mov	r8, r5
 80249d8:	46cb      	mov	fp, r9
 80249da:	e7d4      	b.n	8024986 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80249dc:	d10e      	bne.n	80249fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80249de:	f898 3000 	ldrb.w	r3, [r8]
 80249e2:	f8ba 2000 	ldrh.w	r2, [sl]
 80249e6:	9804      	ldr	r0, [sp, #16]
 80249e8:	091b      	lsrs	r3, r3, #4
 80249ea:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80249ee:	9b03      	ldr	r3, [sp, #12]
 80249f0:	9300      	str	r3, [sp, #0]
 80249f2:	463b      	mov	r3, r7
 80249f4:	f7ff ff16 	bl	8024824 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80249f8:	f82a 0b02 	strh.w	r0, [sl], #2
 80249fc:	9b08      	ldr	r3, [sp, #32]
 80249fe:	9a05      	ldr	r2, [sp, #20]
 8024a00:	881c      	ldrh	r4, [r3, #0]
 8024a02:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024a06:	eba4 0409 	sub.w	r4, r4, r9
 8024a0a:	4413      	add	r3, r2
 8024a0c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8024a10:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024a12:	fb93 f3f2 	sdiv	r3, r3, r2
 8024a16:	441d      	add	r5, r3
 8024a18:	e79c      	b.n	8024954 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8024a1a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8024a1e:	45a3      	cmp	fp, r4
 8024a20:	d938      	bls.n	8024a94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8024a22:	9b06      	ldr	r3, [sp, #24]
 8024a24:	b1f3      	cbz	r3, 8024a64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8024a26:	782b      	ldrb	r3, [r5, #0]
 8024a28:	f003 030f 	and.w	r3, r3, #15
 8024a2c:	1c6a      	adds	r2, r5, #1
 8024a2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024a32:	8023      	strh	r3, [r4, #0]
 8024a34:	f109 30ff 	add.w	r0, r9, #4294967295
 8024a38:	3402      	adds	r4, #2
 8024a3a:	2801      	cmp	r0, #1
 8024a3c:	4623      	mov	r3, r4
 8024a3e:	f104 0404 	add.w	r4, r4, #4
 8024a42:	dd12      	ble.n	8024a6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8024a44:	7813      	ldrb	r3, [r2, #0]
 8024a46:	091b      	lsrs	r3, r3, #4
 8024a48:	3802      	subs	r0, #2
 8024a4a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024a4e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8024a52:	f812 3b01 	ldrb.w	r3, [r2], #1
 8024a56:	f003 030f 	and.w	r3, r3, #15
 8024a5a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024a5e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8024a62:	e7ea      	b.n	8024a3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024a64:	462a      	mov	r2, r5
 8024a66:	4648      	mov	r0, r9
 8024a68:	e7e7      	b.n	8024a3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024a6a:	d106      	bne.n	8024a7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8024a6c:	7812      	ldrb	r2, [r2, #0]
 8024a6e:	0912      	lsrs	r2, r2, #4
 8024a70:	3302      	adds	r3, #2
 8024a72:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8024a76:	f823 2c02 	strh.w	r2, [r3, #-2]
 8024a7a:	880c      	ldrh	r4, [r1, #0]
 8024a7c:	9a05      	ldr	r2, [sp, #20]
 8024a7e:	eba4 0409 	sub.w	r4, r4, r9
 8024a82:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8024a86:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024a8a:	4413      	add	r3, r2
 8024a8c:	fb93 f3f8 	sdiv	r3, r3, r8
 8024a90:	441d      	add	r5, r3
 8024a92:	e7c4      	b.n	8024a1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8024a94:	4b03      	ldr	r3, [pc, #12]	; (8024aa4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8024a96:	6818      	ldr	r0, [r3, #0]
 8024a98:	6803      	ldr	r3, [r0, #0]
 8024a9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024a9c:	4798      	blx	r3
 8024a9e:	b00f      	add	sp, #60	; 0x3c
 8024aa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024aa4:	200137bc 	.word	0x200137bc
 8024aa8:	200137b6 	.word	0x200137b6

08024aac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8024aac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8024aae:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8024ab2:	2dff      	cmp	r5, #255	; 0xff
 8024ab4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8024ab8:	d10c      	bne.n	8024ad4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8024aba:	2bff      	cmp	r3, #255	; 0xff
 8024abc:	d10a      	bne.n	8024ad4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8024abe:	4b25      	ldr	r3, [pc, #148]	; (8024b54 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8024ac0:	0948      	lsrs	r0, r1, #5
 8024ac2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024ac6:	403b      	ands	r3, r7
 8024ac8:	4318      	orrs	r0, r3
 8024aca:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024ace:	4308      	orrs	r0, r1
 8024ad0:	b280      	uxth	r0, r0
 8024ad2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024ad4:	fb15 f503 	smulbb	r5, r5, r3
 8024ad8:	b2ab      	uxth	r3, r5
 8024ada:	1c5d      	adds	r5, r3, #1
 8024adc:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8024ae0:	1214      	asrs	r4, r2, #8
 8024ae2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8024ae6:	fa1f fc85 	uxth.w	ip, r5
 8024aea:	10d6      	asrs	r6, r2, #3
 8024aec:	00d0      	lsls	r0, r2, #3
 8024aee:	43ed      	mvns	r5, r5
 8024af0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024af4:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8024af8:	b2eb      	uxtb	r3, r5
 8024afa:	b2c0      	uxtb	r0, r0
 8024afc:	fb12 f20c 	smulbb	r2, r2, ip
 8024b00:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024b04:	fb04 2403 	mla	r4, r4, r3, r2
 8024b08:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8024b0c:	b2c8      	uxtb	r0, r1
 8024b0e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024b12:	b2fd      	uxtb	r5, r7
 8024b14:	fb10 f00c 	smulbb	r0, r0, ip
 8024b18:	b2a4      	uxth	r4, r4
 8024b1a:	fb02 0003 	mla	r0, r2, r3, r0
 8024b1e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8024b22:	fb15 f50c 	smulbb	r5, r5, ip
 8024b26:	fb06 5503 	mla	r5, r6, r3, r5
 8024b2a:	b283      	uxth	r3, r0
 8024b2c:	1c60      	adds	r0, r4, #1
 8024b2e:	b2ad      	uxth	r5, r5
 8024b30:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8024b34:	1c58      	adds	r0, r3, #1
 8024b36:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024b3a:	1c6b      	adds	r3, r5, #1
 8024b3c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024b40:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024b44:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024b48:	096d      	lsrs	r5, r5, #5
 8024b4a:	4320      	orrs	r0, r4
 8024b4c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024b50:	4328      	orrs	r0, r5
 8024b52:	e7be      	b.n	8024ad2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8024b54:	00fff800 	.word	0x00fff800

08024b58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8024b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b5c:	461c      	mov	r4, r3
 8024b5e:	b08d      	sub	sp, #52	; 0x34
 8024b60:	460d      	mov	r5, r1
 8024b62:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024b64:	6861      	ldr	r1, [r4, #4]
 8024b66:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8024b6a:	4680      	mov	r8, r0
 8024b6c:	6820      	ldr	r0, [r4, #0]
 8024b6e:	4616      	mov	r6, r2
 8024b70:	aa08      	add	r2, sp, #32
 8024b72:	c203      	stmia	r2!, {r0, r1}
 8024b74:	6818      	ldr	r0, [r3, #0]
 8024b76:	6859      	ldr	r1, [r3, #4]
 8024b78:	aa0a      	add	r2, sp, #40	; 0x28
 8024b7a:	c203      	stmia	r2!, {r0, r1}
 8024b7c:	a808      	add	r0, sp, #32
 8024b7e:	f7ef fb33 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024b82:	4621      	mov	r1, r4
 8024b84:	a80a      	add	r0, sp, #40	; 0x28
 8024b86:	f7ef fb73 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024b8a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8024b8e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8024b92:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8024b96:	f002 0301 	and.w	r3, r2, #1
 8024b9a:	9303      	str	r3, [sp, #12]
 8024b9c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8024ba0:	f003 0101 	and.w	r1, r3, #1
 8024ba4:	9102      	str	r1, [sp, #8]
 8024ba6:	9802      	ldr	r0, [sp, #8]
 8024ba8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8024bac:	4403      	add	r3, r0
 8024bae:	fb01 2303 	mla	r3, r1, r3, r2
 8024bb2:	f04f 0a02 	mov.w	sl, #2
 8024bb6:	fb93 f3fa 	sdiv	r3, r3, sl
 8024bba:	441d      	add	r5, r3
 8024bbc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8024bc0:	441a      	add	r2, r3
 8024bc2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8024bc6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8024bca:	4a3f      	ldr	r2, [pc, #252]	; (8024cc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8024bcc:	9205      	str	r2, [sp, #20]
 8024bce:	4419      	add	r1, r3
 8024bd0:	6810      	ldr	r0, [r2, #0]
 8024bd2:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8024bd6:	6803      	ldr	r3, [r0, #0]
 8024bd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024bda:	4798      	blx	r3
 8024bdc:	4b3b      	ldr	r3, [pc, #236]	; (8024ccc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8024bde:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8024be2:	8819      	ldrh	r1, [r3, #0]
 8024be4:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8024be8:	fb01 c404 	mla	r4, r1, r4, ip
 8024bec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024bf0:	434f      	muls	r7, r1
 8024bf2:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8024bf6:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8024bfa:	3604      	adds	r6, #4
 8024bfc:	9204      	str	r2, [sp, #16]
 8024bfe:	9b04      	ldr	r3, [sp, #16]
 8024c00:	429c      	cmp	r4, r3
 8024c02:	d258      	bcs.n	8024cb6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8024c04:	9b03      	ldr	r3, [sp, #12]
 8024c06:	2b00      	cmp	r3, #0
 8024c08:	d034      	beq.n	8024c74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8024c0a:	782b      	ldrb	r3, [r5, #0]
 8024c0c:	f003 030f 	and.w	r3, r3, #15
 8024c10:	1c6f      	adds	r7, r5, #1
 8024c12:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8024c16:	0e0b      	lsrs	r3, r1, #24
 8024c18:	d006      	beq.n	8024c28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8024c1a:	8822      	ldrh	r2, [r4, #0]
 8024c1c:	9300      	str	r3, [sp, #0]
 8024c1e:	4640      	mov	r0, r8
 8024c20:	464b      	mov	r3, r9
 8024c22:	f7ff ff43 	bl	8024aac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8024c26:	8020      	strh	r0, [r4, #0]
 8024c28:	3402      	adds	r4, #2
 8024c2a:	f10b 3aff 	add.w	sl, fp, #4294967295
 8024c2e:	f1ba 0f01 	cmp.w	sl, #1
 8024c32:	dd22      	ble.n	8024c7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8024c34:	783b      	ldrb	r3, [r7, #0]
 8024c36:	091b      	lsrs	r3, r3, #4
 8024c38:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8024c3c:	0e0b      	lsrs	r3, r1, #24
 8024c3e:	d006      	beq.n	8024c4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8024c40:	8822      	ldrh	r2, [r4, #0]
 8024c42:	9300      	str	r3, [sp, #0]
 8024c44:	4640      	mov	r0, r8
 8024c46:	464b      	mov	r3, r9
 8024c48:	f7ff ff30 	bl	8024aac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8024c4c:	8020      	strh	r0, [r4, #0]
 8024c4e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8024c52:	f003 030f 	and.w	r3, r3, #15
 8024c56:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8024c5a:	0e0b      	lsrs	r3, r1, #24
 8024c5c:	d006      	beq.n	8024c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8024c5e:	8862      	ldrh	r2, [r4, #2]
 8024c60:	9300      	str	r3, [sp, #0]
 8024c62:	4640      	mov	r0, r8
 8024c64:	464b      	mov	r3, r9
 8024c66:	f7ff ff21 	bl	8024aac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8024c6a:	8060      	strh	r0, [r4, #2]
 8024c6c:	3404      	adds	r4, #4
 8024c6e:	f1aa 0a02 	sub.w	sl, sl, #2
 8024c72:	e7dc      	b.n	8024c2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8024c74:	462f      	mov	r7, r5
 8024c76:	46da      	mov	sl, fp
 8024c78:	e7d9      	b.n	8024c2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8024c7a:	d10d      	bne.n	8024c98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8024c7c:	783b      	ldrb	r3, [r7, #0]
 8024c7e:	091b      	lsrs	r3, r3, #4
 8024c80:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8024c84:	0e0b      	lsrs	r3, r1, #24
 8024c86:	d006      	beq.n	8024c96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8024c88:	8822      	ldrh	r2, [r4, #0]
 8024c8a:	9300      	str	r3, [sp, #0]
 8024c8c:	4640      	mov	r0, r8
 8024c8e:	464b      	mov	r3, r9
 8024c90:	f7ff ff0c 	bl	8024aac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8024c94:	8020      	strh	r0, [r4, #0]
 8024c96:	3402      	adds	r4, #2
 8024c98:	9b06      	ldr	r3, [sp, #24]
 8024c9a:	9a02      	ldr	r2, [sp, #8]
 8024c9c:	881b      	ldrh	r3, [r3, #0]
 8024c9e:	eba3 030b 	sub.w	r3, r3, fp
 8024ca2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8024ca6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8024caa:	4413      	add	r3, r2
 8024cac:	9a07      	ldr	r2, [sp, #28]
 8024cae:	fb93 f3f2 	sdiv	r3, r3, r2
 8024cb2:	441d      	add	r5, r3
 8024cb4:	e7a3      	b.n	8024bfe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8024cb6:	9b05      	ldr	r3, [sp, #20]
 8024cb8:	6818      	ldr	r0, [r3, #0]
 8024cba:	6803      	ldr	r3, [r0, #0]
 8024cbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024cbe:	4798      	blx	r3
 8024cc0:	b00d      	add	sp, #52	; 0x34
 8024cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024cc6:	bf00      	nop
 8024cc8:	200137bc 	.word	0x200137bc
 8024ccc:	200137b6 	.word	0x200137b6

08024cd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8024cd0:	b570      	push	{r4, r5, r6, lr}
 8024cd2:	1214      	asrs	r4, r2, #8
 8024cd4:	788d      	ldrb	r5, [r1, #2]
 8024cd6:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8024cda:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024cde:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024ce2:	fb15 f503 	smulbb	r5, r5, r3
 8024ce6:	fb04 5506 	mla	r5, r4, r6, r5
 8024cea:	10d0      	asrs	r0, r2, #3
 8024cec:	784c      	ldrb	r4, [r1, #1]
 8024cee:	7809      	ldrb	r1, [r1, #0]
 8024cf0:	00d2      	lsls	r2, r2, #3
 8024cf2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024cf6:	b2d2      	uxtb	r2, r2
 8024cf8:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8024cfc:	fb14 f403 	smulbb	r4, r4, r3
 8024d00:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8024d04:	fb11 f303 	smulbb	r3, r1, r3
 8024d08:	fb00 4406 	mla	r4, r0, r6, r4
 8024d0c:	fb02 3306 	mla	r3, r2, r6, r3
 8024d10:	b2ad      	uxth	r5, r5
 8024d12:	b29b      	uxth	r3, r3
 8024d14:	b2a4      	uxth	r4, r4
 8024d16:	1c68      	adds	r0, r5, #1
 8024d18:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8024d1c:	1c62      	adds	r2, r4, #1
 8024d1e:	1c58      	adds	r0, r3, #1
 8024d20:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024d24:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8024d28:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024d2c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024d30:	0964      	lsrs	r4, r4, #5
 8024d32:	4328      	orrs	r0, r5
 8024d34:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8024d38:	4320      	orrs	r0, r4
 8024d3a:	bd70      	pop	{r4, r5, r6, pc}

08024d3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8024d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d40:	b08f      	sub	sp, #60	; 0x3c
 8024d42:	461c      	mov	r4, r3
 8024d44:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8024d48:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024d4a:	4682      	mov	sl, r0
 8024d4c:	460e      	mov	r6, r1
 8024d4e:	4615      	mov	r5, r2
 8024d50:	2f00      	cmp	r7, #0
 8024d52:	f000 8142 	beq.w	8024fda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8024d56:	6820      	ldr	r0, [r4, #0]
 8024d58:	6861      	ldr	r1, [r4, #4]
 8024d5a:	aa0a      	add	r2, sp, #40	; 0x28
 8024d5c:	c203      	stmia	r2!, {r0, r1}
 8024d5e:	6818      	ldr	r0, [r3, #0]
 8024d60:	6859      	ldr	r1, [r3, #4]
 8024d62:	aa0c      	add	r2, sp, #48	; 0x30
 8024d64:	c203      	stmia	r2!, {r0, r1}
 8024d66:	a80a      	add	r0, sp, #40	; 0x28
 8024d68:	f7ef fa3e 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024d6c:	4621      	mov	r1, r4
 8024d6e:	a80c      	add	r0, sp, #48	; 0x30
 8024d70:	f7ef fa7e 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024d74:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8024d78:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8024d7c:	f002 0301 	and.w	r3, r2, #1
 8024d80:	9306      	str	r3, [sp, #24]
 8024d82:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024d86:	f003 0101 	and.w	r1, r3, #1
 8024d8a:	9105      	str	r1, [sp, #20]
 8024d8c:	9805      	ldr	r0, [sp, #20]
 8024d8e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8024d92:	4403      	add	r3, r0
 8024d94:	fb01 2303 	mla	r3, r1, r3, r2
 8024d98:	f04f 0802 	mov.w	r8, #2
 8024d9c:	fb93 f3f8 	sdiv	r3, r3, r8
 8024da0:	441e      	add	r6, r3
 8024da2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8024da6:	441a      	add	r2, r3
 8024da8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8024dac:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8024db0:	4419      	add	r1, r3
 8024db2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8024db6:	9303      	str	r3, [sp, #12]
 8024db8:	4b89      	ldr	r3, [pc, #548]	; (8024fe0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8024dba:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8024dbe:	6818      	ldr	r0, [r3, #0]
 8024dc0:	6803      	ldr	r3, [r0, #0]
 8024dc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024dc4:	4798      	blx	r3
 8024dc6:	4a87      	ldr	r2, [pc, #540]	; (8024fe4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8024dc8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8024dcc:	8813      	ldrh	r3, [r2, #0]
 8024dce:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8024dd2:	2fff      	cmp	r7, #255	; 0xff
 8024dd4:	fb03 9404 	mla	r4, r3, r4, r9
 8024dd8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024ddc:	f105 0504 	add.w	r5, r5, #4
 8024de0:	4694      	mov	ip, r2
 8024de2:	fb03 f30b 	mul.w	r3, r3, fp
 8024de6:	d071      	beq.n	8024ecc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8024de8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024dec:	43f9      	mvns	r1, r7
 8024dee:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8024df2:	b2c9      	uxtb	r1, r1
 8024df4:	9104      	str	r1, [sp, #16]
 8024df6:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8024dfa:	9b07      	ldr	r3, [sp, #28]
 8024dfc:	42a3      	cmp	r3, r4
 8024dfe:	f240 80e7 	bls.w	8024fd0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8024e02:	9b06      	ldr	r3, [sp, #24]
 8024e04:	2b00      	cmp	r3, #0
 8024e06:	d03d      	beq.n	8024e84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8024e08:	7831      	ldrb	r1, [r6, #0]
 8024e0a:	9b04      	ldr	r3, [sp, #16]
 8024e0c:	8822      	ldrh	r2, [r4, #0]
 8024e0e:	9300      	str	r3, [sp, #0]
 8024e10:	f001 010f 	and.w	r1, r1, #15
 8024e14:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024e18:	463b      	mov	r3, r7
 8024e1a:	4429      	add	r1, r5
 8024e1c:	4650      	mov	r0, sl
 8024e1e:	f7ff ff57 	bl	8024cd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8024e22:	9b03      	ldr	r3, [sp, #12]
 8024e24:	f824 0b02 	strh.w	r0, [r4], #2
 8024e28:	f106 0801 	add.w	r8, r6, #1
 8024e2c:	f103 3bff 	add.w	fp, r3, #4294967295
 8024e30:	f1bb 0f01 	cmp.w	fp, #1
 8024e34:	46a1      	mov	r9, r4
 8024e36:	f104 0404 	add.w	r4, r4, #4
 8024e3a:	dd27      	ble.n	8024e8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8024e3c:	f898 1000 	ldrb.w	r1, [r8]
 8024e40:	9b04      	ldr	r3, [sp, #16]
 8024e42:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8024e46:	9300      	str	r3, [sp, #0]
 8024e48:	0909      	lsrs	r1, r1, #4
 8024e4a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024e4e:	463b      	mov	r3, r7
 8024e50:	4429      	add	r1, r5
 8024e52:	4650      	mov	r0, sl
 8024e54:	f7ff ff3c 	bl	8024cd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8024e58:	f824 0c04 	strh.w	r0, [r4, #-4]
 8024e5c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8024e60:	9b04      	ldr	r3, [sp, #16]
 8024e62:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8024e66:	9300      	str	r3, [sp, #0]
 8024e68:	f001 010f 	and.w	r1, r1, #15
 8024e6c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024e70:	463b      	mov	r3, r7
 8024e72:	4429      	add	r1, r5
 8024e74:	4650      	mov	r0, sl
 8024e76:	f7ff ff2b 	bl	8024cd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8024e7a:	f1ab 0b02 	sub.w	fp, fp, #2
 8024e7e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8024e82:	e7d5      	b.n	8024e30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8024e84:	46b0      	mov	r8, r6
 8024e86:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8024e8a:	e7d1      	b.n	8024e30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8024e8c:	d10f      	bne.n	8024eae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8024e8e:	f898 1000 	ldrb.w	r1, [r8]
 8024e92:	9b04      	ldr	r3, [sp, #16]
 8024e94:	f8b9 2000 	ldrh.w	r2, [r9]
 8024e98:	9300      	str	r3, [sp, #0]
 8024e9a:	0909      	lsrs	r1, r1, #4
 8024e9c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024ea0:	463b      	mov	r3, r7
 8024ea2:	4429      	add	r1, r5
 8024ea4:	4650      	mov	r0, sl
 8024ea6:	f7ff ff13 	bl	8024cd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8024eaa:	f829 0b02 	strh.w	r0, [r9], #2
 8024eae:	9b08      	ldr	r3, [sp, #32]
 8024eb0:	9a05      	ldr	r2, [sp, #20]
 8024eb2:	881c      	ldrh	r4, [r3, #0]
 8024eb4:	9b03      	ldr	r3, [sp, #12]
 8024eb6:	1ae4      	subs	r4, r4, r3
 8024eb8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024ebc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8024ec0:	4413      	add	r3, r2
 8024ec2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024ec4:	fb93 f3f2 	sdiv	r3, r3, r2
 8024ec8:	441e      	add	r6, r3
 8024eca:	e796      	b.n	8024dfa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8024ecc:	4f46      	ldr	r7, [pc, #280]	; (8024fe8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8024ece:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024ed2:	42a3      	cmp	r3, r4
 8024ed4:	d97c      	bls.n	8024fd0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8024ed6:	9a06      	ldr	r2, [sp, #24]
 8024ed8:	2a00      	cmp	r2, #0
 8024eda:	d054      	beq.n	8024f86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8024edc:	7830      	ldrb	r0, [r6, #0]
 8024ede:	f000 000f 	and.w	r0, r0, #15
 8024ee2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024ee6:	eb05 0e00 	add.w	lr, r5, r0
 8024eea:	5c28      	ldrb	r0, [r5, r0]
 8024eec:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8024ef0:	f89e e001 	ldrb.w	lr, [lr, #1]
 8024ef4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024ef8:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8024efc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8024f00:	ea42 020e 	orr.w	r2, r2, lr
 8024f04:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8024f08:	f824 2b02 	strh.w	r2, [r4], #2
 8024f0c:	9a03      	ldr	r2, [sp, #12]
 8024f0e:	1c71      	adds	r1, r6, #1
 8024f10:	f102 3eff 	add.w	lr, r2, #4294967295
 8024f14:	f1be 0f01 	cmp.w	lr, #1
 8024f18:	4620      	mov	r0, r4
 8024f1a:	f104 0404 	add.w	r4, r4, #4
 8024f1e:	dd36      	ble.n	8024f8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8024f20:	7808      	ldrb	r0, [r1, #0]
 8024f22:	0900      	lsrs	r0, r0, #4
 8024f24:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024f28:	eb05 0a00 	add.w	sl, r5, r0
 8024f2c:	f1ae 0e02 	sub.w	lr, lr, #2
 8024f30:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8024f34:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8024f38:	00d2      	lsls	r2, r2, #3
 8024f3a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8024f3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024f42:	ea49 0202 	orr.w	r2, r9, r2
 8024f46:	f815 9000 	ldrb.w	r9, [r5, r0]
 8024f4a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8024f4e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8024f52:	f811 0b01 	ldrb.w	r0, [r1], #1
 8024f56:	f000 000f 	and.w	r0, r0, #15
 8024f5a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024f5e:	eb05 0a00 	add.w	sl, r5, r0
 8024f62:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8024f66:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8024f6a:	00d2      	lsls	r2, r2, #3
 8024f6c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8024f70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024f74:	ea49 0202 	orr.w	r2, r9, r2
 8024f78:	f815 9000 	ldrb.w	r9, [r5, r0]
 8024f7c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8024f80:	f824 2c02 	strh.w	r2, [r4, #-2]
 8024f84:	e7c6      	b.n	8024f14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8024f86:	4631      	mov	r1, r6
 8024f88:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8024f8c:	e7c2      	b.n	8024f14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8024f8e:	d111      	bne.n	8024fb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8024f90:	7809      	ldrb	r1, [r1, #0]
 8024f92:	0909      	lsrs	r1, r1, #4
 8024f94:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024f98:	186c      	adds	r4, r5, r1
 8024f9a:	5c69      	ldrb	r1, [r5, r1]
 8024f9c:	78a2      	ldrb	r2, [r4, #2]
 8024f9e:	7864      	ldrb	r4, [r4, #1]
 8024fa0:	00e4      	lsls	r4, r4, #3
 8024fa2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8024fa6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8024faa:	4322      	orrs	r2, r4
 8024fac:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8024fb0:	f820 2b02 	strh.w	r2, [r0], #2
 8024fb4:	9a03      	ldr	r2, [sp, #12]
 8024fb6:	f8bc 4000 	ldrh.w	r4, [ip]
 8024fba:	9905      	ldr	r1, [sp, #20]
 8024fbc:	1aa4      	subs	r4, r4, r2
 8024fbe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8024fc2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024fc6:	440a      	add	r2, r1
 8024fc8:	fb92 f2f8 	sdiv	r2, r2, r8
 8024fcc:	4416      	add	r6, r2
 8024fce:	e780      	b.n	8024ed2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8024fd0:	4b03      	ldr	r3, [pc, #12]	; (8024fe0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8024fd2:	6818      	ldr	r0, [r3, #0]
 8024fd4:	6803      	ldr	r3, [r0, #0]
 8024fd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024fd8:	4798      	blx	r3
 8024fda:	b00f      	add	sp, #60	; 0x3c
 8024fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024fe0:	200137bc 	.word	0x200137bc
 8024fe4:	200137b6 	.word	0x200137b6
 8024fe8:	fffff800 	.word	0xfffff800

08024fec <CRC_Lock>:
 8024fec:	b530      	push	{r4, r5, lr}
 8024fee:	4a20      	ldr	r2, [pc, #128]	; (8025070 <CRC_Lock+0x84>)
 8024ff0:	6813      	ldr	r3, [r2, #0]
 8024ff2:	f023 0301 	bic.w	r3, r3, #1
 8024ff6:	6013      	str	r3, [r2, #0]
 8024ff8:	4b1e      	ldr	r3, [pc, #120]	; (8025074 <CRC_Lock+0x88>)
 8024ffa:	681a      	ldr	r2, [r3, #0]
 8024ffc:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025000:	4022      	ands	r2, r4
 8025002:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025006:	42aa      	cmp	r2, r5
 8025008:	d005      	beq.n	8025016 <CRC_Lock+0x2a>
 802500a:	681b      	ldr	r3, [r3, #0]
 802500c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025010:	4023      	ands	r3, r4
 8025012:	4293      	cmp	r3, r2
 8025014:	d124      	bne.n	8025060 <CRC_Lock+0x74>
 8025016:	4b18      	ldr	r3, [pc, #96]	; (8025078 <CRC_Lock+0x8c>)
 8025018:	681b      	ldr	r3, [r3, #0]
 802501a:	bb0b      	cbnz	r3, 8025060 <CRC_Lock+0x74>
 802501c:	4b17      	ldr	r3, [pc, #92]	; (802507c <CRC_Lock+0x90>)
 802501e:	681a      	ldr	r2, [r3, #0]
 8025020:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025024:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025028:	d00d      	beq.n	8025046 <CRC_Lock+0x5a>
 802502a:	681a      	ldr	r2, [r3, #0]
 802502c:	f240 4483 	movw	r4, #1155	; 0x483
 8025030:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025034:	42a2      	cmp	r2, r4
 8025036:	d006      	beq.n	8025046 <CRC_Lock+0x5a>
 8025038:	681b      	ldr	r3, [r3, #0]
 802503a:	f240 4285 	movw	r2, #1157	; 0x485
 802503e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025042:	4293      	cmp	r3, r2
 8025044:	d10c      	bne.n	8025060 <CRC_Lock+0x74>
 8025046:	4b0e      	ldr	r3, [pc, #56]	; (8025080 <CRC_Lock+0x94>)
 8025048:	2201      	movs	r2, #1
 802504a:	601a      	str	r2, [r3, #0]
 802504c:	681a      	ldr	r2, [r3, #0]
 802504e:	2a00      	cmp	r2, #0
 8025050:	d1fc      	bne.n	802504c <CRC_Lock+0x60>
 8025052:	4b0c      	ldr	r3, [pc, #48]	; (8025084 <CRC_Lock+0x98>)
 8025054:	6018      	str	r0, [r3, #0]
 8025056:	6818      	ldr	r0, [r3, #0]
 8025058:	1a43      	subs	r3, r0, r1
 802505a:	4258      	negs	r0, r3
 802505c:	4158      	adcs	r0, r3
 802505e:	bd30      	pop	{r4, r5, pc}
 8025060:	4b09      	ldr	r3, [pc, #36]	; (8025088 <CRC_Lock+0x9c>)
 8025062:	2201      	movs	r2, #1
 8025064:	601a      	str	r2, [r3, #0]
 8025066:	681a      	ldr	r2, [r3, #0]
 8025068:	2a00      	cmp	r2, #0
 802506a:	d1fc      	bne.n	8025066 <CRC_Lock+0x7a>
 802506c:	4b07      	ldr	r3, [pc, #28]	; (802508c <CRC_Lock+0xa0>)
 802506e:	e7f1      	b.n	8025054 <CRC_Lock+0x68>
 8025070:	e0002000 	.word	0xe0002000
 8025074:	e000ed00 	.word	0xe000ed00
 8025078:	e0042000 	.word	0xe0042000
 802507c:	5c001000 	.word	0x5c001000
 8025080:	58024c08 	.word	0x58024c08
 8025084:	58024c00 	.word	0x58024c00
 8025088:	40023008 	.word	0x40023008
 802508c:	40023000 	.word	0x40023000

08025090 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025090:	6101      	str	r1, [r0, #16]
 8025092:	4770      	bx	lr

08025094 <_ZN8touchgfx8Gestures4tickEv>:
 8025094:	7b83      	ldrb	r3, [r0, #14]
 8025096:	b14b      	cbz	r3, 80250ac <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025098:	8903      	ldrh	r3, [r0, #8]
 802509a:	3301      	adds	r3, #1
 802509c:	b29b      	uxth	r3, r3
 802509e:	2b07      	cmp	r3, #7
 80250a0:	8103      	strh	r3, [r0, #8]
 80250a2:	bf81      	itttt	hi
 80250a4:	2300      	movhi	r3, #0
 80250a6:	8143      	strhhi	r3, [r0, #10]
 80250a8:	8183      	strhhi	r3, [r0, #12]
 80250aa:	7383      	strbhi	r3, [r0, #14]
 80250ac:	4770      	bx	lr
	...

080250b0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80250b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80250b4:	4698      	mov	r8, r3
 80250b6:	8883      	ldrh	r3, [r0, #4]
 80250b8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80250bc:	eba8 0303 	sub.w	r3, r8, r3
 80250c0:	b21b      	sxth	r3, r3
 80250c2:	4604      	mov	r4, r0
 80250c4:	2b00      	cmp	r3, #0
 80250c6:	4617      	mov	r7, r2
 80250c8:	4a18      	ldr	r2, [pc, #96]	; (802512c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80250ca:	9200      	str	r2, [sp, #0]
 80250cc:	bfb8      	it	lt
 80250ce:	425b      	neglt	r3, r3
 80250d0:	8aa2      	ldrh	r2, [r4, #20]
 80250d2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80250d6:	f8ad 800a 	strh.w	r8, [sp, #10]
 80250da:	b21b      	sxth	r3, r3
 80250dc:	460e      	mov	r6, r1
 80250de:	4293      	cmp	r3, r2
 80250e0:	88c1      	ldrh	r1, [r0, #6]
 80250e2:	f8ad 1008 	strh.w	r1, [sp, #8]
 80250e6:	f04f 0000 	mov.w	r0, #0
 80250ea:	f88d 0004 	strb.w	r0, [sp, #4]
 80250ee:	f8ad 500c 	strh.w	r5, [sp, #12]
 80250f2:	dc07      	bgt.n	8025104 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80250f4:	1a69      	subs	r1, r5, r1
 80250f6:	b209      	sxth	r1, r1
 80250f8:	2900      	cmp	r1, #0
 80250fa:	bfb8      	it	lt
 80250fc:	4249      	neglt	r1, r1
 80250fe:	b209      	sxth	r1, r1
 8025100:	428a      	cmp	r2, r1
 8025102:	da10      	bge.n	8025126 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025104:	6920      	ldr	r0, [r4, #16]
 8025106:	6803      	ldr	r3, [r0, #0]
 8025108:	4669      	mov	r1, sp
 802510a:	685b      	ldr	r3, [r3, #4]
 802510c:	4798      	blx	r3
 802510e:	eba8 0606 	sub.w	r6, r8, r6
 8025112:	2300      	movs	r3, #0
 8025114:	1bef      	subs	r7, r5, r7
 8025116:	2001      	movs	r0, #1
 8025118:	8123      	strh	r3, [r4, #8]
 802511a:	8166      	strh	r6, [r4, #10]
 802511c:	81a7      	strh	r7, [r4, #12]
 802511e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025122:	80e5      	strh	r5, [r4, #6]
 8025124:	73a0      	strb	r0, [r4, #14]
 8025126:	b004      	add	sp, #16
 8025128:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802512c:	0802c348 	.word	0x0802c348

08025130 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025130:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025132:	461e      	mov	r6, r3
 8025134:	1e4b      	subs	r3, r1, #1
 8025136:	2b01      	cmp	r3, #1
 8025138:	b085      	sub	sp, #20
 802513a:	4604      	mov	r4, r0
 802513c:	460d      	mov	r5, r1
 802513e:	4617      	mov	r7, r2
 8025140:	d84b      	bhi.n	80251da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025142:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025146:	1cd3      	adds	r3, r2, #3
 8025148:	b29b      	uxth	r3, r3
 802514a:	2b06      	cmp	r3, #6
 802514c:	d916      	bls.n	802517c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802514e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80251f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025152:	f8cd c004 	str.w	ip, [sp, #4]
 8025156:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802515a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802515e:	6900      	ldr	r0, [r0, #16]
 8025160:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025164:	f04f 0c00 	mov.w	ip, #0
 8025168:	f88d c008 	strb.w	ip, [sp, #8]
 802516c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025170:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025174:	6803      	ldr	r3, [r0, #0]
 8025176:	a901      	add	r1, sp, #4
 8025178:	689b      	ldr	r3, [r3, #8]
 802517a:	4798      	blx	r3
 802517c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025180:	1cd3      	adds	r3, r2, #3
 8025182:	b29b      	uxth	r3, r3
 8025184:	2b06      	cmp	r3, #6
 8025186:	d916      	bls.n	80251b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025188:	f8df c064 	ldr.w	ip, [pc, #100]	; 80251f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802518c:	f8cd c004 	str.w	ip, [sp, #4]
 8025190:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025194:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025198:	6920      	ldr	r0, [r4, #16]
 802519a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802519e:	f04f 0c01 	mov.w	ip, #1
 80251a2:	f88d c008 	strb.w	ip, [sp, #8]
 80251a6:	f8ad 200a 	strh.w	r2, [sp, #10]
 80251aa:	f8ad 300e 	strh.w	r3, [sp, #14]
 80251ae:	6803      	ldr	r3, [r0, #0]
 80251b0:	a901      	add	r1, sp, #4
 80251b2:	689b      	ldr	r3, [r3, #8]
 80251b4:	4798      	blx	r3
 80251b6:	4b0d      	ldr	r3, [pc, #52]	; (80251ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80251b8:	9301      	str	r3, [sp, #4]
 80251ba:	6920      	ldr	r0, [r4, #16]
 80251bc:	f88d 5008 	strb.w	r5, [sp, #8]
 80251c0:	2300      	movs	r3, #0
 80251c2:	f8ad 700a 	strh.w	r7, [sp, #10]
 80251c6:	f8ad 600c 	strh.w	r6, [sp, #12]
 80251ca:	f8ad 300e 	strh.w	r3, [sp, #14]
 80251ce:	6803      	ldr	r3, [r0, #0]
 80251d0:	a901      	add	r1, sp, #4
 80251d2:	681b      	ldr	r3, [r3, #0]
 80251d4:	4798      	blx	r3
 80251d6:	b005      	add	sp, #20
 80251d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80251da:	2900      	cmp	r1, #0
 80251dc:	d1eb      	bne.n	80251b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80251de:	80a2      	strh	r2, [r4, #4]
 80251e0:	80c6      	strh	r6, [r0, #6]
 80251e2:	60a1      	str	r1, [r4, #8]
 80251e4:	81a1      	strh	r1, [r4, #12]
 80251e6:	73a1      	strb	r1, [r4, #14]
 80251e8:	e7e5      	b.n	80251b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80251ea:	bf00      	nop
 80251ec:	0802c334 	.word	0x0802c334
 80251f0:	0802c35c 	.word	0x0802c35c

080251f4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80251f4:	10c9      	asrs	r1, r1, #3
 80251f6:	2900      	cmp	r1, #0
 80251f8:	bfb8      	it	lt
 80251fa:	4249      	neglt	r1, r1
 80251fc:	2801      	cmp	r0, #1
 80251fe:	d108      	bne.n	8025212 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025200:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025204:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025208:	4601      	mov	r1, r0
 802520a:	dd02      	ble.n	8025212 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802520c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025210:	4770      	bx	lr
 8025212:	29ff      	cmp	r1, #255	; 0xff
 8025214:	bfa8      	it	ge
 8025216:	21ff      	movge	r1, #255	; 0xff
 8025218:	4608      	mov	r0, r1
 802521a:	4770      	bx	lr

0802521c <_ZN8touchgfx10Rasterizer6lineToEii>:
 802521c:	b410      	push	{r4}
 802521e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025222:	429c      	cmp	r4, r3
 8025224:	d803      	bhi.n	802522e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025226:	f85d 4b04 	ldr.w	r4, [sp], #4
 802522a:	f7ed bae3 	b.w	80127f4 <_ZN8touchgfx7Outline6lineToEii>
 802522e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025232:	4770      	bx	lr

08025234 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025238:	b08b      	sub	sp, #44	; 0x2c
 802523a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802523e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025242:	9308      	str	r3, [sp, #32]
 8025244:	4606      	mov	r6, r0
 8025246:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802524a:	9309      	str	r3, [sp, #36]	; 0x24
 802524c:	468a      	mov	sl, r1
 802524e:	f7ed fc3e 	bl	8012ace <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8025252:	68b5      	ldr	r5, [r6, #8]
 8025254:	4604      	mov	r4, r0
 8025256:	2d00      	cmp	r5, #0
 8025258:	d044      	beq.n	80252e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802525a:	6873      	ldr	r3, [r6, #4]
 802525c:	42ab      	cmp	r3, r5
 802525e:	d33d      	bcc.n	80252dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8025260:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025264:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025268:	eb02 0b03 	add.w	fp, r2, r3
 802526c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8025270:	fb02 1203 	mla	r2, r2, r3, r1
 8025274:	9205      	str	r2, [sp, #20]
 8025276:	1e6a      	subs	r2, r5, #1
 8025278:	9204      	str	r2, [sp, #16]
 802527a:	f04f 0800 	mov.w	r8, #0
 802527e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8025282:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025286:	454b      	cmp	r3, r9
 8025288:	463a      	mov	r2, r7
 802528a:	d008      	beq.n	802529e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802528c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025290:	eb03 0b09 	add.w	fp, r3, r9
 8025294:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025298:	fb03 1309 	mla	r3, r3, r9, r1
 802529c:	9305      	str	r3, [sp, #20]
 802529e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80252a2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80252a6:	4498      	add	r8, r3
 80252a8:	9b04      	ldr	r3, [sp, #16]
 80252aa:	3b01      	subs	r3, #1
 80252ac:	9304      	str	r3, [sp, #16]
 80252ae:	9b04      	ldr	r3, [sp, #16]
 80252b0:	3301      	adds	r3, #1
 80252b2:	d015      	beq.n	80252e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80252b4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80252b8:	42bb      	cmp	r3, r7
 80252ba:	d117      	bne.n	80252ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80252bc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80252c0:	9b04      	ldr	r3, [sp, #16]
 80252c2:	4548      	cmp	r0, r9
 80252c4:	f103 33ff 	add.w	r3, r3, #4294967295
 80252c8:	d17f      	bne.n	80253ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80252ca:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80252ce:	4401      	add	r1, r0
 80252d0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80252d4:	4480      	add	r8, r0
 80252d6:	e7e9      	b.n	80252ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80252d8:	461f      	mov	r7, r3
 80252da:	e044      	b.n	8025366 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80252dc:	2000      	movs	r0, #0
 80252de:	e002      	b.n	80252e6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80252e0:	2900      	cmp	r1, #0
 80252e2:	d16f      	bne.n	80253c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80252e4:	2001      	movs	r0, #1
 80252e6:	b00b      	add	sp, #44	; 0x2c
 80252e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80252ec:	2900      	cmp	r1, #0
 80252ee:	d030      	beq.n	8025352 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80252f0:	2f00      	cmp	r7, #0
 80252f2:	db29      	blt.n	8025348 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80252f4:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80252f8:	42bb      	cmp	r3, r7
 80252fa:	dd25      	ble.n	8025348 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80252fc:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8025300:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025304:	f7ff ff76 	bl	80251f4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025308:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802530a:	fb10 f003 	smulbb	r0, r0, r3
 802530e:	b280      	uxth	r0, r0
 8025310:	1c41      	adds	r1, r0, #1
 8025312:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025316:	1209      	asrs	r1, r1, #8
 8025318:	f011 0fff 	tst.w	r1, #255	; 0xff
 802531c:	d014      	beq.n	8025348 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802531e:	9808      	ldr	r0, [sp, #32]
 8025320:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025322:	b2c9      	uxtb	r1, r1
 8025324:	b2ba      	uxth	r2, r7
 8025326:	9102      	str	r1, [sp, #8]
 8025328:	2101      	movs	r1, #1
 802532a:	4413      	add	r3, r2
 802532c:	9101      	str	r1, [sp, #4]
 802532e:	4402      	add	r2, r0
 8025330:	fa0f f18b 	sxth.w	r1, fp
 8025334:	f8da 0000 	ldr.w	r0, [sl]
 8025338:	9100      	str	r1, [sp, #0]
 802533a:	6941      	ldr	r1, [r0, #20]
 802533c:	b21b      	sxth	r3, r3
 802533e:	460d      	mov	r5, r1
 8025340:	b212      	sxth	r2, r2
 8025342:	9905      	ldr	r1, [sp, #20]
 8025344:	4650      	mov	r0, sl
 8025346:	47a8      	blx	r5
 8025348:	9b04      	ldr	r3, [sp, #16]
 802534a:	3301      	adds	r3, #1
 802534c:	f107 0201 	add.w	r2, r7, #1
 8025350:	d0c8      	beq.n	80252e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025352:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025356:	1abb      	subs	r3, r7, r2
 8025358:	2b00      	cmp	r3, #0
 802535a:	dd31      	ble.n	80253c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802535c:	2a00      	cmp	r2, #0
 802535e:	dabb      	bge.n	80252d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8025360:	2f00      	cmp	r7, #0
 8025362:	dd2d      	ble.n	80253c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025364:	2200      	movs	r2, #0
 8025366:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802536a:	19d1      	adds	r1, r2, r7
 802536c:	4299      	cmp	r1, r3
 802536e:	db02      	blt.n	8025376 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8025370:	1a9f      	subs	r7, r3, r2
 8025372:	2f00      	cmp	r7, #0
 8025374:	dd24      	ble.n	80253c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025376:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802537a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802537e:	f7ff ff39 	bl	80251f4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025382:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025384:	fb10 f003 	smulbb	r0, r0, r3
 8025388:	b280      	uxth	r0, r0
 802538a:	1c41      	adds	r1, r0, #1
 802538c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025390:	1209      	asrs	r1, r1, #8
 8025392:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025396:	d013      	beq.n	80253c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025398:	9808      	ldr	r0, [sp, #32]
 802539a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802539c:	b292      	uxth	r2, r2
 802539e:	b2c9      	uxtb	r1, r1
 80253a0:	4413      	add	r3, r2
 80253a2:	9102      	str	r1, [sp, #8]
 80253a4:	4402      	add	r2, r0
 80253a6:	b23f      	sxth	r7, r7
 80253a8:	f8da 0000 	ldr.w	r0, [sl]
 80253ac:	9701      	str	r7, [sp, #4]
 80253ae:	fa0f f18b 	sxth.w	r1, fp
 80253b2:	9100      	str	r1, [sp, #0]
 80253b4:	6947      	ldr	r7, [r0, #20]
 80253b6:	9905      	ldr	r1, [sp, #20]
 80253b8:	b21b      	sxth	r3, r3
 80253ba:	b212      	sxth	r2, r2
 80253bc:	4650      	mov	r0, sl
 80253be:	47b8      	blx	r7
 80253c0:	464b      	mov	r3, r9
 80253c2:	e75c      	b.n	802527e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80253c4:	2f00      	cmp	r7, #0
 80253c6:	da95      	bge.n	80252f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80253c8:	e78c      	b.n	80252e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80253ca:	2900      	cmp	r1, #0
 80253cc:	d0f8      	beq.n	80253c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80253ce:	e78f      	b.n	80252f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080253d0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80253d0:	4b4b      	ldr	r3, [pc, #300]	; (8025500 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 80253d2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80253d6:	2500      	movs	r5, #0
 80253d8:	f100 0620 	add.w	r6, r0, #32
 80253dc:	4604      	mov	r4, r0
 80253de:	e9c0 3100 	strd	r3, r1, [r0]
 80253e2:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80253e6:	e9c0 5504 	strd	r5, r5, [r0, #16]
 80253ea:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80253ee:	f100 0718 	add.w	r7, r0, #24
 80253f2:	4630      	mov	r0, r6
 80253f4:	4690      	mov	r8, r2
 80253f6:	f7ec fd35 	bl	8011e64 <_ZN8touchgfx7OutlineC1Ev>
 80253fa:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80253fe:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8025402:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8025406:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802540a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802540e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8025412:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8025416:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802541a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802541e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025422:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025426:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802542a:	9500      	str	r5, [sp, #0]
 802542c:	4410      	add	r0, r2
 802542e:	b280      	uxth	r0, r0
 8025430:	fa0f fa80 	sxth.w	sl, r0
 8025434:	45aa      	cmp	sl, r5
 8025436:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802543a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802543e:	dd5c      	ble.n	80254fa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025440:	4591      	cmp	r9, r2
 8025442:	dd5a      	ble.n	80254fa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025444:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8025448:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802544c:	440b      	add	r3, r1
 802544e:	b29b      	uxth	r3, r3
 8025450:	b21d      	sxth	r5, r3
 8025452:	2d00      	cmp	r5, #0
 8025454:	dd51      	ble.n	80254fa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025456:	458e      	cmp	lr, r1
 8025458:	dd4f      	ble.n	80254fa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802545a:	45d1      	cmp	r9, sl
 802545c:	bfb8      	it	lt
 802545e:	fa1f f089 	uxthlt.w	r0, r9
 8025462:	45ae      	cmp	lr, r5
 8025464:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8025468:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 802546c:	bfb8      	it	lt
 802546e:	fa1f f38e 	uxthlt.w	r3, lr
 8025472:	1a80      	subs	r0, r0, r2
 8025474:	1a5b      	subs	r3, r3, r1
 8025476:	f8ad 0004 	strh.w	r0, [sp, #4]
 802547a:	f8ad 3006 	strh.w	r3, [sp, #6]
 802547e:	f8ad 2000 	strh.w	r2, [sp]
 8025482:	f8ad 1002 	strh.w	r1, [sp, #2]
 8025486:	466d      	mov	r5, sp
 8025488:	e895 0003 	ldmia.w	r5, {r0, r1}
 802548c:	e887 0003 	stmia.w	r7, {r0, r1}
 8025490:	f8dc 3000 	ldr.w	r3, [ip]
 8025494:	4660      	mov	r0, ip
 8025496:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025498:	4639      	mov	r1, r7
 802549a:	4798      	blx	r3
 802549c:	6861      	ldr	r1, [r4, #4]
 802549e:	4628      	mov	r0, r5
 80254a0:	3104      	adds	r1, #4
 80254a2:	f7ee fee5 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80254a6:	4638      	mov	r0, r7
 80254a8:	f7ee fe9e 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80254ac:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80254b0:	f8bd 2000 	ldrh.w	r2, [sp]
 80254b4:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80254b8:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80254bc:	4630      	mov	r0, r6
 80254be:	f7ec fcb5 	bl	8011e2c <_ZN8touchgfx7Outline5resetEv>
 80254c2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80254c6:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80254ca:	015b      	lsls	r3, r3, #5
 80254cc:	60a3      	str	r3, [r4, #8]
 80254ce:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80254d2:	015b      	lsls	r3, r3, #5
 80254d4:	60e3      	str	r3, [r4, #12]
 80254d6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80254da:	015b      	lsls	r3, r3, #5
 80254dc:	6123      	str	r3, [r4, #16]
 80254de:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80254e2:	015b      	lsls	r3, r3, #5
 80254e4:	6163      	str	r3, [r4, #20]
 80254e6:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80254ea:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80254ee:	4620      	mov	r0, r4
 80254f0:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80254f4:	b002      	add	sp, #8
 80254f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80254fa:	2300      	movs	r3, #0
 80254fc:	9301      	str	r3, [sp, #4]
 80254fe:	e7c2      	b.n	8025486 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8025500:	0802c680 	.word	0x0802c680

08025504 <_ZN8touchgfx6Canvas5closeEv>:
 8025504:	b538      	push	{r3, r4, r5, lr}
 8025506:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802550a:	4604      	mov	r4, r0
 802550c:	b193      	cbz	r3, 8025534 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802550e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8025512:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8025516:	4213      	tst	r3, r2
 8025518:	d10c      	bne.n	8025534 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802551a:	f100 0520 	add.w	r5, r0, #32
 802551e:	b123      	cbz	r3, 802552a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8025520:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8025524:	4628      	mov	r0, r5
 8025526:	f7ff fe79 	bl	802521c <_ZN8touchgfx10Rasterizer6lineToEii>
 802552a:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802552e:	4628      	mov	r0, r5
 8025530:	f7ff fe74 	bl	802521c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025534:	2300      	movs	r3, #0
 8025536:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802553a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802553e:	4298      	cmp	r0, r3
 8025540:	bf34      	ite	cc
 8025542:	2000      	movcc	r0, #0
 8025544:	2001      	movcs	r0, #1
 8025546:	bd38      	pop	{r3, r4, r5, pc}

08025548 <_ZN8touchgfx6Canvas6renderEh>:
 8025548:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802554c:	4604      	mov	r4, r0
 802554e:	6840      	ldr	r0, [r0, #4]
 8025550:	6803      	ldr	r3, [r0, #0]
 8025552:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8025554:	460d      	mov	r5, r1
 8025556:	4798      	blx	r3
 8025558:	fb10 f105 	smulbb	r1, r0, r5
 802555c:	b289      	uxth	r1, r1
 802555e:	1c4d      	adds	r5, r1, #1
 8025560:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025564:	122d      	asrs	r5, r5, #8
 8025566:	f000 809d 	beq.w	80256a4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802556a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802556e:	2b00      	cmp	r3, #0
 8025570:	f000 8098 	beq.w	80256a4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025574:	4620      	mov	r0, r4
 8025576:	f7ff ffc5 	bl	8025504 <_ZN8touchgfx6Canvas5closeEv>
 802557a:	4607      	mov	r7, r0
 802557c:	2800      	cmp	r0, #0
 802557e:	d048      	beq.n	8025612 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8025580:	6863      	ldr	r3, [r4, #4]
 8025582:	4e49      	ldr	r6, [pc, #292]	; (80256a8 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8025584:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025586:	6837      	ldr	r7, [r6, #0]
 8025588:	6803      	ldr	r3, [r0, #0]
 802558a:	689b      	ldr	r3, [r3, #8]
 802558c:	4798      	blx	r3
 802558e:	4601      	mov	r1, r0
 8025590:	4638      	mov	r0, r7
 8025592:	f7ea fdb9 	bl	8010108 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8025596:	4607      	mov	r7, r0
 8025598:	f7dd fe80 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 802559c:	6803      	ldr	r3, [r0, #0]
 802559e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80255a0:	4798      	blx	r3
 80255a2:	4680      	mov	r8, r0
 80255a4:	f7dd fe7a 	bl	800329c <_ZN8touchgfx3HAL3lcdEv>
 80255a8:	6803      	ldr	r3, [r0, #0]
 80255aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80255ac:	4798      	blx	r3
 80255ae:	280b      	cmp	r0, #11
 80255b0:	d85d      	bhi.n	802566e <_ZN8touchgfx6Canvas6renderEh+0x126>
 80255b2:	e8df f000 	tbb	[pc, r0]
 80255b6:	5e53      	.short	0x5e53
 80255b8:	325c066e 	.word	0x325c066e
 80255bc:	67676742 	.word	0x67676742
 80255c0:	6767      	.short	0x6767
 80255c2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80255c6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80255ca:	2208      	movs	r2, #8
 80255cc:	fb91 f2f2 	sdiv	r2, r1, r2
 80255d0:	fb08 2303 	mla	r3, r8, r3, r2
 80255d4:	441f      	add	r7, r3
 80255d6:	424b      	negs	r3, r1
 80255d8:	f003 0307 	and.w	r3, r3, #7
 80255dc:	f001 0107 	and.w	r1, r1, #7
 80255e0:	bf58      	it	pl
 80255e2:	4259      	negpl	r1, r3
 80255e4:	b2c9      	uxtb	r1, r1
 80255e6:	b2ed      	uxtb	r5, r5
 80255e8:	e9cd 1500 	strd	r1, r5, [sp]
 80255ec:	6860      	ldr	r0, [r4, #4]
 80255ee:	463a      	mov	r2, r7
 80255f0:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80255f2:	fa0f f388 	sxth.w	r3, r8
 80255f6:	f104 0020 	add.w	r0, r4, #32
 80255fa:	f7ff fe1b 	bl	8025234 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80255fe:	6863      	ldr	r3, [r4, #4]
 8025600:	4607      	mov	r7, r0
 8025602:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025604:	6803      	ldr	r3, [r0, #0]
 8025606:	691b      	ldr	r3, [r3, #16]
 8025608:	4798      	blx	r3
 802560a:	6830      	ldr	r0, [r6, #0]
 802560c:	6803      	ldr	r3, [r0, #0]
 802560e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025610:	4798      	blx	r3
 8025612:	4638      	mov	r0, r7
 8025614:	b002      	add	sp, #8
 8025616:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802561a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802561e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025622:	2204      	movs	r2, #4
 8025624:	fb91 f2f2 	sdiv	r2, r1, r2
 8025628:	fb08 2303 	mla	r3, r8, r3, r2
 802562c:	441f      	add	r7, r3
 802562e:	424b      	negs	r3, r1
 8025630:	f003 0303 	and.w	r3, r3, #3
 8025634:	f001 0103 	and.w	r1, r1, #3
 8025638:	e7d2      	b.n	80255e0 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802563a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802563e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025642:	2900      	cmp	r1, #0
 8025644:	f04f 0202 	mov.w	r2, #2
 8025648:	fb91 f2f2 	sdiv	r2, r1, r2
 802564c:	f001 0101 	and.w	r1, r1, #1
 8025650:	fb08 2303 	mla	r3, r8, r3, r2
 8025654:	441f      	add	r7, r3
 8025656:	bfb8      	it	lt
 8025658:	4249      	neglt	r1, r1
 802565a:	e7c3      	b.n	80255e4 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802565c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025660:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025664:	fb08 f303 	mul.w	r3, r8, r3
 8025668:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802566c:	441f      	add	r7, r3
 802566e:	2100      	movs	r1, #0
 8025670:	e7b9      	b.n	80255e6 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8025672:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025676:	fb08 f203 	mul.w	r2, r8, r3
 802567a:	8b23      	ldrh	r3, [r4, #24]
 802567c:	2103      	movs	r1, #3
 802567e:	fb13 2301 	smlabb	r3, r3, r1, r2
 8025682:	e7f3      	b.n	802566c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025684:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025688:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802568c:	fb08 2303 	mla	r3, r8, r3, r2
 8025690:	e7ec      	b.n	802566c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025692:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025696:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802569a:	fb08 f303 	mul.w	r3, r8, r3
 802569e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80256a2:	e7e3      	b.n	802566c <_ZN8touchgfx6Canvas6renderEh+0x124>
 80256a4:	2701      	movs	r7, #1
 80256a6:	e7b4      	b.n	8025612 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80256a8:	200137bc 	.word	0x200137bc

080256ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80256ac:	b510      	push	{r4, lr}
 80256ae:	4b07      	ldr	r3, [pc, #28]	; (80256cc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80256b0:	781b      	ldrb	r3, [r3, #0]
 80256b2:	2b01      	cmp	r3, #1
 80256b4:	d108      	bne.n	80256c8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80256b6:	6843      	ldr	r3, [r0, #4]
 80256b8:	6814      	ldr	r4, [r2, #0]
 80256ba:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80256be:	680b      	ldr	r3, [r1, #0]
 80256c0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80256c4:	6013      	str	r3, [r2, #0]
 80256c6:	600c      	str	r4, [r1, #0]
 80256c8:	bd10      	pop	{r4, pc}
 80256ca:	bf00      	nop
 80256cc:	200137b4 	.word	0x200137b4

080256d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80256d0:	b513      	push	{r0, r1, r4, lr}
 80256d2:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80256d6:	4604      	mov	r4, r0
 80256d8:	e9cd 2100 	strd	r2, r1, [sp]
 80256dc:	b9a3      	cbnz	r3, 8025708 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80256de:	466a      	mov	r2, sp
 80256e0:	a901      	add	r1, sp, #4
 80256e2:	4620      	mov	r0, r4
 80256e4:	f7ff ffe2 	bl	80256ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80256e8:	68a3      	ldr	r3, [r4, #8]
 80256ea:	9901      	ldr	r1, [sp, #4]
 80256ec:	9a00      	ldr	r2, [sp, #0]
 80256ee:	1ac9      	subs	r1, r1, r3
 80256f0:	68e3      	ldr	r3, [r4, #12]
 80256f2:	9101      	str	r1, [sp, #4]
 80256f4:	1ad2      	subs	r2, r2, r3
 80256f6:	2a00      	cmp	r2, #0
 80256f8:	9200      	str	r2, [sp, #0]
 80256fa:	da0b      	bge.n	8025714 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80256fc:	2301      	movs	r3, #1
 80256fe:	2900      	cmp	r1, #0
 8025700:	da0e      	bge.n	8025720 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8025702:	f043 0304 	orr.w	r3, r3, #4
 8025706:	e013      	b.n	8025730 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8025708:	f7ff fefc 	bl	8025504 <_ZN8touchgfx6Canvas5closeEv>
 802570c:	2800      	cmp	r0, #0
 802570e:	d1e6      	bne.n	80256de <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8025710:	b002      	add	sp, #8
 8025712:	bd10      	pop	{r4, pc}
 8025714:	6963      	ldr	r3, [r4, #20]
 8025716:	429a      	cmp	r2, r3
 8025718:	bfac      	ite	ge
 802571a:	2302      	movge	r3, #2
 802571c:	2300      	movlt	r3, #0
 802571e:	e7ee      	b.n	80256fe <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8025720:	6920      	ldr	r0, [r4, #16]
 8025722:	4281      	cmp	r1, r0
 8025724:	bfac      	ite	ge
 8025726:	2008      	movge	r0, #8
 8025728:	2000      	movlt	r0, #0
 802572a:	4318      	orrs	r0, r3
 802572c:	b2c3      	uxtb	r3, r0
 802572e:	b158      	cbz	r0, 8025748 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8025730:	2200      	movs	r2, #0
 8025732:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8025736:	9901      	ldr	r1, [sp, #4]
 8025738:	9a00      	ldr	r2, [sp, #0]
 802573a:	66a1      	str	r1, [r4, #104]	; 0x68
 802573c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802573e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8025742:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8025746:	e7e3      	b.n	8025710 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8025748:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802574c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8025750:	4298      	cmp	r0, r3
 8025752:	d803      	bhi.n	802575c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8025754:	f104 0020 	add.w	r0, r4, #32
 8025758:	f7ed f866 	bl	8012828 <_ZN8touchgfx7Outline6moveToEii>
 802575c:	2301      	movs	r3, #1
 802575e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025762:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8025766:	2300      	movs	r3, #0
 8025768:	e7e5      	b.n	8025736 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802576a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802576c:	ab02      	add	r3, sp, #8
 802576e:	4604      	mov	r4, r0
 8025770:	f843 2d08 	str.w	r2, [r3, #-8]!
 8025774:	9101      	str	r1, [sp, #4]
 8025776:	461a      	mov	r2, r3
 8025778:	a901      	add	r1, sp, #4
 802577a:	f7ff ff97 	bl	80256ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802577e:	68a3      	ldr	r3, [r4, #8]
 8025780:	9901      	ldr	r1, [sp, #4]
 8025782:	9a00      	ldr	r2, [sp, #0]
 8025784:	1ac9      	subs	r1, r1, r3
 8025786:	68e3      	ldr	r3, [r4, #12]
 8025788:	9101      	str	r1, [sp, #4]
 802578a:	1ad2      	subs	r2, r2, r3
 802578c:	2a00      	cmp	r2, #0
 802578e:	9200      	str	r2, [sp, #0]
 8025790:	db1c      	blt.n	80257cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8025792:	6963      	ldr	r3, [r4, #20]
 8025794:	429a      	cmp	r2, r3
 8025796:	bfac      	ite	ge
 8025798:	2002      	movge	r0, #2
 802579a:	2000      	movlt	r0, #0
 802579c:	2900      	cmp	r1, #0
 802579e:	db17      	blt.n	80257d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80257a0:	6923      	ldr	r3, [r4, #16]
 80257a2:	4299      	cmp	r1, r3
 80257a4:	bfac      	ite	ge
 80257a6:	2308      	movge	r3, #8
 80257a8:	2300      	movlt	r3, #0
 80257aa:	4303      	orrs	r3, r0
 80257ac:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80257b0:	b2dd      	uxtb	r5, r3
 80257b2:	b978      	cbnz	r0, 80257d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80257b4:	f104 0020 	add.w	r0, r4, #32
 80257b8:	f7ff fd30 	bl	802521c <_ZN8touchgfx10Rasterizer6lineToEii>
 80257bc:	9b01      	ldr	r3, [sp, #4]
 80257be:	65e3      	str	r3, [r4, #92]	; 0x5c
 80257c0:	9b00      	ldr	r3, [sp, #0]
 80257c2:	6623      	str	r3, [r4, #96]	; 0x60
 80257c4:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80257c8:	b002      	add	sp, #8
 80257ca:	bd70      	pop	{r4, r5, r6, pc}
 80257cc:	2001      	movs	r0, #1
 80257ce:	e7e5      	b.n	802579c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80257d0:	2304      	movs	r3, #4
 80257d2:	e7ea      	b.n	80257aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80257d4:	b113      	cbz	r3, 80257dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80257d6:	ea10 0305 	ands.w	r3, r0, r5
 80257da:	d11c      	bne.n	8025816 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80257dc:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80257e0:	f104 0620 	add.w	r6, r4, #32
 80257e4:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80257e8:	b98b      	cbnz	r3, 802580e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80257ea:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80257ee:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80257f2:	4298      	cmp	r0, r3
 80257f4:	d802      	bhi.n	80257fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80257f6:	4630      	mov	r0, r6
 80257f8:	f7ed f816 	bl	8012828 <_ZN8touchgfx7Outline6moveToEii>
 80257fc:	2301      	movs	r3, #1
 80257fe:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025802:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8025806:	e9dd 2100 	ldrd	r2, r1, [sp]
 802580a:	4630      	mov	r0, r6
 802580c:	e7d4      	b.n	80257b8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802580e:	4630      	mov	r0, r6
 8025810:	f7ff fd04 	bl	802521c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025814:	e7f7      	b.n	8025806 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8025816:	461d      	mov	r5, r3
 8025818:	e7d0      	b.n	80257bc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802581c <_ZN8touchgfx6CanvasD1Ev>:
 802581c:	b510      	push	{r4, lr}
 802581e:	4b04      	ldr	r3, [pc, #16]	; (8025830 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8025820:	4604      	mov	r4, r0
 8025822:	f840 3b20 	str.w	r3, [r0], #32
 8025826:	f7ec faf9 	bl	8011e1c <_ZN8touchgfx7OutlineD1Ev>
 802582a:	4620      	mov	r0, r4
 802582c:	bd10      	pop	{r4, pc}
 802582e:	bf00      	nop
 8025830:	0802c680 	.word	0x0802c680

08025834 <_ZN8touchgfx6CanvasD0Ev>:
 8025834:	b510      	push	{r4, lr}
 8025836:	4604      	mov	r4, r0
 8025838:	f7ff fff0 	bl	802581c <_ZN8touchgfx6CanvasD1Ev>
 802583c:	4620      	mov	r0, r4
 802583e:	2170      	movs	r1, #112	; 0x70
 8025840:	f001 fbe5 	bl	802700e <_ZdlPvj>
 8025844:	4620      	mov	r0, r4
 8025846:	bd10      	pop	{r4, pc}

08025848 <_ZN8touchgfx6CircleD1Ev>:
 8025848:	4770      	bx	lr

0802584a <_ZN8touchgfx6CircleD0Ev>:
 802584a:	b510      	push	{r4, lr}
 802584c:	2148      	movs	r1, #72	; 0x48
 802584e:	4604      	mov	r4, r0
 8025850:	f001 fbdd 	bl	802700e <_ZdlPvj>
 8025854:	4620      	mov	r0, r4
 8025856:	bd10      	pop	{r4, pc}

08025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8025858:	b508      	push	{r3, lr}
 802585a:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802585e:	f7ea ffa9 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025862:	bd08      	pop	{r3, pc}

08025864 <_ZN8touchgfx6CircleC1Ev>:
 8025864:	b510      	push	{r4, lr}
 8025866:	4604      	mov	r4, r0
 8025868:	f7ea fe40 	bl	80104ec <_ZN8touchgfx12CanvasWidgetC1Ev>
 802586c:	4b08      	ldr	r3, [pc, #32]	; (8025890 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802586e:	6023      	str	r3, [r4, #0]
 8025870:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8025874:	2300      	movs	r3, #0
 8025876:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802587a:	f24b 4205 	movw	r2, #46085	; 0xb405
 802587e:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8025882:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8025886:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802588a:	60a3      	str	r3, [r4, #8]
 802588c:	4620      	mov	r0, r4
 802588e:	bd10      	pop	{r4, pc}
 8025890:	0802c694 	.word	0x0802c694

08025894 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8025894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025898:	428a      	cmp	r2, r1
 802589a:	4680      	mov	r8, r0
 802589c:	4610      	mov	r0, r2
 802589e:	4699      	mov	r9, r3
 80258a0:	bfa6      	itte	ge
 80258a2:	460a      	movge	r2, r1
 80258a4:	4603      	movge	r3, r0
 80258a6:	460b      	movlt	r3, r1
 80258a8:	1a99      	subs	r1, r3, r2
 80258aa:	b085      	sub	sp, #20
 80258ac:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80258b0:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80258b4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80258b6:	bfa4      	itt	ge
 80258b8:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80258bc:	2200      	movge	r2, #0
 80258be:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80258c2:	9300      	str	r3, [sp, #0]
 80258c4:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80258c8:	f102 0b01 	add.w	fp, r2, #1
 80258cc:	2c00      	cmp	r4, #0
 80258ce:	f040 80af 	bne.w	8025a30 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80258d2:	4610      	mov	r0, r2
 80258d4:	9201      	str	r2, [sp, #4]
 80258d6:	f7ea ff6d 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80258da:	a903      	add	r1, sp, #12
 80258dc:	9003      	str	r0, [sp, #12]
 80258de:	4650      	mov	r0, sl
 80258e0:	f7ea fe30 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80258e4:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80258e8:	9a01      	ldr	r2, [sp, #4]
 80258ea:	4408      	add	r0, r1
 80258ec:	f8d9 1000 	ldr.w	r1, [r9]
 80258f0:	4281      	cmp	r1, r0
 80258f2:	bfc8      	it	gt
 80258f4:	f8c9 0000 	strgt.w	r0, [r9]
 80258f8:	6839      	ldr	r1, [r7, #0]
 80258fa:	4288      	cmp	r0, r1
 80258fc:	bfc8      	it	gt
 80258fe:	6038      	strgt	r0, [r7, #0]
 8025900:	4610      	mov	r0, r2
 8025902:	f7ff ffa9 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025906:	a903      	add	r1, sp, #12
 8025908:	9003      	str	r0, [sp, #12]
 802590a:	4650      	mov	r0, sl
 802590c:	f7ea fe1a 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025910:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025914:	1a10      	subs	r0, r2, r0
 8025916:	6832      	ldr	r2, [r6, #0]
 8025918:	4282      	cmp	r2, r0
 802591a:	bfc8      	it	gt
 802591c:	6030      	strgt	r0, [r6, #0]
 802591e:	682a      	ldr	r2, [r5, #0]
 8025920:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8025924:	4290      	cmp	r0, r2
 8025926:	fb9b f2f1 	sdiv	r2, fp, r1
 802592a:	fb01 b212 	mls	r2, r1, r2, fp
 802592e:	eba1 0202 	sub.w	r2, r1, r2
 8025932:	bfc8      	it	gt
 8025934:	6028      	strgt	r0, [r5, #0]
 8025936:	fb92 f0f1 	sdiv	r0, r2, r1
 802593a:	fb01 2210 	mls	r2, r1, r0, r2
 802593e:	4493      	add	fp, r2
 8025940:	9b00      	ldr	r3, [sp, #0]
 8025942:	455b      	cmp	r3, fp
 8025944:	db2a      	blt.n	802599c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8025946:	4658      	mov	r0, fp
 8025948:	f7ea ff34 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802594c:	a903      	add	r1, sp, #12
 802594e:	9003      	str	r0, [sp, #12]
 8025950:	4650      	mov	r0, sl
 8025952:	f7ea fdf7 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025956:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802595a:	4410      	add	r0, r2
 802595c:	f8d9 2000 	ldr.w	r2, [r9]
 8025960:	4282      	cmp	r2, r0
 8025962:	bfc8      	it	gt
 8025964:	f8c9 0000 	strgt.w	r0, [r9]
 8025968:	683a      	ldr	r2, [r7, #0]
 802596a:	4290      	cmp	r0, r2
 802596c:	bfc8      	it	gt
 802596e:	6038      	strgt	r0, [r7, #0]
 8025970:	4658      	mov	r0, fp
 8025972:	f7ff ff71 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025976:	a903      	add	r1, sp, #12
 8025978:	9003      	str	r0, [sp, #12]
 802597a:	4650      	mov	r0, sl
 802597c:	f7ea fde2 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025980:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025984:	1a10      	subs	r0, r2, r0
 8025986:	6832      	ldr	r2, [r6, #0]
 8025988:	4282      	cmp	r2, r0
 802598a:	bfc8      	it	gt
 802598c:	6030      	strgt	r0, [r6, #0]
 802598e:	682a      	ldr	r2, [r5, #0]
 8025990:	4290      	cmp	r0, r2
 8025992:	bfc8      	it	gt
 8025994:	6028      	strgt	r0, [r5, #0]
 8025996:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802599a:	e7d1      	b.n	8025940 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802599c:	9b00      	ldr	r3, [sp, #0]
 802599e:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80259a2:	455b      	cmp	r3, fp
 80259a4:	dd27      	ble.n	80259f6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80259a6:	4618      	mov	r0, r3
 80259a8:	f7ea ff04 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80259ac:	a903      	add	r1, sp, #12
 80259ae:	9003      	str	r0, [sp, #12]
 80259b0:	4650      	mov	r0, sl
 80259b2:	f7ea fdc7 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80259b6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80259ba:	4410      	add	r0, r2
 80259bc:	f8d9 2000 	ldr.w	r2, [r9]
 80259c0:	4282      	cmp	r2, r0
 80259c2:	bfc8      	it	gt
 80259c4:	f8c9 0000 	strgt.w	r0, [r9]
 80259c8:	683a      	ldr	r2, [r7, #0]
 80259ca:	4290      	cmp	r0, r2
 80259cc:	bfc8      	it	gt
 80259ce:	6038      	strgt	r0, [r7, #0]
 80259d0:	9800      	ldr	r0, [sp, #0]
 80259d2:	f7ff ff41 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80259d6:	a903      	add	r1, sp, #12
 80259d8:	9003      	str	r0, [sp, #12]
 80259da:	4650      	mov	r0, sl
 80259dc:	f7ea fdb2 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80259e0:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80259e4:	1a10      	subs	r0, r2, r0
 80259e6:	6832      	ldr	r2, [r6, #0]
 80259e8:	4282      	cmp	r2, r0
 80259ea:	bfc8      	it	gt
 80259ec:	6030      	strgt	r0, [r6, #0]
 80259ee:	682a      	ldr	r2, [r5, #0]
 80259f0:	4290      	cmp	r0, r2
 80259f2:	bfc8      	it	gt
 80259f4:	6028      	strgt	r0, [r5, #0]
 80259f6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80259fa:	f8d9 1000 	ldr.w	r1, [r9]
 80259fe:	4291      	cmp	r1, r2
 8025a00:	bfc8      	it	gt
 8025a02:	f8c9 2000 	strgt.w	r2, [r9]
 8025a06:	683a      	ldr	r2, [r7, #0]
 8025a08:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8025a0c:	429a      	cmp	r2, r3
 8025a0e:	bfb8      	it	lt
 8025a10:	603b      	strlt	r3, [r7, #0]
 8025a12:	6832      	ldr	r2, [r6, #0]
 8025a14:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8025a18:	429a      	cmp	r2, r3
 8025a1a:	bfc8      	it	gt
 8025a1c:	6033      	strgt	r3, [r6, #0]
 8025a1e:	682a      	ldr	r2, [r5, #0]
 8025a20:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8025a24:	429a      	cmp	r2, r3
 8025a26:	da00      	bge.n	8025a2a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8025a28:	602b      	str	r3, [r5, #0]
 8025a2a:	b005      	add	sp, #20
 8025a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a30:	2002      	movs	r0, #2
 8025a32:	3401      	adds	r4, #1
 8025a34:	fb94 f4f0 	sdiv	r4, r4, r0
 8025a38:	4610      	mov	r0, r2
 8025a3a:	9201      	str	r2, [sp, #4]
 8025a3c:	f7ea feba 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025a40:	a903      	add	r1, sp, #12
 8025a42:	9003      	str	r0, [sp, #12]
 8025a44:	4650      	mov	r0, sl
 8025a46:	f7ea fd7d 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025a4a:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8025a4e:	9a01      	ldr	r2, [sp, #4]
 8025a50:	4408      	add	r0, r1
 8025a52:	f8d9 1000 	ldr.w	r1, [r9]
 8025a56:	1b03      	subs	r3, r0, r4
 8025a58:	4299      	cmp	r1, r3
 8025a5a:	bfc8      	it	gt
 8025a5c:	f8c9 3000 	strgt.w	r3, [r9]
 8025a60:	6839      	ldr	r1, [r7, #0]
 8025a62:	428b      	cmp	r3, r1
 8025a64:	bfc8      	it	gt
 8025a66:	603b      	strgt	r3, [r7, #0]
 8025a68:	f8d9 1000 	ldr.w	r1, [r9]
 8025a6c:	4420      	add	r0, r4
 8025a6e:	4281      	cmp	r1, r0
 8025a70:	bfc8      	it	gt
 8025a72:	f8c9 0000 	strgt.w	r0, [r9]
 8025a76:	6839      	ldr	r1, [r7, #0]
 8025a78:	4288      	cmp	r0, r1
 8025a7a:	bfc8      	it	gt
 8025a7c:	6038      	strgt	r0, [r7, #0]
 8025a7e:	4610      	mov	r0, r2
 8025a80:	f7ff feea 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025a84:	a903      	add	r1, sp, #12
 8025a86:	9003      	str	r0, [sp, #12]
 8025a88:	4650      	mov	r0, sl
 8025a8a:	f7ea fd5b 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025a8e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025a92:	1a10      	subs	r0, r2, r0
 8025a94:	6832      	ldr	r2, [r6, #0]
 8025a96:	1b01      	subs	r1, r0, r4
 8025a98:	428a      	cmp	r2, r1
 8025a9a:	bfc8      	it	gt
 8025a9c:	6031      	strgt	r1, [r6, #0]
 8025a9e:	682a      	ldr	r2, [r5, #0]
 8025aa0:	4291      	cmp	r1, r2
 8025aa2:	bfc8      	it	gt
 8025aa4:	6029      	strgt	r1, [r5, #0]
 8025aa6:	6832      	ldr	r2, [r6, #0]
 8025aa8:	4420      	add	r0, r4
 8025aaa:	4282      	cmp	r2, r0
 8025aac:	bfc8      	it	gt
 8025aae:	6030      	strgt	r0, [r6, #0]
 8025ab0:	682a      	ldr	r2, [r5, #0]
 8025ab2:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8025ab6:	4290      	cmp	r0, r2
 8025ab8:	fb9b f2f1 	sdiv	r2, fp, r1
 8025abc:	fb01 b212 	mls	r2, r1, r2, fp
 8025ac0:	eba1 0202 	sub.w	r2, r1, r2
 8025ac4:	bfc8      	it	gt
 8025ac6:	6028      	strgt	r0, [r5, #0]
 8025ac8:	fb92 f0f1 	sdiv	r0, r2, r1
 8025acc:	fb01 2210 	mls	r2, r1, r0, r2
 8025ad0:	4493      	add	fp, r2
 8025ad2:	9b00      	ldr	r3, [sp, #0]
 8025ad4:	455b      	cmp	r3, fp
 8025ad6:	db40      	blt.n	8025b5a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8025ad8:	4658      	mov	r0, fp
 8025ada:	f7ea fe6b 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025ade:	a903      	add	r1, sp, #12
 8025ae0:	9003      	str	r0, [sp, #12]
 8025ae2:	4650      	mov	r0, sl
 8025ae4:	f7ea fd2e 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025ae8:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8025aec:	4410      	add	r0, r2
 8025aee:	f8d9 2000 	ldr.w	r2, [r9]
 8025af2:	1b01      	subs	r1, r0, r4
 8025af4:	428a      	cmp	r2, r1
 8025af6:	bfc8      	it	gt
 8025af8:	f8c9 1000 	strgt.w	r1, [r9]
 8025afc:	683a      	ldr	r2, [r7, #0]
 8025afe:	4291      	cmp	r1, r2
 8025b00:	bfc8      	it	gt
 8025b02:	6039      	strgt	r1, [r7, #0]
 8025b04:	f8d9 2000 	ldr.w	r2, [r9]
 8025b08:	4420      	add	r0, r4
 8025b0a:	4282      	cmp	r2, r0
 8025b0c:	bfc8      	it	gt
 8025b0e:	f8c9 0000 	strgt.w	r0, [r9]
 8025b12:	683a      	ldr	r2, [r7, #0]
 8025b14:	4290      	cmp	r0, r2
 8025b16:	bfc8      	it	gt
 8025b18:	6038      	strgt	r0, [r7, #0]
 8025b1a:	4658      	mov	r0, fp
 8025b1c:	f7ff fe9c 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025b20:	a903      	add	r1, sp, #12
 8025b22:	9003      	str	r0, [sp, #12]
 8025b24:	4650      	mov	r0, sl
 8025b26:	f7ea fd0d 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025b2a:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025b2e:	1a10      	subs	r0, r2, r0
 8025b30:	6832      	ldr	r2, [r6, #0]
 8025b32:	1b01      	subs	r1, r0, r4
 8025b34:	428a      	cmp	r2, r1
 8025b36:	bfc8      	it	gt
 8025b38:	6031      	strgt	r1, [r6, #0]
 8025b3a:	682a      	ldr	r2, [r5, #0]
 8025b3c:	4291      	cmp	r1, r2
 8025b3e:	bfc8      	it	gt
 8025b40:	6029      	strgt	r1, [r5, #0]
 8025b42:	6832      	ldr	r2, [r6, #0]
 8025b44:	4420      	add	r0, r4
 8025b46:	4282      	cmp	r2, r0
 8025b48:	bfc8      	it	gt
 8025b4a:	6030      	strgt	r0, [r6, #0]
 8025b4c:	682a      	ldr	r2, [r5, #0]
 8025b4e:	4290      	cmp	r0, r2
 8025b50:	bfc8      	it	gt
 8025b52:	6028      	strgt	r0, [r5, #0]
 8025b54:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8025b58:	e7bb      	b.n	8025ad2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8025b5a:	9b00      	ldr	r3, [sp, #0]
 8025b5c:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8025b60:	455b      	cmp	r3, fp
 8025b62:	f77f af62 	ble.w	8025a2a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8025b66:	4618      	mov	r0, r3
 8025b68:	f7ea fe24 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025b6c:	a903      	add	r1, sp, #12
 8025b6e:	9003      	str	r0, [sp, #12]
 8025b70:	4650      	mov	r0, sl
 8025b72:	f7ea fce7 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025b76:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8025b7a:	4410      	add	r0, r2
 8025b7c:	f8d9 2000 	ldr.w	r2, [r9]
 8025b80:	1b01      	subs	r1, r0, r4
 8025b82:	428a      	cmp	r2, r1
 8025b84:	bfc8      	it	gt
 8025b86:	f8c9 1000 	strgt.w	r1, [r9]
 8025b8a:	683a      	ldr	r2, [r7, #0]
 8025b8c:	4291      	cmp	r1, r2
 8025b8e:	bfc8      	it	gt
 8025b90:	6039      	strgt	r1, [r7, #0]
 8025b92:	f8d9 2000 	ldr.w	r2, [r9]
 8025b96:	4420      	add	r0, r4
 8025b98:	4282      	cmp	r2, r0
 8025b9a:	bfc8      	it	gt
 8025b9c:	f8c9 0000 	strgt.w	r0, [r9]
 8025ba0:	683b      	ldr	r3, [r7, #0]
 8025ba2:	4298      	cmp	r0, r3
 8025ba4:	bfc8      	it	gt
 8025ba6:	6038      	strgt	r0, [r7, #0]
 8025ba8:	9800      	ldr	r0, [sp, #0]
 8025baa:	f7ff fe55 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025bae:	a903      	add	r1, sp, #12
 8025bb0:	9003      	str	r0, [sp, #12]
 8025bb2:	4650      	mov	r0, sl
 8025bb4:	f7ea fcc6 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025bb8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8025bbc:	6832      	ldr	r2, [r6, #0]
 8025bbe:	1a18      	subs	r0, r3, r0
 8025bc0:	1b03      	subs	r3, r0, r4
 8025bc2:	429a      	cmp	r2, r3
 8025bc4:	bfc8      	it	gt
 8025bc6:	6033      	strgt	r3, [r6, #0]
 8025bc8:	682a      	ldr	r2, [r5, #0]
 8025bca:	4293      	cmp	r3, r2
 8025bcc:	bfc8      	it	gt
 8025bce:	602b      	strgt	r3, [r5, #0]
 8025bd0:	6833      	ldr	r3, [r6, #0]
 8025bd2:	4404      	add	r4, r0
 8025bd4:	42a3      	cmp	r3, r4
 8025bd6:	bfc8      	it	gt
 8025bd8:	6034      	strgt	r4, [r6, #0]
 8025bda:	682b      	ldr	r3, [r5, #0]
 8025bdc:	429c      	cmp	r4, r3
 8025bde:	bfc8      	it	gt
 8025be0:	602c      	strgt	r4, [r5, #0]
 8025be2:	e722      	b.n	8025a2a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08025be4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8025be4:	b530      	push	{r4, r5, lr}
 8025be6:	4604      	mov	r4, r0
 8025be8:	4608      	mov	r0, r1
 8025bea:	4611      	mov	r1, r2
 8025bec:	461a      	mov	r2, r3
 8025bee:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8025bf2:	b089      	sub	sp, #36	; 0x24
 8025bf4:	015b      	lsls	r3, r3, #5
 8025bf6:	9304      	str	r3, [sp, #16]
 8025bf8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8025bfc:	2500      	movs	r5, #0
 8025bfe:	015b      	lsls	r3, r3, #5
 8025c00:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8025c04:	ab07      	add	r3, sp, #28
 8025c06:	9302      	str	r3, [sp, #8]
 8025c08:	ab06      	add	r3, sp, #24
 8025c0a:	9301      	str	r3, [sp, #4]
 8025c0c:	ab05      	add	r3, sp, #20
 8025c0e:	9300      	str	r3, [sp, #0]
 8025c10:	ab04      	add	r3, sp, #16
 8025c12:	9505      	str	r5, [sp, #20]
 8025c14:	f7ff fe3e 	bl	8025894 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8025c18:	2520      	movs	r5, #32
 8025c1a:	9a04      	ldr	r2, [sp, #16]
 8025c1c:	9805      	ldr	r0, [sp, #20]
 8025c1e:	fb92 f2f5 	sdiv	r2, r2, r5
 8025c22:	fb90 f0f5 	sdiv	r0, r0, r5
 8025c26:	b292      	uxth	r2, r2
 8025c28:	3002      	adds	r0, #2
 8025c2a:	1a80      	subs	r0, r0, r2
 8025c2c:	9b06      	ldr	r3, [sp, #24]
 8025c2e:	9907      	ldr	r1, [sp, #28]
 8025c30:	fb93 f3f5 	sdiv	r3, r3, r5
 8025c34:	fb91 f1f5 	sdiv	r1, r1, r5
 8025c38:	b29b      	uxth	r3, r3
 8025c3a:	3102      	adds	r1, #2
 8025c3c:	1ac9      	subs	r1, r1, r3
 8025c3e:	3a01      	subs	r2, #1
 8025c40:	3b01      	subs	r3, #1
 8025c42:	80a0      	strh	r0, [r4, #4]
 8025c44:	4620      	mov	r0, r4
 8025c46:	8022      	strh	r2, [r4, #0]
 8025c48:	8063      	strh	r3, [r4, #2]
 8025c4a:	80e1      	strh	r1, [r4, #6]
 8025c4c:	b009      	add	sp, #36	; 0x24
 8025c4e:	bd30      	pop	{r4, r5, pc}

08025c50 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8025c50:	b510      	push	{r4, lr}
 8025c52:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8025c56:	4604      	mov	r4, r0
 8025c58:	f7ff ffc4 	bl	8025be4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8025c5c:	4620      	mov	r0, r4
 8025c5e:	bd10      	pop	{r4, pc}

08025c60 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8025c60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025c62:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8025c66:	4606      	mov	r6, r0
 8025c68:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8025c6c:	6813      	ldr	r3, [r2, #0]
 8025c6e:	42a5      	cmp	r5, r4
 8025c70:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8025c74:	da2b      	bge.n	8025cce <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8025c76:	42a3      	cmp	r3, r4
 8025c78:	dd14      	ble.n	8025ca4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8025c7a:	b168      	cbz	r0, 8025c98 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8025c7c:	4267      	negs	r7, r4
 8025c7e:	fb97 f2f0 	sdiv	r2, r7, r0
 8025c82:	fb00 7212 	mls	r2, r0, r2, r7
 8025c86:	1a82      	subs	r2, r0, r2
 8025c88:	fb92 f7f0 	sdiv	r7, r2, r0
 8025c8c:	fb00 2017 	mls	r0, r0, r7, r2
 8025c90:	1a24      	subs	r4, r4, r0
 8025c92:	42ac      	cmp	r4, r5
 8025c94:	bfb8      	it	lt
 8025c96:	462c      	movlt	r4, r5
 8025c98:	4630      	mov	r0, r6
 8025c9a:	4622      	mov	r2, r4
 8025c9c:	f7ff ffa2 	bl	8025be4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8025ca0:	4630      	mov	r0, r6
 8025ca2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025ca4:	42ab      	cmp	r3, r5
 8025ca6:	dd0e      	ble.n	8025cc6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8025ca8:	b168      	cbz	r0, 8025cc6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8025caa:	425f      	negs	r7, r3
 8025cac:	fb97 f2f0 	sdiv	r2, r7, r0
 8025cb0:	fb00 7212 	mls	r2, r0, r2, r7
 8025cb4:	1a82      	subs	r2, r0, r2
 8025cb6:	fb92 f7f0 	sdiv	r7, r2, r0
 8025cba:	fb00 2017 	mls	r0, r0, r7, r2
 8025cbe:	1a1b      	subs	r3, r3, r0
 8025cc0:	42ab      	cmp	r3, r5
 8025cc2:	bfb8      	it	lt
 8025cc4:	462b      	movlt	r3, r5
 8025cc6:	4622      	mov	r2, r4
 8025cc8:	461c      	mov	r4, r3
 8025cca:	4613      	mov	r3, r2
 8025ccc:	e7e4      	b.n	8025c98 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8025cce:	42a3      	cmp	r3, r4
 8025cd0:	da10      	bge.n	8025cf4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8025cd2:	b148      	cbz	r0, 8025ce8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8025cd4:	fb94 f2f0 	sdiv	r2, r4, r0
 8025cd8:	fb00 4212 	mls	r2, r0, r2, r4
 8025cdc:	1a82      	subs	r2, r0, r2
 8025cde:	fb92 f7f0 	sdiv	r7, r2, r0
 8025ce2:	fb00 2017 	mls	r0, r0, r7, r2
 8025ce6:	4404      	add	r4, r0
 8025ce8:	42a5      	cmp	r5, r4
 8025cea:	bfa8      	it	ge
 8025cec:	4625      	movge	r5, r4
 8025cee:	461c      	mov	r4, r3
 8025cf0:	462b      	mov	r3, r5
 8025cf2:	e7d1      	b.n	8025c98 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8025cf4:	42ab      	cmp	r3, r5
 8025cf6:	dacf      	bge.n	8025c98 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8025cf8:	2800      	cmp	r0, #0
 8025cfa:	d0cd      	beq.n	8025c98 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8025cfc:	fb93 f2f0 	sdiv	r2, r3, r0
 8025d00:	fb00 3212 	mls	r2, r0, r2, r3
 8025d04:	1a82      	subs	r2, r0, r2
 8025d06:	fb92 f7f0 	sdiv	r7, r2, r0
 8025d0a:	fb00 2017 	mls	r0, r0, r7, r2
 8025d0e:	4403      	add	r3, r0
 8025d10:	42ab      	cmp	r3, r5
 8025d12:	bfa8      	it	ge
 8025d14:	462b      	movge	r3, r5
 8025d16:	e7bf      	b.n	8025c98 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08025d18 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8025d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d1c:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8025d20:	42ae      	cmp	r6, r5
 8025d22:	bfa2      	ittt	ge
 8025d24:	4633      	movge	r3, r6
 8025d26:	462e      	movge	r6, r5
 8025d28:	461d      	movge	r5, r3
 8025d2a:	1bab      	subs	r3, r5, r6
 8025d2c:	468b      	mov	fp, r1
 8025d2e:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8025d30:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8025d34:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8025d38:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8025d3c:	f04f 0220 	mov.w	r2, #32
 8025d40:	b0ab      	sub	sp, #172	; 0xac
 8025d42:	4604      	mov	r4, r0
 8025d44:	bfa4      	itt	ge
 8025d46:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8025d4a:	2600      	movge	r6, #0
 8025d4c:	fb99 f9f2 	sdiv	r9, r9, r2
 8025d50:	fb9a faf2 	sdiv	sl, sl, r2
 8025d54:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8025d56:	2900      	cmp	r1, #0
 8025d58:	f000 80f5 	beq.w	8025f46 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8025d5c:	f9bb 0000 	ldrsh.w	r0, [fp]
 8025d60:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8025d64:	eba9 0700 	sub.w	r7, r9, r0
 8025d68:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8025d6c:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8025d70:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8025d74:	ebaa 0802 	sub.w	r8, sl, r2
 8025d78:	4407      	add	r7, r0
 8025d7a:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8025d7e:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8025d82:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8025d86:	b23f      	sxth	r7, r7
 8025d88:	4490      	add	r8, r2
 8025d8a:	eba9 0707 	sub.w	r7, r9, r7
 8025d8e:	fa0f f888 	sxth.w	r8, r8
 8025d92:	ebaa 0808 	sub.w	r8, sl, r8
 8025d96:	2f00      	cmp	r7, #0
 8025d98:	bfb8      	it	lt
 8025d9a:	427f      	neglt	r7, r7
 8025d9c:	f1b8 0f00 	cmp.w	r8, #0
 8025da0:	bfb8      	it	lt
 8025da2:	f1c8 0800 	rsblt	r8, r8, #0
 8025da6:	45bc      	cmp	ip, r7
 8025da8:	bfcc      	ite	gt
 8025daa:	f10c 0701 	addgt.w	r7, ip, #1
 8025dae:	3701      	addle	r7, #1
 8025db0:	4540      	cmp	r0, r8
 8025db2:	bfc8      	it	gt
 8025db4:	f100 0801 	addgt.w	r8, r0, #1
 8025db8:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8025dbc:	f100 0001 	add.w	r0, r0, #1
 8025dc0:	ea4f 0060 	mov.w	r0, r0, asr #1
 8025dc4:	f04f 0202 	mov.w	r2, #2
 8025dc8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8025dcc:	fb91 f1f2 	sdiv	r1, r1, r2
 8025dd0:	eba3 0301 	sub.w	r3, r3, r1
 8025dd4:	bfd8      	it	le
 8025dd6:	f108 0801 	addle.w	r8, r8, #1
 8025dda:	9201      	str	r2, [sp, #4]
 8025ddc:	930d      	str	r3, [sp, #52]	; 0x34
 8025dde:	f7ea fcc9 	bl	8010774 <_ZN8touchgfx7CWRUtil4sineEi>
 8025de2:	a92a      	add	r1, sp, #168	; 0xa8
 8025de4:	fb08 f808 	mul.w	r8, r8, r8
 8025de8:	f841 0d70 	str.w	r0, [r1, #-112]!
 8025dec:	a80d      	add	r0, sp, #52	; 0x34
 8025dee:	f7ea fba9 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025df2:	fb07 8707 	mla	r7, r7, r7, r8
 8025df6:	f04f 0c20 	mov.w	ip, #32
 8025dfa:	fb90 f0fc 	sdiv	r0, r0, ip
 8025dfe:	4340      	muls	r0, r0
 8025e00:	4287      	cmp	r7, r0
 8025e02:	9a01      	ldr	r2, [sp, #4]
 8025e04:	da04      	bge.n	8025e10 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8025e06:	2401      	movs	r4, #1
 8025e08:	4620      	mov	r0, r4
 8025e0a:	b02b      	add	sp, #172	; 0xac
 8025e0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e10:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8025e12:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8025e14:	fb91 f3f2 	sdiv	r3, r1, r2
 8025e18:	4403      	add	r3, r0
 8025e1a:	fb93 f3fc 	sdiv	r3, r3, ip
 8025e1e:	f9bb 1000 	ldrsh.w	r1, [fp]
 8025e22:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8025e26:	440a      	add	r2, r1
 8025e28:	b212      	sxth	r2, r2
 8025e2a:	454a      	cmp	r2, r9
 8025e2c:	bfa8      	it	ge
 8025e2e:	464a      	movge	r2, r9
 8025e30:	428a      	cmp	r2, r1
 8025e32:	bfac      	ite	ge
 8025e34:	eba9 0902 	subge.w	r9, r9, r2
 8025e38:	eba9 0901 	sublt.w	r9, r9, r1
 8025e3c:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8025e40:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8025e44:	440a      	add	r2, r1
 8025e46:	b212      	sxth	r2, r2
 8025e48:	4552      	cmp	r2, sl
 8025e4a:	bfa8      	it	ge
 8025e4c:	4652      	movge	r2, sl
 8025e4e:	428a      	cmp	r2, r1
 8025e50:	bfac      	ite	ge
 8025e52:	ebaa 0a02 	subge.w	sl, sl, r2
 8025e56:	ebaa 0a01 	sublt.w	sl, sl, r1
 8025e5a:	3301      	adds	r3, #1
 8025e5c:	fb0a fa0a 	mul.w	sl, sl, sl
 8025e60:	fb09 a909 	mla	r9, r9, r9, sl
 8025e64:	435b      	muls	r3, r3
 8025e66:	4599      	cmp	r9, r3
 8025e68:	dccd      	bgt.n	8025e06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8025e6a:	465a      	mov	r2, fp
 8025e6c:	4621      	mov	r1, r4
 8025e6e:	a80e      	add	r0, sp, #56	; 0x38
 8025e70:	f7ff faae 	bl	80253d0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8025e74:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8025e76:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8025e78:	9209      	str	r2, [sp, #36]	; 0x24
 8025e7a:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8025e7e:	930a      	str	r3, [sp, #40]	; 0x28
 8025e80:	dd07      	ble.n	8025e92 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8025e82:	2102      	movs	r1, #2
 8025e84:	fb93 f3f1 	sdiv	r3, r3, r1
 8025e88:	4413      	add	r3, r2
 8025e8a:	930a      	str	r3, [sp, #40]	; 0x28
 8025e8c:	fb93 f3f1 	sdiv	r3, r3, r1
 8025e90:	9309      	str	r3, [sp, #36]	; 0x24
 8025e92:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025e96:	4630      	mov	r0, r6
 8025e98:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8025e9c:	930b      	str	r3, [sp, #44]	; 0x2c
 8025e9e:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8025ea2:	f7ea fc87 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025ea6:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8025eaa:	f04f 0a02 	mov.w	sl, #2
 8025eae:	f849 0d74 	str.w	r0, [r9, #-116]!
 8025eb2:	a80b      	add	r0, sp, #44	; 0x2c
 8025eb4:	4649      	mov	r1, r9
 8025eb6:	f7ea fb45 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025eba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025ebc:	fb90 f0fa 	sdiv	r0, r0, sl
 8025ec0:	eb00 0b03 	add.w	fp, r0, r3
 8025ec4:	4630      	mov	r0, r6
 8025ec6:	f7ff fcc7 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025eca:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8025ece:	017f      	lsls	r7, r7, #5
 8025ed0:	f848 0d78 	str.w	r0, [r8, #-120]!
 8025ed4:	a80b      	add	r0, sp, #44	; 0x2c
 8025ed6:	4641      	mov	r1, r8
 8025ed8:	f7ea fb34 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025edc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8025ede:	fb90 f0fa 	sdiv	r0, r0, sl
 8025ee2:	4659      	mov	r1, fp
 8025ee4:	1a12      	subs	r2, r2, r0
 8025ee6:	a80e      	add	r0, sp, #56	; 0x38
 8025ee8:	f7ff fbf2 	bl	80256d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8025eec:	f106 0a20 	add.w	sl, r6, #32
 8025ef0:	bb67      	cbnz	r7, 8025f4c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8025ef2:	46b3      	mov	fp, r6
 8025ef4:	45aa      	cmp	sl, r5
 8025ef6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025ef8:	dc33      	bgt.n	8025f62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8025efa:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025efc:	4650      	mov	r0, sl
 8025efe:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8025f02:	920b      	str	r2, [sp, #44]	; 0x2c
 8025f04:	f7ea fc56 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025f08:	4641      	mov	r1, r8
 8025f0a:	900c      	str	r0, [sp, #48]	; 0x30
 8025f0c:	a80b      	add	r0, sp, #44	; 0x2c
 8025f0e:	f7ea fb19 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025f12:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8025f14:	2302      	movs	r3, #2
 8025f16:	fb90 f0f3 	sdiv	r0, r0, r3
 8025f1a:	eb00 0b02 	add.w	fp, r0, r2
 8025f1e:	4650      	mov	r0, sl
 8025f20:	f7ff fc9a 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025f24:	4649      	mov	r1, r9
 8025f26:	900d      	str	r0, [sp, #52]	; 0x34
 8025f28:	a80b      	add	r0, sp, #44	; 0x2c
 8025f2a:	f7ea fb0b 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025f2e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8025f30:	2302      	movs	r3, #2
 8025f32:	4659      	mov	r1, fp
 8025f34:	fb90 f0f3 	sdiv	r0, r0, r3
 8025f38:	1a12      	subs	r2, r2, r0
 8025f3a:	a80e      	add	r0, sp, #56	; 0x38
 8025f3c:	46d3      	mov	fp, sl
 8025f3e:	f7ff fc14 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025f42:	44ba      	add	sl, r7
 8025f44:	e7d6      	b.n	8025ef4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8025f46:	fb93 f3f2 	sdiv	r3, r3, r2
 8025f4a:	e768      	b.n	8025e1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8025f4c:	fb9a f2f7 	sdiv	r2, sl, r7
 8025f50:	fb07 a212 	mls	r2, r7, r2, sl
 8025f54:	1aba      	subs	r2, r7, r2
 8025f56:	fb92 f1f7 	sdiv	r1, r2, r7
 8025f5a:	fb07 2211 	mls	r2, r7, r1, r2
 8025f5e:	4492      	add	sl, r2
 8025f60:	e7c7      	b.n	8025ef2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8025f62:	45ab      	cmp	fp, r5
 8025f64:	da23      	bge.n	8025fae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8025f66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025f68:	4628      	mov	r0, r5
 8025f6a:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8025f6e:	920b      	str	r2, [sp, #44]	; 0x2c
 8025f70:	f7ea fc20 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025f74:	4641      	mov	r1, r8
 8025f76:	900c      	str	r0, [sp, #48]	; 0x30
 8025f78:	a80b      	add	r0, sp, #44	; 0x2c
 8025f7a:	f7ea fae3 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025f7e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025f80:	f04f 0a02 	mov.w	sl, #2
 8025f84:	fb90 f0fa 	sdiv	r0, r0, sl
 8025f88:	4403      	add	r3, r0
 8025f8a:	4628      	mov	r0, r5
 8025f8c:	9301      	str	r3, [sp, #4]
 8025f8e:	f7ff fc63 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025f92:	4649      	mov	r1, r9
 8025f94:	900d      	str	r0, [sp, #52]	; 0x34
 8025f96:	a80b      	add	r0, sp, #44	; 0x2c
 8025f98:	f7ea fad4 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025f9c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8025f9e:	9b01      	ldr	r3, [sp, #4]
 8025fa0:	fb90 f0fa 	sdiv	r0, r0, sl
 8025fa4:	4619      	mov	r1, r3
 8025fa6:	1a12      	subs	r2, r2, r0
 8025fa8:	a80e      	add	r0, sp, #56	; 0x38
 8025faa:	f7ff fbde 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025fae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025fb0:	b99b      	cbnz	r3, 8025fda <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8025fb2:	1bad      	subs	r5, r5, r6
 8025fb4:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8025fb8:	da04      	bge.n	8025fc4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8025fba:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8025fbe:	a80e      	add	r0, sp, #56	; 0x38
 8025fc0:	f7ff fbd3 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025fc4:	21ff      	movs	r1, #255	; 0xff
 8025fc6:	a80e      	add	r0, sp, #56	; 0x38
 8025fc8:	f7ff fabe 	bl	8025548 <_ZN8touchgfx6Canvas6renderEh>
 8025fcc:	4604      	mov	r4, r0
 8025fce:	4b8a      	ldr	r3, [pc, #552]	; (80261f8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8025fd0:	930e      	str	r3, [sp, #56]	; 0x38
 8025fd2:	a816      	add	r0, sp, #88	; 0x58
 8025fd4:	f7eb ff22 	bl	8011e1c <_ZN8touchgfx7OutlineD1Ev>
 8025fd8:	e716      	b.n	8025e08 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8025fda:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8025fde:	429a      	cmp	r2, r3
 8025fe0:	f0c0 8107 	bcc.w	80261f2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8025fe4:	1bab      	subs	r3, r5, r6
 8025fe6:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8025fea:	9301      	str	r3, [sp, #4]
 8025fec:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8025ff0:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8025ff4:	da43      	bge.n	802607e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8025ff6:	4628      	mov	r0, r5
 8025ff8:	f7ea fbdc 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025ffc:	4649      	mov	r1, r9
 8025ffe:	900d      	str	r0, [sp, #52]	; 0x34
 8026000:	a809      	add	r0, sp, #36	; 0x24
 8026002:	f7ea fa9f 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026006:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026008:	18c3      	adds	r3, r0, r3
 802600a:	4628      	mov	r0, r5
 802600c:	9303      	str	r3, [sp, #12]
 802600e:	f7ff fc23 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026012:	4649      	mov	r1, r9
 8026014:	900d      	str	r0, [sp, #52]	; 0x34
 8026016:	a809      	add	r0, sp, #36	; 0x24
 8026018:	f7ea fa94 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802601c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802601e:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8026022:	1a1b      	subs	r3, r3, r0
 8026024:	9302      	str	r3, [sp, #8]
 8026026:	9204      	str	r2, [sp, #16]
 8026028:	eb0a 0305 	add.w	r3, sl, r5
 802602c:	9a04      	ldr	r2, [sp, #16]
 802602e:	4293      	cmp	r3, r2
 8026030:	da25      	bge.n	802607e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026032:	4618      	mov	r0, r3
 8026034:	9306      	str	r3, [sp, #24]
 8026036:	f7ea fbbd 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802603a:	4649      	mov	r1, r9
 802603c:	900d      	str	r0, [sp, #52]	; 0x34
 802603e:	a80a      	add	r0, sp, #40	; 0x28
 8026040:	f7ea fa80 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026044:	9b03      	ldr	r3, [sp, #12]
 8026046:	2202      	movs	r2, #2
 8026048:	fb90 f0f2 	sdiv	r0, r0, r2
 802604c:	18c3      	adds	r3, r0, r3
 802604e:	9305      	str	r3, [sp, #20]
 8026050:	9b06      	ldr	r3, [sp, #24]
 8026052:	9207      	str	r2, [sp, #28]
 8026054:	4618      	mov	r0, r3
 8026056:	f7ff fbff 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802605a:	a92a      	add	r1, sp, #168	; 0xa8
 802605c:	f841 0d78 	str.w	r0, [r1, #-120]!
 8026060:	a80a      	add	r0, sp, #40	; 0x28
 8026062:	f7ea fa6f 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026066:	9b02      	ldr	r3, [sp, #8]
 8026068:	9a07      	ldr	r2, [sp, #28]
 802606a:	9905      	ldr	r1, [sp, #20]
 802606c:	fb90 f2f2 	sdiv	r2, r0, r2
 8026070:	a80e      	add	r0, sp, #56	; 0x38
 8026072:	1a9a      	subs	r2, r3, r2
 8026074:	f7ff fb79 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026078:	9b06      	ldr	r3, [sp, #24]
 802607a:	4453      	add	r3, sl
 802607c:	e7d6      	b.n	802602c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802607e:	45ab      	cmp	fp, r5
 8026080:	da25      	bge.n	80260ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8026082:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026086:	4628      	mov	r0, r5
 8026088:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802608c:	930b      	str	r3, [sp, #44]	; 0x2c
 802608e:	f7ea fb91 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026092:	4641      	mov	r1, r8
 8026094:	900c      	str	r0, [sp, #48]	; 0x30
 8026096:	a80b      	add	r0, sp, #44	; 0x2c
 8026098:	f7ea fa54 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802609c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802609e:	2202      	movs	r2, #2
 80260a0:	fb90 f0f2 	sdiv	r0, r0, r2
 80260a4:	eb00 0903 	add.w	r9, r0, r3
 80260a8:	4628      	mov	r0, r5
 80260aa:	9202      	str	r2, [sp, #8]
 80260ac:	f7ff fbd4 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80260b0:	a92a      	add	r1, sp, #168	; 0xa8
 80260b2:	f841 0d74 	str.w	r0, [r1, #-116]!
 80260b6:	a80b      	add	r0, sp, #44	; 0x2c
 80260b8:	f7ea fa44 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80260bc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80260be:	9a02      	ldr	r2, [sp, #8]
 80260c0:	fb90 f2f2 	sdiv	r2, r0, r2
 80260c4:	4649      	mov	r1, r9
 80260c6:	1a9a      	subs	r2, r3, r2
 80260c8:	a80e      	add	r0, sp, #56	; 0x38
 80260ca:	f7ff fb4e 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80260ce:	46d9      	mov	r9, fp
 80260d0:	2502      	movs	r5, #2
 80260d2:	45b1      	cmp	r9, r6
 80260d4:	db25      	blt.n	8026122 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 80260d6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80260da:	4648      	mov	r0, r9
 80260dc:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80260e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80260e2:	f7ea fb67 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80260e6:	4641      	mov	r1, r8
 80260e8:	900c      	str	r0, [sp, #48]	; 0x30
 80260ea:	a80b      	add	r0, sp, #44	; 0x2c
 80260ec:	f7ea fa2a 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80260f0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80260f2:	fb90 f0f5 	sdiv	r0, r0, r5
 80260f6:	eb00 0b03 	add.w	fp, r0, r3
 80260fa:	4648      	mov	r0, r9
 80260fc:	f7ff fbac 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026100:	a90d      	add	r1, sp, #52	; 0x34
 8026102:	900d      	str	r0, [sp, #52]	; 0x34
 8026104:	a80b      	add	r0, sp, #44	; 0x2c
 8026106:	f7ea fa1d 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802610a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802610c:	fb90 f0f5 	sdiv	r0, r0, r5
 8026110:	4659      	mov	r1, fp
 8026112:	1a12      	subs	r2, r2, r0
 8026114:	a80e      	add	r0, sp, #56	; 0x38
 8026116:	46cb      	mov	fp, r9
 8026118:	f7ff fb27 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802611c:	eba9 0907 	sub.w	r9, r9, r7
 8026120:	e7d7      	b.n	80260d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8026122:	455e      	cmp	r6, fp
 8026124:	da22      	bge.n	802616c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8026126:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802612a:	4630      	mov	r0, r6
 802612c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026130:	930b      	str	r3, [sp, #44]	; 0x2c
 8026132:	f7ea fb3f 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026136:	4641      	mov	r1, r8
 8026138:	900c      	str	r0, [sp, #48]	; 0x30
 802613a:	a80b      	add	r0, sp, #44	; 0x2c
 802613c:	f7ea fa02 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026140:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8026142:	2502      	movs	r5, #2
 8026144:	fb90 f0f5 	sdiv	r0, r0, r5
 8026148:	4407      	add	r7, r0
 802614a:	4630      	mov	r0, r6
 802614c:	f7ff fb84 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026150:	a92a      	add	r1, sp, #168	; 0xa8
 8026152:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026156:	a80b      	add	r0, sp, #44	; 0x2c
 8026158:	f7ea f9f4 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802615c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802615e:	fb90 f0f5 	sdiv	r0, r0, r5
 8026162:	4639      	mov	r1, r7
 8026164:	1a12      	subs	r2, r2, r0
 8026166:	a80e      	add	r0, sp, #56	; 0x38
 8026168:	f7ff faff 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802616c:	9b01      	ldr	r3, [sp, #4]
 802616e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026172:	f6bf af27 	bge.w	8025fc4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026176:	4630      	mov	r0, r6
 8026178:	f7ea fb1c 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802617c:	ad2a      	add	r5, sp, #168	; 0xa8
 802617e:	f04f 0b02 	mov.w	fp, #2
 8026182:	f845 0d74 	str.w	r0, [r5, #-116]!
 8026186:	a809      	add	r0, sp, #36	; 0x24
 8026188:	4629      	mov	r1, r5
 802618a:	f7ea f9db 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802618e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026190:	eb00 0903 	add.w	r9, r0, r3
 8026194:	4630      	mov	r0, r6
 8026196:	f7ff fb5f 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802619a:	4629      	mov	r1, r5
 802619c:	900d      	str	r0, [sp, #52]	; 0x34
 802619e:	a809      	add	r0, sp, #36	; 0x24
 80261a0:	f7ea f9d0 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80261a4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80261a6:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 80261aa:	eba3 0800 	sub.w	r8, r3, r0
 80261ae:	4454      	add	r4, sl
 80261b0:	42a6      	cmp	r6, r4
 80261b2:	f77f af07 	ble.w	8025fc4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80261b6:	4620      	mov	r0, r4
 80261b8:	f7ea fafc 	bl	80107b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80261bc:	4629      	mov	r1, r5
 80261be:	900d      	str	r0, [sp, #52]	; 0x34
 80261c0:	a80a      	add	r0, sp, #40	; 0x28
 80261c2:	f7ea f9bf 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80261c6:	fb90 f0fb 	sdiv	r0, r0, fp
 80261ca:	eb00 0709 	add.w	r7, r0, r9
 80261ce:	4620      	mov	r0, r4
 80261d0:	f7ff fb42 	bl	8025858 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80261d4:	a90c      	add	r1, sp, #48	; 0x30
 80261d6:	900c      	str	r0, [sp, #48]	; 0x30
 80261d8:	a80a      	add	r0, sp, #40	; 0x28
 80261da:	f7ea f9b3 	bl	8010544 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80261de:	4639      	mov	r1, r7
 80261e0:	fb90 f2fb 	sdiv	r2, r0, fp
 80261e4:	a80e      	add	r0, sp, #56	; 0x38
 80261e6:	eba8 0202 	sub.w	r2, r8, r2
 80261ea:	f7ff fabe 	bl	802576a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80261ee:	4454      	add	r4, sl
 80261f0:	e7de      	b.n	80261b0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 80261f2:	2400      	movs	r4, #0
 80261f4:	e6eb      	b.n	8025fce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 80261f6:	bf00      	nop
 80261f8:	0802c680 	.word	0x0802c680

080261fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80261fc:	b570      	push	{r4, r5, r6, lr}
 80261fe:	790b      	ldrb	r3, [r1, #4]
 8026200:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026204:	2b00      	cmp	r3, #0
 8026206:	bf0c      	ite	eq
 8026208:	2301      	moveq	r3, #1
 802620a:	2300      	movne	r3, #0
 802620c:	4604      	mov	r4, r0
 802620e:	460e      	mov	r6, r1
 8026210:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026214:	d109      	bne.n	802622a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026216:	b14d      	cbz	r5, 802622c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026218:	7933      	ldrb	r3, [r6, #4]
 802621a:	2b01      	cmp	r3, #1
 802621c:	d10c      	bne.n	8026238 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802621e:	6823      	ldr	r3, [r4, #0]
 8026220:	4620      	mov	r0, r4
 8026222:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8026224:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026228:	4718      	bx	r3
 802622a:	b12d      	cbz	r5, 8026238 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802622c:	6823      	ldr	r3, [r4, #0]
 802622e:	4620      	mov	r0, r4
 8026230:	695b      	ldr	r3, [r3, #20]
 8026232:	4798      	blx	r3
 8026234:	2d00      	cmp	r5, #0
 8026236:	d1ef      	bne.n	8026218 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026238:	bd70      	pop	{r4, r5, r6, pc}

0802623a <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802623a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802623e:	4770      	bx	lr

08026240 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8026240:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8026244:	4770      	bx	lr

08026246 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8026246:	6802      	ldr	r2, [r0, #0]
 8026248:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802624c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802624e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026252:	4710      	bx	r2

08026254 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8026254:	6802      	ldr	r2, [r0, #0]
 8026256:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802625a:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802625c:	eef0 0a40 	vmov.f32	s1, s0
 8026260:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026264:	4710      	bx	r2

08026266 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8026266:	6802      	ldr	r2, [r0, #0]
 8026268:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802626c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802626e:	eeb0 1a40 	vmov.f32	s2, s0
 8026272:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026276:	4710      	bx	r2

08026278 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8026278:	6802      	ldr	r2, [r0, #0]
 802627a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802627e:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026280:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026284:	4710      	bx	r2

08026286 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8026286:	6802      	ldr	r2, [r0, #0]
 8026288:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802628c:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802628e:	eef0 0a40 	vmov.f32	s1, s0
 8026292:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026296:	4710      	bx	r2

08026298 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8026298:	6802      	ldr	r2, [r0, #0]
 802629a:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802629e:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80262a0:	eeb0 1a40 	vmov.f32	s2, s0
 80262a4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80262a8:	4710      	bx	r2

080262aa <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 80262aa:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80262ae:	4770      	bx	lr

080262b0 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 80262b0:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 80262b4:	4770      	bx	lr

080262b6 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 80262b6:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 80262ba:	4770      	bx	lr

080262bc <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 80262bc:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 80262c0:	4770      	bx	lr

080262c2 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 80262c2:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 80262c6:	4770      	bx	lr

080262c8 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 80262c8:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 80262cc:	4770      	bx	lr

080262ce <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 80262ce:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 80262d2:	4770      	bx	lr

080262d4 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 80262d4:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 80262d8:	4770      	bx	lr

080262da <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 80262da:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 80262de:	4770      	bx	lr

080262e0 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 80262e0:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 80262e4:	4770      	bx	lr

080262e6 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 80262e6:	ee07 2a90 	vmov	s15, r2
 80262ea:	6803      	ldr	r3, [r0, #0]
 80262ec:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80262f0:	ee07 1a90 	vmov	s15, r1
 80262f4:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80262f8:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80262fc:	4718      	bx	r3

080262fe <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 80262fe:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8026302:	4770      	bx	lr

08026304 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8026304:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8026308:	4770      	bx	lr

0802630a <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802630a:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802630e:	4770      	bx	lr

08026310 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8026310:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8026314:	4770      	bx	lr

08026316 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8026316:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802631a:	4770      	bx	lr

0802631c <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802631c:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8026320:	4770      	bx	lr

08026322 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8026322:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8026326:	4770      	bx	lr

08026328 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8026328:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802632c:	4770      	bx	lr

0802632e <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802632e:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8026332:	4770      	bx	lr

08026334 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8026334:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8026338:	4770      	bx	lr

0802633a <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802633a:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802633e:	4770      	bx	lr

08026340 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8026340:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8026344:	4770      	bx	lr

08026346 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8026346:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802634a:	4770      	bx	lr

0802634c <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802634c:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8026350:	4770      	bx	lr

08026352 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8026352:	b510      	push	{r4, lr}
 8026354:	ed2d 8b04 	vpush	{d8-d9}
 8026358:	6803      	ldr	r3, [r0, #0]
 802635a:	4604      	mov	r4, r0
 802635c:	699b      	ldr	r3, [r3, #24]
 802635e:	eeb0 8a40 	vmov.f32	s16, s0
 8026362:	eef0 8a60 	vmov.f32	s17, s1
 8026366:	eeb0 9a41 	vmov.f32	s18, s2
 802636a:	4798      	blx	r3
 802636c:	6823      	ldr	r3, [r4, #0]
 802636e:	4620      	mov	r0, r4
 8026370:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8026372:	eeb0 1a49 	vmov.f32	s2, s18
 8026376:	eef0 0a68 	vmov.f32	s1, s17
 802637a:	eeb0 0a48 	vmov.f32	s0, s16
 802637e:	4798      	blx	r3
 8026380:	ecbd 8b04 	vpop	{d8-d9}
 8026384:	6823      	ldr	r3, [r4, #0]
 8026386:	4620      	mov	r0, r4
 8026388:	699b      	ldr	r3, [r3, #24]
 802638a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802638e:	4718      	bx	r3

08026390 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8026390:	b510      	push	{r4, lr}
 8026392:	ed2d 8b02 	vpush	{d8}
 8026396:	6803      	ldr	r3, [r0, #0]
 8026398:	4604      	mov	r4, r0
 802639a:	699b      	ldr	r3, [r3, #24]
 802639c:	eeb0 8a40 	vmov.f32	s16, s0
 80263a0:	4798      	blx	r3
 80263a2:	6823      	ldr	r3, [r4, #0]
 80263a4:	4620      	mov	r0, r4
 80263a6:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80263aa:	eeb0 0a48 	vmov.f32	s0, s16
 80263ae:	4798      	blx	r3
 80263b0:	ecbd 8b02 	vpop	{d8}
 80263b4:	6823      	ldr	r3, [r4, #0]
 80263b6:	4620      	mov	r0, r4
 80263b8:	699b      	ldr	r3, [r3, #24]
 80263ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80263be:	4718      	bx	r3

080263c0 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 80263c0:	2200      	movs	r2, #0
 80263c2:	8002      	strh	r2, [r0, #0]
 80263c4:	8042      	strh	r2, [r0, #2]
 80263c6:	8082      	strh	r2, [r0, #4]
 80263c8:	80c2      	strh	r2, [r0, #6]
 80263ca:	4770      	bx	lr

080263cc <_ZN8touchgfx13TextureMapperD1Ev>:
 80263cc:	4770      	bx	lr

080263ce <_ZN8touchgfx13TextureMapperD0Ev>:
 80263ce:	b510      	push	{r4, lr}
 80263d0:	2190      	movs	r1, #144	; 0x90
 80263d2:	4604      	mov	r4, r0
 80263d4:	f000 fe1b 	bl	802700e <_ZdlPvj>
 80263d8:	4620      	mov	r0, r4
 80263da:	bd10      	pop	{r4, pc}

080263dc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 80263dc:	b538      	push	{r3, r4, r5, lr}
 80263de:	2500      	movs	r5, #0
 80263e0:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80263e4:	2301      	movs	r3, #1
 80263e6:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 80263ea:	4b1f      	ldr	r3, [pc, #124]	; (8026468 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 80263ec:	8085      	strh	r5, [r0, #4]
 80263ee:	80c5      	strh	r5, [r0, #6]
 80263f0:	8105      	strh	r5, [r0, #8]
 80263f2:	8145      	strh	r5, [r0, #10]
 80263f4:	8185      	strh	r5, [r0, #12]
 80263f6:	81c5      	strh	r5, [r0, #14]
 80263f8:	8205      	strh	r5, [r0, #16]
 80263fa:	8245      	strh	r5, [r0, #18]
 80263fc:	61c5      	str	r5, [r0, #28]
 80263fe:	8405      	strh	r5, [r0, #32]
 8026400:	8445      	strh	r5, [r0, #34]	; 0x22
 8026402:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8026406:	6003      	str	r3, [r0, #0]
 8026408:	880b      	ldrh	r3, [r1, #0]
 802640a:	84c3      	strh	r3, [r0, #38]	; 0x26
 802640c:	23ff      	movs	r3, #255	; 0xff
 802640e:	4604      	mov	r4, r0
 8026410:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8026414:	f7eb fb93 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026418:	4b14      	ldr	r3, [pc, #80]	; (802646c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802641a:	6023      	str	r3, [r4, #0]
 802641c:	2300      	movs	r3, #0
 802641e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8026422:	4913      	ldr	r1, [pc, #76]	; (8026470 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8026424:	62e3      	str	r3, [r4, #44]	; 0x2c
 8026426:	6323      	str	r3, [r4, #48]	; 0x30
 8026428:	6363      	str	r3, [r4, #52]	; 0x34
 802642a:	63a3      	str	r3, [r4, #56]	; 0x38
 802642c:	63e3      	str	r3, [r4, #60]	; 0x3c
 802642e:	6463      	str	r3, [r4, #68]	; 0x44
 8026430:	64a3      	str	r3, [r4, #72]	; 0x48
 8026432:	6523      	str	r3, [r4, #80]	; 0x50
 8026434:	6563      	str	r3, [r4, #84]	; 0x54
 8026436:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026438:	6623      	str	r3, [r4, #96]	; 0x60
 802643a:	66a3      	str	r3, [r4, #104]	; 0x68
 802643c:	66e3      	str	r3, [r4, #108]	; 0x6c
 802643e:	6763      	str	r3, [r4, #116]	; 0x74
 8026440:	67a3      	str	r3, [r4, #120]	; 0x78
 8026442:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8026446:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802644a:	230c      	movs	r3, #12
 802644c:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8026450:	6422      	str	r2, [r4, #64]	; 0x40
 8026452:	64e1      	str	r1, [r4, #76]	; 0x4c
 8026454:	65a1      	str	r1, [r4, #88]	; 0x58
 8026456:	6662      	str	r2, [r4, #100]	; 0x64
 8026458:	6722      	str	r2, [r4, #112]	; 0x70
 802645a:	67e2      	str	r2, [r4, #124]	; 0x7c
 802645c:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8026460:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8026464:	4620      	mov	r0, r4
 8026466:	bd38      	pop	{r3, r4, r5, pc}
 8026468:	0802c128 	.word	0x0802c128
 802646c:	0802c70c 	.word	0x0802c70c
 8026470:	447a0000 	.word	0x447a0000

08026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8026474:	b570      	push	{r4, r5, r6, lr}
 8026476:	ed2d 8b04 	vpush	{d8-d9}
 802647a:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802647e:	add0      	add	r5, sp, #832	; 0x340
 8026480:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8026482:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8026486:	4604      	mov	r4, r0
 8026488:	4628      	mov	r0, r5
 802648a:	f7f1 fa7f 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 802648e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8026490:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8026494:	4606      	mov	r6, r0
 8026496:	4628      	mov	r0, r5
 8026498:	f7f1 faac 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802649c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80264a0:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80264a4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80264a6:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80264aa:	9312      	str	r3, [sp, #72]	; 0x48
 80264ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80264b0:	1c72      	adds	r2, r6, #1
 80264b2:	3001      	adds	r0, #1
 80264b4:	ee76 5ac7 	vsub.f32	s11, s13, s14
 80264b8:	ee07 2a90 	vmov	s15, r2
 80264bc:	ee06 0a90 	vmov	s13, r0
 80264c0:	ee36 6a47 	vsub.f32	s12, s12, s14
 80264c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80264c8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80264cc:	ee77 7a86 	vadd.f32	s15, s15, s12
 80264d0:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80264d4:	9316      	str	r3, [sp, #88]	; 0x58
 80264d6:	931a      	str	r3, [sp, #104]	; 0x68
 80264d8:	931e      	str	r3, [sp, #120]	; 0x78
 80264da:	2300      	movs	r3, #0
 80264dc:	9320      	str	r3, [sp, #128]	; 0x80
 80264de:	9321      	str	r3, [sp, #132]	; 0x84
 80264e0:	9322      	str	r3, [sp, #136]	; 0x88
 80264e2:	9324      	str	r3, [sp, #144]	; 0x90
 80264e4:	9325      	str	r3, [sp, #148]	; 0x94
 80264e6:	9326      	str	r3, [sp, #152]	; 0x98
 80264e8:	9328      	str	r3, [sp, #160]	; 0xa0
 80264ea:	9329      	str	r3, [sp, #164]	; 0xa4
 80264ec:	932a      	str	r3, [sp, #168]	; 0xa8
 80264ee:	932c      	str	r3, [sp, #176]	; 0xb0
 80264f0:	932d      	str	r3, [sp, #180]	; 0xb4
 80264f2:	932e      	str	r3, [sp, #184]	; 0xb8
 80264f4:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80264f8:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80264fc:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8026500:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8026504:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8026508:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802650c:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8026510:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8026514:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8026518:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802651c:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8026520:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8026524:	a830      	add	r0, sp, #192	; 0xc0
 8026526:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802652a:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802652e:	f000 fc43 	bl	8026db8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026532:	eeb1 0a49 	vneg.f32	s0, s18
 8026536:	a830      	add	r0, sp, #192	; 0xc0
 8026538:	f000 fd12 	bl	8026f60 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802653c:	eeb1 0a68 	vneg.f32	s0, s17
 8026540:	f000 fd1c 	bl	8026f7c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026544:	eeb1 0a48 	vneg.f32	s0, s16
 8026548:	f000 fd27 	bl	8026f9a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802654c:	a840      	add	r0, sp, #256	; 0x100
 802654e:	f000 fc33 	bl	8026db8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026552:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8026556:	a840      	add	r0, sp, #256	; 0x100
 8026558:	f000 fc86 	bl	8026e68 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 802655c:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8026560:	f000 fcac 	bl	8026ebc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8026564:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8026568:	f000 fcd1 	bl	8026f0e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 802656c:	a850      	add	r0, sp, #320	; 0x140
 802656e:	f000 fc23 	bl	8026db8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026572:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026576:	a850      	add	r0, sp, #320	; 0x140
 8026578:	f000 fd1e 	bl	8026fb8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 802657c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026580:	f000 fd26 	bl	8026fd0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8026584:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026588:	f000 fd2f 	bl	8026fea <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 802658c:	a860      	add	r0, sp, #384	; 0x180
 802658e:	f000 fc13 	bl	8026db8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026592:	eeb0 0a49 	vmov.f32	s0, s18
 8026596:	a860      	add	r0, sp, #384	; 0x180
 8026598:	f000 fce2 	bl	8026f60 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802659c:	eeb0 0a68 	vmov.f32	s0, s17
 80265a0:	f000 fcec 	bl	8026f7c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80265a4:	eeb0 0a48 	vmov.f32	s0, s16
 80265a8:	f000 fcf7 	bl	8026f9a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80265ac:	aa50      	add	r2, sp, #320	; 0x140
 80265ae:	a960      	add	r1, sp, #384	; 0x180
 80265b0:	a8b0      	add	r0, sp, #704	; 0x2c0
 80265b2:	f000 fc1b 	bl	8026dec <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80265b6:	4628      	mov	r0, r5
 80265b8:	aa40      	add	r2, sp, #256	; 0x100
 80265ba:	a9b0      	add	r1, sp, #704	; 0x2c0
 80265bc:	f000 fc16 	bl	8026dec <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80265c0:	4629      	mov	r1, r5
 80265c2:	aa30      	add	r2, sp, #192	; 0xc0
 80265c4:	a870      	add	r0, sp, #448	; 0x1c0
 80265c6:	f000 fc11 	bl	8026dec <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80265ca:	a880      	add	r0, sp, #512	; 0x200
 80265cc:	f000 fbf4 	bl	8026db8 <_ZN8touchgfx9Matrix4x4C1Ev>
 80265d0:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80265d4:	a880      	add	r0, sp, #512	; 0x200
 80265d6:	eeb1 0a40 	vneg.f32	s0, s0
 80265da:	f000 fcc1 	bl	8026f60 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80265de:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80265e2:	a880      	add	r0, sp, #512	; 0x200
 80265e4:	eeb1 0a40 	vneg.f32	s0, s0
 80265e8:	f000 fcc8 	bl	8026f7c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80265ec:	a890      	add	r0, sp, #576	; 0x240
 80265ee:	f000 fbe3 	bl	8026db8 <_ZN8touchgfx9Matrix4x4C1Ev>
 80265f2:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 80265f6:	a890      	add	r0, sp, #576	; 0x240
 80265f8:	f000 fc26 	bl	8026e48 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80265fc:	a8a0      	add	r0, sp, #640	; 0x280
 80265fe:	f000 fbdb 	bl	8026db8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026602:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8026606:	a8a0      	add	r0, sp, #640	; 0x280
 8026608:	f000 fcaa 	bl	8026f60 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802660c:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8026610:	f000 fcb4 	bl	8026f7c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026614:	aa90      	add	r2, sp, #576	; 0x240
 8026616:	a9a0      	add	r1, sp, #640	; 0x280
 8026618:	a8b0      	add	r0, sp, #704	; 0x2c0
 802661a:	f000 fbe7 	bl	8026dec <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802661e:	4628      	mov	r0, r5
 8026620:	aa80      	add	r2, sp, #512	; 0x200
 8026622:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026624:	f000 fbe2 	bl	8026dec <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026628:	4629      	mov	r1, r5
 802662a:	aa70      	add	r2, sp, #448	; 0x1c0
 802662c:	4668      	mov	r0, sp
 802662e:	466d      	mov	r5, sp
 8026630:	f000 fbdc 	bl	8026dec <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026634:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026636:	ae70      	add	r6, sp, #448	; 0x1c0
 8026638:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802663a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802663c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802663e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026640:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026642:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8026646:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802664a:	2500      	movs	r5, #0
 802664c:	0129      	lsls	r1, r5, #4
 802664e:	ab20      	add	r3, sp, #128	; 0x80
 8026650:	185e      	adds	r6, r3, r1
 8026652:	ab10      	add	r3, sp, #64	; 0x40
 8026654:	4419      	add	r1, r3
 8026656:	a870      	add	r0, sp, #448	; 0x1c0
 8026658:	f000 fb7e 	bl	8026d58 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802665c:	3501      	adds	r5, #1
 802665e:	2d04      	cmp	r5, #4
 8026660:	ed86 0a00 	vstr	s0, [r6]
 8026664:	edc6 0a01 	vstr	s1, [r6, #4]
 8026668:	ed86 1a02 	vstr	s2, [r6, #8]
 802666c:	edc6 1a03 	vstr	s3, [r6, #12]
 8026670:	d1ec      	bne.n	802664c <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8026672:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8026676:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802667a:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802667e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026682:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8026686:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802668a:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802668e:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8026692:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026696:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802669a:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802669e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80266a2:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80266a6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80266aa:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80266ae:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80266b2:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80266b6:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80266ba:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80266be:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80266c2:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80266c6:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80266ca:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80266ce:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80266d2:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80266d6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80266da:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80266de:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80266e2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80266e6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80266ea:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80266ee:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80266f2:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80266f6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80266fa:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80266fe:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026702:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8026706:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802670a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802670e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8026712:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8026716:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802671a:	ecbd 8b04 	vpop	{d8-d9}
 802671e:	bd70      	pop	{r4, r5, r6, pc}

08026720 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8026720:	b510      	push	{r4, lr}
 8026722:	4604      	mov	r4, r0
 8026724:	f7eb fa0b 	bl	8011b3e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026728:	4620      	mov	r0, r4
 802672a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802672e:	f7ff bea1 	b.w	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026732 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8026732:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8026736:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802673a:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802673e:	f7ff be99 	b.w	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026742 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8026742:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8026746:	f7ff be95 	b.w	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802674a <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802674a:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802674e:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8026752:	f7ff be8f 	b.w	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026756 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8026756:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802675a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802675e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026762:	bfd8      	it	le
 8026764:	eeb0 0a67 	vmovle.f32	s0, s15
 8026768:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802676c:	f7ff be82 	b.w	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026770 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8026770:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8026774:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8026778:	f7ff be7c 	b.w	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802677c <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802677c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8026780:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8026784:	f7ff be76 	b.w	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026788 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8026788:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802678c:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8026790:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8026794:	f7ff be6e 	b.w	8026474 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026798 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8026798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802679c:	ed2d 8b04 	vpush	{d8-d9}
 80267a0:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80267a4:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80267a8:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80267ac:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80267b0:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80267b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80267b8:	bf54      	ite	pl
 80267ba:	eeb0 0a69 	vmovpl.f32	s0, s19
 80267be:	eeb0 0a48 	vmovmi.f32	s0, s16
 80267c2:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80267c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80267ca:	bfd8      	it	le
 80267cc:	eeb0 0a49 	vmovle.f32	s0, s18
 80267d0:	eef4 8ac0 	vcmpe.f32	s17, s0
 80267d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80267d8:	bfd8      	it	le
 80267da:	eeb0 0a68 	vmovle.f32	s0, s17
 80267de:	460c      	mov	r4, r1
 80267e0:	4607      	mov	r7, r0
 80267e2:	f000 fd09 	bl	80271f8 <floorf>
 80267e6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80267ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80267ee:	bf58      	it	pl
 80267f0:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80267f4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80267f8:	bf56      	itet	pl
 80267fa:	ee10 3a10 	vmovpl	r3, s0
 80267fe:	2600      	movmi	r6, #0
 8026800:	b21e      	sxthpl	r6, r3
 8026802:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026806:	bfd8      	it	le
 8026808:	eeb0 8a69 	vmovle.f32	s16, s19
 802680c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8026810:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026814:	bf58      	it	pl
 8026816:	eeb0 8a49 	vmovpl.f32	s16, s18
 802681a:	eef4 8ac8 	vcmpe.f32	s17, s16
 802681e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026822:	bf54      	ite	pl
 8026824:	eeb0 0a68 	vmovpl.f32	s0, s17
 8026828:	eeb0 0a48 	vmovmi.f32	s0, s16
 802682c:	f000 fca2 	bl	8027174 <ceilf>
 8026830:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8026834:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8026838:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802683c:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8026840:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8026844:	ee07 8a90 	vmov	s15, r8
 8026848:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802684c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026854:	bfd8      	it	le
 8026856:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802685a:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802685e:	bfdc      	itt	le
 8026860:	ee10 3a10 	vmovle	r3, s0
 8026864:	fa0f f883 	sxthle.w	r8, r3
 8026868:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802686c:	bf54      	ite	pl
 802686e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8026872:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026876:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802687a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802687e:	bfd8      	it	le
 8026880:	eeb0 0a49 	vmovle.f32	s0, s18
 8026884:	eef4 8ac0 	vcmpe.f32	s17, s0
 8026888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802688c:	bfd8      	it	le
 802688e:	eeb0 0a68 	vmovle.f32	s0, s17
 8026892:	f000 fcb1 	bl	80271f8 <floorf>
 8026896:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802689a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802689e:	bf58      	it	pl
 80268a0:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80268a4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80268a8:	bf56      	itet	pl
 80268aa:	ee10 3a10 	vmovpl	r3, s0
 80268ae:	2500      	movmi	r5, #0
 80268b0:	b21d      	sxthpl	r5, r3
 80268b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80268b6:	bfd8      	it	le
 80268b8:	eeb0 8a69 	vmovle.f32	s16, s19
 80268bc:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80268c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80268c4:	bf58      	it	pl
 80268c6:	eeb0 8a49 	vmovpl.f32	s16, s18
 80268ca:	eef4 8ac8 	vcmpe.f32	s17, s16
 80268ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80268d2:	bf54      	ite	pl
 80268d4:	eeb0 0a68 	vmovpl.f32	s0, s17
 80268d8:	eeb0 0a48 	vmovmi.f32	s0, s16
 80268dc:	f000 fc4a 	bl	8027174 <ceilf>
 80268e0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80268e4:	803e      	strh	r6, [r7, #0]
 80268e6:	ee07 3a90 	vmov	s15, r3
 80268ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80268ee:	807d      	strh	r5, [r7, #2]
 80268f0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80268f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80268f8:	bfd8      	it	le
 80268fa:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80268fe:	eba8 0606 	sub.w	r6, r8, r6
 8026902:	bfdc      	itt	le
 8026904:	ee10 3a10 	vmovle	r3, s0
 8026908:	b21b      	sxthle	r3, r3
 802690a:	1b5d      	subs	r5, r3, r5
 802690c:	80be      	strh	r6, [r7, #4]
 802690e:	80fd      	strh	r5, [r7, #6]
 8026910:	ecbd 8b04 	vpop	{d8-d9}
 8026914:	4638      	mov	r0, r7
 8026916:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802691a <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802691a:	b513      	push	{r0, r1, r4, lr}
 802691c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8026920:	4604      	mov	r4, r0
 8026922:	b143      	cbz	r3, 8026936 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8026924:	4601      	mov	r1, r0
 8026926:	4668      	mov	r0, sp
 8026928:	f7ff ff36 	bl	8026798 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802692c:	6823      	ldr	r3, [r4, #0]
 802692e:	4669      	mov	r1, sp
 8026930:	691b      	ldr	r3, [r3, #16]
 8026932:	4620      	mov	r0, r4
 8026934:	4798      	blx	r3
 8026936:	b002      	add	sp, #8
 8026938:	bd10      	pop	{r4, pc}

0802693a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802693a:	4603      	mov	r3, r0
 802693c:	3026      	adds	r0, #38	; 0x26
 802693e:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8026942:	b90b      	cbnz	r3, 8026948 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8026944:	f7ef b82c 	b.w	80159a0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8026948:	f7ef b83a 	b.w	80159c0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802694c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802694c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026950:	ed2d 8b04 	vpush	{d8-d9}
 8026954:	4604      	mov	r4, r0
 8026956:	469b      	mov	fp, r3
 8026958:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802695c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026960:	f9b1 6000 	ldrsh.w	r6, [r1]
 8026964:	8888      	ldrh	r0, [r1, #4]
 8026966:	b0b3      	sub	sp, #204	; 0xcc
 8026968:	4430      	add	r0, r6
 802696a:	b280      	uxth	r0, r0
 802696c:	9206      	str	r2, [sp, #24]
 802696e:	fa0f fe80 	sxth.w	lr, r0
 8026972:	2200      	movs	r2, #0
 8026974:	4596      	cmp	lr, r2
 8026976:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802697a:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802697e:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8026982:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8026984:	9211      	str	r2, [sp, #68]	; 0x44
 8026986:	f340 8129 	ble.w	8026bdc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802698a:	45b4      	cmp	ip, r6
 802698c:	f340 8126 	ble.w	8026bdc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026990:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8026994:	88ca      	ldrh	r2, [r1, #6]
 8026996:	442a      	add	r2, r5
 8026998:	b292      	uxth	r2, r2
 802699a:	b211      	sxth	r1, r2
 802699c:	2900      	cmp	r1, #0
 802699e:	f340 811d 	ble.w	8026bdc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80269a2:	42ab      	cmp	r3, r5
 80269a4:	f340 811a 	ble.w	8026bdc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80269a8:	45f4      	cmp	ip, lr
 80269aa:	bfb8      	it	lt
 80269ac:	fa1f f08c 	uxthlt.w	r0, ip
 80269b0:	428b      	cmp	r3, r1
 80269b2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80269b6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80269ba:	bfb8      	it	lt
 80269bc:	b29a      	uxthlt	r2, r3
 80269be:	1b80      	subs	r0, r0, r6
 80269c0:	1b52      	subs	r2, r2, r5
 80269c2:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80269c6:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80269ca:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80269ce:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80269d2:	ab11      	add	r3, sp, #68	; 0x44
 80269d4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80269d8:	6822      	ldr	r2, [r4, #0]
 80269da:	9307      	str	r3, [sp, #28]
 80269dc:	ad13      	add	r5, sp, #76	; 0x4c
 80269de:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80269e0:	e885 0003 	stmia.w	r5, {r0, r1}
 80269e4:	4629      	mov	r1, r5
 80269e6:	4620      	mov	r0, r4
 80269e8:	4790      	blx	r2
 80269ea:	4621      	mov	r1, r4
 80269ec:	a815      	add	r0, sp, #84	; 0x54
 80269ee:	f7ee ff33 	bl	8015858 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80269f2:	a815      	add	r0, sp, #84	; 0x54
 80269f4:	f7ed fbf8 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80269f8:	9b07      	ldr	r3, [sp, #28]
 80269fa:	1d26      	adds	r6, r4, #4
 80269fc:	4618      	mov	r0, r3
 80269fe:	4631      	mov	r1, r6
 8026a00:	f7ed fc36 	bl	8014270 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026a04:	4628      	mov	r0, r5
 8026a06:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8026a0a:	f7ed fbed 	bl	80141e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026a0e:	4628      	mov	r0, r5
 8026a10:	f7f1 f8a8 	bl	8017b64 <_ZNK8touchgfx6Bitmap7getDataEv>
 8026a14:	9007      	str	r0, [sp, #28]
 8026a16:	2800      	cmp	r0, #0
 8026a18:	f000 80db 	beq.w	8026bd2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8026a1c:	f8db 2000 	ldr.w	r2, [fp]
 8026a20:	9209      	str	r2, [sp, #36]	; 0x24
 8026a22:	f8db 2004 	ldr.w	r2, [fp, #4]
 8026a26:	920a      	str	r2, [sp, #40]	; 0x28
 8026a28:	f8db 2008 	ldr.w	r2, [fp, #8]
 8026a2c:	920b      	str	r2, [sp, #44]	; 0x2c
 8026a2e:	f8db 200c 	ldr.w	r2, [fp, #12]
 8026a32:	920c      	str	r2, [sp, #48]	; 0x30
 8026a34:	f8da 2000 	ldr.w	r2, [sl]
 8026a38:	920d      	str	r2, [sp, #52]	; 0x34
 8026a3a:	f8da 2004 	ldr.w	r2, [sl, #4]
 8026a3e:	920e      	str	r2, [sp, #56]	; 0x38
 8026a40:	f8da 2008 	ldr.w	r2, [sl, #8]
 8026a44:	920f      	str	r2, [sp, #60]	; 0x3c
 8026a46:	f8da 200c 	ldr.w	r2, [sl, #12]
 8026a4a:	9210      	str	r2, [sp, #64]	; 0x40
 8026a4c:	a90d      	add	r1, sp, #52	; 0x34
 8026a4e:	4632      	mov	r2, r6
 8026a50:	a809      	add	r0, sp, #36	; 0x24
 8026a52:	f7ed fbf1 	bl	8014238 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026a56:	4632      	mov	r2, r6
 8026a58:	a90e      	add	r1, sp, #56	; 0x38
 8026a5a:	a80a      	add	r0, sp, #40	; 0x28
 8026a5c:	f7ed fbec 	bl	8014238 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026a60:	4632      	mov	r2, r6
 8026a62:	a90f      	add	r1, sp, #60	; 0x3c
 8026a64:	a80b      	add	r0, sp, #44	; 0x2c
 8026a66:	f7ed fbe7 	bl	8014238 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026a6a:	4632      	mov	r2, r6
 8026a6c:	a910      	add	r1, sp, #64	; 0x40
 8026a6e:	a80c      	add	r0, sp, #48	; 0x30
 8026a70:	f7ed fbe2 	bl	8014238 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026a74:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8026a78:	edd7 4a00 	vldr	s9, [r7]
 8026a7c:	edd7 5a01 	vldr	s11, [r7, #4]
 8026a80:	ed98 4a00 	vldr	s8, [r8]
 8026a84:	ed98 5a01 	vldr	s10, [r8, #4]
 8026a88:	ed99 9a00 	vldr	s18, [r9]
 8026a8c:	ed99 8a01 	vldr	s16, [r9, #4]
 8026a90:	edd9 8a02 	vldr	s17, [r9, #8]
 8026a94:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8026a98:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8026a9c:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8026aa0:	eef0 6a67 	vmov.f32	s13, s15
 8026aa4:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8026aa8:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8026aac:	eeb0 7a67 	vmov.f32	s14, s15
 8026ab0:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8026ab4:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8026ab8:	eeb0 6a67 	vmov.f32	s12, s15
 8026abc:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026ac0:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8026ac4:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8026ac8:	ee16 6a10 	vmov	r6, s12
 8026acc:	eeb0 6a67 	vmov.f32	s12, s15
 8026ad0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026ad4:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8026ad8:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8026adc:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8026ae0:	68ff      	ldr	r7, [r7, #12]
 8026ae2:	9624      	str	r6, [sp, #144]	; 0x90
 8026ae4:	ee16 0a10 	vmov	r0, s12
 8026ae8:	eeb0 6a67 	vmov.f32	s12, s15
 8026aec:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026af0:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8026af4:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8026af8:	ee16 1a10 	vmov	r1, s12
 8026afc:	eeb0 6a67 	vmov.f32	s12, s15
 8026b00:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026b04:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8026b08:	ee16 2a10 	vmov	r2, s12
 8026b0c:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8026b10:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8026b14:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8026b18:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8026b1c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026b20:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8026b24:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8026b28:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8026b2c:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8026b30:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8026b34:	922d      	str	r2, [sp, #180]	; 0xb4
 8026b36:	4a2b      	ldr	r2, [pc, #172]	; (8026be4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8026b38:	9b06      	ldr	r3, [sp, #24]
 8026b3a:	8812      	ldrh	r2, [r2, #0]
 8026b3c:	9317      	str	r3, [sp, #92]	; 0x5c
 8026b3e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8026b42:	9b07      	ldr	r3, [sp, #28]
 8026b44:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8026b48:	4628      	mov	r0, r5
 8026b4a:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8026b4e:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8026b52:	9218      	str	r2, [sp, #96]	; 0x60
 8026b54:	9319      	str	r3, [sp, #100]	; 0x64
 8026b56:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8026b5a:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8026b5e:	9731      	str	r7, [sp, #196]	; 0xc4
 8026b60:	f7f1 f830 	bl	8017bc4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8026b64:	901a      	str	r0, [sp, #104]	; 0x68
 8026b66:	4628      	mov	r0, r5
 8026b68:	f7f0 ff10 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8026b6c:	901b      	str	r0, [sp, #108]	; 0x6c
 8026b6e:	4628      	mov	r0, r5
 8026b70:	f7f0 ff40 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8026b74:	901c      	str	r0, [sp, #112]	; 0x70
 8026b76:	4628      	mov	r0, r5
 8026b78:	f7f0 ff08 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8026b7c:	eeb4 9a48 	vcmp.f32	s18, s16
 8026b80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b84:	901d      	str	r0, [sp, #116]	; 0x74
 8026b86:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8026b8a:	d107      	bne.n	8026b9c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8026b8c:	eeb4 8a68 	vcmp.f32	s16, s17
 8026b90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b94:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8026b98:	bf08      	it	eq
 8026b9a:	461e      	moveq	r6, r3
 8026b9c:	4b12      	ldr	r3, [pc, #72]	; (8026be8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8026b9e:	681b      	ldr	r3, [r3, #0]
 8026ba0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8026ba4:	b10a      	cbz	r2, 8026baa <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8026ba6:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8026ba8:	b905      	cbnz	r5, 8026bac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8026baa:	689d      	ldr	r5, [r3, #8]
 8026bac:	682b      	ldr	r3, [r5, #0]
 8026bae:	4620      	mov	r0, r4
 8026bb0:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8026bb2:	f7ff fec2 	bl	802693a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8026bb6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8026bba:	9604      	str	r6, [sp, #16]
 8026bbc:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8026bc0:	ab13      	add	r3, sp, #76	; 0x4c
 8026bc2:	9301      	str	r3, [sp, #4]
 8026bc4:	ab15      	add	r3, sp, #84	; 0x54
 8026bc6:	9300      	str	r3, [sp, #0]
 8026bc8:	aa1e      	add	r2, sp, #120	; 0x78
 8026bca:	ab19      	add	r3, sp, #100	; 0x64
 8026bcc:	a917      	add	r1, sp, #92	; 0x5c
 8026bce:	4628      	mov	r0, r5
 8026bd0:	47b8      	blx	r7
 8026bd2:	b033      	add	sp, #204	; 0xcc
 8026bd4:	ecbd 8b04 	vpop	{d8-d9}
 8026bd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026bdc:	2300      	movs	r3, #0
 8026bde:	9312      	str	r3, [sp, #72]	; 0x48
 8026be0:	e6f7      	b.n	80269d2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8026be2:	bf00      	nop
 8026be4:	200137b6 	.word	0x200137b6
 8026be8:	200137bc 	.word	0x200137bc

08026bec <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8026bec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026bf0:	ed2d 8b02 	vpush	{d8}
 8026bf4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8026bf8:	b098      	sub	sp, #96	; 0x60
 8026bfa:	4604      	mov	r4, r0
 8026bfc:	4688      	mov	r8, r1
 8026bfe:	2b00      	cmp	r3, #0
 8026c00:	d077      	beq.n	8026cf2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8026c02:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8026c06:	4628      	mov	r0, r5
 8026c08:	f7f0 fec0 	bl	801798c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8026c0c:	ee07 0a90 	vmov	s15, r0
 8026c10:	4628      	mov	r0, r5
 8026c12:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8026c16:	f7f0 feed 	bl	80179f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8026c1a:	4b4e      	ldr	r3, [pc, #312]	; (8026d54 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8026c1c:	781b      	ldrb	r3, [r3, #0]
 8026c1e:	ee07 0a90 	vmov	s15, r0
 8026c22:	2b01      	cmp	r3, #1
 8026c24:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8026c28:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8026c2c:	d066      	beq.n	8026cfc <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8026c2e:	eeb0 6a47 	vmov.f32	s12, s14
 8026c32:	ee17 3a10 	vmov	r3, s14
 8026c36:	eeb0 4a48 	vmov.f32	s8, s16
 8026c3a:	eeb0 7a48 	vmov.f32	s14, s16
 8026c3e:	eef0 4a67 	vmov.f32	s9, s15
 8026c42:	eeb0 8a67 	vmov.f32	s16, s15
 8026c46:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8026c4a:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8026c4e:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8026c52:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8026c56:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8026c5a:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8026c5e:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8026c60:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8026c62:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8026c64:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8026c68:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8026c6c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8026c70:	ee73 1a65 	vsub.f32	s3, s6, s11
 8026c74:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8026c78:	ee32 1a45 	vsub.f32	s2, s4, s10
 8026c7c:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8026c80:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8026c84:	eee1 6a21 	vfma.f32	s13, s2, s3
 8026c88:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8026c8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026c90:	dd3d      	ble.n	8026d0e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8026c92:	ed8d 5a04 	vstr	s10, [sp, #16]
 8026c96:	ed8d 2a05 	vstr	s4, [sp, #20]
 8026c9a:	edcd 2a06 	vstr	s5, [sp, #24]
 8026c9e:	f8cd c01c 	str.w	ip, [sp, #28]
 8026ca2:	edcd 5a08 	vstr	s11, [sp, #32]
 8026ca6:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8026caa:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8026cae:	970b      	str	r7, [sp, #44]	; 0x2c
 8026cb0:	960c      	str	r6, [sp, #48]	; 0x30
 8026cb2:	950d      	str	r5, [sp, #52]	; 0x34
 8026cb4:	920e      	str	r2, [sp, #56]	; 0x38
 8026cb6:	900f      	str	r0, [sp, #60]	; 0x3c
 8026cb8:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8026cbc:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8026cc0:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8026cc4:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8026cc8:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8026ccc:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8026cd0:	9316      	str	r3, [sp, #88]	; 0x58
 8026cd2:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8026cd6:	ab14      	add	r3, sp, #80	; 0x50
 8026cd8:	9303      	str	r3, [sp, #12]
 8026cda:	ab10      	add	r3, sp, #64	; 0x40
 8026cdc:	9302      	str	r3, [sp, #8]
 8026cde:	ab0c      	add	r3, sp, #48	; 0x30
 8026ce0:	9301      	str	r3, [sp, #4]
 8026ce2:	ab08      	add	r3, sp, #32
 8026ce4:	9300      	str	r3, [sp, #0]
 8026ce6:	2200      	movs	r2, #0
 8026ce8:	ab04      	add	r3, sp, #16
 8026cea:	4641      	mov	r1, r8
 8026cec:	4620      	mov	r0, r4
 8026cee:	f7ff fe2d 	bl	802694c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8026cf2:	b018      	add	sp, #96	; 0x60
 8026cf4:	ecbd 8b02 	vpop	{d8}
 8026cf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026cfc:	eeb0 6a48 	vmov.f32	s12, s16
 8026d00:	eef0 4a47 	vmov.f32	s9, s14
 8026d04:	ee17 3a90 	vmov	r3, s15
 8026d08:	eeb0 4a67 	vmov.f32	s8, s15
 8026d0c:	e79b      	b.n	8026c46 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8026d0e:	ed8d 5a05 	vstr	s10, [sp, #20]
 8026d12:	ed8d 2a04 	vstr	s4, [sp, #16]
 8026d16:	f8cd c018 	str.w	ip, [sp, #24]
 8026d1a:	edcd 2a07 	vstr	s5, [sp, #28]
 8026d1e:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8026d22:	ed8d 3a08 	vstr	s6, [sp, #32]
 8026d26:	970a      	str	r7, [sp, #40]	; 0x28
 8026d28:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8026d2c:	960d      	str	r6, [sp, #52]	; 0x34
 8026d2e:	950c      	str	r5, [sp, #48]	; 0x30
 8026d30:	900e      	str	r0, [sp, #56]	; 0x38
 8026d32:	920f      	str	r2, [sp, #60]	; 0x3c
 8026d34:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8026d38:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8026d3c:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8026d40:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8026d44:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8026d48:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8026d4c:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8026d50:	9317      	str	r3, [sp, #92]	; 0x5c
 8026d52:	e7c0      	b.n	8026cd6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8026d54:	200137b4 	.word	0x200137b4

08026d58 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8026d58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026d5a:	b08d      	sub	sp, #52	; 0x34
 8026d5c:	2300      	movs	r3, #0
 8026d5e:	9304      	str	r3, [sp, #16]
 8026d60:	9305      	str	r3, [sp, #20]
 8026d62:	9306      	str	r3, [sp, #24]
 8026d64:	aa04      	add	r2, sp, #16
 8026d66:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8026d6a:	9307      	str	r3, [sp, #28]
 8026d6c:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8026d70:	4613      	mov	r3, r2
 8026d72:	f101 0710 	add.w	r7, r1, #16
 8026d76:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8026db4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8026d7a:	460c      	mov	r4, r1
 8026d7c:	4605      	mov	r5, r0
 8026d7e:	ecb4 7a01 	vldmia	r4!, {s14}
 8026d82:	ecf5 6a01 	vldmia	r5!, {s13}
 8026d86:	42bc      	cmp	r4, r7
 8026d88:	eee6 7a87 	vfma.f32	s15, s13, s14
 8026d8c:	d1f7      	bne.n	8026d7e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8026d8e:	3010      	adds	r0, #16
 8026d90:	42b0      	cmp	r0, r6
 8026d92:	ece2 7a01 	vstmia	r2!, {s15}
 8026d96:	d1ee      	bne.n	8026d76 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8026d98:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8026d9a:	ac0c      	add	r4, sp, #48	; 0x30
 8026d9c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8026da0:	ed9d 0a08 	vldr	s0, [sp, #32]
 8026da4:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8026da8:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8026dac:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8026db0:	b00d      	add	sp, #52	; 0x34
 8026db2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026db4:	00000000 	.word	0x00000000

08026db8 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8026db8:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8026de8 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8026dbc:	2300      	movs	r3, #0
 8026dbe:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8026dc2:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8026dc6:	2200      	movs	r2, #0
 8026dc8:	4293      	cmp	r3, r2
 8026dca:	f102 0201 	add.w	r2, r2, #1
 8026dce:	bf14      	ite	ne
 8026dd0:	eef0 6a47 	vmovne.f32	s13, s14
 8026dd4:	eef0 6a67 	vmoveq.f32	s13, s15
 8026dd8:	2a04      	cmp	r2, #4
 8026dda:	ece1 6a01 	vstmia	r1!, {s13}
 8026dde:	d1f3      	bne.n	8026dc8 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8026de0:	3301      	adds	r3, #1
 8026de2:	2b04      	cmp	r3, #4
 8026de4:	d1ed      	bne.n	8026dc2 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8026de6:	4770      	bx	lr
 8026de8:	00000000 	.word	0x00000000

08026dec <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8026dec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026df0:	460c      	mov	r4, r1
 8026df2:	4605      	mov	r5, r0
 8026df4:	4690      	mov	r8, r2
 8026df6:	f7ff ffdf 	bl	8026db8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026dfa:	4628      	mov	r0, r5
 8026dfc:	4621      	mov	r1, r4
 8026dfe:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8026e02:	2300      	movs	r3, #0
 8026e04:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8026e44 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8026e08:	eb08 0603 	add.w	r6, r8, r3
 8026e0c:	460f      	mov	r7, r1
 8026e0e:	2400      	movs	r4, #0
 8026e10:	4632      	mov	r2, r6
 8026e12:	ecf7 6a01 	vldmia	r7!, {s13}
 8026e16:	ed92 7a00 	vldr	s14, [r2]
 8026e1a:	3401      	adds	r4, #1
 8026e1c:	2c04      	cmp	r4, #4
 8026e1e:	f106 0610 	add.w	r6, r6, #16
 8026e22:	eee6 7a87 	vfma.f32	s15, s13, s14
 8026e26:	d1f3      	bne.n	8026e10 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8026e28:	18c2      	adds	r2, r0, r3
 8026e2a:	3304      	adds	r3, #4
 8026e2c:	2b10      	cmp	r3, #16
 8026e2e:	edc2 7a00 	vstr	s15, [r2]
 8026e32:	d1e7      	bne.n	8026e04 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8026e34:	3110      	adds	r1, #16
 8026e36:	4561      	cmp	r1, ip
 8026e38:	f100 0010 	add.w	r0, r0, #16
 8026e3c:	d1e1      	bne.n	8026e02 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8026e3e:	4628      	mov	r0, r5
 8026e40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026e44:	00000000 	.word	0x00000000

08026e48 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8026e48:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8026e4c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8026e50:	f100 0320 	add.w	r3, r0, #32
 8026e54:	3030      	adds	r0, #48	; 0x30
 8026e56:	ecf3 7a01 	vldmia	r3!, {s15}
 8026e5a:	ee60 7a27 	vmul.f32	s15, s0, s15
 8026e5e:	4283      	cmp	r3, r0
 8026e60:	edc3 7a03 	vstr	s15, [r3, #12]
 8026e64:	d1f7      	bne.n	8026e56 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8026e66:	4770      	bx	lr

08026e68 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8026e68:	b510      	push	{r4, lr}
 8026e6a:	ed2d 8b02 	vpush	{d8}
 8026e6e:	4604      	mov	r4, r0
 8026e70:	eef0 8a40 	vmov.f32	s17, s0
 8026e74:	f000 f938 	bl	80270e8 <sinf>
 8026e78:	eeb0 8a40 	vmov.f32	s16, s0
 8026e7c:	eeb0 0a68 	vmov.f32	s0, s17
 8026e80:	f000 f8ee 	bl	8027060 <cosf>
 8026e84:	f104 0310 	add.w	r3, r4, #16
 8026e88:	f104 0220 	add.w	r2, r4, #32
 8026e8c:	eeb1 6a48 	vneg.f32	s12, s16
 8026e90:	edd3 7a04 	vldr	s15, [r3, #16]
 8026e94:	edd3 6a00 	vldr	s13, [r3]
 8026e98:	ee26 7a27 	vmul.f32	s14, s12, s15
 8026e9c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026ea0:	eea6 7a80 	vfma.f32	s14, s13, s0
 8026ea4:	eee6 7a88 	vfma.f32	s15, s13, s16
 8026ea8:	eca3 7a01 	vstmia	r3!, {s14}
 8026eac:	429a      	cmp	r2, r3
 8026eae:	edc3 7a03 	vstr	s15, [r3, #12]
 8026eb2:	d1ed      	bne.n	8026e90 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8026eb4:	ecbd 8b02 	vpop	{d8}
 8026eb8:	4620      	mov	r0, r4
 8026eba:	bd10      	pop	{r4, pc}

08026ebc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8026ebc:	b510      	push	{r4, lr}
 8026ebe:	ed2d 8b02 	vpush	{d8}
 8026ec2:	4604      	mov	r4, r0
 8026ec4:	eef0 8a40 	vmov.f32	s17, s0
 8026ec8:	f000 f90e 	bl	80270e8 <sinf>
 8026ecc:	eeb0 8a40 	vmov.f32	s16, s0
 8026ed0:	eeb0 0a68 	vmov.f32	s0, s17
 8026ed4:	f000 f8c4 	bl	8027060 <cosf>
 8026ed8:	4623      	mov	r3, r4
 8026eda:	f104 0210 	add.w	r2, r4, #16
 8026ede:	eeb1 6a48 	vneg.f32	s12, s16
 8026ee2:	edd3 7a08 	vldr	s15, [r3, #32]
 8026ee6:	edd3 6a00 	vldr	s13, [r3]
 8026eea:	ee27 7a88 	vmul.f32	s14, s15, s16
 8026eee:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026ef2:	eea6 7a80 	vfma.f32	s14, s13, s0
 8026ef6:	eee6 7a26 	vfma.f32	s15, s12, s13
 8026efa:	eca3 7a01 	vstmia	r3!, {s14}
 8026efe:	429a      	cmp	r2, r3
 8026f00:	edc3 7a07 	vstr	s15, [r3, #28]
 8026f04:	d1ed      	bne.n	8026ee2 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8026f06:	ecbd 8b02 	vpop	{d8}
 8026f0a:	4620      	mov	r0, r4
 8026f0c:	bd10      	pop	{r4, pc}

08026f0e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8026f0e:	b510      	push	{r4, lr}
 8026f10:	ed2d 8b02 	vpush	{d8}
 8026f14:	4604      	mov	r4, r0
 8026f16:	eef0 8a40 	vmov.f32	s17, s0
 8026f1a:	f000 f8e5 	bl	80270e8 <sinf>
 8026f1e:	eeb0 8a40 	vmov.f32	s16, s0
 8026f22:	eeb0 0a68 	vmov.f32	s0, s17
 8026f26:	f000 f89b 	bl	8027060 <cosf>
 8026f2a:	4623      	mov	r3, r4
 8026f2c:	f104 0210 	add.w	r2, r4, #16
 8026f30:	eeb1 6a48 	vneg.f32	s12, s16
 8026f34:	edd3 7a04 	vldr	s15, [r3, #16]
 8026f38:	edd3 6a00 	vldr	s13, [r3]
 8026f3c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8026f40:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026f44:	eea6 7a80 	vfma.f32	s14, s13, s0
 8026f48:	eee6 7a88 	vfma.f32	s15, s13, s16
 8026f4c:	eca3 7a01 	vstmia	r3!, {s14}
 8026f50:	429a      	cmp	r2, r3
 8026f52:	edc3 7a03 	vstr	s15, [r3, #12]
 8026f56:	d1ed      	bne.n	8026f34 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8026f58:	ecbd 8b02 	vpop	{d8}
 8026f5c:	4620      	mov	r0, r4
 8026f5e:	bd10      	pop	{r4, pc}

08026f60 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8026f60:	4603      	mov	r3, r0
 8026f62:	f100 0210 	add.w	r2, r0, #16
 8026f66:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8026f6a:	edd3 7a00 	vldr	s15, [r3]
 8026f6e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8026f72:	ece3 7a01 	vstmia	r3!, {s15}
 8026f76:	4293      	cmp	r3, r2
 8026f78:	d1f5      	bne.n	8026f66 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8026f7a:	4770      	bx	lr

08026f7c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8026f7c:	f100 0310 	add.w	r3, r0, #16
 8026f80:	f100 0220 	add.w	r2, r0, #32
 8026f84:	ed93 7a08 	vldr	s14, [r3, #32]
 8026f88:	edd3 7a00 	vldr	s15, [r3]
 8026f8c:	eee7 7a00 	vfma.f32	s15, s14, s0
 8026f90:	ece3 7a01 	vstmia	r3!, {s15}
 8026f94:	4293      	cmp	r3, r2
 8026f96:	d1f5      	bne.n	8026f84 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8026f98:	4770      	bx	lr

08026f9a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8026f9a:	f100 0320 	add.w	r3, r0, #32
 8026f9e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8026fa2:	ed93 7a04 	vldr	s14, [r3, #16]
 8026fa6:	edd3 7a00 	vldr	s15, [r3]
 8026faa:	eee7 7a00 	vfma.f32	s15, s14, s0
 8026fae:	ece3 7a01 	vstmia	r3!, {s15}
 8026fb2:	4293      	cmp	r3, r2
 8026fb4:	d1f5      	bne.n	8026fa2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8026fb6:	4770      	bx	lr

08026fb8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8026fb8:	4603      	mov	r3, r0
 8026fba:	f100 0210 	add.w	r2, r0, #16
 8026fbe:	edd3 7a00 	vldr	s15, [r3]
 8026fc2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026fc6:	ece3 7a01 	vstmia	r3!, {s15}
 8026fca:	4293      	cmp	r3, r2
 8026fcc:	d1f7      	bne.n	8026fbe <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8026fce:	4770      	bx	lr

08026fd0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8026fd0:	f100 0310 	add.w	r3, r0, #16
 8026fd4:	f100 0220 	add.w	r2, r0, #32
 8026fd8:	edd3 7a00 	vldr	s15, [r3]
 8026fdc:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026fe0:	ece3 7a01 	vstmia	r3!, {s15}
 8026fe4:	4293      	cmp	r3, r2
 8026fe6:	d1f7      	bne.n	8026fd8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8026fe8:	4770      	bx	lr

08026fea <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8026fea:	f100 0320 	add.w	r3, r0, #32
 8026fee:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8026ff2:	edd3 7a00 	vldr	s15, [r3]
 8026ff6:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026ffa:	ece3 7a01 	vstmia	r3!, {s15}
 8026ffe:	4293      	cmp	r3, r2
 8027000:	d1f7      	bne.n	8026ff2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8027002:	4770      	bx	lr

08027004 <__aeabi_atexit>:
 8027004:	460b      	mov	r3, r1
 8027006:	4601      	mov	r1, r0
 8027008:	4618      	mov	r0, r3
 802700a:	f000 bed1 	b.w	8027db0 <__cxa_atexit>

0802700e <_ZdlPvj>:
 802700e:	f000 b812 	b.w	8027036 <_ZdlPv>

08027012 <__cxa_guard_acquire>:
 8027012:	6803      	ldr	r3, [r0, #0]
 8027014:	07db      	lsls	r3, r3, #31
 8027016:	d406      	bmi.n	8027026 <__cxa_guard_acquire+0x14>
 8027018:	7843      	ldrb	r3, [r0, #1]
 802701a:	b103      	cbz	r3, 802701e <__cxa_guard_acquire+0xc>
 802701c:	deff      	udf	#255	; 0xff
 802701e:	2301      	movs	r3, #1
 8027020:	7043      	strb	r3, [r0, #1]
 8027022:	4618      	mov	r0, r3
 8027024:	4770      	bx	lr
 8027026:	2000      	movs	r0, #0
 8027028:	4770      	bx	lr

0802702a <__cxa_guard_release>:
 802702a:	2301      	movs	r3, #1
 802702c:	6003      	str	r3, [r0, #0]
 802702e:	4770      	bx	lr

08027030 <__cxa_pure_virtual>:
 8027030:	b508      	push	{r3, lr}
 8027032:	f000 f80f 	bl	8027054 <_ZSt9terminatev>

08027036 <_ZdlPv>:
 8027036:	f000 be07 	b.w	8027c48 <free>

0802703a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802703a:	b508      	push	{r3, lr}
 802703c:	4780      	blx	r0
 802703e:	f000 fdcf 	bl	8027be0 <abort>
	...

08027044 <_ZSt13get_terminatev>:
 8027044:	4b02      	ldr	r3, [pc, #8]	; (8027050 <_ZSt13get_terminatev+0xc>)
 8027046:	6818      	ldr	r0, [r3, #0]
 8027048:	f3bf 8f5b 	dmb	ish
 802704c:	4770      	bx	lr
 802704e:	bf00      	nop
 8027050:	20000104 	.word	0x20000104

08027054 <_ZSt9terminatev>:
 8027054:	b508      	push	{r3, lr}
 8027056:	f7ff fff5 	bl	8027044 <_ZSt13get_terminatev>
 802705a:	f7ff ffee 	bl	802703a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08027060 <cosf>:
 8027060:	ee10 3a10 	vmov	r3, s0
 8027064:	b507      	push	{r0, r1, r2, lr}
 8027066:	4a1e      	ldr	r2, [pc, #120]	; (80270e0 <cosf+0x80>)
 8027068:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802706c:	4293      	cmp	r3, r2
 802706e:	dc06      	bgt.n	802707e <cosf+0x1e>
 8027070:	eddf 0a1c 	vldr	s1, [pc, #112]	; 80270e4 <cosf+0x84>
 8027074:	b003      	add	sp, #12
 8027076:	f85d eb04 	ldr.w	lr, [sp], #4
 802707a:	f000 b8ff 	b.w	802727c <__kernel_cosf>
 802707e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8027082:	db04      	blt.n	802708e <cosf+0x2e>
 8027084:	ee30 0a40 	vsub.f32	s0, s0, s0
 8027088:	b003      	add	sp, #12
 802708a:	f85d fb04 	ldr.w	pc, [sp], #4
 802708e:	4668      	mov	r0, sp
 8027090:	f000 f99a 	bl	80273c8 <__ieee754_rem_pio2f>
 8027094:	f000 0003 	and.w	r0, r0, #3
 8027098:	2801      	cmp	r0, #1
 802709a:	d009      	beq.n	80270b0 <cosf+0x50>
 802709c:	2802      	cmp	r0, #2
 802709e:	d010      	beq.n	80270c2 <cosf+0x62>
 80270a0:	b9b0      	cbnz	r0, 80270d0 <cosf+0x70>
 80270a2:	eddd 0a01 	vldr	s1, [sp, #4]
 80270a6:	ed9d 0a00 	vldr	s0, [sp]
 80270aa:	f000 f8e7 	bl	802727c <__kernel_cosf>
 80270ae:	e7eb      	b.n	8027088 <cosf+0x28>
 80270b0:	eddd 0a01 	vldr	s1, [sp, #4]
 80270b4:	ed9d 0a00 	vldr	s0, [sp]
 80270b8:	f000 f93e 	bl	8027338 <__kernel_sinf>
 80270bc:	eeb1 0a40 	vneg.f32	s0, s0
 80270c0:	e7e2      	b.n	8027088 <cosf+0x28>
 80270c2:	eddd 0a01 	vldr	s1, [sp, #4]
 80270c6:	ed9d 0a00 	vldr	s0, [sp]
 80270ca:	f000 f8d7 	bl	802727c <__kernel_cosf>
 80270ce:	e7f5      	b.n	80270bc <cosf+0x5c>
 80270d0:	eddd 0a01 	vldr	s1, [sp, #4]
 80270d4:	ed9d 0a00 	vldr	s0, [sp]
 80270d8:	2001      	movs	r0, #1
 80270da:	f000 f92d 	bl	8027338 <__kernel_sinf>
 80270de:	e7d3      	b.n	8027088 <cosf+0x28>
 80270e0:	3f490fd8 	.word	0x3f490fd8
 80270e4:	00000000 	.word	0x00000000

080270e8 <sinf>:
 80270e8:	ee10 3a10 	vmov	r3, s0
 80270ec:	b507      	push	{r0, r1, r2, lr}
 80270ee:	4a1f      	ldr	r2, [pc, #124]	; (802716c <sinf+0x84>)
 80270f0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80270f4:	4293      	cmp	r3, r2
 80270f6:	dc07      	bgt.n	8027108 <sinf+0x20>
 80270f8:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8027170 <sinf+0x88>
 80270fc:	2000      	movs	r0, #0
 80270fe:	b003      	add	sp, #12
 8027100:	f85d eb04 	ldr.w	lr, [sp], #4
 8027104:	f000 b918 	b.w	8027338 <__kernel_sinf>
 8027108:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802710c:	db04      	blt.n	8027118 <sinf+0x30>
 802710e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8027112:	b003      	add	sp, #12
 8027114:	f85d fb04 	ldr.w	pc, [sp], #4
 8027118:	4668      	mov	r0, sp
 802711a:	f000 f955 	bl	80273c8 <__ieee754_rem_pio2f>
 802711e:	f000 0003 	and.w	r0, r0, #3
 8027122:	2801      	cmp	r0, #1
 8027124:	d00a      	beq.n	802713c <sinf+0x54>
 8027126:	2802      	cmp	r0, #2
 8027128:	d00f      	beq.n	802714a <sinf+0x62>
 802712a:	b9c0      	cbnz	r0, 802715e <sinf+0x76>
 802712c:	eddd 0a01 	vldr	s1, [sp, #4]
 8027130:	ed9d 0a00 	vldr	s0, [sp]
 8027134:	2001      	movs	r0, #1
 8027136:	f000 f8ff 	bl	8027338 <__kernel_sinf>
 802713a:	e7ea      	b.n	8027112 <sinf+0x2a>
 802713c:	eddd 0a01 	vldr	s1, [sp, #4]
 8027140:	ed9d 0a00 	vldr	s0, [sp]
 8027144:	f000 f89a 	bl	802727c <__kernel_cosf>
 8027148:	e7e3      	b.n	8027112 <sinf+0x2a>
 802714a:	eddd 0a01 	vldr	s1, [sp, #4]
 802714e:	ed9d 0a00 	vldr	s0, [sp]
 8027152:	2001      	movs	r0, #1
 8027154:	f000 f8f0 	bl	8027338 <__kernel_sinf>
 8027158:	eeb1 0a40 	vneg.f32	s0, s0
 802715c:	e7d9      	b.n	8027112 <sinf+0x2a>
 802715e:	eddd 0a01 	vldr	s1, [sp, #4]
 8027162:	ed9d 0a00 	vldr	s0, [sp]
 8027166:	f000 f889 	bl	802727c <__kernel_cosf>
 802716a:	e7f5      	b.n	8027158 <sinf+0x70>
 802716c:	3f490fd8 	.word	0x3f490fd8
 8027170:	00000000 	.word	0x00000000

08027174 <ceilf>:
 8027174:	ee10 3a10 	vmov	r3, s0
 8027178:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802717c:	3a7f      	subs	r2, #127	; 0x7f
 802717e:	2a16      	cmp	r2, #22
 8027180:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8027184:	dc2a      	bgt.n	80271dc <ceilf+0x68>
 8027186:	2a00      	cmp	r2, #0
 8027188:	da11      	bge.n	80271ae <ceilf+0x3a>
 802718a:	eddf 7a19 	vldr	s15, [pc, #100]	; 80271f0 <ceilf+0x7c>
 802718e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027192:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802719a:	dd05      	ble.n	80271a8 <ceilf+0x34>
 802719c:	2b00      	cmp	r3, #0
 802719e:	db23      	blt.n	80271e8 <ceilf+0x74>
 80271a0:	2900      	cmp	r1, #0
 80271a2:	bf18      	it	ne
 80271a4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 80271a8:	ee00 3a10 	vmov	s0, r3
 80271ac:	4770      	bx	lr
 80271ae:	4911      	ldr	r1, [pc, #68]	; (80271f4 <ceilf+0x80>)
 80271b0:	4111      	asrs	r1, r2
 80271b2:	420b      	tst	r3, r1
 80271b4:	d0fa      	beq.n	80271ac <ceilf+0x38>
 80271b6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80271f0 <ceilf+0x7c>
 80271ba:	ee30 0a27 	vadd.f32	s0, s0, s15
 80271be:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80271c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271c6:	ddef      	ble.n	80271a8 <ceilf+0x34>
 80271c8:	2b00      	cmp	r3, #0
 80271ca:	bfc2      	ittt	gt
 80271cc:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 80271d0:	fa40 f202 	asrgt.w	r2, r0, r2
 80271d4:	189b      	addgt	r3, r3, r2
 80271d6:	ea23 0301 	bic.w	r3, r3, r1
 80271da:	e7e5      	b.n	80271a8 <ceilf+0x34>
 80271dc:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80271e0:	d3e4      	bcc.n	80271ac <ceilf+0x38>
 80271e2:	ee30 0a00 	vadd.f32	s0, s0, s0
 80271e6:	4770      	bx	lr
 80271e8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80271ec:	e7dc      	b.n	80271a8 <ceilf+0x34>
 80271ee:	bf00      	nop
 80271f0:	7149f2ca 	.word	0x7149f2ca
 80271f4:	007fffff 	.word	0x007fffff

080271f8 <floorf>:
 80271f8:	ee10 3a10 	vmov	r3, s0
 80271fc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027200:	3a7f      	subs	r2, #127	; 0x7f
 8027202:	2a16      	cmp	r2, #22
 8027204:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8027208:	dc2a      	bgt.n	8027260 <floorf+0x68>
 802720a:	2a00      	cmp	r2, #0
 802720c:	da11      	bge.n	8027232 <floorf+0x3a>
 802720e:	eddf 7a18 	vldr	s15, [pc, #96]	; 8027270 <floorf+0x78>
 8027212:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027216:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802721a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802721e:	dd05      	ble.n	802722c <floorf+0x34>
 8027220:	2b00      	cmp	r3, #0
 8027222:	da23      	bge.n	802726c <floorf+0x74>
 8027224:	4a13      	ldr	r2, [pc, #76]	; (8027274 <floorf+0x7c>)
 8027226:	2900      	cmp	r1, #0
 8027228:	bf18      	it	ne
 802722a:	4613      	movne	r3, r2
 802722c:	ee00 3a10 	vmov	s0, r3
 8027230:	4770      	bx	lr
 8027232:	4911      	ldr	r1, [pc, #68]	; (8027278 <floorf+0x80>)
 8027234:	4111      	asrs	r1, r2
 8027236:	420b      	tst	r3, r1
 8027238:	d0fa      	beq.n	8027230 <floorf+0x38>
 802723a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8027270 <floorf+0x78>
 802723e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027242:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027246:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802724a:	ddef      	ble.n	802722c <floorf+0x34>
 802724c:	2b00      	cmp	r3, #0
 802724e:	bfbe      	ittt	lt
 8027250:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8027254:	fa40 f202 	asrlt.w	r2, r0, r2
 8027258:	189b      	addlt	r3, r3, r2
 802725a:	ea23 0301 	bic.w	r3, r3, r1
 802725e:	e7e5      	b.n	802722c <floorf+0x34>
 8027260:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8027264:	d3e4      	bcc.n	8027230 <floorf+0x38>
 8027266:	ee30 0a00 	vadd.f32	s0, s0, s0
 802726a:	4770      	bx	lr
 802726c:	2300      	movs	r3, #0
 802726e:	e7dd      	b.n	802722c <floorf+0x34>
 8027270:	7149f2ca 	.word	0x7149f2ca
 8027274:	bf800000 	.word	0xbf800000
 8027278:	007fffff 	.word	0x007fffff

0802727c <__kernel_cosf>:
 802727c:	ee10 3a10 	vmov	r3, s0
 8027280:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027284:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8027288:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802728c:	da05      	bge.n	802729a <__kernel_cosf+0x1e>
 802728e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8027292:	ee17 2a90 	vmov	r2, s15
 8027296:	2a00      	cmp	r2, #0
 8027298:	d03b      	beq.n	8027312 <__kernel_cosf+0x96>
 802729a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802729e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8027318 <__kernel_cosf+0x9c>
 80272a2:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802731c <__kernel_cosf+0xa0>
 80272a6:	4a1e      	ldr	r2, [pc, #120]	; (8027320 <__kernel_cosf+0xa4>)
 80272a8:	eea7 6a27 	vfma.f32	s12, s14, s15
 80272ac:	4293      	cmp	r3, r2
 80272ae:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8027324 <__kernel_cosf+0xa8>
 80272b2:	eee6 7a07 	vfma.f32	s15, s12, s14
 80272b6:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 8027328 <__kernel_cosf+0xac>
 80272ba:	eea7 6a87 	vfma.f32	s12, s15, s14
 80272be:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802732c <__kernel_cosf+0xb0>
 80272c2:	eee6 7a07 	vfma.f32	s15, s12, s14
 80272c6:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8027330 <__kernel_cosf+0xb4>
 80272ca:	eea7 6a87 	vfma.f32	s12, s15, s14
 80272ce:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 80272d2:	ee26 6a07 	vmul.f32	s12, s12, s14
 80272d6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80272da:	eee7 0a06 	vfma.f32	s1, s14, s12
 80272de:	ee67 7a27 	vmul.f32	s15, s14, s15
 80272e2:	dc04      	bgt.n	80272ee <__kernel_cosf+0x72>
 80272e4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80272e8:	ee36 0ae7 	vsub.f32	s0, s13, s15
 80272ec:	4770      	bx	lr
 80272ee:	4a11      	ldr	r2, [pc, #68]	; (8027334 <__kernel_cosf+0xb8>)
 80272f0:	4293      	cmp	r3, r2
 80272f2:	bfda      	itte	le
 80272f4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 80272f8:	ee07 3a10 	vmovle	s14, r3
 80272fc:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8027300:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027304:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8027308:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802730c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027310:	4770      	bx	lr
 8027312:	eeb0 0a66 	vmov.f32	s0, s13
 8027316:	4770      	bx	lr
 8027318:	ad47d74e 	.word	0xad47d74e
 802731c:	310f74f6 	.word	0x310f74f6
 8027320:	3e999999 	.word	0x3e999999
 8027324:	b493f27c 	.word	0xb493f27c
 8027328:	37d00d01 	.word	0x37d00d01
 802732c:	bab60b61 	.word	0xbab60b61
 8027330:	3d2aaaab 	.word	0x3d2aaaab
 8027334:	3f480000 	.word	0x3f480000

08027338 <__kernel_sinf>:
 8027338:	ee10 3a10 	vmov	r3, s0
 802733c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027340:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8027344:	da04      	bge.n	8027350 <__kernel_sinf+0x18>
 8027346:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802734a:	ee17 3a90 	vmov	r3, s15
 802734e:	b35b      	cbz	r3, 80273a8 <__kernel_sinf+0x70>
 8027350:	ee20 7a00 	vmul.f32	s14, s0, s0
 8027354:	eddf 7a15 	vldr	s15, [pc, #84]	; 80273ac <__kernel_sinf+0x74>
 8027358:	ed9f 6a15 	vldr	s12, [pc, #84]	; 80273b0 <__kernel_sinf+0x78>
 802735c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027360:	eddf 7a14 	vldr	s15, [pc, #80]	; 80273b4 <__kernel_sinf+0x7c>
 8027364:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027368:	ed9f 6a13 	vldr	s12, [pc, #76]	; 80273b8 <__kernel_sinf+0x80>
 802736c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027370:	eddf 7a12 	vldr	s15, [pc, #72]	; 80273bc <__kernel_sinf+0x84>
 8027374:	ee60 6a07 	vmul.f32	s13, s0, s14
 8027378:	eee6 7a07 	vfma.f32	s15, s12, s14
 802737c:	b930      	cbnz	r0, 802738c <__kernel_sinf+0x54>
 802737e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 80273c0 <__kernel_sinf+0x88>
 8027382:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027386:	eea6 0a26 	vfma.f32	s0, s12, s13
 802738a:	4770      	bx	lr
 802738c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8027390:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8027394:	eee0 7a86 	vfma.f32	s15, s1, s12
 8027398:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802739c:	eddf 7a09 	vldr	s15, [pc, #36]	; 80273c4 <__kernel_sinf+0x8c>
 80273a0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80273a4:	ee30 0a60 	vsub.f32	s0, s0, s1
 80273a8:	4770      	bx	lr
 80273aa:	bf00      	nop
 80273ac:	2f2ec9d3 	.word	0x2f2ec9d3
 80273b0:	b2d72f34 	.word	0xb2d72f34
 80273b4:	3638ef1b 	.word	0x3638ef1b
 80273b8:	b9500d01 	.word	0xb9500d01
 80273bc:	3c088889 	.word	0x3c088889
 80273c0:	be2aaaab 	.word	0xbe2aaaab
 80273c4:	3e2aaaab 	.word	0x3e2aaaab

080273c8 <__ieee754_rem_pio2f>:
 80273c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80273ca:	ee10 6a10 	vmov	r6, s0
 80273ce:	4b86      	ldr	r3, [pc, #536]	; (80275e8 <__ieee754_rem_pio2f+0x220>)
 80273d0:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 80273d4:	429d      	cmp	r5, r3
 80273d6:	b087      	sub	sp, #28
 80273d8:	4604      	mov	r4, r0
 80273da:	dc05      	bgt.n	80273e8 <__ieee754_rem_pio2f+0x20>
 80273dc:	2300      	movs	r3, #0
 80273de:	ed80 0a00 	vstr	s0, [r0]
 80273e2:	6043      	str	r3, [r0, #4]
 80273e4:	2000      	movs	r0, #0
 80273e6:	e020      	b.n	802742a <__ieee754_rem_pio2f+0x62>
 80273e8:	4b80      	ldr	r3, [pc, #512]	; (80275ec <__ieee754_rem_pio2f+0x224>)
 80273ea:	429d      	cmp	r5, r3
 80273ec:	dc38      	bgt.n	8027460 <__ieee754_rem_pio2f+0x98>
 80273ee:	2e00      	cmp	r6, #0
 80273f0:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 80275f0 <__ieee754_rem_pio2f+0x228>
 80273f4:	4b7f      	ldr	r3, [pc, #508]	; (80275f4 <__ieee754_rem_pio2f+0x22c>)
 80273f6:	f025 050f 	bic.w	r5, r5, #15
 80273fa:	dd18      	ble.n	802742e <__ieee754_rem_pio2f+0x66>
 80273fc:	429d      	cmp	r5, r3
 80273fe:	ee70 7a47 	vsub.f32	s15, s0, s14
 8027402:	bf09      	itett	eq
 8027404:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 80275f8 <__ieee754_rem_pio2f+0x230>
 8027408:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 80275fc <__ieee754_rem_pio2f+0x234>
 802740c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8027410:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8027600 <__ieee754_rem_pio2f+0x238>
 8027414:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8027418:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802741c:	edc0 6a00 	vstr	s13, [r0]
 8027420:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027424:	edc0 7a01 	vstr	s15, [r0, #4]
 8027428:	2001      	movs	r0, #1
 802742a:	b007      	add	sp, #28
 802742c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802742e:	429d      	cmp	r5, r3
 8027430:	ee70 7a07 	vadd.f32	s15, s0, s14
 8027434:	bf09      	itett	eq
 8027436:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 80275f8 <__ieee754_rem_pio2f+0x230>
 802743a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 80275fc <__ieee754_rem_pio2f+0x234>
 802743e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8027442:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8027600 <__ieee754_rem_pio2f+0x238>
 8027446:	ee77 6a87 	vadd.f32	s13, s15, s14
 802744a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802744e:	edc0 6a00 	vstr	s13, [r0]
 8027452:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027456:	edc0 7a01 	vstr	s15, [r0, #4]
 802745a:	f04f 30ff 	mov.w	r0, #4294967295
 802745e:	e7e4      	b.n	802742a <__ieee754_rem_pio2f+0x62>
 8027460:	4b68      	ldr	r3, [pc, #416]	; (8027604 <__ieee754_rem_pio2f+0x23c>)
 8027462:	429d      	cmp	r5, r3
 8027464:	dc71      	bgt.n	802754a <__ieee754_rem_pio2f+0x182>
 8027466:	f000 f8db 	bl	8027620 <fabsf>
 802746a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8027608 <__ieee754_rem_pio2f+0x240>
 802746e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8027472:	eee0 7a07 	vfma.f32	s15, s0, s14
 8027476:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802747a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802747e:	ee17 0a90 	vmov	r0, s15
 8027482:	eddf 7a5b 	vldr	s15, [pc, #364]	; 80275f0 <__ieee754_rem_pio2f+0x228>
 8027486:	eea7 0a67 	vfms.f32	s0, s14, s15
 802748a:	281f      	cmp	r0, #31
 802748c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 80275fc <__ieee754_rem_pio2f+0x234>
 8027490:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027494:	eeb1 6a47 	vneg.f32	s12, s14
 8027498:	ee70 6a67 	vsub.f32	s13, s0, s15
 802749c:	ee16 2a90 	vmov	r2, s13
 80274a0:	dc1c      	bgt.n	80274dc <__ieee754_rem_pio2f+0x114>
 80274a2:	495a      	ldr	r1, [pc, #360]	; (802760c <__ieee754_rem_pio2f+0x244>)
 80274a4:	1e47      	subs	r7, r0, #1
 80274a6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 80274aa:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80274ae:	428b      	cmp	r3, r1
 80274b0:	d014      	beq.n	80274dc <__ieee754_rem_pio2f+0x114>
 80274b2:	6022      	str	r2, [r4, #0]
 80274b4:	ed94 7a00 	vldr	s14, [r4]
 80274b8:	ee30 0a47 	vsub.f32	s0, s0, s14
 80274bc:	2e00      	cmp	r6, #0
 80274be:	ee30 0a67 	vsub.f32	s0, s0, s15
 80274c2:	ed84 0a01 	vstr	s0, [r4, #4]
 80274c6:	dab0      	bge.n	802742a <__ieee754_rem_pio2f+0x62>
 80274c8:	eeb1 7a47 	vneg.f32	s14, s14
 80274cc:	eeb1 0a40 	vneg.f32	s0, s0
 80274d0:	ed84 7a00 	vstr	s14, [r4]
 80274d4:	ed84 0a01 	vstr	s0, [r4, #4]
 80274d8:	4240      	negs	r0, r0
 80274da:	e7a6      	b.n	802742a <__ieee754_rem_pio2f+0x62>
 80274dc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80274e0:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 80274e4:	2908      	cmp	r1, #8
 80274e6:	ea4f 53e5 	mov.w	r3, r5, asr #23
 80274ea:	dde2      	ble.n	80274b2 <__ieee754_rem_pio2f+0xea>
 80274ec:	eddf 5a42 	vldr	s11, [pc, #264]	; 80275f8 <__ieee754_rem_pio2f+0x230>
 80274f0:	eef0 6a40 	vmov.f32	s13, s0
 80274f4:	eee6 6a25 	vfma.f32	s13, s12, s11
 80274f8:	ee70 7a66 	vsub.f32	s15, s0, s13
 80274fc:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027500:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8027600 <__ieee754_rem_pio2f+0x238>
 8027504:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8027508:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802750c:	ee15 2a90 	vmov	r2, s11
 8027510:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027514:	1a5b      	subs	r3, r3, r1
 8027516:	2b19      	cmp	r3, #25
 8027518:	dc04      	bgt.n	8027524 <__ieee754_rem_pio2f+0x15c>
 802751a:	edc4 5a00 	vstr	s11, [r4]
 802751e:	eeb0 0a66 	vmov.f32	s0, s13
 8027522:	e7c7      	b.n	80274b4 <__ieee754_rem_pio2f+0xec>
 8027524:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8027610 <__ieee754_rem_pio2f+0x248>
 8027528:	eeb0 0a66 	vmov.f32	s0, s13
 802752c:	eea6 0a25 	vfma.f32	s0, s12, s11
 8027530:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8027534:	eddf 6a37 	vldr	s13, [pc, #220]	; 8027614 <__ieee754_rem_pio2f+0x24c>
 8027538:	eee6 7a25 	vfma.f32	s15, s12, s11
 802753c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8027540:	ee30 7a67 	vsub.f32	s14, s0, s15
 8027544:	ed84 7a00 	vstr	s14, [r4]
 8027548:	e7b4      	b.n	80274b4 <__ieee754_rem_pio2f+0xec>
 802754a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802754e:	db06      	blt.n	802755e <__ieee754_rem_pio2f+0x196>
 8027550:	ee70 7a40 	vsub.f32	s15, s0, s0
 8027554:	edc0 7a01 	vstr	s15, [r0, #4]
 8027558:	edc0 7a00 	vstr	s15, [r0]
 802755c:	e742      	b.n	80273e4 <__ieee754_rem_pio2f+0x1c>
 802755e:	15ea      	asrs	r2, r5, #23
 8027560:	3a86      	subs	r2, #134	; 0x86
 8027562:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8027566:	ee07 3a90 	vmov	s15, r3
 802756a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802756e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8027618 <__ieee754_rem_pio2f+0x250>
 8027572:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8027576:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802757a:	ed8d 7a03 	vstr	s14, [sp, #12]
 802757e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027582:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027586:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802758a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802758e:	ed8d 7a04 	vstr	s14, [sp, #16]
 8027592:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027596:	eef5 7a40 	vcmp.f32	s15, #0.0
 802759a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802759e:	edcd 7a05 	vstr	s15, [sp, #20]
 80275a2:	d11e      	bne.n	80275e2 <__ieee754_rem_pio2f+0x21a>
 80275a4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80275a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275ac:	bf14      	ite	ne
 80275ae:	2302      	movne	r3, #2
 80275b0:	2301      	moveq	r3, #1
 80275b2:	491a      	ldr	r1, [pc, #104]	; (802761c <__ieee754_rem_pio2f+0x254>)
 80275b4:	9101      	str	r1, [sp, #4]
 80275b6:	2102      	movs	r1, #2
 80275b8:	9100      	str	r1, [sp, #0]
 80275ba:	a803      	add	r0, sp, #12
 80275bc:	4621      	mov	r1, r4
 80275be:	f000 f89d 	bl	80276fc <__kernel_rem_pio2f>
 80275c2:	2e00      	cmp	r6, #0
 80275c4:	f6bf af31 	bge.w	802742a <__ieee754_rem_pio2f+0x62>
 80275c8:	edd4 7a00 	vldr	s15, [r4]
 80275cc:	eef1 7a67 	vneg.f32	s15, s15
 80275d0:	edc4 7a00 	vstr	s15, [r4]
 80275d4:	edd4 7a01 	vldr	s15, [r4, #4]
 80275d8:	eef1 7a67 	vneg.f32	s15, s15
 80275dc:	edc4 7a01 	vstr	s15, [r4, #4]
 80275e0:	e77a      	b.n	80274d8 <__ieee754_rem_pio2f+0x110>
 80275e2:	2303      	movs	r3, #3
 80275e4:	e7e5      	b.n	80275b2 <__ieee754_rem_pio2f+0x1ea>
 80275e6:	bf00      	nop
 80275e8:	3f490fd8 	.word	0x3f490fd8
 80275ec:	4016cbe3 	.word	0x4016cbe3
 80275f0:	3fc90f80 	.word	0x3fc90f80
 80275f4:	3fc90fd0 	.word	0x3fc90fd0
 80275f8:	37354400 	.word	0x37354400
 80275fc:	37354443 	.word	0x37354443
 8027600:	2e85a308 	.word	0x2e85a308
 8027604:	43490f80 	.word	0x43490f80
 8027608:	3f22f984 	.word	0x3f22f984
 802760c:	0802c818 	.word	0x0802c818
 8027610:	2e85a300 	.word	0x2e85a300
 8027614:	248d3132 	.word	0x248d3132
 8027618:	43800000 	.word	0x43800000
 802761c:	0802c898 	.word	0x0802c898

08027620 <fabsf>:
 8027620:	ee10 3a10 	vmov	r3, s0
 8027624:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027628:	ee00 3a10 	vmov	s0, r3
 802762c:	4770      	bx	lr
	...

08027630 <scalbnf>:
 8027630:	ee10 3a10 	vmov	r3, s0
 8027634:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8027638:	d02b      	beq.n	8027692 <scalbnf+0x62>
 802763a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802763e:	d302      	bcc.n	8027646 <scalbnf+0x16>
 8027640:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027644:	4770      	bx	lr
 8027646:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802764a:	d123      	bne.n	8027694 <scalbnf+0x64>
 802764c:	4b24      	ldr	r3, [pc, #144]	; (80276e0 <scalbnf+0xb0>)
 802764e:	eddf 7a25 	vldr	s15, [pc, #148]	; 80276e4 <scalbnf+0xb4>
 8027652:	4298      	cmp	r0, r3
 8027654:	ee20 0a27 	vmul.f32	s0, s0, s15
 8027658:	db17      	blt.n	802768a <scalbnf+0x5a>
 802765a:	ee10 3a10 	vmov	r3, s0
 802765e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027662:	3a19      	subs	r2, #25
 8027664:	f24c 3150 	movw	r1, #50000	; 0xc350
 8027668:	4288      	cmp	r0, r1
 802766a:	dd15      	ble.n	8027698 <scalbnf+0x68>
 802766c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80276e8 <scalbnf+0xb8>
 8027670:	eddf 6a1e 	vldr	s13, [pc, #120]	; 80276ec <scalbnf+0xbc>
 8027674:	ee10 3a10 	vmov	r3, s0
 8027678:	eeb0 7a67 	vmov.f32	s14, s15
 802767c:	2b00      	cmp	r3, #0
 802767e:	bfb8      	it	lt
 8027680:	eef0 7a66 	vmovlt.f32	s15, s13
 8027684:	ee27 0a87 	vmul.f32	s0, s15, s14
 8027688:	4770      	bx	lr
 802768a:	eddf 7a19 	vldr	s15, [pc, #100]	; 80276f0 <scalbnf+0xc0>
 802768e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8027692:	4770      	bx	lr
 8027694:	0dd2      	lsrs	r2, r2, #23
 8027696:	e7e5      	b.n	8027664 <scalbnf+0x34>
 8027698:	4410      	add	r0, r2
 802769a:	28fe      	cmp	r0, #254	; 0xfe
 802769c:	dce6      	bgt.n	802766c <scalbnf+0x3c>
 802769e:	2800      	cmp	r0, #0
 80276a0:	dd06      	ble.n	80276b0 <scalbnf+0x80>
 80276a2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80276a6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80276aa:	ee00 3a10 	vmov	s0, r3
 80276ae:	4770      	bx	lr
 80276b0:	f110 0f16 	cmn.w	r0, #22
 80276b4:	da09      	bge.n	80276ca <scalbnf+0x9a>
 80276b6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80276f0 <scalbnf+0xc0>
 80276ba:	eddf 6a0e 	vldr	s13, [pc, #56]	; 80276f4 <scalbnf+0xc4>
 80276be:	ee10 3a10 	vmov	r3, s0
 80276c2:	eeb0 7a67 	vmov.f32	s14, s15
 80276c6:	2b00      	cmp	r3, #0
 80276c8:	e7d9      	b.n	802767e <scalbnf+0x4e>
 80276ca:	3019      	adds	r0, #25
 80276cc:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80276d0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80276d4:	ed9f 0a08 	vldr	s0, [pc, #32]	; 80276f8 <scalbnf+0xc8>
 80276d8:	ee07 3a90 	vmov	s15, r3
 80276dc:	e7d7      	b.n	802768e <scalbnf+0x5e>
 80276de:	bf00      	nop
 80276e0:	ffff3cb0 	.word	0xffff3cb0
 80276e4:	4c000000 	.word	0x4c000000
 80276e8:	7149f2ca 	.word	0x7149f2ca
 80276ec:	f149f2ca 	.word	0xf149f2ca
 80276f0:	0da24260 	.word	0x0da24260
 80276f4:	8da24260 	.word	0x8da24260
 80276f8:	33000000 	.word	0x33000000

080276fc <__kernel_rem_pio2f>:
 80276fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027700:	ed2d 8b04 	vpush	{d8-d9}
 8027704:	b0d9      	sub	sp, #356	; 0x164
 8027706:	4688      	mov	r8, r1
 8027708:	9002      	str	r0, [sp, #8]
 802770a:	49b8      	ldr	r1, [pc, #736]	; (80279ec <__kernel_rem_pio2f+0x2f0>)
 802770c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802770e:	9301      	str	r3, [sp, #4]
 8027710:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8027714:	9901      	ldr	r1, [sp, #4]
 8027716:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8027718:	f101 3bff 	add.w	fp, r1, #4294967295
 802771c:	1d11      	adds	r1, r2, #4
 802771e:	db25      	blt.n	802776c <__kernel_rem_pio2f+0x70>
 8027720:	1ed0      	subs	r0, r2, #3
 8027722:	bf48      	it	mi
 8027724:	1d10      	addmi	r0, r2, #4
 8027726:	10c0      	asrs	r0, r0, #3
 8027728:	1c45      	adds	r5, r0, #1
 802772a:	00e9      	lsls	r1, r5, #3
 802772c:	eba0 070b 	sub.w	r7, r0, fp
 8027730:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 80279fc <__kernel_rem_pio2f+0x300>
 8027734:	9103      	str	r1, [sp, #12]
 8027736:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802773a:	eb0a 0c0b 	add.w	ip, sl, fp
 802773e:	ae1c      	add	r6, sp, #112	; 0x70
 8027740:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8027744:	2400      	movs	r4, #0
 8027746:	4564      	cmp	r4, ip
 8027748:	dd12      	ble.n	8027770 <__kernel_rem_pio2f+0x74>
 802774a:	9901      	ldr	r1, [sp, #4]
 802774c:	ac1c      	add	r4, sp, #112	; 0x70
 802774e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8027752:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8027756:	f04f 0c00 	mov.w	ip, #0
 802775a:	45d4      	cmp	ip, sl
 802775c:	dc27      	bgt.n	80277ae <__kernel_rem_pio2f+0xb2>
 802775e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8027762:	eddf 7aa6 	vldr	s15, [pc, #664]	; 80279fc <__kernel_rem_pio2f+0x300>
 8027766:	4627      	mov	r7, r4
 8027768:	2600      	movs	r6, #0
 802776a:	e016      	b.n	802779a <__kernel_rem_pio2f+0x9e>
 802776c:	2000      	movs	r0, #0
 802776e:	e7db      	b.n	8027728 <__kernel_rem_pio2f+0x2c>
 8027770:	42e7      	cmn	r7, r4
 8027772:	bf5d      	ittte	pl
 8027774:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8027778:	ee07 1a90 	vmovpl	s15, r1
 802777c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8027780:	eef0 7a47 	vmovmi.f32	s15, s14
 8027784:	ece6 7a01 	vstmia	r6!, {s15}
 8027788:	3401      	adds	r4, #1
 802778a:	e7dc      	b.n	8027746 <__kernel_rem_pio2f+0x4a>
 802778c:	ecfe 6a01 	vldmia	lr!, {s13}
 8027790:	ed97 7a00 	vldr	s14, [r7]
 8027794:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027798:	3601      	adds	r6, #1
 802779a:	455e      	cmp	r6, fp
 802779c:	f1a7 0704 	sub.w	r7, r7, #4
 80277a0:	ddf4      	ble.n	802778c <__kernel_rem_pio2f+0x90>
 80277a2:	ece9 7a01 	vstmia	r9!, {s15}
 80277a6:	f10c 0c01 	add.w	ip, ip, #1
 80277aa:	3404      	adds	r4, #4
 80277ac:	e7d5      	b.n	802775a <__kernel_rem_pio2f+0x5e>
 80277ae:	a908      	add	r1, sp, #32
 80277b0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80277b4:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 80277b8:	eddf 8a8f 	vldr	s17, [pc, #572]	; 80279f8 <__kernel_rem_pio2f+0x2fc>
 80277bc:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 80279f4 <__kernel_rem_pio2f+0x2f8>
 80277c0:	9105      	str	r1, [sp, #20]
 80277c2:	9304      	str	r3, [sp, #16]
 80277c4:	4656      	mov	r6, sl
 80277c6:	00b3      	lsls	r3, r6, #2
 80277c8:	9306      	str	r3, [sp, #24]
 80277ca:	ab58      	add	r3, sp, #352	; 0x160
 80277cc:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 80277d0:	ac08      	add	r4, sp, #32
 80277d2:	ab44      	add	r3, sp, #272	; 0x110
 80277d4:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 80277d8:	46a4      	mov	ip, r4
 80277da:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 80277de:	4637      	mov	r7, r6
 80277e0:	2f00      	cmp	r7, #0
 80277e2:	f1a0 0004 	sub.w	r0, r0, #4
 80277e6:	dc4a      	bgt.n	802787e <__kernel_rem_pio2f+0x182>
 80277e8:	4628      	mov	r0, r5
 80277ea:	9207      	str	r2, [sp, #28]
 80277ec:	f7ff ff20 	bl	8027630 <scalbnf>
 80277f0:	eeb0 8a40 	vmov.f32	s16, s0
 80277f4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 80277f8:	ee28 0a00 	vmul.f32	s0, s16, s0
 80277fc:	f7ff fcfc 	bl	80271f8 <floorf>
 8027800:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8027804:	eea0 8a67 	vfms.f32	s16, s0, s15
 8027808:	2d00      	cmp	r5, #0
 802780a:	9a07      	ldr	r2, [sp, #28]
 802780c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8027810:	ee17 9a90 	vmov	r9, s15
 8027814:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027818:	ee38 8a67 	vsub.f32	s16, s16, s15
 802781c:	dd41      	ble.n	80278a2 <__kernel_rem_pio2f+0x1a6>
 802781e:	f106 3cff 	add.w	ip, r6, #4294967295
 8027822:	ab08      	add	r3, sp, #32
 8027824:	f1c5 0e08 	rsb	lr, r5, #8
 8027828:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802782c:	fa47 f00e 	asr.w	r0, r7, lr
 8027830:	4481      	add	r9, r0
 8027832:	fa00 f00e 	lsl.w	r0, r0, lr
 8027836:	1a3f      	subs	r7, r7, r0
 8027838:	f1c5 0007 	rsb	r0, r5, #7
 802783c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8027840:	4107      	asrs	r7, r0
 8027842:	2f00      	cmp	r7, #0
 8027844:	dd3c      	ble.n	80278c0 <__kernel_rem_pio2f+0x1c4>
 8027846:	f04f 0e00 	mov.w	lr, #0
 802784a:	f109 0901 	add.w	r9, r9, #1
 802784e:	4671      	mov	r1, lr
 8027850:	4576      	cmp	r6, lr
 8027852:	dc67      	bgt.n	8027924 <__kernel_rem_pio2f+0x228>
 8027854:	2d00      	cmp	r5, #0
 8027856:	dd03      	ble.n	8027860 <__kernel_rem_pio2f+0x164>
 8027858:	2d01      	cmp	r5, #1
 802785a:	d074      	beq.n	8027946 <__kernel_rem_pio2f+0x24a>
 802785c:	2d02      	cmp	r5, #2
 802785e:	d07b      	beq.n	8027958 <__kernel_rem_pio2f+0x25c>
 8027860:	2f02      	cmp	r7, #2
 8027862:	d12d      	bne.n	80278c0 <__kernel_rem_pio2f+0x1c4>
 8027864:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8027868:	ee30 8a48 	vsub.f32	s16, s0, s16
 802786c:	b341      	cbz	r1, 80278c0 <__kernel_rem_pio2f+0x1c4>
 802786e:	4628      	mov	r0, r5
 8027870:	9207      	str	r2, [sp, #28]
 8027872:	f7ff fedd 	bl	8027630 <scalbnf>
 8027876:	9a07      	ldr	r2, [sp, #28]
 8027878:	ee38 8a40 	vsub.f32	s16, s16, s0
 802787c:	e020      	b.n	80278c0 <__kernel_rem_pio2f+0x1c4>
 802787e:	ee60 7a28 	vmul.f32	s15, s0, s17
 8027882:	3f01      	subs	r7, #1
 8027884:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027888:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802788c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8027890:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027894:	ecac 0a01 	vstmia	ip!, {s0}
 8027898:	ed90 0a00 	vldr	s0, [r0]
 802789c:	ee37 0a80 	vadd.f32	s0, s15, s0
 80278a0:	e79e      	b.n	80277e0 <__kernel_rem_pio2f+0xe4>
 80278a2:	d105      	bne.n	80278b0 <__kernel_rem_pio2f+0x1b4>
 80278a4:	1e70      	subs	r0, r6, #1
 80278a6:	ab08      	add	r3, sp, #32
 80278a8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 80278ac:	11ff      	asrs	r7, r7, #7
 80278ae:	e7c8      	b.n	8027842 <__kernel_rem_pio2f+0x146>
 80278b0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80278b4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80278b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278bc:	da30      	bge.n	8027920 <__kernel_rem_pio2f+0x224>
 80278be:	2700      	movs	r7, #0
 80278c0:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80278c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278c8:	f040 809a 	bne.w	8027a00 <__kernel_rem_pio2f+0x304>
 80278cc:	1e74      	subs	r4, r6, #1
 80278ce:	46a4      	mov	ip, r4
 80278d0:	2100      	movs	r1, #0
 80278d2:	45d4      	cmp	ip, sl
 80278d4:	da47      	bge.n	8027966 <__kernel_rem_pio2f+0x26a>
 80278d6:	2900      	cmp	r1, #0
 80278d8:	d063      	beq.n	80279a2 <__kernel_rem_pio2f+0x2a6>
 80278da:	ab08      	add	r3, sp, #32
 80278dc:	3d08      	subs	r5, #8
 80278de:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80278e2:	2b00      	cmp	r3, #0
 80278e4:	d07f      	beq.n	80279e6 <__kernel_rem_pio2f+0x2ea>
 80278e6:	4628      	mov	r0, r5
 80278e8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80278ec:	f7ff fea0 	bl	8027630 <scalbnf>
 80278f0:	1c63      	adds	r3, r4, #1
 80278f2:	aa44      	add	r2, sp, #272	; 0x110
 80278f4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 80279f8 <__kernel_rem_pio2f+0x2fc>
 80278f8:	0099      	lsls	r1, r3, #2
 80278fa:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80278fe:	4623      	mov	r3, r4
 8027900:	2b00      	cmp	r3, #0
 8027902:	f280 80ad 	bge.w	8027a60 <__kernel_rem_pio2f+0x364>
 8027906:	4623      	mov	r3, r4
 8027908:	2b00      	cmp	r3, #0
 802790a:	f2c0 80cb 	blt.w	8027aa4 <__kernel_rem_pio2f+0x3a8>
 802790e:	aa44      	add	r2, sp, #272	; 0x110
 8027910:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8027914:	4e36      	ldr	r6, [pc, #216]	; (80279f0 <__kernel_rem_pio2f+0x2f4>)
 8027916:	eddf 7a39 	vldr	s15, [pc, #228]	; 80279fc <__kernel_rem_pio2f+0x300>
 802791a:	2000      	movs	r0, #0
 802791c:	1ae2      	subs	r2, r4, r3
 802791e:	e0b6      	b.n	8027a8e <__kernel_rem_pio2f+0x392>
 8027920:	2702      	movs	r7, #2
 8027922:	e790      	b.n	8027846 <__kernel_rem_pio2f+0x14a>
 8027924:	6820      	ldr	r0, [r4, #0]
 8027926:	b949      	cbnz	r1, 802793c <__kernel_rem_pio2f+0x240>
 8027928:	b118      	cbz	r0, 8027932 <__kernel_rem_pio2f+0x236>
 802792a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802792e:	6020      	str	r0, [r4, #0]
 8027930:	2001      	movs	r0, #1
 8027932:	f10e 0e01 	add.w	lr, lr, #1
 8027936:	3404      	adds	r4, #4
 8027938:	4601      	mov	r1, r0
 802793a:	e789      	b.n	8027850 <__kernel_rem_pio2f+0x154>
 802793c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8027940:	6020      	str	r0, [r4, #0]
 8027942:	4608      	mov	r0, r1
 8027944:	e7f5      	b.n	8027932 <__kernel_rem_pio2f+0x236>
 8027946:	1e74      	subs	r4, r6, #1
 8027948:	ab08      	add	r3, sp, #32
 802794a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802794e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8027952:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8027956:	e783      	b.n	8027860 <__kernel_rem_pio2f+0x164>
 8027958:	1e74      	subs	r4, r6, #1
 802795a:	ab08      	add	r3, sp, #32
 802795c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8027960:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8027964:	e7f5      	b.n	8027952 <__kernel_rem_pio2f+0x256>
 8027966:	ab08      	add	r3, sp, #32
 8027968:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802796c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8027970:	4301      	orrs	r1, r0
 8027972:	e7ae      	b.n	80278d2 <__kernel_rem_pio2f+0x1d6>
 8027974:	3001      	adds	r0, #1
 8027976:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802797a:	2f00      	cmp	r7, #0
 802797c:	d0fa      	beq.n	8027974 <__kernel_rem_pio2f+0x278>
 802797e:	9b06      	ldr	r3, [sp, #24]
 8027980:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8027984:	eb0d 0403 	add.w	r4, sp, r3
 8027988:	9b01      	ldr	r3, [sp, #4]
 802798a:	18f7      	adds	r7, r6, r3
 802798c:	ab1c      	add	r3, sp, #112	; 0x70
 802798e:	f106 0c01 	add.w	ip, r6, #1
 8027992:	3c4c      	subs	r4, #76	; 0x4c
 8027994:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8027998:	4430      	add	r0, r6
 802799a:	4560      	cmp	r0, ip
 802799c:	da04      	bge.n	80279a8 <__kernel_rem_pio2f+0x2ac>
 802799e:	4606      	mov	r6, r0
 80279a0:	e711      	b.n	80277c6 <__kernel_rem_pio2f+0xca>
 80279a2:	9c05      	ldr	r4, [sp, #20]
 80279a4:	2001      	movs	r0, #1
 80279a6:	e7e6      	b.n	8027976 <__kernel_rem_pio2f+0x27a>
 80279a8:	9b04      	ldr	r3, [sp, #16]
 80279aa:	f8dd e008 	ldr.w	lr, [sp, #8]
 80279ae:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80279b2:	9306      	str	r3, [sp, #24]
 80279b4:	ee07 3a90 	vmov	s15, r3
 80279b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80279bc:	2600      	movs	r6, #0
 80279be:	ece7 7a01 	vstmia	r7!, {s15}
 80279c2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80279fc <__kernel_rem_pio2f+0x300>
 80279c6:	46b9      	mov	r9, r7
 80279c8:	455e      	cmp	r6, fp
 80279ca:	dd04      	ble.n	80279d6 <__kernel_rem_pio2f+0x2da>
 80279cc:	ece4 7a01 	vstmia	r4!, {s15}
 80279d0:	f10c 0c01 	add.w	ip, ip, #1
 80279d4:	e7e1      	b.n	802799a <__kernel_rem_pio2f+0x29e>
 80279d6:	ecfe 6a01 	vldmia	lr!, {s13}
 80279da:	ed39 7a01 	vldmdb	r9!, {s14}
 80279de:	3601      	adds	r6, #1
 80279e0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80279e4:	e7f0      	b.n	80279c8 <__kernel_rem_pio2f+0x2cc>
 80279e6:	3c01      	subs	r4, #1
 80279e8:	e777      	b.n	80278da <__kernel_rem_pio2f+0x1de>
 80279ea:	bf00      	nop
 80279ec:	0802cbdc 	.word	0x0802cbdc
 80279f0:	0802cbb0 	.word	0x0802cbb0
 80279f4:	43800000 	.word	0x43800000
 80279f8:	3b800000 	.word	0x3b800000
 80279fc:	00000000 	.word	0x00000000
 8027a00:	9b03      	ldr	r3, [sp, #12]
 8027a02:	eeb0 0a48 	vmov.f32	s0, s16
 8027a06:	1a98      	subs	r0, r3, r2
 8027a08:	f7ff fe12 	bl	8027630 <scalbnf>
 8027a0c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 80279f4 <__kernel_rem_pio2f+0x2f8>
 8027a10:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8027a14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a18:	db19      	blt.n	8027a4e <__kernel_rem_pio2f+0x352>
 8027a1a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 80279f8 <__kernel_rem_pio2f+0x2fc>
 8027a1e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027a22:	aa08      	add	r2, sp, #32
 8027a24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027a28:	1c74      	adds	r4, r6, #1
 8027a2a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027a2e:	3508      	adds	r5, #8
 8027a30:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8027a34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027a38:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027a3c:	ee10 3a10 	vmov	r3, s0
 8027a40:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8027a44:	ee17 3a90 	vmov	r3, s15
 8027a48:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8027a4c:	e74b      	b.n	80278e6 <__kernel_rem_pio2f+0x1ea>
 8027a4e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027a52:	aa08      	add	r2, sp, #32
 8027a54:	ee10 3a10 	vmov	r3, s0
 8027a58:	4634      	mov	r4, r6
 8027a5a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8027a5e:	e742      	b.n	80278e6 <__kernel_rem_pio2f+0x1ea>
 8027a60:	a808      	add	r0, sp, #32
 8027a62:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8027a66:	9001      	str	r0, [sp, #4]
 8027a68:	ee07 0a90 	vmov	s15, r0
 8027a6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027a70:	3b01      	subs	r3, #1
 8027a72:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027a76:	ee20 0a07 	vmul.f32	s0, s0, s14
 8027a7a:	ed62 7a01 	vstmdb	r2!, {s15}
 8027a7e:	e73f      	b.n	8027900 <__kernel_rem_pio2f+0x204>
 8027a80:	ecf6 6a01 	vldmia	r6!, {s13}
 8027a84:	ecb5 7a01 	vldmia	r5!, {s14}
 8027a88:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027a8c:	3001      	adds	r0, #1
 8027a8e:	4550      	cmp	r0, sl
 8027a90:	dc01      	bgt.n	8027a96 <__kernel_rem_pio2f+0x39a>
 8027a92:	4290      	cmp	r0, r2
 8027a94:	ddf4      	ble.n	8027a80 <__kernel_rem_pio2f+0x384>
 8027a96:	a858      	add	r0, sp, #352	; 0x160
 8027a98:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8027a9c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8027aa0:	3b01      	subs	r3, #1
 8027aa2:	e731      	b.n	8027908 <__kernel_rem_pio2f+0x20c>
 8027aa4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8027aa6:	2b02      	cmp	r3, #2
 8027aa8:	dc09      	bgt.n	8027abe <__kernel_rem_pio2f+0x3c2>
 8027aaa:	2b00      	cmp	r3, #0
 8027aac:	dc2b      	bgt.n	8027b06 <__kernel_rem_pio2f+0x40a>
 8027aae:	d044      	beq.n	8027b3a <__kernel_rem_pio2f+0x43e>
 8027ab0:	f009 0007 	and.w	r0, r9, #7
 8027ab4:	b059      	add	sp, #356	; 0x164
 8027ab6:	ecbd 8b04 	vpop	{d8-d9}
 8027aba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027abe:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8027ac0:	2b03      	cmp	r3, #3
 8027ac2:	d1f5      	bne.n	8027ab0 <__kernel_rem_pio2f+0x3b4>
 8027ac4:	aa30      	add	r2, sp, #192	; 0xc0
 8027ac6:	1f0b      	subs	r3, r1, #4
 8027ac8:	4413      	add	r3, r2
 8027aca:	461a      	mov	r2, r3
 8027acc:	4620      	mov	r0, r4
 8027ace:	2800      	cmp	r0, #0
 8027ad0:	f1a2 0204 	sub.w	r2, r2, #4
 8027ad4:	dc52      	bgt.n	8027b7c <__kernel_rem_pio2f+0x480>
 8027ad6:	4622      	mov	r2, r4
 8027ad8:	2a01      	cmp	r2, #1
 8027ada:	f1a3 0304 	sub.w	r3, r3, #4
 8027ade:	dc5d      	bgt.n	8027b9c <__kernel_rem_pio2f+0x4a0>
 8027ae0:	ab30      	add	r3, sp, #192	; 0xc0
 8027ae2:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 80279fc <__kernel_rem_pio2f+0x300>
 8027ae6:	440b      	add	r3, r1
 8027ae8:	2c01      	cmp	r4, #1
 8027aea:	dc67      	bgt.n	8027bbc <__kernel_rem_pio2f+0x4c0>
 8027aec:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8027af0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8027af4:	2f00      	cmp	r7, #0
 8027af6:	d167      	bne.n	8027bc8 <__kernel_rem_pio2f+0x4cc>
 8027af8:	edc8 6a00 	vstr	s13, [r8]
 8027afc:	ed88 7a01 	vstr	s14, [r8, #4]
 8027b00:	edc8 7a02 	vstr	s15, [r8, #8]
 8027b04:	e7d4      	b.n	8027ab0 <__kernel_rem_pio2f+0x3b4>
 8027b06:	ab30      	add	r3, sp, #192	; 0xc0
 8027b08:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 80279fc <__kernel_rem_pio2f+0x300>
 8027b0c:	440b      	add	r3, r1
 8027b0e:	4622      	mov	r2, r4
 8027b10:	2a00      	cmp	r2, #0
 8027b12:	da24      	bge.n	8027b5e <__kernel_rem_pio2f+0x462>
 8027b14:	b34f      	cbz	r7, 8027b6a <__kernel_rem_pio2f+0x46e>
 8027b16:	eef1 7a47 	vneg.f32	s15, s14
 8027b1a:	edc8 7a00 	vstr	s15, [r8]
 8027b1e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8027b22:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027b26:	aa31      	add	r2, sp, #196	; 0xc4
 8027b28:	2301      	movs	r3, #1
 8027b2a:	429c      	cmp	r4, r3
 8027b2c:	da20      	bge.n	8027b70 <__kernel_rem_pio2f+0x474>
 8027b2e:	b10f      	cbz	r7, 8027b34 <__kernel_rem_pio2f+0x438>
 8027b30:	eef1 7a67 	vneg.f32	s15, s15
 8027b34:	edc8 7a01 	vstr	s15, [r8, #4]
 8027b38:	e7ba      	b.n	8027ab0 <__kernel_rem_pio2f+0x3b4>
 8027b3a:	ab30      	add	r3, sp, #192	; 0xc0
 8027b3c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 80279fc <__kernel_rem_pio2f+0x300>
 8027b40:	440b      	add	r3, r1
 8027b42:	2c00      	cmp	r4, #0
 8027b44:	da05      	bge.n	8027b52 <__kernel_rem_pio2f+0x456>
 8027b46:	b10f      	cbz	r7, 8027b4c <__kernel_rem_pio2f+0x450>
 8027b48:	eef1 7a67 	vneg.f32	s15, s15
 8027b4c:	edc8 7a00 	vstr	s15, [r8]
 8027b50:	e7ae      	b.n	8027ab0 <__kernel_rem_pio2f+0x3b4>
 8027b52:	ed33 7a01 	vldmdb	r3!, {s14}
 8027b56:	3c01      	subs	r4, #1
 8027b58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027b5c:	e7f1      	b.n	8027b42 <__kernel_rem_pio2f+0x446>
 8027b5e:	ed73 7a01 	vldmdb	r3!, {s15}
 8027b62:	3a01      	subs	r2, #1
 8027b64:	ee37 7a27 	vadd.f32	s14, s14, s15
 8027b68:	e7d2      	b.n	8027b10 <__kernel_rem_pio2f+0x414>
 8027b6a:	eef0 7a47 	vmov.f32	s15, s14
 8027b6e:	e7d4      	b.n	8027b1a <__kernel_rem_pio2f+0x41e>
 8027b70:	ecb2 7a01 	vldmia	r2!, {s14}
 8027b74:	3301      	adds	r3, #1
 8027b76:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027b7a:	e7d6      	b.n	8027b2a <__kernel_rem_pio2f+0x42e>
 8027b7c:	edd2 7a00 	vldr	s15, [r2]
 8027b80:	edd2 6a01 	vldr	s13, [r2, #4]
 8027b84:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027b88:	3801      	subs	r0, #1
 8027b8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027b8e:	ed82 7a00 	vstr	s14, [r2]
 8027b92:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027b96:	edc2 7a01 	vstr	s15, [r2, #4]
 8027b9a:	e798      	b.n	8027ace <__kernel_rem_pio2f+0x3d2>
 8027b9c:	edd3 7a00 	vldr	s15, [r3]
 8027ba0:	edd3 6a01 	vldr	s13, [r3, #4]
 8027ba4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027ba8:	3a01      	subs	r2, #1
 8027baa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027bae:	ed83 7a00 	vstr	s14, [r3]
 8027bb2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027bb6:	edc3 7a01 	vstr	s15, [r3, #4]
 8027bba:	e78d      	b.n	8027ad8 <__kernel_rem_pio2f+0x3dc>
 8027bbc:	ed33 7a01 	vldmdb	r3!, {s14}
 8027bc0:	3c01      	subs	r4, #1
 8027bc2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027bc6:	e78f      	b.n	8027ae8 <__kernel_rem_pio2f+0x3ec>
 8027bc8:	eef1 6a66 	vneg.f32	s13, s13
 8027bcc:	eeb1 7a47 	vneg.f32	s14, s14
 8027bd0:	edc8 6a00 	vstr	s13, [r8]
 8027bd4:	ed88 7a01 	vstr	s14, [r8, #4]
 8027bd8:	eef1 7a67 	vneg.f32	s15, s15
 8027bdc:	e790      	b.n	8027b00 <__kernel_rem_pio2f+0x404>
 8027bde:	bf00      	nop

08027be0 <abort>:
 8027be0:	b508      	push	{r3, lr}
 8027be2:	2006      	movs	r0, #6
 8027be4:	f000 fa3a 	bl	802805c <raise>
 8027be8:	2001      	movs	r0, #1
 8027bea:	f7da fad3 	bl	8002194 <_exit>
	...

08027bf0 <__assert_func>:
 8027bf0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8027bf2:	4614      	mov	r4, r2
 8027bf4:	461a      	mov	r2, r3
 8027bf6:	4b09      	ldr	r3, [pc, #36]	; (8027c1c <__assert_func+0x2c>)
 8027bf8:	681b      	ldr	r3, [r3, #0]
 8027bfa:	4605      	mov	r5, r0
 8027bfc:	68d8      	ldr	r0, [r3, #12]
 8027bfe:	b14c      	cbz	r4, 8027c14 <__assert_func+0x24>
 8027c00:	4b07      	ldr	r3, [pc, #28]	; (8027c20 <__assert_func+0x30>)
 8027c02:	9100      	str	r1, [sp, #0]
 8027c04:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8027c08:	4906      	ldr	r1, [pc, #24]	; (8027c24 <__assert_func+0x34>)
 8027c0a:	462b      	mov	r3, r5
 8027c0c:	f000 f982 	bl	8027f14 <fiprintf>
 8027c10:	f7ff ffe6 	bl	8027be0 <abort>
 8027c14:	4b04      	ldr	r3, [pc, #16]	; (8027c28 <__assert_func+0x38>)
 8027c16:	461c      	mov	r4, r3
 8027c18:	e7f3      	b.n	8027c02 <__assert_func+0x12>
 8027c1a:	bf00      	nop
 8027c1c:	20000160 	.word	0x20000160
 8027c20:	0802cbe8 	.word	0x0802cbe8
 8027c24:	0802cbf5 	.word	0x0802cbf5
 8027c28:	0802cc23 	.word	0x0802cc23

08027c2c <atexit>:
 8027c2c:	2300      	movs	r3, #0
 8027c2e:	4601      	mov	r1, r0
 8027c30:	461a      	mov	r2, r3
 8027c32:	4618      	mov	r0, r3
 8027c34:	f000 bb16 	b.w	8028264 <__register_exitproc>

08027c38 <malloc>:
 8027c38:	4b02      	ldr	r3, [pc, #8]	; (8027c44 <malloc+0xc>)
 8027c3a:	4601      	mov	r1, r0
 8027c3c:	6818      	ldr	r0, [r3, #0]
 8027c3e:	f000 b82b 	b.w	8027c98 <_malloc_r>
 8027c42:	bf00      	nop
 8027c44:	20000160 	.word	0x20000160

08027c48 <free>:
 8027c48:	4b02      	ldr	r3, [pc, #8]	; (8027c54 <free+0xc>)
 8027c4a:	4601      	mov	r1, r0
 8027c4c:	6818      	ldr	r0, [r3, #0]
 8027c4e:	f000 bb67 	b.w	8028320 <_free_r>
 8027c52:	bf00      	nop
 8027c54:	20000160 	.word	0x20000160

08027c58 <sbrk_aligned>:
 8027c58:	b570      	push	{r4, r5, r6, lr}
 8027c5a:	4e0e      	ldr	r6, [pc, #56]	; (8027c94 <sbrk_aligned+0x3c>)
 8027c5c:	460c      	mov	r4, r1
 8027c5e:	6831      	ldr	r1, [r6, #0]
 8027c60:	4605      	mov	r5, r0
 8027c62:	b911      	cbnz	r1, 8027c6a <sbrk_aligned+0x12>
 8027c64:	f000 faa0 	bl	80281a8 <_sbrk_r>
 8027c68:	6030      	str	r0, [r6, #0]
 8027c6a:	4621      	mov	r1, r4
 8027c6c:	4628      	mov	r0, r5
 8027c6e:	f000 fa9b 	bl	80281a8 <_sbrk_r>
 8027c72:	1c43      	adds	r3, r0, #1
 8027c74:	d00a      	beq.n	8027c8c <sbrk_aligned+0x34>
 8027c76:	1cc4      	adds	r4, r0, #3
 8027c78:	f024 0403 	bic.w	r4, r4, #3
 8027c7c:	42a0      	cmp	r0, r4
 8027c7e:	d007      	beq.n	8027c90 <sbrk_aligned+0x38>
 8027c80:	1a21      	subs	r1, r4, r0
 8027c82:	4628      	mov	r0, r5
 8027c84:	f000 fa90 	bl	80281a8 <_sbrk_r>
 8027c88:	3001      	adds	r0, #1
 8027c8a:	d101      	bne.n	8027c90 <sbrk_aligned+0x38>
 8027c8c:	f04f 34ff 	mov.w	r4, #4294967295
 8027c90:	4620      	mov	r0, r4
 8027c92:	bd70      	pop	{r4, r5, r6, pc}
 8027c94:	20014114 	.word	0x20014114

08027c98 <_malloc_r>:
 8027c98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027c9c:	1ccd      	adds	r5, r1, #3
 8027c9e:	f025 0503 	bic.w	r5, r5, #3
 8027ca2:	3508      	adds	r5, #8
 8027ca4:	2d0c      	cmp	r5, #12
 8027ca6:	bf38      	it	cc
 8027ca8:	250c      	movcc	r5, #12
 8027caa:	2d00      	cmp	r5, #0
 8027cac:	4607      	mov	r7, r0
 8027cae:	db01      	blt.n	8027cb4 <_malloc_r+0x1c>
 8027cb0:	42a9      	cmp	r1, r5
 8027cb2:	d905      	bls.n	8027cc0 <_malloc_r+0x28>
 8027cb4:	230c      	movs	r3, #12
 8027cb6:	603b      	str	r3, [r7, #0]
 8027cb8:	2600      	movs	r6, #0
 8027cba:	4630      	mov	r0, r6
 8027cbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027cc0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8027d94 <_malloc_r+0xfc>
 8027cc4:	f000 f868 	bl	8027d98 <__malloc_lock>
 8027cc8:	f8d8 3000 	ldr.w	r3, [r8]
 8027ccc:	461c      	mov	r4, r3
 8027cce:	bb5c      	cbnz	r4, 8027d28 <_malloc_r+0x90>
 8027cd0:	4629      	mov	r1, r5
 8027cd2:	4638      	mov	r0, r7
 8027cd4:	f7ff ffc0 	bl	8027c58 <sbrk_aligned>
 8027cd8:	1c43      	adds	r3, r0, #1
 8027cda:	4604      	mov	r4, r0
 8027cdc:	d155      	bne.n	8027d8a <_malloc_r+0xf2>
 8027cde:	f8d8 4000 	ldr.w	r4, [r8]
 8027ce2:	4626      	mov	r6, r4
 8027ce4:	2e00      	cmp	r6, #0
 8027ce6:	d145      	bne.n	8027d74 <_malloc_r+0xdc>
 8027ce8:	2c00      	cmp	r4, #0
 8027cea:	d048      	beq.n	8027d7e <_malloc_r+0xe6>
 8027cec:	6823      	ldr	r3, [r4, #0]
 8027cee:	4631      	mov	r1, r6
 8027cf0:	4638      	mov	r0, r7
 8027cf2:	eb04 0903 	add.w	r9, r4, r3
 8027cf6:	f000 fa57 	bl	80281a8 <_sbrk_r>
 8027cfa:	4581      	cmp	r9, r0
 8027cfc:	d13f      	bne.n	8027d7e <_malloc_r+0xe6>
 8027cfe:	6821      	ldr	r1, [r4, #0]
 8027d00:	1a6d      	subs	r5, r5, r1
 8027d02:	4629      	mov	r1, r5
 8027d04:	4638      	mov	r0, r7
 8027d06:	f7ff ffa7 	bl	8027c58 <sbrk_aligned>
 8027d0a:	3001      	adds	r0, #1
 8027d0c:	d037      	beq.n	8027d7e <_malloc_r+0xe6>
 8027d0e:	6823      	ldr	r3, [r4, #0]
 8027d10:	442b      	add	r3, r5
 8027d12:	6023      	str	r3, [r4, #0]
 8027d14:	f8d8 3000 	ldr.w	r3, [r8]
 8027d18:	2b00      	cmp	r3, #0
 8027d1a:	d038      	beq.n	8027d8e <_malloc_r+0xf6>
 8027d1c:	685a      	ldr	r2, [r3, #4]
 8027d1e:	42a2      	cmp	r2, r4
 8027d20:	d12b      	bne.n	8027d7a <_malloc_r+0xe2>
 8027d22:	2200      	movs	r2, #0
 8027d24:	605a      	str	r2, [r3, #4]
 8027d26:	e00f      	b.n	8027d48 <_malloc_r+0xb0>
 8027d28:	6822      	ldr	r2, [r4, #0]
 8027d2a:	1b52      	subs	r2, r2, r5
 8027d2c:	d41f      	bmi.n	8027d6e <_malloc_r+0xd6>
 8027d2e:	2a0b      	cmp	r2, #11
 8027d30:	d917      	bls.n	8027d62 <_malloc_r+0xca>
 8027d32:	1961      	adds	r1, r4, r5
 8027d34:	42a3      	cmp	r3, r4
 8027d36:	6025      	str	r5, [r4, #0]
 8027d38:	bf18      	it	ne
 8027d3a:	6059      	strne	r1, [r3, #4]
 8027d3c:	6863      	ldr	r3, [r4, #4]
 8027d3e:	bf08      	it	eq
 8027d40:	f8c8 1000 	streq.w	r1, [r8]
 8027d44:	5162      	str	r2, [r4, r5]
 8027d46:	604b      	str	r3, [r1, #4]
 8027d48:	4638      	mov	r0, r7
 8027d4a:	f104 060b 	add.w	r6, r4, #11
 8027d4e:	f000 f829 	bl	8027da4 <__malloc_unlock>
 8027d52:	f026 0607 	bic.w	r6, r6, #7
 8027d56:	1d23      	adds	r3, r4, #4
 8027d58:	1af2      	subs	r2, r6, r3
 8027d5a:	d0ae      	beq.n	8027cba <_malloc_r+0x22>
 8027d5c:	1b9b      	subs	r3, r3, r6
 8027d5e:	50a3      	str	r3, [r4, r2]
 8027d60:	e7ab      	b.n	8027cba <_malloc_r+0x22>
 8027d62:	42a3      	cmp	r3, r4
 8027d64:	6862      	ldr	r2, [r4, #4]
 8027d66:	d1dd      	bne.n	8027d24 <_malloc_r+0x8c>
 8027d68:	f8c8 2000 	str.w	r2, [r8]
 8027d6c:	e7ec      	b.n	8027d48 <_malloc_r+0xb0>
 8027d6e:	4623      	mov	r3, r4
 8027d70:	6864      	ldr	r4, [r4, #4]
 8027d72:	e7ac      	b.n	8027cce <_malloc_r+0x36>
 8027d74:	4634      	mov	r4, r6
 8027d76:	6876      	ldr	r6, [r6, #4]
 8027d78:	e7b4      	b.n	8027ce4 <_malloc_r+0x4c>
 8027d7a:	4613      	mov	r3, r2
 8027d7c:	e7cc      	b.n	8027d18 <_malloc_r+0x80>
 8027d7e:	230c      	movs	r3, #12
 8027d80:	603b      	str	r3, [r7, #0]
 8027d82:	4638      	mov	r0, r7
 8027d84:	f000 f80e 	bl	8027da4 <__malloc_unlock>
 8027d88:	e797      	b.n	8027cba <_malloc_r+0x22>
 8027d8a:	6025      	str	r5, [r4, #0]
 8027d8c:	e7dc      	b.n	8027d48 <_malloc_r+0xb0>
 8027d8e:	605b      	str	r3, [r3, #4]
 8027d90:	deff      	udf	#255	; 0xff
 8027d92:	bf00      	nop
 8027d94:	20014110 	.word	0x20014110

08027d98 <__malloc_lock>:
 8027d98:	4801      	ldr	r0, [pc, #4]	; (8027da0 <__malloc_lock+0x8>)
 8027d9a:	f000 ba52 	b.w	8028242 <__retarget_lock_acquire_recursive>
 8027d9e:	bf00      	nop
 8027da0:	20014259 	.word	0x20014259

08027da4 <__malloc_unlock>:
 8027da4:	4801      	ldr	r0, [pc, #4]	; (8027dac <__malloc_unlock+0x8>)
 8027da6:	f000 ba4d 	b.w	8028244 <__retarget_lock_release_recursive>
 8027daa:	bf00      	nop
 8027dac:	20014259 	.word	0x20014259

08027db0 <__cxa_atexit>:
 8027db0:	b510      	push	{r4, lr}
 8027db2:	4c05      	ldr	r4, [pc, #20]	; (8027dc8 <__cxa_atexit+0x18>)
 8027db4:	4613      	mov	r3, r2
 8027db6:	b12c      	cbz	r4, 8027dc4 <__cxa_atexit+0x14>
 8027db8:	460a      	mov	r2, r1
 8027dba:	4601      	mov	r1, r0
 8027dbc:	2002      	movs	r0, #2
 8027dbe:	f000 fa51 	bl	8028264 <__register_exitproc>
 8027dc2:	bd10      	pop	{r4, pc}
 8027dc4:	4620      	mov	r0, r4
 8027dc6:	e7fc      	b.n	8027dc2 <__cxa_atexit+0x12>
 8027dc8:	08028265 	.word	0x08028265

08027dcc <std>:
 8027dcc:	2300      	movs	r3, #0
 8027dce:	b510      	push	{r4, lr}
 8027dd0:	4604      	mov	r4, r0
 8027dd2:	e9c0 3300 	strd	r3, r3, [r0]
 8027dd6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8027dda:	6083      	str	r3, [r0, #8]
 8027ddc:	8181      	strh	r1, [r0, #12]
 8027dde:	6643      	str	r3, [r0, #100]	; 0x64
 8027de0:	81c2      	strh	r2, [r0, #14]
 8027de2:	6183      	str	r3, [r0, #24]
 8027de4:	4619      	mov	r1, r3
 8027de6:	2208      	movs	r2, #8
 8027de8:	305c      	adds	r0, #92	; 0x5c
 8027dea:	f000 f906 	bl	8027ffa <memset>
 8027dee:	4b0d      	ldr	r3, [pc, #52]	; (8027e24 <std+0x58>)
 8027df0:	6263      	str	r3, [r4, #36]	; 0x24
 8027df2:	4b0d      	ldr	r3, [pc, #52]	; (8027e28 <std+0x5c>)
 8027df4:	62a3      	str	r3, [r4, #40]	; 0x28
 8027df6:	4b0d      	ldr	r3, [pc, #52]	; (8027e2c <std+0x60>)
 8027df8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027dfa:	4b0d      	ldr	r3, [pc, #52]	; (8027e30 <std+0x64>)
 8027dfc:	6323      	str	r3, [r4, #48]	; 0x30
 8027dfe:	4b0d      	ldr	r3, [pc, #52]	; (8027e34 <std+0x68>)
 8027e00:	6224      	str	r4, [r4, #32]
 8027e02:	429c      	cmp	r4, r3
 8027e04:	d006      	beq.n	8027e14 <std+0x48>
 8027e06:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8027e0a:	4294      	cmp	r4, r2
 8027e0c:	d002      	beq.n	8027e14 <std+0x48>
 8027e0e:	33d0      	adds	r3, #208	; 0xd0
 8027e10:	429c      	cmp	r4, r3
 8027e12:	d105      	bne.n	8027e20 <std+0x54>
 8027e14:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8027e18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027e1c:	f000 ba10 	b.w	8028240 <__retarget_lock_init_recursive>
 8027e20:	bd10      	pop	{r4, pc}
 8027e22:	bf00      	nop
 8027e24:	08027f75 	.word	0x08027f75
 8027e28:	08027f97 	.word	0x08027f97
 8027e2c:	08027fcf 	.word	0x08027fcf
 8027e30:	08027ff3 	.word	0x08027ff3
 8027e34:	20014118 	.word	0x20014118

08027e38 <stdio_exit_handler>:
 8027e38:	4a02      	ldr	r2, [pc, #8]	; (8027e44 <stdio_exit_handler+0xc>)
 8027e3a:	4903      	ldr	r1, [pc, #12]	; (8027e48 <stdio_exit_handler+0x10>)
 8027e3c:	4803      	ldr	r0, [pc, #12]	; (8027e4c <stdio_exit_handler+0x14>)
 8027e3e:	f000 b87b 	b.w	8027f38 <_fwalk_sglue>
 8027e42:	bf00      	nop
 8027e44:	20000108 	.word	0x20000108
 8027e48:	08028a6d 	.word	0x08028a6d
 8027e4c:	20000114 	.word	0x20000114

08027e50 <cleanup_stdio>:
 8027e50:	6841      	ldr	r1, [r0, #4]
 8027e52:	4b0c      	ldr	r3, [pc, #48]	; (8027e84 <cleanup_stdio+0x34>)
 8027e54:	4299      	cmp	r1, r3
 8027e56:	b510      	push	{r4, lr}
 8027e58:	4604      	mov	r4, r0
 8027e5a:	d001      	beq.n	8027e60 <cleanup_stdio+0x10>
 8027e5c:	f000 fe06 	bl	8028a6c <_fflush_r>
 8027e60:	68a1      	ldr	r1, [r4, #8]
 8027e62:	4b09      	ldr	r3, [pc, #36]	; (8027e88 <cleanup_stdio+0x38>)
 8027e64:	4299      	cmp	r1, r3
 8027e66:	d002      	beq.n	8027e6e <cleanup_stdio+0x1e>
 8027e68:	4620      	mov	r0, r4
 8027e6a:	f000 fdff 	bl	8028a6c <_fflush_r>
 8027e6e:	68e1      	ldr	r1, [r4, #12]
 8027e70:	4b06      	ldr	r3, [pc, #24]	; (8027e8c <cleanup_stdio+0x3c>)
 8027e72:	4299      	cmp	r1, r3
 8027e74:	d004      	beq.n	8027e80 <cleanup_stdio+0x30>
 8027e76:	4620      	mov	r0, r4
 8027e78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027e7c:	f000 bdf6 	b.w	8028a6c <_fflush_r>
 8027e80:	bd10      	pop	{r4, pc}
 8027e82:	bf00      	nop
 8027e84:	20014118 	.word	0x20014118
 8027e88:	20014180 	.word	0x20014180
 8027e8c:	200141e8 	.word	0x200141e8

08027e90 <global_stdio_init.part.0>:
 8027e90:	b510      	push	{r4, lr}
 8027e92:	4b0b      	ldr	r3, [pc, #44]	; (8027ec0 <global_stdio_init.part.0+0x30>)
 8027e94:	4c0b      	ldr	r4, [pc, #44]	; (8027ec4 <global_stdio_init.part.0+0x34>)
 8027e96:	4a0c      	ldr	r2, [pc, #48]	; (8027ec8 <global_stdio_init.part.0+0x38>)
 8027e98:	601a      	str	r2, [r3, #0]
 8027e9a:	4620      	mov	r0, r4
 8027e9c:	2200      	movs	r2, #0
 8027e9e:	2104      	movs	r1, #4
 8027ea0:	f7ff ff94 	bl	8027dcc <std>
 8027ea4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8027ea8:	2201      	movs	r2, #1
 8027eaa:	2109      	movs	r1, #9
 8027eac:	f7ff ff8e 	bl	8027dcc <std>
 8027eb0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8027eb4:	2202      	movs	r2, #2
 8027eb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027eba:	2112      	movs	r1, #18
 8027ebc:	f7ff bf86 	b.w	8027dcc <std>
 8027ec0:	20014250 	.word	0x20014250
 8027ec4:	20014118 	.word	0x20014118
 8027ec8:	08027e39 	.word	0x08027e39

08027ecc <__sfp_lock_acquire>:
 8027ecc:	4801      	ldr	r0, [pc, #4]	; (8027ed4 <__sfp_lock_acquire+0x8>)
 8027ece:	f000 b9b8 	b.w	8028242 <__retarget_lock_acquire_recursive>
 8027ed2:	bf00      	nop
 8027ed4:	2001425a 	.word	0x2001425a

08027ed8 <__sfp_lock_release>:
 8027ed8:	4801      	ldr	r0, [pc, #4]	; (8027ee0 <__sfp_lock_release+0x8>)
 8027eda:	f000 b9b3 	b.w	8028244 <__retarget_lock_release_recursive>
 8027ede:	bf00      	nop
 8027ee0:	2001425a 	.word	0x2001425a

08027ee4 <__sinit>:
 8027ee4:	b510      	push	{r4, lr}
 8027ee6:	4604      	mov	r4, r0
 8027ee8:	f7ff fff0 	bl	8027ecc <__sfp_lock_acquire>
 8027eec:	6a23      	ldr	r3, [r4, #32]
 8027eee:	b11b      	cbz	r3, 8027ef8 <__sinit+0x14>
 8027ef0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027ef4:	f7ff bff0 	b.w	8027ed8 <__sfp_lock_release>
 8027ef8:	4b04      	ldr	r3, [pc, #16]	; (8027f0c <__sinit+0x28>)
 8027efa:	6223      	str	r3, [r4, #32]
 8027efc:	4b04      	ldr	r3, [pc, #16]	; (8027f10 <__sinit+0x2c>)
 8027efe:	681b      	ldr	r3, [r3, #0]
 8027f00:	2b00      	cmp	r3, #0
 8027f02:	d1f5      	bne.n	8027ef0 <__sinit+0xc>
 8027f04:	f7ff ffc4 	bl	8027e90 <global_stdio_init.part.0>
 8027f08:	e7f2      	b.n	8027ef0 <__sinit+0xc>
 8027f0a:	bf00      	nop
 8027f0c:	08027e51 	.word	0x08027e51
 8027f10:	20014250 	.word	0x20014250

08027f14 <fiprintf>:
 8027f14:	b40e      	push	{r1, r2, r3}
 8027f16:	b503      	push	{r0, r1, lr}
 8027f18:	4601      	mov	r1, r0
 8027f1a:	ab03      	add	r3, sp, #12
 8027f1c:	4805      	ldr	r0, [pc, #20]	; (8027f34 <fiprintf+0x20>)
 8027f1e:	f853 2b04 	ldr.w	r2, [r3], #4
 8027f22:	6800      	ldr	r0, [r0, #0]
 8027f24:	9301      	str	r3, [sp, #4]
 8027f26:	f000 fa71 	bl	802840c <_vfiprintf_r>
 8027f2a:	b002      	add	sp, #8
 8027f2c:	f85d eb04 	ldr.w	lr, [sp], #4
 8027f30:	b003      	add	sp, #12
 8027f32:	4770      	bx	lr
 8027f34:	20000160 	.word	0x20000160

08027f38 <_fwalk_sglue>:
 8027f38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027f3c:	4607      	mov	r7, r0
 8027f3e:	4688      	mov	r8, r1
 8027f40:	4614      	mov	r4, r2
 8027f42:	2600      	movs	r6, #0
 8027f44:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8027f48:	f1b9 0901 	subs.w	r9, r9, #1
 8027f4c:	d505      	bpl.n	8027f5a <_fwalk_sglue+0x22>
 8027f4e:	6824      	ldr	r4, [r4, #0]
 8027f50:	2c00      	cmp	r4, #0
 8027f52:	d1f7      	bne.n	8027f44 <_fwalk_sglue+0xc>
 8027f54:	4630      	mov	r0, r6
 8027f56:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027f5a:	89ab      	ldrh	r3, [r5, #12]
 8027f5c:	2b01      	cmp	r3, #1
 8027f5e:	d907      	bls.n	8027f70 <_fwalk_sglue+0x38>
 8027f60:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8027f64:	3301      	adds	r3, #1
 8027f66:	d003      	beq.n	8027f70 <_fwalk_sglue+0x38>
 8027f68:	4629      	mov	r1, r5
 8027f6a:	4638      	mov	r0, r7
 8027f6c:	47c0      	blx	r8
 8027f6e:	4306      	orrs	r6, r0
 8027f70:	3568      	adds	r5, #104	; 0x68
 8027f72:	e7e9      	b.n	8027f48 <_fwalk_sglue+0x10>

08027f74 <__sread>:
 8027f74:	b510      	push	{r4, lr}
 8027f76:	460c      	mov	r4, r1
 8027f78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027f7c:	f000 f8ee 	bl	802815c <_read_r>
 8027f80:	2800      	cmp	r0, #0
 8027f82:	bfab      	itete	ge
 8027f84:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8027f86:	89a3      	ldrhlt	r3, [r4, #12]
 8027f88:	181b      	addge	r3, r3, r0
 8027f8a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8027f8e:	bfac      	ite	ge
 8027f90:	6563      	strge	r3, [r4, #84]	; 0x54
 8027f92:	81a3      	strhlt	r3, [r4, #12]
 8027f94:	bd10      	pop	{r4, pc}

08027f96 <__swrite>:
 8027f96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027f9a:	461f      	mov	r7, r3
 8027f9c:	898b      	ldrh	r3, [r1, #12]
 8027f9e:	05db      	lsls	r3, r3, #23
 8027fa0:	4605      	mov	r5, r0
 8027fa2:	460c      	mov	r4, r1
 8027fa4:	4616      	mov	r6, r2
 8027fa6:	d505      	bpl.n	8027fb4 <__swrite+0x1e>
 8027fa8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027fac:	2302      	movs	r3, #2
 8027fae:	2200      	movs	r2, #0
 8027fb0:	f000 f8c2 	bl	8028138 <_lseek_r>
 8027fb4:	89a3      	ldrh	r3, [r4, #12]
 8027fb6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027fba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8027fbe:	81a3      	strh	r3, [r4, #12]
 8027fc0:	4632      	mov	r2, r6
 8027fc2:	463b      	mov	r3, r7
 8027fc4:	4628      	mov	r0, r5
 8027fc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8027fca:	f000 b8fd 	b.w	80281c8 <_write_r>

08027fce <__sseek>:
 8027fce:	b510      	push	{r4, lr}
 8027fd0:	460c      	mov	r4, r1
 8027fd2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027fd6:	f000 f8af 	bl	8028138 <_lseek_r>
 8027fda:	1c43      	adds	r3, r0, #1
 8027fdc:	89a3      	ldrh	r3, [r4, #12]
 8027fde:	bf15      	itete	ne
 8027fe0:	6560      	strne	r0, [r4, #84]	; 0x54
 8027fe2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8027fe6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8027fea:	81a3      	strheq	r3, [r4, #12]
 8027fec:	bf18      	it	ne
 8027fee:	81a3      	strhne	r3, [r4, #12]
 8027ff0:	bd10      	pop	{r4, pc}

08027ff2 <__sclose>:
 8027ff2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027ff6:	f000 b839 	b.w	802806c <_close_r>

08027ffa <memset>:
 8027ffa:	4402      	add	r2, r0
 8027ffc:	4603      	mov	r3, r0
 8027ffe:	4293      	cmp	r3, r2
 8028000:	d100      	bne.n	8028004 <memset+0xa>
 8028002:	4770      	bx	lr
 8028004:	f803 1b01 	strb.w	r1, [r3], #1
 8028008:	e7f9      	b.n	8027ffe <memset+0x4>

0802800a <_raise_r>:
 802800a:	291f      	cmp	r1, #31
 802800c:	b538      	push	{r3, r4, r5, lr}
 802800e:	4604      	mov	r4, r0
 8028010:	460d      	mov	r5, r1
 8028012:	d904      	bls.n	802801e <_raise_r+0x14>
 8028014:	2316      	movs	r3, #22
 8028016:	6003      	str	r3, [r0, #0]
 8028018:	f04f 30ff 	mov.w	r0, #4294967295
 802801c:	bd38      	pop	{r3, r4, r5, pc}
 802801e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8028020:	b112      	cbz	r2, 8028028 <_raise_r+0x1e>
 8028022:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8028026:	b94b      	cbnz	r3, 802803c <_raise_r+0x32>
 8028028:	4620      	mov	r0, r4
 802802a:	f000 f8bb 	bl	80281a4 <_getpid_r>
 802802e:	462a      	mov	r2, r5
 8028030:	4601      	mov	r1, r0
 8028032:	4620      	mov	r0, r4
 8028034:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8028038:	f000 b8a2 	b.w	8028180 <_kill_r>
 802803c:	2b01      	cmp	r3, #1
 802803e:	d00a      	beq.n	8028056 <_raise_r+0x4c>
 8028040:	1c59      	adds	r1, r3, #1
 8028042:	d103      	bne.n	802804c <_raise_r+0x42>
 8028044:	2316      	movs	r3, #22
 8028046:	6003      	str	r3, [r0, #0]
 8028048:	2001      	movs	r0, #1
 802804a:	e7e7      	b.n	802801c <_raise_r+0x12>
 802804c:	2400      	movs	r4, #0
 802804e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8028052:	4628      	mov	r0, r5
 8028054:	4798      	blx	r3
 8028056:	2000      	movs	r0, #0
 8028058:	e7e0      	b.n	802801c <_raise_r+0x12>
	...

0802805c <raise>:
 802805c:	4b02      	ldr	r3, [pc, #8]	; (8028068 <raise+0xc>)
 802805e:	4601      	mov	r1, r0
 8028060:	6818      	ldr	r0, [r3, #0]
 8028062:	f7ff bfd2 	b.w	802800a <_raise_r>
 8028066:	bf00      	nop
 8028068:	20000160 	.word	0x20000160

0802806c <_close_r>:
 802806c:	b538      	push	{r3, r4, r5, lr}
 802806e:	4d06      	ldr	r5, [pc, #24]	; (8028088 <_close_r+0x1c>)
 8028070:	2300      	movs	r3, #0
 8028072:	4604      	mov	r4, r0
 8028074:	4608      	mov	r0, r1
 8028076:	602b      	str	r3, [r5, #0]
 8028078:	f7da f8ae 	bl	80021d8 <_close>
 802807c:	1c43      	adds	r3, r0, #1
 802807e:	d102      	bne.n	8028086 <_close_r+0x1a>
 8028080:	682b      	ldr	r3, [r5, #0]
 8028082:	b103      	cbz	r3, 8028086 <_close_r+0x1a>
 8028084:	6023      	str	r3, [r4, #0]
 8028086:	bd38      	pop	{r3, r4, r5, pc}
 8028088:	20014254 	.word	0x20014254

0802808c <_reclaim_reent>:
 802808c:	4b29      	ldr	r3, [pc, #164]	; (8028134 <_reclaim_reent+0xa8>)
 802808e:	681b      	ldr	r3, [r3, #0]
 8028090:	4283      	cmp	r3, r0
 8028092:	b570      	push	{r4, r5, r6, lr}
 8028094:	4604      	mov	r4, r0
 8028096:	d04b      	beq.n	8028130 <_reclaim_reent+0xa4>
 8028098:	69c3      	ldr	r3, [r0, #28]
 802809a:	b143      	cbz	r3, 80280ae <_reclaim_reent+0x22>
 802809c:	68db      	ldr	r3, [r3, #12]
 802809e:	2b00      	cmp	r3, #0
 80280a0:	d144      	bne.n	802812c <_reclaim_reent+0xa0>
 80280a2:	69e3      	ldr	r3, [r4, #28]
 80280a4:	6819      	ldr	r1, [r3, #0]
 80280a6:	b111      	cbz	r1, 80280ae <_reclaim_reent+0x22>
 80280a8:	4620      	mov	r0, r4
 80280aa:	f000 f939 	bl	8028320 <_free_r>
 80280ae:	6961      	ldr	r1, [r4, #20]
 80280b0:	b111      	cbz	r1, 80280b8 <_reclaim_reent+0x2c>
 80280b2:	4620      	mov	r0, r4
 80280b4:	f000 f934 	bl	8028320 <_free_r>
 80280b8:	69e1      	ldr	r1, [r4, #28]
 80280ba:	b111      	cbz	r1, 80280c2 <_reclaim_reent+0x36>
 80280bc:	4620      	mov	r0, r4
 80280be:	f000 f92f 	bl	8028320 <_free_r>
 80280c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80280c4:	b111      	cbz	r1, 80280cc <_reclaim_reent+0x40>
 80280c6:	4620      	mov	r0, r4
 80280c8:	f000 f92a 	bl	8028320 <_free_r>
 80280cc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80280ce:	b111      	cbz	r1, 80280d6 <_reclaim_reent+0x4a>
 80280d0:	4620      	mov	r0, r4
 80280d2:	f000 f925 	bl	8028320 <_free_r>
 80280d6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80280d8:	b111      	cbz	r1, 80280e0 <_reclaim_reent+0x54>
 80280da:	4620      	mov	r0, r4
 80280dc:	f000 f920 	bl	8028320 <_free_r>
 80280e0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80280e2:	b111      	cbz	r1, 80280ea <_reclaim_reent+0x5e>
 80280e4:	4620      	mov	r0, r4
 80280e6:	f000 f91b 	bl	8028320 <_free_r>
 80280ea:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80280ec:	b111      	cbz	r1, 80280f4 <_reclaim_reent+0x68>
 80280ee:	4620      	mov	r0, r4
 80280f0:	f000 f916 	bl	8028320 <_free_r>
 80280f4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80280f6:	b111      	cbz	r1, 80280fe <_reclaim_reent+0x72>
 80280f8:	4620      	mov	r0, r4
 80280fa:	f000 f911 	bl	8028320 <_free_r>
 80280fe:	6a23      	ldr	r3, [r4, #32]
 8028100:	b1b3      	cbz	r3, 8028130 <_reclaim_reent+0xa4>
 8028102:	4620      	mov	r0, r4
 8028104:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028108:	4718      	bx	r3
 802810a:	5949      	ldr	r1, [r1, r5]
 802810c:	b941      	cbnz	r1, 8028120 <_reclaim_reent+0x94>
 802810e:	3504      	adds	r5, #4
 8028110:	69e3      	ldr	r3, [r4, #28]
 8028112:	2d80      	cmp	r5, #128	; 0x80
 8028114:	68d9      	ldr	r1, [r3, #12]
 8028116:	d1f8      	bne.n	802810a <_reclaim_reent+0x7e>
 8028118:	4620      	mov	r0, r4
 802811a:	f000 f901 	bl	8028320 <_free_r>
 802811e:	e7c0      	b.n	80280a2 <_reclaim_reent+0x16>
 8028120:	680e      	ldr	r6, [r1, #0]
 8028122:	4620      	mov	r0, r4
 8028124:	f000 f8fc 	bl	8028320 <_free_r>
 8028128:	4631      	mov	r1, r6
 802812a:	e7ef      	b.n	802810c <_reclaim_reent+0x80>
 802812c:	2500      	movs	r5, #0
 802812e:	e7ef      	b.n	8028110 <_reclaim_reent+0x84>
 8028130:	bd70      	pop	{r4, r5, r6, pc}
 8028132:	bf00      	nop
 8028134:	20000160 	.word	0x20000160

08028138 <_lseek_r>:
 8028138:	b538      	push	{r3, r4, r5, lr}
 802813a:	4d07      	ldr	r5, [pc, #28]	; (8028158 <_lseek_r+0x20>)
 802813c:	4604      	mov	r4, r0
 802813e:	4608      	mov	r0, r1
 8028140:	4611      	mov	r1, r2
 8028142:	2200      	movs	r2, #0
 8028144:	602a      	str	r2, [r5, #0]
 8028146:	461a      	mov	r2, r3
 8028148:	f7da f852 	bl	80021f0 <_lseek>
 802814c:	1c43      	adds	r3, r0, #1
 802814e:	d102      	bne.n	8028156 <_lseek_r+0x1e>
 8028150:	682b      	ldr	r3, [r5, #0]
 8028152:	b103      	cbz	r3, 8028156 <_lseek_r+0x1e>
 8028154:	6023      	str	r3, [r4, #0]
 8028156:	bd38      	pop	{r3, r4, r5, pc}
 8028158:	20014254 	.word	0x20014254

0802815c <_read_r>:
 802815c:	b538      	push	{r3, r4, r5, lr}
 802815e:	4d07      	ldr	r5, [pc, #28]	; (802817c <_read_r+0x20>)
 8028160:	4604      	mov	r4, r0
 8028162:	4608      	mov	r0, r1
 8028164:	4611      	mov	r1, r2
 8028166:	2200      	movs	r2, #0
 8028168:	602a      	str	r2, [r5, #0]
 802816a:	461a      	mov	r2, r3
 802816c:	f7da f818 	bl	80021a0 <_read>
 8028170:	1c43      	adds	r3, r0, #1
 8028172:	d102      	bne.n	802817a <_read_r+0x1e>
 8028174:	682b      	ldr	r3, [r5, #0]
 8028176:	b103      	cbz	r3, 802817a <_read_r+0x1e>
 8028178:	6023      	str	r3, [r4, #0]
 802817a:	bd38      	pop	{r3, r4, r5, pc}
 802817c:	20014254 	.word	0x20014254

08028180 <_kill_r>:
 8028180:	b538      	push	{r3, r4, r5, lr}
 8028182:	4d07      	ldr	r5, [pc, #28]	; (80281a0 <_kill_r+0x20>)
 8028184:	2300      	movs	r3, #0
 8028186:	4604      	mov	r4, r0
 8028188:	4608      	mov	r0, r1
 802818a:	4611      	mov	r1, r2
 802818c:	602b      	str	r3, [r5, #0]
 802818e:	f7d9 fff9 	bl	8002184 <_kill>
 8028192:	1c43      	adds	r3, r0, #1
 8028194:	d102      	bne.n	802819c <_kill_r+0x1c>
 8028196:	682b      	ldr	r3, [r5, #0]
 8028198:	b103      	cbz	r3, 802819c <_kill_r+0x1c>
 802819a:	6023      	str	r3, [r4, #0]
 802819c:	bd38      	pop	{r3, r4, r5, pc}
 802819e:	bf00      	nop
 80281a0:	20014254 	.word	0x20014254

080281a4 <_getpid_r>:
 80281a4:	f7d9 bfec 	b.w	8002180 <_getpid>

080281a8 <_sbrk_r>:
 80281a8:	b538      	push	{r3, r4, r5, lr}
 80281aa:	4d06      	ldr	r5, [pc, #24]	; (80281c4 <_sbrk_r+0x1c>)
 80281ac:	2300      	movs	r3, #0
 80281ae:	4604      	mov	r4, r0
 80281b0:	4608      	mov	r0, r1
 80281b2:	602b      	str	r3, [r5, #0]
 80281b4:	f7da f81e 	bl	80021f4 <_sbrk>
 80281b8:	1c43      	adds	r3, r0, #1
 80281ba:	d102      	bne.n	80281c2 <_sbrk_r+0x1a>
 80281bc:	682b      	ldr	r3, [r5, #0]
 80281be:	b103      	cbz	r3, 80281c2 <_sbrk_r+0x1a>
 80281c0:	6023      	str	r3, [r4, #0]
 80281c2:	bd38      	pop	{r3, r4, r5, pc}
 80281c4:	20014254 	.word	0x20014254

080281c8 <_write_r>:
 80281c8:	b538      	push	{r3, r4, r5, lr}
 80281ca:	4d07      	ldr	r5, [pc, #28]	; (80281e8 <_write_r+0x20>)
 80281cc:	4604      	mov	r4, r0
 80281ce:	4608      	mov	r0, r1
 80281d0:	4611      	mov	r1, r2
 80281d2:	2200      	movs	r2, #0
 80281d4:	602a      	str	r2, [r5, #0]
 80281d6:	461a      	mov	r2, r3
 80281d8:	f7d9 fff0 	bl	80021bc <_write>
 80281dc:	1c43      	adds	r3, r0, #1
 80281de:	d102      	bne.n	80281e6 <_write_r+0x1e>
 80281e0:	682b      	ldr	r3, [r5, #0]
 80281e2:	b103      	cbz	r3, 80281e6 <_write_r+0x1e>
 80281e4:	6023      	str	r3, [r4, #0]
 80281e6:	bd38      	pop	{r3, r4, r5, pc}
 80281e8:	20014254 	.word	0x20014254

080281ec <__errno>:
 80281ec:	4b01      	ldr	r3, [pc, #4]	; (80281f4 <__errno+0x8>)
 80281ee:	6818      	ldr	r0, [r3, #0]
 80281f0:	4770      	bx	lr
 80281f2:	bf00      	nop
 80281f4:	20000160 	.word	0x20000160

080281f8 <__libc_init_array>:
 80281f8:	b570      	push	{r4, r5, r6, lr}
 80281fa:	4d0d      	ldr	r5, [pc, #52]	; (8028230 <__libc_init_array+0x38>)
 80281fc:	4c0d      	ldr	r4, [pc, #52]	; (8028234 <__libc_init_array+0x3c>)
 80281fe:	1b64      	subs	r4, r4, r5
 8028200:	10a4      	asrs	r4, r4, #2
 8028202:	2600      	movs	r6, #0
 8028204:	42a6      	cmp	r6, r4
 8028206:	d109      	bne.n	802821c <__libc_init_array+0x24>
 8028208:	4d0b      	ldr	r5, [pc, #44]	; (8028238 <__libc_init_array+0x40>)
 802820a:	4c0c      	ldr	r4, [pc, #48]	; (802823c <__libc_init_array+0x44>)
 802820c:	f000 fd70 	bl	8028cf0 <_init>
 8028210:	1b64      	subs	r4, r4, r5
 8028212:	10a4      	asrs	r4, r4, #2
 8028214:	2600      	movs	r6, #0
 8028216:	42a6      	cmp	r6, r4
 8028218:	d105      	bne.n	8028226 <__libc_init_array+0x2e>
 802821a:	bd70      	pop	{r4, r5, r6, pc}
 802821c:	f855 3b04 	ldr.w	r3, [r5], #4
 8028220:	4798      	blx	r3
 8028222:	3601      	adds	r6, #1
 8028224:	e7ee      	b.n	8028204 <__libc_init_array+0xc>
 8028226:	f855 3b04 	ldr.w	r3, [r5], #4
 802822a:	4798      	blx	r3
 802822c:	3601      	adds	r6, #1
 802822e:	e7f2      	b.n	8028216 <__libc_init_array+0x1e>
 8028230:	08148574 	.word	0x08148574
 8028234:	08148574 	.word	0x08148574
 8028238:	08148574 	.word	0x08148574
 802823c:	08148588 	.word	0x08148588

08028240 <__retarget_lock_init_recursive>:
 8028240:	4770      	bx	lr

08028242 <__retarget_lock_acquire_recursive>:
 8028242:	4770      	bx	lr

08028244 <__retarget_lock_release_recursive>:
 8028244:	4770      	bx	lr

08028246 <memcpy>:
 8028246:	440a      	add	r2, r1
 8028248:	4291      	cmp	r1, r2
 802824a:	f100 33ff 	add.w	r3, r0, #4294967295
 802824e:	d100      	bne.n	8028252 <memcpy+0xc>
 8028250:	4770      	bx	lr
 8028252:	b510      	push	{r4, lr}
 8028254:	f811 4b01 	ldrb.w	r4, [r1], #1
 8028258:	f803 4f01 	strb.w	r4, [r3, #1]!
 802825c:	4291      	cmp	r1, r2
 802825e:	d1f9      	bne.n	8028254 <memcpy+0xe>
 8028260:	bd10      	pop	{r4, pc}
	...

08028264 <__register_exitproc>:
 8028264:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028268:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802831c <__register_exitproc+0xb8>
 802826c:	4606      	mov	r6, r0
 802826e:	f8d8 0000 	ldr.w	r0, [r8]
 8028272:	461f      	mov	r7, r3
 8028274:	460d      	mov	r5, r1
 8028276:	4691      	mov	r9, r2
 8028278:	f7ff ffe3 	bl	8028242 <__retarget_lock_acquire_recursive>
 802827c:	4b23      	ldr	r3, [pc, #140]	; (802830c <__register_exitproc+0xa8>)
 802827e:	681c      	ldr	r4, [r3, #0]
 8028280:	b934      	cbnz	r4, 8028290 <__register_exitproc+0x2c>
 8028282:	4c23      	ldr	r4, [pc, #140]	; (8028310 <__register_exitproc+0xac>)
 8028284:	601c      	str	r4, [r3, #0]
 8028286:	4b23      	ldr	r3, [pc, #140]	; (8028314 <__register_exitproc+0xb0>)
 8028288:	b113      	cbz	r3, 8028290 <__register_exitproc+0x2c>
 802828a:	681b      	ldr	r3, [r3, #0]
 802828c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8028290:	6863      	ldr	r3, [r4, #4]
 8028292:	2b1f      	cmp	r3, #31
 8028294:	dd07      	ble.n	80282a6 <__register_exitproc+0x42>
 8028296:	f8d8 0000 	ldr.w	r0, [r8]
 802829a:	f7ff ffd3 	bl	8028244 <__retarget_lock_release_recursive>
 802829e:	f04f 30ff 	mov.w	r0, #4294967295
 80282a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80282a6:	b32e      	cbz	r6, 80282f4 <__register_exitproc+0x90>
 80282a8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80282ac:	b968      	cbnz	r0, 80282ca <__register_exitproc+0x66>
 80282ae:	4b1a      	ldr	r3, [pc, #104]	; (8028318 <__register_exitproc+0xb4>)
 80282b0:	2b00      	cmp	r3, #0
 80282b2:	d0f0      	beq.n	8028296 <__register_exitproc+0x32>
 80282b4:	f44f 7084 	mov.w	r0, #264	; 0x108
 80282b8:	f7ff fcbe 	bl	8027c38 <malloc>
 80282bc:	2800      	cmp	r0, #0
 80282be:	d0ea      	beq.n	8028296 <__register_exitproc+0x32>
 80282c0:	2300      	movs	r3, #0
 80282c2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80282c6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80282ca:	6863      	ldr	r3, [r4, #4]
 80282cc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80282d0:	2201      	movs	r2, #1
 80282d2:	409a      	lsls	r2, r3
 80282d4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80282d8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80282dc:	4313      	orrs	r3, r2
 80282de:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80282e2:	2e02      	cmp	r6, #2
 80282e4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80282e8:	bf02      	ittt	eq
 80282ea:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80282ee:	4313      	orreq	r3, r2
 80282f0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80282f4:	6863      	ldr	r3, [r4, #4]
 80282f6:	f8d8 0000 	ldr.w	r0, [r8]
 80282fa:	1c5a      	adds	r2, r3, #1
 80282fc:	3302      	adds	r3, #2
 80282fe:	6062      	str	r2, [r4, #4]
 8028300:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8028304:	f7ff ff9e 	bl	8028244 <__retarget_lock_release_recursive>
 8028308:	2000      	movs	r0, #0
 802830a:	e7ca      	b.n	80282a2 <__register_exitproc+0x3e>
 802830c:	200142e8 	.word	0x200142e8
 8028310:	2001425c 	.word	0x2001425c
 8028314:	0802cc24 	.word	0x0802cc24
 8028318:	08027c39 	.word	0x08027c39
 802831c:	20000164 	.word	0x20000164

08028320 <_free_r>:
 8028320:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8028322:	2900      	cmp	r1, #0
 8028324:	d044      	beq.n	80283b0 <_free_r+0x90>
 8028326:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802832a:	9001      	str	r0, [sp, #4]
 802832c:	2b00      	cmp	r3, #0
 802832e:	f1a1 0404 	sub.w	r4, r1, #4
 8028332:	bfb8      	it	lt
 8028334:	18e4      	addlt	r4, r4, r3
 8028336:	f7ff fd2f 	bl	8027d98 <__malloc_lock>
 802833a:	4a1e      	ldr	r2, [pc, #120]	; (80283b4 <_free_r+0x94>)
 802833c:	9801      	ldr	r0, [sp, #4]
 802833e:	6813      	ldr	r3, [r2, #0]
 8028340:	b933      	cbnz	r3, 8028350 <_free_r+0x30>
 8028342:	6063      	str	r3, [r4, #4]
 8028344:	6014      	str	r4, [r2, #0]
 8028346:	b003      	add	sp, #12
 8028348:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802834c:	f7ff bd2a 	b.w	8027da4 <__malloc_unlock>
 8028350:	42a3      	cmp	r3, r4
 8028352:	d908      	bls.n	8028366 <_free_r+0x46>
 8028354:	6825      	ldr	r5, [r4, #0]
 8028356:	1961      	adds	r1, r4, r5
 8028358:	428b      	cmp	r3, r1
 802835a:	bf01      	itttt	eq
 802835c:	6819      	ldreq	r1, [r3, #0]
 802835e:	685b      	ldreq	r3, [r3, #4]
 8028360:	1949      	addeq	r1, r1, r5
 8028362:	6021      	streq	r1, [r4, #0]
 8028364:	e7ed      	b.n	8028342 <_free_r+0x22>
 8028366:	461a      	mov	r2, r3
 8028368:	685b      	ldr	r3, [r3, #4]
 802836a:	b10b      	cbz	r3, 8028370 <_free_r+0x50>
 802836c:	42a3      	cmp	r3, r4
 802836e:	d9fa      	bls.n	8028366 <_free_r+0x46>
 8028370:	6811      	ldr	r1, [r2, #0]
 8028372:	1855      	adds	r5, r2, r1
 8028374:	42a5      	cmp	r5, r4
 8028376:	d10b      	bne.n	8028390 <_free_r+0x70>
 8028378:	6824      	ldr	r4, [r4, #0]
 802837a:	4421      	add	r1, r4
 802837c:	1854      	adds	r4, r2, r1
 802837e:	42a3      	cmp	r3, r4
 8028380:	6011      	str	r1, [r2, #0]
 8028382:	d1e0      	bne.n	8028346 <_free_r+0x26>
 8028384:	681c      	ldr	r4, [r3, #0]
 8028386:	685b      	ldr	r3, [r3, #4]
 8028388:	6053      	str	r3, [r2, #4]
 802838a:	440c      	add	r4, r1
 802838c:	6014      	str	r4, [r2, #0]
 802838e:	e7da      	b.n	8028346 <_free_r+0x26>
 8028390:	d902      	bls.n	8028398 <_free_r+0x78>
 8028392:	230c      	movs	r3, #12
 8028394:	6003      	str	r3, [r0, #0]
 8028396:	e7d6      	b.n	8028346 <_free_r+0x26>
 8028398:	6825      	ldr	r5, [r4, #0]
 802839a:	1961      	adds	r1, r4, r5
 802839c:	428b      	cmp	r3, r1
 802839e:	bf04      	itt	eq
 80283a0:	6819      	ldreq	r1, [r3, #0]
 80283a2:	685b      	ldreq	r3, [r3, #4]
 80283a4:	6063      	str	r3, [r4, #4]
 80283a6:	bf04      	itt	eq
 80283a8:	1949      	addeq	r1, r1, r5
 80283aa:	6021      	streq	r1, [r4, #0]
 80283ac:	6054      	str	r4, [r2, #4]
 80283ae:	e7ca      	b.n	8028346 <_free_r+0x26>
 80283b0:	b003      	add	sp, #12
 80283b2:	bd30      	pop	{r4, r5, pc}
 80283b4:	20014110 	.word	0x20014110

080283b8 <__sfputc_r>:
 80283b8:	6893      	ldr	r3, [r2, #8]
 80283ba:	3b01      	subs	r3, #1
 80283bc:	2b00      	cmp	r3, #0
 80283be:	b410      	push	{r4}
 80283c0:	6093      	str	r3, [r2, #8]
 80283c2:	da08      	bge.n	80283d6 <__sfputc_r+0x1e>
 80283c4:	6994      	ldr	r4, [r2, #24]
 80283c6:	42a3      	cmp	r3, r4
 80283c8:	db01      	blt.n	80283ce <__sfputc_r+0x16>
 80283ca:	290a      	cmp	r1, #10
 80283cc:	d103      	bne.n	80283d6 <__sfputc_r+0x1e>
 80283ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80283d2:	f000 bb73 	b.w	8028abc <__swbuf_r>
 80283d6:	6813      	ldr	r3, [r2, #0]
 80283d8:	1c58      	adds	r0, r3, #1
 80283da:	6010      	str	r0, [r2, #0]
 80283dc:	7019      	strb	r1, [r3, #0]
 80283de:	4608      	mov	r0, r1
 80283e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80283e4:	4770      	bx	lr

080283e6 <__sfputs_r>:
 80283e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80283e8:	4606      	mov	r6, r0
 80283ea:	460f      	mov	r7, r1
 80283ec:	4614      	mov	r4, r2
 80283ee:	18d5      	adds	r5, r2, r3
 80283f0:	42ac      	cmp	r4, r5
 80283f2:	d101      	bne.n	80283f8 <__sfputs_r+0x12>
 80283f4:	2000      	movs	r0, #0
 80283f6:	e007      	b.n	8028408 <__sfputs_r+0x22>
 80283f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80283fc:	463a      	mov	r2, r7
 80283fe:	4630      	mov	r0, r6
 8028400:	f7ff ffda 	bl	80283b8 <__sfputc_r>
 8028404:	1c43      	adds	r3, r0, #1
 8028406:	d1f3      	bne.n	80283f0 <__sfputs_r+0xa>
 8028408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802840c <_vfiprintf_r>:
 802840c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028410:	460d      	mov	r5, r1
 8028412:	b09d      	sub	sp, #116	; 0x74
 8028414:	4614      	mov	r4, r2
 8028416:	4698      	mov	r8, r3
 8028418:	4606      	mov	r6, r0
 802841a:	b118      	cbz	r0, 8028424 <_vfiprintf_r+0x18>
 802841c:	6a03      	ldr	r3, [r0, #32]
 802841e:	b90b      	cbnz	r3, 8028424 <_vfiprintf_r+0x18>
 8028420:	f7ff fd60 	bl	8027ee4 <__sinit>
 8028424:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028426:	07d9      	lsls	r1, r3, #31
 8028428:	d405      	bmi.n	8028436 <_vfiprintf_r+0x2a>
 802842a:	89ab      	ldrh	r3, [r5, #12]
 802842c:	059a      	lsls	r2, r3, #22
 802842e:	d402      	bmi.n	8028436 <_vfiprintf_r+0x2a>
 8028430:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028432:	f7ff ff06 	bl	8028242 <__retarget_lock_acquire_recursive>
 8028436:	89ab      	ldrh	r3, [r5, #12]
 8028438:	071b      	lsls	r3, r3, #28
 802843a:	d501      	bpl.n	8028440 <_vfiprintf_r+0x34>
 802843c:	692b      	ldr	r3, [r5, #16]
 802843e:	b99b      	cbnz	r3, 8028468 <_vfiprintf_r+0x5c>
 8028440:	4629      	mov	r1, r5
 8028442:	4630      	mov	r0, r6
 8028444:	f000 fb78 	bl	8028b38 <__swsetup_r>
 8028448:	b170      	cbz	r0, 8028468 <_vfiprintf_r+0x5c>
 802844a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802844c:	07dc      	lsls	r4, r3, #31
 802844e:	d504      	bpl.n	802845a <_vfiprintf_r+0x4e>
 8028450:	f04f 30ff 	mov.w	r0, #4294967295
 8028454:	b01d      	add	sp, #116	; 0x74
 8028456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802845a:	89ab      	ldrh	r3, [r5, #12]
 802845c:	0598      	lsls	r0, r3, #22
 802845e:	d4f7      	bmi.n	8028450 <_vfiprintf_r+0x44>
 8028460:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028462:	f7ff feef 	bl	8028244 <__retarget_lock_release_recursive>
 8028466:	e7f3      	b.n	8028450 <_vfiprintf_r+0x44>
 8028468:	2300      	movs	r3, #0
 802846a:	9309      	str	r3, [sp, #36]	; 0x24
 802846c:	2320      	movs	r3, #32
 802846e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8028472:	f8cd 800c 	str.w	r8, [sp, #12]
 8028476:	2330      	movs	r3, #48	; 0x30
 8028478:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802862c <_vfiprintf_r+0x220>
 802847c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8028480:	f04f 0901 	mov.w	r9, #1
 8028484:	4623      	mov	r3, r4
 8028486:	469a      	mov	sl, r3
 8028488:	f813 2b01 	ldrb.w	r2, [r3], #1
 802848c:	b10a      	cbz	r2, 8028492 <_vfiprintf_r+0x86>
 802848e:	2a25      	cmp	r2, #37	; 0x25
 8028490:	d1f9      	bne.n	8028486 <_vfiprintf_r+0x7a>
 8028492:	ebba 0b04 	subs.w	fp, sl, r4
 8028496:	d00b      	beq.n	80284b0 <_vfiprintf_r+0xa4>
 8028498:	465b      	mov	r3, fp
 802849a:	4622      	mov	r2, r4
 802849c:	4629      	mov	r1, r5
 802849e:	4630      	mov	r0, r6
 80284a0:	f7ff ffa1 	bl	80283e6 <__sfputs_r>
 80284a4:	3001      	adds	r0, #1
 80284a6:	f000 80a9 	beq.w	80285fc <_vfiprintf_r+0x1f0>
 80284aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80284ac:	445a      	add	r2, fp
 80284ae:	9209      	str	r2, [sp, #36]	; 0x24
 80284b0:	f89a 3000 	ldrb.w	r3, [sl]
 80284b4:	2b00      	cmp	r3, #0
 80284b6:	f000 80a1 	beq.w	80285fc <_vfiprintf_r+0x1f0>
 80284ba:	2300      	movs	r3, #0
 80284bc:	f04f 32ff 	mov.w	r2, #4294967295
 80284c0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80284c4:	f10a 0a01 	add.w	sl, sl, #1
 80284c8:	9304      	str	r3, [sp, #16]
 80284ca:	9307      	str	r3, [sp, #28]
 80284cc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80284d0:	931a      	str	r3, [sp, #104]	; 0x68
 80284d2:	4654      	mov	r4, sl
 80284d4:	2205      	movs	r2, #5
 80284d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80284da:	4854      	ldr	r0, [pc, #336]	; (802862c <_vfiprintf_r+0x220>)
 80284dc:	f7d7 fe88 	bl	80001f0 <memchr>
 80284e0:	9a04      	ldr	r2, [sp, #16]
 80284e2:	b9d8      	cbnz	r0, 802851c <_vfiprintf_r+0x110>
 80284e4:	06d1      	lsls	r1, r2, #27
 80284e6:	bf44      	itt	mi
 80284e8:	2320      	movmi	r3, #32
 80284ea:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80284ee:	0713      	lsls	r3, r2, #28
 80284f0:	bf44      	itt	mi
 80284f2:	232b      	movmi	r3, #43	; 0x2b
 80284f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80284f8:	f89a 3000 	ldrb.w	r3, [sl]
 80284fc:	2b2a      	cmp	r3, #42	; 0x2a
 80284fe:	d015      	beq.n	802852c <_vfiprintf_r+0x120>
 8028500:	9a07      	ldr	r2, [sp, #28]
 8028502:	4654      	mov	r4, sl
 8028504:	2000      	movs	r0, #0
 8028506:	f04f 0c0a 	mov.w	ip, #10
 802850a:	4621      	mov	r1, r4
 802850c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8028510:	3b30      	subs	r3, #48	; 0x30
 8028512:	2b09      	cmp	r3, #9
 8028514:	d94d      	bls.n	80285b2 <_vfiprintf_r+0x1a6>
 8028516:	b1b0      	cbz	r0, 8028546 <_vfiprintf_r+0x13a>
 8028518:	9207      	str	r2, [sp, #28]
 802851a:	e014      	b.n	8028546 <_vfiprintf_r+0x13a>
 802851c:	eba0 0308 	sub.w	r3, r0, r8
 8028520:	fa09 f303 	lsl.w	r3, r9, r3
 8028524:	4313      	orrs	r3, r2
 8028526:	9304      	str	r3, [sp, #16]
 8028528:	46a2      	mov	sl, r4
 802852a:	e7d2      	b.n	80284d2 <_vfiprintf_r+0xc6>
 802852c:	9b03      	ldr	r3, [sp, #12]
 802852e:	1d19      	adds	r1, r3, #4
 8028530:	681b      	ldr	r3, [r3, #0]
 8028532:	9103      	str	r1, [sp, #12]
 8028534:	2b00      	cmp	r3, #0
 8028536:	bfbb      	ittet	lt
 8028538:	425b      	neglt	r3, r3
 802853a:	f042 0202 	orrlt.w	r2, r2, #2
 802853e:	9307      	strge	r3, [sp, #28]
 8028540:	9307      	strlt	r3, [sp, #28]
 8028542:	bfb8      	it	lt
 8028544:	9204      	strlt	r2, [sp, #16]
 8028546:	7823      	ldrb	r3, [r4, #0]
 8028548:	2b2e      	cmp	r3, #46	; 0x2e
 802854a:	d10c      	bne.n	8028566 <_vfiprintf_r+0x15a>
 802854c:	7863      	ldrb	r3, [r4, #1]
 802854e:	2b2a      	cmp	r3, #42	; 0x2a
 8028550:	d134      	bne.n	80285bc <_vfiprintf_r+0x1b0>
 8028552:	9b03      	ldr	r3, [sp, #12]
 8028554:	1d1a      	adds	r2, r3, #4
 8028556:	681b      	ldr	r3, [r3, #0]
 8028558:	9203      	str	r2, [sp, #12]
 802855a:	2b00      	cmp	r3, #0
 802855c:	bfb8      	it	lt
 802855e:	f04f 33ff 	movlt.w	r3, #4294967295
 8028562:	3402      	adds	r4, #2
 8028564:	9305      	str	r3, [sp, #20]
 8028566:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802863c <_vfiprintf_r+0x230>
 802856a:	7821      	ldrb	r1, [r4, #0]
 802856c:	2203      	movs	r2, #3
 802856e:	4650      	mov	r0, sl
 8028570:	f7d7 fe3e 	bl	80001f0 <memchr>
 8028574:	b138      	cbz	r0, 8028586 <_vfiprintf_r+0x17a>
 8028576:	9b04      	ldr	r3, [sp, #16]
 8028578:	eba0 000a 	sub.w	r0, r0, sl
 802857c:	2240      	movs	r2, #64	; 0x40
 802857e:	4082      	lsls	r2, r0
 8028580:	4313      	orrs	r3, r2
 8028582:	3401      	adds	r4, #1
 8028584:	9304      	str	r3, [sp, #16]
 8028586:	f814 1b01 	ldrb.w	r1, [r4], #1
 802858a:	4829      	ldr	r0, [pc, #164]	; (8028630 <_vfiprintf_r+0x224>)
 802858c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8028590:	2206      	movs	r2, #6
 8028592:	f7d7 fe2d 	bl	80001f0 <memchr>
 8028596:	2800      	cmp	r0, #0
 8028598:	d03f      	beq.n	802861a <_vfiprintf_r+0x20e>
 802859a:	4b26      	ldr	r3, [pc, #152]	; (8028634 <_vfiprintf_r+0x228>)
 802859c:	bb1b      	cbnz	r3, 80285e6 <_vfiprintf_r+0x1da>
 802859e:	9b03      	ldr	r3, [sp, #12]
 80285a0:	3307      	adds	r3, #7
 80285a2:	f023 0307 	bic.w	r3, r3, #7
 80285a6:	3308      	adds	r3, #8
 80285a8:	9303      	str	r3, [sp, #12]
 80285aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80285ac:	443b      	add	r3, r7
 80285ae:	9309      	str	r3, [sp, #36]	; 0x24
 80285b0:	e768      	b.n	8028484 <_vfiprintf_r+0x78>
 80285b2:	fb0c 3202 	mla	r2, ip, r2, r3
 80285b6:	460c      	mov	r4, r1
 80285b8:	2001      	movs	r0, #1
 80285ba:	e7a6      	b.n	802850a <_vfiprintf_r+0xfe>
 80285bc:	2300      	movs	r3, #0
 80285be:	3401      	adds	r4, #1
 80285c0:	9305      	str	r3, [sp, #20]
 80285c2:	4619      	mov	r1, r3
 80285c4:	f04f 0c0a 	mov.w	ip, #10
 80285c8:	4620      	mov	r0, r4
 80285ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 80285ce:	3a30      	subs	r2, #48	; 0x30
 80285d0:	2a09      	cmp	r2, #9
 80285d2:	d903      	bls.n	80285dc <_vfiprintf_r+0x1d0>
 80285d4:	2b00      	cmp	r3, #0
 80285d6:	d0c6      	beq.n	8028566 <_vfiprintf_r+0x15a>
 80285d8:	9105      	str	r1, [sp, #20]
 80285da:	e7c4      	b.n	8028566 <_vfiprintf_r+0x15a>
 80285dc:	fb0c 2101 	mla	r1, ip, r1, r2
 80285e0:	4604      	mov	r4, r0
 80285e2:	2301      	movs	r3, #1
 80285e4:	e7f0      	b.n	80285c8 <_vfiprintf_r+0x1bc>
 80285e6:	ab03      	add	r3, sp, #12
 80285e8:	9300      	str	r3, [sp, #0]
 80285ea:	462a      	mov	r2, r5
 80285ec:	4b12      	ldr	r3, [pc, #72]	; (8028638 <_vfiprintf_r+0x22c>)
 80285ee:	a904      	add	r1, sp, #16
 80285f0:	4630      	mov	r0, r6
 80285f2:	f3af 8000 	nop.w
 80285f6:	4607      	mov	r7, r0
 80285f8:	1c78      	adds	r0, r7, #1
 80285fa:	d1d6      	bne.n	80285aa <_vfiprintf_r+0x19e>
 80285fc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80285fe:	07d9      	lsls	r1, r3, #31
 8028600:	d405      	bmi.n	802860e <_vfiprintf_r+0x202>
 8028602:	89ab      	ldrh	r3, [r5, #12]
 8028604:	059a      	lsls	r2, r3, #22
 8028606:	d402      	bmi.n	802860e <_vfiprintf_r+0x202>
 8028608:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802860a:	f7ff fe1b 	bl	8028244 <__retarget_lock_release_recursive>
 802860e:	89ab      	ldrh	r3, [r5, #12]
 8028610:	065b      	lsls	r3, r3, #25
 8028612:	f53f af1d 	bmi.w	8028450 <_vfiprintf_r+0x44>
 8028616:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028618:	e71c      	b.n	8028454 <_vfiprintf_r+0x48>
 802861a:	ab03      	add	r3, sp, #12
 802861c:	9300      	str	r3, [sp, #0]
 802861e:	462a      	mov	r2, r5
 8028620:	4b05      	ldr	r3, [pc, #20]	; (8028638 <_vfiprintf_r+0x22c>)
 8028622:	a904      	add	r1, sp, #16
 8028624:	4630      	mov	r0, r6
 8028626:	f000 f879 	bl	802871c <_printf_i>
 802862a:	e7e4      	b.n	80285f6 <_vfiprintf_r+0x1ea>
 802862c:	0802cc28 	.word	0x0802cc28
 8028630:	0802cc32 	.word	0x0802cc32
 8028634:	00000000 	.word	0x00000000
 8028638:	080283e7 	.word	0x080283e7
 802863c:	0802cc2e 	.word	0x0802cc2e

08028640 <_printf_common>:
 8028640:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028644:	4616      	mov	r6, r2
 8028646:	4699      	mov	r9, r3
 8028648:	688a      	ldr	r2, [r1, #8]
 802864a:	690b      	ldr	r3, [r1, #16]
 802864c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8028650:	4293      	cmp	r3, r2
 8028652:	bfb8      	it	lt
 8028654:	4613      	movlt	r3, r2
 8028656:	6033      	str	r3, [r6, #0]
 8028658:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802865c:	4607      	mov	r7, r0
 802865e:	460c      	mov	r4, r1
 8028660:	b10a      	cbz	r2, 8028666 <_printf_common+0x26>
 8028662:	3301      	adds	r3, #1
 8028664:	6033      	str	r3, [r6, #0]
 8028666:	6823      	ldr	r3, [r4, #0]
 8028668:	0699      	lsls	r1, r3, #26
 802866a:	bf42      	ittt	mi
 802866c:	6833      	ldrmi	r3, [r6, #0]
 802866e:	3302      	addmi	r3, #2
 8028670:	6033      	strmi	r3, [r6, #0]
 8028672:	6825      	ldr	r5, [r4, #0]
 8028674:	f015 0506 	ands.w	r5, r5, #6
 8028678:	d106      	bne.n	8028688 <_printf_common+0x48>
 802867a:	f104 0a19 	add.w	sl, r4, #25
 802867e:	68e3      	ldr	r3, [r4, #12]
 8028680:	6832      	ldr	r2, [r6, #0]
 8028682:	1a9b      	subs	r3, r3, r2
 8028684:	42ab      	cmp	r3, r5
 8028686:	dc26      	bgt.n	80286d6 <_printf_common+0x96>
 8028688:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802868c:	1e13      	subs	r3, r2, #0
 802868e:	6822      	ldr	r2, [r4, #0]
 8028690:	bf18      	it	ne
 8028692:	2301      	movne	r3, #1
 8028694:	0692      	lsls	r2, r2, #26
 8028696:	d42b      	bmi.n	80286f0 <_printf_common+0xb0>
 8028698:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802869c:	4649      	mov	r1, r9
 802869e:	4638      	mov	r0, r7
 80286a0:	47c0      	blx	r8
 80286a2:	3001      	adds	r0, #1
 80286a4:	d01e      	beq.n	80286e4 <_printf_common+0xa4>
 80286a6:	6823      	ldr	r3, [r4, #0]
 80286a8:	6922      	ldr	r2, [r4, #16]
 80286aa:	f003 0306 	and.w	r3, r3, #6
 80286ae:	2b04      	cmp	r3, #4
 80286b0:	bf02      	ittt	eq
 80286b2:	68e5      	ldreq	r5, [r4, #12]
 80286b4:	6833      	ldreq	r3, [r6, #0]
 80286b6:	1aed      	subeq	r5, r5, r3
 80286b8:	68a3      	ldr	r3, [r4, #8]
 80286ba:	bf0c      	ite	eq
 80286bc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80286c0:	2500      	movne	r5, #0
 80286c2:	4293      	cmp	r3, r2
 80286c4:	bfc4      	itt	gt
 80286c6:	1a9b      	subgt	r3, r3, r2
 80286c8:	18ed      	addgt	r5, r5, r3
 80286ca:	2600      	movs	r6, #0
 80286cc:	341a      	adds	r4, #26
 80286ce:	42b5      	cmp	r5, r6
 80286d0:	d11a      	bne.n	8028708 <_printf_common+0xc8>
 80286d2:	2000      	movs	r0, #0
 80286d4:	e008      	b.n	80286e8 <_printf_common+0xa8>
 80286d6:	2301      	movs	r3, #1
 80286d8:	4652      	mov	r2, sl
 80286da:	4649      	mov	r1, r9
 80286dc:	4638      	mov	r0, r7
 80286de:	47c0      	blx	r8
 80286e0:	3001      	adds	r0, #1
 80286e2:	d103      	bne.n	80286ec <_printf_common+0xac>
 80286e4:	f04f 30ff 	mov.w	r0, #4294967295
 80286e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80286ec:	3501      	adds	r5, #1
 80286ee:	e7c6      	b.n	802867e <_printf_common+0x3e>
 80286f0:	18e1      	adds	r1, r4, r3
 80286f2:	1c5a      	adds	r2, r3, #1
 80286f4:	2030      	movs	r0, #48	; 0x30
 80286f6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80286fa:	4422      	add	r2, r4
 80286fc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8028700:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8028704:	3302      	adds	r3, #2
 8028706:	e7c7      	b.n	8028698 <_printf_common+0x58>
 8028708:	2301      	movs	r3, #1
 802870a:	4622      	mov	r2, r4
 802870c:	4649      	mov	r1, r9
 802870e:	4638      	mov	r0, r7
 8028710:	47c0      	blx	r8
 8028712:	3001      	adds	r0, #1
 8028714:	d0e6      	beq.n	80286e4 <_printf_common+0xa4>
 8028716:	3601      	adds	r6, #1
 8028718:	e7d9      	b.n	80286ce <_printf_common+0x8e>
	...

0802871c <_printf_i>:
 802871c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8028720:	7e0f      	ldrb	r7, [r1, #24]
 8028722:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028724:	2f78      	cmp	r7, #120	; 0x78
 8028726:	4691      	mov	r9, r2
 8028728:	4680      	mov	r8, r0
 802872a:	460c      	mov	r4, r1
 802872c:	469a      	mov	sl, r3
 802872e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8028732:	d807      	bhi.n	8028744 <_printf_i+0x28>
 8028734:	2f62      	cmp	r7, #98	; 0x62
 8028736:	d80a      	bhi.n	802874e <_printf_i+0x32>
 8028738:	2f00      	cmp	r7, #0
 802873a:	f000 80d4 	beq.w	80288e6 <_printf_i+0x1ca>
 802873e:	2f58      	cmp	r7, #88	; 0x58
 8028740:	f000 80c0 	beq.w	80288c4 <_printf_i+0x1a8>
 8028744:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8028748:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802874c:	e03a      	b.n	80287c4 <_printf_i+0xa8>
 802874e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8028752:	2b15      	cmp	r3, #21
 8028754:	d8f6      	bhi.n	8028744 <_printf_i+0x28>
 8028756:	a101      	add	r1, pc, #4	; (adr r1, 802875c <_printf_i+0x40>)
 8028758:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802875c:	080287b5 	.word	0x080287b5
 8028760:	080287c9 	.word	0x080287c9
 8028764:	08028745 	.word	0x08028745
 8028768:	08028745 	.word	0x08028745
 802876c:	08028745 	.word	0x08028745
 8028770:	08028745 	.word	0x08028745
 8028774:	080287c9 	.word	0x080287c9
 8028778:	08028745 	.word	0x08028745
 802877c:	08028745 	.word	0x08028745
 8028780:	08028745 	.word	0x08028745
 8028784:	08028745 	.word	0x08028745
 8028788:	080288cd 	.word	0x080288cd
 802878c:	080287f5 	.word	0x080287f5
 8028790:	08028887 	.word	0x08028887
 8028794:	08028745 	.word	0x08028745
 8028798:	08028745 	.word	0x08028745
 802879c:	080288ef 	.word	0x080288ef
 80287a0:	08028745 	.word	0x08028745
 80287a4:	080287f5 	.word	0x080287f5
 80287a8:	08028745 	.word	0x08028745
 80287ac:	08028745 	.word	0x08028745
 80287b0:	0802888f 	.word	0x0802888f
 80287b4:	682b      	ldr	r3, [r5, #0]
 80287b6:	1d1a      	adds	r2, r3, #4
 80287b8:	681b      	ldr	r3, [r3, #0]
 80287ba:	602a      	str	r2, [r5, #0]
 80287bc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80287c0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80287c4:	2301      	movs	r3, #1
 80287c6:	e09f      	b.n	8028908 <_printf_i+0x1ec>
 80287c8:	6820      	ldr	r0, [r4, #0]
 80287ca:	682b      	ldr	r3, [r5, #0]
 80287cc:	0607      	lsls	r7, r0, #24
 80287ce:	f103 0104 	add.w	r1, r3, #4
 80287d2:	6029      	str	r1, [r5, #0]
 80287d4:	d501      	bpl.n	80287da <_printf_i+0xbe>
 80287d6:	681e      	ldr	r6, [r3, #0]
 80287d8:	e003      	b.n	80287e2 <_printf_i+0xc6>
 80287da:	0646      	lsls	r6, r0, #25
 80287dc:	d5fb      	bpl.n	80287d6 <_printf_i+0xba>
 80287de:	f9b3 6000 	ldrsh.w	r6, [r3]
 80287e2:	2e00      	cmp	r6, #0
 80287e4:	da03      	bge.n	80287ee <_printf_i+0xd2>
 80287e6:	232d      	movs	r3, #45	; 0x2d
 80287e8:	4276      	negs	r6, r6
 80287ea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80287ee:	485a      	ldr	r0, [pc, #360]	; (8028958 <_printf_i+0x23c>)
 80287f0:	230a      	movs	r3, #10
 80287f2:	e012      	b.n	802881a <_printf_i+0xfe>
 80287f4:	682b      	ldr	r3, [r5, #0]
 80287f6:	6820      	ldr	r0, [r4, #0]
 80287f8:	1d19      	adds	r1, r3, #4
 80287fa:	6029      	str	r1, [r5, #0]
 80287fc:	0605      	lsls	r5, r0, #24
 80287fe:	d501      	bpl.n	8028804 <_printf_i+0xe8>
 8028800:	681e      	ldr	r6, [r3, #0]
 8028802:	e002      	b.n	802880a <_printf_i+0xee>
 8028804:	0641      	lsls	r1, r0, #25
 8028806:	d5fb      	bpl.n	8028800 <_printf_i+0xe4>
 8028808:	881e      	ldrh	r6, [r3, #0]
 802880a:	4853      	ldr	r0, [pc, #332]	; (8028958 <_printf_i+0x23c>)
 802880c:	2f6f      	cmp	r7, #111	; 0x6f
 802880e:	bf0c      	ite	eq
 8028810:	2308      	moveq	r3, #8
 8028812:	230a      	movne	r3, #10
 8028814:	2100      	movs	r1, #0
 8028816:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802881a:	6865      	ldr	r5, [r4, #4]
 802881c:	60a5      	str	r5, [r4, #8]
 802881e:	2d00      	cmp	r5, #0
 8028820:	bfa2      	ittt	ge
 8028822:	6821      	ldrge	r1, [r4, #0]
 8028824:	f021 0104 	bicge.w	r1, r1, #4
 8028828:	6021      	strge	r1, [r4, #0]
 802882a:	b90e      	cbnz	r6, 8028830 <_printf_i+0x114>
 802882c:	2d00      	cmp	r5, #0
 802882e:	d04b      	beq.n	80288c8 <_printf_i+0x1ac>
 8028830:	4615      	mov	r5, r2
 8028832:	fbb6 f1f3 	udiv	r1, r6, r3
 8028836:	fb03 6711 	mls	r7, r3, r1, r6
 802883a:	5dc7      	ldrb	r7, [r0, r7]
 802883c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8028840:	4637      	mov	r7, r6
 8028842:	42bb      	cmp	r3, r7
 8028844:	460e      	mov	r6, r1
 8028846:	d9f4      	bls.n	8028832 <_printf_i+0x116>
 8028848:	2b08      	cmp	r3, #8
 802884a:	d10b      	bne.n	8028864 <_printf_i+0x148>
 802884c:	6823      	ldr	r3, [r4, #0]
 802884e:	07de      	lsls	r6, r3, #31
 8028850:	d508      	bpl.n	8028864 <_printf_i+0x148>
 8028852:	6923      	ldr	r3, [r4, #16]
 8028854:	6861      	ldr	r1, [r4, #4]
 8028856:	4299      	cmp	r1, r3
 8028858:	bfde      	ittt	le
 802885a:	2330      	movle	r3, #48	; 0x30
 802885c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8028860:	f105 35ff 	addle.w	r5, r5, #4294967295
 8028864:	1b52      	subs	r2, r2, r5
 8028866:	6122      	str	r2, [r4, #16]
 8028868:	f8cd a000 	str.w	sl, [sp]
 802886c:	464b      	mov	r3, r9
 802886e:	aa03      	add	r2, sp, #12
 8028870:	4621      	mov	r1, r4
 8028872:	4640      	mov	r0, r8
 8028874:	f7ff fee4 	bl	8028640 <_printf_common>
 8028878:	3001      	adds	r0, #1
 802887a:	d14a      	bne.n	8028912 <_printf_i+0x1f6>
 802887c:	f04f 30ff 	mov.w	r0, #4294967295
 8028880:	b004      	add	sp, #16
 8028882:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028886:	6823      	ldr	r3, [r4, #0]
 8028888:	f043 0320 	orr.w	r3, r3, #32
 802888c:	6023      	str	r3, [r4, #0]
 802888e:	4833      	ldr	r0, [pc, #204]	; (802895c <_printf_i+0x240>)
 8028890:	2778      	movs	r7, #120	; 0x78
 8028892:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8028896:	6823      	ldr	r3, [r4, #0]
 8028898:	6829      	ldr	r1, [r5, #0]
 802889a:	061f      	lsls	r7, r3, #24
 802889c:	f851 6b04 	ldr.w	r6, [r1], #4
 80288a0:	d402      	bmi.n	80288a8 <_printf_i+0x18c>
 80288a2:	065f      	lsls	r7, r3, #25
 80288a4:	bf48      	it	mi
 80288a6:	b2b6      	uxthmi	r6, r6
 80288a8:	07df      	lsls	r7, r3, #31
 80288aa:	bf48      	it	mi
 80288ac:	f043 0320 	orrmi.w	r3, r3, #32
 80288b0:	6029      	str	r1, [r5, #0]
 80288b2:	bf48      	it	mi
 80288b4:	6023      	strmi	r3, [r4, #0]
 80288b6:	b91e      	cbnz	r6, 80288c0 <_printf_i+0x1a4>
 80288b8:	6823      	ldr	r3, [r4, #0]
 80288ba:	f023 0320 	bic.w	r3, r3, #32
 80288be:	6023      	str	r3, [r4, #0]
 80288c0:	2310      	movs	r3, #16
 80288c2:	e7a7      	b.n	8028814 <_printf_i+0xf8>
 80288c4:	4824      	ldr	r0, [pc, #144]	; (8028958 <_printf_i+0x23c>)
 80288c6:	e7e4      	b.n	8028892 <_printf_i+0x176>
 80288c8:	4615      	mov	r5, r2
 80288ca:	e7bd      	b.n	8028848 <_printf_i+0x12c>
 80288cc:	682b      	ldr	r3, [r5, #0]
 80288ce:	6826      	ldr	r6, [r4, #0]
 80288d0:	6961      	ldr	r1, [r4, #20]
 80288d2:	1d18      	adds	r0, r3, #4
 80288d4:	6028      	str	r0, [r5, #0]
 80288d6:	0635      	lsls	r5, r6, #24
 80288d8:	681b      	ldr	r3, [r3, #0]
 80288da:	d501      	bpl.n	80288e0 <_printf_i+0x1c4>
 80288dc:	6019      	str	r1, [r3, #0]
 80288de:	e002      	b.n	80288e6 <_printf_i+0x1ca>
 80288e0:	0670      	lsls	r0, r6, #25
 80288e2:	d5fb      	bpl.n	80288dc <_printf_i+0x1c0>
 80288e4:	8019      	strh	r1, [r3, #0]
 80288e6:	2300      	movs	r3, #0
 80288e8:	6123      	str	r3, [r4, #16]
 80288ea:	4615      	mov	r5, r2
 80288ec:	e7bc      	b.n	8028868 <_printf_i+0x14c>
 80288ee:	682b      	ldr	r3, [r5, #0]
 80288f0:	1d1a      	adds	r2, r3, #4
 80288f2:	602a      	str	r2, [r5, #0]
 80288f4:	681d      	ldr	r5, [r3, #0]
 80288f6:	6862      	ldr	r2, [r4, #4]
 80288f8:	2100      	movs	r1, #0
 80288fa:	4628      	mov	r0, r5
 80288fc:	f7d7 fc78 	bl	80001f0 <memchr>
 8028900:	b108      	cbz	r0, 8028906 <_printf_i+0x1ea>
 8028902:	1b40      	subs	r0, r0, r5
 8028904:	6060      	str	r0, [r4, #4]
 8028906:	6863      	ldr	r3, [r4, #4]
 8028908:	6123      	str	r3, [r4, #16]
 802890a:	2300      	movs	r3, #0
 802890c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8028910:	e7aa      	b.n	8028868 <_printf_i+0x14c>
 8028912:	6923      	ldr	r3, [r4, #16]
 8028914:	462a      	mov	r2, r5
 8028916:	4649      	mov	r1, r9
 8028918:	4640      	mov	r0, r8
 802891a:	47d0      	blx	sl
 802891c:	3001      	adds	r0, #1
 802891e:	d0ad      	beq.n	802887c <_printf_i+0x160>
 8028920:	6823      	ldr	r3, [r4, #0]
 8028922:	079b      	lsls	r3, r3, #30
 8028924:	d413      	bmi.n	802894e <_printf_i+0x232>
 8028926:	68e0      	ldr	r0, [r4, #12]
 8028928:	9b03      	ldr	r3, [sp, #12]
 802892a:	4298      	cmp	r0, r3
 802892c:	bfb8      	it	lt
 802892e:	4618      	movlt	r0, r3
 8028930:	e7a6      	b.n	8028880 <_printf_i+0x164>
 8028932:	2301      	movs	r3, #1
 8028934:	4632      	mov	r2, r6
 8028936:	4649      	mov	r1, r9
 8028938:	4640      	mov	r0, r8
 802893a:	47d0      	blx	sl
 802893c:	3001      	adds	r0, #1
 802893e:	d09d      	beq.n	802887c <_printf_i+0x160>
 8028940:	3501      	adds	r5, #1
 8028942:	68e3      	ldr	r3, [r4, #12]
 8028944:	9903      	ldr	r1, [sp, #12]
 8028946:	1a5b      	subs	r3, r3, r1
 8028948:	42ab      	cmp	r3, r5
 802894a:	dcf2      	bgt.n	8028932 <_printf_i+0x216>
 802894c:	e7eb      	b.n	8028926 <_printf_i+0x20a>
 802894e:	2500      	movs	r5, #0
 8028950:	f104 0619 	add.w	r6, r4, #25
 8028954:	e7f5      	b.n	8028942 <_printf_i+0x226>
 8028956:	bf00      	nop
 8028958:	0802cc39 	.word	0x0802cc39
 802895c:	0802cc4a 	.word	0x0802cc4a

08028960 <__sflush_r>:
 8028960:	898a      	ldrh	r2, [r1, #12]
 8028962:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028966:	4605      	mov	r5, r0
 8028968:	0710      	lsls	r0, r2, #28
 802896a:	460c      	mov	r4, r1
 802896c:	d458      	bmi.n	8028a20 <__sflush_r+0xc0>
 802896e:	684b      	ldr	r3, [r1, #4]
 8028970:	2b00      	cmp	r3, #0
 8028972:	dc05      	bgt.n	8028980 <__sflush_r+0x20>
 8028974:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8028976:	2b00      	cmp	r3, #0
 8028978:	dc02      	bgt.n	8028980 <__sflush_r+0x20>
 802897a:	2000      	movs	r0, #0
 802897c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028980:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028982:	2e00      	cmp	r6, #0
 8028984:	d0f9      	beq.n	802897a <__sflush_r+0x1a>
 8028986:	2300      	movs	r3, #0
 8028988:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802898c:	682f      	ldr	r7, [r5, #0]
 802898e:	6a21      	ldr	r1, [r4, #32]
 8028990:	602b      	str	r3, [r5, #0]
 8028992:	d032      	beq.n	80289fa <__sflush_r+0x9a>
 8028994:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8028996:	89a3      	ldrh	r3, [r4, #12]
 8028998:	075a      	lsls	r2, r3, #29
 802899a:	d505      	bpl.n	80289a8 <__sflush_r+0x48>
 802899c:	6863      	ldr	r3, [r4, #4]
 802899e:	1ac0      	subs	r0, r0, r3
 80289a0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80289a2:	b10b      	cbz	r3, 80289a8 <__sflush_r+0x48>
 80289a4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80289a6:	1ac0      	subs	r0, r0, r3
 80289a8:	2300      	movs	r3, #0
 80289aa:	4602      	mov	r2, r0
 80289ac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80289ae:	6a21      	ldr	r1, [r4, #32]
 80289b0:	4628      	mov	r0, r5
 80289b2:	47b0      	blx	r6
 80289b4:	1c43      	adds	r3, r0, #1
 80289b6:	89a3      	ldrh	r3, [r4, #12]
 80289b8:	d106      	bne.n	80289c8 <__sflush_r+0x68>
 80289ba:	6829      	ldr	r1, [r5, #0]
 80289bc:	291d      	cmp	r1, #29
 80289be:	d82b      	bhi.n	8028a18 <__sflush_r+0xb8>
 80289c0:	4a29      	ldr	r2, [pc, #164]	; (8028a68 <__sflush_r+0x108>)
 80289c2:	410a      	asrs	r2, r1
 80289c4:	07d6      	lsls	r6, r2, #31
 80289c6:	d427      	bmi.n	8028a18 <__sflush_r+0xb8>
 80289c8:	2200      	movs	r2, #0
 80289ca:	6062      	str	r2, [r4, #4]
 80289cc:	04d9      	lsls	r1, r3, #19
 80289ce:	6922      	ldr	r2, [r4, #16]
 80289d0:	6022      	str	r2, [r4, #0]
 80289d2:	d504      	bpl.n	80289de <__sflush_r+0x7e>
 80289d4:	1c42      	adds	r2, r0, #1
 80289d6:	d101      	bne.n	80289dc <__sflush_r+0x7c>
 80289d8:	682b      	ldr	r3, [r5, #0]
 80289da:	b903      	cbnz	r3, 80289de <__sflush_r+0x7e>
 80289dc:	6560      	str	r0, [r4, #84]	; 0x54
 80289de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80289e0:	602f      	str	r7, [r5, #0]
 80289e2:	2900      	cmp	r1, #0
 80289e4:	d0c9      	beq.n	802897a <__sflush_r+0x1a>
 80289e6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80289ea:	4299      	cmp	r1, r3
 80289ec:	d002      	beq.n	80289f4 <__sflush_r+0x94>
 80289ee:	4628      	mov	r0, r5
 80289f0:	f7ff fc96 	bl	8028320 <_free_r>
 80289f4:	2000      	movs	r0, #0
 80289f6:	6360      	str	r0, [r4, #52]	; 0x34
 80289f8:	e7c0      	b.n	802897c <__sflush_r+0x1c>
 80289fa:	2301      	movs	r3, #1
 80289fc:	4628      	mov	r0, r5
 80289fe:	47b0      	blx	r6
 8028a00:	1c41      	adds	r1, r0, #1
 8028a02:	d1c8      	bne.n	8028996 <__sflush_r+0x36>
 8028a04:	682b      	ldr	r3, [r5, #0]
 8028a06:	2b00      	cmp	r3, #0
 8028a08:	d0c5      	beq.n	8028996 <__sflush_r+0x36>
 8028a0a:	2b1d      	cmp	r3, #29
 8028a0c:	d001      	beq.n	8028a12 <__sflush_r+0xb2>
 8028a0e:	2b16      	cmp	r3, #22
 8028a10:	d101      	bne.n	8028a16 <__sflush_r+0xb6>
 8028a12:	602f      	str	r7, [r5, #0]
 8028a14:	e7b1      	b.n	802897a <__sflush_r+0x1a>
 8028a16:	89a3      	ldrh	r3, [r4, #12]
 8028a18:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028a1c:	81a3      	strh	r3, [r4, #12]
 8028a1e:	e7ad      	b.n	802897c <__sflush_r+0x1c>
 8028a20:	690f      	ldr	r7, [r1, #16]
 8028a22:	2f00      	cmp	r7, #0
 8028a24:	d0a9      	beq.n	802897a <__sflush_r+0x1a>
 8028a26:	0793      	lsls	r3, r2, #30
 8028a28:	680e      	ldr	r6, [r1, #0]
 8028a2a:	bf08      	it	eq
 8028a2c:	694b      	ldreq	r3, [r1, #20]
 8028a2e:	600f      	str	r7, [r1, #0]
 8028a30:	bf18      	it	ne
 8028a32:	2300      	movne	r3, #0
 8028a34:	eba6 0807 	sub.w	r8, r6, r7
 8028a38:	608b      	str	r3, [r1, #8]
 8028a3a:	f1b8 0f00 	cmp.w	r8, #0
 8028a3e:	dd9c      	ble.n	802897a <__sflush_r+0x1a>
 8028a40:	6a21      	ldr	r1, [r4, #32]
 8028a42:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8028a44:	4643      	mov	r3, r8
 8028a46:	463a      	mov	r2, r7
 8028a48:	4628      	mov	r0, r5
 8028a4a:	47b0      	blx	r6
 8028a4c:	2800      	cmp	r0, #0
 8028a4e:	dc06      	bgt.n	8028a5e <__sflush_r+0xfe>
 8028a50:	89a3      	ldrh	r3, [r4, #12]
 8028a52:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028a56:	81a3      	strh	r3, [r4, #12]
 8028a58:	f04f 30ff 	mov.w	r0, #4294967295
 8028a5c:	e78e      	b.n	802897c <__sflush_r+0x1c>
 8028a5e:	4407      	add	r7, r0
 8028a60:	eba8 0800 	sub.w	r8, r8, r0
 8028a64:	e7e9      	b.n	8028a3a <__sflush_r+0xda>
 8028a66:	bf00      	nop
 8028a68:	dfbffffe 	.word	0xdfbffffe

08028a6c <_fflush_r>:
 8028a6c:	b538      	push	{r3, r4, r5, lr}
 8028a6e:	690b      	ldr	r3, [r1, #16]
 8028a70:	4605      	mov	r5, r0
 8028a72:	460c      	mov	r4, r1
 8028a74:	b913      	cbnz	r3, 8028a7c <_fflush_r+0x10>
 8028a76:	2500      	movs	r5, #0
 8028a78:	4628      	mov	r0, r5
 8028a7a:	bd38      	pop	{r3, r4, r5, pc}
 8028a7c:	b118      	cbz	r0, 8028a86 <_fflush_r+0x1a>
 8028a7e:	6a03      	ldr	r3, [r0, #32]
 8028a80:	b90b      	cbnz	r3, 8028a86 <_fflush_r+0x1a>
 8028a82:	f7ff fa2f 	bl	8027ee4 <__sinit>
 8028a86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028a8a:	2b00      	cmp	r3, #0
 8028a8c:	d0f3      	beq.n	8028a76 <_fflush_r+0xa>
 8028a8e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8028a90:	07d0      	lsls	r0, r2, #31
 8028a92:	d404      	bmi.n	8028a9e <_fflush_r+0x32>
 8028a94:	0599      	lsls	r1, r3, #22
 8028a96:	d402      	bmi.n	8028a9e <_fflush_r+0x32>
 8028a98:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028a9a:	f7ff fbd2 	bl	8028242 <__retarget_lock_acquire_recursive>
 8028a9e:	4628      	mov	r0, r5
 8028aa0:	4621      	mov	r1, r4
 8028aa2:	f7ff ff5d 	bl	8028960 <__sflush_r>
 8028aa6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028aa8:	07da      	lsls	r2, r3, #31
 8028aaa:	4605      	mov	r5, r0
 8028aac:	d4e4      	bmi.n	8028a78 <_fflush_r+0xc>
 8028aae:	89a3      	ldrh	r3, [r4, #12]
 8028ab0:	059b      	lsls	r3, r3, #22
 8028ab2:	d4e1      	bmi.n	8028a78 <_fflush_r+0xc>
 8028ab4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028ab6:	f7ff fbc5 	bl	8028244 <__retarget_lock_release_recursive>
 8028aba:	e7dd      	b.n	8028a78 <_fflush_r+0xc>

08028abc <__swbuf_r>:
 8028abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028abe:	460e      	mov	r6, r1
 8028ac0:	4614      	mov	r4, r2
 8028ac2:	4605      	mov	r5, r0
 8028ac4:	b118      	cbz	r0, 8028ace <__swbuf_r+0x12>
 8028ac6:	6a03      	ldr	r3, [r0, #32]
 8028ac8:	b90b      	cbnz	r3, 8028ace <__swbuf_r+0x12>
 8028aca:	f7ff fa0b 	bl	8027ee4 <__sinit>
 8028ace:	69a3      	ldr	r3, [r4, #24]
 8028ad0:	60a3      	str	r3, [r4, #8]
 8028ad2:	89a3      	ldrh	r3, [r4, #12]
 8028ad4:	071a      	lsls	r2, r3, #28
 8028ad6:	d525      	bpl.n	8028b24 <__swbuf_r+0x68>
 8028ad8:	6923      	ldr	r3, [r4, #16]
 8028ada:	b31b      	cbz	r3, 8028b24 <__swbuf_r+0x68>
 8028adc:	6823      	ldr	r3, [r4, #0]
 8028ade:	6922      	ldr	r2, [r4, #16]
 8028ae0:	1a98      	subs	r0, r3, r2
 8028ae2:	6963      	ldr	r3, [r4, #20]
 8028ae4:	b2f6      	uxtb	r6, r6
 8028ae6:	4283      	cmp	r3, r0
 8028ae8:	4637      	mov	r7, r6
 8028aea:	dc04      	bgt.n	8028af6 <__swbuf_r+0x3a>
 8028aec:	4621      	mov	r1, r4
 8028aee:	4628      	mov	r0, r5
 8028af0:	f7ff ffbc 	bl	8028a6c <_fflush_r>
 8028af4:	b9e0      	cbnz	r0, 8028b30 <__swbuf_r+0x74>
 8028af6:	68a3      	ldr	r3, [r4, #8]
 8028af8:	3b01      	subs	r3, #1
 8028afa:	60a3      	str	r3, [r4, #8]
 8028afc:	6823      	ldr	r3, [r4, #0]
 8028afe:	1c5a      	adds	r2, r3, #1
 8028b00:	6022      	str	r2, [r4, #0]
 8028b02:	701e      	strb	r6, [r3, #0]
 8028b04:	6962      	ldr	r2, [r4, #20]
 8028b06:	1c43      	adds	r3, r0, #1
 8028b08:	429a      	cmp	r2, r3
 8028b0a:	d004      	beq.n	8028b16 <__swbuf_r+0x5a>
 8028b0c:	89a3      	ldrh	r3, [r4, #12]
 8028b0e:	07db      	lsls	r3, r3, #31
 8028b10:	d506      	bpl.n	8028b20 <__swbuf_r+0x64>
 8028b12:	2e0a      	cmp	r6, #10
 8028b14:	d104      	bne.n	8028b20 <__swbuf_r+0x64>
 8028b16:	4621      	mov	r1, r4
 8028b18:	4628      	mov	r0, r5
 8028b1a:	f7ff ffa7 	bl	8028a6c <_fflush_r>
 8028b1e:	b938      	cbnz	r0, 8028b30 <__swbuf_r+0x74>
 8028b20:	4638      	mov	r0, r7
 8028b22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028b24:	4621      	mov	r1, r4
 8028b26:	4628      	mov	r0, r5
 8028b28:	f000 f806 	bl	8028b38 <__swsetup_r>
 8028b2c:	2800      	cmp	r0, #0
 8028b2e:	d0d5      	beq.n	8028adc <__swbuf_r+0x20>
 8028b30:	f04f 37ff 	mov.w	r7, #4294967295
 8028b34:	e7f4      	b.n	8028b20 <__swbuf_r+0x64>
	...

08028b38 <__swsetup_r>:
 8028b38:	b538      	push	{r3, r4, r5, lr}
 8028b3a:	4b2a      	ldr	r3, [pc, #168]	; (8028be4 <__swsetup_r+0xac>)
 8028b3c:	4605      	mov	r5, r0
 8028b3e:	6818      	ldr	r0, [r3, #0]
 8028b40:	460c      	mov	r4, r1
 8028b42:	b118      	cbz	r0, 8028b4c <__swsetup_r+0x14>
 8028b44:	6a03      	ldr	r3, [r0, #32]
 8028b46:	b90b      	cbnz	r3, 8028b4c <__swsetup_r+0x14>
 8028b48:	f7ff f9cc 	bl	8027ee4 <__sinit>
 8028b4c:	89a3      	ldrh	r3, [r4, #12]
 8028b4e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028b52:	0718      	lsls	r0, r3, #28
 8028b54:	d422      	bmi.n	8028b9c <__swsetup_r+0x64>
 8028b56:	06d9      	lsls	r1, r3, #27
 8028b58:	d407      	bmi.n	8028b6a <__swsetup_r+0x32>
 8028b5a:	2309      	movs	r3, #9
 8028b5c:	602b      	str	r3, [r5, #0]
 8028b5e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8028b62:	81a3      	strh	r3, [r4, #12]
 8028b64:	f04f 30ff 	mov.w	r0, #4294967295
 8028b68:	e034      	b.n	8028bd4 <__swsetup_r+0x9c>
 8028b6a:	0758      	lsls	r0, r3, #29
 8028b6c:	d512      	bpl.n	8028b94 <__swsetup_r+0x5c>
 8028b6e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028b70:	b141      	cbz	r1, 8028b84 <__swsetup_r+0x4c>
 8028b72:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028b76:	4299      	cmp	r1, r3
 8028b78:	d002      	beq.n	8028b80 <__swsetup_r+0x48>
 8028b7a:	4628      	mov	r0, r5
 8028b7c:	f7ff fbd0 	bl	8028320 <_free_r>
 8028b80:	2300      	movs	r3, #0
 8028b82:	6363      	str	r3, [r4, #52]	; 0x34
 8028b84:	89a3      	ldrh	r3, [r4, #12]
 8028b86:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8028b8a:	81a3      	strh	r3, [r4, #12]
 8028b8c:	2300      	movs	r3, #0
 8028b8e:	6063      	str	r3, [r4, #4]
 8028b90:	6923      	ldr	r3, [r4, #16]
 8028b92:	6023      	str	r3, [r4, #0]
 8028b94:	89a3      	ldrh	r3, [r4, #12]
 8028b96:	f043 0308 	orr.w	r3, r3, #8
 8028b9a:	81a3      	strh	r3, [r4, #12]
 8028b9c:	6923      	ldr	r3, [r4, #16]
 8028b9e:	b94b      	cbnz	r3, 8028bb4 <__swsetup_r+0x7c>
 8028ba0:	89a3      	ldrh	r3, [r4, #12]
 8028ba2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8028ba6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028baa:	d003      	beq.n	8028bb4 <__swsetup_r+0x7c>
 8028bac:	4621      	mov	r1, r4
 8028bae:	4628      	mov	r0, r5
 8028bb0:	f000 f840 	bl	8028c34 <__smakebuf_r>
 8028bb4:	89a0      	ldrh	r0, [r4, #12]
 8028bb6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028bba:	f010 0301 	ands.w	r3, r0, #1
 8028bbe:	d00a      	beq.n	8028bd6 <__swsetup_r+0x9e>
 8028bc0:	2300      	movs	r3, #0
 8028bc2:	60a3      	str	r3, [r4, #8]
 8028bc4:	6963      	ldr	r3, [r4, #20]
 8028bc6:	425b      	negs	r3, r3
 8028bc8:	61a3      	str	r3, [r4, #24]
 8028bca:	6923      	ldr	r3, [r4, #16]
 8028bcc:	b943      	cbnz	r3, 8028be0 <__swsetup_r+0xa8>
 8028bce:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8028bd2:	d1c4      	bne.n	8028b5e <__swsetup_r+0x26>
 8028bd4:	bd38      	pop	{r3, r4, r5, pc}
 8028bd6:	0781      	lsls	r1, r0, #30
 8028bd8:	bf58      	it	pl
 8028bda:	6963      	ldrpl	r3, [r4, #20]
 8028bdc:	60a3      	str	r3, [r4, #8]
 8028bde:	e7f4      	b.n	8028bca <__swsetup_r+0x92>
 8028be0:	2000      	movs	r0, #0
 8028be2:	e7f7      	b.n	8028bd4 <__swsetup_r+0x9c>
 8028be4:	20000160 	.word	0x20000160

08028be8 <__swhatbuf_r>:
 8028be8:	b570      	push	{r4, r5, r6, lr}
 8028bea:	460c      	mov	r4, r1
 8028bec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028bf0:	2900      	cmp	r1, #0
 8028bf2:	b096      	sub	sp, #88	; 0x58
 8028bf4:	4615      	mov	r5, r2
 8028bf6:	461e      	mov	r6, r3
 8028bf8:	da0d      	bge.n	8028c16 <__swhatbuf_r+0x2e>
 8028bfa:	89a3      	ldrh	r3, [r4, #12]
 8028bfc:	f013 0f80 	tst.w	r3, #128	; 0x80
 8028c00:	f04f 0100 	mov.w	r1, #0
 8028c04:	bf0c      	ite	eq
 8028c06:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8028c0a:	2340      	movne	r3, #64	; 0x40
 8028c0c:	2000      	movs	r0, #0
 8028c0e:	6031      	str	r1, [r6, #0]
 8028c10:	602b      	str	r3, [r5, #0]
 8028c12:	b016      	add	sp, #88	; 0x58
 8028c14:	bd70      	pop	{r4, r5, r6, pc}
 8028c16:	466a      	mov	r2, sp
 8028c18:	f000 f848 	bl	8028cac <_fstat_r>
 8028c1c:	2800      	cmp	r0, #0
 8028c1e:	dbec      	blt.n	8028bfa <__swhatbuf_r+0x12>
 8028c20:	9901      	ldr	r1, [sp, #4]
 8028c22:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8028c26:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8028c2a:	4259      	negs	r1, r3
 8028c2c:	4159      	adcs	r1, r3
 8028c2e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8028c32:	e7eb      	b.n	8028c0c <__swhatbuf_r+0x24>

08028c34 <__smakebuf_r>:
 8028c34:	898b      	ldrh	r3, [r1, #12]
 8028c36:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8028c38:	079d      	lsls	r5, r3, #30
 8028c3a:	4606      	mov	r6, r0
 8028c3c:	460c      	mov	r4, r1
 8028c3e:	d507      	bpl.n	8028c50 <__smakebuf_r+0x1c>
 8028c40:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8028c44:	6023      	str	r3, [r4, #0]
 8028c46:	6123      	str	r3, [r4, #16]
 8028c48:	2301      	movs	r3, #1
 8028c4a:	6163      	str	r3, [r4, #20]
 8028c4c:	b002      	add	sp, #8
 8028c4e:	bd70      	pop	{r4, r5, r6, pc}
 8028c50:	ab01      	add	r3, sp, #4
 8028c52:	466a      	mov	r2, sp
 8028c54:	f7ff ffc8 	bl	8028be8 <__swhatbuf_r>
 8028c58:	9900      	ldr	r1, [sp, #0]
 8028c5a:	4605      	mov	r5, r0
 8028c5c:	4630      	mov	r0, r6
 8028c5e:	f7ff f81b 	bl	8027c98 <_malloc_r>
 8028c62:	b948      	cbnz	r0, 8028c78 <__smakebuf_r+0x44>
 8028c64:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028c68:	059a      	lsls	r2, r3, #22
 8028c6a:	d4ef      	bmi.n	8028c4c <__smakebuf_r+0x18>
 8028c6c:	f023 0303 	bic.w	r3, r3, #3
 8028c70:	f043 0302 	orr.w	r3, r3, #2
 8028c74:	81a3      	strh	r3, [r4, #12]
 8028c76:	e7e3      	b.n	8028c40 <__smakebuf_r+0xc>
 8028c78:	89a3      	ldrh	r3, [r4, #12]
 8028c7a:	6020      	str	r0, [r4, #0]
 8028c7c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8028c80:	81a3      	strh	r3, [r4, #12]
 8028c82:	9b00      	ldr	r3, [sp, #0]
 8028c84:	6163      	str	r3, [r4, #20]
 8028c86:	9b01      	ldr	r3, [sp, #4]
 8028c88:	6120      	str	r0, [r4, #16]
 8028c8a:	b15b      	cbz	r3, 8028ca4 <__smakebuf_r+0x70>
 8028c8c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8028c90:	4630      	mov	r0, r6
 8028c92:	f000 f81d 	bl	8028cd0 <_isatty_r>
 8028c96:	b128      	cbz	r0, 8028ca4 <__smakebuf_r+0x70>
 8028c98:	89a3      	ldrh	r3, [r4, #12]
 8028c9a:	f023 0303 	bic.w	r3, r3, #3
 8028c9e:	f043 0301 	orr.w	r3, r3, #1
 8028ca2:	81a3      	strh	r3, [r4, #12]
 8028ca4:	89a3      	ldrh	r3, [r4, #12]
 8028ca6:	431d      	orrs	r5, r3
 8028ca8:	81a5      	strh	r5, [r4, #12]
 8028caa:	e7cf      	b.n	8028c4c <__smakebuf_r+0x18>

08028cac <_fstat_r>:
 8028cac:	b538      	push	{r3, r4, r5, lr}
 8028cae:	4d07      	ldr	r5, [pc, #28]	; (8028ccc <_fstat_r+0x20>)
 8028cb0:	2300      	movs	r3, #0
 8028cb2:	4604      	mov	r4, r0
 8028cb4:	4608      	mov	r0, r1
 8028cb6:	4611      	mov	r1, r2
 8028cb8:	602b      	str	r3, [r5, #0]
 8028cba:	f7d9 fa91 	bl	80021e0 <_fstat>
 8028cbe:	1c43      	adds	r3, r0, #1
 8028cc0:	d102      	bne.n	8028cc8 <_fstat_r+0x1c>
 8028cc2:	682b      	ldr	r3, [r5, #0]
 8028cc4:	b103      	cbz	r3, 8028cc8 <_fstat_r+0x1c>
 8028cc6:	6023      	str	r3, [r4, #0]
 8028cc8:	bd38      	pop	{r3, r4, r5, pc}
 8028cca:	bf00      	nop
 8028ccc:	20014254 	.word	0x20014254

08028cd0 <_isatty_r>:
 8028cd0:	b538      	push	{r3, r4, r5, lr}
 8028cd2:	4d06      	ldr	r5, [pc, #24]	; (8028cec <_isatty_r+0x1c>)
 8028cd4:	2300      	movs	r3, #0
 8028cd6:	4604      	mov	r4, r0
 8028cd8:	4608      	mov	r0, r1
 8028cda:	602b      	str	r3, [r5, #0]
 8028cdc:	f7d9 fa86 	bl	80021ec <_isatty>
 8028ce0:	1c43      	adds	r3, r0, #1
 8028ce2:	d102      	bne.n	8028cea <_isatty_r+0x1a>
 8028ce4:	682b      	ldr	r3, [r5, #0]
 8028ce6:	b103      	cbz	r3, 8028cea <_isatty_r+0x1a>
 8028ce8:	6023      	str	r3, [r4, #0]
 8028cea:	bd38      	pop	{r3, r4, r5, pc}
 8028cec:	20014254 	.word	0x20014254

08028cf0 <_init>:
 8028cf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028cf2:	bf00      	nop
 8028cf4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028cf6:	bc08      	pop	{r3}
 8028cf8:	469e      	mov	lr, r3
 8028cfa:	4770      	bx	lr

08028cfc <_fini>:
 8028cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028cfe:	bf00      	nop
 8028d00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028d02:	bc08      	pop	{r3}
 8028d04:	469e      	mov	lr, r3
 8028d06:	4770      	bx	lr
